{"bugs": {"691000": {"comments": [{"attachment_id": 563930, "raw_text": "This is a rendering issue that presents itself under Windows 7, but not under Windows XP.\n\nBasically, a <pre/> block with overflow:auto; is not displaying the scroll bars as expected when the text content overflows - when combined with some font-size settings.  This causes information to appear missing - sometimes omitting critical information from the viewing user.\n\nA minimal test case is attached, which includes the following CSS:\n\npre{overflow:auto;}\n.wiki-content{font-size:10pt;}\n.panelContent{font-size:.95em;}\n\nWhen viewed, if the complete \"-S\" argument is not viewable on the screen, scroll bars should be visible to scroll and view the complete content of the <pre/> element.\n\nWhen there is an element that matches \"div.wiki-content div.panelContent pre\" with text that overflows, the scroll bars are not displayed as expected.  However, the hidden text can still be viewed by causing it to scroll into view by doing a moving select on the text with the mouse, or by using the arrow keys.\n\nUsing Firebug, disabling the font-size attribute within the panelContent CSS class causes the scroll bars to immediately appear.  Interestingly, re-enabling the attribute does not cause the scroll bars to disappear again.  Removing the attribute from the code entirely causes the scroll bars to appear as expected on page load, while any font size < 1em seems to continue the issue.\n\nRemoving the font-size attribute from the wiki-content CSS class instead causes results that I haven't been able to reproduce consistently yet.  In some cases, it seems to cause the scroll bars to appear on the containing window, instead of on the <pre/>.  In other cases, the scroll bars don't appear at all.\n\nI have reproduced this on several computers running Windows 7 (both x64, SP1): Any version of Firefox tested - including 3.6 to 7.0.1 demonstrates the issue. IE and Chrome on the same systems show the scroll bars as expected.\n\nI have not been able to reproduce this under Windows XP - including Firefox 3.6 and 7.0.\n\nSee also: https://jira.atlassian.com/browse/CONF-23356 .  (This was originally found against the Atlassian Confluence Wiki product, version 3.5.13.)", "bug_id": 691000, "text": "Created attachment 563930\nMinimal HTML test case.\n\nThis is a rendering issue that presents itself under Windows 7, but not under Windows XP.\n\nBasically, a <pre/> block with overflow:auto; is not displaying the scroll bars as expected when the text content overflows - when combined with some font-size settings.  This causes information to appear missing - sometimes omitting critical information from the viewing user.\n\nA minimal test case is attached, which includes the following CSS:\n\npre{overflow:auto;}\n.wiki-content{font-size:10pt;}\n.panelContent{font-size:.95em;}\n\nWhen viewed, if the complete \"-S\" argument is not viewable on the screen, scroll bars should be visible to scroll and view the complete content of the <pre/> element.\n\nWhen there is an element that matches \"div.wiki-content div.panelContent pre\" with text that overflows, the scroll bars are not displayed as expected.  However, the hidden text can still be viewed by causing it to scroll into view by doing a moving select on the text with the mouse, or by using the arrow keys.\n\nUsing Firebug, disabling the font-size attribute within the panelContent CSS class causes the scroll bars to immediately appear.  Interestingly, re-enabling the attribute does not cause the scroll bars to disappear again.  Removing the attribute from the code entirely causes the scroll bars to appear as expected on page load, while any font size < 1em seems to continue the issue.\n\nRemoving the font-size attribute from the wiki-content CSS class instead causes results that I haven't been able to reproduce consistently yet.  In some cases, it seems to cause the scroll bars to appear on the containing window, instead of on the <pre/>.  In other cases, the scroll bars don't appear at all.\n\nI have reproduced this on several computers running Windows 7 (both x64, SP1): Any version of Firefox tested - including 3.6 to 7.0.1 demonstrates the issue. IE and Chrome on the same systems show the scroll bars as expected.\n\nI have not been able to reproduce this under Windows XP - including Firefox 3.6 and 7.0.\n\nSee also: https://jira.atlassian.com/browse/CONF-23356 .  (This was originally found against the Atlassian Confluence Wiki product, version 3.5.13.)", "tags": [], "count": 0, "id": 5751451, "is_private": false, "time": "2011-10-01T04:26:48Z", "creation_time": "2011-10-01T04:26:48Z", "creator": "bugs@mark.ziesemer.com", "author": "bugs@mark.ziesemer.com"}, {"is_private": false, "id": 5751470, "count": 1, "author": "alice0775@gmail.com", "creator": "alice0775@gmail.com", "time": "2011-10-01T04:51:46Z", "creation_time": "2011-10-01T04:51:46Z", "raw_text": "Confirmend on  Firfox4.0 to Nightly9.0a1 with HWA on.\nhttp://hg.mozilla.org/mozilla-central/rev/b5b082d183d0\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:10.0a1) Gecko/20110930 Firefox/10.0a1 ID:20110930030850\n\nThis does not happen without HWA.", "attachment_id": null, "tags": [], "text": "Confirmend on  Firfox4.0 to Nightly9.0a1 with HWA on.\nhttp://hg.mozilla.org/mozilla-central/rev/b5b082d183d0\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:10.0a1) Gecko/20110930 Firefox/10.0a1 ID:20110930030850\n\nThis does not happen without HWA.", "bug_id": 691000}, {"author": "alice0775@gmail.com", "creator": "alice0775@gmail.com", "creation_time": "2011-10-01T05:10:13Z", "time": "2011-10-01T05:10:13Z", "is_private": false, "count": 2, "id": 5751481, "text": "regression range with force enabled Diorect2D and DirectWrite.\n\nRegression window,\nWorks:\nhttp://hg.mozilla.org/mozilla-central/rev/575fe0710b22\nMozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.3a2pre) Gecko/20100225 Minefield/3.7a2pre ID:20100225132211\nFails:\nhttp://hg.mozilla.org/mozilla-central/rev/0e1c0b71bf13\nMozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.3a2pre) Gecko/20100225 Minefield/3.7a2pre ID:20100225230231\nPushlog:\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=575fe0710b22&tochange=0e1c0b71bf13\nTriggered by:\n0e1c0b71bf13\tBas Schouten \u2014 Bug 527707: Add Direct2D and DirectWrite backend integration to thebes and widget. Preffed off by default r=jrmuizel r=jmathies r=jfkthame", "bug_id": 691000, "tags": [], "raw_text": "regression range with force enabled Diorect2D and DirectWrite.\n\nRegression window,\nWorks:\nhttp://hg.mozilla.org/mozilla-central/rev/575fe0710b22\nMozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.3a2pre) Gecko/20100225 Minefield/3.7a2pre ID:20100225132211\nFails:\nhttp://hg.mozilla.org/mozilla-central/rev/0e1c0b71bf13\nMozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.3a2pre) Gecko/20100225 Minefield/3.7a2pre ID:20100225230231\nPushlog:\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=575fe0710b22&tochange=0e1c0b71bf13\nTriggered by:\n0e1c0b71bf13\tBas Schouten \u2014 Bug 527707: Add Direct2D and DirectWrite backend integration to thebes and widget. Preffed off by default r=jrmuizel r=jmathies r=jfkthame", "attachment_id": null}, {"count": 3, "id": 5751581, "is_private": false, "creation_time": "2011-10-01T08:24:30Z", "time": "2011-10-01T08:24:30Z", "creator": "the.decryptor@gmail.com", "author": "the.decryptor@gmail.com", "attachment_id": null, "raw_text": "I see the same problem on OS X (Lion + 10.0a1 Nightly), so it's not just a Windows 7 issue.", "tags": [], "bug_id": 691000, "text": "I see the same problem on OS X (Lion + 10.0a1 Nightly), so it's not just a Windows 7 issue."}, {"bug_id": 691000, "text": "This is pretty bad. Jonathan, can you look into it?", "tags": [], "attachment_id": null, "raw_text": "This is pretty bad. Jonathan, can you look into it?", "creation_time": "2011-10-01T09:11:21Z", "time": "2011-10-01T09:11:21Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "id": 5751622, "count": 4, "is_private": false}, {"attachment_id": 564149, "raw_text": "On OS X (10.6, running a Nightly build) I can reproduce the problem with a further-simplified testcase, as attached. No <div>s or font-size properties needed.\n\nWhen I initially load this on OS X, the expected scroll bar is missing. Zooming in makes it appear, and zooming back out retains it (as described above). Zooming out far enough that all the text is visible makes it disappear again (as expected), but then zooming back in does not restore it until reaching a greater-than-100% zoom level.", "tags": [], "text": "Created attachment 564149\nreduced testcase showing the bug on Mac OS X\n\nOn OS X (10.6, running a Nightly build) I can reproduce the problem with a further-simplified testcase, as attached. No <div>s or font-size properties needed.\n\nWhen I initially load this on OS X, the expected scroll bar is missing. Zooming in makes it appear, and zooming back out retains it (as described above). Zooming out far enough that all the text is visible makes it disappear again (as expected), but then zooming back in does not restore it until reaching a greater-than-100% zoom level.", "bug_id": 691000, "id": 5753675, "count": 5, "is_private": false, "time": "2011-10-03T09:45:43Z", "creation_time": "2011-10-03T09:45:43Z", "creator": "jfkthame@gmail.com", "author": "jfkthame@gmail.com"}, {"bug_id": 691000, "text": "On Win7, I can reproduce with HWacc both on and off (unlike Alice in comment 1).", "tags": [], "attachment_id": null, "raw_text": "On Win7, I can reproduce with HWacc both on and off (unlike Alice in comment 1).", "creator": "jfkthame@gmail.com", "time": "2011-10-03T09:50:21Z", "creation_time": "2011-10-03T09:50:21Z", "author": "jfkthame@gmail.com", "is_private": false, "count": 6, "id": 5753678}, {"tags": [], "bug_id": 691000, "text": "Removing \"regression\" keyword, as this issue has existed since (at least) FF3.6, per comment 0; also reproduced locally with FF3.6 on OS X and on Linux.", "raw_text": "Removing \"regression\" keyword, as this issue has existed since (at least) FF3.6, per comment 0; also reproduced locally with FF3.6 on OS X and on Linux.", "attachment_id": null, "author": "jfkthame@gmail.com", "creation_time": "2011-10-03T10:37:07Z", "time": "2011-10-03T10:37:07Z", "creator": "jfkthame@gmail.com", "count": 7, "id": 5753709, "is_private": false}, {"is_private": false, "id": 5753729, "count": 8, "creator": "alice0775@gmail.com", "creation_time": "2011-10-03T11:18:52Z", "time": "2011-10-03T11:18:52Z", "author": "alice0775@gmail.com", "attachment_id": null, "raw_text": "(In reply to Jonathan Kew (:jfkthame) from comment #6)\n> On Win7, I can reproduce with HWacc both on and off (unlike Alice in comment\n> 1).\n\nYes.\nIt only happens with HWacc on if  Windows 7 Visual style is \"Classic\".\nIt happens with HWacc both on and off if Windows 7 Visual style is \"Aero\" and \"AeroBasic\".", "tags": [], "bug_id": 691000, "text": "(In reply to Jonathan Kew (:jfkthame) from comment #6)\n> On Win7, I can reproduce with HWacc both on and off (unlike Alice in comment\n> 1).\n\nYes.\nIt only happens with HWacc on if  Windows 7 Visual style is \"Classic\".\nIt happens with HWacc both on and off if Windows 7 Visual style is \"Aero\" and \"AeroBasic\"."}, {"raw_text": "I found strange behavior.\n\nThe scroll bar appears, if  minimum font size set to larger than 14(windows7), 15(ubuntu) in preferences.", "attachment_id": null, "text": "I found strange behavior.\n\nThe scroll bar appears, if  minimum font size set to larger than 14(windows7), 15(ubuntu) in preferences.", "bug_id": 691000, "tags": [], "id": 5753845, "count": 9, "is_private": false, "author": "alice0775@gmail.com", "time": "2011-10-03T12:59:30Z", "creation_time": "2011-10-03T12:59:30Z", "creator": "alice0775@gmail.com"}, {"text": "Regression window Windows XP Luna (this does not happen on XP Classc) without HWA :\nWorks:\nMozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8b2) Gecko/20050428 Firefox/1.0+\nFails:\nMozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8b2) Gecko/20050429 Firefox/1.0+\nPushlog:\nhttp://bonsai.mozilla.org/cvsquery.cgi?treeid=default&module=all&branch=HEAD&branchtype=match&dir=&file=&filetype=match&who=&whotype=match&sortby=Date&hours=2&date=explicit&mindate=2005-04-28+01%3A00%3A00&maxdate=2005-04-29+03%3A00%3A00&cvsroot=%2Fcvsroot", "bug_id": 691000, "tags": [], "raw_text": "Regression window Windows XP Luna (this does not happen on XP Classc) without HWA :\nWorks:\nMozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8b2) Gecko/20050428 Firefox/1.0+\nFails:\nMozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8b2) Gecko/20050429 Firefox/1.0+\nPushlog:\nhttp://bonsai.mozilla.org/cvsquery.cgi?treeid=default&module=all&branch=HEAD&branchtype=match&dir=&file=&filetype=match&who=&whotype=match&sortby=Date&hours=2&date=explicit&mindate=2005-04-28+01%3A00%3A00&maxdate=2005-04-29+03%3A00%3A00&cvsroot=%2Fcvsroot", "attachment_id": null, "author": "alice0775@gmail.com", "creator": "alice0775@gmail.com", "time": "2011-10-03T14:31:19Z", "creation_time": "2011-10-03T14:31:19Z", "is_private": false, "id": 5753991, "count": 10}, {"author": "jfkthame@gmail.com", "time": "2011-10-03T16:35:50Z", "creation_time": "2011-10-03T16:35:50Z", "creator": "jfkthame@gmail.com", "count": 11, "id": 5754320, "is_private": false, "tags": [], "bug_id": 691000, "text": "Created attachment 564219\ntestcase demonstrating the dependency on height of scrollable area\n\nThe problem arises if the height of the potentially-scrollable area is less than the height of a horizontal scrollbar on the platform.\n\nThis testcase has two <div>s that should both be horizontally scrollable, but the one with height:10px will not display its scrollbar, while the one with height:20px will display it as expected.\n\nZooming in will enlarge the <div>s but not change the default metrics of scrollbars, and so this will eventually cause the scrollbar to appear even on the <div> with the smaller height. Once the scrollbar is visible, this state persists because nsHTMLScrollFrame prefers to avoid changing the visibility of its scrollbars when reflowing.", "raw_text": "The problem arises if the height of the potentially-scrollable area is less than the height of a horizontal scrollbar on the platform.\n\nThis testcase has two <div>s that should both be horizontally scrollable, but the one with height:10px will not display its scrollbar, while the one with height:20px will display it as expected.\n\nZooming in will enlarge the <div>s but not change the default metrics of scrollbars, and so this will eventually cause the scrollbar to appear even on the <div> with the smaller height. Once the scrollbar is visible, this state persists because nsHTMLScrollFrame prefers to avoid changing the visibility of its scrollbars when reflowing.", "attachment_id": 564219}, {"count": 12, "id": 5755358, "is_private": false, "author": "jfkthame@gmail.com", "creation_time": "2011-10-03T21:18:47Z", "time": "2011-10-03T21:18:47Z", "creator": "jfkthame@gmail.com", "raw_text": "So this seems to fix the problem, by eliminating the requirement that the scrollable element is at least as high as the scrollbar - that looks as though it was intended for cases where the scrollbar appears _within_ the bounds of the element being scrolled, but in the testcases here, at least, it's being placed _outside_ and so there's no reason to suppress it for narrow elements.\n\nRoc, will this upset assumptions that are being elsewhere if we just remove this test? It passes all unit tests on try, so I guess either it's OK, or else we don't have an appropriate test to detect what it'll break!\n\n(We should also be able to have a reftest for this, based on the above testcases.)", "attachment_id": 564327, "text": "Created attachment 564327\npatch, don't suppress horizontal scrollbar below element with very small height\n\nSo this seems to fix the problem, by eliminating the requirement that the scrollable element is at least as high as the scrollbar - that looks as though it was intended for cases where the scrollbar appears _within_ the bounds of the element being scrolled, but in the testcases here, at least, it's being placed _outside_ and so there's no reason to suppress it for narrow elements.\n\nRoc, will this upset assumptions that are being elsewhere if we just remove this test? It passes all unit tests on try, so I guess either it's OK, or else we don't have an appropriate test to detect what it'll break!\n\n(We should also be able to have a reftest for this, based on the above testcases.)", "bug_id": 691000, "tags": []}, {"tags": [], "bug_id": 691000, "text": "I think this will break cases where the height of the scrollable element is not auto. When the element height is less than the height of the horizontal scrollbar, things will go wrong.", "attachment_id": null, "raw_text": "I think this will break cases where the height of the scrollable element is not auto. When the element height is less than the height of the horizontal scrollbar, things will go wrong.", "creator": "roc@ocallahan.org", "creation_time": "2011-10-03T21:34:29Z", "time": "2011-10-03T21:34:29Z", "author": "roc@ocallahan.org", "is_private": false, "count": 13, "id": 5755405}, {"raw_text": "Note that the horizontal scrollbar is always inside the border. It just so happens that these testcases are height:auto so the border-box expands to include the scrollbar.", "attachment_id": null, "tags": [], "bug_id": 691000, "text": "Note that the horizontal scrollbar is always inside the border. It just so happens that these testcases are height:auto so the border-box expands to include the scrollbar.", "is_private": false, "id": 5755418, "count": 14, "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "creation_time": "2011-10-03T21:37:29Z", "time": "2011-10-03T21:37:29Z"}, {"author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "creation_time": "2011-10-03T21:40:42Z", "time": "2011-10-03T21:40:42Z", "is_private": false, "count": 15, "id": 5755429, "bug_id": 691000, "text": "The code does have\n  desiredInsideBorderSize.height = hScrollbarDesiredHeight +\n    NS_MAX(aKidMetrics->height, vScrollbarMinHeight);\nso I would expect aState->mInsideBorderSize to include the height of the horizontal scrollbar, and therefore aState->mInsideBorderSize.height > hScrollbarMinSize.height.\n\nIs it possible that hScrollbarDesiredHeight < hScrollbarMinSize.height?", "tags": [], "raw_text": "The code does have\n  desiredInsideBorderSize.height = hScrollbarDesiredHeight +\n    NS_MAX(aKidMetrics->height, vScrollbarMinHeight);\nso I would expect aState->mInsideBorderSize to include the height of the horizontal scrollbar, and therefore aState->mInsideBorderSize.height > hScrollbarMinSize.height.\n\nIs it possible that hScrollbarDesiredHeight < hScrollbarMinSize.height?", "attachment_id": null}, {"tags": [], "bug_id": 691000, "text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #15)\n> The code does have\n>   desiredInsideBorderSize.height = hScrollbarDesiredHeight +\n>     NS_MAX(aKidMetrics->height, vScrollbarMinHeight);\n> so I would expect aState->mInsideBorderSize to include the height of the\n> horizontal scrollbar, and therefore aState->mInsideBorderSize.height >\n> hScrollbarMinSize.height.\n> \n> Is it possible that hScrollbarDesiredHeight < hScrollbarMinSize.height?\n\nYes, certainly - TryLayout is called (first) with aAssumeHScroll=false (as the frame hasn't previously been laid out with scrollbars), and so hScrollbarDesiredHeight is zero. Hence, it makes no contribution to desiredInsideBorderSize.height, and so mInsideBorderSize.height ends up very small. This forces wantHScrollbar to false, whereas it otherwise would have been true; and this matches aAssumeHScroll, which allows TryLayout to (inappropriately) return true.", "raw_text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #15)\n> The code does have\n>   desiredInsideBorderSize.height = hScrollbarDesiredHeight +\n>     NS_MAX(aKidMetrics->height, vScrollbarMinHeight);\n> so I would expect aState->mInsideBorderSize to include the height of the\n> horizontal scrollbar, and therefore aState->mInsideBorderSize.height >\n> hScrollbarMinSize.height.\n> \n> Is it possible that hScrollbarDesiredHeight < hScrollbarMinSize.height?\n\nYes, certainly - TryLayout is called (first) with aAssumeHScroll=false (as the frame hasn't previously been laid out with scrollbars), and so hScrollbarDesiredHeight is zero. Hence, it makes no contribution to desiredInsideBorderSize.height, and so mInsideBorderSize.height ends up very small. This forces wantHScrollbar to false, whereas it otherwise would have been true; and this matches aAssumeHScroll, which allows TryLayout to (inappropriately) return true.", "attachment_id": null, "author": "jfkthame@gmail.com", "creation_time": "2011-10-04T13:21:32Z", "time": "2011-10-04T13:21:32Z", "creator": "jfkthame@gmail.com", "id": 5757158, "count": 16, "is_private": false}, {"author": "roc@ocallahan.org", "time": "2011-10-04T23:06:06Z", "creation_time": "2011-10-04T23:06:06Z", "creator": "roc@ocallahan.org", "id": 5758994, "count": 17, "is_private": false, "bug_id": 691000, "text": "I see. So we assumed there wasn't a horizontal scrollbar, so we didn't allocate room for one, so there isn't room for one, so we decide our assumption was valid :-).\n\nI'm not sure how to fix this. The current algorithm gives us a consistent layout, but not the best one. Maybe instead of returning a bool, TryLayout should return a score: \"unacceptable\", \"consistent\", and \"good\". TryLayout would return \"consistent\" for any layout that hides a scrollbar due to insufficient space. nsHTMLScrollFrame::ReflowContents could then keep its current structure, returning immediately anytime we find a \"good\" layout, but remembering any \"consistent\" layout that we find. At the end, if we haven't found a \"good\" layout, use the first \"consistent\" layout we found (and if we haven't even found a \"consistent\" layout, use the existing fallback).", "tags": [], "raw_text": "I see. So we assumed there wasn't a horizontal scrollbar, so we didn't allocate room for one, so there isn't room for one, so we decide our assumption was valid :-).\n\nI'm not sure how to fix this. The current algorithm gives us a consistent layout, but not the best one. Maybe instead of returning a bool, TryLayout should return a score: \"unacceptable\", \"consistent\", and \"good\". TryLayout would return \"consistent\" for any layout that hides a scrollbar due to insufficient space. nsHTMLScrollFrame::ReflowContents could then keep its current structure, returning immediately anytime we find a \"good\" layout, but remembering any \"consistent\" layout that we find. At the end, if we haven't found a \"good\" layout, use the first \"consistent\" layout we found (and if we haven't even found a \"consistent\" layout, use the existing fallback).", "attachment_id": null}]}}, "comments": {}}