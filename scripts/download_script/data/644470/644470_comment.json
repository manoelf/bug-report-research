{"comments": {}, "bugs": {"644470": {"comments": [{"time": "2011-03-24T03:47:01Z", "count": 0, "raw_text": "http://www.w3.org/TR/css3-fonts/#relative-sizing-the-font-size-adjust-pro specifies that the effect of 'font-size-adjust' is to scale 'font-size' according to the formula\n\n    c  =  ( a / a' ) s\n\nwhere\n\n    s   font size from font-size property\n    c   adjusted font size\n    a   aspect value as specified by the font-size-adjust property\n    a'  aspect value of actual font\n\nand _aspect value_ is defined as x-height / design-size.  It follows that\n\n# If [the font-size-adjust value] is specified accurately, the (a/a') term \n# in the formula above is effectively 1 for the first font and no\n# adjustment occurs.\n\nHowever, as the attached test case demonstrates, Firefox does not do this correctly; it is very easy -- particularly with size changes in subelements -- to get into a situation where the size of rendered text is changed by the presence of font-size-adjust, *even if* the exact font specified by font-family is in use.  These are not small errors, either: \n\nTo avoid any possibility that font substitution is in play, I have made the test case use a downloadable font (presently from Google's CDN, but it's a SIL-licensed font, so there would be no problem adding it to the test suite).  Furthermore, I calculated the font-size-adjust value from the font's actual metrics rather than eyeballing it as suggested in css3-fonts.  If you don't see a problem, try zooming.\n\nThis may in fact be the same as bug 431317 and/or bug 429605 (which in turn may themselves be the same thing) but due to the considerable confusion expressed especially in 431317 as to what font-size-adjust is actually supposed to _do_, I have elected to file a new bug with what I hope will be a completely unambiguous test case.", "creator": "zackw@panix.com", "text": "Created attachment 521398\ntest case\n\nhttp://www.w3.org/TR/css3-fonts/#relative-sizing-the-font-size-adjust-pro specifies that the effect of 'font-size-adjust' is to scale 'font-size' according to the formula\n\n    c  =  ( a / a' ) s\n\nwhere\n\n    s   font size from font-size property\n    c   adjusted font size\n    a   aspect value as specified by the font-size-adjust property\n    a'  aspect value of actual font\n\nand _aspect value_ is defined as x-height / design-size.  It follows that\n\n# If [the font-size-adjust value] is specified accurately, the (a/a') term \n# in the formula above is effectively 1 for the first font and no\n# adjustment occurs.\n\nHowever, as the attached test case demonstrates, Firefox does not do this correctly; it is very easy -- particularly with size changes in subelements -- to get into a situation where the size of rendered text is changed by the presence of font-size-adjust, *even if* the exact font specified by font-family is in use.  These are not small errors, either: \n\nTo avoid any possibility that font substitution is in play, I have made the test case use a downloadable font (presently from Google's CDN, but it's a SIL-licensed font, so there would be no problem adding it to the test suite).  Furthermore, I calculated the font-size-adjust value from the font's actual metrics rather than eyeballing it as suggested in css3-fonts.  If you don't see a problem, try zooming.\n\nThis may in fact be the same as bug 431317 and/or bug 429605 (which in turn may themselves be the same thing) but due to the considerable confusion expressed especially in 431317 as to what font-size-adjust is actually supposed to _do_, I have elected to file a new bug with what I hope will be a completely unambiguous test case.", "author": "zackw@panix.com", "is_private": false, "id": 5364978, "tags": [], "creation_time": "2011-03-24T03:47:01Z", "attachment_id": 521398, "bug_id": 644470}, {"text": "^^ I meant to say bug 413137 there.\n\nChanging OS to All as I've now checked that this happens in FF4/Linux and FF3.6/Windows.  My usual informant reports the problem (with different fonts) with FF4/Windows as well (dunno about GDI or DirectWrite there).  Based on the discussion in bug 429605, though, this might well be an \"everywhere but MacOS\" problem.  I will try Mac tomorrow - I cleverly left my Mac at CMU.", "creator": "zackw@panix.com", "raw_text": "^^ I meant to say bug 413137 there.\n\nChanging OS to All as I've now checked that this happens in FF4/Linux and FF3.6/Windows.  My usual informant reports the problem (with different fonts) with FF4/Windows as well (dunno about GDI or DirectWrite there).  Based on the discussion in bug 429605, though, this might well be an \"everywhere but MacOS\" problem.  I will try Mac tomorrow - I cleverly left my Mac at CMU.", "count": 1, "time": "2011-03-24T03:54:25Z", "bug_id": 644470, "attachment_id": null, "creation_time": "2011-03-24T03:54:25Z", "tags": [], "id": 5364994, "is_private": false, "author": "zackw@panix.com"}, {"tags": [], "creation_time": "2011-03-25T01:19:16Z", "attachment_id": null, "bug_id": 644470, "is_private": false, "author": "dbaron@dbaron.org", "id": 5368105, "raw_text": "What you describe in the summary of the bug (\"font-size-adjust changes font sizes for first choice font\") is a feature rather than a bug.\n\nWhat you're seeing here, though, is probably various rounding errors.", "creator": "dbaron@dbaron.org", "text": "What you describe in the summary of the bug (\"font-size-adjust changes font sizes for first choice font\") is a feature rather than a bug.\n\nWhat you're seeing here, though, is probably various rounding errors.", "time": "2011-03-25T01:19:16Z", "count": 2}, {"text": "(In reply to comment #2)\n> What you describe in the summary of the bug (\"font-size-adjust changes font\n> sizes for first choice font\") is a feature rather than a bug.\n\nAre you claiming that the css3-fonts specification of font-size-adjust, which is quite clear in its algorithmic way (although not how I would have written it) is not what font-size-adjust is supposed to do?  I set my test case up to guarantee a/a' == 1, therefore I expect c==s for all s.  [I suppose a designer might deliberately use the \"wrong\" value in font-size-adjust to get a specific effect, and sure, if they do that, it's going to change the effective size of the first-choice font, but that's not the situation I'm talking about at all.]\n\nAlso, the behavior I see with my test case is _unpredictable_, _zoom-dependent_ deviations in _both directions_ from the expected size.  That's not how a good feature behaves.\n\n> What you're seeing here, though, is probably various rounding errors.\n\nWell, okay, but that's still a bug in my book.  Do you think this is a case where our use of 'float' for specified values is just not precise enough?", "bug_id": 644470, "raw_text": "(In reply to comment #2)\n> What you describe in the summary of the bug (\"font-size-adjust changes font\n> sizes for first choice font\") is a feature rather than a bug.\n\nAre you claiming that the css3-fonts specification of font-size-adjust, which is quite clear in its algorithmic way (although not how I would have written it) is not what font-size-adjust is supposed to do?  I set my test case up to guarantee a/a' == 1, therefore I expect c==s for all s.  [I suppose a designer might deliberately use the \"wrong\" value in font-size-adjust to get a specific effect, and sure, if they do that, it's going to change the effective size of the first-choice font, but that's not the situation I'm talking about at all.]\n\nAlso, the behavior I see with my test case is _unpredictable_, _zoom-dependent_ deviations in _both directions_ from the expected size.  That's not how a good feature behaves.\n\n> What you're seeing here, though, is probably various rounding errors.\n\nWell, okay, but that's still a bug in my book.  Do you think this is a case where our use of 'float' for specified values is just not precise enough?", "creator": "zackw@panix.com", "creation_time": "2011-03-25T02:04:28Z", "tags": [], "attachment_id": null, "id": 5368189, "time": "2011-03-25T02:04:28Z", "author": "zackw@panix.com", "count": 3, "is_private": false}, {"count": 4, "time": "2011-03-25T06:44:29Z", "text": "I claim font-size-adjust is supposed to adjust the font size of the first choice font just like it's supposed to adjust any other font in the list.\n\nThe bug summary, as I read it, directly disagrees with that claim, although I'm not sure if it's the *intent* of the bug summary to disagree with that claim.\n\nI think the spec agrees with me, since it says:\n\n  # This value applies to any font that is selected but in typical usage it\n  # should be based on the aspect value of the first font in the font-family\n  # list. If this is specified accurately, the (a/a') term in the formula\n  # above is effectively 1 for the first font and no adjustment occurs. If\n  # the value is specified inaccurately, text rendered using the first font\n  # in the family list will display differently in older user agents that\n  # don't support font-size-adjust.\n\nGiven enough time, I could dig up emails explaining the rationale for why we want to adjust the first choice font.  (It *was* in dispute for quite a while.)\n\n\nI think rounding errors can be quite substantial, however, since font sizes are frequently rounded to the nearest pixel.", "creator": "dbaron@dbaron.org", "raw_text": "I claim font-size-adjust is supposed to adjust the font size of the first choice font just like it's supposed to adjust any other font in the list.\n\nThe bug summary, as I read it, directly disagrees with that claim, although I'm not sure if it's the *intent* of the bug summary to disagree with that claim.\n\nI think the spec agrees with me, since it says:\n\n  # This value applies to any font that is selected but in typical usage it\n  # should be based on the aspect value of the first font in the font-family\n  # list. If this is specified accurately, the (a/a') term in the formula\n  # above is effectively 1 for the first font and no adjustment occurs. If\n  # the value is specified inaccurately, text rendered using the first font\n  # in the family list will display differently in older user agents that\n  # don't support font-size-adjust.\n\nGiven enough time, I could dig up emails explaining the rationale for why we want to adjust the first choice font.  (It *was* in dispute for quite a while.)\n\n\nI think rounding errors can be quite substantial, however, since font sizes are frequently rounded to the nearest pixel.", "id": 5368569, "author": "dbaron@dbaron.org", "is_private": false, "bug_id": 644470, "attachment_id": null, "tags": [], "creation_time": "2011-03-25T06:44:29Z"}, {"creator": "zackw@panix.com", "raw_text": "(In reply to comment #4)\n> I claim font-size-adjust is supposed to adjust the font size of the first\n> choice font just like it's supposed to adjust any other font in the list.\n> \n> The bug summary, as I read it, directly disagrees with that claim, although\n> I'm not sure if it's the *intent* of the bug summary to disagree with that\n> claim.\n\nI'm making a more limited claim: IF a/a' == 1, THEN font-size-adjust should not APPEAR TO have any effect on the font sizes used for the first font.  I hope my revised bug title makes this clearer.\n\nIf under the hood we're doing all the work implied by having font-size-adjust at all (with a scaling factor of 1) that's fine by me.\n \n>   # This value applies to any font that is selected but in typical usage it\n>   # should be based on the aspect value of the first font in the font-family\n>   # list. If this is specified accurately, the (a/a') term in the formula\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n>   # above is effectively 1 for the first font and no adjustment occurs. If\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n>   # the value is specified inaccurately, text rendered using the first font\n>   # in the family list will display differently in older user agents that\n>   # don't support font-size-adjust.\n\nSpec seems to agree with me as well.", "text": "(In reply to comment #4)\n> I claim font-size-adjust is supposed to adjust the font size of the first\n> choice font just like it's supposed to adjust any other font in the list.\n> \n> The bug summary, as I read it, directly disagrees with that claim, although\n> I'm not sure if it's the *intent* of the bug summary to disagree with that\n> claim.\n\nI'm making a more limited claim: IF a/a' == 1, THEN font-size-adjust should not APPEAR TO have any effect on the font sizes used for the first font.  I hope my revised bug title makes this clearer.\n\nIf under the hood we're doing all the work implied by having font-size-adjust at all (with a scaling factor of 1) that's fine by me.\n \n>   # This value applies to any font that is selected but in typical usage it\n>   # should be based on the aspect value of the first font in the font-family\n>   # list. If this is specified accurately, the (a/a') term in the formula\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n>   # above is effectively 1 for the first font and no adjustment occurs. If\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n>   # the value is specified inaccurately, text rendered using the first font\n>   # in the family list will display differently in older user agents that\n>   # don't support font-size-adjust.\n\nSpec seems to agree with me as well.", "count": 5, "time": "2011-03-25T15:20:47Z", "attachment_id": null, "creation_time": "2011-03-25T15:20:47Z", "tags": [], "bug_id": 644470, "author": "zackw@panix.com", "is_private": false, "id": 5369271}, {"text": "Yep, the revised bug summary describes a bug that I agree is valid.", "bug_id": 644470, "creator": "dbaron@dbaron.org", "raw_text": "Yep, the revised bug summary describes a bug that I agree is valid.", "attachment_id": null, "creation_time": "2011-03-25T16:17:49Z", "tags": [], "id": 5369466, "count": 6, "time": "2011-03-25T16:17:49Z", "author": "dbaron@dbaron.org", "is_private": false}, {"creation_time": "2011-03-25T18:29:00Z", "tags": [], "attachment_id": null, "raw_text": "I finally got around to retrieving my laptop.  My testcase does fail on OSX; however the symptoms are different from Windows or Linux.  On Windows and Linux, I see unpredictable deviations in both directions from the desired size, depending on the zoom level.  On OSX, the font-size-adjust-ed text is consistently smaller than the unadjusted text at all zoom levels.  (The *amount by which* it is smaller varies.)  Also, on OSX the baseline for the adjusted text is above the baseline for the unadjusted text; on Windows and Linux, the baseline was unaffected.\n\nI think this means this is not exactly the same as bug 413137 or bug 429605, although it might still be another manifestation of the same basic issue.", "creator": "zackw@panix.com", "bug_id": 644470, "text": "I finally got around to retrieving my laptop.  My testcase does fail on OSX; however the symptoms are different from Windows or Linux.  On Windows and Linux, I see unpredictable deviations in both directions from the desired size, depending on the zoom level.  On OSX, the font-size-adjust-ed text is consistently smaller than the unadjusted text at all zoom levels.  (The *amount by which* it is smaller varies.)  Also, on OSX the baseline for the adjusted text is above the baseline for the unadjusted text; on Windows and Linux, the baseline was unaffected.\n\nI think this means this is not exactly the same as bug 413137 or bug 429605, although it might still be another manifestation of the same basic issue.", "is_private": false, "author": "zackw@panix.com", "time": "2011-03-25T18:29:00Z", "count": 7, "id": 5369941}, {"count": 8, "time": "2011-03-25T18:31:13Z", "text": "(In reply to comment #6)\n> Yep, the revised bug summary describes a bug that I agree is valid.\n\nCool.  I apologize for my crankiness in comment 3.", "creator": "zackw@panix.com", "raw_text": "(In reply to comment #6)\n> Yep, the revised bug summary describes a bug that I agree is valid.\n\nCool.  I apologize for my crankiness in comment 3.", "id": 5369948, "is_private": false, "author": "zackw@panix.com", "bug_id": 644470, "attachment_id": null, "tags": [], "creation_time": "2011-03-25T18:31:13Z"}]}}}