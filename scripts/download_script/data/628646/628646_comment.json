{"comments": {}, "bugs": {"628646": {"comments": [{"bug_id": 628646, "text": "crash [@ nsImapServerResponseParser::ProcessOkCommand(char const*)]\n\nnot a new crash, but rare prior to v3.1.7. IOW, about 10x increase with v3.1.7, and even a couple trunk crashes.  (not enough information to say it's a regression)\n\nbp-48f51af6-568a-412e-8192-bc5022110122 3.3a3pre (archivo)\nEXCEPTION_ACCESS_VIOLATION_READ\n0xc\n0\txul.dll\tnsImapServerResponseParser::ProcessOkCommand\tmailnews/imap/src/nsImapServerResponseParser.cpp:467\n1\txul.dll\tnsImapServerResponseParser::ParseIMAPServerResponse\tmailnews/imap/src/nsImapServerResponseParser.cpp:298\n2\txul.dll\tnsImapProtocol::ParseIMAPandCheckForNewMail\tmailnews/imap/src/nsImapProtocol.cpp:1917\n3\txul.dll\tnsImapProtocol::FetchMessage\tmailnews/imap/src/nsImapProtocol.cpp:3540\n4\txul.dll\tnsImapProtocol::FetchTryChunking\tmailnews/imap/src/nsImapProtocol.cpp:3605\n5\txul.dll\tnsImapProtocol::FallbackToFetchWholeMsg\tmailnews/imap/src/nsImapProtocol.cpp:3293\n6\txul.dll\tnsIMAPBodyShell::Generate\tmailnews/imap/src/nsIMAPBodyShell.cpp:254\n7\txul.dll\tnsImapProtocol::ProcessSelectedStateURL\tmailnews/imap/src/nsImapProtocol.cpp:2621\n8\txul.dll\tnsImapProtocol::ProcessCurrentURL\tmailnews/imap/src/nsImapProtocol.cpp:1762\n9\txul.dll\tnsImapProtocol::ImapThreadMainLoop\tmailnews/imap/src/nsImapProtocol.cpp:1401 \n\nbp-d0258db5-e634-461b-9980-d8c8e2110121 v3.3a2\nbp-1769aa44-ddb5-41a6-930b-2368b2110125 v3.1.7\n0x0", "time": "2011-01-25T14:16:23Z", "creation_time": "2011-01-25T14:16:23Z", "raw_text": "crash [@ nsImapServerResponseParser::ProcessOkCommand(char const*)]\n\nnot a new crash, but rare prior to v3.1.7. IOW, about 10x increase with v3.1.7, and even a couple trunk crashes.  (not enough information to say it's a regression)\n\nbp-48f51af6-568a-412e-8192-bc5022110122 3.3a3pre (archivo)\nEXCEPTION_ACCESS_VIOLATION_READ\n0xc\n0\txul.dll\tnsImapServerResponseParser::ProcessOkCommand\tmailnews/imap/src/nsImapServerResponseParser.cpp:467\n1\txul.dll\tnsImapServerResponseParser::ParseIMAPServerResponse\tmailnews/imap/src/nsImapServerResponseParser.cpp:298\n2\txul.dll\tnsImapProtocol::ParseIMAPandCheckForNewMail\tmailnews/imap/src/nsImapProtocol.cpp:1917\n3\txul.dll\tnsImapProtocol::FetchMessage\tmailnews/imap/src/nsImapProtocol.cpp:3540\n4\txul.dll\tnsImapProtocol::FetchTryChunking\tmailnews/imap/src/nsImapProtocol.cpp:3605\n5\txul.dll\tnsImapProtocol::FallbackToFetchWholeMsg\tmailnews/imap/src/nsImapProtocol.cpp:3293\n6\txul.dll\tnsIMAPBodyShell::Generate\tmailnews/imap/src/nsIMAPBodyShell.cpp:254\n7\txul.dll\tnsImapProtocol::ProcessSelectedStateURL\tmailnews/imap/src/nsImapProtocol.cpp:2621\n8\txul.dll\tnsImapProtocol::ProcessCurrentURL\tmailnews/imap/src/nsImapProtocol.cpp:1762\n9\txul.dll\tnsImapProtocol::ImapThreadMainLoop\tmailnews/imap/src/nsImapProtocol.cpp:1401 \n\nbp-d0258db5-e634-461b-9980-d8c8e2110121 v3.3a2\nbp-1769aa44-ddb5-41a6-930b-2368b2110125 v3.1.7\n0x0", "creator": "vseerror@lehigh.edu", "attachment_id": null, "id": 5225075, "tags": [], "is_private": false, "count": 0, "author": "vseerror@lehigh.edu"}, {"text": "looked before leaping:\n1358 if (!fServerConnection.GetCurrentUrl())\n1359   return;\n1360 fServerConnection.GetCurrentUrl()->GetImapAction(&imapAction); \n\njust went straight off the cliff:\n466 fServerConnection.GetCurrentUrl()->GetImapPartToFetch(&imapPart);\n\nnote that the code really should use a local for the result instead of calling x times.", "tags": [], "bug_id": 628646, "id": 5227986, "creation_time": "2011-01-26T07:43:55Z", "is_private": false, "time": "2011-01-26T07:43:55Z", "author": "timeless@bemail.org", "count": 1, "attachment_id": null, "creator": "timeless@bemail.org", "raw_text": "looked before leaping:\n1358 if (!fServerConnection.GetCurrentUrl())\n1359   return;\n1360 fServerConnection.GetCurrentUrl()->GetImapAction(&imapAction); \n\njust went straight off the cliff:\n466 fServerConnection.GetCurrentUrl()->GetImapPartToFetch(&imapPart);\n\nnote that the code really should use a local for the result instead of calling x times."}, {"id": 8102093, "tags": [], "is_private": false, "count": 2, "author": "vseerror@lehigh.edu", "bug_id": 628646, "text": "(#3 ranked imap crash)\n\neasy to fix?\n\n(In reply to timeless from comment #1)\n> looked before leaping:\n> 1358 if (!fServerConnection.GetCurrentUrl())\n> 1359   return;\n> 1360 fServerConnection.GetCurrentUrl()->GetImapAction(&imapAction); \n> \n> just went straight off the cliff:\n> 466 fServerConnection.GetCurrentUrl()->GetImapPartToFetch(&imapPart);\n> \n> note that the code really should use a local for the result instead of\n> calling x times.", "time": "2013-11-20T13:41:22Z", "creation_time": "2013-11-20T13:41:22Z", "creator": "vseerror@lehigh.edu", "raw_text": "(#3 ranked imap crash)\n\neasy to fix?\n\n(In reply to timeless from comment #1)\n> looked before leaping:\n> 1358 if (!fServerConnection.GetCurrentUrl())\n> 1359   return;\n> 1360 fServerConnection.GetCurrentUrl()->GetImapAction(&imapAction); \n> \n> just went straight off the cliff:\n> 466 fServerConnection.GetCurrentUrl()->GetImapPartToFetch(&imapPart);\n> \n> note that the code really should use a local for the result instead of\n> calling x times.", "attachment_id": null}, {"raw_text": "Do we need anything more than stacktrace to move this forward?\n\n#26 for Thunderbird 31.6.0\nStill the most common imap parse crash. \nsecond most common is still bug 610465\n\nbp-e7d1d525-9e3d-4815-90a7-a078f2150428\n \txul.dll \tnsImapServerResponseParser::ProcessOkCommand(char const*) \tmailnews/imap/src/nsImapServerResponseParser.cpp\n1 \txul.dll \tnsImapServerResponseParser::ParseIMAPServerResponse(char const*, bool, char*) \tmailnews/imap/src/nsImapServerResponseParser.cpp\n2 \txul.dll \tnsImapProtocol::ParseIMAPandCheckForNewMail(char const*, bool) \tmailnews/imap/src/nsImapProtocol.cpp\n3 \txul.dll \tnsImapProtocol::FetchMessage(nsCString const&, nsIMAPeFetchFields, char const*, unsigned int, unsigned int, char*) \tmailnews/imap/src/nsImapProtocol.cpp\n4 \txul.dll \tnsImapProtocol::FetchTryChunking(nsCString const&, nsIMAPeFetchFields, bool, char*, unsigned int, bool) \tmailnews/imap/src/nsImapProtocol.cpp\n5 \txul.dll \tnsImapProtocol::FallbackToFetchWholeMsg(nsCString const&, unsigned int) \tmailnews/imap/src/nsImapProtocol.cpp\n6 \txul.dll \tnsIMAPBodyShell::Generate(char*) \tmailnews/imap/src/nsIMAPBodyShell.cpp\n\nhttp://hg.mozilla.org/releases/comm-esr31/annotate/4db053e8db19/mailnews/imap/src/nsImapServerResponseParser.cpp#l261\nhg@0 \t258        if (ContinueParse() && !CommandFailed())\nhg@0 \t259        {\nhg@0    260          // a successful command may change the eIMAPstate\nhg@0 \t261          ProcessOkCommand(commandToken);\n\nhttp://hg.mozilla.org/releases/comm-esr31/annotate/4db053e8db19/mailnews/imap/src/nsImapServerResponseParser.cpp#l441\nhg@0 \t434        // we were pseudointerrupted or interrupted\nbienvenu 435        // if it's not in the cache, then we were (pseudo)interrupted while generating\nbienvenu 436        // for the first time. Release it.\nhg@0 \t 437        if (!m_shell->IsShellCached())\nmconley  438          m_shell = nullptr;\nbugzilla 439        navCon->PseudoInterrupt(false);\nhg@0 \t440      }\nhg@0 \t441      else if (m_shell->GetIsValid())", "creator": "vseerror@lehigh.edu", "attachment_id": null, "count": 3, "author": "vseerror@lehigh.edu", "time": "2015-04-30T11:13:10Z", "is_private": false, "creation_time": "2015-04-30T11:13:10Z", "id": 10216660, "bug_id": 628646, "tags": [], "text": "Do we need anything more than stacktrace to move this forward?\n\n#26 for Thunderbird 31.6.0\nStill the most common imap parse crash. \nsecond most common is still bug 610465\n\nbp-e7d1d525-9e3d-4815-90a7-a078f2150428\n \txul.dll \tnsImapServerResponseParser::ProcessOkCommand(char const*) \tmailnews/imap/src/nsImapServerResponseParser.cpp\n1 \txul.dll \tnsImapServerResponseParser::ParseIMAPServerResponse(char const*, bool, char*) \tmailnews/imap/src/nsImapServerResponseParser.cpp\n2 \txul.dll \tnsImapProtocol::ParseIMAPandCheckForNewMail(char const*, bool) \tmailnews/imap/src/nsImapProtocol.cpp\n3 \txul.dll \tnsImapProtocol::FetchMessage(nsCString const&, nsIMAPeFetchFields, char const*, unsigned int, unsigned int, char*) \tmailnews/imap/src/nsImapProtocol.cpp\n4 \txul.dll \tnsImapProtocol::FetchTryChunking(nsCString const&, nsIMAPeFetchFields, bool, char*, unsigned int, bool) \tmailnews/imap/src/nsImapProtocol.cpp\n5 \txul.dll \tnsImapProtocol::FallbackToFetchWholeMsg(nsCString const&, unsigned int) \tmailnews/imap/src/nsImapProtocol.cpp\n6 \txul.dll \tnsIMAPBodyShell::Generate(char*) \tmailnews/imap/src/nsIMAPBodyShell.cpp\n\nhttp://hg.mozilla.org/releases/comm-esr31/annotate/4db053e8db19/mailnews/imap/src/nsImapServerResponseParser.cpp#l261\nhg@0 \t258        if (ContinueParse() && !CommandFailed())\nhg@0 \t259        {\nhg@0    260          // a successful command may change the eIMAPstate\nhg@0 \t261          ProcessOkCommand(commandToken);\n\nhttp://hg.mozilla.org/releases/comm-esr31/annotate/4db053e8db19/mailnews/imap/src/nsImapServerResponseParser.cpp#l441\nhg@0 \t434        // we were pseudointerrupted or interrupted\nbienvenu 435        // if it's not in the cache, then we were (pseudo)interrupted while generating\nbienvenu 436        // for the first time. Release it.\nhg@0 \t 437        if (!m_shell->IsShellCached())\nmconley  438          m_shell = nullptr;\nbugzilla 439        navCon->PseudoInterrupt(false);\nhg@0 \t440      }\nhg@0 \t441      else if (m_shell->GetIsValid())"}, {"count": 4, "author": "vseerror@lehigh.edu", "attachment_id": null, "creator": "vseerror@lehigh.edu", "raw_text": "", "bug_id": 628646, "id": 11919423, "text": "*** Bug 1323533 has been marked as a duplicate of this bug. ***", "tags": [], "is_private": false, "time": "2016-12-14T20:04:09Z", "creation_time": "2016-12-14T20:04:09Z"}, {"is_private": false, "time": "2017-01-23T19:18:36Z", "creation_time": "2017-01-23T19:18:36Z", "bug_id": 628646, "id": 12003374, "text": "m_kato, does comment 1 sound like a good start?", "tags": [], "attachment_id": null, "creator": "vseerror@lehigh.edu", "raw_text": "m_kato, does comment 1 sound like a good start?", "count": 5, "author": "vseerror@lehigh.edu"}, {"author": "m_kato@ga2.so-net.ne.jp", "count": 6, "attachment_id": null, "creator": "m_kato@ga2.so-net.ne.jp", "raw_text": "(In reply to Wayne Mery (:wsmwk, NI for questions) from comment #5)\n> m_kato, does comment 1 sound like a good start?\n\nNo, another issue.\n\nAlothough I look some crashes such as bp-7cf3406d-6373-42dd-90e7-514a02170129, m_shell seems to be be nullptr.  But If it is simply nullptr,  Thuderbird will crash at m_shell->Generate(imapPart) before this crashes.  So we will need reproduce step to fix completely.", "text": "(In reply to Wayne Mery (:wsmwk, NI for questions) from comment #5)\n> m_kato, does comment 1 sound like a good start?\n\nNo, another issue.\n\nAlothough I look some crashes such as bp-7cf3406d-6373-42dd-90e7-514a02170129, m_shell seems to be be nullptr.  But If it is simply nullptr,  Thuderbird will crash at m_shell->Generate(imapPart) before this crashes.  So we will need reproduce step to fix completely.", "tags": [], "bug_id": 628646, "id": 12020202, "creation_time": "2017-01-30T02:03:51Z", "is_private": false, "time": "2017-01-30T02:03:51Z"}, {"bug_id": 628646, "text": "For some users this correlates to bug 825513 - crash in nsImapProtocol::GetMessageSize via nsIMAPBodyShell::Generate\nBut for most users this is still just a one-off crash", "time": "2017-10-09T13:48:46Z", "creation_time": "2017-10-09T13:48:46Z", "creator": "vseerror@lehigh.edu", "raw_text": "For some users this correlates to bug 825513 - crash in nsImapProtocol::GetMessageSize via nsIMAPBodyShell::Generate\nBut for most users this is still just a one-off crash", "attachment_id": null, "id": 12741052, "tags": [], "is_private": false, "count": 7, "author": "vseerror@lehigh.edu"}, {"creation_time": "2018-09-12T12:21:49Z", "is_private": false, "time": "2018-09-12T12:21:49Z", "tags": [], "text": "(In reply to Wayne Mery (:wsmwk) from comment #7)\n> For some users this correlates to bug 825513 - crash in\n> nsImapProtocol::GetMessageSize via nsIMAPBodyShell::Generate\n\nranks #10, but unfortunately has not made progress.  And this bug ranks #28.  Both are still topcrash in version 60.", "id": 13609459, "bug_id": 628646, "raw_text": "(In reply to Wayne Mery (:wsmwk) from comment #7)\n> For some users this correlates to bug 825513 - crash in\n> nsImapProtocol::GetMessageSize via nsIMAPBodyShell::Generate\n\nranks #10, but unfortunately has not made progress.  And this bug ranks #28.  Both are still topcrash in version 60.", "creator": "vseerror@lehigh.edu", "attachment_id": null, "author": "vseerror@lehigh.edu", "count": 8}, {"attachment_id": null, "raw_text": "https://dxr.mozilla.org/comm-esr60/source/mailnews/imap/src/nsImapServerResponseParser.cpp#436 -> \n\nelse if (m_shell->GetIsValid())\n\nBut m_shell is checked a few lines up.", "creator": "mkmelin+mozilla@iki.fi", "creation_time": "2018-09-28T19:37:14Z", "time": "2018-09-28T19:37:14Z", "text": "https://dxr.mozilla.org/comm-esr60/source/mailnews/imap/src/nsImapServerResponseParser.cpp#436 -> \n\nelse if (m_shell->GetIsValid())\n\nBut m_shell is checked a few lines up.", "bug_id": 628646, "author": "mkmelin+mozilla@iki.fi", "count": 9, "is_private": false, "tags": [], "id": 13648336}, {"time": "2019-01-02T11:29:08Z", "is_private": false, "creation_time": "2019-01-02T11:29:08Z", "id": 13837359, "bug_id": 628646, "tags": [], "text": "In version 60 the crash rate has roughly doubled.  So perhaps some regressive change occurred - starting roughly with version 60.2.1\n\nhttps://crash-stats.mozilla.com/signature/?signature=nsImapServerResponseParser%3A%3AProcessOkCommand&date=>%3D2018-10-02T01%3A22%3A42.000Z&date=<2019-01-02T01%3A22%3A42.000Z&_columns=date&_columns=product&_columns=version&_columns=build_id&_columns=platform&_columns=reason&_columns=address&_columns=install_time&_sort=-date&page=1#graphs", "raw_text": "In version 60 the crash rate has roughly doubled.  So perhaps some regressive change occurred - starting roughly with version 60.2.1\n\nhttps://crash-stats.mozilla.com/signature/?signature=nsImapServerResponseParser%3A%3AProcessOkCommand&date=>%3D2018-10-02T01%3A22%3A42.000Z&date=<2019-01-02T01%3A22%3A42.000Z&_columns=date&_columns=product&_columns=version&_columns=build_id&_columns=platform&_columns=reason&_columns=address&_columns=install_time&_sort=-date&page=1#graphs", "creator": "vseerror@lehigh.edu", "attachment_id": null, "count": 10, "author": "vseerror@lehigh.edu"}, {"time": "2019-01-05T12:19:55Z", "is_private": false, "creation_time": "2019-01-05T12:19:55Z", "bug_id": 628646, "id": 13843146, "text": "As Magnus said, the line is:\nelse if (m_shell->GetIsValid())\n\nand before we have\nm_shell->Generate(imapPart);\n\nand\nm_shell->IsBeingGenerated()\n\nThe crash makes little sense and without some STR we won't fix it. If it's gone up now just means that memory distribution has shifted in the application. Nothing we can track.", "tags": [], "attachment_id": null, "creator": "jorgk-bmo@jorgk.com", "raw_text": "As Magnus said, the line is:\nelse if (m_shell->GetIsValid())\n\nand before we have\nm_shell->Generate(imapPart);\n\nand\nm_shell->IsBeingGenerated()\n\nThe crash makes little sense and without some STR we won't fix it. If it's gone up now just means that memory distribution has shifted in the application. Nothing we can track.", "count": 11, "author": "jorgk-bmo@jorgk.com"}, {"is_private": false, "id": 13930257, "tags": [], "count": 12, "author": "vseerror@lehigh.edu", "time": "2019-02-17T11:56:44Z", "creation_time": "2019-02-17T11:56:44Z", "bug_id": 628646, "text": "Most comments are about large attachments: sending, downloading, detaching. \n\nIs this about chunking?  Or just generic attachments issue.\n\nbp-57920d1a-a602-4334-8baa-0fd670190119 \tI was trying to detach 5 large pictures (total 30MB) from an e-mail message. \n 0 \tXUL\tnsImapServerResponseParser::ProcessOkCommand(char const*)\tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:436 \tcontext\n1 \tXUL\tnsImapServerResponseParser::ParseIMAPServerResponse(char const*, bool, char*)\tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:256 \tcfi\n2 \tXUL\tnsImapProtocol::FetchMessage(nsTString<char> const&, nsIMAPeFetchFields, char const*, unsigned int, unsigned int, char*)\tcomm/mailnews/imap/src/nsImapProtocol.cpp:3667 \tcfi\n3 \tXUL\tnsImapProtocol::FetchTryChunking(nsTString<char> const&, nsIMAPeFetchFields, bool, char*, unsigned int, bool)\tcomm/mailnews/imap/src/nsImapProtocol.cpp:3700 \tcfi\n4 \tXUL\tnsImapProtocol::FallbackToFetchWholeMsg(nsTString<char> const&, unsigned int)\tcomm/mailnews/imap/src/nsImapProtocol.cpp:3400 \tcfi\n5 \tXUL\tnsIMAPBodyShell::Generate(char*)\tcomm/mailnews/imap/src/nsIMAPBodyShell.cpp:224 \tcfi\n6 \tXUL\tnsImapProtocol::ProcessSelectedStateURL()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:2759 \tcfi\n7 \tXUL\tnsImapProtocol::ProcessCurrentURL()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:1784 \tcfi\n8 \tXUL\tnsImapProtocol::ImapThreadMainLoop()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:1403 \tcfi\n9 \tXUL\tnsImapProtocol::Run()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:1062 \tcfi\n10 \tXUL\tnon-virtual thunk to nsImapProtocol::Run()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:0 \tcfi\n\nbp-65608ed1-9914-4a10-9323-a63ff0190205 \twas downloading a 5 meg jpg \nbp- f3bad4be-2e44-4271-b6ad-46dd70190212 \tI had attached two photos each c5.4MB - too big!", "raw_text": "Most comments are about large attachments: sending, downloading, detaching. \n\nIs this about chunking?  Or just generic attachments issue.\n\nbp-57920d1a-a602-4334-8baa-0fd670190119 \tI was trying to detach 5 large pictures (total 30MB) from an e-mail message. \n 0 \tXUL\tnsImapServerResponseParser::ProcessOkCommand(char const*)\tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:436 \tcontext\n1 \tXUL\tnsImapServerResponseParser::ParseIMAPServerResponse(char const*, bool, char*)\tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:256 \tcfi\n2 \tXUL\tnsImapProtocol::FetchMessage(nsTString<char> const&, nsIMAPeFetchFields, char const*, unsigned int, unsigned int, char*)\tcomm/mailnews/imap/src/nsImapProtocol.cpp:3667 \tcfi\n3 \tXUL\tnsImapProtocol::FetchTryChunking(nsTString<char> const&, nsIMAPeFetchFields, bool, char*, unsigned int, bool)\tcomm/mailnews/imap/src/nsImapProtocol.cpp:3700 \tcfi\n4 \tXUL\tnsImapProtocol::FallbackToFetchWholeMsg(nsTString<char> const&, unsigned int)\tcomm/mailnews/imap/src/nsImapProtocol.cpp:3400 \tcfi\n5 \tXUL\tnsIMAPBodyShell::Generate(char*)\tcomm/mailnews/imap/src/nsIMAPBodyShell.cpp:224 \tcfi\n6 \tXUL\tnsImapProtocol::ProcessSelectedStateURL()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:2759 \tcfi\n7 \tXUL\tnsImapProtocol::ProcessCurrentURL()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:1784 \tcfi\n8 \tXUL\tnsImapProtocol::ImapThreadMainLoop()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:1403 \tcfi\n9 \tXUL\tnsImapProtocol::Run()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:1062 \tcfi\n10 \tXUL\tnon-virtual thunk to nsImapProtocol::Run()\tcomm/mailnews/imap/src/nsImapProtocol.cpp:0 \tcfi\n\nbp-65608ed1-9914-4a10-9323-a63ff0190205 \twas downloading a 5 meg jpg \nbp- f3bad4be-2e44-4271-b6ad-46dd70190212 \tI had attached two photos each c5.4MB - too big!", "creator": "vseerror@lehigh.edu", "attachment_id": null}, {"id": 13930480, "tags": [], "is_private": false, "count": 13, "author": "gds@chartertn.net", "bug_id": 628646, "text": "(In reply to Wayne Mery (:wsmwk) from comment #12)\n\n> Most comments are about large attachments: sending, downloading, detaching. \n> \n> Is this about chunking?  Or just generic attachments issue.\n \nI can't really tell. I've been poking around in this area and working with big attachments so I will watch for this. Will try some detaching too. \n\nI'm not real familiar with the crash report pages that you reference, but when I click on the blue links inside them I get a bad response and it doesn't go to the code line that it links to.", "time": "2019-02-17T20:54:34Z", "creation_time": "2019-02-17T20:54:34Z", "attachment_id": null, "raw_text": "(In reply to Wayne Mery (:wsmwk) from comment #12)\n\n> Most comments are about large attachments: sending, downloading, detaching. \n> \n> Is this about chunking?  Or just generic attachments issue.\n \nI can't really tell. I've been poking around in this area and working with big attachments so I will watch for this. Will try some detaching too. \n\nI'm not real familiar with the crash report pages that you reference, but when I click on the blue links inside them I get a bad response and it doesn't go to the code line that it links to.", "creator": "gds@chartertn.net"}, {"author": "vseerror@lehigh.edu", "count": 14, "is_private": false, "tags": [], "id": 14491992, "attachment_id": null, "creator": "vseerror@lehigh.edu", "raw_text": "(In reply to gene smith from comment #13)\n> (In reply to Wayne Mery (:wsmwk) from comment #12)\n> \n> > Most comments are about large attachments: sending, downloading, detaching. \n> > \n> > Is this about chunking?  Or just generic attachments issue.\n>  \n> I can't really tell. I've been poking around in this area and working with big attachments so I will watch for this. Will try some detaching too. \n\nAll the crashes I examined do have chunking on the stack.  So does bug 1222455, but that signature is gone in version 68 so I am closing it out.\n\nAny new ideas?\n\n\n> I'm not real familiar with the crash report pages that you reference, but when I click on the blue links inside them I get a bad response and it doesn't go to the code line that it links to.\n\nYeah, unfortunately been that way a long time. And not changing soon afaik. :(", "creation_time": "2019-11-17T14:26:47Z", "time": "2019-11-17T14:26:47Z", "text": "(In reply to gene smith from comment #13)\n> (In reply to Wayne Mery (:wsmwk) from comment #12)\n> \n> > Most comments are about large attachments: sending, downloading, detaching. \n> > \n> > Is this about chunking?  Or just generic attachments issue.\n>  \n> I can't really tell. I've been poking around in this area and working with big attachments so I will watch for this. Will try some detaching too. \n\nAll the crashes I examined do have chunking on the stack.  So does bug 1222455, but that signature is gone in version 68 so I am closing it out.\n\nAny new ideas?\n\n\n> I'm not real familiar with the crash report pages that you reference, but when I click on the blue links inside them I get a bad response and it doesn't go to the code line that it links to.\n\nYeah, unfortunately been that way a long time. And not changing soon afaik. :(", "bug_id": 628646}, {"raw_text": "68.12.1 ranked #10\n78.3.3 ranked #80", "creator": "vseerror@lehigh.edu", "attachment_id": null, "time": "2020-10-25T00:26:02Z", "creation_time": "2020-10-25T00:26:02Z", "bug_id": 628646, "text": "68.12.1 ranked #10\n78.3.3 ranked #80", "count": 15, "author": "vseerror@lehigh.edu", "is_private": false, "id": 15098507, "tags": []}, {"text": "Created attachment 9194756\nScreen Shot 2020-12-26 at 1.36.13 PM.png\n\n(In reply to Wayne Mery (:wsmwk) from comment #15 on October 10)\n> 68.12.1 ranked #10\n> 78.3.3 ranked #80\n\nIf we take version 68.12.*, 68.11.*, 68.10.* out of the 6 month graph we see that version 78 crashes are pretty flat [1].  Which indicates that either the crash signature changed in version 78 or we fixed something in 78 that we didn't uplift to 68.\n\nThe slow introduction of version 78 makes it hard to pin down a date where things got better, but from [2] should we suspect Bug 1654995 - Thunderbird 79.0b2 corrupting large attachments because of chunking - which went live in 78.2.0 in mid-August?   Or should we be looking for something that landed earlier?  (sure would be nice to have a year of crash-stats data)\n\nWhatever it was that helped this bug, didn't help Bug 1581766 - Crash in [@ arena_t::DallocSmall | je_free | nsIMAPGenericParser::AdvanceToNextToken] via nsImapServerResponseParser\n \n[1] https://crash-stats.mozilla.org/signature/?version=%2168.12.0&version=%2168.11.0&version=%2168.10.0&version=%2168.12.1&signature=nsImapServerResponseParser%3A%3AProcessOkCommand&date=%3E%3D2020-06-26T18%3A08%3A00.000Z&date=%3C2020-12-26T18%3A08%3A00.000Z#graphs\n\n[2] https://bugzilla.mozilla.org/buglist.cgi?j3=OR&f1=short_desc&o4=anywordssubstr&chfieldvalue=FIXED&resolution=---&resolution=FIXED&f3=OP&f2=component&chfieldfrom=9m&v4=chunk%20imap&f5=component&chfield=resolution&product=MailNews%20Core&product=Thunderbird&f6=CP&list_id=15535061&classification=Client%20Software&classification=Developer%20Infrastructure&classification=Components&classification=Server%20Software&classification=Other&o5=substring&o1=nowordssubstr&v5=imap&f4=short_desc&bug_type=defect&o2=nowordssubstr&chfieldto=2020-08-01&query_format=advanced", "bug_id": 628646, "creation_time": "2020-12-26T18:46:56Z", "time": "2020-12-26T18:46:56Z", "attachment_id": 9194756, "creator": "vseerror@lehigh.edu", "raw_text": "(In reply to Wayne Mery (:wsmwk) from comment #15 on October 10)\n> 68.12.1 ranked #10\n> 78.3.3 ranked #80\n\nIf we take version 68.12.*, 68.11.*, 68.10.* out of the 6 month graph we see that version 78 crashes are pretty flat [1].  Which indicates that either the crash signature changed in version 78 or we fixed something in 78 that we didn't uplift to 68.\n\nThe slow introduction of version 78 makes it hard to pin down a date where things got better, but from [2] should we suspect Bug 1654995 - Thunderbird 79.0b2 corrupting large attachments because of chunking - which went live in 78.2.0 in mid-August?   Or should we be looking for something that landed earlier?  (sure would be nice to have a year of crash-stats data)\n\nWhatever it was that helped this bug, didn't help Bug 1581766 - Crash in [@ arena_t::DallocSmall | je_free | nsIMAPGenericParser::AdvanceToNextToken] via nsImapServerResponseParser\n \n[1] https://crash-stats.mozilla.org/signature/?version=%2168.12.0&version=%2168.11.0&version=%2168.10.0&version=%2168.12.1&signature=nsImapServerResponseParser%3A%3AProcessOkCommand&date=%3E%3D2020-06-26T18%3A08%3A00.000Z&date=%3C2020-12-26T18%3A08%3A00.000Z#graphs\n\n[2] https://bugzilla.mozilla.org/buglist.cgi?j3=OR&f1=short_desc&o4=anywordssubstr&chfieldvalue=FIXED&resolution=---&resolution=FIXED&f3=OP&f2=component&chfieldfrom=9m&v4=chunk%20imap&f5=component&chfield=resolution&product=MailNews%20Core&product=Thunderbird&f6=CP&list_id=15535061&classification=Client%20Software&classification=Developer%20Infrastructure&classification=Components&classification=Server%20Software&classification=Other&o5=substring&o1=nowordssubstr&v5=imap&f4=short_desc&bug_type=defect&o2=nowordssubstr&chfieldto=2020-08-01&query_format=advanced", "tags": [], "id": 15194930, "is_private": false, "author": "vseerror@lehigh.edu", "count": 16}, {"count": 17, "author": "worcester12345@yahoo.com", "id": 15388195, "tags": ["obsolete"], "is_private": false, "raw_text": "(In reply to Wayne Mery (:wsmwk) from comment #2)\n> (#3 ranked imap crash)\n> \n> easy to fix?\n\nJust did a new bug with this crash.  So, guessing it wasn't so easy to fix?", "creator": "worcester12345@yahoo.com", "attachment_id": null, "bug_id": 628646, "text": "(In reply to Wayne Mery (:wsmwk) from comment #2)\n> (#3 ranked imap crash)\n> \n> easy to fix?\n\nJust did a new bug with this crash.  So, guessing it wasn't so easy to fix?", "time": "2021-04-30T14:35:39Z", "creation_time": "2021-04-30T14:35:39Z"}, {"count": 18, "author": "vseerror@lehigh.edu", "attachment_id": null, "creator": "vseerror@lehigh.edu", "raw_text": "", "bug_id": 628646, "id": 15388428, "text": "*** Bug 1708712 has been marked as a duplicate of this bug. ***", "tags": [], "is_private": false, "time": "2021-04-30T16:34:15Z", "creation_time": "2021-04-30T16:34:15Z"}, {"creation_time": "2021-06-09T16:20:52Z", "is_private": false, "time": "2021-06-09T16:20:52Z", "text": "(In reply to Worcester12345 from comment #17)\n> (In reply to Wayne Mery (:wsmwk) from comment #2)\n> > (#3 ranked imap crash)\n> > \n> > easy to fix?\n> \n> Just did a new bug with this crash.  So, guessing it wasn't so easy to fix?\n\nHaven't seen any activity on this bug (duplicate of one I had) for a while, so just wondering if it is on somebody's radar.  Also wondering what the latest crash statistics for this one are. I don't think I have seen it since the duplicated bug.  Thanks.", "tags": ["obsolete"], "bug_id": 628646, "id": 15442094, "attachment_id": null, "raw_text": "(In reply to Worcester12345 from comment #17)\n> (In reply to Wayne Mery (:wsmwk) from comment #2)\n> > (#3 ranked imap crash)\n> > \n> > easy to fix?\n> \n> Just did a new bug with this crash.  So, guessing it wasn't so easy to fix?\n\nHaven't seen any activity on this bug (duplicate of one I had) for a while, so just wondering if it is on somebody's radar.  Also wondering what the latest crash statistics for this one are. I don't think I have seen it since the duplicated bug.  Thanks.", "creator": "worcester12345@yahoo.com", "author": "worcester12345@yahoo.com", "count": 19}, {"attachment_id": null, "creator": "vseerror@lehigh.edu", "raw_text": "(In reply to Worcester12345 from comment #19)\n>  what the latest crash statistics for this one are\n\nClick the link in this bug report at Crash Data > Signature:", "count": 20, "author": "vseerror@lehigh.edu", "is_private": false, "time": "2021-06-09T16:24:56Z", "creation_time": "2021-06-09T16:24:56Z", "bug_id": 628646, "id": 15442100, "text": "(In reply to Worcester12345 from comment #19)\n>  what the latest crash statistics for this one are\n\nClick the link in this bug report at Crash Data > Signature:", "tags": ["obsolete"]}, {"raw_text": "Thank you.\n\nWow, looks like a lot in 78.\n\n78.11.0\t137\t41.40%\t137\n78.10.2\t74\t22.40%\t74", "creator": "worcester12345@yahoo.com", "attachment_id": null, "creation_time": "2021-06-09T16:58:02Z", "time": "2021-06-09T16:58:02Z", "text": "Thank you.\n\nWow, looks like a lot in 78.\n\n78.11.0\t137\t41.40%\t137\n78.10.2\t74\t22.40%\t74", "bug_id": 628646, "author": "worcester12345@yahoo.com", "count": 21, "is_private": false, "tags": ["obsolete"], "id": 15442148}, {"author": "vseerror@lehigh.edu", "count": 22, "tags": [], "id": 15457060, "is_private": false, "attachment_id": null, "creator": "vseerror@lehigh.edu", "raw_text": "(In reply to Worcester12345 from comment #21)\n> Thank you.\n> \n> Wow, looks like a lot in 78.\n\nNot really - it's not in the top 50 signatures https://crash-stats.mozilla.org/topcrashers/?product=Thunderbird&version=78.11.0&_facets_size=200", "text": "(In reply to Worcester12345 from comment #21)\n> Thank you.\n> \n> Wow, looks like a lot in 78.\n\nNot really - it's not in the top 50 signatures https://crash-stats.mozilla.org/topcrashers/?product=Thunderbird&version=78.11.0&_facets_size=200", "bug_id": 628646, "creation_time": "2021-06-21T01:49:52Z", "time": "2021-06-21T01:49:52Z"}, {"author": "vseerror@lehigh.edu", "count": 23, "tags": [], "id": 15567198, "is_private": false, "creator": "vseerror@lehigh.edu", "raw_text": "From bug 1708712 \"Was moving some folders, moving email between folders, and did a \"repair folder\" on main inbox folder.\"\n\nWas the repair done while the moving was in progress?", "attachment_id": null, "text": "From bug 1708712 \"Was moving some folders, moving email between folders, and did a \"repair folder\" on main inbox folder.\"\n\nWas the repair done while the moving was in progress?", "bug_id": 628646, "creation_time": "2021-09-13T08:18:36Z", "time": "2021-09-13T08:18:36Z"}, {"author": "worcester12345@yahoo.com", "count": 24, "is_private": false, "tags": [], "id": 15567610, "creator": "worcester12345@yahoo.com", "raw_text": "(In reply to Wayne Mery (:wsmwk) from comment #23)\n> From bug 1708712 \"Was moving some folders, moving email between folders, and did a \"repair folder\" on main inbox folder.\"\n> \n> Was the repair done while the moving was in progress?\n\nDon't know at this point.", "attachment_id": null, "creation_time": "2021-09-13T14:28:16Z", "time": "2021-09-13T14:28:16Z", "text": "(In reply to Wayne Mery (:wsmwk) from comment #23)\n> From bug 1708712 \"Was moving some folders, moving email between folders, and did a \"repair folder\" on main inbox folder.\"\n> \n> Was the repair done while the moving was in progress?\n\nDon't know at this point.", "bug_id": 628646}, {"bug_id": 628646, "id": 15635684, "text": "Version 91 is crash count is about the same as 78, but ranking is lower, ~93 vs 66 respectively", "tags": [], "is_private": false, "time": "2021-11-01T00:52:42Z", "creation_time": "2021-11-01T00:52:42Z", "count": 25, "author": "vseerror@lehigh.edu", "attachment_id": null, "creator": "vseerror@lehigh.edu", "raw_text": "Version 91 is crash count is about the same as 78, but ranking is lower, ~93 vs 66 respectively"}, {"time": "2021-11-04T15:17:57Z", "creation_time": "2021-11-04T15:17:57Z", "bug_id": 628646, "text": "FYI, just encountered it in Thunderbird 94.0 while reading my emails...\n\nCrash Report [@ nsImapServerResponseParser::ProcessOkCommand ]\nbp-4c49f26a-881c-4c63-b7bd-a2d0f0211104\n\n````\nCrashing Thread (85), Name: IMAP\nFrame \tModule \tSignature \tSource \tTrust\n0 \txul.dll \tnsImapServerResponseParser::ProcessOkCommand(char const*) \tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:422 \tcontext\n1 \txul.dll \tnsImapServerResponseParser::ParseIMAPServerResponse(char const*, bool, char*) \tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:270 \tcfi\n2 \txul.dll \tnsImapProtocol::FetchMessage(nsTString<char> const&, <unnamed-tag>, char const*, unsigned int, unsigned int, char*) \tcomm/mailnews/imap/src/nsImapProtocol.cpp:3806 \tcfi\n3 \txul.dll \tnsImapProtocol::FetchTryChunking(nsTString<char> const&, <unnamed-tag>, bool, char*, unsigned int, bool) \tcomm/mailnews/imap/src/nsImapProtocol.cpp:3856 \tcfi\n4 \txul.dll \tnsIMAPBodypart::GeneratePart(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:408 \tcfi\n5 \txul.dll \tnsIMAPBodypartLeaf::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:527 \tcfi\n6 \txul.dll \tnsIMAPBodypartMultipart::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:888 \tcfi\n7 \txul.dll \tnsIMAPBodypartMultipart::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:888 \tcfi\n8 \txul.dll \tnsIMAPBodypartMultipart::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:888 \tcfi\n9 \txul.dll \tnsIMAPBodypartMessage::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:759 \tcfi\n10 \txul.dll \tnsImapBodyShell::Generate(char*) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:223 \tcfi\n11 \txul.dll \tnsImapProtocol::ProcessSelectedStateURL() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:2941 \tcfi\n12 \txul.dll \tnsImapProtocol::ProcessCurrentURL() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:1944 \tcfi\n13 \txul.dll \tnsImapProtocol::ImapThreadMainLoop() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:1493 \tcfi\n14 \txul.dll \tnsImapProtocol::Run() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:1159 \tcfi\n````", "creator": "richard.leger@gmail.com", "raw_text": "FYI, just encountered it in Thunderbird 94.0 while reading my emails...\n\nCrash Report [@ nsImapServerResponseParser::ProcessOkCommand ]\nbp-4c49f26a-881c-4c63-b7bd-a2d0f0211104\n\n````\nCrashing Thread (85), Name: IMAP\nFrame \tModule \tSignature \tSource \tTrust\n0 \txul.dll \tnsImapServerResponseParser::ProcessOkCommand(char const*) \tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:422 \tcontext\n1 \txul.dll \tnsImapServerResponseParser::ParseIMAPServerResponse(char const*, bool, char*) \tcomm/mailnews/imap/src/nsImapServerResponseParser.cpp:270 \tcfi\n2 \txul.dll \tnsImapProtocol::FetchMessage(nsTString<char> const&, <unnamed-tag>, char const*, unsigned int, unsigned int, char*) \tcomm/mailnews/imap/src/nsImapProtocol.cpp:3806 \tcfi\n3 \txul.dll \tnsImapProtocol::FetchTryChunking(nsTString<char> const&, <unnamed-tag>, bool, char*, unsigned int, bool) \tcomm/mailnews/imap/src/nsImapProtocol.cpp:3856 \tcfi\n4 \txul.dll \tnsIMAPBodypart::GeneratePart(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:408 \tcfi\n5 \txul.dll \tnsIMAPBodypartLeaf::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:527 \tcfi\n6 \txul.dll \tnsIMAPBodypartMultipart::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:888 \tcfi\n7 \txul.dll \tnsIMAPBodypartMultipart::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:888 \tcfi\n8 \txul.dll \tnsIMAPBodypartMultipart::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:888 \tcfi\n9 \txul.dll \tnsIMAPBodypartMessage::Generate(nsImapBodyShell*, bool, bool) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:759 \tcfi\n10 \txul.dll \tnsImapBodyShell::Generate(char*) \tcomm/mailnews/imap/src/nsImapBodyShell.cpp:223 \tcfi\n11 \txul.dll \tnsImapProtocol::ProcessSelectedStateURL() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:2941 \tcfi\n12 \txul.dll \tnsImapProtocol::ProcessCurrentURL() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:1944 \tcfi\n13 \txul.dll \tnsImapProtocol::ImapThreadMainLoop() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:1493 \tcfi\n14 \txul.dll \tnsImapProtocol::Run() \tcomm/mailnews/imap/src/nsImapProtocol.cpp:1159 \tcfi\n````", "attachment_id": null, "is_private": false, "id": 15642485, "tags": [], "count": 26, "author": "richard.leger@gmail.com"}, {"bug_id": 628646, "id": 15643011, "text": "Richard, \nIt looks like you were fetching a multi-part email and it was fetching 1st the bodystructure. Does it always crash when you try to read a specific email?\nSince you run without offline store (from what you've told me) getting the bodystructure is needed since parts are saved to memory cache for faster recall. You may have to move to another message, then clear the memory cache and then try to open the \"problem\" message again to duplicated the problem.\nTo clear memory cache, under General preferences go near the end and click the \"Clear Now\" button in the \"Disk\" region.\nIf you can duplicate the crash, a IMAP:5,IMAPCache:5 log might show something. Or if you could provide the problem .eml, probably better.\nFWIW, the crash point (frame 0 above) may be caused by m_shell (pointer to the bodystructure shell) being null or corrupt.", "tags": [], "is_private": false, "time": "2021-11-04T19:26:15Z", "creation_time": "2021-11-04T19:26:15Z", "count": 27, "author": "gds@chartertn.net", "attachment_id": null, "creator": "gds@chartertn.net", "raw_text": "Richard, \nIt looks like you were fetching a multi-part email and it was fetching 1st the bodystructure. Does it always crash when you try to read a specific email?\nSince you run without offline store (from what you've told me) getting the bodystructure is needed since parts are saved to memory cache for faster recall. You may have to move to another message, then clear the memory cache and then try to open the \"problem\" message again to duplicated the problem.\nTo clear memory cache, under General preferences go near the end and click the \"Clear Now\" button in the \"Disk\" region.\nIf you can duplicate the crash, a IMAP:5,IMAPCache:5 log might show something. Or if you could provide the problem .eml, probably better.\nFWIW, the crash point (frame 0 above) may be caused by m_shell (pointer to the bodystructure shell) being null or corrupt."}, {"time": "2021-11-05T13:36:22Z", "creation_time": "2021-11-05T13:36:22Z", "bug_id": 628646, "text": "(In reply to gene smith from comment #27)\n> It looks like you were fetching a multi-part email and it was fetching 1st the bodystructure. Does it always crash when you try to read a specific email?\n\nIt mostly never happens... it was just expected... after restart of TB and selecting same emails all seems fine...\n\n> Since you run without offline store (from what you've told me) getting the bodystructure is needed since parts are saved to memory cache for faster recall. You may have to move to another message, then clear the memory cache and then try to open the \"problem\" message again to duplicated the problem.\n\nI haven't identified which email exactly caused the issue, but I will try to clear cache and reselect those I may thing it could have been at the time...\n\n> If you can duplicate the crash, a IMAP:5,IMAPCache:5 log might show something. Or if you could provide the problem .eml, probably better.\n> FWIW, the crash point (frame 0 above) may be caused by m_shell (pointer to the bodystructure shell) being null or corrupt.\n\nIf I can replicate with a specific email, will provide you some logs...", "attachment_id": null, "raw_text": "(In reply to gene smith from comment #27)\n> It looks like you were fetching a multi-part email and it was fetching 1st the bodystructure. Does it always crash when you try to read a specific email?\n\nIt mostly never happens... it was just expected... after restart of TB and selecting same emails all seems fine...\n\n> Since you run without offline store (from what you've told me) getting the bodystructure is needed since parts are saved to memory cache for faster recall. You may have to move to another message, then clear the memory cache and then try to open the \"problem\" message again to duplicated the problem.\n\nI haven't identified which email exactly caused the issue, but I will try to clear cache and reselect those I may thing it could have been at the time...\n\n> If you can duplicate the crash, a IMAP:5,IMAPCache:5 log might show something. Or if you could provide the problem .eml, probably better.\n> FWIW, the crash point (frame 0 above) may be caused by m_shell (pointer to the bodystructure shell) being null or corrupt.\n\nIf I can replicate with a specific email, will provide you some logs...", "creator": "richard.leger@gmail.com", "is_private": false, "id": 15643941, "tags": [], "count": 28, "author": "richard.leger@gmail.com"}, {"tags": [], "text": "(In reply to Richard Leger from comment #28)\n> (In reply to gene smith from comment #27)\n> > Since you run without offline store (from what you've told me) getting the bodystructure is needed since parts are saved to memory cache for faster recall. You may have to move to another message, then clear the memory cache and then try to open the \"problem\" message again to duplicated the problem.\n> \n> I haven't identified which email exactly caused the issue, but I will try to clear cache and reselect those I may thing it could have been at the time...\n\nSo far after clearing the cache I haven't been able to reproduce the issue... it is a very random unexpected issue...", "id": 15644511, "bug_id": 628646, "creation_time": "2021-11-05T21:01:02Z", "time": "2021-11-05T21:01:02Z", "is_private": false, "author": "richard.leger@gmail.com", "count": 29, "raw_text": "(In reply to Richard Leger from comment #28)\n> (In reply to gene smith from comment #27)\n> > Since you run without offline store (from what you've told me) getting the bodystructure is needed since parts are saved to memory cache for faster recall. You may have to move to another message, then clear the memory cache and then try to open the \"problem\" message again to duplicated the problem.\n> \n> I haven't identified which email exactly caused the issue, but I will try to clear cache and reselect those I may thing it could have been at the time...\n\nSo far after clearing the cache I haven't been able to reproduce the issue... it is a very random unexpected issue...", "creator": "richard.leger@gmail.com", "attachment_id": null}]}}}