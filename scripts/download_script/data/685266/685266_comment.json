{"bugs": {"685266": {"comments": [{"bug_id": 685266, "id": 5705686, "tags": [], "count": 0, "is_private": false, "time": "2011-09-07T19:36:52Z", "attachment_id": null, "text": "It is almost always an error to delete a base class pointer which does not have a virtual destructor:\n\nclass Base {\n  virtual foo(); // in order for Base to have a vtable\n};\n\nclass Derived : public Base {\npublic:\n  ~Derived(); // will never be called in f below\n};\n\nvoid f() {\n  Base * obj = new Derived();\n  delete obj; // oops\n}\n\nHaving a static analysis to catch this is potentially going to catch things like bug 605732.", "raw_text": "It is almost always an error to delete a base class pointer which does not have a virtual destructor:\n\nclass Base {\n  virtual foo(); // in order for Base to have a vtable\n};\n\nclass Derived : public Base {\npublic:\n  ~Derived(); // will never be called in f below\n};\n\nvoid f() {\n  Base * obj = new Derived();\n  delete obj; // oops\n}\n\nHaving a static analysis to catch this is potentially going to catch things like bug 605732.", "creation_time": "2011-09-07T19:36:52Z", "author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com"}, {"creator": "benjamin@smedbergs.us", "author": "benjamin@smedbergs.us", "bug_id": 685266, "count": 1, "is_private": false, "tags": [], "id": 5705699, "text": "This is going to be very hard to do without a whole-program analysis: you aren't guaranteed in any particular translation unit to know both parts of the question:\n\n* I'm deleting a class without a virtual dtor\n* That class has subclasses\n\nAnd even within a translation unit this can be tricky depending on the order you receive type/method information.", "time": "2011-09-07T19:40:26Z", "attachment_id": null, "raw_text": "This is going to be very hard to do without a whole-program analysis: you aren't guaranteed in any particular translation unit to know both parts of the question:\n\n* I'm deleting a class without a virtual dtor\n* That class has subclasses\n\nAnd even within a translation unit this can be tricky depending on the order you receive type/method information.", "creation_time": "2011-09-07T19:40:26Z"}, {"author": "josh@joshmatthews.net", "creator": "josh@joshmatthews.net", "id": 5705713, "tags": [], "count": 2, "is_private": false, "bug_id": 685266, "creation_time": "2011-09-07T19:46:11Z", "raw_text": "Doesn't GCC warn about this? Can we just turn that warning into an error?", "attachment_id": null, "time": "2011-09-07T19:46:11Z", "text": "Doesn't GCC warn about this? Can we just turn that warning into an error?"}, {"creation_time": "2011-09-07T19:46:35Z", "raw_text": "One thing we can do more easily is warn/error if:\n1. Base has a virtual function,\n2. Base does not have a virtual destructor,\n3. delete <expr of type Base> is called from a function f,\n4. and f is not a virtual member of Base marked NS_MUST_OVERRIDE.\n\nNote that XPCOM relies on having a vtable for methods but not having a virtual destructor, so we would have to mark all methods in NS_DECL_ISUPPORTS NS_MUST_OVERRIDE to guarantee this.\n\n[NS_MUST_OVERRIDE methods must be overridden in all subclasses, and this is already statically enforced, or would be, if we had a static-checking buildbot already].", "time": "2011-09-07T19:46:35Z", "attachment_id": null, "author": "Pidgeot18@gmail.com", "creator": "Pidgeot18@gmail.com", "text": "One thing we can do more easily is warn/error if:\n1. Base has a virtual function,\n2. Base does not have a virtual destructor,\n3. delete <expr of type Base> is called from a function f,\n4. and f is not a virtual member of Base marked NS_MUST_OVERRIDE.\n\nNote that XPCOM relies on having a vtable for methods but not having a virtual destructor, so we would have to mark all methods in NS_DECL_ISUPPORTS NS_MUST_OVERRIDE to guarantee this.\n\n[NS_MUST_OVERRIDE methods must be overridden in all subclasses, and this is already statically enforced, or would be, if we had a static-checking buildbot already].", "id": 5705716, "is_private": false, "count": 3, "tags": [], "bug_id": 685266}, {"creator": "Pidgeot18@gmail.com", "author": "Pidgeot18@gmail.com", "text": "(In reply to Josh Matthews [:jdm] from comment #2)\n> Doesn't GCC warn about this? Can we just turn that warning into an error?\n\nThere is -Wnon-virtual-dtor, but enabling that as an error would cause all of XPCOM to fail to compile.", "attachment_id": null, "time": "2011-09-07T19:47:50Z", "raw_text": "(In reply to Josh Matthews [:jdm] from comment #2)\n> Doesn't GCC warn about this? Can we just turn that warning into an error?\n\nThere is -Wnon-virtual-dtor, but enabling that as an error would cause all of XPCOM to fail to compile.", "creation_time": "2011-09-07T19:47:50Z", "bug_id": 685266, "tags": [], "is_private": false, "count": 4, "id": 5705720}, {"count": 5, "is_private": false, "tags": [], "id": 5705724, "bug_id": 685266, "creation_time": "2011-09-07T19:48:28Z", "raw_text": "If we find a way to do this, something to look out for is that sometimes in IDL (such as nsIXPCScriptable.idl) you will have something like:\n\n> %{ C++\n> ...\n\n> class NS_NO_VTABLE nsXPCClassInfo : public nsIClassInfo,\n> public nsIXPCScriptable\n> {", "text": "If we find a way to do this, something to look out for is that sometimes in IDL (such as nsIXPCScriptable.idl) you will have something like:\n\n> %{ C++\n> ...\n\n> class NS_NO_VTABLE nsXPCClassInfo : public nsIClassInfo,\n> public nsIXPCScriptable\n> {", "creator": "netzen@gmail.com", "attachment_id": null, "time": "2011-09-07T19:48:28Z", "author": "netzen@gmail.com"}, {"author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com", "creation_time": "2011-09-07T23:20:53Z", "raw_text": "I think comment 3 provides a perfect solution here.  It will result in some false positives, but I think we might want to fix those anyways, so that they wouldn't be real problems in the future.", "attachment_id": null, "time": "2011-09-07T23:20:53Z", "text": "I think comment 3 provides a perfect solution here.  It will result in some false positives, but I think we might want to fix those anyways, so that they wouldn't be real problems in the future.", "id": 5706337, "count": 6, "is_private": false, "tags": [], "bug_id": 685266}]}}, "comments": {}}