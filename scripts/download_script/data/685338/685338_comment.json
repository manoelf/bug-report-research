{"comments": {}, "bugs": {"685338": {"comments": [{"bug_id": 685338, "count": 0, "id": 5706254, "attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.10) Gecko/20101005 Fedora/3.6.10-1.fc14 Firefox/3.6.10\nBuild ID: 20100921094947\n\nSteps to reproduce:\n\nattached my http server with nethsm and certicom. SSL server cert/keys in nethsm, nss in FIPS mode.  \n\n\nActual results:\n\nbrowser failed to connect.\nBob Relyea provided a temporary hack that got around for me, but we need an official build.\n\n\nExpected results:\n\nshould be able to do ssl.", "author": "u289492@disabled.tld", "creation_time": "2011-09-07T22:42:22Z", "time": "2011-09-07T22:42:22Z", "tags": [], "text": "User Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.10) Gecko/20101005 Fedora/3.6.10-1.fc14 Firefox/3.6.10\nBuild ID: 20100921094947\n\nSteps to reproduce:\n\nattached my http server with nethsm and certicom. SSL server cert/keys in nethsm, nss in FIPS mode.  \n\n\nActual results:\n\nbrowser failed to connect.\nBob Relyea provided a temporary hack that got around for me, but we need an official build.\n\n\nExpected results:\n\nshould be able to do ssl.", "creator": "u289492@disabled.tld", "is_private": false}, {"count": 1, "is_private": false, "creator": "rrelyea@redhat.com", "text": "Changing Subject. NOTE: SSL ECC also does not work in the Thales HSM in FIPS mode. This is a separate problem which is logged with Thales because only Thales can fix it. (Thales is missing critical SSL derive mechanisms). The real problem is that when acting as a client (and another token supporting the SSL ECC operation), Thales can't sign the SSL auth data, which is a sha1 hash. Instead it expects a sha256 bit hash.\n\nbob", "bug_id": 685338, "tags": [], "time": "2011-09-07T23:44:10Z", "creation_time": "2011-09-07T23:44:10Z", "author": "rrelyea@redhat.com", "raw_text": "Changing Subject. NOTE: SSL ECC also does not work in the Thales HSM in FIPS mode. This is a separate problem which is logged with Thales because only Thales can fix it. (Thales is missing critical SSL derive mechanisms). The real problem is that when acting as a client (and another token supporting the SSL ECC operation), Thales can't sign the SSL auth data, which is a sha1 hash. Instead it expects a sha256 bit hash.\n\nbob", "attachment_id": null, "id": 5706401}]}}}