{"bugs": {"633513": {"comments": [{"time": "2011-02-11T16:03:54Z", "tags": [], "is_private": false, "bug_id": 633513, "raw_text": "This is for a build of M-C of 12 Feb 2011, on arm-linux (Ubuntu 10.04.1),\nbuilt for Firefox, not Fennec.  [but assuming this is jsengine related,\nthat shouldn't matter, right?]\n\nAfter some time it segfaults as below.  STR to follow.\n\nI have seen this twice now on ARM Linux.\nNot on x86 or x86_64 Linux though.\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x448643d0 (LWP 10766)]\n*__GI___libc_free (mem=0x6700) at malloc.c:3709\n3709\tmalloc.c: No such file or directory.\n\tin malloc.c\n(gdb) where\n#0  *__GI___libc_free (mem=0x6700) at malloc.c:3709\n#1  0x40d3b866 in js_free (this=0x2213f0) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsutil.h:222\n#2  js::GCHelperThread::freeElementsAndArray (this=0x2213f0) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.h:903\n#3  js::GCHelperThread::doSweep (this=0x2213f0) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.cpp:2138\n#4  0x40d3b8ba in js::GCHelperThread::threadLoop (this=0x2213f0, rt=0x221280) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.cpp:2083\n#5  0x40d3b908 in js::GCHelperThread::threadMain (arg=0x40d3b867) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.cpp:2066\n#6  0x412e875a in _pt_root (arg=<value optimized out>) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/nsprpub/pr/src/pthreads/ptthread.c:187\n#7  0x4003819a in start_thread (arg=<value optimized out>) at pthread_create.c:302\n#8  0x41c34b38 in clone () at ../ports/sysdeps/unix/sysv/linux/arm/nptl/../clone.S:105\n#9  0x41c34b38 in clone () at ../ports/sysdeps/unix/sysv/linux/arm/nptl/../clone.S:105\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)", "count": 0, "creator": "jseward@acm.org", "text": "This is for a build of M-C of 12 Feb 2011, on arm-linux (Ubuntu 10.04.1),\nbuilt for Firefox, not Fennec.  [but assuming this is jsengine related,\nthat shouldn't matter, right?]\n\nAfter some time it segfaults as below.  STR to follow.\n\nI have seen this twice now on ARM Linux.\nNot on x86 or x86_64 Linux though.\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x448643d0 (LWP 10766)]\n*__GI___libc_free (mem=0x6700) at malloc.c:3709\n3709\tmalloc.c: No such file or directory.\n\tin malloc.c\n(gdb) where\n#0  *__GI___libc_free (mem=0x6700) at malloc.c:3709\n#1  0x40d3b866 in js_free (this=0x2213f0) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsutil.h:222\n#2  js::GCHelperThread::freeElementsAndArray (this=0x2213f0) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.h:903\n#3  js::GCHelperThread::doSweep (this=0x2213f0) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.cpp:2138\n#4  0x40d3b8ba in js::GCHelperThread::threadLoop (this=0x2213f0, rt=0x221280) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.cpp:2083\n#5  0x40d3b908 in js::GCHelperThread::threadMain (arg=0x40d3b867) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/jsgc.cpp:2066\n#6  0x412e875a in _pt_root (arg=<value optimized out>) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/nsprpub/pr/src/pthreads/ptthread.c:187\n#7  0x4003819a in start_thread (arg=<value optimized out>) at pthread_create.c:302\n#8  0x41c34b38 in clone () at ../ports/sysdeps/unix/sysv/linux/arm/nptl/../clone.S:105\n#9  0x41c34b38 in clone () at ../ports/sysdeps/unix/sysv/linux/arm/nptl/../clone.S:105\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)", "attachment_id": null, "id": 5272753, "author": "jseward@acm.org", "creation_time": "2011-02-11T16:03:54Z"}, {"creation_time": "2011-02-11T16:09:21Z", "author": "jseward@acm.org", "id": 5272762, "attachment_id": null, "text": "STR: load 4 tabs as below, with bbc news displayed, and idle for ~1/2 hour\nwith GDB attached.  Segfaults.\n\n* http://techcrunch.com\n* http://www.cad-comic.com/cad\n* http://www.cad-comic.com/cad/20021211\n* http://www.bbc.co.uk/news", "creator": "jseward@acm.org", "count": 1, "raw_text": "STR: load 4 tabs as below, with bbc news displayed, and idle for ~1/2 hour\nwith GDB attached.  Segfaults.\n\n* http://techcrunch.com\n* http://www.cad-comic.com/cad\n* http://www.cad-comic.com/cad/20021211\n* http://www.bbc.co.uk/news", "bug_id": 633513, "is_private": false, "tags": [], "time": "2011-02-11T16:09:21Z"}, {"count": 2, "raw_text": "Here's another:\n\nProgram received signal SIGSEGV, Segmentation fault.\nJSC::ARMAssembler::patchPointerInternal (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/ARMAssembler.h:1013\n1013\t            ARMWord* addr = getLdrImmAddress(insn);\n\n(gdb) p insn\n$1 = (JSC::ARMWord *) 0x0\n\n(gdb) where\n#0  JSC::ARMAssembler::patchPointerInternal (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/ARMAssembler.h:1013\n#1  JSC::ARMAssembler::repatchInt32 (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/ARMAssembler.h:1043\n#2  JSC::AbstractMacroAssembler<JSC::ARMAssembler>::repatchInt32 (f=..., ic=0x5cb1e40)\n    at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/AbstractMacroAssembler.h:588\n#3  JSC::RepatchBuffer::repatch (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/RepatchBuffer.h:110\n#4  js::mjit::ic::GetGlobalName (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/methodjit/MonoIC.cpp:105\n#5  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n#6  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)", "bug_id": 633513, "is_private": false, "tags": [], "time": "2011-02-14T11:43:20Z", "creation_time": "2011-02-14T11:43:20Z", "author": "jseward@acm.org", "attachment_id": null, "id": 5276676, "creator": "jseward@acm.org", "text": "Here's another:\n\nProgram received signal SIGSEGV, Segmentation fault.\nJSC::ARMAssembler::patchPointerInternal (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/ARMAssembler.h:1013\n1013\t            ARMWord* addr = getLdrImmAddress(insn);\n\n(gdb) p insn\n$1 = (JSC::ARMWord *) 0x0\n\n(gdb) where\n#0  JSC::ARMAssembler::patchPointerInternal (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/ARMAssembler.h:1013\n#1  JSC::ARMAssembler::repatchInt32 (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/ARMAssembler.h:1043\n#2  JSC::AbstractMacroAssembler<JSC::ARMAssembler>::repatchInt32 (f=..., ic=0x5cb1e40)\n    at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/AbstractMacroAssembler.h:588\n#3  JSC::RepatchBuffer::repatch (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/assembler/assembler/RepatchBuffer.h:110\n#4  js::mjit::ic::GetGlobalName (f=..., ic=0x5cb1e40) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/methodjit/MonoIC.cpp:105\n#5  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n#6  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)"}, {"is_private": false, "tags": [], "time": "2011-02-14T14:19:08Z", "count": 3, "raw_text": "Program received signal SIGSEGV, Segmentation fault.\n0x40e23d40 in EqualityCompiler::update() () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n\n(gdb) disp /i $pc\n1: x/i $pc\n=> 0x40e23d40 <_ZN16EqualityCompiler6updateEv+1188>:\tstr\tr0, [r3, #0]\n\n(gdb) p/x $r3\n$1 = 0x47469659\n\n(gdb) where\n#0  0x40e23d40 in EqualityCompiler::update() () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n#1  0x40e21682 in js::mjit::ic::Equality (f=..., ic=0x51f0000) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/methodjit/MonoIC.cpp:392\n#2  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n#3  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)", "bug_id": 633513, "author": "jseward@acm.org", "id": 5276861, "attachment_id": null, "creator": "jseward@acm.org", "text": "Program received signal SIGSEGV, Segmentation fault.\n0x40e23d40 in EqualityCompiler::update() () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n\n(gdb) disp /i $pc\n1: x/i $pc\n=> 0x40e23d40 <_ZN16EqualityCompiler6updateEv+1188>:\tstr\tr0, [r3, #0]\n\n(gdb) p/x $r3\n$1 = 0x47469659\n\n(gdb) where\n#0  0x40e23d40 in EqualityCompiler::update() () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n#1  0x40e21682 in js::mjit::ic::Equality (f=..., ic=0x51f0000) at /import/zazenhausen/sewardj/jrs/MOZ/MC-10-02-2011/js/src/methodjit/MonoIC.cpp:392\n#2  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\n#3  0x40def43a in JaegerStubVeneer () from /home/sewardj/jrs/MOZ/MC-10-02-2011/ff-opt/toolkit/library/libxul.so\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)", "creation_time": "2011-02-14T14:19:08Z"}, {"creation_time": "2011-02-14T17:35:58Z", "author": "jseward@acm.org", "text": "I tried the change below, as spotted by Nick and OK'd by Jacob, but\nthe segfaults are still present.\n\n--- a/js/src/methodjit/BaseCompiler.h\tWed Feb 09 16:16:12 2011 -0800\n+++ b/js/src/methodjit/BaseCompiler.h\tMon Feb 14 18:33:32 2011 +0100\n@@ -168,8 +168,8 @@\n         if (!ep)\n             return ep;\n \n+        m_code = executableCopy(masm, ep);\n         m_size = masm.size();\n-        m_code = executableCopy(masm, ep);\n         if (!m_code) {\n             ep->release();\n             js_ReportOutOfMemory(cx);", "creator": "jseward@acm.org", "attachment_id": null, "id": 5277252, "count": 4, "bug_id": 633513, "raw_text": "I tried the change below, as spotted by Nick and OK'd by Jacob, but\nthe segfaults are still present.\n\n--- a/js/src/methodjit/BaseCompiler.h\tWed Feb 09 16:16:12 2011 -0800\n+++ b/js/src/methodjit/BaseCompiler.h\tMon Feb 14 18:33:32 2011 +0100\n@@ -168,8 +168,8 @@\n         if (!ep)\n             return ep;\n \n+        m_code = executableCopy(masm, ep);\n         m_size = masm.size();\n-        m_code = executableCopy(masm, ep);\n         if (!m_code) {\n             ep->release();\n             js_ReportOutOfMemory(cx);", "tags": [], "is_private": false, "time": "2011-02-14T17:35:58Z"}]}}, "comments": {}}