{"bugs": {"694702": {"comments": [{"author": "rclickenbrock@gmail.com", "creator": "rclickenbrock@gmail.com", "id": 5784039, "count": 0, "is_private": false, "tags": [], "bug_id": 694702, "creation_time": "2011-10-14T23:47:01Z", "raw_text": "Currently the telemetry for total decode time only accounts for time spent decoding asynchronously (in imgDecodeWorker::Run()). This should be expanded to include the other places where we write data to the decoder.", "attachment_id": null, "time": "2011-10-14T23:47:01Z", "text": "Currently the telemetry for total decode time only accounts for time spent decoding asynchronously (in imgDecodeWorker::Run()). This should be expanded to include the other places where we write data to the decoder."}, {"bug_id": 694702, "id": 5784163, "count": 1, "is_private": false, "tags": [], "time": "2011-10-15T01:07:29Z", "attachment_id": null, "text": "Robert, did you want to work on this? Jeff can probably give you some pointers if you need them.", "raw_text": "Robert, did you want to work on this? Jeff can probably give you some pointers if you need them.", "creation_time": "2011-10-15T01:07:29Z", "author": "joe@drew.ca", "creator": "joe@drew.ca"}, {"author": "jmuizelaar@mozilla.com", "creator": "jmuizelaar@mozilla.com", "id": 5784174, "count": 2, "is_private": false, "tags": [], "bug_id": 694702, "raw_text": "I've known about this for a while. I'd actually hoped that we would switch to only writing data to the decoder in one place.", "creation_time": "2011-10-15T01:14:30Z", "time": "2011-10-15T01:14:30Z", "attachment_id": null, "text": "I've known about this for a while. I'd actually hoped that we would switch to only writing data to the decoder in one place."}, {"creation_time": "2011-11-02T17:48:07Z", "raw_text": "This stores the decode time as a member of RasterImage, times how long we spend decoding in SyncDecode() and AddSourceData(), and accumulates the decode time and speed in ShutdownDecoder().\n\nThis seems to work, although I'm commonly seeing a decode time of zero. I'm still investigating why that's happening.", "time": "2011-11-02T17:48:07Z", "attachment_id": 571371, "author": "rclickenbrock@gmail.com", "text": "Created attachment 571371\npatch\n\nThis stores the decode time as a member of RasterImage, times how long we spend decoding in SyncDecode() and AddSourceData(), and accumulates the decode time and speed in ShutdownDecoder().\n\nThis seems to work, although I'm commonly seeing a decode time of zero. I'm still investigating why that's happening.", "creator": "rclickenbrock@gmail.com", "id": 5821292, "is_private": false, "count": 3, "tags": [], "bug_id": 694702}, {"creator": "rclickenbrock@gmail.com", "author": "rclickenbrock@gmail.com", "count": 4, "is_private": false, "tags": [], "id": 5953489, "bug_id": 694702, "raw_text": "The zero decode times I was seeing seem to be due to TimeStamp not having enough resolution on my Windows box to accurately time decoding of tiny images. The data isn't very useful in that case, so I've opted to just not accumulate the data if we have a zero decode time.\n\nAssuming that's acceptable, this is ready for review. Jeff, can you look at this?", "creation_time": "2012-01-04T09:31:13Z", "text": "Created attachment 585681\npatch v2\n\nThe zero decode times I was seeing seem to be due to TimeStamp not having enough resolution on my Windows box to accurately time decoding of tiny images. The data isn't very useful in that case, so I've opted to just not accumulate the data if we have a zero decode time.\n\nAssuming that's acceptable, this is ready for review. Jeff, can you look at this?", "time": "2012-01-04T09:31:13Z", "attachment_id": 585681}, {"attachment_id": 585686, "time": "2012-01-04T09:58:05Z", "author": "rclickenbrock@gmail.com", "creator": "rclickenbrock@gmail.com", "text": "Created attachment 585686\npatch v2\n\nOops, forgot to qref. This is the right patch.", "raw_text": "Oops, forgot to qref. This is the right patch.", "creation_time": "2012-01-04T09:58:05Z", "bug_id": 694702, "id": 5953509, "count": 5, "is_private": false, "tags": []}, {"creation_time": "2012-01-05T20:44:28Z", "raw_text": "Review of attachment 585686:\n-----------------------------------------------------------------\n\nThis patch is ok, but it adds more code that's basically doing the same thing in two places. Instead do you think you could look at refactoring the code so that we only write to the decoder in one place and then will only have to do the timing in a single place?\n\n::: image/src/RasterImage.cpp\n@@ +2541,5 @@\n>    CONTAINER_ENSURE_SUCCESS(rv);\n>  \n> +  TimeDuration decodeLatency = TimeStamp::Now() - start;\n> +  Telemetry::Accumulate(Telemetry::IMAGE_DECODE_LATENCY,\n> +                        PRInt32(decodeLatency.ToMicroseconds()));\n\nIt looks like this accumulates the DECODE_LATENCY even for size decodes. We don't do this in the other case.", "text": "Comment on attachment 585686\npatch v2\n\nReview of attachment 585686:\n-----------------------------------------------------------------\n\nThis patch is ok, but it adds more code that's basically doing the same thing in two places. Instead do you think you could look at refactoring the code so that we only write to the decoder in one place and then will only have to do the timing in a single place?\n\n::: image/src/RasterImage.cpp\n@@ +2541,5 @@\n>    CONTAINER_ENSURE_SUCCESS(rv);\n>  \n> +  TimeDuration decodeLatency = TimeStamp::Now() - start;\n> +  Telemetry::Accumulate(Telemetry::IMAGE_DECODE_LATENCY,\n> +                        PRInt32(decodeLatency.ToMicroseconds()));\n\nIt looks like this accumulates the DECODE_LATENCY even for size decodes. We don't do this in the other case.", "attachment_id": 585686, "time": "2012-01-05T20:44:28Z", "tags": [], "count": 6, "is_private": false, "id": 5958327, "bug_id": 694702, "creator": "jmuizelaar@mozilla.com", "author": "jmuizelaar@mozilla.com"}, {"raw_text": "(In reply to Jeff Muizelaar [:jrmuizel] from comment #6)\n> This patch is ok, but it adds more code that's basically doing the same\n> thing in two places. Instead do you think you could look at refactoring the\n> code so that we only write to the decoder in one place and then will only\n> have to do the timing in a single place?\nSure. I filed Bug 718927 for that.", "creation_time": "2012-01-18T06:07:34Z", "text": "(In reply to Jeff Muizelaar [:jrmuizel] from comment #6)\n> This patch is ok, but it adds more code that's basically doing the same\n> thing in two places. Instead do you think you could look at refactoring the\n> code so that we only write to the decoder in one place and then will only\n> have to do the timing in a single place?\nSure. I filed Bug 718927 for that.", "attachment_id": null, "time": "2012-01-18T06:07:34Z", "is_private": false, "count": 7, "tags": [], "id": 5987935, "bug_id": 694702, "creator": "rclickenbrock@gmail.com", "author": "rclickenbrock@gmail.com"}, {"author": "jmuizelaar@mozilla.com", "creator": "jmuizelaar@mozilla.com", "attachment_id": 585686, "time": "2012-05-10T18:07:13Z", "text": "Comment on attachment 585686\npatch v2\n\nDropping review request because of the refactoring needed for bug 718927", "raw_text": "Dropping review request because of the refactoring needed for bug 718927", "creation_time": "2012-05-10T18:07:13Z", "bug_id": 694702, "id": 6297655, "tags": [], "is_private": false, "count": 8}]}}, "comments": {}}