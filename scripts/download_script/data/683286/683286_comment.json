{"comments": {}, "bugs": {"683286": {"comments": [{"author": "jmuizelaar@mozilla.com", "creator": "jmuizelaar@mozilla.com", "time": "2011-08-30T20:20:29Z", "attachment_id": null, "text": "None of the other browsers seem to do this and it can cause us to use a lot more memory.", "creation_time": "2011-08-30T20:20:29Z", "raw_text": "None of the other browsers seem to do this and it can cause us to use a lot more memory.", "bug_id": 683286, "id": 5688780, "count": 0, "is_private": false, "tags": []}, {"author": "jmuizelaar@mozilla.com", "time": "2011-09-01T14:46:59Z", "attachment_id": 557495, "creator": "jmuizelaar@mozilla.com", "text": "Created attachment 557495\nDon't request a decode when we don't need it", "raw_text": "", "creation_time": "2011-09-01T14:46:59Z", "bug_id": 683286, "id": 5693566, "tags": [], "is_private": false, "count": 1}, {"creation_time": "2011-11-10T15:34:01Z", "raw_text": "Can we take the patch here?  What else needs to be done?", "text": "Can we take the patch here?  What else needs to be done?", "attachment_id": null, "time": "2011-11-10T15:34:01Z", "is_private": false, "count": 2, "tags": [], "id": 5840013, "bug_id": 683286, "creator": "khuey@kylehuey.com", "author": "khuey@kylehuey.com"}, {"raw_text": "We can confirm this is an issue, especially for web applications which do pre-loading.\n\nOn our game (cf http://cardstories.org/), visitors go through a loading screen, which pre-loads several large sprites using Image objects. On Firefox post-4.0 we see a pretty huge spike of memory consumption of ~250MB during the preloading, compared to 20-25MB on other browsers, or previous versions of Firefox.\n\nThe memory is freed pretty quickly - the garbage collector seem to properly clean things up right after, but in the meantime the uncompressed images heavily bloat the memory, creating crashes/slowdowns for players who use Firefox. \n\nI see there is a patch for this issue, but I'm unsure about the status as it's sitting there quietly since September. Any chance to get it merged for Firefox 11? :D", "creation_time": "2011-12-14T15:56:49Z", "attachment_id": null, "time": "2011-12-14T15:56:49Z", "text": "We can confirm this is an issue, especially for web applications which do pre-loading.\n\nOn our game (cf http://cardstories.org/), visitors go through a loading screen, which pre-loads several large sprites using Image objects. On Firefox post-4.0 we see a pretty huge spike of memory consumption of ~250MB during the preloading, compared to 20-25MB on other browsers, or previous versions of Firefox.\n\nThe memory is freed pretty quickly - the garbage collector seem to properly clean things up right after, but in the meantime the uncompressed images heavily bloat the memory, creating crashes/slowdowns for players who use Firefox. \n\nI see there is a patch for this issue, but I'm unsure about the status as it's sitting there quietly since September. Any chance to get it merged for Firefox 11? :D", "id": 5915675, "count": 3, "is_private": false, "tags": [], "bug_id": 683286, "author": "xavier@antoviaque.org", "creator": "xavier@antoviaque.org"}, {"id": 5915682, "tags": [], "count": 4, "is_private": false, "bug_id": 683286, "raw_text": "I'm attaching a quick benchmark of the memory usage for 3 different versions: Firefox 4.0-b13pre, Firefox 8.0, Firefox nightly build (9/12). \n\nDetails of the issue and ODS of the results available at http://tickets.farsides.com/issues/528#note-17", "creation_time": "2011-12-14T15:58:49Z", "attachment_id": 581641, "time": "2011-12-14T15:58:49Z", "text": "Created attachment 581641\nBenchmark - CardStories.org preloading\n\nI'm attaching a quick benchmark of the memory usage for 3 different versions: Firefox 4.0-b13pre, Firefox 8.0, Firefox nightly build (9/12). \n\nDetails of the issue and ODS of the results available at http://tickets.farsides.com/issues/528#note-17", "author": "xavier@antoviaque.org", "creator": "xavier@antoviaque.org"}, {"bug_id": 683286, "tags": [], "count": 5, "is_private": false, "id": 5916081, "text": "Comment on attachment 557495\nDon't request a decode when we don't need it\n\nJoe, I choose you!", "time": "2011-12-14T17:43:08Z", "attachment_id": 557495, "creation_time": "2011-12-14T17:43:08Z", "raw_text": "Joe, I choose you!", "creator": "josh@joshmatthews.net", "author": "josh@joshmatthews.net"}, {"creation_time": "2011-12-14T19:05:21Z", "raw_text": "Review of attachment 557495:\n-----------------------------------------------------------------\n\nJosh uses JOE! It's super effective!", "time": "2011-12-14T19:05:21Z", "attachment_id": 557495, "author": "joe@drew.ca", "creator": "joe@drew.ca", "text": "Comment on attachment 557495\nDon't request a decode when we don't need it\n\nReview of attachment 557495:\n-----------------------------------------------------------------\n\nJosh uses JOE! It's super effective!", "id": 5916400, "count": 6, "is_private": false, "tags": [], "bug_id": 683286}, {"bug_id": 683286, "id": 5916401, "tags": [], "count": 7, "is_private": false, "attachment_id": null, "time": "2011-12-14T19:06:05Z", "text": "Jeff and I agree that we should put this in at the beginning of the next cycle.", "raw_text": "Jeff and I agree that we should put this in at the beginning of the next cycle.", "creation_time": "2011-12-14T19:06:05Z", "author": "joe@drew.ca", "creator": "joe@drew.ca"}, {"text": "Jeff, can you land this as soon as you're back from holidays?  Thanks.", "attachment_id": null, "time": "2011-12-26T01:29:55Z", "creation_time": "2011-12-26T01:29:55Z", "raw_text": "Jeff, can you land this as soon as you're back from holidays?  Thanks.", "bug_id": 683286, "tags": [], "is_private": false, "count": 8, "id": 5939596, "creator": "n.nethercote@gmail.com", "author": "n.nethercote@gmail.com"}, {"count": 9, "is_private": false, "tags": [], "id": 5952233, "bug_id": 683286, "creation_time": "2012-01-03T22:12:19Z", "raw_text": "I'd like to write a test for this before landing, and need to think about the implications of this, i.e. will it keep us from firing onload?", "text": "I'd like to write a test for this before landing, and need to think about the implications of this, i.e. will it keep us from firing onload?", "creator": "jmuizelaar@mozilla.com", "time": "2012-01-03T22:12:19Z", "attachment_id": null, "author": "jmuizelaar@mozilla.com"}, {"id": 6131133, "count": 10, "is_private": false, "tags": [], "bug_id": 683286, "creation_time": "2012-03-11T20:23:41Z", "raw_text": "(In reply to Xavier Antoviaque from comment #3)\n...\n> The memory is freed pretty quickly - the garbage collector seem to properly\n> clean things up right after, but in the meantime the uncompressed images\n> heavily bloat the memory, creating crashes/slowdowns for players who use\n> Firefox. \n> \n\nCan someone confirm the memory is released correctly when using something like new Image().src = url\" for preloading? I worry that bug 661304 implies that memory will not be freed if the JavaScript calling it is in the context of the current tab (even though the image object is orphaned its part of the current tab)?\n\nIn the meantime is there a workaround that will help like explicitly setting the src to null after the image is loaded or reusing Image objects?", "time": "2012-03-11T20:23:41Z", "attachment_id": null, "text": "(In reply to Xavier Antoviaque from comment #3)\n...\n> The memory is freed pretty quickly - the garbage collector seem to properly\n> clean things up right after, but in the meantime the uncompressed images\n> heavily bloat the memory, creating crashes/slowdowns for players who use\n> Firefox. \n> \n\nCan someone confirm the memory is released correctly when using something like new Image().src = url\" for preloading? I worry that bug 661304 implies that memory will not be freed if the JavaScript calling it is in the context of the current tab (even though the image object is orphaned its part of the current tab)?\n\nIn the meantime is there a workaround that will help like explicitly setting the src to null after the image is loaded or reusing Image objects?", "author": "dave@ubiqsoft.com", "creator": "dave@ubiqsoft.com"}, {"tags": [], "count": 11, "is_private": false, "id": 6131137, "bug_id": 683286, "raw_text": "> Can someone confirm the memory is released correctly when using something like new Image().src = \n> url\" for preloading?\n\nYou can check pretty easily using about:memory.\n\n> I worry that bug 661304 implies that memory will not be freed if the JavaScript calling it is in the \n> context of the current tab (even though the image object is orphaned its part of the current tab)?\n\nThat should only apply to images which are in the document.", "creation_time": "2012-03-11T20:27:03Z", "text": "> Can someone confirm the memory is released correctly when using something like new Image().src = \n> url\" for preloading?\n\nYou can check pretty easily using about:memory.\n\n> I worry that bug 661304 implies that memory will not be freed if the JavaScript calling it is in the \n> context of the current tab (even though the image object is orphaned its part of the current tab)?\n\nThat should only apply to images which are in the document.", "time": "2012-03-11T20:27:03Z", "attachment_id": null, "creator": "justin.lebar+bug@gmail.com", "author": "justin.lebar+bug@gmail.com"}, {"bug_id": 683286, "id": 6131138, "is_private": false, "count": 12, "tags": [], "attachment_id": null, "time": "2012-03-11T20:28:28Z", "text": "(In reply to Justin Lebar [:jlebar] from comment #11)\n> > I worry that bug 661304 implies that memory will not be freed if the JavaScript calling it is in the \n> > context of the current tab (even though the image object is orphaned its part of the current tab)?\n> \n> That should only apply to images which are in the document.\n\nWhy do you think that?  Bug 683290 is still open ...", "raw_text": "(In reply to Justin Lebar [:jlebar] from comment #11)\n> > I worry that bug 661304 implies that memory will not be freed if the JavaScript calling it is in the \n> > context of the current tab (even though the image object is orphaned its part of the current tab)?\n> \n> That should only apply to images which are in the document.\n\nWhy do you think that?  Bug 683290 is still open ...", "creation_time": "2012-03-11T20:28:28Z", "author": "khuey@kylehuey.com", "creator": "khuey@kylehuey.com"}, {"bug_id": 683286, "id": 6131143, "is_private": false, "count": 13, "tags": [], "attachment_id": null, "time": "2012-03-11T20:35:29Z", "text": "> Why do you think that?  Bug 683290 is still open ...\n\nAh, right.  We really should fix that...", "raw_text": "> Why do you think that?  Bug 683290 is still open ...\n\nAh, right.  We really should fix that...", "creation_time": "2012-03-11T20:35:29Z", "author": "justin.lebar+bug@gmail.com", "creator": "justin.lebar+bug@gmail.com"}, {"tags": [], "count": 14, "is_private": false, "id": 6131145, "bug_id": 683286, "raw_text": "(In reply to Justin Lebar [:jlebar] from comment #13)\n> > Why do you think that?  Bug 683290 is still open ...\n> \n> Ah, right.  We really should fix that...\n\nI'm working on it!  Hopefully some more movement on the dependencies next week.", "creation_time": "2012-03-11T20:38:10Z", "text": "(In reply to Justin Lebar [:jlebar] from comment #13)\n> > Why do you think that?  Bug 683290 is still open ...\n> \n> Ah, right.  We really should fix that...\n\nI'm working on it!  Hopefully some more movement on the dependencies next week.", "time": "2012-03-11T20:38:10Z", "attachment_id": null, "creator": "khuey@kylehuey.com", "author": "khuey@kylehuey.com"}, {"bug_id": 683286, "id": 6438221, "tags": [], "is_private": false, "count": 15, "author": "ttaubert@mozilla.com", "time": "2012-07-02T13:58:51Z", "attachment_id": null, "text": "Jeff, what's the status of this patch? Did you have a chance to think about its side-effects? I'd really like to have this for bug 650968.", "creator": "ttaubert@mozilla.com", "creation_time": "2012-07-02T13:58:51Z", "raw_text": "Jeff, what's the status of this patch? Did you have a chance to think about its side-effects? I'd really like to have this for bug 650968."}, {"author": "jmuizelaar@mozilla.com", "creator": "jmuizelaar@mozilla.com", "bug_id": 683286, "id": 6438343, "tags": [], "is_private": false, "count": 16, "attachment_id": null, "time": "2012-07-02T15:00:06Z", "text": "(In reply to Tim Taubert [:ttaubert] from comment #15)\n> Jeff, what's the status of this patch? Did you have a chance to think about\n> its side-effects? I'd really like to have this for bug 650968.\n\nNo, I haven't had a chance to look at this anymore since I wrote last.", "creation_time": "2012-07-02T15:00:06Z", "raw_text": "(In reply to Tim Taubert [:ttaubert] from comment #15)\n> Jeff, what's the status of this patch? Did you have a chance to think about\n> its side-effects? I'd really like to have this for bug 650968.\n\nNo, I haven't had a chance to look at this anymore since I wrote last."}, {"author": "ericrahm+bz@gmail.com", "creator": "ericrahm+bz@gmail.com", "bug_id": 683286, "id": 12726399, "is_private": false, "count": 17, "tags": [], "time": "2017-10-03T22:03:44Z", "attachment_id": 557495, "text": "Comment on attachment 557495\nDon't request a decode when we don't need it\n\nThis code no longer exists.", "creation_time": "2017-10-03T22:03:44Z", "raw_text": "This code no longer exists."}, {"creation_time": "2017-10-03T22:04:15Z", "raw_text": "Jeff should we just close this bug? It seems like we did a big refactor of image loading since filing.", "author": "ericrahm+bz@gmail.com", "time": "2017-10-03T22:04:15Z", "attachment_id": null, "creator": "ericrahm+bz@gmail.com", "text": "Jeff should we just close this bug? It seems like we did a big refactor of image loading since filing.", "id": 12726406, "tags": [], "count": 18, "is_private": false, "bug_id": 683286}]}}}