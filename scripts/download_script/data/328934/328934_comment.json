{"comments": {}, "bugs": {"328934": {"comments": [{"text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8) Gecko/20051111 Firefox/1.5\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8) Gecko/20051111 Firefox/1.5\n\nThe XBL binding for the autocomplete popup uses hard coded IDs for tree columns (treecolAutoCompleteValue and treecolAutoCompleteComment).  This causes problems if there are multiple autocomplete widgets in the same document and you try to access a column by ID, e.g., if you try to toggle showCommentColumn on and off on the autocomplete widget.\n\nThis is the cause of bug 312200: Autocomplete supressed with Google Toolbar.\n\nReproducible: Always\n\nSteps to Reproduce:\nSee steps in bug 312200.\nActual Results:  \nFrom the JS Console:\n\nError: [Exception... \"Node was not found\"  code: \"8\" nsresult: \"0x80530008 (NS_ERROR_DOM_NOT_FOUND_ERR)\"  location: \"chrome://global/content/bindings/autocomplete.xml Line: 621\"]\nSource File: chrome://global/content/bindings/autocomplete.xml\nLine: 621", "count": 0, "bug_id": 328934, "id": 2790602, "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8) Gecko/20051111 Firefox/1.5\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8) Gecko/20051111 Firefox/1.5\n\nThe XBL binding for the autocomplete popup uses hard coded IDs for tree columns (treecolAutoCompleteValue and treecolAutoCompleteComment).  This causes problems if there are multiple autocomplete widgets in the same document and you try to access a column by ID, e.g., if you try to toggle showCommentColumn on and off on the autocomplete widget.\n\nThis is the cause of bug 312200: Autocomplete supressed with Google Toolbar.\n\nReproducible: Always\n\nSteps to Reproduce:\nSee steps in bug 312200.\nActual Results:  \nFrom the JS Console:\n\nError: [Exception... \"Node was not found\"  code: \"8\" nsresult: \"0x80530008 (NS_ERROR_DOM_NOT_FOUND_ERR)\"  location: \"chrome://global/content/bindings/autocomplete.xml Line: 621\"]\nSource File: chrome://global/content/bindings/autocomplete.xml\nLine: 621", "time": "2006-03-01T06:09:55Z", "creator": "tony@ponderer.org", "attachment_id": null, "is_private": false, "creation_time": "2006-03-01T06:09:55Z", "tags": [], "author": "tony@ponderer.org"}, {"bug_id": 328934, "count": 1, "text": "Created attachment 213543\nuse anonid rather than id", "raw_text": "", "time": "2006-03-01T06:11:28Z", "id": 2790604, "creator": "tony@ponderer.org", "attachment_id": 213543, "is_private": false, "tags": [], "creation_time": "2006-03-01T06:11:28Z", "author": "tony@ponderer.org"}, {"is_private": false, "author": "tony@ponderer.org", "tags": [], "creation_time": "2006-03-01T06:13:17Z", "raw_text": "Workaround id collision by using anonid rather than id.  To make sure the CSS still works, we need to include the anonid in the property list.", "time": "2006-03-01T06:13:17Z", "id": 2790605, "bug_id": 328934, "text": "Comment on attachment 213543\nuse anonid rather than id\n\nWorkaround id collision by using anonid rather than id.  To make sure the CSS still works, we need to include the anonid in the property list.", "count": 2, "attachment_id": 213543, "creator": "tony@ponderer.org"}, {"is_private": false, "creation_time": "2006-03-01T06:26:37Z", "tags": [], "author": "philringnalda@gmail.com", "text": "Comment on attachment 213543\nuse anonid rather than id\n\nTony, am I reading this right, that this unbreaks the Google Toolbar?", "count": 3, "bug_id": 328934, "id": 2790615, "time": "2006-03-01T06:26:37Z", "raw_text": "Tony, am I reading this right, that this unbreaks the Google Toolbar?", "creator": "philringnalda@gmail.com", "attachment_id": 213543}, {"count": 4, "text": "Phil, yes this fixes autocomplete with the Google Toolbar.  There's also a fix in the next version to work around this bug on existing versions of firefox.", "bug_id": 328934, "id": 2790622, "raw_text": "Phil, yes this fixes autocomplete with the Google Toolbar.  There's also a fix in the next version to work around this bug on existing versions of firefox.", "time": "2006-03-01T06:31:55Z", "creator": "tony@ponderer.org", "attachment_id": null, "is_private": false, "creation_time": "2006-03-01T06:31:55Z", "tags": [], "author": "tony@ponderer.org"}, {"author": "asaf@sent.com", "creator": "asaf@sent.com", "attachment_id": 213543, "creation_time": "2006-04-19T06:21:24Z", "tags": [], "time": "2006-04-19T06:21:24Z", "raw_text": ">Index: content/widgets/autocomplete.xml\n>===================================================================\n\n> \n>       <property name=\"showCommentColumn\"\n>                 onget=\"return this.mShowCommentColumn;\">\n>         <setter><![CDATA[\n>+          var col;\n\nPut this inside the blocks please, this is no longer a js warning.\n\n>           if (!val && this.mShowCommentColumn) {\n>             // reset the flex on the value column and add the comment column\n>-            document.getElementById(\"treecolAutoCompleteValue\").setAttribute(\"flex\", 1);\n>+            col = document.getAnonymousElementByAttribute(this, \"anonid\", \"treecolAutoCompleteValue\")\n>+            if (col)\n>+              col.setAttribute(\"flex\", 1);\n>             this.removeColumn(\"treecolAutoCompleteComment\");\n>           } else if (val && !this.mShowCommentColumn) {\n>             // reset the flex on the value column and add the comment column\n>-            document.getElementById(\"treecolAutoCompleteValue\").setAttribute(\"flex\", 2);\n>-            this.addColumn({id: \"treecolAutoCompleteComment\", flex: 1});\n>+            col = document.getAnonymousElementByAttribute(this, \"anonid\", \"treecolAutoCompleteValue\")\n>+            if (col)\n>+              col.setAttribute(\"flex\", 2);\n\nWhy are you null-checking here?\n\n>+            this.addColumn({anonid: \"treecolAutoCompleteComment\", flex: 1});\n>           }\n>           this.mShowCommentColumn = val;\n>           return val;\n>         ]]></setter>\n>       </property>\n> \n>       <method name=\"addColumn\">\n>         <parameter name=\"aAttrs\"/>\n>@@ -663,17 +668,20 @@\n>           this.treecols.appendChild(col);\n>           return col;\n>         ]]></body>\n>       </method>\n> \n>       <method name=\"removeColumn\">\n>         <parameter name=\"aColId\"/>\n>         <body><![CDATA[\n>-          return this.treecols.removeChild(document.getElementById(aColId));\n>+          var col = document.getAnonymousElementByAttribute(this, \"anonid\", aColId);\n>+          if (col)\n>+            return this.treecols.removeChild(col);\n>+          return null;\n\nditto\n\n>Index: components/autocomplete/src/nsAutoCompleteController.cpp\n>===================================================================\n\n> NS_IMETHODIMP\n> nsAutoCompleteController::GetCellProperties(PRInt32 row, nsITreeColumn* col, nsISupportsArray* properties)\n> {\n>   GetRowProperties(row, properties);\n>+  GetColumnProperties(col, properties);\n>   \n>   if (row >= 0) {\n>     nsAutoString className;\n>     GetStyleAt(row, className);\n>     if (!className.IsEmpty()) {\n>       nsCOMPtr<nsIAtomService> atomSvc = do_GetService(\"@mozilla.org/atom-service;1\");\n>       nsCOMPtr<nsIAtom> atom;\n>       atomSvc->GetAtom(className.get(), getter_AddRefs(atom));\n>@@ -656,16 +657,29 @@ nsAutoCompleteController::GetCellPropert\n>   }\n>   \n>   return NS_OK;\n> }\n> \n> NS_IMETHODIMP\n> nsAutoCompleteController::GetColumnProperties(nsITreeColumn* col, nsISupportsArray* properties)\n> {\n>+  // Add the anonid to the list of properties.\n>+  nsIDOMElement* elt;\n>+  col->GetElement(&elt);\n>+\n\nnsCOMfiy this:\nnsCOMPtr<nsIDOMElement> elt;\ncol->GetElement(getter_AddRefs(elm));\n\n\n> NS_IMETHODIMP\n> nsAutoCompleteController::GetCellText(PRInt32 row, nsITreeColumn* col, nsAString& _retval)\n> {\n>-  const PRUnichar* colID;\n>-  col->GetIdConst(&colID);\n>+  nsIDOMElement* elt;\n>+  col->GetElement(&elt);\n>+\n\nditto.", "is_private": false, "id": 2832359, "bug_id": 328934, "count": 5, "text": "Comment on attachment 213543\nuse anonid rather than id\n\n>Index: content/widgets/autocomplete.xml\n>===================================================================\n\n> \n>       <property name=\"showCommentColumn\"\n>                 onget=\"return this.mShowCommentColumn;\">\n>         <setter><![CDATA[\n>+          var col;\n\nPut this inside the blocks please, this is no longer a js warning.\n\n>           if (!val && this.mShowCommentColumn) {\n>             // reset the flex on the value column and add the comment column\n>-            document.getElementById(\"treecolAutoCompleteValue\").setAttribute(\"flex\", 1);\n>+            col = document.getAnonymousElementByAttribute(this, \"anonid\", \"treecolAutoCompleteValue\")\n>+            if (col)\n>+              col.setAttribute(\"flex\", 1);\n>             this.removeColumn(\"treecolAutoCompleteComment\");\n>           } else if (val && !this.mShowCommentColumn) {\n>             // reset the flex on the value column and add the comment column\n>-            document.getElementById(\"treecolAutoCompleteValue\").setAttribute(\"flex\", 2);\n>-            this.addColumn({id: \"treecolAutoCompleteComment\", flex: 1});\n>+            col = document.getAnonymousElementByAttribute(this, \"anonid\", \"treecolAutoCompleteValue\")\n>+            if (col)\n>+              col.setAttribute(\"flex\", 2);\n\nWhy are you null-checking here?\n\n>+            this.addColumn({anonid: \"treecolAutoCompleteComment\", flex: 1});\n>           }\n>           this.mShowCommentColumn = val;\n>           return val;\n>         ]]></setter>\n>       </property>\n> \n>       <method name=\"addColumn\">\n>         <parameter name=\"aAttrs\"/>\n>@@ -663,17 +668,20 @@\n>           this.treecols.appendChild(col);\n>           return col;\n>         ]]></body>\n>       </method>\n> \n>       <method name=\"removeColumn\">\n>         <parameter name=\"aColId\"/>\n>         <body><![CDATA[\n>-          return this.treecols.removeChild(document.getElementById(aColId));\n>+          var col = document.getAnonymousElementByAttribute(this, \"anonid\", aColId);\n>+          if (col)\n>+            return this.treecols.removeChild(col);\n>+          return null;\n\nditto\n\n>Index: components/autocomplete/src/nsAutoCompleteController.cpp\n>===================================================================\n\n> NS_IMETHODIMP\n> nsAutoCompleteController::GetCellProperties(PRInt32 row, nsITreeColumn* col, nsISupportsArray* properties)\n> {\n>   GetRowProperties(row, properties);\n>+  GetColumnProperties(col, properties);\n>   \n>   if (row >= 0) {\n>     nsAutoString className;\n>     GetStyleAt(row, className);\n>     if (!className.IsEmpty()) {\n>       nsCOMPtr<nsIAtomService> atomSvc = do_GetService(\"@mozilla.org/atom-service;1\");\n>       nsCOMPtr<nsIAtom> atom;\n>       atomSvc->GetAtom(className.get(), getter_AddRefs(atom));\n>@@ -656,16 +657,29 @@ nsAutoCompleteController::GetCellPropert\n>   }\n>   \n>   return NS_OK;\n> }\n> \n> NS_IMETHODIMP\n> nsAutoCompleteController::GetColumnProperties(nsITreeColumn* col, nsISupportsArray* properties)\n> {\n>+  // Add the anonid to the list of properties.\n>+  nsIDOMElement* elt;\n>+  col->GetElement(&elt);\n>+\n\nnsCOMfiy this:\nnsCOMPtr<nsIDOMElement> elt;\ncol->GetElement(getter_AddRefs(elm));\n\n\n> NS_IMETHODIMP\n> nsAutoCompleteController::GetCellText(PRInt32 row, nsITreeColumn* col, nsAString& _retval)\n> {\n>-  const PRUnichar* colID;\n>-  col->GetIdConst(&colID);\n>+  nsIDOMElement* elt;\n>+  col->GetElement(&elt);\n>+\n\nditto."}, {"creation_time": "2006-04-19T08:00:35Z", "tags": [], "author": "tony@ponderer.org", "is_private": false, "creator": "tony@ponderer.org", "attachment_id": 218951, "bug_id": 328934, "count": 6, "text": "Created attachment 218951\nuse anonid instead of id\n\nincorporate changes from review", "raw_text": "incorporate changes from review", "time": "2006-04-19T08:00:35Z", "id": 2832433}, {"attachment_id": 218951, "creator": "asaf@sent.com", "bug_id": 328934, "text": "Comment on attachment 218951\nuse anonid instead of id\n\nyou've forgotten some diff flags here (-up8 would be good).", "count": 7, "raw_text": "you've forgotten some diff flags here (-up8 would be good).", "time": "2006-04-19T08:03:39Z", "id": 2832436, "creation_time": "2006-04-19T08:03:39Z", "tags": [], "author": "asaf@sent.com", "is_private": false}, {"author": "tony@ponderer.org", "creation_time": "2006-04-19T08:04:32Z", "tags": [], "is_private": false, "creator": "tony@ponderer.org", "attachment_id": 218952, "id": 2832438, "time": "2006-04-19T08:04:32Z", "raw_text": "whoops, forgot to use diff -u", "count": 8, "text": "Created attachment 218952\nuse anonid rather than id\n\nwhoops, forgot to use diff -u", "bug_id": 328934}, {"creator": "asaf@sent.com", "attachment_id": null, "id": 2832468, "time": "2006-04-19T08:51:29Z", "raw_text": "Tony, i'm not sure i understand comment 2, which style sheet are you referring to?", "text": "Tony, i'm not sure i understand comment 2, which style sheet are you referring to?", "count": 9, "bug_id": 328934, "author": "asaf@sent.com", "tags": [], "creation_time": "2006-04-19T08:51:29Z", "is_private": false}, {"creator": "tony@ponderer.org", "attachment_id": null, "bug_id": 328934, "text": "I'm referring to the CSS that gets applied to the URL bar.  In themes/*/navigator/navigator.css, styles are applied to .autocomplete-treebody::-moz-tree-cell-text(comment)", "count": 10, "raw_text": "I'm referring to the CSS that gets applied to the URL bar.  In themes/*/navigator/navigator.css, styles are applied to .autocomplete-treebody::-moz-tree-cell-text(comment)", "time": "2006-04-19T17:35:45Z", "id": 2833041, "tags": [], "creation_time": "2006-04-19T17:35:45Z", "author": "tony@ponderer.org", "is_private": false}, {"is_private": false, "author": "asaf@sent.com", "creation_time": "2006-04-27T10:23:33Z", "tags": [], "id": 2840411, "time": "2006-04-27T10:23:33Z", "raw_text": "r=mano if you null check |elt| in |GetCellText| and |GetColumnPropertie|.\n\nPlease note here if you need me to check this in (and also, if you need this on the branch).", "count": 11, "text": "Comment on attachment 218952\nuse anonid rather than id\n\nr=mano if you null check |elt| in |GetCellText| and |GetColumnPropertie|.\n\nPlease note here if you need me to check this in (and also, if you need this on the branch).", "bug_id": 328934, "attachment_id": 218952, "creator": "asaf@sent.com"}, {"attachment_id": null, "creator": "asaf@sent.com", "text": "hrm, also: does http://lxr.mozilla.org/seamonkey/source/browser/themes/pinstripe/browser/browser.css#686\nneed update (see also winstripe version)", "count": 12, "bug_id": 328934, "id": 2840419, "time": "2006-04-27T10:37:03Z", "raw_text": "hrm, also: does http://lxr.mozilla.org/seamonkey/source/browser/themes/pinstripe/browser/browser.css#686\nneed update (see also winstripe version)", "creation_time": "2006-04-27T10:37:03Z", "tags": [], "author": "asaf@sent.com", "is_private": false}, {"is_private": false, "tags": [], "creation_time": "2006-08-06T21:13:31Z", "author": "martijn.martijn@gmail.com", "bug_id": 328934, "text": "This patch has r+ but needs a little polish, not?", "count": 13, "time": "2006-08-06T21:13:31Z", "raw_text": "This patch has r+ but needs a little polish, not?", "id": 2936081, "creator": "martijn.martijn@gmail.com", "attachment_id": null}, {"is_private": false, "tags": [], "creation_time": "2018-05-24T17:04:22Z", "author": "automation@bmo.tld", "bug_id": 328934, "text": "Per policy at https://wiki.mozilla.org/Bug_Triage/Projects/Bug_Handling/Bug_Husbandry#Inactive_Bugs. If this bug is not an enhancement request or a bug not present in a supported release of Firefox, then it may be reopened.", "count": 14, "time": "2018-05-24T17:04:22Z", "raw_text": "Per policy at https://wiki.mozilla.org/Bug_Triage/Projects/Bug_Handling/Bug_Husbandry#Inactive_Bugs. If this bug is not an enhancement request or a bug not present in a supported release of Firefox, then it may be reopened.", "id": 13355403, "attachment_id": null, "creator": "automation@bmo.tld"}]}}}