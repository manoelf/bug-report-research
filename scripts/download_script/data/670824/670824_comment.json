{"bugs": {"670824": {"comments": [{"bug_id": 670824, "count": 0, "id": 5585898, "raw_text": "User Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.112 Safari/534.30\n\nSteps to reproduce:\n\nIf I attempt to type a 'Pasint' character in Burmese script (a smaller version of a  character below an existing character), FF instead inserts a generic numbered unicode character box. Pasints are input by pressing ` and the the letter desired as a pasint. In the example graphics attached, i have type q ` q using the Zawgyi2009 Burmese keyboard (File 'burma-keyboard-tk-0.1.1.tar.gz' from here: http://code.google.com/p/zawgyi-keyboard/downloads/list)\n\n\n\n\nActual results:\n\nInstead of initiating a pasint for the next typed haracter, FF instead inserts a generic numbered unicode character box.\n\nIn the screenshot included, the top half is Firefox 3.6 properly rendering the pasint characted. In the bottom half, I have shown how Firefox 4.0 cannot render these characters. The windows version appears to not have this problem and the pasint characters can be typed in Firefox 4 & 5\n\n\nExpected results:\n\nTyping the ` character should have typed nothing but indicated that the next character to be typed would be a pasint. Thus, the next character after that should have been the smaller pasint character and placed below the first and smaller in size like the Firefox 3.6 example", "attachment_id": 545306, "text": "Created attachment 545306\nFirefox Zawgyi Keyboard Problem.png\n\nUser Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.112 Safari/534.30\n\nSteps to reproduce:\n\nIf I attempt to type a 'Pasint' character in Burmese script (a smaller version of a  character below an existing character), FF instead inserts a generic numbered unicode character box. Pasints are input by pressing ` and the the letter desired as a pasint. In the example graphics attached, i have type q ` q using the Zawgyi2009 Burmese keyboard (File 'burma-keyboard-tk-0.1.1.tar.gz' from here: http://code.google.com/p/zawgyi-keyboard/downloads/list)\n\n\n\n\nActual results:\n\nInstead of initiating a pasint for the next typed haracter, FF instead inserts a generic numbered unicode character box.\n\nIn the screenshot included, the top half is Firefox 3.6 properly rendering the pasint characted. In the bottom half, I have shown how Firefox 4.0 cannot render these characters. The windows version appears to not have this problem and the pasint characters can be typed in Firefox 4 & 5\n\n\nExpected results:\n\nTyping the ` character should have typed nothing but indicated that the next character to be typed would be a pasint. Thus, the next character after that should have been the smaller pasint character and placed below the first and smaller in size like the Firefox 3.6 example", "tags": [], "time": "2011-07-12T02:37:21Z", "creation_time": "2011-07-12T02:37:21Z", "author": "itsupportcm@gmail.com", "is_private": false, "creator": "itsupportcm@gmail.com"}, {"count": 1, "bug_id": 670824, "attachment_id": null, "raw_text": "Please let me know if I can assist in any way with further screenshots, tests, or assisting anyone in getting the Zawgyi keyboard installed in Linux and how to reproduce the bug. The above tests were done in Mint 10, an Ubuntu 10.10 downstream distro.", "id": 5588220, "creator": "itsupportcm@gmail.com", "is_private": false, "author": "itsupportcm@gmail.com", "creation_time": "2011-07-13T02:43:39Z", "time": "2011-07-13T02:43:39Z", "tags": [], "text": "Please let me know if I can assist in any way with further screenshots, tests, or assisting anyone in getting the Zawgyi keyboard installed in Linux and how to reproduce the bug. The above tests were done in Mint 10, an Ubuntu 10.10 downstream distro."}, {"creation_time": "2011-07-13T04:15:45Z", "author": "masayuki@d-toybox.com", "text": "Sounds like you can input the character via IME but the character isn't rendered correctly, right? If so, this should be a bug of gfx or you haven't installed such fonts. Can you see the characters on web pages?", "time": "2011-07-13T04:15:45Z", "tags": [], "bug_id": 670824, "is_private": false, "creator": "masayuki@d-toybox.com", "count": 2, "id": 5588283, "attachment_id": null, "raw_text": "Sounds like you can input the character via IME but the character isn't rendered correctly, right? If so, this should be a bug of gfx or you haven't installed such fonts. Can you see the characters on web pages?"}, {"text": "(In reply to comment #2)\n\n> Sounds like you can input the character via IME but the character isn't\n> rendered correctly, right?\n\nThe grave accent key shouldn't render a character at all, it should cause the next character to appear smaller and below the current character (see attachment for this bug). For example, in the screenshot I typed the 3 character sequence q`q but only 2 characters are rendered (or should be).\n\n> If so, this should be a bug of gfx or you haven't installed such fonts.\n\nI don't think it is a graphics bug, it's not a glitchy image but instead a character inserted that shouldn't be. I've definitely installed the font or you wouldn't see Burmese script in the screenshots at all.\n\n> Can you see the characters on web pages?\n\nYes, that's the font shown. No fonts were installed or removed between screenshots, it works in FF 3.6 and other apps but not FF 4+", "time": "2011-07-13T07:09:08Z", "tags": [], "creation_time": "2011-07-13T07:09:08Z", "author": "itsupportcm@gmail.com", "is_private": false, "creator": "itsupportcm@gmail.com", "id": 5588439, "raw_text": "(In reply to comment #2)\n\n> Sounds like you can input the character via IME but the character isn't\n> rendered correctly, right?\n\nThe grave accent key shouldn't render a character at all, it should cause the next character to appear smaller and below the current character (see attachment for this bug). For example, in the screenshot I typed the 3 character sequence q`q but only 2 characters are rendered (or should be).\n\n> If so, this should be a bug of gfx or you haven't installed such fonts.\n\nI don't think it is a graphics bug, it's not a glitchy image but instead a character inserted that shouldn't be. I've definitely installed the font or you wouldn't see Burmese script in the screenshots at all.\n\n> Can you see the characters on web pages?\n\nYes, that's the font shown. No fonts were installed or removed between screenshots, it works in FF 3.6 and other apps but not FF 4+", "attachment_id": null, "bug_id": 670824, "count": 3}, {"creation_time": "2011-07-13T08:16:24Z", "author": "masayuki@d-toybox.com", "text": "Let me see...\n\nhttp://www.unicode.org/charts/PDF/U1000.pdf\n\nYou typed U+1006, U+103F, U+1006, right? Then, should the inputted characters keep the binary sequence? I.e.,\n\ndata:text/html,&%23x1006;&%23x103F;&%23x1006;\n\nthis URI should show the character which is rendered on Fx3.6? Or, does IME convert the sequence to another unicode character? Or, is typed U+1006 unintentional thing?\n\nSo, I want to know what unicode characters should be inputted.\n\n> data:text/html,<input id=\"i\"><button onclick=\"var s = ''; var val = document.getElementById('i').value; for (var i = 0; i < val.length; i++) { s += 'U+' + val.charCodeAt(i).toString(16) + ','; } alert(s);\">show the unicode characters</button>\n\nYou can check it on this test page.", "tags": [], "time": "2011-07-13T08:16:24Z", "bug_id": 670824, "is_private": false, "creator": "masayuki@d-toybox.com", "count": 4, "id": 5588507, "attachment_id": null, "raw_text": "Let me see...\n\nhttp://www.unicode.org/charts/PDF/U1000.pdf\n\nYou typed U+1006, U+103F, U+1006, right? Then, should the inputted characters keep the binary sequence? I.e.,\n\ndata:text/html,&%23x1006;&%23x103F;&%23x1006;\n\nthis URI should show the character which is rendered on Fx3.6? Or, does IME convert the sequence to another unicode character? Or, is typed U+1006 unintentional thing?\n\nSo, I want to know what unicode characters should be inputted.\n\n> data:text/html,<input id=\"i\"><button onclick=\"var s = ''; var val = document.getElementById('i').value; for (var i = 0; i < val.length; i++) { s += 'U+' + val.charCodeAt(i).toString(16) + ','; } alert(s);\">show the unicode characters</button>\n\nYou can check it on this test page."}, {"bug_id": 670824, "count": 5, "text": "(In reply to comment #4)\n> Let me see...\n> \n> http://www.unicode.org/charts/PDF/U1000.pdf\n> \n> You typed U+1006, U+103F, U+1006, right? Then, should the inputted\n> characters keep the binary sequence? I.e.,\n> \n> data:text/html,&%23x1006;&%23x103F;&%23x1006;\n> \n> this URI should show the character which is rendered on Fx3.6? Or, does IME\n> convert the sequence to another unicode character? Or, is typed U+1006\n> unintentional thing?\n\nYes\n> \n> So, I want to know what unicode characters should be inputted.\n> \n\nAs best as I can tell using the character map app in Ubuntu, q`q should render U+1067. I mean 1067 shown in Character Map. This is totally different from the U+1067 character shown in the Unicode pdf document (U100) you provided. If you load either the Zawgi2009 font or the Myanmar3 font (which *is* unicode), you should see that both have a pasint character mapped to U+1067 and not the character shown in the Unicode standard doc. In fact, I don't even see the pasint characters in the Unicode doc you provided. Is it possible in unicode to define that a keyboard input combination can produce a smaller version of another character in a different position? I'm way over my head here and don't know much about this...\n\n> > data:text/html,<input id=\"i\"><button onclick=\"var s = ''; var val = document.getElementById('i').value; for (var i = 0; i < val.length; i++) { s += 'U+' + val.charCodeAt(i).toString(16) + ','; } alert(s);\">show the unicode characters</button>\n> \n> You can check it on this test page.\n\nI think a little background on the issue is needed. Zawgyi is not unicode compliant but *is* by far the main font and keyboard used by Burmese people. As I understand it, this is because the Burmese unicode set has not been finalized and people are more familiar with the Zawgyi typing style which mimics typwriters.\n\nI'm not sure which unicode character sequence are being typed, only which *keys* are being type. I'm not sure how they are mapped. The U+1006, U+103F, U+1006 sequence you stated does seem to be correct based on the characters seen in FF$+, however as I mentioned the ` should not actually type a character when using the zawgyi keyboard, only when using the unicode keyboard iirc.\n\nIf I select \"Show Current Layout\" for the Zawgyi keyboard and I have no Burmese unicode fonts installed. It shows the following layout I just attached as the second attachment (zawgyi layout comparison). As you can see, in Zawgyi keyboard mode the grave accent does appear to be mapped to U+103F but this character is blank in the zawgyi font according to character map (though could have negative kerning or something to put it back under the previous character.\n\nHere's the results of attempting to type Pasint characters in various applications with Zawgyi 2009 Font + Keyboard with *and* without a Burmese unicode font present:\n\nWithout a unicode font installed:\nOpenOffice 3.2.x:     Sequence q`q properly types the pasint character\nFF 3.6.x web field:   Sequence q`q properly types the pasint character\nFF 3.6.x searchbox:   Sequence q`q properly types the pasint character\ngedit:\t              Sequence q`q properly types the pasint character\nChrome 12 searchbar:  Sequence q`q properly types the pasint character\nChrome 12 web field:  Sequence q`q does NOT type the pasint character correctly, grave accent produces no results\nFF 4+ web field:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F character box\nFF 4+ searchbox:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F character box\n\nWith a unicode font installed:\nOpenOffice 3.2.x:     Sequence q`q properly types the pasint character\nFF 3.6.x web field:   Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nFF 3.6.x searchbox:   Sequence q`q properly types the pasint character\ngedit:\t             Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nChrome 12 searchbar:  Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nChrome 12 webfield:   Sequence q`q does NOT type the pasint character correctly, grave accent produces no results\nFF 4+ web field:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nFF 4+ searchbox:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)", "time": "2011-07-26T03:25:49Z", "tags": [], "creation_time": "2011-07-26T03:25:49Z", "author": "itsupportcm@gmail.com", "is_private": false, "creator": "itsupportcm@gmail.com", "id": 5613040, "raw_text": "(In reply to comment #4)\n> Let me see...\n> \n> http://www.unicode.org/charts/PDF/U1000.pdf\n> \n> You typed U+1006, U+103F, U+1006, right? Then, should the inputted\n> characters keep the binary sequence? I.e.,\n> \n> data:text/html,&%23x1006;&%23x103F;&%23x1006;\n> \n> this URI should show the character which is rendered on Fx3.6? Or, does IME\n> convert the sequence to another unicode character? Or, is typed U+1006\n> unintentional thing?\n\nYes\n> \n> So, I want to know what unicode characters should be inputted.\n> \n\nAs best as I can tell using the character map app in Ubuntu, q`q should render U+1067. I mean 1067 shown in Character Map. This is totally different from the U+1067 character shown in the Unicode pdf document (U100) you provided. If you load either the Zawgi2009 font or the Myanmar3 font (which *is* unicode), you should see that both have a pasint character mapped to U+1067 and not the character shown in the Unicode standard doc. In fact, I don't even see the pasint characters in the Unicode doc you provided. Is it possible in unicode to define that a keyboard input combination can produce a smaller version of another character in a different position? I'm way over my head here and don't know much about this...\n\n> > data:text/html,<input id=\"i\"><button onclick=\"var s = ''; var val = document.getElementById('i').value; for (var i = 0; i < val.length; i++) { s += 'U+' + val.charCodeAt(i).toString(16) + ','; } alert(s);\">show the unicode characters</button>\n> \n> You can check it on this test page.\n\nI think a little background on the issue is needed. Zawgyi is not unicode compliant but *is* by far the main font and keyboard used by Burmese people. As I understand it, this is because the Burmese unicode set has not been finalized and people are more familiar with the Zawgyi typing style which mimics typwriters.\n\nI'm not sure which unicode character sequence are being typed, only which *keys* are being type. I'm not sure how they are mapped. The U+1006, U+103F, U+1006 sequence you stated does seem to be correct based on the characters seen in FF$+, however as I mentioned the ` should not actually type a character when using the zawgyi keyboard, only when using the unicode keyboard iirc.\n\nIf I select \"Show Current Layout\" for the Zawgyi keyboard and I have no Burmese unicode fonts installed. It shows the following layout I just attached as the second attachment (zawgyi layout comparison). As you can see, in Zawgyi keyboard mode the grave accent does appear to be mapped to U+103F but this character is blank in the zawgyi font according to character map (though could have negative kerning or something to put it back under the previous character.\n\nHere's the results of attempting to type Pasint characters in various applications with Zawgyi 2009 Font + Keyboard with *and* without a Burmese unicode font present:\n\nWithout a unicode font installed:\nOpenOffice 3.2.x:     Sequence q`q properly types the pasint character\nFF 3.6.x web field:   Sequence q`q properly types the pasint character\nFF 3.6.x searchbox:   Sequence q`q properly types the pasint character\ngedit:\t              Sequence q`q properly types the pasint character\nChrome 12 searchbar:  Sequence q`q properly types the pasint character\nChrome 12 web field:  Sequence q`q does NOT type the pasint character correctly, grave accent produces no results\nFF 4+ web field:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F character box\nFF 4+ searchbox:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F character box\n\nWith a unicode font installed:\nOpenOffice 3.2.x:     Sequence q`q properly types the pasint character\nFF 3.6.x web field:   Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nFF 3.6.x searchbox:   Sequence q`q properly types the pasint character\ngedit:\t             Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nChrome 12 searchbar:  Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nChrome 12 webfield:   Sequence q`q does NOT type the pasint character correctly, grave accent produces no results\nFF 4+ web field:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)\nFF 4+ searchbox:      Sequence q`q does NOT type the pasint character correctly, grave accent produces U+103F unicode character (Great Sa letter)", "attachment_id": null}, {"creator": "itsupportcm@gmail.com", "is_private": false, "count": 6, "author": "itsupportcm@gmail.com", "creation_time": "2011-07-26T03:27:40Z", "time": "2011-07-26T03:27:40Z", "bug_id": 670824, "tags": [], "text": "clarification: my first 'Yes' response was to your question \"this URI should show the character which is rendered on Fx3.6?\"", "attachment_id": null, "raw_text": "clarification: my first 'Yes' response was to your question \"this URI should show the character which is rendered on Fx3.6?\"", "id": 5613042}, {"tags": [], "bug_id": 670824, "time": "2011-07-26T04:16:39Z", "text": "Hmm, sounds like IME is still working correctly on Fx4. And sounds like this is an issue of gfx with such irregular font...", "author": "masayuki@d-toybox.com", "creation_time": "2011-07-26T04:16:39Z", "count": 7, "creator": "masayuki@d-toybox.com", "is_private": false, "id": 5613077, "raw_text": "Hmm, sounds like IME is still working correctly on Fx4. And sounds like this is an issue of gfx with such irregular font...", "attachment_id": null}, {"attachment_id": null, "raw_text": "I'm not sure why you classify it as an issue with gfx since it is typing a character when a character should not be typed, and it works fine with FF3.6.x and earlier, OpenOffice, Gedit. FF4/5 is attempting to type the 103F character when inputting pasint characters and no other app is doing this (when unicode burmese fonts are not present).", "id": 5613092, "creator": "itsupportcm@gmail.com", "is_private": false, "count": 8, "author": "itsupportcm@gmail.com", "creation_time": "2011-07-26T04:35:05Z", "time": "2011-07-26T04:35:05Z", "tags": [], "bug_id": 670824, "text": "I'm not sure why you classify it as an issue with gfx since it is typing a character when a character should not be typed, and it works fine with FF3.6.x and earlier, OpenOffice, Gedit. FF4/5 is attempting to type the 103F character when inputting pasint characters and no other app is doing this (when unicode burmese fonts are not present)."}, {"count": 9, "bug_id": 670824, "attachment_id": null, "raw_text": "Moving all open Keyboard/IME handling bugs to DOM: UI Events & Focus Handling component.", "id": 14708887, "is_private": false, "creator": "masayuki@d-toybox.com", "creation_time": "2020-03-23T01:18:09Z", "author": "masayuki@d-toybox.com", "text": "Moving all open Keyboard/IME handling bugs to DOM: UI Events & Focus Handling component.", "time": "2020-03-23T01:18:09Z", "tags": []}]}}, "comments": {}}