{"bugs": {"651482": {"comments": [{"is_private": false, "tags": [], "bug_id": 651482, "creation_time": "2011-04-20T13:32:14Z", "raw_text": "User-Agent:       Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\n\nFirefox shows bitmap images with a yellow transparent layer. In the provided link, actual image is gray. But Firefox shows it wrong.\n\n\n\nReproducible: Always", "id": 5421102, "time": "2011-04-20T13:32:14Z", "attachment_id": null, "creator": "a471747@rtrtr.com", "author": "a471747@rtrtr.com", "text": "User-Agent:       Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\n\nFirefox shows bitmap images with a yellow transparent layer. In the provided link, actual image is gray. But Firefox shows it wrong.\n\n\n\nReproducible: Always", "count": 0}, {"author": "mozilla@ahlblom.eu", "time": "2011-04-20T15:23:19Z", "id": 5421282, "text": "Alleged bug reproduced with new clean profile in:\nMozilla/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko/20110420 Firefox/6.0a1\n\nChromium doesn't show the image at all.\nMozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.205 Safari/534.16\n\nThe server sends the image with \"Content-Type: image/jpeg\":\n\n$ wget -S http://www.mediafire.com/imgbnc.php/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\n--2011-04-20 17:01:40--  http://www.mediafire.com/imgbnc.php/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\nResolving www.mediafire.com... 205.196.120.8, 205.196.120.6\nConnecting to www.mediafire.com|205.196.120.8|:80... connected.\nHTTP request sent, awaiting response... \n  HTTP/1.1 302 Found\n  Date: Wed, 20 Apr 2011 15:01:35 GMT\n  Location: http://img5.mediafire.com/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\n  Vary: Accept-Encoding\n  Cache-Control: private\n  Content-Length: 0\n  Connection: close\n  Content-Type: text/html; charset=UTF-8\n  Server: MediaFire\nLocation: http://img5.mediafire.com/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg [following]\n--2011-04-20 17:01:41--  http://img5.mediafire.com/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\nResolving img5.mediafire.com... 205.196.123.205\nConnecting to img5.mediafire.com|205.196.123.205|:80... connected.\nHTTP request sent, awaiting response... \n  HTTP/1.1 200 OK\n  Server: LRBD-88\n  Date: Wed, 20 Apr 2011 15:01:35 GMT\n  Connection: close\n  Accept-Ranges: bytes\n  Content-transfer-encoding: binary\n  Content-Length: 706666\n  \"4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca2.jpg\"\n  Content-Type: image/jpeg\nLength: 706666 (690K) [image/jpeg]\nSaving to: \u201c4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\u201d\n\n100%[============================================================================================================================>] 706,666      315K/s   in 2.2s    \n\n2011-04-20 17:01:43 (315 KB/s) - \u201c4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\u201d saved [706666/706666]\n\n\nThe file, with a jpg extension,  isn't recognized as a jpeg image:\n\n$ file 4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\n4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg: data\n\n\nThe image starts with 42 4d, thus it's actually a bmp image.\n$ hexdump -C 4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg |head -n 1\n00000000  42 4d 6a c8 0a 00 00 00  00 00 46 00 00 00 38 00  |BMj.......F...8.|\n\nI renamed the file to foo.bmp. When I opened the bmp-file in GIMP it was shown a greyscale image, but when I opened the bmp-file in Firefox it still had a yellow tint.", "count": 1, "attachment_id": null, "is_private": false, "raw_text": "Alleged bug reproduced with new clean profile in:\nMozilla/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko/20110420 Firefox/6.0a1\n\nChromium doesn't show the image at all.\nMozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.205 Safari/534.16\n\nThe server sends the image with \"Content-Type: image/jpeg\":\n\n$ wget -S http://www.mediafire.com/imgbnc.php/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\n--2011-04-20 17:01:40--  http://www.mediafire.com/imgbnc.php/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\nResolving www.mediafire.com... 205.196.120.8, 205.196.120.6\nConnecting to www.mediafire.com|205.196.120.8|:80... connected.\nHTTP request sent, awaiting response... \n  HTTP/1.1 302 Found\n  Date: Wed, 20 Apr 2011 15:01:35 GMT\n  Location: http://img5.mediafire.com/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\n  Vary: Accept-Encoding\n  Cache-Control: private\n  Content-Length: 0\n  Connection: close\n  Content-Type: text/html; charset=UTF-8\n  Server: MediaFire\nLocation: http://img5.mediafire.com/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg [following]\n--2011-04-20 17:01:41--  http://img5.mediafire.com/4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\nResolving img5.mediafire.com... 205.196.123.205\nConnecting to img5.mediafire.com|205.196.123.205|:80... connected.\nHTTP request sent, awaiting response... \n  HTTP/1.1 200 OK\n  Server: LRBD-88\n  Date: Wed, 20 Apr 2011 15:01:35 GMT\n  Connection: close\n  Accept-Ranges: bytes\n  Content-transfer-encoding: binary\n  Content-Length: 706666\n  \"4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca2.jpg\"\n  Content-Type: image/jpeg\nLength: 706666 (690K) [image/jpeg]\nSaving to: \u201c4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\u201d\n\n100%[============================================================================================================================>] 706,666      315K/s   in 2.2s    \n\n2011-04-20 17:01:43 (315 KB/s) - \u201c4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\u201d saved [706666/706666]\n\n\nThe file, with a jpg extension,  isn't recognized as a jpeg image:\n\n$ file 4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg\n4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg: data\n\n\nThe image starts with 42 4d, thus it's actually a bmp image.\n$ hexdump -C 4d286a3355459056a5765eeabd3f0916a5cf1d28784543afcc3ef4b08b4a5ca25g.jpg |head -n 1\n00000000  42 4d 6a c8 0a 00 00 00  00 00 46 00 00 00 38 00  |BMj.......F...8.|\n\nI renamed the file to foo.bmp. When I opened the bmp-file in GIMP it was shown a greyscale image, but when I opened the bmp-file in Firefox it still had a yellow tint.", "bug_id": 651482, "creation_time": "2011-04-20T15:23:19Z", "creator": "mozilla@ahlblom.eu", "tags": []}, {"time": "2011-04-20T17:05:58Z", "id": 5421538, "is_private": false, "creation_time": "2011-04-20T17:05:58Z", "bug_id": 651482, "raw_text": "Wild guesses after playing around with a hex-editor and GIMP:\n\nI think the problem is connected either with the 56 byte BITMAPV3INFOHEADER with its mandatory alpha channel or with the color depth of 32 bits per pixel.", "tags": [], "author": "mozilla@ahlblom.eu", "text": "Wild guesses after playing around with a hex-editor and GIMP:\n\nI think the problem is connected either with the 56 byte BITMAPV3INFOHEADER with its mandatory alpha channel or with the color depth of 32 bits per pixel.", "count": 2, "attachment_id": null, "creator": "mozilla@ahlblom.eu"}, {"id": 5421756, "time": "2011-04-20T18:13:29Z", "is_private": false, "tags": [], "raw_text": "I've created a minimal 32 bit BITMAPV3INFOHEADER bmp image in GIMP, just 78 bytes big.\n\nThe left pixel is black and the right one is white. The white pixel gets yellow in Firefox. Use zoom or watch the tab icon :-)", "bug_id": 651482, "creation_time": "2011-04-20T18:13:29Z", "author": "mozilla@ahlblom.eu", "count": 3, "text": "Created attachment 527325\nA 2 px by 1 px, 78 bytes bmp file. Black pixel to the left, white to the right.\n\nI've created a minimal 32 bit BITMAPV3INFOHEADER bmp image in GIMP, just 78 bytes big.\n\nThe left pixel is black and the right one is white. The white pixel gets yellow in Firefox. Use zoom or watch the tab icon :-)", "attachment_id": 527325, "creator": "mozilla@ahlblom.eu"}, {"is_private": false, "bug_id": 651482, "creation_time": "2011-04-20T21:23:41Z", "raw_text": "This should be reasonably straightforward for someone who's reasonably adept at programming in C or C++. The code in question is in modules/libpr0n/decoders/nsBMPDecoder.cpp in nsBMPDecoder::WriteInternal(). This is the function that actually interprets the data that's coming in from the disk/network/etc; it gets called with the raw data, and it creates an RGB buffer that it passes to RasterImage::AppendFrame().", "tags": [], "time": "2011-04-20T21:23:41Z", "id": 5422368, "attachment_id": null, "creator": "joe@drew.ca", "author": "joe@drew.ca", "text": "This should be reasonably straightforward for someone who's reasonably adept at programming in C or C++. The code in question is in modules/libpr0n/decoders/nsBMPDecoder.cpp in nsBMPDecoder::WriteInternal(). This is the function that actually interprets the data that's coming in from the disk/network/etc; it gets called with the raw data, and it creates an RGB buffer that it passes to RasterImage::AppendFrame().", "count": 4}, {"text": "OK yeah, it's time for one of my wild guesses again! :D\n\nI think the problem is that nsBMPDecoder::WriteInternal() doesn't honor the channel bit masks for 32 bit BITMAPV3INFOHEADER bmp files with the BI_BITFIELDS compression method.\n\nIn line 329 in modules/libpr0n/decoders/nsBMPDecoder.cpp the data is in XBGR order, but in line 372 it's suddenly assumed that the data is stored as BGRX.\n\nThe black pixel is stored as 00 00 00 00. \nThe white pixel is stored as 00 ff ff ff.\n\nExcerpt from line 369 and on:\n------------------------------\ncase 32:\ncase 24:\n   while (lpos > 0) {\n     SetPixel(d, p[2], p[1], p[0]);\n     p += 2;\n     --lpos;\n     if (mBIH.bpp == 32)\n       p++; // Padding byte\n     ++p;\n   }\n------------------------------\n\nThus the black pixel calls SetPixel() with RBG 00 00 00. By a coincident - no problem! But, the white pixel calls SetPixel() with RGB ff ff 00, thus the blue channel gets zeroed by the byte from the non-used alpha channel - which causes the yellow tint.\n\nAs seen above the code jumps over a padding byte afterwards, just blindly assuming that the padding comes after the RGB data.\n\nThe channel bit masks in the appended bw_but_yellow.bmp-file look as follows:\nR 36h: 0000 00ff\nG 3ah: 0000 ff00\nB 3eh: 00ff 0000\na 42h: 0000 0000\n\nHere the padding comes *before* the RGB data - but of course the bit masks could be arbitrary!\n\nFirefox doesn't care anyway... :-(", "count": 5, "author": "mozilla@ahlblom.eu", "time": "2011-04-21T22:46:55Z", "id": 5425226, "raw_text": "OK yeah, it's time for one of my wild guesses again! :D\n\nI think the problem is that nsBMPDecoder::WriteInternal() doesn't honor the channel bit masks for 32 bit BITMAPV3INFOHEADER bmp files with the BI_BITFIELDS compression method.\n\nIn line 329 in modules/libpr0n/decoders/nsBMPDecoder.cpp the data is in XBGR order, but in line 372 it's suddenly assumed that the data is stored as BGRX.\n\nThe black pixel is stored as 00 00 00 00. \nThe white pixel is stored as 00 ff ff ff.\n\nExcerpt from line 369 and on:\n------------------------------\ncase 32:\ncase 24:\n   while (lpos > 0) {\n     SetPixel(d, p[2], p[1], p[0]);\n     p += 2;\n     --lpos;\n     if (mBIH.bpp == 32)\n       p++; // Padding byte\n     ++p;\n   }\n------------------------------\n\nThus the black pixel calls SetPixel() with RBG 00 00 00. By a coincident - no problem! But, the white pixel calls SetPixel() with RGB ff ff 00, thus the blue channel gets zeroed by the byte from the non-used alpha channel - which causes the yellow tint.\n\nAs seen above the code jumps over a padding byte afterwards, just blindly assuming that the padding comes after the RGB data.\n\nThe channel bit masks in the appended bw_but_yellow.bmp-file look as follows:\nR 36h: 0000 00ff\nG 3ah: 0000 ff00\nB 3eh: 00ff 0000\na 42h: 0000 0000\n\nHere the padding comes *before* the RGB data - but of course the bit masks could be arbitrary!\n\nFirefox doesn't care anyway... :-(", "creation_time": "2011-04-21T22:46:55Z", "bug_id": 651482, "creator": "mozilla@ahlblom.eu", "tags": [], "is_private": false, "attachment_id": null}, {"attachment_id": null, "creator": "joe@drew.ca", "author": "joe@drew.ca", "count": 6, "text": "It seems to me that we should fix that incorrect BGRX assumption!", "is_private": false, "raw_text": "It seems to me that we should fix that incorrect BGRX assumption!", "bug_id": 651482, "creation_time": "2011-04-26T16:29:03Z", "tags": [], "time": "2011-04-26T16:29:03Z", "id": 5432009}, {"is_private": false, "attachment_id": null, "bug_id": 651482, "creation_time": "2011-04-26T17:43:37Z", "raw_text": "I can imagine some possible levels of ambition here.\n\n1. Check that data is in BGRX order, with every color channel 1 byte, otherwise write an error message. Thus, the images in this bug will not be shown at all, but the log will tell us why.\n\n2. Check if data is in either BGRX or XBGR order, with every color channel 1 byte, otherwise write an error message. Make sure to put the padding byte correctly either after or before the color data.\n\n3. Honor the channel bit masks, but assume that the color channels have bit masks with only adjacent ones. Thus a color channel is not necessarily 8 bits wide.\n\n4. Honor all 2^32 possible channel bit masks. That means we can even handle interleaved color channels.\n\n\nLevel 1 - 3 are probably mostly an issue of how much code someone would like to write. Level 2 looks attractive in my eyes, requiring let's say just 10 lines of code, but it does not solve all future problems.\n\nLevel 4 may have some performance implications since all image data bits have to be compacted before further processing.\n\nIt's hard to know what kind of images are actually out there, but I assume level 2 above will cover most of the existing 32-bit BMP images. But I'm just guessing.\n\nAnother issue is what to do if the alpha channel actually is in use.", "tags": [], "creator": "mozilla@ahlblom.eu", "time": "2011-04-26T17:43:37Z", "author": "mozilla@ahlblom.eu", "id": 5432295, "text": "I can imagine some possible levels of ambition here.\n\n1. Check that data is in BGRX order, with every color channel 1 byte, otherwise write an error message. Thus, the images in this bug will not be shown at all, but the log will tell us why.\n\n2. Check if data is in either BGRX or XBGR order, with every color channel 1 byte, otherwise write an error message. Make sure to put the padding byte correctly either after or before the color data.\n\n3. Honor the channel bit masks, but assume that the color channels have bit masks with only adjacent ones. Thus a color channel is not necessarily 8 bits wide.\n\n4. Honor all 2^32 possible channel bit masks. That means we can even handle interleaved color channels.\n\n\nLevel 1 - 3 are probably mostly an issue of how much code someone would like to write. Level 2 looks attractive in my eyes, requiring let's say just 10 lines of code, but it does not solve all future problems.\n\nLevel 4 may have some performance implications since all image data bits have to be compacted before further processing.\n\nIt's hard to know what kind of images are actually out there, but I assume level 2 above will cover most of the existing 32-bit BMP images. But I'm just guessing.\n\nAnother issue is what to do if the alpha channel actually is in use.", "count": 7}, {"attachment_id": null, "creator": "mozilla@ahlblom.eu", "author": "mozilla@ahlblom.eu", "count": 8, "text": "Excerpt from the biBitCount 32 bit section of http://msdn.microsoft.com/en-us/library/dd183376%28v=VS.85%29.aspx:\n\n\"When the biCompression member is BI_BITFIELDS, bits set in each DWORD mask must be contiguous and should not overlap the bits of another mask. All the bits in the pixel do not need to be used.\"\n\nThat's straight from the horse's mouth what I wrote as point 3 in comment 7. That also means that we don't have to care about the theoretically possible interleave described under point 4.", "is_private": false, "tags": [], "creation_time": "2011-04-26T22:06:39Z", "bug_id": 651482, "raw_text": "Excerpt from the biBitCount 32 bit section of http://msdn.microsoft.com/en-us/library/dd183376%28v=VS.85%29.aspx:\n\n\"When the biCompression member is BI_BITFIELDS, bits set in each DWORD mask must be contiguous and should not overlap the bits of another mask. All the bits in the pixel do not need to be used.\"\n\nThat's straight from the horse's mouth what I wrote as point 3 in comment 7. That also means that we don't have to care about the theoretically possible interleave described under point 4.", "id": 5433203, "time": "2011-04-26T22:06:39Z"}, {"time": "2011-06-19T05:41:59Z", "id": 5541228, "raw_text": "32bpp BI_BITFIELDS bmps should work like 16bpp BI_BITFIELDS bmps. rgb masks are defined in the header. Existing code read and stored them into mBitFields but never actually used them for 32bpp and assumed 8-8-8 in a fixed format. Fixes related bug in CalcBitShift where if the left most bit in the 32bit unsigned int is a 1 it does not calculate the length of the bitmask correctly. Previously it incorrectly calculates mBitFields.redLeftShift as 8 on sample BMP when it should be 0, because it does not check past (<< 31) for a zero.", "creation_time": "2011-06-19T05:41:59Z", "bug_id": 651482, "tags": [], "is_private": false, "count": 9, "text": "Created attachment 540289\nmake use of bitfields defined in header for 32bpp BI_BITFIELDS BMPs.\n\n32bpp BI_BITFIELDS bmps should work like 16bpp BI_BITFIELDS bmps. rgb masks are defined in the header. Existing code read and stored them into mBitFields but never actually used them for 32bpp and assumed 8-8-8 in a fixed format. Fixes related bug in CalcBitShift where if the left most bit in the 32bit unsigned int is a 1 it does not calculate the length of the bitmask correctly. Previously it incorrectly calculates mBitFields.redLeftShift as 8 on sample BMP when it should be 0, because it does not check past (<< 31) for a zero.", "author": "jae.jang@gmail.com", "creator": "jae.jang@gmail.com", "attachment_id": 540289}, {"raw_text": "Review of attachment 540289:\n-----------------------------------------------------------------\n\nThis looks great. Can we get a test for this too? A reftest should be good enough: http://mxr.mozilla.org/mozilla-central/source/layout/tools/reftest/README.txt\n\nAlso, can you make sure we have a test that includes a 24-bit BMP?\n\n::: modules/libpr0n/decoders/nsBMPDecoder.cpp\n@@ +117,5 @@\n>          }\n>      }\n> +    if (pos == 32) {\n> +        aLength = 32 - aBegin;\n> +    }\n\nCan you add a comment here explaining what conditions lead to us getting to this state? i.e. \"if we didn't find a 1, blah blah blah\" :)\n\n@@ -379,4 @@\n>                            --lpos;\n> -                          if (mBIH.bpp == 32)\n> -                            p++; // Padding byte\n> -                          ++p;\n\nMan this code sucked! I'm glad you're fixing it.\n\nSo I guess 24 bit bitmaps are packed tightly?", "bug_id": 651482, "creation_time": "2011-06-21T19:18:52Z", "creator": "joe@drew.ca", "tags": [], "is_private": false, "attachment_id": 540289, "count": 10, "text": "Comment on attachment 540289\nmake use of bitfields defined in header for 32bpp BI_BITFIELDS BMPs.\n\nReview of attachment 540289:\n-----------------------------------------------------------------\n\nThis looks great. Can we get a test for this too? A reftest should be good enough: http://mxr.mozilla.org/mozilla-central/source/layout/tools/reftest/README.txt\n\nAlso, can you make sure we have a test that includes a 24-bit BMP?\n\n::: modules/libpr0n/decoders/nsBMPDecoder.cpp\n@@ +117,5 @@\n>          }\n>      }\n> +    if (pos == 32) {\n> +        aLength = 32 - aBegin;\n> +    }\n\nCan you add a comment here explaining what conditions lead to us getting to this state? i.e. \"if we didn't find a 1, blah blah blah\" :)\n\n@@ -379,4 @@\n>                            --lpos;\n> -                          if (mBIH.bpp == 32)\n> -                            p++; // Padding byte\n> -                          ++p;\n\nMan this code sucked! I'm glad you're fixing it.\n\nSo I guess 24 bit bitmaps are packed tightly?", "author": "joe@drew.ca", "time": "2011-06-21T19:18:52Z", "id": 5546212}, {"time": "2011-06-22T03:06:14Z", "author": "jae.jang@gmail.com", "id": 5547309, "text": "Created attachment 540961\nrevised patch after first review. make use of bitfields defined in header for 32bpp BI_BITFIELDS BMPs.\n\nThanks for the review, I moved the aLength computation out of the loop so it looks more natural and self-explanatory. It should be equivalent to the previous patch in function.\n\n         else if (started && !(aMask & (1 << pos))) {\n-            aLength = pos - aBegin;\n             break;\n         }\n     }\n+    // compute number of continuous 1s (aLength)\n+    aLength = pos - aBegin;\n }\n\nI created two reftests: one for 24bpp and another for 32bpp... 24bpp is always 888 (http://upload.wikimedia.org/wikipedia/commons/d/da/AllBMPformats.png). The 32bpp test image is clearly messed up when loaded with unpatched firefox. I'm not sure if the binaries work ok through the patch... I followed the directions at https://developer.mozilla.org/en/Mercurial_FAQ.", "count": 11, "attachment_id": 540961, "is_private": false, "bug_id": 651482, "creation_time": "2011-06-22T03:06:14Z", "raw_text": "Thanks for the review, I moved the aLength computation out of the loop so it looks more natural and self-explanatory. It should be equivalent to the previous patch in function.\n\n         else if (started && !(aMask & (1 << pos))) {\n-            aLength = pos - aBegin;\n             break;\n         }\n     }\n+    // compute number of continuous 1s (aLength)\n+    aLength = pos - aBegin;\n }\n\nI created two reftests: one for 24bpp and another for 32bpp... 24bpp is always 888 (http://upload.wikimedia.org/wikipedia/commons/d/da/AllBMPformats.png). The 32bpp test image is clearly messed up when loaded with unpatched firefox. I'm not sure if the binaries work ok through the patch... I followed the directions at https://developer.mozilla.org/en/Mercurial_FAQ.", "tags": [], "creator": "jae.jang@gmail.com"}, {"count": 12, "text": "Comment on attachment 540961\nrevised patch after first review. make use of bitfields defined in header for 32bpp BI_BITFIELDS BMPs.\n\nExcellent!", "author": "joe@drew.ca", "creator": "joe@drew.ca", "attachment_id": 540961, "time": "2011-06-23T17:33:17Z", "id": 5551469, "raw_text": "Excellent!", "creation_time": "2011-06-23T17:33:17Z", "bug_id": 651482, "tags": [], "is_private": false}, {"attachment_id": null, "creator": "jorendorff@mozilla.com", "author": "jorendorff@mozilla.com", "text": "Is this checkin-needed? What's up?", "count": 13, "is_private": false, "creation_time": "2011-07-21T02:45:24Z", "bug_id": 651482, "raw_text": "Is this checkin-needed? What's up?", "tags": [], "time": "2011-07-21T02:45:24Z", "id": 5603497}, {"raw_text": "I would prefer to rebase this patch once Bug 600556 is in.", "bug_id": 651482, "creation_time": "2011-07-21T12:56:05Z", "creator": "netzen@gmail.com", "tags": [], "is_private": false, "attachment_id": null, "count": 14, "text": "I would prefer to rebase this patch once Bug 600556 is in.", "author": "netzen@gmail.com", "time": "2011-07-21T12:56:05Z", "id": 5604016}, {"raw_text": "I rebased this task so that it can be merged in after Bug 600556 is in.  I preserved the original author name in the patch.\n\nThe previous patch which was rebased was already in r+ state.\nI re-verified that all automated reftests still pass including the new ones in this patch.", "bug_id": 651482, "creation_time": "2011-07-21T16:25:09Z", "tags": [], "is_private": false, "time": "2011-07-21T16:25:09Z", "id": 5604528, "creator": "netzen@gmail.com", "attachment_id": 547414, "text": "Created attachment 547414\nRebased original patch\n\nI rebased this task so that it can be merged in after Bug 600556 is in.  I preserved the original author name in the patch.\n\nThe previous patch which was rebased was already in r+ state.\nI re-verified that all automated reftests still pass including the new ones in this patch.", "count": 15, "author": "netzen@gmail.com"}, {"tags": [], "creator": "joe@drew.ca", "creation_time": "2011-07-25T20:55:15Z", "bug_id": 651482, "raw_text": "Review of attachment 547414:\n-----------------------------------------------------------------", "is_private": false, "attachment_id": 547414, "count": 16, "text": "Comment on attachment 547414\nRebased original patch\n\nReview of attachment 547414:\n-----------------------------------------------------------------", "id": 5612097, "time": "2011-07-25T20:55:15Z", "author": "joe@drew.ca"}, {"is_private": false, "raw_text": "Was this forgotten?", "bug_id": 651482, "creation_time": "2011-09-13T12:44:00Z", "tags": [], "time": "2011-09-13T12:44:00Z", "id": 5715304, "attachment_id": null, "creator": "josh@joshmatthews.net", "author": "josh@joshmatthews.net", "count": 17, "text": "Was this forgotten?"}, {"attachment_id": null, "creator": "netzen@gmail.com", "author": "netzen@gmail.com", "text": "Not forgotten, there might have been a problem with it.  I have to run through try and do extra testing.  It's in queue, I'll land within 2 weeks after the all hands.", "count": 18, "is_private": false, "raw_text": "Not forgotten, there might have been a problem with it.  I have to run through try and do extra testing.  It's in queue, I'll land within 2 weeks after the all hands.", "creation_time": "2011-09-13T13:08:44Z", "bug_id": 651482, "tags": [], "time": "2011-09-13T13:08:44Z", "id": 5715318}, {"creation_time": "2011-09-21T15:25:41Z", "bug_id": 651482, "raw_text": "Rebased current patch but one of the reftests that were introduced in this patch are currently failing.  Will investigate later.", "tags": [], "is_private": false, "time": "2011-09-21T15:25:41Z", "id": 5728232, "creator": "netzen@gmail.com", "attachment_id": 561476, "count": 19, "text": "Created attachment 561476\nRebased original patch\n\nRebased current patch but one of the reftests that were introduced in this patch are currently failing.  Will investigate later.", "author": "netzen@gmail.com"}, {"text": "Brian, is this something you could mentor, or is it no longer a good first bug?", "count": 20, "author": "josh@joshmatthews.net", "creator": "josh@joshmatthews.net", "attachment_id": null, "time": "2014-03-19T18:21:37Z", "id": 8553871, "raw_text": "Brian, is this something you could mentor, or is it no longer a good first bug?", "creation_time": "2014-03-19T18:21:37Z", "bug_id": 651482, "tags": [], "is_private": false}, {"creator": "netzen@gmail.com", "tags": [], "raw_text": "This is something that I could spend time on and investigate to fix myself, but not something that I can give good guidance on.  \n\nI do think it's within the realm of possibility that someone can fix it within a week though. The change is done in the patch, it probably needs to be rebased, and then it needs to be investigated independently why the test is failing.", "creation_time": "2014-03-19T18:25:02Z", "bug_id": 651482, "is_private": false, "attachment_id": null, "text": "This is something that I could spend time on and investigate to fix myself, but not something that I can give good guidance on.  \n\nI do think it's within the realm of possibility that someone can fix it within a week though. The change is done in the patch, it probably needs to be rebased, and then it needs to be investigated independently why the test is failing.", "count": 21, "id": 8553889, "author": "netzen@gmail.com", "time": "2014-03-19T18:25:02Z"}, {"creator": "u543359@disabled.tld", "attachment_id": 8631518, "count": 22, "text": "Created attachment 8631518\npatch", "author": "u543359@disabled.tld", "tags": [], "raw_text": "", "bug_id": 651482, "creation_time": "2015-07-09T10:43:12Z", "is_private": false, "id": 10473720, "time": "2015-07-09T10:43:12Z"}, {"creator": "seth.bugzilla@blackhail.net", "tags": [], "raw_text": "\u0160t\u011bp\u00e1n, I can't review this without more context. Why didn't you base your patch on the existing one in this bug? Did you test against the reftests added in the previous patch? Those reftests should be in your patch too, unless you have better ones, and they need to pass.", "bug_id": 651482, "creation_time": "2015-07-09T19:59:28Z", "attachment_id": null, "is_private": false, "text": "\u0160t\u011bp\u00e1n, I can't review this without more context. Why didn't you base your patch on the existing one in this bug? Did you test against the reftests added in the previous patch? Those reftests should be in your patch too, unless you have better ones, and they need to pass.", "count": 23, "id": 10476672, "author": "seth.bugzilla@blackhail.net", "time": "2015-07-09T19:59:28Z"}, {"time": "2015-07-10T08:18:08Z", "id": 10478686, "is_private": false, "bug_id": 651482, "creation_time": "2015-07-10T08:18:08Z", "raw_text": "Sorry, I haven't noticed the previous patch. And I tried to run the added reftest with the previous patch and it ran successfully.", "tags": [], "author": "u543359@disabled.tld", "text": "Sorry, I haven't noticed the previous patch. And I tried to run the added reftest with the previous patch and it ran successfully.", "count": 24, "attachment_id": null, "creator": "u543359@disabled.tld"}, {"count": 25, "text": "(In reply to \u0160t\u011bp\u00e1n Hor\u00e1\u010dek from comment #24)\n> Sorry, I haven't noticed the previous patch.\n\nYou're saying that you posted this patch without reading the rest of this bug? That makes me very uncomfortable, \u0160t\u011bp\u00e1n.\n\nPlease upload a new version of your patch that includes the reftests from the previous patch. Then we can verify that they pass on all platforms.", "id": 10480140, "time": "2015-07-10T16:11:07Z", "author": "seth.bugzilla@blackhail.net", "tags": [], "creator": "seth.bugzilla@blackhail.net", "creation_time": "2015-07-10T16:11:07Z", "bug_id": 651482, "raw_text": "(In reply to \u0160t\u011bp\u00e1n Hor\u00e1\u010dek from comment #24)\n> Sorry, I haven't noticed the previous patch.\n\nYou're saying that you posted this patch without reading the rest of this bug? That makes me very uncomfortable, \u0160t\u011bp\u00e1n.\n\nPlease upload a new version of your patch that includes the reftests from the previous patch. Then we can verify that they pass on all platforms.", "is_private": false, "attachment_id": null}, {"bug_id": 651482, "creation_time": "2015-07-10T18:31:35Z", "raw_text": "I also ran reftest on Brian's patch and it was successfull, I'm not sure if it's just Windows. His patch seems definitely better to me than mine.", "tags": [], "is_private": false, "time": "2015-07-10T18:31:35Z", "id": 10480719, "creator": "u543359@disabled.tld", "attachment_id": null, "text": "I also ran reftest on Brian's patch and it was successfull, I'm not sure if it's just Windows. His patch seems definitely better to me than mine.", "count": 26, "author": "u543359@disabled.tld"}, {"raw_text": "I guess it's probably best to try pushing that original patch to the try server (rebased if necessary). Maybe something was fixed at another layer (Probably by Seth!) that fixed the previously failing test.", "bug_id": 651482, "creation_time": "2015-07-10T19:15:26Z", "creator": "netzen@gmail.com", "tags": [], "is_private": false, "attachment_id": null, "text": "I guess it's probably best to try pushing that original patch to the try server (rebased if necessary). Maybe something was fixed at another layer (Probably by Seth!) that fixed the previously failing test.", "count": 27, "author": "netzen@gmail.com", "time": "2015-07-10T19:15:26Z", "id": 10480888}, {"attachment_id": 9149237, "creator": "wjohnston2000@gmail.com", "author": "wjohnston2000@gmail.com", "text": "Created attachment 9149237\nBug 651482 - Allow decoding bitmaps with 52 and 56 byte info headers. r=tnikkel", "count": 28, "is_private": false, "raw_text": "", "bug_id": 651482, "creation_time": "2020-05-15T02:24:50Z", "tags": [], "time": "2020-05-15T02:24:50Z", "id": 14821849}, {"id": 14821908, "time": "2020-05-15T04:06:01Z", "author": "wjohnston2000@gmail.com", "text": "Created attachment 9149245\nBug 651482 - Allow decoding bitmaps with 52 and 56 byte info headers. r=tnikkel", "count": 29, "attachment_id": 9149245, "is_private": false, "tags": [], "creator": "wjohnston2000@gmail.com", "creation_time": "2020-05-15T04:06:01Z", "bug_id": 651482, "raw_text": ""}, {"count": 30, "text": "Created attachment 9149663\nBug 651482 - Update documentation. r=tnikkel\n\n\n\nDepends on D75467", "author": "wjohnston2000@gmail.com", "time": "2020-05-17T03:31:39Z", "id": 14825680, "raw_text": "\n\nDepends on D75467", "bug_id": 651482, "creation_time": "2020-05-17T03:31:39Z", "creator": "wjohnston2000@gmail.com", "tags": [], "is_private": false, "attachment_id": 9149663}, {"tags": [], "bug_id": 651482, "creation_time": "2020-05-18T06:42:27Z", "raw_text": "Pushed by nerli@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/d8cc480c563c\nAllow decoding bitmaps with 52 and 56 byte info headers. r=tnikkel\nhttps://hg.mozilla.org/integration/autoland/rev/734c4f395eba\nUpdate documentation. r=tnikkel", "is_private": false, "id": 14827826, "time": "2020-05-18T06:42:27Z", "creator": "pulsebot@bots.tld", "attachment_id": null, "text": "Pushed by nerli@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/d8cc480c563c\nAllow decoding bitmaps with 52 and 56 byte info headers. r=tnikkel\nhttps://hg.mozilla.org/integration/autoland/rev/734c4f395eba\nUpdate documentation. r=tnikkel", "count": 31, "author": "pulsebot@bots.tld"}, {"attachment_id": null, "creator": "malexandru@mozilla.com", "author": "malexandru@mozilla.com", "text": "Backed out 2 changesets for causing bitmap reftest failures.\n\nBackout link: https://hg.mozilla.org/integration/autoland/rev/94667ab68f350b5a407f44a6801966077ae58891\n\nPush with failures: https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&selectedTaskRun=JW6c61QQRbC0qwQbKB18zQ-0&resultStatus=testfailed%2Cbusted%2Cexception%2Csuccess%2Crunnable&searchStr=reftest&fromchange=37e68bff6c62be9e13f75685252445bece3f421c&tochange=94667ab68f350b5a407f44a6801966077ae58891\n\nFailure log: https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=302694955&repo=autoland&lineNumber=3175", "count": 32, "is_private": false, "creation_time": "2020-05-18T07:35:28Z", "bug_id": 651482, "raw_text": "Backed out 2 changesets for causing bitmap reftest failures.\n\nBackout link: https://hg.mozilla.org/integration/autoland/rev/94667ab68f350b5a407f44a6801966077ae58891\n\nPush with failures: https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&selectedTaskRun=JW6c61QQRbC0qwQbKB18zQ-0&resultStatus=testfailed%2Cbusted%2Cexception%2Csuccess%2Crunnable&searchStr=reftest&fromchange=37e68bff6c62be9e13f75685252445bece3f421c&tochange=94667ab68f350b5a407f44a6801966077ae58891\n\nFailure log: https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=302694955&repo=autoland&lineNumber=3175", "tags": [], "time": "2020-05-18T07:35:28Z", "id": 14827868}, {"author": "tnikkel@gmail.com", "text": "Looks like you'll have to adjust this line\n\nhttps://searchfox.org/mozilla-central/rev/09b8072a543c145de2dc9bb76eddddd4a6c09adc/image/test/reftest/bmp/bmpsuite/q/reftest.list#184\n\nbecause we now accept that file.", "count": 33, "attachment_id": null, "creator": "tnikkel@gmail.com", "time": "2020-05-18T08:09:36Z", "id": 14827921, "is_private": false, "raw_text": "Looks like you'll have to adjust this line\n\nhttps://searchfox.org/mozilla-central/rev/09b8072a543c145de2dc9bb76eddddd4a6c09adc/image/test/reftest/bmp/bmpsuite/q/reftest.list#184\n\nbecause we now accept that file.", "creation_time": "2020-05-18T08:09:36Z", "bug_id": 651482, "tags": []}, {"time": "2020-05-18T15:13:02Z", "author": "wjohnston2000@gmail.com", "id": 14828671, "text": "Created attachment 9149869\n* Bug 651482 - Allow decoding bitmaps with 52 and 56 byte info headers. r=tnikkel\n\n\n\nDepends on D75467", "count": 34, "is_private": false, "attachment_id": 9149869, "creation_time": "2020-05-18T15:13:02Z", "bug_id": 651482, "raw_text": "\n\nDepends on D75467", "tags": [], "creator": "wjohnston2000@gmail.com"}, {"time": "2020-05-22T06:13:17Z", "id": 14837054, "creation_time": "2020-05-22T06:13:17Z", "bug_id": 651482, "raw_text": "Pushed by abutkovits@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/40784ea31188\n* Bug 651482 - Allow decoding bitmaps with 52 and 56 byte info headers. r=tnikkel", "tags": [], "is_private": false, "count": 35, "text": "Pushed by abutkovits@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/40784ea31188\n* Bug 651482 - Allow decoding bitmaps with 52 and 56 byte info headers. r=tnikkel", "author": "pulsebot@bots.tld", "creator": "pulsebot@bots.tld", "attachment_id": null}, {"text": "Backed out changeset 40784ea31188 (bug 651482) for Reftest failures in bmp-corrupted/wrapper.html?invalid-compression-BITFIELDS.bmp. CLOSED TREE\n\nLog:\nhttps://treeherder.mozilla.org/logviewer.html#/jobs?job_id=303340758&repo=autoland&lineNumber=2574\n\nPush with failures:\nhttps://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&revision=40784ea31188fe5d253e017ab6d8b8b1f58e7696\n\nBackout:\nhttps://hg.mozilla.org/integration/autoland/rev/b08a7f6f47bc51ad21324702aa9e9ffdb2020794", "count": 36, "author": "dluca@mozilla.com", "creator": "dluca@mozilla.com", "attachment_id": null, "time": "2020-05-22T09:25:27Z", "id": 14837228, "raw_text": "Backed out changeset 40784ea31188 (bug 651482) for Reftest failures in bmp-corrupted/wrapper.html?invalid-compression-BITFIELDS.bmp. CLOSED TREE\n\nLog:\nhttps://treeherder.mozilla.org/logviewer.html#/jobs?job_id=303340758&repo=autoland&lineNumber=2574\n\nPush with failures:\nhttps://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&revision=40784ea31188fe5d253e017ab6d8b8b1f58e7696\n\nBackout:\nhttps://hg.mozilla.org/integration/autoland/rev/b08a7f6f47bc51ad21324702aa9e9ffdb2020794", "creation_time": "2020-05-22T09:25:27Z", "bug_id": 651482, "tags": [], "is_private": false}, {"creator": "wjohnston2000@gmail.com", "tags": [], "raw_text": "That failure looks like a single black pixel in the upper left corner? I can't reproduce it locally. Is that common? Do I try to land again?\n\nI do get lots of failures when I run these reftests locally, mostly in the pal ones. I assume that's some color correction setting somewhere (but not sure why it would affect BMP and PNG differently...). Its made it difficult to run the suite locally.", "creation_time": "2020-05-24T04:19:52Z", "bug_id": 651482, "attachment_id": null, "is_private": false, "count": 37, "text": "That failure looks like a single black pixel in the upper left corner? I can't reproduce it locally. Is that common? Do I try to land again?\n\nI do get lots of failures when I run these reftests locally, mostly in the pal ones. I assume that's some color correction setting somewhere (but not sure why it would affect BMP and PNG differently...). Its made it difficult to run the suite locally.", "id": 14839286, "author": "wjohnston2000@gmail.com", "time": "2020-05-24T04:19:52Z"}, {"attachment_id": null, "is_private": false, "raw_text": "I'll push it to try and see if it reproduces.", "bug_id": 651482, "creation_time": "2020-05-24T04:24:38Z", "creator": "tnikkel@gmail.com", "tags": [], "author": "tnikkel@gmail.com", "time": "2020-05-24T04:24:38Z", "id": 14839289, "text": "I'll push it to try and see if it reproduces.", "count": 38}, {"time": "2020-05-24T06:17:44Z", "id": 14839310, "is_private": false, "bug_id": 651482, "creation_time": "2020-05-24T06:17:44Z", "raw_text": "Yeah, it reproduces there.\n\nLooking at the reftest file\n\nhttps://searchfox.org/mozilla-central/rev/501eb4718d73870892d28f31a99b46f4783efaa0/image/test/reftest/bmp/bmp-corrupted/reftest.list#13\n\nand the bug that added the test\n\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1238551#c19\n\nit sounds like the file is of the type that we are added support for in this bug. So we probably want to change the expectation of that test.", "tags": [], "author": "tnikkel@gmail.com", "count": 39, "text": "Yeah, it reproduces there.\n\nLooking at the reftest file\n\nhttps://searchfox.org/mozilla-central/rev/501eb4718d73870892d28f31a99b46f4783efaa0/image/test/reftest/bmp/bmp-corrupted/reftest.list#13\n\nand the bug that added the test\n\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1238551#c19\n\nit sounds like the file is of the type that we are added support for in this bug. So we probably want to change the expectation of that test.", "attachment_id": null, "creator": "tnikkel@gmail.com"}, {"tags": [], "creator": "tnikkel@gmail.com", "bug_id": 651482, "creation_time": "2020-06-09T22:23:03Z", "raw_text": "There are two active patches\nhttps://phabricator.services.mozilla.com/D75803\nhttps://phabricator.services.mozilla.com/D75462\nCan you determine which is current so we can retire the old one?", "attachment_id": null, "is_private": false, "text": "There are two active patches\nhttps://phabricator.services.mozilla.com/D75803\nhttps://phabricator.services.mozilla.com/D75462\nCan you determine which is current so we can retire the old one?", "count": 40, "id": 14873053, "time": "2020-06-09T22:23:03Z", "author": "tnikkel@gmail.com"}, {"id": 15228250, "time": "2021-01-22T12:42:44Z", "is_private": false, "tags": [], "creation_time": "2021-01-22T12:42:44Z", "bug_id": 651482, "raw_text": "This good-first-bug hasn't had any activity for 6 months, it is automatically unassigned.\nFor more information, please visit [auto_nag documentation](https://wiki.mozilla.org/Release_Management/autonag#good_first_bug_unassign_inactive.py).", "author": "release-mgmt-account-bot@mozilla.tld", "text": "This good-first-bug hasn't had any activity for 6 months, it is automatically unassigned.\nFor more information, please visit [auto_nag documentation](https://wiki.mozilla.org/Release_Management/autonag#good_first_bug_unassign_inactive.py).", "count": 41, "attachment_id": null, "creator": "release-mgmt-account-bot@mozilla.tld"}]}}, "comments": {}}