{"bugs": {"672240": {"comments": [{"is_private": false, "creation_time": "2011-07-18T16:37:50Z", "bug_id": 672240, "id": 5596705, "text": "It would be nice to know if a bugzilla bug page is out of date before I start filling it out.  This way, I can reload the page and prevent mid-air collisions or silly things like bugzilla yelling at me that my page is over 3 days old", "count": 0, "author": "k0scist@gmail.com", "creator": "k0scist@gmail.com", "tags": [], "raw_text": "It would be nice to know if a bugzilla bug page is out of date before I start filling it out.  This way, I can reload the page and prevent mid-air collisions or silly things like bugzilla yelling at me that my page is over 3 days old", "attachment_id": null, "time": "2011-07-18T16:37:50Z"}, {"creator": "glob@mozilla.com", "author": "glob@mozilla.com", "count": 1, "text": "to avoid server-side pain, we should use server-sent events (see bug 338583 and http://www.html5rocks.com/en/tutorials/eventsource/basics/).\n\neven with SSE we'll have to get feedback from server-ops to ensure we have the capacity for this.", "bug_id": 672240, "id": 5596907, "is_private": false, "creation_time": "2011-07-18T17:41:00Z", "time": "2011-07-18T17:41:00Z", "attachment_id": null, "raw_text": "to avoid server-side pain, we should use server-sent events (see bug 338583 and http://www.html5rocks.com/en/tutorials/eventsource/basics/).\n\neven with SSE we'll have to get feedback from server-ops to ensure we have the capacity for this.", "tags": []}, {"author": "dkl@mozilla.com", "text": "It all depends on the thread/process limits that IT has on the Apache instances as I can see this creating a whole lot of extra connections. Not to mention the proxies timing out the connections as well and EventSource having to constantly reconnect. What if we just had the show_bug.cgi page poll the server right at form submission time? A warning dialog could be displayed showing that the data has changed and allow the user to refresh or cancel the submission altogether. We could refresh the page pre-filling any changes the user had made. Basically better handling of midair collisions that what Bugzilla does now. Just a thought.\n\ndkl", "count": 2, "id": 5610321, "bug_id": 672240, "raw_text": "It all depends on the thread/process limits that IT has on the Apache instances as I can see this creating a whole lot of extra connections. Not to mention the proxies timing out the connections as well and EventSource having to constantly reconnect. What if we just had the show_bug.cgi page poll the server right at form submission time? A warning dialog could be displayed showing that the data has changed and allow the user to refresh or cancel the submission altogether. We could refresh the page pre-filling any changes the user had made. Basically better handling of midair collisions that what Bugzilla does now. Just a thought.\n\ndkl", "time": "2011-07-25T05:03:36Z", "creator": "dkl@mozilla.com", "creation_time": "2011-07-25T05:03:36Z", "is_private": false, "attachment_id": null, "tags": []}, {"raw_text": "Mostly what I want is to know and preferably avoid conflicts and the weird 3-day late thing so that I don't have to panic that I might have lost my data.  I was thinking that a notification would be an interim solution, but if we can actually fix the conflicts, even better.\n\nIn short I would recommend:\n\n- get rid of the three day wait thing.  AFAICT, there is no reason for it.  If I want to comment on a bug that's been sitting open in my browser for days, I see no reason to not allow me to do this or display a scary message\n\n- merely adding a comment should never cause a collision. The comment should just be added\n\n- assuming no other conflicts, adding or removing from CC list shouldn't cause a conflict.  \n\n- changing other knobs should mostly not cause conflicts unless the knobs overlap conceptually. \n\nIdeally I would like an interface that is updated with AJAX so that my browser copy updates from the canonical copy, but mostly I want, as a user, to be able to add comments and CC etc without having to guess if this is okay. Currently, I often force refresh the page because bugzilla has trained me to do this before doing anything.", "time": "2011-07-25T16:36:53Z", "text": "Mostly what I want is to know and preferably avoid conflicts and the weird 3-day late thing so that I don't have to panic that I might have lost my data.  I was thinking that a notification would be an interim solution, but if we can actually fix the conflicts, even better.\n\nIn short I would recommend:\n\n- get rid of the three day wait thing.  AFAICT, there is no reason for it.  If I want to comment on a bug that's been sitting open in my browser for days, I see no reason to not allow me to do this or display a scary message\n\n- merely adding a comment should never cause a collision. The comment should just be added\n\n- assuming no other conflicts, adding or removing from CC list shouldn't cause a conflict.  \n\n- changing other knobs should mostly not cause conflicts unless the knobs overlap conceptually. \n\nIdeally I would like an interface that is updated with AJAX so that my browser copy updates from the canonical copy, but mostly I want, as a user, to be able to add comments and CC etc without having to guess if this is okay. Currently, I often force refresh the page because bugzilla has trained me to do this before doing anything.", "count": 3, "author": "k0scist@gmail.com", "bug_id": 672240, "id": 5611252, "attachment_id": null, "tags": [], "creator": "k0scist@gmail.com", "is_private": false, "creation_time": "2011-07-25T16:36:53Z"}, {"attachment_id": null, "tags": [], "creator": "glob@mozilla.com", "is_private": false, "creation_time": "2011-07-25T17:35:04Z", "time": "2011-07-25T17:35:04Z", "raw_text": "(In reply to comment #3)\n> - get rid of the three day wait thing.\n\nbug 367466\n\n> - assuming no other conflicts, adding or removing from CC list shouldn't\n> cause a conflict.  \n\nbug 69447\n\n> - merely adding a comment should never cause a collision. The comment should\n> just be added\n> - changing other knobs should mostly not cause conflicts unless the knobs\n> overlap conceptually. \n\nthere may be another change/comment that would impact your comment/change, so it's important for the mid-air page to still be displayed for these cases.", "count": 4, "text": "(In reply to comment #3)\n> - get rid of the three day wait thing.\n\nbug 367466\n\n> - assuming no other conflicts, adding or removing from CC list shouldn't\n> cause a conflict.  \n\nbug 69447\n\n> - merely adding a comment should never cause a collision. The comment should\n> just be added\n> - changing other knobs should mostly not cause conflicts unless the knobs\n> overlap conceptually. \n\nthere may be another change/comment that would impact your comment/change, so it's important for the mid-air page to still be displayed for these cases.", "author": "glob@mozilla.com", "id": 5611442, "bug_id": 672240}, {"time": "2011-07-25T19:24:23Z", "raw_text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > - get rid of the three day wait thing.\n> \n> bug 367466\n> \n> > - assuming no other conflicts, adding or removing from CC list shouldn't\n> > cause a conflict.  \n> \n> bug 69447\n\nCommented on said bugs.  I hope these will be fixed soonish.\n\n> \n> > - merely adding a comment should never cause a collision. The comment should\n> > just be added\n> > - changing other knobs should mostly not cause conflicts unless the knobs\n> > overlap conceptually. \n> \n> there may be another change/comment that would impact your comment/change,\n> so it's important for the mid-air page to still be displayed for these cases.\n\nFor \"other knobs\" I will reluctantly (for now) concede my position, but for comments I can't from a user perspective agree.  The ideal solution is to dynamically include new comments in the bug as they are written.  But in practice, if I am submitting a new comment, i...\n\n- type the comment.  This could take seconds, minutes, or hours, depending\n- Mid-air collision!  Oh no!  Is all of my work lost?  Has something bad happen?!?  Click new comment only\n- ... or navigate back to page and resubmit that way.\n\nIts a jarring experience.  In most cases, my comment does not overlap with most recent changes.  In most of the latter cases, except maybe once wrt a very small comment, I submit my comment anyway, since while there is some overlap, I have new things to say too and I'm too concerned about losing minutes/hours of work with the prospect of lost textarea data. \n\nOur existing mid-air system feels like a workaround for not having concurrent information, not a robust or desirable solution.  Basically, ideally I want not to have conflicts. Less than that, I want to know if I should type ctrl+shift+r before typing. One potential system is fetching new comments via AJAX on submit and displaying them in the page if there are new comments. You still have to click submit twice, but it is not as jarring, and maybe it can even be a step towards a concurrent system. As said, for my money, I mostly just want to (especially) add to CC and submit comments and have them just work without having to worry or context-shift for them.", "author": "k0scist@gmail.com", "count": 5, "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > - get rid of the three day wait thing.\n> \n> bug 367466\n> \n> > - assuming no other conflicts, adding or removing from CC list shouldn't\n> > cause a conflict.  \n> \n> bug 69447\n\nCommented on said bugs.  I hope these will be fixed soonish.\n\n> \n> > - merely adding a comment should never cause a collision. The comment should\n> > just be added\n> > - changing other knobs should mostly not cause conflicts unless the knobs\n> > overlap conceptually. \n> \n> there may be another change/comment that would impact your comment/change,\n> so it's important for the mid-air page to still be displayed for these cases.\n\nFor \"other knobs\" I will reluctantly (for now) concede my position, but for comments I can't from a user perspective agree.  The ideal solution is to dynamically include new comments in the bug as they are written.  But in practice, if I am submitting a new comment, i...\n\n- type the comment.  This could take seconds, minutes, or hours, depending\n- Mid-air collision!  Oh no!  Is all of my work lost?  Has something bad happen?!?  Click new comment only\n- ... or navigate back to page and resubmit that way.\n\nIts a jarring experience.  In most cases, my comment does not overlap with most recent changes.  In most of the latter cases, except maybe once wrt a very small comment, I submit my comment anyway, since while there is some overlap, I have new things to say too and I'm too concerned about losing minutes/hours of work with the prospect of lost textarea data. \n\nOur existing mid-air system feels like a workaround for not having concurrent information, not a robust or desirable solution.  Basically, ideally I want not to have conflicts. Less than that, I want to know if I should type ctrl+shift+r before typing. One potential system is fetching new comments via AJAX on submit and displaying them in the page if there are new comments. You still have to click submit twice, but it is not as jarring, and maybe it can even be a step towards a concurrent system. As said, for my money, I mostly just want to (especially) add to CC and submit comments and have them just work without having to worry or context-shift for them.", "bug_id": 672240, "id": 5611783, "attachment_id": null, "tags": [], "creator": "k0scist@gmail.com", "creation_time": "2011-07-25T19:24:23Z", "is_private": false}, {"attachment_id": null, "raw_text": "FWIW, EventSource is now active in FF6 released today. Still unseen what kind of load this would cause on our production servers.\n\ndkl", "time": "2011-08-16T16:38:03Z", "tags": [], "author": "dkl@mozilla.com", "count": 6, "text": "FWIW, EventSource is now active in FF6 released today. Still unseen what kind of load this would cause on our production servers.\n\ndkl", "creator": "dkl@mozilla.com", "is_private": false, "creation_time": "2011-08-16T16:38:03Z", "id": 5657288, "bug_id": 672240}]}}, "comments": {}}