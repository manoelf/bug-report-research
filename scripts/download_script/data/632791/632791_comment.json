{"comments": {}, "bugs": {"632791": {"comments": [{"id": 5266092, "count": 0, "time": "2011-02-09T14:07:25Z", "author": "landry@openbsd.org", "is_private": false, "text": "User-Agent:       Midori/0.3 (X11; OpenBSD; U; fr-fr) WebKit/531.2+\nBuild Identifier: \n\nMaybe a followup of https://bugzilla.mozilla.org/show_bug.cgi?id=543737, as it's with the same profile offline store. I realized i still had gloda disabled, and decided to re-enable it.\n\nIt first indexed smth like 2000 messages on ~3300 in INBOX, then started being awfully slow (ie 1 msg/min in activity manager). At that time, i realised the gloda DB was 5Gb, but that was probably a leftover from the previous tries, so i removed it to start a fresh indexing.\n\nIt stopped it, and restarted TB, and now it seems it cant index more than one message a minute :\n\n2011-02-09 14:58:11     gloda.index_msg DEBUG   *** Indexing message: 1297 : Cron <root@polegeom> test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )\n2011-02-09 14:59:09     gloda.index_msg DEBUG     * Got message, subject Cron <root@polegeom> test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )\n....\n2011-02-09 14:59:09     gloda.index_msg DEBUG   *** Indexing message: 1296 : Debian package updates on polegeom\n2011-02-09 15:00:07     gloda.index_msg DEBUG     * Got message, subject Debian package updates on polegeom\n\nThat time, gloda db size looks more 'normal' :\n\n4.4G    .mozilla-thunderbird/7yh39hls.Test/ImapMail/\n\n-rw-r--r--  1 landry  users  13530112 Feb  9 15:00 .mozilla-thunderbird/7yh39hls.Test/global-messages-db.sqlite\n\n(with 2137 messages indexed so far)\n\nThat's with Tb 3.1.7\n\nReproducible: Always", "bug_id": 632791, "creator": "landry@openbsd.org", "raw_text": "User-Agent:       Midori/0.3 (X11; OpenBSD; U; fr-fr) WebKit/531.2+\nBuild Identifier: \n\nMaybe a followup of https://bugzilla.mozilla.org/show_bug.cgi?id=543737, as it's with the same profile offline store. I realized i still had gloda disabled, and decided to re-enable it.\n\nIt first indexed smth like 2000 messages on ~3300 in INBOX, then started being awfully slow (ie 1 msg/min in activity manager). At that time, i realised the gloda DB was 5Gb, but that was probably a leftover from the previous tries, so i removed it to start a fresh indexing.\n\nIt stopped it, and restarted TB, and now it seems it cant index more than one message a minute :\n\n2011-02-09 14:58:11     gloda.index_msg DEBUG   *** Indexing message: 1297 : Cron <root@polegeom> test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )\n2011-02-09 14:59:09     gloda.index_msg DEBUG     * Got message, subject Cron <root@polegeom> test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )\n....\n2011-02-09 14:59:09     gloda.index_msg DEBUG   *** Indexing message: 1296 : Debian package updates on polegeom\n2011-02-09 15:00:07     gloda.index_msg DEBUG     * Got message, subject Debian package updates on polegeom\n\nThat time, gloda db size looks more 'normal' :\n\n4.4G    .mozilla-thunderbird/7yh39hls.Test/ImapMail/\n\n-rw-r--r--  1 landry  users  13530112 Feb  9 15:00 .mozilla-thunderbird/7yh39hls.Test/global-messages-db.sqlite\n\n(with 2137 messages indexed so far)\n\nThat's with Tb 3.1.7\n\nReproducible: Always", "attachment_id": null, "creation_time": "2011-02-09T14:07:25Z", "tags": []}, {"attachment_id": null, "creation_time": "2011-02-09T14:10:20Z", "tags": [], "creator": "landry@openbsd.org", "raw_text": "Oh, and as a sidenote, thunderbird takes 100% cpu if gloda is indexing. If i disable gloda in prefs, it doesn't stop the indexing, i have to kill thunderbird and restart it to get it back to regular cpu usage.", "bug_id": 632791, "text": "Oh, and as a sidenote, thunderbird takes 100% cpu if gloda is indexing. If i disable gloda in prefs, it doesn't stop the indexing, i have to kill thunderbird and restart it to get it back to regular cpu usage.", "is_private": false, "count": 1, "author": "landry@openbsd.org", "time": "2011-02-09T14:10:20Z", "id": 5266098}, {"time": "2011-02-09T14:14:31Z", "count": 2, "text": "Forgot to mention this is with Tb built against systemwide sqlite 3.7.4 with SQLITE_ENABLE_COLUMN_METADATA, SQLITE_HAVE_ISNAN, SQLITE_SOUNDEX, SQLITE_ENABLE_RTREE and SQLITE_ENABLE_FTS3 set.", "raw_text": "Forgot to mention this is with Tb built against systemwide sqlite 3.7.4 with SQLITE_ENABLE_COLUMN_METADATA, SQLITE_HAVE_ISNAN, SQLITE_SOUNDEX, SQLITE_ENABLE_RTREE and SQLITE_ENABLE_FTS3 set.", "creator": "landry@openbsd.org", "id": 5266111, "author": "landry@openbsd.org", "is_private": false, "bug_id": 632791, "creation_time": "2011-02-09T14:14:31Z", "tags": [], "attachment_id": null}, {"creation_time": "2011-02-09T20:47:59Z", "tags": [], "attachment_id": null, "raw_text": "(In reply to comment #1)\n> If i disable gloda in prefs, it doesn't stop the indexing, i have to kill\n> thunderbird and restart it to get it back to regular cpu usage.\n\nbug 550770", "creator": "vseerror@lehigh.edu", "bug_id": 632791, "text": "(In reply to comment #1)\n> If i disable gloda in prefs, it doesn't stop the indexing, i have to kill\n> thunderbird and restart it to get it back to regular cpu usage.\n\nbug 550770", "is_private": false, "time": "2011-02-09T20:47:59Z", "author": "vseerror@lehigh.edu", "count": 3, "id": 5267330}, {"id": 5267348, "is_private": false, "time": "2011-02-09T20:54:22Z", "author": "bugmail@asutherland.org", "count": 4, "bug_id": 632791, "text": "Is this a DEBUG build?", "creation_time": "2011-02-09T20:54:22Z", "tags": [], "attachment_id": null, "raw_text": "Is this a DEBUG build?", "creator": "bugmail@asutherland.org"}, {"id": 5268906, "is_private": false, "count": 5, "author": "landry@openbsd.org", "time": "2011-02-10T08:22:27Z", "bug_id": 632791, "text": "No, but i can make one. I only enabled mailnews.database.global.logging.dump.", "attachment_id": null, "creation_time": "2011-02-10T08:22:27Z", "tags": [], "creator": "landry@openbsd.org", "raw_text": "No, but i can make one. I only enabled mailnews.database.global.logging.dump."}, {"is_private": false, "author": "mozilla@davidbienvenu.org", "time": "2011-02-10T14:45:11Z", "count": 6, "id": 5269465, "creation_time": "2011-02-10T14:45:11Z", "tags": [], "attachment_id": null, "raw_text": "(In reply to comment #5)\n> No, but i can make one. I only enabled mailnews.database.global.logging.dump.\n\nNo, Andrew was hoping it was a debug build, because there's a known slowness in debug builds (though even that's not as slow as one message per minute, at least on my machine)", "creator": "mozilla@davidbienvenu.org", "bug_id": 632791, "text": "(In reply to comment #5)\n> No, but i can make one. I only enabled mailnews.database.global.logging.dump.\n\nNo, Andrew was hoping it was a debug build, because there's a known slowness in debug builds (though even that's not as slow as one message per minute, at least on my machine)"}, {"creator": "bugmail@asutherland.org", "raw_text": "It's important to note that gloda's rate of indexing is adaptive.  If a non-gloda part of Thunderbird is using most of your CPU, gloda will reduce its rate of indexing way way way down to increase responsiveness and let that other code finish up quickly.  For example, auto-sync downloading IMAP messages for offline storage can potentially result in non-trivial load.\n\nIt would be good to get some profiling data, even if it is just poor man's gdb profiling.  If you could attach gdb periodically while gloda is indexing slowly and Thunderbird is eating 100% of your CPU, that could be invaluable.  Please do a \"thread apply all bt\" to see what threads are actively doing things.  (Inactive threads will be waiting on semaphores and/or sockets.)  Of particular interest are: what is happening on the first thread, and whether the asynchronous db thread is deep in a sqlite stack.\n\nYou may also be able to get some good profiling results using dtrace or other BSD mechanisms I'm not up on.  If using a profiling mechanism capable of polling at a rate faster than human control-c profiling with gdb, please keep in mind that if you only have 1 or 2 processing cores it is possible for thread scheduling to leave a thread in the same inactive state in the same stack frame which could make it seem like that thread is more busy than it really is.\n\nI'm assuming you built this yourself and so have an unstripped binary.  If the frame pointer is being omitted backtraces may cut out early and you may need to do one of the following in your mozconfig (with ac_enable_*):\na) --enable-profiling to tell us to stop omitting the frame pointer\nb) --enable-debug-symbols=yes to get us to generate dwarf debug info and generate the unwind data required to be able to unwind the stack.  This will also let gdb tell us the arguments functions were invoked with.  Likely option 'a' is sufficient.  Certainly your builds will go much faster that way.", "text": "It's important to note that gloda's rate of indexing is adaptive.  If a non-gloda part of Thunderbird is using most of your CPU, gloda will reduce its rate of indexing way way way down to increase responsiveness and let that other code finish up quickly.  For example, auto-sync downloading IMAP messages for offline storage can potentially result in non-trivial load.\n\nIt would be good to get some profiling data, even if it is just poor man's gdb profiling.  If you could attach gdb periodically while gloda is indexing slowly and Thunderbird is eating 100% of your CPU, that could be invaluable.  Please do a \"thread apply all bt\" to see what threads are actively doing things.  (Inactive threads will be waiting on semaphores and/or sockets.)  Of particular interest are: what is happening on the first thread, and whether the asynchronous db thread is deep in a sqlite stack.\n\nYou may also be able to get some good profiling results using dtrace or other BSD mechanisms I'm not up on.  If using a profiling mechanism capable of polling at a rate faster than human control-c profiling with gdb, please keep in mind that if you only have 1 or 2 processing cores it is possible for thread scheduling to leave a thread in the same inactive state in the same stack frame which could make it seem like that thread is more busy than it really is.\n\nI'm assuming you built this yourself and so have an unstripped binary.  If the frame pointer is being omitted backtraces may cut out early and you may need to do one of the following in your mozconfig (with ac_enable_*):\na) --enable-profiling to tell us to stop omitting the frame pointer\nb) --enable-debug-symbols=yes to get us to generate dwarf debug info and generate the unwind data required to be able to unwind the stack.  This will also let gdb tell us the arguments functions were invoked with.  Likely option 'a' is sufficient.  Certainly your builds will go much faster that way.", "count": 7, "time": "2011-02-11T03:46:20Z", "attachment_id": null, "tags": [], "creation_time": "2011-02-11T03:46:20Z", "bug_id": 632791, "is_private": false, "author": "bugmail@asutherland.org", "id": 5271648}, {"id": 5271960, "count": 8, "time": "2011-02-11T08:14:44Z", "author": "landry@openbsd.org", "is_private": false, "text": "Created attachment 511651\ntrace\n\nmy debug builds are done with --enable-debug --disable-install-strip, and -g is passed to CFLAGS. Here's a first trace, i'm not sure there's enough info in it.\nI'll add --enable-profiling and --enable-debug-symbols=yes to my next debug builds.\nAs to profiling, the only tool we have on OpenBSD is ktrace, and its output is.. quite hard to parse.\n\nIn fact, the activity manager doesn't show gloda indexing yet, it looks like it's waiting forever on 'determining which messages to index in INBOX'.", "bug_id": 632791, "creator": "landry@openbsd.org", "raw_text": "my debug builds are done with --enable-debug --disable-install-strip, and -g is passed to CFLAGS. Here's a first trace, i'm not sure there's enough info in it.\nI'll add --enable-profiling and --enable-debug-symbols=yes to my next debug builds.\nAs to profiling, the only tool we have on OpenBSD is ktrace, and its output is.. quite hard to parse.\n\nIn fact, the activity manager doesn't show gloda indexing yet, it looks like it's waiting forever on 'determining which messages to index in INBOX'.", "attachment_id": 511651, "tags": [], "creation_time": "2011-02-11T08:14:44Z"}, {"is_private": false, "count": 9, "author": "bugmail@asutherland.org", "time": "2011-02-11T08:44:32Z", "id": 5271997, "attachment_id": null, "creation_time": "2011-02-11T08:44:32Z", "tags": [], "creator": "bugmail@asutherland.org", "raw_text": "To elaborate on bienvenu's reply, it is indeed far preferable that you do not build with \"--enable-debug\".  (Although the specific problem I am thinking of will not be an issue if you build/run with the recently released SQLite 3.7.5 which has the fixes for that problem.)\n\nIdeally, you would also want to run without \"mailnews.database.global.logging.dump\" as it does increase gloda's overhead non-trivially.\n\nYour backtraces look surprisingly gibberishy for having been built with --enable-debug and having -g passed...  (That's all --enable-debug-symbols=yes should be netting out to anyways, -g.)\n\nThe log mentions you are using gdb 6.3 which is from 2004.  While hopefully your gcc toolchain is more recent than gdb, I'm going to have to invoke \"unsupported platform shenanigans\" and bow out from involvement in further analysis until you can reproduce on a tier 1 thunderbird platform (OS X/linux/windows) or track down a specific smoking gun.  Let me emphasize that I do appreciate your willingness to look into this and really hope you do keep looking into it.\n\nOne potentially platform related tidbit is that gloda uses nsStopwatch to help figure out what the rest of Thunderbird is up to:\nhttp://mxr.mozilla.org/comm-central/source/mailnews/base/util/nsStopwatch.cpp\n\nI assume OpenBSD is falling into the XP_UNIX case and all is well, but if not, that could explain gloda backing off, but not why something else would take 100% of the cpu.\n\nAnd a useful gloda tidbit is that if your message corpus includes a ton of duplicate messages (all having the same message-id) or a ridiculously long message thread (in terms of distance from the root to the last message), gloda performance will suffer while indexing them.", "bug_id": 632791, "text": "To elaborate on bienvenu's reply, it is indeed far preferable that you do not build with \"--enable-debug\".  (Although the specific problem I am thinking of will not be an issue if you build/run with the recently released SQLite 3.7.5 which has the fixes for that problem.)\n\nIdeally, you would also want to run without \"mailnews.database.global.logging.dump\" as it does increase gloda's overhead non-trivially.\n\nYour backtraces look surprisingly gibberishy for having been built with --enable-debug and having -g passed...  (That's all --enable-debug-symbols=yes should be netting out to anyways, -g.)\n\nThe log mentions you are using gdb 6.3 which is from 2004.  While hopefully your gcc toolchain is more recent than gdb, I'm going to have to invoke \"unsupported platform shenanigans\" and bow out from involvement in further analysis until you can reproduce on a tier 1 thunderbird platform (OS X/linux/windows) or track down a specific smoking gun.  Let me emphasize that I do appreciate your willingness to look into this and really hope you do keep looking into it.\n\nOne potentially platform related tidbit is that gloda uses nsStopwatch to help figure out what the rest of Thunderbird is up to:\nhttp://mxr.mozilla.org/comm-central/source/mailnews/base/util/nsStopwatch.cpp\n\nI assume OpenBSD is falling into the XP_UNIX case and all is well, but if not, that could explain gloda backing off, but not why something else would take 100% of the cpu.\n\nAnd a useful gloda tidbit is that if your message corpus includes a ton of duplicate messages (all having the same message-id) or a ridiculously long message thread (in terms of distance from the root to the last message), gloda performance will suffer while indexing them."}, {"creation_time": "2011-02-12T08:49:38Z", "tags": [], "attachment_id": null, "bug_id": 632791, "is_private": false, "author": "landry@openbsd.org", "id": 5274659, "raw_text": "(In reply to comment #9)\n> To elaborate on bienvenu's reply, it is indeed far preferable that you do not\n> build with \"--enable-debug\".  (Although the specific problem I am thinking of\n> will not be an issue if you build/run with the recently released SQLite 3.7.5\n> which has the fixes for that problem.)\n\nDo you mean that sqlite 3.7.5 might fix my issue, or it only fixes an unrelated issue with builds with --enable-debug ? I can try building it if that helps.\n\n> Ideally, you would also want to run without\n> \"mailnews.database.global.logging.dump\" as it does increase gloda's overhead\n> non-trivially.\n> \n> Your backtraces look surprisingly gibberishy for having been built with\n> --enable-debug and having -g passed...  (That's all --enable-debug-symbols=yes\n> should be netting out to anyways, -g.)\n\nSo, the official way of building a debug-enabled version is --enable-profiling --enable-debug-symbols=yes ? noted.\n\n> The log mentions you are using gdb 6.3 which is from 2004.  While hopefully\n> your gcc toolchain is more recent than gdb, I'm going to have to invoke\n> \"unsupported platform shenanigans\" and bow out from involvement in further\n> analysis until you can reproduce on a tier 1 thunderbird platform (OS\n> X/linux/windows) or track down a specific smoking gun.  Let me emphasize that I\n> do appreciate your willingness to look into this and really hope you do keep\n> looking into it.\n\nYes; gdb 6.3. We might update to 6.6 at some point, last gplv2 version.\nGcc is 4.2.1 since a year or so, was 3.3.5 before. And of course i know the supported platforms list.. oh well, i hope i'll get\na better trace with a correct debug build.\n\n> One potentially platform related tidbit is that gloda uses nsStopwatch to help\n> figure out what the rest of Thunderbird is up to:\n> http://mxr.mozilla.org/comm-central/source/mailnews/base/util/nsStopwatch.cpp\n> \n> I assume OpenBSD is falling into the XP_UNIX case and all is well, but if not,\n> that could explain gloda backing off, but not why something else would take\n> 100% of the cpu.\n\nYes, it's in the XP_UNIX codepath.\n\n> And a useful gloda tidbit is that if your message corpus includes a ton of\n> duplicate messages (all having the same message-id) or a ridiculously long\n> message thread (in terms of distance from the root to the last message), gloda\n> performance will suffer while indexing them.\n\nMy message corpus is 'normal' i'd say, no huge threads, and no dupes (although corpus might have been corrupted by a fs crash). \nI don't know if the fact that it's slow indexing my admin folder (containing a ton of similar messages in content from cronjobs) has something to do with it. I'll also compare with indexing of a 'normal' folder.", "creator": "landry@openbsd.org", "text": "(In reply to comment #9)\n> To elaborate on bienvenu's reply, it is indeed far preferable that you do not\n> build with \"--enable-debug\".  (Although the specific problem I am thinking of\n> will not be an issue if you build/run with the recently released SQLite 3.7.5\n> which has the fixes for that problem.)\n\nDo you mean that sqlite 3.7.5 might fix my issue, or it only fixes an unrelated issue with builds with --enable-debug ? I can try building it if that helps.\n\n> Ideally, you would also want to run without\n> \"mailnews.database.global.logging.dump\" as it does increase gloda's overhead\n> non-trivially.\n> \n> Your backtraces look surprisingly gibberishy for having been built with\n> --enable-debug and having -g passed...  (That's all --enable-debug-symbols=yes\n> should be netting out to anyways, -g.)\n\nSo, the official way of building a debug-enabled version is --enable-profiling --enable-debug-symbols=yes ? noted.\n\n> The log mentions you are using gdb 6.3 which is from 2004.  While hopefully\n> your gcc toolchain is more recent than gdb, I'm going to have to invoke\n> \"unsupported platform shenanigans\" and bow out from involvement in further\n> analysis until you can reproduce on a tier 1 thunderbird platform (OS\n> X/linux/windows) or track down a specific smoking gun.  Let me emphasize that I\n> do appreciate your willingness to look into this and really hope you do keep\n> looking into it.\n\nYes; gdb 6.3. We might update to 6.6 at some point, last gplv2 version.\nGcc is 4.2.1 since a year or so, was 3.3.5 before. And of course i know the supported platforms list.. oh well, i hope i'll get\na better trace with a correct debug build.\n\n> One potentially platform related tidbit is that gloda uses nsStopwatch to help\n> figure out what the rest of Thunderbird is up to:\n> http://mxr.mozilla.org/comm-central/source/mailnews/base/util/nsStopwatch.cpp\n> \n> I assume OpenBSD is falling into the XP_UNIX case and all is well, but if not,\n> that could explain gloda backing off, but not why something else would take\n> 100% of the cpu.\n\nYes, it's in the XP_UNIX codepath.\n\n> And a useful gloda tidbit is that if your message corpus includes a ton of\n> duplicate messages (all having the same message-id) or a ridiculously long\n> message thread (in terms of distance from the root to the last message), gloda\n> performance will suffer while indexing them.\n\nMy message corpus is 'normal' i'd say, no huge threads, and no dupes (although corpus might have been corrupted by a fs crash). \nI don't know if the fact that it's slow indexing my admin folder (containing a ton of similar messages in content from cronjobs) has something to do with it. I'll also compare with indexing of a 'normal' folder.", "time": "2011-02-12T08:49:38Z", "count": 10}, {"text": "(In reply to comment #10)\n> Do you mean that sqlite 3.7.5 might fix my issue, or it only fixes an unrelated\n> issue with builds with --enable-debug ? I can try building it if that helps.\n\n3.7.5 fixes an issue where SQLite statement tracing, which is enabled by default on DEBUG builds, is ridiculously inefficient for FTS3 tables such as those used by gloda.\n \n> So, the official way of building a debug-enabled version is --enable-profiling\n> --enable-debug-symbols=yes ? noted.\n\n\"debug\" is a very overloaded word.  If someone says \"debug build\" they probably mean -DDEBUG build, which turns on all kinds of expensive paranoia checking throughout the system.  That is definitely not what you want if you are trying to deal with real-world performance because of the comprehensive slowdowns that result.\n\nYou definitely do not want a DEBUG build for your investigation.  You do want accurate stack traces, though, which should ideally come just from --enable-profiling.\n \n> My message corpus is 'normal' i'd say, no huge threads, and no dupes (although\n> corpus might have been corrupted by a fs crash). \n> I don't know if the fact that it's slow indexing my admin folder (containing a\n> ton of similar messages in content from cronjobs) has something to do with it.\n> I'll also compare with indexing of a 'normal' folder.\n\nOur streaming process will stream the entire message even though gloda only cares about bits of the body.  If these are huge messages, that could explain things.  This should be very obvious if it is the problem.\n\nSince you are resigned to using gdb, you might want to check out the script here which could be useful:\nhttp://poormansprofiler.org/\n\nNote that when counting all thread stacks, we will expect and overwhelming number of stack frames for the non-main threads to be idle blocking on additional tasks.", "creator": "bugmail@asutherland.org", "raw_text": "(In reply to comment #10)\n> Do you mean that sqlite 3.7.5 might fix my issue, or it only fixes an unrelated\n> issue with builds with --enable-debug ? I can try building it if that helps.\n\n3.7.5 fixes an issue where SQLite statement tracing, which is enabled by default on DEBUG builds, is ridiculously inefficient for FTS3 tables such as those used by gloda.\n \n> So, the official way of building a debug-enabled version is --enable-profiling\n> --enable-debug-symbols=yes ? noted.\n\n\"debug\" is a very overloaded word.  If someone says \"debug build\" they probably mean -DDEBUG build, which turns on all kinds of expensive paranoia checking throughout the system.  That is definitely not what you want if you are trying to deal with real-world performance because of the comprehensive slowdowns that result.\n\nYou definitely do not want a DEBUG build for your investigation.  You do want accurate stack traces, though, which should ideally come just from --enable-profiling.\n \n> My message corpus is 'normal' i'd say, no huge threads, and no dupes (although\n> corpus might have been corrupted by a fs crash). \n> I don't know if the fact that it's slow indexing my admin folder (containing a\n> ton of similar messages in content from cronjobs) has something to do with it.\n> I'll also compare with indexing of a 'normal' folder.\n\nOur streaming process will stream the entire message even though gloda only cares about bits of the body.  If these are huge messages, that could explain things.  This should be very obvious if it is the problem.\n\nSince you are resigned to using gdb, you might want to check out the script here which could be useful:\nhttp://poormansprofiler.org/\n\nNote that when counting all thread stacks, we will expect and overwhelming number of stack frames for the non-main threads to be idle blocking on additional tasks.", "count": 11, "time": "2011-02-13T07:47:40Z", "bug_id": 632791, "attachment_id": null, "creation_time": "2011-02-13T07:47:40Z", "tags": [], "id": 5275541, "author": "bugmail@asutherland.org", "is_private": false}, {"is_private": false, "author": "landry@openbsd.org", "id": 5282564, "attachment_id": 512745, "tags": [], "creation_time": "2011-02-16T09:40:45Z", "bug_id": 632791, "count": 12, "time": "2011-02-16T09:40:45Z", "creator": "landry@openbsd.org", "raw_text": "New trace with --enable-profiling. Strange thing is that thread apply all bt doesn't show all threads, and thread 1 and 4 seems to be the same. Content analyzed is rsync backup output sent in an admin mail, if that matters.", "text": "Created attachment 512745\ninteractive debug trace\n\nNew trace with --enable-profiling. Strange thing is that thread apply all bt doesn't show all threads, and thread 1 and 4 seems to be the same. Content analyzed is rsync backup output sent in an admin mail, if that matters."}, {"count": 13, "author": "landry@openbsd.org", "time": "2011-02-16T09:41:20Z", "is_private": false, "id": 5282566, "creator": "landry@openbsd.org", "raw_text": "", "attachment_id": 512746, "tags": [], "creation_time": "2011-02-16T09:41:20Z", "text": "Created attachment 512746\npoorman's profiler output for 1 sample", "bug_id": 632791}, {"raw_text": "", "creator": "landry@openbsd.org", "text": "Created attachment 512747\npoorman's profiler output for 10 samples, with 10 seconds wait between each sample", "time": "2011-02-16T09:42:01Z", "count": 14, "tags": [], "creation_time": "2011-02-16T09:42:01Z", "attachment_id": 512747, "bug_id": 632791, "author": "landry@openbsd.org", "is_private": false, "id": 5282569}, {"text": "Nothing jumps out at me :(", "bug_id": 632791, "raw_text": "Nothing jumps out at me :(", "creator": "bugmail@asutherland.org", "creation_time": "2011-02-16T16:51:44Z", "tags": [], "attachment_id": null, "id": 5283243, "author": "bugmail@asutherland.org", "time": "2011-02-16T16:51:44Z", "count": 15, "is_private": false}, {"id": 5285725, "is_private": false, "author": "landry@openbsd.org", "time": "2011-02-17T08:57:21Z", "count": 16, "bug_id": 632791, "text": "Another data point :\n\ncreated a fresh new profile, with only my admin account configured, tb fetched 3400 messages, Gloda indexed them in 120 secs. The ImapMail folder in profile is 60Mb (mainly INBOX file), and on my 'regular profile', the same folder/file for the admin account (with supposedly the same messages) is ~350Mb. Emptied trash, same thing. And when i try to compact the INBOX folder, tb says that i can't because 'another operation is in progress', whereas nothing is running in activity manager (maybe compacting folders should be shown in activity manager ?). Quit Tb, rerun it, i can compact the folder, but it's still 350Mb.\n\nI'm pretty sure if i set a totally new profile with the same accounts configured, gloda won't choke on it....", "tags": [], "creation_time": "2011-02-17T08:57:21Z", "attachment_id": null, "raw_text": "Another data point :\n\ncreated a fresh new profile, with only my admin account configured, tb fetched 3400 messages, Gloda indexed them in 120 secs. The ImapMail folder in profile is 60Mb (mainly INBOX file), and on my 'regular profile', the same folder/file for the admin account (with supposedly the same messages) is ~350Mb. Emptied trash, same thing. And when i try to compact the INBOX folder, tb says that i can't because 'another operation is in progress', whereas nothing is running in activity manager (maybe compacting folders should be shown in activity manager ?). Quit Tb, rerun it, i can compact the folder, but it's still 350Mb.\n\nI'm pretty sure if i set a totally new profile with the same accounts configured, gloda won't choke on it....", "creator": "landry@openbsd.org"}, {"attachment_id": null, "tags": [], "creation_time": "2011-02-17T12:25:00Z", "bug_id": 632791, "author": "landry@openbsd.org", "is_private": false, "id": 5285933, "creator": "landry@openbsd.org", "raw_text": "Looking more, i think my profile got corrupted at some point, for this folder tb says '3392 messages', and :\n\n$grep -ci ^Message-Id: .thunderbird/7yh39hls.Test/ImapMail/mail.craig.fr/INBOX             \n13676\n\n$grep -i ^Message-Id: .thunderbird/7yh39hls.Test/ImapMail/mail.craig.fr/INBOX | sort | uniq | wc -l\n    3473\n\nHere', 3473 doesn't even match 3392.\n\nAnd on my fresh new profile:\n$grep ^Message-Id .thunderbird/3yfidt7e.Admin/ImapMail/craig.fr/INBOX  | sort | uniq  | wc -l\n    3344\n$grep -c ^Message-Id .thunderbird/3yfidt7e.Admin/ImapMail/craig.fr/INBOX                      \n3344\n\nIs there a procedure in thunderbird to fix/purge the profile files from dupes, between 'expunge', 'compact' and 'empty trash', or it's better in my case to start from a new profile ?\n\nI ran a script checking msg id count vs unique msg ids, and lots of folders file seem to contain duplicated messages. Sometimes more than 4x, sometimes a bit more than 2x.. how can that happen ?\n\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig.fr/INBOX\n13676   3473\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX\n13036   3465\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/Sent-1\n729   421\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/geonetwork-users-fr\n431   411\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/drupal-security\n204   197\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/ial\n332   129\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/geonetwork-devel\n541   528\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/geonetwork-users\n542   539\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/mapfish-users\n406   398\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-2.fr/INBOX\n3400   2106\n\n<not pasting the whole list>\n\nHere's the script:\n\nfind .thunderbird/7yh39hls.Test/ImapMail/ -name *.msf | while read i ;\ndo\n        b=`echo \"$i\" | sed -e 's/.msf$//'`;\n        if [ -f \"$b\" ] ; then\n        n=`grep -ci ^Message-Id: \"$b\"`\n        n2=`grep -i ^Message-Id: \"$b\" | sort | uniq | wc -l`\n        if [ $n -ne $n2 ] ; then\n                echo \"$b\"\n                echo $n \" \" $n2 ;\n        fi\n        fi\ndone", "text": "Looking more, i think my profile got corrupted at some point, for this folder tb says '3392 messages', and :\n\n$grep -ci ^Message-Id: .thunderbird/7yh39hls.Test/ImapMail/mail.craig.fr/INBOX             \n13676\n\n$grep -i ^Message-Id: .thunderbird/7yh39hls.Test/ImapMail/mail.craig.fr/INBOX | sort | uniq | wc -l\n    3473\n\nHere', 3473 doesn't even match 3392.\n\nAnd on my fresh new profile:\n$grep ^Message-Id .thunderbird/3yfidt7e.Admin/ImapMail/craig.fr/INBOX  | sort | uniq  | wc -l\n    3344\n$grep -c ^Message-Id .thunderbird/3yfidt7e.Admin/ImapMail/craig.fr/INBOX                      \n3344\n\nIs there a procedure in thunderbird to fix/purge the profile files from dupes, between 'expunge', 'compact' and 'empty trash', or it's better in my case to start from a new profile ?\n\nI ran a script checking msg id count vs unique msg ids, and lots of folders file seem to contain duplicated messages. Sometimes more than 4x, sometimes a bit more than 2x.. how can that happen ?\n\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig.fr/INBOX\n13676   3473\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX\n13036   3465\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/Sent-1\n729   421\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/geonetwork-users-fr\n431   411\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/drupal-security\n204   197\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/ial\n332   129\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/geonetwork-devel\n541   528\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX.sbd/geonetwork-users\n542   539\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-1.fr/mapfish-users\n406   398\n.thunderbird/7yh39hls.Test/ImapMail/mail.craig-2.fr/INBOX\n3400   2106\n\n<not pasting the whole list>\n\nHere's the script:\n\nfind .thunderbird/7yh39hls.Test/ImapMail/ -name *.msf | while read i ;\ndo\n        b=`echo \"$i\" | sed -e 's/.msf$//'`;\n        if [ -f \"$b\" ] ; then\n        n=`grep -ci ^Message-Id: \"$b\"`\n        n2=`grep -i ^Message-Id: \"$b\" | sort | uniq | wc -l`\n        if [ $n -ne $n2 ] ; then\n                echo \"$b\"\n                echo $n \" \" $n2 ;\n        fi\n        fi\ndone", "count": 17, "time": "2011-02-17T12:25:00Z"}, {"time": "2011-02-17T12:35:04Z", "count": 18, "raw_text": "Btw, i've looked at http://kb.mozillazine.org/Duplicate_messages_received and mail.server.default.dup_action setting, but i doubt this is the same, as i don't get dupes in the message list, only in the storage file on the profile.\n\nAnd i'm not sure setting dup_action to 1 will have a retroactive effect on the messages already stored in profile.", "creator": "landry@openbsd.org", "text": "Btw, i've looked at http://kb.mozillazine.org/Duplicate_messages_received and mail.server.default.dup_action setting, but i doubt this is the same, as i don't get dupes in the message list, only in the storage file on the profile.\n\nAnd i'm not sure setting dup_action to 1 will have a retroactive effect on the messages already stored in profile.", "author": "landry@openbsd.org", "is_private": false, "id": 5285947, "tags": [], "creation_time": "2011-02-17T12:35:04Z", "attachment_id": null, "bug_id": 632791}, {"time": "2011-02-17T15:19:31Z", "author": "mozilla@davidbienvenu.org", "count": 19, "is_private": false, "id": 5286242, "raw_text": "file | compact folders, or right click, compact folder compacts the offline store, and removes the messages that are no longer in the folder from the offline store, i.e., the deleted messages. If some other url is adding stuff to the offline store (e.g., autosync), then compact will fail with the error you saw. I'd suggest trying again.", "creator": "mozilla@davidbienvenu.org", "creation_time": "2011-02-17T15:19:31Z", "tags": [], "attachment_id": null, "text": "file | compact folders, or right click, compact folder compacts the offline store, and removes the messages that are no longer in the folder from the offline store, i.e., the deleted messages. If some other url is adding stuff to the offline store (e.g., autosync), then compact will fail with the error you saw. I'd suggest trying again.", "bug_id": 632791}, {"id": 5286447, "is_private": false, "count": 20, "author": "landry@openbsd.org", "time": "2011-02-17T16:27:35Z", "bug_id": 632791, "text": "Ok, something went really bad. I used the Xpunge extension to compact all folders, at some point it crashed (tb had opened too much files) and my profile went from 5Go to 50Go. Own account INBOX file was 2gb, it's now 30gb, and another account INBOX file went from 2gb to 18.4gb.\n\nI'm giving up on that profile, that's just insane. I can keep it for post-mortem analysis, but to get job done i'll start from a fresh one.", "attachment_id": null, "tags": [], "creation_time": "2011-02-17T16:27:35Z", "creator": "landry@openbsd.org", "raw_text": "Ok, something went really bad. I used the Xpunge extension to compact all folders, at some point it crashed (tb had opened too much files) and my profile went from 5Go to 50Go. Own account INBOX file was 2gb, it's now 30gb, and another account INBOX file went from 2gb to 18.4gb.\n\nI'm giving up on that profile, that's just insane. I can keep it for post-mortem analysis, but to get job done i'll start from a fresh one."}, {"raw_text": "We had offline IMAP store corruption for a while (but also fixed a while ago at this point...) which could potentially result in Thunderbird thinking a message's offline store was the size of the entire offline store.  When compacting, you could then end up with the kind of explosion you are talking about.\n\nIt sounds like gloda was probably going slow because it had to stream a huge amount of data every time...?", "creator": "bugmail@asutherland.org", "text": "We had offline IMAP store corruption for a while (but also fixed a while ago at this point...) which could potentially result in Thunderbird thinking a message's offline store was the size of the entire offline store.  When compacting, you could then end up with the kind of explosion you are talking about.\n\nIt sounds like gloda was probably going slow because it had to stream a huge amount of data every time...?", "time": "2011-02-17T16:34:50Z", "count": 21, "tags": [], "creation_time": "2011-02-17T16:34:50Z", "attachment_id": null, "bug_id": 632791, "author": "bugmail@asutherland.org", "is_private": false, "id": 5286473}, {"tags": [], "creation_time": "2011-02-17T16:55:54Z", "attachment_id": null, "bug_id": 632791, "author": "landry@openbsd.org", "is_private": false, "id": 5286548, "raw_text": "The 30Gb file contains 3470 unique Message-Ids, for a total of 249885\nMessage-Ids. Oops ?\n\nSo, yes i think gloda was so slow because of the huge amount of duplicates. If only Tb stored its offline store as a standard Maildir with a file/mail.. but that's another discussion :)", "creator": "landry@openbsd.org", "text": "The 30Gb file contains 3470 unique Message-Ids, for a total of 249885\nMessage-Ids. Oops ?\n\nSo, yes i think gloda was so slow because of the huge amount of duplicates. If only Tb stored its offline store as a standard Maildir with a file/mail.. but that's another discussion :)", "time": "2011-02-17T16:55:54Z", "count": 22}, {"id": 5418250, "author": "vseerror@lehigh.edu", "is_private": false, "bug_id": 632791, "attachment_id": null, "tags": [], "creation_time": "2011-04-19T12:03:56Z", "count": 23, "time": "2011-04-19T12:03:56Z", "text": "Landry, asuth, does the modified summary now fully capture the symptoms?  \n\nI'd imagine the underlying cause(s) would need to be fixed. However, is there a sanity check that makes sense to avoid this situation?", "creator": "vseerror@lehigh.edu", "raw_text": "Landry, asuth, does the modified summary now fully capture the symptoms?  \n\nI'd imagine the underlying cause(s) would need to be fixed. However, is there a sanity check that makes sense to avoid this situation?"}, {"text": "Summary is good for me..\nas for the cause of a buggered offline store.. besides deleting obvious dupes by Message-Ids when recompacting folders, i'm note sure one can make assumptions on 'lets add a sanity check, noone can have a 30Gb mailbox with only 3500 distinct mails'..", "creator": "landry@openbsd.org", "raw_text": "Summary is good for me..\nas for the cause of a buggered offline store.. besides deleting obvious dupes by Message-Ids when recompacting folders, i'm note sure one can make assumptions on 'lets add a sanity check, noone can have a 30Gb mailbox with only 3500 distinct mails'..", "count": 24, "time": "2011-05-03T19:33:37Z", "bug_id": 632791, "attachment_id": null, "tags": [], "creation_time": "2011-05-03T19:33:37Z", "id": 5446506, "author": "landry@openbsd.org", "is_private": false}, {"text": "protz, andrew, what direction/disposition do you think this should go?", "raw_text": "protz, andrew, what direction/disposition do you think this should go?", "creator": "vseerror@lehigh.edu", "time": "2011-10-25T11:30:30Z", "count": 25, "bug_id": 632791, "creation_time": "2011-10-25T11:30:30Z", "tags": [], "attachment_id": null, "id": 5802771, "author": "vseerror@lehigh.edu", "is_private": false}, {"creator": "vseerror@lehigh.edu", "raw_text": "Landry, have you ever experienced this problem again?\n\n\n(In reply to Landry Breuil (:gaston) from comment #24)\n> besides deleting obvious  dupes by Message-Ids when recompacting folders, i'm not sure one can make\n> assumptions on 'lets add a sanity check, noone can have a 30Gb mailbox with\n> only 3500 distinct mails'..\n\nyeah, we tend to not do/add such checks and attacking \"symptoms\". preferring instead to catch the causes when then occur, and fix them", "text": "Landry, have you ever experienced this problem again?\n\n\n(In reply to Landry Breuil (:gaston) from comment #24)\n> besides deleting obvious  dupes by Message-Ids when recompacting folders, i'm not sure one can make\n> assumptions on 'lets add a sanity check, noone can have a 30Gb mailbox with\n> only 3500 distinct mails'..\n\nyeah, we tend to not do/add such checks and attacking \"symptoms\". preferring instead to catch the causes when then occur, and fix them", "count": 26, "time": "2013-06-16T16:14:17Z", "attachment_id": null, "tags": [], "creation_time": "2013-06-16T16:14:17Z", "bug_id": 632791, "author": "vseerror@lehigh.edu", "is_private": false, "id": 7539908}, {"bug_id": 632791, "text": "The profile i'm running now since two years or so doesnt exhibit the problem with 17.0.6, and its size is 'regular' (ie 4G). Not much duplicates in msf files (at least, not 4x time the real # of msgs..)\n\nI still have the 50Gb profile around if needed for post-mortem analysis. Oh, and i'm running with gloda enabled of course.", "tags": [], "creation_time": "2013-06-17T09:45:17Z", "attachment_id": null, "raw_text": "The profile i'm running now since two years or so doesnt exhibit the problem with 17.0.6, and its size is 'regular' (ie 4G). Not much duplicates in msf files (at least, not 4x time the real # of msgs..)\n\nI still have the 50Gb profile around if needed for post-mortem analysis. Oh, and i'm running with gloda enabled of course.", "creator": "landry@openbsd.org", "id": 7541315, "is_private": false, "time": "2013-06-17T09:45:17Z", "author": "landry@openbsd.org", "count": 27}, {"id": 8577771, "is_private": false, "count": 28, "time": "2014-03-25T20:59:44Z", "author": "vseerror@lehigh.edu", "bug_id": 632791, "text": "bug 895516 got duped to bug 484646\n\n(In reply to Landry Breuil (:gaston) from comment #27)\n> The profile i'm running now since two years or so doesnt exhibit the problem\n> with 17.0.6, and its size is 'regular' (ie 4G). Not much duplicates in msf\n> files (at least, not 4x time the real # of msgs..)\n> \n> I still have the 50Gb profile around if needed for post-mortem analysis. Oh,\n> and i'm running with gloda enabled of course.\n\nThanks for the offer. Is that 50Gb without the global-messages-db.sqlite?\nzipped?", "attachment_id": null, "tags": [], "creation_time": "2014-03-25T20:59:44Z", "creator": "vseerror@lehigh.edu", "raw_text": "bug 895516 got duped to bug 484646\n\n(In reply to Landry Breuil (:gaston) from comment #27)\n> The profile i'm running now since two years or so doesnt exhibit the problem\n> with 17.0.6, and its size is 'regular' (ie 4G). Not much duplicates in msf\n> files (at least, not 4x time the real # of msgs..)\n> \n> I still have the 50Gb profile around if needed for post-mortem analysis. Oh,\n> and i'm running with gloda enabled of course.\n\nThanks for the offer. Is that 50Gb without the global-messages-db.sqlite?\nzipped?"}, {"id": 8579834, "is_private": false, "author": "landry@openbsd.org", "bug_id": 632791, "tags": [], "creation_time": "2014-03-26T07:50:25Z", "attachment_id": null, "time": "2014-03-26T07:50:25Z", "count": 29, "text": "$du -s 7yh39hls.Test/* |sort -rn\n53386278        7yh39hls.Test/ImapMail\n13232   7yh39hls.Test/global-messages-db.sqlite\n7148    7yh39hls.Test/extensions\n\nThe main size issue was that mails were duplicated dozens of times in the INBOX files....\n\n$du -s 7yh39hls.Test/ImapMail/*/* |sort -rn\n31532576        7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX\n18129808        7yh39hls.Test/ImapMail/mail.craig.fr/nstmp-1\n814064  7yh39hls.Test/ImapMail/mail.craig-2.fr/Archivage.sbd\n738944  7yh39hls.Test/ImapMail/mail.craig.fr/nstmp\n721152  7yh39hls.Test/ImapMail/mail.craig-1.fr/nstmp\n581800  7yh39hls.Test/ImapMail/mail.craig-2.fr/INBOX.sbd\n409088  7yh39hls.Test/ImapMail/mail.craig.fr/INBOX\n165696  7yh39hls.Test/ImapMail/mail.craig-2.fr/Sent\n161376  7yh39hls.Test/ImapMail/mail.craig-2.fr/INBOX", "raw_text": "$du -s 7yh39hls.Test/* |sort -rn\n53386278        7yh39hls.Test/ImapMail\n13232   7yh39hls.Test/global-messages-db.sqlite\n7148    7yh39hls.Test/extensions\n\nThe main size issue was that mails were duplicated dozens of times in the INBOX files....\n\n$du -s 7yh39hls.Test/ImapMail/*/* |sort -rn\n31532576        7yh39hls.Test/ImapMail/mail.craig-1.fr/INBOX\n18129808        7yh39hls.Test/ImapMail/mail.craig.fr/nstmp-1\n814064  7yh39hls.Test/ImapMail/mail.craig-2.fr/Archivage.sbd\n738944  7yh39hls.Test/ImapMail/mail.craig.fr/nstmp\n721152  7yh39hls.Test/ImapMail/mail.craig-1.fr/nstmp\n581800  7yh39hls.Test/ImapMail/mail.craig-2.fr/INBOX.sbd\n409088  7yh39hls.Test/ImapMail/mail.craig.fr/INBOX\n165696  7yh39hls.Test/ImapMail/mail.craig-2.fr/Sent\n161376  7yh39hls.Test/ImapMail/mail.craig-2.fr/INBOX", "creator": "landry@openbsd.org"}]}}}