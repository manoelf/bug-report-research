{"comments": {}, "bugs": {"674523": {"comments": [{"count": 0, "is_private": false, "creator": "LpSolit@gmail.com", "text": "Created attachment 548776\npatch, v1\n\n$CGI::DISABLE_UPLOADS = 1 makes CGI.pm to ignore fields of type 'file'. This avoids making it process unnecessary large data when they are unexpected. Only attachment.cgi and post_bug.cgi are supposed to get attachments.", "time": "2011-07-27T14:30:53Z", "bug_id": 674523, "tags": [], "creation_time": "2011-07-27T14:30:53Z", "author": "LpSolit@gmail.com", "raw_text": "$CGI::DISABLE_UPLOADS = 1 makes CGI.pm to ignore fields of type 'file'. This avoids making it process unnecessary large data when they are unexpected. Only attachment.cgi and post_bug.cgi are supposed to get attachments.", "attachment_id": 548776, "id": 5616562}, {"attachment_id": 548776, "raw_text": "Hmm, interesting thought. When does DISABLE_UPLOADS take effect? If it's very late, perhaps we could simply set it inside of Bugzilla::Attachment->create? Or refactor Bugzilla so that we only have to set it there or something?", "id": 5624023, "creator": "mkanat@bugzilla.org", "is_private": false, "count": 1, "author": "mkanat@bugzilla.org", "creation_time": "2011-07-31T05:39:51Z", "tags": [], "bug_id": 674523, "time": "2011-07-31T05:39:51Z", "text": "Comment on attachment 548776\npatch, v1\n\nHmm, interesting thought. When does DISABLE_UPLOADS take effect? If it's very late, perhaps we could simply set it inside of Bugzilla::Attachment->create? Or refactor Bugzilla so that we only have to set it there or something?"}, {"text": "(In reply to comment #1)\n> Hmm, interesting thought. When does DISABLE_UPLOADS take effect? If it's\n> very late\n\nThis happens very early, when we call Bugzilla->cgi for the very first time: internally, this happens in CGI->new() which calls init() which calls read_multipart() which checks this parameter to know what to do with uploads (if it must skip them or store them in a temporary file).", "tags": [], "time": "2011-07-31T11:43:43Z", "bug_id": 674523, "creation_time": "2011-07-31T11:43:43Z", "author": "LpSolit@gmail.com", "count": 2, "is_private": false, "creator": "LpSolit@gmail.com", "id": 5624172, "raw_text": "(In reply to comment #1)\n> Hmm, interesting thought. When does DISABLE_UPLOADS take effect? If it's\n> very late\n\nThis happens very early, when we call Bugzilla->cgi for the very first time: internally, this happens in CGI->new() which calls init() which calls read_multipart() which checks this parameter to know what to do with uploads (if it must skip them or store them in a temporary file).", "attachment_id": null}, {"bug_id": 674523, "count": 3, "time": "2011-08-02T22:42:14Z", "tags": [], "text": "Comment on attachment 548776\npatch, v1\n\nOkay. In that case we need some hookable constant named ALLOW_UPLOADS or something, perhaps even as a variable in Bugzilla::CGI. Then we should check $0 in Bugzilla::CGI->new against scripts listed in ALLOW_UPLOADS and set DISABLE_UPLOADS appropriately.", "author": "mkanat@bugzilla.org", "creation_time": "2011-08-02T22:42:14Z", "creator": "mkanat@bugzilla.org", "is_private": false, "id": 5629066, "raw_text": "Okay. In that case we need some hookable constant named ALLOW_UPLOADS or something, perhaps even as a variable in Bugzilla::CGI. Then we should check $0 in Bugzilla::CGI->new against scripts listed in ALLOW_UPLOADS and set DISABLE_UPLOADS appropriately.", "attachment_id": 548776}, {"id": 5863073, "attachment_id": 575914, "raw_text": "I list both attachment.cgi and post_bug.cgi in a constant within CGI.pm. I don't think we need a hook for now unless someone can show evidence that this would cause any trouble.", "creation_time": "2011-11-21T19:10:58Z", "author": "LpSolit@gmail.com", "text": "Created attachment 575914\npatch, v2\n\nI list both attachment.cgi and post_bug.cgi in a constant within CGI.pm. I don't think we need a hook for now unless someone can show evidence that this would cause any trouble.", "time": "2011-11-21T19:10:58Z", "tags": [], "bug_id": 674523, "is_private": false, "creator": "LpSolit@gmail.com", "count": 4}, {"id": 5869562, "attachment_id": null, "raw_text": "Okay, so the patch looks okay, but I'm concerned about breaking extensions. In general, I'm actually not quite sure that this code is needed--I'm not familiar with any attacks that have been done against Bugzilla that this would protect us against, and I think it would make life more complex for customizers and extension writers.", "creation_time": "2011-11-23T22:14:07Z", "author": "mkanat@bugzilla.org", "text": "Okay, so the patch looks okay, but I'm concerned about breaking extensions. In general, I'm actually not quite sure that this code is needed--I'm not familiar with any attacks that have been done against Bugzilla that this would protect us against, and I think it would make life more complex for customizers and extension writers.", "time": "2011-11-23T22:14:07Z", "tags": [], "is_private": false, "creator": "mkanat@bugzilla.org", "bug_id": 674523, "count": 5}, {"count": 6, "creator": "LpSolit@gmail.com", "is_private": false, "time": "2012-04-16T09:38:14Z", "tags": [], "bug_id": 674523, "text": "Comment on attachment 575914\npatch, v2\n\nPushing this patch out of our radar for now, but we may revive it in the future if we have evidence of such problems.", "author": "LpSolit@gmail.com", "creation_time": "2012-04-16T09:38:14Z", "raw_text": "Pushing this patch out of our radar for now, but we may revive it in the future if we have evidence of such problems.", "attachment_id": 575914, "id": 6225329}]}}}