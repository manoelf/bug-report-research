{"comments": {}, "bugs": {"628335": {"comments": [{"is_private": false, "text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.12) Gecko/20101026 Firefox/3.6.12\nBuild Identifier: 4.0rc1 Release\n\nWhen editing the \"Assigned To\", \"QA Contact\" or CC lists, the userAutocomplete javascript/JSON fetches a list of users which match the inputted text. \n\nThe problem is that some of the users listed might not have Group Privileges to access the Bug in question, and accidentally adding one of these users to the \"Assigned To\", CC, or \"QA Contact\" fields will then grant them access to the Bug.  These mixup's can easily happen especially in work places where usernames are <lastname><first-initial>@domain.com and the workplace has several people with the same lastname.\n\nIn my particular environment, some of our Bugs belong to products which are \"Controlled Goods\", meaning that it is the law that only authorized users can see certain chunks of information.\n\nI have implemented a solution where all users in the user list generated by the JSON call appear in a Red font if they do not have Group Privileges to the Bug/Product.\n\nThe following indicate the changes made to make this work (Note: I used my own local repository):\n\nIndex: template/en/default/global/userselect.html.tmpl\n===================================================================\n--- template/en/default/global/userselect.html.tmpl     (revision 239)\n+++ template/en/default/global/userselect.html.tmpl     (working copy)\n@@ -30,6 +30,7 @@\n   # multiple: optional, do multiselect box, value is size (height) of box\n   # custom_userlist: optional, specify a limited list of users to use\n   # title: optional, extra information to display as a tooltip\n+  # product_name: optional, name of product this field is being utilized in\n   #%]\n\n [% IF Param(\"usemenuforusers\") %]\n@@ -86,6 +87,7 @@\n   <input\n     name=\"[% name FILTER html %]\"\n     value=\"[% value FILTER html %]\"\n+    onFocus=\"[% id FILTER js %]_autocomplete_set();\"\n     [% IF classes %] class=\"[% classes.join(' ') FILTER html %]\" [% END %]\n     [% IF onchange %] onchange=\"[% onchange FILTER html %]\" [% END %]\n     [% IF disabled %] disabled=\"[% disabled FILTER html %]\" [% END %]\n@@ -98,12 +100,16 @@\n     <div id=\"[% id FILTER html %]_autocomplete_container\"></div>\n     </div>\n     <script type=\"text/javascript\">\n+      function [% id FILTER html %]_autocomplete_set(){\n+         YAHOO.bugzilla.userAutocomplete.set_dynamic(\"[% product_name %]\"); \n+      }\n       if( typeof(YAHOO.bugzilla.userAutocomplete) !== 'undefined'\n           && YAHOO.bugzilla.userAutocomplete != null){\n         YAHOO.bugzilla.userAutocomplete.init( \"[% id FILTER js %]\",\n                     \"[% id FILTER js %]_autocomplete_container\"\n-                    [% IF multiple %], true[% END%]);        \n+                    [% IF multiple %], true[% END %]);        \n       }\n+      \n     </script>\n   [% END %]\n [% END %]\n\nIndex: Bugzilla/WebService/User.pm\n===================================================================\n--- Bugzilla/WebService/User.pm (revision 239)\n+++ Bugzilla/WebService/User.pm (working copy)\n@@ -202,7 +202,7 @@\n             }\n         }\n     }\n-   \n+    my $product_name = $params->{'product_name'};\n     my $in_group = $self->_filter_users_by_group(\n         \\@user_objects, $params);\n     if (Bugzilla->user->in_group('editusers')) {\n@@ -213,6 +213,7 @@\n                 name      => $self->type('string', $_->login),\n                 email     => $self->type('string', $_->email),\n                 can_login => $self->type('boolean', $_->is_disabled ? 0 : 1),\n+                can_access_product => $self->type('boolean', $_->can_access_product($product_name)),\n                 email_enabled     => $self->type('boolean', $_->email_enabled),\n                 login_denied_text => $self->type('string', $_->disabledtext),\n             }} @$in_group;\n@@ -226,6 +227,7 @@\n                 name      => $self->type('string', $_->login),\n                 email     => $self->type('string', $_->email),\n                 can_login => $self->type('boolean', $_->is_disabled ? 0 : 1),\n+                can_access_product => $self->type('boolean', $_->can_access_product($product_name)),\n             }} @$in_group;\n     }\n\n\nIndex: skins/standard/global.css\n===================================================================\n--- skins/standard/global.css   (revision 239)\n+++ skins/standard/global.css   (working copy)\n@@ -522,6 +522,9 @@\n     overflow: auto;\n     overflow-x: hidden;\n }\n+.yui-ac-content-text-warn {\n+    color: red\n+}\n #keyword_container {\n     padding-top: .2em;\n\n\nIndex: js/field.js\n===================================================================\n--- js/field.js (revision 239)\n+++ js/field.js (working copy)\n@@ -648,6 +648,7 @@\n YAHOO.bugzilla.userAutocomplete = {\n     counter : 0,\n     dataSource : null,\n+    product_name : null,\n     generateRequest : function ( enteredText ){\n       YAHOO.bugzilla.userAutocomplete.counter =\n                                    YAHOO.bugzilla.userAutocomplete.counter + 1;\n@@ -657,7 +658,8 @@\n           id : YAHOO.bugzilla.userAutocomplete.counter,\n           params : [ {\n             match : [ decodeURIComponent(enteredText) ],\n-            include_fields : [ \"email\", \"real_name\" ]\n+            include_fields : [ \"email\", \"real_name\", \"can_access_product\" ],\n+            product_name : YAHOO.bugzilla.userAutocomplete.product_name\n           } ]\n       };\n       var stringified =  YAHOO.lang.JSON.stringify(json_object);\n@@ -667,7 +669,12 @@\n       return stringified;\n     },\n     resultListFormat : function(oResultData, enteredText, sResultMatch) {\n-        return ( oResultData.real_name + \" (\" +  oResultData.email + \")\");\n+        if ( oResultData.can_access_product) {\n+            return ( oResultData.real_name + \" (\" +  oResultData.email + \")\");\n+        }\n+        else {\n+            return (\"<div class='yui-ac-content-text-warn'>\" + oResultData.real_name + \" (\" +  oResultData.email + \")</div>\");\n+        }\n     },\n     debug_helper : function ( ){\n         /* used to help debug any errors that might happen */\n@@ -687,10 +694,14 @@\n             metaFields : { error: \"error\", jsonRpcId: \"id\"},\n             fields : [\n                 { key : \"email\" },\n-                { key : \"real_name\"}\n+                { key : \"real_name\" },\n+                { key : \"can_access_product\" }\n             ]\n         };\n     },\n+    set_dynamic : function( product ) {\n+        YAHOO.bugzilla.userAutocomplete.product_name = product;\n+    },\n     init : function( field, container, multiple ) {\n         if( this.dataSource == null ){\n             this.init_ds();\n\n\nIndex: template/en/default/bug/edit.html.tmpl\n===================================================================\n--- template/en/default/bug/edit.html.tmpl      (revision 239)\n+++ template/en/default/bug/edit.html.tmpl      (working copy)\n@@ -482,6 +482,7 @@\n                  id => \"assigned_to\"\n                  name => \"assigned_to\"\n                  value => bug.assigned_to.login\n+                 product_name => bug.product\n                  classes => [\"bz_userfield\"]\n                  size => 30\n             %]\n@@ -524,6 +525,7 @@\n                 id => \"qa_contact\"\n                 name => \"qa_contact\"\n                 value => bug.qa_contact.login\n+                product_name => bug.product\n                 size => 30\n                 classes => [\"bz_userfield\"]\n                 emptyok => 1\n@@ -824,6 +826,7 @@\n                   id => \"newcc\"\n                   name => \"newcc\"\n                   value => \"\"\n+                  product_name => bug.product\n                   size => 30\n                   classes => [\"bz_userfield\"]\n                   multiple => 5\n\n\nExplanations:\njs/field.js\n  YAHOO.bugzilla.userAutocomplete:\n    - In here I created a function called set_dynamic, which for now only takes the variable 'product'.  This was created in order to work around some limitations.  I thought about setting it in the init() function, but this value would then continually get over written by proceeding calls to the init() function.  \nIE: When I would call init from userselect.html.tmpl like so:\nYAHOO.bugzilla.userAutocomplete.init( \"[% id FILTER js %]\",\n        \"[% id FILTER js %]_autocomplete_container\",\n        \"[% product_name FILTER js %]\",\n        [% IF multiple %], true[% END%]);\nthen the last INCLUDE of userselect.html.tmpl had its 'product_name' for all of the previous INCLUDE's.  This is problematic as you may only want this new \"feature\" on some fields but not on others.  By not setting this variable the feature would not be utilized, but using this method, not setting the variable on the last call to [% INCLUDE global/userselect.html.tmpl %] would make it so it was not set on all other previous INCLUDE's.\n\nI will attach a screen shot of the changed appearance.\n\nCheers,\n\nRandy\n\nReproducible: Always\n\nActual Results:  \nUsers who do not have Group Privileges to the Product are highlighted in Red", "id": 5222618, "time": "2011-01-24T19:38:53Z", "creation_time": "2011-01-24T19:38:53Z", "creator": "shadarap@hotmail.com", "count": 0, "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.12) Gecko/20101026 Firefox/3.6.12\nBuild Identifier: 4.0rc1 Release\n\nWhen editing the \"Assigned To\", \"QA Contact\" or CC lists, the userAutocomplete javascript/JSON fetches a list of users which match the inputted text. \n\nThe problem is that some of the users listed might not have Group Privileges to access the Bug in question, and accidentally adding one of these users to the \"Assigned To\", CC, or \"QA Contact\" fields will then grant them access to the Bug.  These mixup's can easily happen especially in work places where usernames are <lastname><first-initial>@domain.com and the workplace has several people with the same lastname.\n\nIn my particular environment, some of our Bugs belong to products which are \"Controlled Goods\", meaning that it is the law that only authorized users can see certain chunks of information.\n\nI have implemented a solution where all users in the user list generated by the JSON call appear in a Red font if they do not have Group Privileges to the Bug/Product.\n\nThe following indicate the changes made to make this work (Note: I used my own local repository):\n\nIndex: template/en/default/global/userselect.html.tmpl\n===================================================================\n--- template/en/default/global/userselect.html.tmpl     (revision 239)\n+++ template/en/default/global/userselect.html.tmpl     (working copy)\n@@ -30,6 +30,7 @@\n   # multiple: optional, do multiselect box, value is size (height) of box\n   # custom_userlist: optional, specify a limited list of users to use\n   # title: optional, extra information to display as a tooltip\n+  # product_name: optional, name of product this field is being utilized in\n   #%]\n\n [% IF Param(\"usemenuforusers\") %]\n@@ -86,6 +87,7 @@\n   <input\n     name=\"[% name FILTER html %]\"\n     value=\"[% value FILTER html %]\"\n+    onFocus=\"[% id FILTER js %]_autocomplete_set();\"\n     [% IF classes %] class=\"[% classes.join(' ') FILTER html %]\" [% END %]\n     [% IF onchange %] onchange=\"[% onchange FILTER html %]\" [% END %]\n     [% IF disabled %] disabled=\"[% disabled FILTER html %]\" [% END %]\n@@ -98,12 +100,16 @@\n     <div id=\"[% id FILTER html %]_autocomplete_container\"></div>\n     </div>\n     <script type=\"text/javascript\">\n+      function [% id FILTER html %]_autocomplete_set(){\n+         YAHOO.bugzilla.userAutocomplete.set_dynamic(\"[% product_name %]\"); \n+      }\n       if( typeof(YAHOO.bugzilla.userAutocomplete) !== 'undefined'\n           && YAHOO.bugzilla.userAutocomplete != null){\n         YAHOO.bugzilla.userAutocomplete.init( \"[% id FILTER js %]\",\n                     \"[% id FILTER js %]_autocomplete_container\"\n-                    [% IF multiple %], true[% END%]);        \n+                    [% IF multiple %], true[% END %]);        \n       }\n+      \n     </script>\n   [% END %]\n [% END %]\n\nIndex: Bugzilla/WebService/User.pm\n===================================================================\n--- Bugzilla/WebService/User.pm (revision 239)\n+++ Bugzilla/WebService/User.pm (working copy)\n@@ -202,7 +202,7 @@\n             }\n         }\n     }\n-   \n+    my $product_name = $params->{'product_name'};\n     my $in_group = $self->_filter_users_by_group(\n         \\@user_objects, $params);\n     if (Bugzilla->user->in_group('editusers')) {\n@@ -213,6 +213,7 @@\n                 name      => $self->type('string', $_->login),\n                 email     => $self->type('string', $_->email),\n                 can_login => $self->type('boolean', $_->is_disabled ? 0 : 1),\n+                can_access_product => $self->type('boolean', $_->can_access_product($product_name)),\n                 email_enabled     => $self->type('boolean', $_->email_enabled),\n                 login_denied_text => $self->type('string', $_->disabledtext),\n             }} @$in_group;\n@@ -226,6 +227,7 @@\n                 name      => $self->type('string', $_->login),\n                 email     => $self->type('string', $_->email),\n                 can_login => $self->type('boolean', $_->is_disabled ? 0 : 1),\n+                can_access_product => $self->type('boolean', $_->can_access_product($product_name)),\n             }} @$in_group;\n     }\n\n\nIndex: skins/standard/global.css\n===================================================================\n--- skins/standard/global.css   (revision 239)\n+++ skins/standard/global.css   (working copy)\n@@ -522,6 +522,9 @@\n     overflow: auto;\n     overflow-x: hidden;\n }\n+.yui-ac-content-text-warn {\n+    color: red\n+}\n #keyword_container {\n     padding-top: .2em;\n\n\nIndex: js/field.js\n===================================================================\n--- js/field.js (revision 239)\n+++ js/field.js (working copy)\n@@ -648,6 +648,7 @@\n YAHOO.bugzilla.userAutocomplete = {\n     counter : 0,\n     dataSource : null,\n+    product_name : null,\n     generateRequest : function ( enteredText ){\n       YAHOO.bugzilla.userAutocomplete.counter =\n                                    YAHOO.bugzilla.userAutocomplete.counter + 1;\n@@ -657,7 +658,8 @@\n           id : YAHOO.bugzilla.userAutocomplete.counter,\n           params : [ {\n             match : [ decodeURIComponent(enteredText) ],\n-            include_fields : [ \"email\", \"real_name\" ]\n+            include_fields : [ \"email\", \"real_name\", \"can_access_product\" ],\n+            product_name : YAHOO.bugzilla.userAutocomplete.product_name\n           } ]\n       };\n       var stringified =  YAHOO.lang.JSON.stringify(json_object);\n@@ -667,7 +669,12 @@\n       return stringified;\n     },\n     resultListFormat : function(oResultData, enteredText, sResultMatch) {\n-        return ( oResultData.real_name + \" (\" +  oResultData.email + \")\");\n+        if ( oResultData.can_access_product) {\n+            return ( oResultData.real_name + \" (\" +  oResultData.email + \")\");\n+        }\n+        else {\n+            return (\"<div class='yui-ac-content-text-warn'>\" + oResultData.real_name + \" (\" +  oResultData.email + \")</div>\");\n+        }\n     },\n     debug_helper : function ( ){\n         /* used to help debug any errors that might happen */\n@@ -687,10 +694,14 @@\n             metaFields : { error: \"error\", jsonRpcId: \"id\"},\n             fields : [\n                 { key : \"email\" },\n-                { key : \"real_name\"}\n+                { key : \"real_name\" },\n+                { key : \"can_access_product\" }\n             ]\n         };\n     },\n+    set_dynamic : function( product ) {\n+        YAHOO.bugzilla.userAutocomplete.product_name = product;\n+    },\n     init : function( field, container, multiple ) {\n         if( this.dataSource == null ){\n             this.init_ds();\n\n\nIndex: template/en/default/bug/edit.html.tmpl\n===================================================================\n--- template/en/default/bug/edit.html.tmpl      (revision 239)\n+++ template/en/default/bug/edit.html.tmpl      (working copy)\n@@ -482,6 +482,7 @@\n                  id => \"assigned_to\"\n                  name => \"assigned_to\"\n                  value => bug.assigned_to.login\n+                 product_name => bug.product\n                  classes => [\"bz_userfield\"]\n                  size => 30\n             %]\n@@ -524,6 +525,7 @@\n                 id => \"qa_contact\"\n                 name => \"qa_contact\"\n                 value => bug.qa_contact.login\n+                product_name => bug.product\n                 size => 30\n                 classes => [\"bz_userfield\"]\n                 emptyok => 1\n@@ -824,6 +826,7 @@\n                   id => \"newcc\"\n                   name => \"newcc\"\n                   value => \"\"\n+                  product_name => bug.product\n                   size => 30\n                   classes => [\"bz_userfield\"]\n                   multiple => 5\n\n\nExplanations:\njs/field.js\n  YAHOO.bugzilla.userAutocomplete:\n    - In here I created a function called set_dynamic, which for now only takes the variable 'product'.  This was created in order to work around some limitations.  I thought about setting it in the init() function, but this value would then continually get over written by proceeding calls to the init() function.  \nIE: When I would call init from userselect.html.tmpl like so:\nYAHOO.bugzilla.userAutocomplete.init( \"[% id FILTER js %]\",\n        \"[% id FILTER js %]_autocomplete_container\",\n        \"[% product_name FILTER js %]\",\n        [% IF multiple %], true[% END%]);\nthen the last INCLUDE of userselect.html.tmpl had its 'product_name' for all of the previous INCLUDE's.  This is problematic as you may only want this new \"feature\" on some fields but not on others.  By not setting this variable the feature would not be utilized, but using this method, not setting the variable on the last call to [% INCLUDE global/userselect.html.tmpl %] would make it so it was not set on all other previous INCLUDE's.\n\nI will attach a screen shot of the changed appearance.\n\nCheers,\n\nRandy\n\nReproducible: Always\n\nActual Results:  \nUsers who do not have Group Privileges to the Product are highlighted in Red", "attachment_id": null, "bug_id": 628335, "tags": [], "author": "shadarap@hotmail.com"}, {"is_private": false, "time": "2011-01-24T19:49:46Z", "raw_text": "Here is a snapshot of the change in action.  I have blurred out some information using blue marks.", "text": "Created attachment 506472\nSnapshot of requested Enhancement\n\nHere is a snapshot of the change in action.  I have blurred out some information using blue marks.", "id": 5222674, "count": 1, "author": "shadarap@hotmail.com", "tags": [], "creator": "shadarap@hotmail.com", "creation_time": "2011-01-24T19:49:46Z", "bug_id": 628335, "attachment_id": 506472}, {"raw_text": "Hey Randy! Thanks for the patch. If you would like us to review it, you will want to attach it as an attachment and request review. For more details, see our development process here:\n\n  http://wiki.mozilla.org/Bugzilla:Developers\n\nI'm not completely sure that we want this--I'd like to see more users say that this is important to them and that they would clearly understand the highlighting, before we would do this.", "count": 2, "tags": [], "author": "mkanat@bugzilla.org", "attachment_id": null, "bug_id": 628335, "text": "Hey Randy! Thanks for the patch. If you would like us to review it, you will want to attach it as an attachment and request review. For more details, see our development process here:\n\n  http://wiki.mozilla.org/Bugzilla:Developers\n\nI'm not completely sure that we want this--I'd like to see more users say that this is important to them and that they would clearly understand the highlighting, before we would do this.", "id": 5222941, "time": "2011-01-24T21:15:23Z", "is_private": false, "creator": "mkanat@bugzilla.org", "creation_time": "2011-01-24T21:15:23Z"}, {"raw_text": "I could see this being very useful for BMO.", "count": 3, "tags": [], "author": "dkl@mozilla.com", "attachment_id": null, "bug_id": 628335, "text": "I could see this being very useful for BMO.", "id": 5223007, "time": "2011-01-24T21:29:54Z", "is_private": false, "creator": "dkl@mozilla.com", "creation_time": "2011-01-24T21:29:54Z"}]}}}