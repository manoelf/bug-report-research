{"bugs": {"640464": {"comments": [{"text": "We are constantly failing tests from mozilla-central, and in an effort to get our tree green I want to at least remove one of the bottlenecks with doing so.\n\nWaiting on reviews/approvals for Firefox (m-c) based tests.\n\nWhat I propose, is the following plan:\n\ncreate a |c-c/suite/test-overrides| directory.\n\nlet our suite/ base makefile recurse into there (during the _end_ of tier_app) if we are an ENABLE_TESTS build.\n\ninside, have a Makefile that then does the logic for test installing.\n\nI propose using \"simple\" rules in the Makefile.in for the test-list, and let our tests simply overwrite the m-c based tests, making sure this all gets run before package-tests.\n\nAny test added here, _NEEDS_ to have a warning (todo is fine) added to said test that we are overriding it, and a BUG on file to track re-enabling the m-c based test.\n\nwe should also have a configure arg to disable the test overriding (so we can, in theory setup a periodic builder to re-enable the m-c tests once and a while).\n\nThe idea would be that we do not _WANT_ any tests lingering in our overrides, and will still ALWAYS want to get reviews and use the m-c copies.\n\nThe benefits: keeps the logic for this out of buildbot and instead in the real build system, where it will also help local devs who choose to run tests.\nOnce we are green staying that way should be easier!\nThe Cons: Overwriting m-c tests is a PITA and a cause of divergence, but given the struggle we have had with getting [and keeping] our tree green, it may be our best shot.\n\nKAIRO: requesting status2.1 for a rough sign-off on this plan.\nSerge: Adding you here, as I think you would be a good candidate to help manage this plan/effort, and I will likely request review from you for some of the initial work here.", "id": 5335228, "attachment_id": null, "creation_time": "2011-03-10T05:52:25Z", "tags": [], "is_private": false, "raw_text": "We are constantly failing tests from mozilla-central, and in an effort to get our tree green I want to at least remove one of the bottlenecks with doing so.\n\nWaiting on reviews/approvals for Firefox (m-c) based tests.\n\nWhat I propose, is the following plan:\n\ncreate a |c-c/suite/test-overrides| directory.\n\nlet our suite/ base makefile recurse into there (during the _end_ of tier_app) if we are an ENABLE_TESTS build.\n\ninside, have a Makefile that then does the logic for test installing.\n\nI propose using \"simple\" rules in the Makefile.in for the test-list, and let our tests simply overwrite the m-c based tests, making sure this all gets run before package-tests.\n\nAny test added here, _NEEDS_ to have a warning (todo is fine) added to said test that we are overriding it, and a BUG on file to track re-enabling the m-c based test.\n\nwe should also have a configure arg to disable the test overriding (so we can, in theory setup a periodic builder to re-enable the m-c tests once and a while).\n\nThe idea would be that we do not _WANT_ any tests lingering in our overrides, and will still ALWAYS want to get reviews and use the m-c copies.\n\nThe benefits: keeps the logic for this out of buildbot and instead in the real build system, where it will also help local devs who choose to run tests.\nOnce we are green staying that way should be easier!\nThe Cons: Overwriting m-c tests is a PITA and a cause of divergence, but given the struggle we have had with getting [and keeping] our tree green, it may be our best shot.\n\nKAIRO: requesting status2.1 for a rough sign-off on this plan.\nSerge: Adding you here, as I think you would be a good candidate to help manage this plan/effort, and I will likely request review from you for some of the initial work here.", "creator": "bugspam.Callek@gmail.com", "author": "bugspam.Callek@gmail.com", "time": "2011-03-10T05:52:25Z", "bug_id": 640464, "count": 0}, {"creation_time": "2011-03-10T10:05:04Z", "author": "bugzillamozillaorg_serge_20140323@gautherie.fr", "attachment_id": null, "id": 5335555, "creator": "bugzillamozillaorg_serge_20140323@gautherie.fr", "text": "I have been wishing (mostly silently) for something like this for so long ;->\n\nA few (future) ideas, for what they are worth:\n\nDepending on how it is implemented, part of the logic might be shared in m-c.\n\nI assume this could be used to override \"MailNews\" tests as well: I'm obviously thinking about xpcshell tests here, rather than mochitest-*/reftest-*.\n\nI wonder whether this could be extended to be usable to package(+override) Firefox (and maybe Thunderbird) tests we currently duplicate [sometimes because app APIs differ anyway] (or just (knowingly) miss to port).\n\nMaybe there could be a test template (for each kind of test suite) that the override logic could update with the test name (in the wanted warning) and copy+rename as an additional test, rather than modifying each test (to add the warning).\n(Though I'd prefer the next idea.)\n\nI wonder whether it could be about \"patch\" rather than \"override\", as it's done for some external libs in m-c.\n(So we could get enhancement for free or break+check when patch doesn't apply anymore.)\n[Else, I would be wishing for some kind of update warning like http://dev.seamonkey.at/?d=x&i=mozilla&m=c]\n\nWould that qualify as a GSoC project? ;->", "count": 1, "raw_text": "I have been wishing (mostly silently) for something like this for so long ;->\n\nA few (future) ideas, for what they are worth:\n\nDepending on how it is implemented, part of the logic might be shared in m-c.\n\nI assume this could be used to override \"MailNews\" tests as well: I'm obviously thinking about xpcshell tests here, rather than mochitest-*/reftest-*.\n\nI wonder whether this could be extended to be usable to package(+override) Firefox (and maybe Thunderbird) tests we currently duplicate [sometimes because app APIs differ anyway] (or just (knowingly) miss to port).\n\nMaybe there could be a test template (for each kind of test suite) that the override logic could update with the test name (in the wanted warning) and copy+rename as an additional test, rather than modifying each test (to add the warning).\n(Though I'd prefer the next idea.)\n\nI wonder whether it could be about \"patch\" rather than \"override\", as it's done for some external libs in m-c.\n(So we could get enhancement for free or break+check when patch doesn't apply anymore.)\n[Else, I would be wishing for some kind of update warning like http://dev.seamonkey.at/?d=x&i=mozilla&m=c]\n\nWould that qualify as a GSoC project? ;->", "bug_id": 640464, "is_private": false, "tags": [], "time": "2011-03-10T10:05:04Z"}, {"author": "kairo@kairo.at", "text": "Serge, I'm against any auto-patch-during-build approach per se, as that calls for having awful conflicts in the builds.\nI have been thinking for quite some time that something in between manual porting of all code and keeping only diffs on our side and applying them to FF/TB files automatically would be good. This would not only be good for tests, but everything we do. That said, I don't have a good solution for this yet and it also is way larger than this bug, let's discuss that somewhere else and stick with the tight solution here for the moment.\n\nI'm in favor of doing that override solution with the clear rules Callek gives in comment #0, though.", "creator": "kairo@kairo.at", "id": 5336319, "attachment_id": null, "creation_time": "2011-03-10T16:21:03Z", "tags": [], "is_private": false, "time": "2011-03-10T16:21:03Z", "count": 2, "bug_id": 640464, "raw_text": "Serge, I'm against any auto-patch-during-build approach per se, as that calls for having awful conflicts in the builds.\nI have been thinking for quite some time that something in between manual porting of all code and keeping only diffs on our side and applying them to FF/TB files automatically would be good. This would not only be good for tests, but everything we do. That said, I don't have a good solution for this yet and it also is way larger than this bug, let's discuss that somewhere else and stick with the tight solution here for the moment.\n\nI'm in favor of doing that override solution with the clear rules Callek gives in comment #0, though."}, {"tags": [], "is_private": false, "raw_text": "", "text": "*** Bug 716404 has been marked as a duplicate of this bug. ***", "id": 5964312, "attachment_id": null, "creation_time": "2012-01-08T22:43:10Z", "time": "2012-01-08T22:43:10Z", "bug_id": 640464, "count": 3, "creator": "bugspam.Callek@gmail.com", "author": "bugspam.Callek@gmail.com"}, {"bug_id": 640464, "count": 4, "time": "2012-01-08T23:17:33Z", "creator": "bugzillamozillaorg_serge_20140323@gautherie.fr", "author": "bugzillamozillaorg_serge_20140323@gautherie.fr", "raw_text": "(In reply to Justin Wood (:Callek) from comment #0)\n> The Cons: Overwriting m-c tests is a PITA and a cause of divergence, but\n> given the struggle we have had with getting [and keeping] our tree green, it\n> may be our best shot.\n\n(In reply to Robert Kaiser (:kairo@mozilla.com) from comment #2)\n> Serge, I'm against any auto-patch-during-build approach per se, as that\n> calls for having awful conflicts in the builds.\n\nMy idea of using diffs would likely include doing a checksum of the m-c test and reporting a warning/error when it changes (and/or patching fails).\nThat way we would know (immediately) to check/port what was done in m-c.\n\nThat would be a compromise between more work or missing changes.", "is_private": false, "tags": [], "creation_time": "2012-01-08T23:17:33Z", "id": 5964354, "attachment_id": null, "text": "(In reply to Justin Wood (:Callek) from comment #0)\n> The Cons: Overwriting m-c tests is a PITA and a cause of divergence, but\n> given the struggle we have had with getting [and keeping] our tree green, it\n> may be our best shot.\n\n(In reply to Robert Kaiser (:kairo@mozilla.com) from comment #2)\n> Serge, I'm against any auto-patch-during-build approach per se, as that\n> calls for having awful conflicts in the builds.\n\nMy idea of using diffs would likely include doing a checksum of the m-c test and reporting a warning/error when it changes (and/or patching fails).\nThat way we would know (immediately) to check/port what was done in m-c.\n\nThat would be a compromise between more work or missing changes."}]}}, "comments": {}}