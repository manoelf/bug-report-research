{"bugs": {"696650": {"comments": [{"bug_id": 696650, "id": 5799451, "tags": [], "count": 0, "is_private": false, "attachment_id": null, "time": "2011-10-23T16:59:21Z", "text": "Caching of HTTP 301 (and 302) redirects is hard to skip within the UI, because the original URI is not exposed for interaction (bug 68423).\n\nWould it be possible for a \"hard refresh\" (Ctrl-Shift-R etc) to start at the beginning of any redirect chain, skipping the cache on all intermediate pages?\n\nThat is, if typing http://example.com/A redirects my browser to http://example.com/B a hard refresh should request http://example.com/A from the server to check that the redirect is still valid.\n\nThis would be extremely useful for web developers debugging redirection configurations, or to provide a workaround to users still experiencing problems after a faulty redirect has been fixed. (See http://rwec.co.uk/q/cached-redirs for more)\n\n(Apologies if this isn't the right component to file this under, I'm not sure where the changes would need to be made.)", "raw_text": "Caching of HTTP 301 (and 302) redirects is hard to skip within the UI, because the original URI is not exposed for interaction (bug 68423).\n\nWould it be possible for a \"hard refresh\" (Ctrl-Shift-R etc) to start at the beginning of any redirect chain, skipping the cache on all intermediate pages?\n\nThat is, if typing http://example.com/A redirects my browser to http://example.com/B a hard refresh should request http://example.com/A from the server to check that the redirect is still valid.\n\nThis would be extremely useful for web developers debugging redirection configurations, or to provide a workaround to users still experiencing problems after a faulty redirect has been fixed. (See http://rwec.co.uk/q/cached-redirs for more)\n\n(Apologies if this isn't the right component to file this under, I'm not sure where the changes would need to be made.)", "creation_time": "2011-10-23T16:59:21Z", "author": "rowan.collins@gmail.com", "creator": "rowan.collins@gmail.com"}, {"creator": "torisugari@gmail.com", "author": "torisugari@gmail.com", "is_private": false, "count": 1, "tags": [], "id": 5828089, "bug_id": 696650, "raw_text": "I'd rather agree on 302, but why 301 too? Both user and UA are sure it has moved from ~/A to ~/B and the location bar also shows ~/B. Isn't it too tricky if it go back to ~/A?", "creation_time": "2011-11-05T02:40:57Z", "text": "I'd rather agree on 302, but why 301 too? Both user and UA are sure it has moved from ~/A to ~/B and the location bar also shows ~/B. Isn't it too tricky if it go back to ~/A?", "attachment_id": null, "time": "2011-11-05T02:40:57Z"}, {"creator": "rowan.collins@gmail.com", "author": "rowan.collins@gmail.com", "bug_id": 696650, "count": 2, "is_private": false, "tags": [], "id": 5828594, "text": "Well, firstly, the UI does not currently make any distinction between 301 and 302 redirects, although arguably it should.\n\nSecondly, all we are talking about here is by-passing a cache record in the UA. A 301 status does not mean that the old URI is no longer a valid resource, any more than a long cache age on an asset means that it is an error to re-request that asset more often. If the user specifically asks the UA to by-pass the cache, I see no reason why this should not include going back to the resource originally navigated to (by entering a URL, or following a hyperlink from another resource).\n\nNote that selecting a bookmark would be a different situation, because the bookmark itself could be updated when the 301 is first encountered (per the spec's mention of \"link-editing capability\"), so the cached response would not be relevant.", "attachment_id": null, "time": "2011-11-05T17:18:10Z", "raw_text": "Well, firstly, the UI does not currently make any distinction between 301 and 302 redirects, although arguably it should.\n\nSecondly, all we are talking about here is by-passing a cache record in the UA. A 301 status does not mean that the old URI is no longer a valid resource, any more than a long cache age on an asset means that it is an error to re-request that asset more often. If the user specifically asks the UA to by-pass the cache, I see no reason why this should not include going back to the resource originally navigated to (by entering a URL, or following a hyperlink from another resource).\n\nNote that selecting a bookmark would be a different situation, because the bookmark itself could be updated when the 301 is first encountered (per the spec's mention of \"link-editing capability\"), so the cached response would not be relevant.", "creation_time": "2011-11-05T17:18:10Z"}, {"tags": [], "count": 3, "is_private": false, "id": 5828899, "bug_id": 696650, "raw_text": "(In reply to Rowan Collins from comment #2)\n> Secondly, all we are talking about here is by-passing a cache record in the\n> UA. \nI'd rather like to talk about which page should be reloaded, ~/A or ~/B. You can browse ~/A with setting redirect-limit 0. Then you can reload (and hard reload if you like) ~/A happily.\n\n> A 301 status does not mean that the old URI is no longer a valid\n> resource, any more than a long cache age on an asset means that\n> it is an error to re-request that asset more often.\n\nIf a website's \"resource\" is not dead, that simply means the website is not user-friendly, is it? I don't think we should recommend that web developers will re-use ~/A for another purpose again and again. That is why \"entering a URL, or following a hyperlink from another resource\" is an evil action. 301 implies \"don't do that\".\n\nOn the other hand, someone in a search engine said 302 should be treated as something like a shortcut. In this case, ~/A can be more meaningful than ~/B even if the actual contents are located at ~/B. And ~/A may redirect to ~/C some day.\n\ne.g.\n\"example.com/latest-blog.html\" may 302-redirect to \"example.com/2011/11/06.html\"\n\nNow, browser's urlbar shows \"2011/11/06.html\" but that does not mean \"latest-blog.html\" is an obsolete URI. It should redirect to \"2011/11/07.html\" tomorrow. The problem is, Mozilla does not provide a way to bookmark \"latest-blog.html\" while users are browsing \"2011/11/06.html\". They may want to bookmark both. And they may want to reload both.", "creation_time": "2011-11-06T00:19:15Z", "text": "(In reply to Rowan Collins from comment #2)\n> Secondly, all we are talking about here is by-passing a cache record in the\n> UA. \nI'd rather like to talk about which page should be reloaded, ~/A or ~/B. You can browse ~/A with setting redirect-limit 0. Then you can reload (and hard reload if you like) ~/A happily.\n\n> A 301 status does not mean that the old URI is no longer a valid\n> resource, any more than a long cache age on an asset means that\n> it is an error to re-request that asset more often.\n\nIf a website's \"resource\" is not dead, that simply means the website is not user-friendly, is it? I don't think we should recommend that web developers will re-use ~/A for another purpose again and again. That is why \"entering a URL, or following a hyperlink from another resource\" is an evil action. 301 implies \"don't do that\".\n\nOn the other hand, someone in a search engine said 302 should be treated as something like a shortcut. In this case, ~/A can be more meaningful than ~/B even if the actual contents are located at ~/B. And ~/A may redirect to ~/C some day.\n\ne.g.\n\"example.com/latest-blog.html\" may 302-redirect to \"example.com/2011/11/06.html\"\n\nNow, browser's urlbar shows \"2011/11/06.html\" but that does not mean \"latest-blog.html\" is an obsolete URI. It should redirect to \"2011/11/07.html\" tomorrow. The problem is, Mozilla does not provide a way to bookmark \"latest-blog.html\" while users are browsing \"2011/11/06.html\". They may want to bookmark both. And they may want to reload both.", "time": "2011-11-06T00:19:15Z", "attachment_id": null, "creator": "torisugari@gmail.com", "author": "torisugari@gmail.com"}, {"author": "rowan.collins@gmail.com", "creator": "rowan.collins@gmail.com", "bug_id": 696650, "id": 5829445, "tags": [], "count": 4, "is_private": false, "time": "2011-11-06T18:22:42Z", "attachment_id": null, "text": "I think my main contention in all of this is simply that webmasters have the right to change their minds. Not often, and not without some penalty, but I don't accept that returning a 301 status once means waiving all ability to return a different status for the same request if circumstances change.\n\nPut from the other side, if I, as a user, type \"www.h2g2.com\" into my browser's address bar, I should have some way of telling the browser that I want it to check what the current controller of that URI would like it to represent, regardless of what information is in the browser's cache. I am not saying that this should be the default behaviour, only that as the user of the browser I should have some way of triggering that behaviour short of manually manipulating the cache database.\n\nThe issue of exposing multiple addresses in a 302 chain for bookmarking etc is a separate issue, discussed on bug 68423.", "creation_time": "2011-11-06T18:22:42Z", "raw_text": "I think my main contention in all of this is simply that webmasters have the right to change their minds. Not often, and not without some penalty, but I don't accept that returning a 301 status once means waiving all ability to return a different status for the same request if circumstances change.\n\nPut from the other side, if I, as a user, type \"www.h2g2.com\" into my browser's address bar, I should have some way of telling the browser that I want it to check what the current controller of that URI would like it to represent, regardless of what information is in the browser's cache. I am not saying that this should be the default behaviour, only that as the user of the browser I should have some way of triggering that behaviour short of manually manipulating the cache database.\n\nThe issue of exposing multiple addresses in a 302 chain for bookmarking etc is a separate issue, discussed on bug 68423."}, {"creator": "ws.bugzilla@starkov.name", "author": "ws.bugzilla@starkov.name", "text": "This would certainly be a great addition to developer tools. It's not needed often, but when you need it, you NEED IT. The best work-around for now is to blow away the entire site using \"Forget this site\". Not always appropriate.\n\n(but if you're the webmaster and you're annoyed that Firefox cached your redirect: don't serve it cacheable next time!)", "attachment_id": null, "time": "2014-02-28T19:27:52Z", "raw_text": "This would certainly be a great addition to developer tools. It's not needed often, but when you need it, you NEED IT. The best work-around for now is to blow away the entire site using \"Forget this site\". Not always appropriate.\n\n(but if you're the webmaster and you're annoyed that Firefox cached your redirect: don't serve it cacheable next time!)", "creation_time": "2014-02-28T19:27:52Z", "bug_id": 696650, "is_private": false, "count": 5, "tags": [], "id": 8477925}]}}, "comments": {}}