{"bugs": {"642675": {"comments": [{"attachment_id": null, "creator": "pde-lists@eff.org", "author": "pde-lists@eff.org", "text": "User-Agent:       Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.17) Gecko/20110302 Iceape/2.0.12\nBuild Identifier: \n\nWeb sites are gradually learning that HTTPS is necessary for the secure deployment of any account-based service.  However, many websites (Twitter is currently a random example) offer HTTPS but do not set the \"secure\" flag in their authentication cookies.\n\nThat means that a network attacker (like Firesheep combined with a malicious website, or like Firesheep but with the addition of an easy-to-implement active attack) can steal the user's authentication cookies and hijack their account simply by causing the browser to GET something from the http:// version of the victim domain.  The network attacker will get the cookie before the webserver ever has a chance to respond/redirect the user to HTTPS.\n\nThere are solutions to this, of course: set the secure flag in all authentication cookies, or better, enable HSTS since that also protects against SSL stripping attacks.\n\nThe web browser needs to indicate to users (and web developers) if these security problems exist in HTTPS websites.  Break the lock icon, change the colour of the address bar, cross out the \"https\", whatever is considered fashionable these days.  An HTTPS website with insecure cookies is not really secure.\n\nReproducible: Always", "count": 0, "is_private": false, "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.17) Gecko/20110302 Iceape/2.0.12\nBuild Identifier: \n\nWeb sites are gradually learning that HTTPS is necessary for the secure deployment of any account-based service.  However, many websites (Twitter is currently a random example) offer HTTPS but do not set the \"secure\" flag in their authentication cookies.\n\nThat means that a network attacker (like Firesheep combined with a malicious website, or like Firesheep but with the addition of an easy-to-implement active attack) can steal the user's authentication cookies and hijack their account simply by causing the browser to GET something from the http:// version of the victim domain.  The network attacker will get the cookie before the webserver ever has a chance to respond/redirect the user to HTTPS.\n\nThere are solutions to this, of course: set the secure flag in all authentication cookies, or better, enable HSTS since that also protects against SSL stripping attacks.\n\nThe web browser needs to indicate to users (and web developers) if these security problems exist in HTTPS websites.  Break the lock icon, change the colour of the address bar, cross out the \"https\", whatever is considered fashionable these days.  An HTTPS website with insecure cookies is not really secure.\n\nReproducible: Always", "bug_id": 642675, "creation_time": "2011-03-18T00:47:43Z", "tags": [], "time": "2011-03-18T00:47:43Z", "id": 5352430}, {"text": "A couple of other vulnerability scenarios I should have mentioned:\n\n- Firesheep plus *any* link to http://victim.domain.com that the victim might follow on the public web\n\n- Firesheep plus the user naively typing \"victim.domain.com\" into the addressbar.\n\nSo to be clear, Firesheep does not need to be modified for it to be considered a ubiquitous exploit against this vulnerability.", "count": 1, "id": 5352462, "author": "pde-lists@eff.org", "time": "2011-03-18T01:07:22Z", "creator": "pde-lists@eff.org", "tags": [], "raw_text": "A couple of other vulnerability scenarios I should have mentioned:\n\n- Firesheep plus *any* link to http://victim.domain.com that the victim might follow on the public web\n\n- Firesheep plus the user naively typing \"victim.domain.com\" into the addressbar.\n\nSo to be clear, Firesheep does not need to be modified for it to be considered a ubiquitous exploit against this vulnerability.", "creation_time": "2011-03-18T01:07:22Z", "bug_id": 642675, "is_private": false, "attachment_id": null}, {"text": "One additional vulnerability scenario that is important to point out, as it's incredibly prevalent:\n\nA user browses any number of sites which embed content from sites in question which do not mark their cookies as secure: E.g. the Facebook \"Like\" buttons, Twitter \"Tweet\" buttons, site badges, etc - any resource retrieved from the same domain over HTTP. These are difficult to avoid without the user being proactive (e.g. HTTPS-Everywhere) and inherently leak your authentication cookies. For example, the Facebook \"Like\" button is language-dependent and will change based on your account settings.\n\nSee screenshot in the original Firesheep presentation for an example of these type of resources included in a Techcrunch article: http://codebutler.github.com/firesheep/tc12/#16", "count": 2, "author": "mozilla@cdine.org", "creator": "mozilla@cdine.org", "attachment_id": null, "time": "2011-03-18T18:05:25Z", "id": 5353747, "creation_time": "2011-03-18T18:05:25Z", "bug_id": 642675, "raw_text": "One additional vulnerability scenario that is important to point out, as it's incredibly prevalent:\n\nA user browses any number of sites which embed content from sites in question which do not mark their cookies as secure: E.g. the Facebook \"Like\" buttons, Twitter \"Tweet\" buttons, site badges, etc - any resource retrieved from the same domain over HTTP. These are difficult to avoid without the user being proactive (e.g. HTTPS-Everywhere) and inherently leak your authentication cookies. For example, the Facebook \"Like\" button is language-dependent and will change based on your account settings.\n\nSee screenshot in the original Firesheep presentation for an example of these type of resources included in a Techcrunch article: http://codebutler.github.com/firesheep/tc12/#16", "tags": [], "is_private": false}, {"author": "pde-lists@eff.org", "text": "Adam Langley asked me the following important question:\n\n    How is a browser to know which cookies are sensitive? Do you suggest that\n    all cookies on an HTTPS site must be marked 'secure'?\n\nHere is a first draft heuristic answer:\n\n    If the user logs in (username/password submission), and the resulting page\n    load (including redirects) is complete, and the user has cookies from this\n    domain, and none of them are marked secure, trigger the UI change.\n\nUnder this heuristic, if the web developers have demonstrated that they know\nabout the existence of the secure cookie flag, we will rely on them to mark\ntheir authentication cookies with it.", "count": 3, "attachment_id": null, "creator": "pde-lists@eff.org", "time": "2011-03-18T19:20:18Z", "id": 5353986, "is_private": false, "creation_time": "2011-03-18T19:20:18Z", "bug_id": 642675, "raw_text": "Adam Langley asked me the following important question:\n\n    How is a browser to know which cookies are sensitive? Do you suggest that\n    all cookies on an HTTPS site must be marked 'secure'?\n\nHere is a first draft heuristic answer:\n\n    If the user logs in (username/password submission), and the resulting page\n    load (including redirects) is complete, and the user has cookies from this\n    domain, and none of them are marked secure, trigger the UI change.\n\nUnder this heuristic, if the web developers have demonstrated that they know\nabout the existence of the secure cookie flag, we will rely on them to mark\ntheir authentication cookies with it.", "tags": []}, {"time": "2011-03-18T20:33:25Z", "id": 5354189, "raw_text": "If we use the \"mixed content\" lock icon, we need a line item in the Page Info window explaining the cookie situation (whether there are secure cookies and whether there are insecure cookies).\n\nThe heuristic seems about right to avoid triggering false positives, but it's complicated, making me wonder if we should just do the Page Info line item without the lock icon change.", "creation_time": "2011-03-18T20:33:25Z", "bug_id": 642675, "tags": [], "is_private": false, "text": "If we use the \"mixed content\" lock icon, we need a line item in the Page Info window explaining the cookie situation (whether there are secure cookies and whether there are insecure cookies).\n\nThe heuristic seems about right to avoid triggering false positives, but it's complicated, making me wonder if we should just do the Page Info line item without the lock icon change.", "count": 4, "author": "jruderman@gmail.com", "creator": "jruderman@gmail.com", "attachment_id": null}, {"creator": "honzab.moz@firemni.cz", "tags": [], "raw_text": "What to show for pages that use both http and https and keep a state/option in non-secure cookies?  I think to show broken-security UI is a bit overreaction for this case.\n\nDo we have any stats how often there are non-secure cookies used on secured pages that doesn't contain any login/account info?  If it is even possible to have such a stat.", "bug_id": 642675, "creation_time": "2011-03-21T23:11:18Z", "is_private": false, "attachment_id": null, "text": "What to show for pages that use both http and https and keep a state/option in non-secure cookies?  I think to show broken-security UI is a bit overreaction for this case.\n\nDo we have any stats how often there are non-secure cookies used on secured pages that doesn't contain any login/account info?  If it is even possible to have such a stat.", "count": 5, "id": 5358657, "author": "honzab.moz@firemni.cz", "time": "2011-03-21T23:11:18Z"}, {"id": 5358876, "time": "2011-03-22T00:29:09Z", "author": "pde-lists@eff.org", "count": 6, "text": "(In reply to comment #5)\n\n> What to show for pages that use both http and https and keep a state/option in\n> non-secure cookies?  I think to show broken-security UI is a bit overreaction\n> for this case.\n\nI gather you mean pages that are available over *either* http or https, not pages with mixed http/https content ;)\n\n> Do we have any stats how often there are non-secure cookies used on secured\n> pages that doesn't contain any login/account info?  If it is even possible to\n> have such a stat.\n\nWhy would these pages be affected by the heuristic I proposed in comment 3?  If the user hasn't logged in, then the heuristic won't have been triggered.", "is_private": false, "attachment_id": null, "tags": [], "creator": "pde-lists@eff.org", "bug_id": 642675, "creation_time": "2011-03-22T00:29:09Z", "raw_text": "(In reply to comment #5)\n\n> What to show for pages that use both http and https and keep a state/option in\n> non-secure cookies?  I think to show broken-security UI is a bit overreaction\n> for this case.\n\nI gather you mean pages that are available over *either* http or https, not pages with mixed http/https content ;)\n\n> Do we have any stats how often there are non-secure cookies used on secured\n> pages that doesn't contain any login/account info?  If it is even possible to\n> have such a stat.\n\nWhy would these pages be affected by the heuristic I proposed in comment 3?  If the user hasn't logged in, then the heuristic won't have been triggered."}, {"is_private": false, "raw_text": "The \"mixed content\" lock icon has been removed in Firefox 4.\nThere is no longer any lock icon by default.\nThere is no longer a warning icon that represents the state \"mixed content\". \n\nWhat happens in Firefox 4 is, you no longer get the SSL indicators (no blue, no green). It is detable whether users notice the missing color and realize something's wrong.\n\nDoes this bug still make sense with \"mixed content indicators\" having gone away?\n\nDo you propose to add it back?\nDo you think \"missing color\" is sufficient?", "creation_time": "2011-03-22T09:44:48Z", "bug_id": 642675, "tags": [], "time": "2011-03-22T09:44:48Z", "id": 5359419, "attachment_id": null, "creator": "kaie@kuix.de", "author": "kaie@kuix.de", "text": "The \"mixed content\" lock icon has been removed in Firefox 4.\nThere is no longer any lock icon by default.\nThere is no longer a warning icon that represents the state \"mixed content\". \n\nWhat happens in Firefox 4 is, you no longer get the SSL indicators (no blue, no green). It is detable whether users notice the missing color and realize something's wrong.\n\nDoes this bug still make sense with \"mixed content indicators\" having gone away?\n\nDo you propose to add it back?\nDo you think \"missing color\" is sufficient?", "count": 7}, {"raw_text": "I think we should make sure \"uses cookies without the secure flag\" is one of the things that can make sure a site is displayed as \"mixed content\".  Whether it's a cross-out lock or removal of SSL color, the lack of secure flag should trigger it.", "bug_id": 642675, "creation_time": "2011-03-22T17:39:39Z", "tags": [], "is_private": false, "time": "2011-03-22T17:39:39Z", "id": 5360167, "creator": "mozbugs@sidstamm.com", "attachment_id": null, "count": 8, "text": "I think we should make sure \"uses cookies without the secure flag\" is one of the things that can make sure a site is displayed as \"mixed content\".  Whether it's a cross-out lock or removal of SSL color, the lack of secure flag should trigger it.", "author": "mozbugs@sidstamm.com"}, {"raw_text": "I think this is a bit extreme.  Lots of sites (twitter, facebook, yahoo, google etc) are going to have non-secure cookies.  They serve personalized content on both http and https sites, and hence need to know who are through your non-secure cookies.  Unless we see sites shift to full ssl experiences (instead of just protecting their most important pages), most of the once-ssl web will become mixed content.  \n\nI think it does make sense to expect secure cookies on a domain that has set an STS header for itself and its subdomains.  In that case, there is no reason you would be visiting that site on http and hence no reason to have non-secure cookies.  But I don't see how this enforcement will really add any security for the user, since their cookies are only sent for that domain which is only accessed via https.", "bug_id": 642675, "creation_time": "2012-04-16T22:21:46Z", "tags": [], "is_private": false, "time": "2012-04-16T22:21:46Z", "id": 6227514, "creator": "tanvi@mozilla.com", "attachment_id": null, "text": "I think this is a bit extreme.  Lots of sites (twitter, facebook, yahoo, google etc) are going to have non-secure cookies.  They serve personalized content on both http and https sites, and hence need to know who are through your non-secure cookies.  Unless we see sites shift to full ssl experiences (instead of just protecting their most important pages), most of the once-ssl web will become mixed content.  \n\nI think it does make sense to expect secure cookies on a domain that has set an STS header for itself and its subdomains.  In that case, there is no reason you would be visiting that site on http and hence no reason to have non-secure cookies.  But I don't see how this enforcement will really add any security for the user, since their cookies are only sent for that domain which is only accessed via https.", "count": 9, "author": "tanvi@mozilla.com"}, {"is_private": false, "attachment_id": null, "creator": "pde-lists@eff.org", "tags": [], "raw_text": "(In reply to Tanvi Vyas from comment #9)\n> I think this is a bit extreme.  Lots of sites (twitter, facebook, yahoo, google etc) are going to have non-secure cookies. \n\nThree of those four sites have a mixture of secure and non-secure cookies, and would therefore pass the heuristic I proposed in Comment 3.  Last time I checked, Yahoo! had nothing even remotely resembling a secure HTTPS deployment, and users should be warned about that (or at least, never be given the reassuring blue/green glow).", "bug_id": 642675, "creation_time": "2012-04-16T22:55:33Z", "id": 6227646, "author": "pde-lists@eff.org", "time": "2012-04-16T22:55:33Z", "count": 10, "text": "(In reply to Tanvi Vyas from comment #9)\n> I think this is a bit extreme.  Lots of sites (twitter, facebook, yahoo, google etc) are going to have non-secure cookies. \n\nThree of those four sites have a mixture of secure and non-secure cookies, and would therefore pass the heuristic I proposed in Comment 3.  Last time I checked, Yahoo! had nothing even remotely resembling a secure HTTPS deployment, and users should be warned about that (or at least, never be given the reassuring blue/green glow)."}, {"text": "(In reply to Tanvi Vyas from comment #9)\n\n> I think it does make sense to expect secure cookies on a domain that has set\n> an STS header for itself and its subdomains.  \n\nAlso, this is exactly backwards.  If the STS header is set, secure cookie flags are no longer necessary.", "count": 11, "id": 6227652, "time": "2012-04-16T22:56:20Z", "author": "pde-lists@eff.org", "tags": [], "creator": "pde-lists@eff.org", "bug_id": 642675, "creation_time": "2012-04-16T22:56:20Z", "raw_text": "(In reply to Tanvi Vyas from comment #9)\n\n> I think it does make sense to expect secure cookies on a domain that has set\n> an STS header for itself and its subdomains.  \n\nAlso, this is exactly backwards.  If the STS header is set, secure cookie flags are no longer necessary.", "is_private": false, "attachment_id": null}, {"text": "(In reply to Peter Eckersley from comment #10)\n> (In reply to Tanvi Vyas from comment #9)\n> > I think this is a bit extreme.  Lots of sites (twitter, facebook, yahoo, google etc) are going to have non-secure cookies. \n> \n> Three of those four sites have a mixture of secure and non-secure cookies,\n> and would therefore pass the heuristic I proposed in Comment 3.  Last time I\n> checked, Yahoo! had nothing even remotely resembling a secure HTTPS\n> deployment, and users should be warned about that (or at least, never be\n> given the reassuring blue/green glow).\n\nAh, okay I see.  The heuristic in comment 3 says that if at least one of the cookies is marked secure, then the site is okay.  Yahoo also has a secure cookie.\n\nBut just because a site has both secure and non-secure cookies doesn't mean that all the authentication cookies will be marked as secure.  I can login to facebook/linkedin/yahoo/twitter, get back a secure cookie, and then get an authenticated user experience on their non-ssl pages.  This implies there authentication cookies are not secure.", "count": 12, "author": "tanvi@mozilla.com", "creator": "tanvi@mozilla.com", "attachment_id": null, "id": 6235357, "time": "2012-04-18T22:24:42Z", "tags": [], "bug_id": 642675, "creation_time": "2012-04-18T22:24:42Z", "raw_text": "(In reply to Peter Eckersley from comment #10)\n> (In reply to Tanvi Vyas from comment #9)\n> > I think this is a bit extreme.  Lots of sites (twitter, facebook, yahoo, google etc) are going to have non-secure cookies. \n> \n> Three of those four sites have a mixture of secure and non-secure cookies,\n> and would therefore pass the heuristic I proposed in Comment 3.  Last time I\n> checked, Yahoo! had nothing even remotely resembling a secure HTTPS\n> deployment, and users should be warned about that (or at least, never be\n> given the reassuring blue/green glow).\n\nAh, okay I see.  The heuristic in comment 3 says that if at least one of the cookies is marked secure, then the site is okay.  Yahoo also has a secure cookie.\n\nBut just because a site has both secure and non-secure cookies doesn't mean that all the authentication cookies will be marked as secure.  I can login to facebook/linkedin/yahoo/twitter, get back a secure cookie, and then get an authenticated user experience on their non-ssl pages.  This implies there authentication cookies are not secure.", "is_private": false}, {"text": "That's rig\n\n> But just because a site has both secure and non-secure cookies doesn't mean\n> that all the authentication cookies will be marked as secure.  I can login\n> to facebook/linkedin/yahoo/twitter, get back a secure cookie, and then get\n> an authenticated user experience on their non-ssl pages.  This implies there\n> authentication cookies are not secure.\n\nThat's right; the heuristic is imperfect.  The best test is to delete all of the secure cookies while keeping the non-secure ones, load pages from the website, and check that you are no longer logged in.  But because that's not really feasible to do in the browser in real time, the heuristic makes the assumption that if website admins are sufficiently informed to know about the existence of the secure flag, they have a decent chance of using it correctly.\n\nThis is in contrast to 90%+ of HTTPS sites with logins, which use neither the secure flag nor HSTS, and therefore cannot possibly be offering secure logins.", "count": 13, "author": "pde-lists@eff.org", "creator": "pde-lists@eff.org", "attachment_id": null, "id": 6235791, "time": "2012-04-19T00:12:00Z", "tags": [], "bug_id": 642675, "creation_time": "2012-04-19T00:12:00Z", "raw_text": "That's rig\n\n> But just because a site has both secure and non-secure cookies doesn't mean\n> that all the authentication cookies will be marked as secure.  I can login\n> to facebook/linkedin/yahoo/twitter, get back a secure cookie, and then get\n> an authenticated user experience on their non-ssl pages.  This implies there\n> authentication cookies are not secure.\n\nThat's right; the heuristic is imperfect.  The best test is to delete all of the secure cookies while keeping the non-secure ones, load pages from the website, and check that you are no longer logged in.  But because that's not really feasible to do in the browser in real time, the heuristic makes the assumption that if website admins are sufficiently informed to know about the existence of the secure flag, they have a decent chance of using it correctly.\n\nThis is in contrast to 90%+ of HTTPS sites with logins, which use neither the secure flag nor HSTS, and therefore cannot possibly be offering secure logins.", "is_private": false}, {"is_private": false, "creation_time": "2016-07-26T19:57:39Z", "bug_id": 642675, "raw_text": "This is a decision front-end needs to make.", "tags": [], "time": "2016-07-26T19:57:39Z", "id": 11576667, "attachment_id": null, "creator": "dkeeler@mozilla.com", "author": "dkeeler@mozilla.com", "text": "This is a decision front-end needs to make.", "count": 14}]}}, "comments": {}}