{"bugs": {"636057": {"comments": [{"raw_text": "Some JavaScript frameworks throw and catch a lot of exceptions. When an exception is not caught all we get is the stack trace.  Devs would like to stop on exceptions, but only if they will not be caught.\n\nSteve Fink and (I guess) Andreas think that we can look up through the stack frames and see if any frame is in a try block with a catch that matches an object. This bug is to assess the potential for that feature.\n\nOff hand the operation seems to need the current frame and the exception object; it could return an older frame (found a try block) or null (no frame, will be uncaught).\n\nIn terms of benefits, this is commonly asked by devs (they want it and would use it) and alternatives are moderately painful (change code, conditional breakpoints). \n\nAlternatives could include decompiling the frame functions and parsing them or storing the state at every jsd.onError() so we have it on uncaught.  \n\nNote that in the important case we have lots of exceptions that are caught, so very high overhead solutions may not be useful.", "creator": "johnjbarton@johnjbarton.com", "text": "Some JavaScript frameworks throw and catch a lot of exceptions. When an exception is not caught all we get is the stack trace.  Devs would like to stop on exceptions, but only if they will not be caught.\n\nSteve Fink and (I guess) Andreas think that we can look up through the stack frames and see if any frame is in a try block with a catch that matches an object. This bug is to assess the potential for that feature.\n\nOff hand the operation seems to need the current frame and the exception object; it could return an older frame (found a try block) or null (no frame, will be uncaught).\n\nIn terms of benefits, this is commonly asked by devs (they want it and would use it) and alternatives are moderately painful (change code, conditional breakpoints). \n\nAlternatives could include decompiling the frame functions and parsing them or storing the state at every jsd.onError() so we have it on uncaught.  \n\nNote that in the important case we have lots of exceptions that are caught, so very high overhead solutions may not be useful.", "time": "2011-02-23T01:24:09Z", "count": 0, "creation_time": "2011-02-23T01:24:09Z", "tags": [], "attachment_id": null, "bug_id": 636057, "author": "johnjbarton@johnjbarton.com", "is_private": false, "id": 5297575}]}}, "comments": {}}