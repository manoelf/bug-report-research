{"comments": {}, "bugs": {"647748": {"comments": [{"count": 0, "text": "Roughly:\n\nenum RequestType {\n  REQUEST_OCSP,\n  REQUEST_CRL,\n  ...\n};\nstruct RequestInfo {\n  PRUint32 sourcesRemaining;\n  RequestType requestType;\n  const CERTCertificate *origin;\n  const char *location;\n  const char *httpResponse;\n  ...\n};\ntypedef void *(PR_CALLBACK *DBRequestErrorHandler)(CERTCertDBHandle *handle, const RequestInfo *request); \n\nvoid\nRegisterRequestErrorHandler(\nCERTCertDBHandle *handle,\nDBRequestErrorHandler *func,\n)\n\nMy understanding is that there can be multiple OCSP servers encoded in a Certificate, and I know there can be multiple CRLs encoded in a certificate, so I definitely need the URL for the actual failing request. Ideally i'd like access to the Certificate which triggered the request as 'origin' -- i'm not sure if that's available. The 'sourcesRemaining' bit is for when nss supports multiple CRLDPs and thus ==0 means the request has failed and >0 means there will be further attempts to contact additional servers before giving up -- until that is implemented, sourcesRemaining should always be 0.", "id": 5390603, "time": "2011-04-04T23:15:59Z", "author": "timeless@bemail.org", "tags": [], "creator": "timeless@bemail.org", "creation_time": "2011-04-04T23:15:59Z", "bug_id": 647748, "raw_text": "Roughly:\n\nenum RequestType {\n  REQUEST_OCSP,\n  REQUEST_CRL,\n  ...\n};\nstruct RequestInfo {\n  PRUint32 sourcesRemaining;\n  RequestType requestType;\n  const CERTCertificate *origin;\n  const char *location;\n  const char *httpResponse;\n  ...\n};\ntypedef void *(PR_CALLBACK *DBRequestErrorHandler)(CERTCertDBHandle *handle, const RequestInfo *request); \n\nvoid\nRegisterRequestErrorHandler(\nCERTCertDBHandle *handle,\nDBRequestErrorHandler *func,\n)\n\nMy understanding is that there can be multiple OCSP servers encoded in a Certificate, and I know there can be multiple CRLs encoded in a certificate, so I definitely need the URL for the actual failing request. Ideally i'd like access to the Certificate which triggered the request as 'origin' -- i'm not sure if that's available. The 'sourcesRemaining' bit is for when nss supports multiple CRLDPs and thus ==0 means the request has failed and >0 means there will be further attempts to contact additional servers before giving up -- until that is implemented, sourcesRemaining should always be 0.", "is_private": false, "attachment_id": null}]}}}