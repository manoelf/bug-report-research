{"bugs": {"687033": {"comments": [{"time": "2011-09-16T08:00:15Z", "raw_text": "VS11 (VS2011? or VS2012?) supports ARM. But, although VS11 dev preview is still broken (ex. lack of some libraries such as wsock32, winmm and etc), I would like to add arm target if VS11 dp/ctp/beta is refreshed.\n\nTo add arm target, we must add cross-compiling environment (target=arm, host=x86) for MSVC only.", "attachment_id": 560526, "tags": [], "creator": "m_kato@ga2.so-net.ne.jp", "count": 0, "text": "Created attachment 560526\nWIP\n\nVS11 (VS2011? or VS2012?) supports ARM. But, although VS11 dev preview is still broken (ex. lack of some libraries such as wsock32, winmm and etc), I would like to add arm target if VS11 dp/ctp/beta is refreshed.\n\nTo add arm target, we must add cross-compiling environment (target=arm, host=x86) for MSVC only.", "author": "m_kato@ga2.so-net.ne.jp", "id": 5719891, "bug_id": 687033, "creation_time": "2011-09-16T08:00:15Z", "is_private": false}, {"count": 1, "text": "I've been doing some experimentation with this in the hope of getting a jail broken Surface RT running both desktop and metro fx. A few notes thus far:\n\n1) CFLAGS and CXXFLAGS, including the defines used for AC_TRY_COMPILE need a define to get past a compiler directive in crtdefs.h - \n\n-D_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE=1\n\n2) Add the proper MACHINE linker option to DSO_LDOPTS:\n\n-MACHINE:ARM\n\n3) There's a configure check that fails which I haven't had the time to sort out so I simply removed it for experimentation:\n\nAC_MSG_CHECKING([for posix_fallocate]) (delete or updated)\n\n4) Modify an MSBuild arm target config file as well -\n\nC:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V110\\Platforms\\ARM\\Microsoft.Cpp.ARM.Common.props\n\nadd the following entry to PropertyGroup:\n\n<WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>\n\n5) Add various arm paths to your LIB, LIBPATH, and PATH variables to give the arm tools available precedence -\n\nMicrosoft Visual Studio 11.0\\VC\\LIB\\arm\nMicrosoft Visual Studio 11.0\\VC\\atlmfc\\lib\\arm\nWindows Kits\\8.0\\Lib\\win8\\um\\arm\nMicrosoft Visual Studio 11.0/VC/BIN/x86_ARM\nWindows Kits/8.0/bin/arm\n\nThis will get you most of the way through pymake configure. I'm currently running into problems with config in the 3rd party library libffi which doesn't support a Windows arm target. Looks like this is related to ctypes. We'll probably have to disable this library to get past it. Not sure if we support working without it though.", "author": "jmathies@mozilla.com", "id": 7048173, "bug_id": 687033, "raw_text": "I've been doing some experimentation with this in the hope of getting a jail broken Surface RT running both desktop and metro fx. A few notes thus far:\n\n1) CFLAGS and CXXFLAGS, including the defines used for AC_TRY_COMPILE need a define to get past a compiler directive in crtdefs.h - \n\n-D_ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE=1\n\n2) Add the proper MACHINE linker option to DSO_LDOPTS:\n\n-MACHINE:ARM\n\n3) There's a configure check that fails which I haven't had the time to sort out so I simply removed it for experimentation:\n\nAC_MSG_CHECKING([for posix_fallocate]) (delete or updated)\n\n4) Modify an MSBuild arm target config file as well -\n\nC:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V110\\Platforms\\ARM\\Microsoft.Cpp.ARM.Common.props\n\nadd the following entry to PropertyGroup:\n\n<WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>\n\n5) Add various arm paths to your LIB, LIBPATH, and PATH variables to give the arm tools available precedence -\n\nMicrosoft Visual Studio 11.0\\VC\\LIB\\arm\nMicrosoft Visual Studio 11.0\\VC\\atlmfc\\lib\\arm\nWindows Kits\\8.0\\Lib\\win8\\um\\arm\nMicrosoft Visual Studio 11.0/VC/BIN/x86_ARM\nWindows Kits/8.0/bin/arm\n\nThis will get you most of the way through pymake configure. I'm currently running into problems with config in the 3rd party library libffi which doesn't support a Windows arm target. Looks like this is related to ctypes. We'll probably have to disable this library to get past it. Not sure if we support working without it though.", "time": "2013-01-29T10:10:36Z", "creator": "jmathies@mozilla.com", "is_private": false, "creation_time": "2013-01-29T10:10:36Z", "attachment_id": null, "tags": []}, {"author": "m_kato@ga2.so-net.ne.jp", "text": "Actually, nsprpub and js.exe works on my jailbreak's SurfaceRT.\n\nAdditional, all configuration for arm needs -D_CRT_BUILD_APP=0 to use std*.h", "count": 2, "creator": "m_kato@ga2.so-net.ne.jp", "creation_time": "2013-01-29T10:54:32Z", "is_private": false, "bug_id": 687033, "id": 7048294, "attachment_id": null, "raw_text": "Actually, nsprpub and js.exe works on my jailbreak's SurfaceRT.\n\nAdditional, all configuration for arm needs -D_CRT_BUILD_APP=0 to use std*.h", "time": "2013-01-29T10:54:32Z", "tags": []}, {"raw_text": "(In reply to Makoto Kato from comment #2)\n> Actually, nsprpub and js.exe works on my jailbreak's SurfaceRT.\n> \n> Additional, all configuration for arm needs -D_CRT_BUILD_APP=0 to use std*.h\n\nsweet! :) I'm up to nspr in my build and am failing. Are you building nspr with the changes you posted here?", "attachment_id": null, "time": "2013-01-29T11:06:20Z", "tags": [], "count": 3, "text": "(In reply to Makoto Kato from comment #2)\n> Actually, nsprpub and js.exe works on my jailbreak's SurfaceRT.\n> \n> Additional, all configuration for arm needs -D_CRT_BUILD_APP=0 to use std*.h\n\nsweet! :) I'm up to nspr in my build and am failing. Are you building nspr with the changes you posted here?", "author": "jmathies@mozilla.com", "creator": "jmathies@mozilla.com", "creation_time": "2013-01-29T11:06:20Z", "is_private": false, "id": 7048319, "bug_id": 687033}, {"creator": "jmathies@mozilla.com", "is_private": false, "creation_time": "2013-01-29T11:11:49Z", "attachment_id": null, "tags": [], "author": "jmathies@mozilla.com", "text": "A couple additional notes, I had to disable ctypes - \n\nac_add_options --disable-system-ffi\nac_add_options --disable-ctypes\n\nand mfbt needed an update - \n\ndiff --git a/mfbt/double-conversion/utils.h b/mfbt/double-conversion/utils.h\n--- a/mfbt/double-conversion/utils.h\n+++ b/mfbt/double-conversion/utils.h\n@@ -62,16 +62,19 @@\n #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1\n #elif defined(_M_IX86) || defined(__i386__) || defined(__i386)\n #if defined(_WIN32)\n // Windows uses a 64bit wide floating point stack.\n #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1\n #else\n #undef DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS\n #endif  // _WIN32\n+#elif defined(__arm__)\n+// XXX Not sure what the width of the floating point stack is for Windows ARM\n+#undef DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS\n #else\n #error Target architecture was not detected as supported by Double-Conversion.\n #endif\n\nand I had to add __arm__ to the default defines in configure. Apparently the sdk headers add _ARM_, but there is no built in __arm__ define.", "count": 4, "id": 7048327, "bug_id": 687033, "time": "2013-01-29T11:11:49Z", "raw_text": "A couple additional notes, I had to disable ctypes - \n\nac_add_options --disable-system-ffi\nac_add_options --disable-ctypes\n\nand mfbt needed an update - \n\ndiff --git a/mfbt/double-conversion/utils.h b/mfbt/double-conversion/utils.h\n--- a/mfbt/double-conversion/utils.h\n+++ b/mfbt/double-conversion/utils.h\n@@ -62,16 +62,19 @@\n #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1\n #elif defined(_M_IX86) || defined(__i386__) || defined(__i386)\n #if defined(_WIN32)\n // Windows uses a 64bit wide floating point stack.\n #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1\n #else\n #undef DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS\n #endif  // _WIN32\n+#elif defined(__arm__)\n+// XXX Not sure what the width of the floating point stack is for Windows ARM\n+#undef DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS\n #else\n #error Target architecture was not detected as supported by Double-Conversion.\n #endif\n\nand I had to add __arm__ to the default defines in configure. Apparently the sdk headers add _ARM_, but there is no built in __arm__ define."}, {"is_private": false, "creation_time": "2013-01-29T11:26:10Z", "creator": "m_kato@ga2.so-net.ne.jp", "tags": [], "attachment_id": null, "bug_id": 687033, "id": 7048358, "count": 5, "text": "__arm__ isn't used on cl.exe. Microsoft compiler uses  _M_ARM for arm target", "author": "m_kato@ga2.so-net.ne.jp", "raw_text": "__arm__ isn't used on cl.exe. Microsoft compiler uses  _M_ARM for arm target", "time": "2013-01-29T11:26:10Z"}, {"author": "m_kato@ga2.so-net.ne.jp", "text": "I will update patches for reviewable.", "count": 6, "id": 7048381, "bug_id": 687033, "time": "2013-01-29T11:38:04Z", "raw_text": "I will update patches for reviewable.", "creator": "m_kato@ga2.so-net.ne.jp", "is_private": false, "creation_time": "2013-01-29T11:38:04Z", "attachment_id": null, "tags": []}, {"bug_id": 687033, "id": 7070146, "is_private": false, "creation_time": "2013-02-05T04:59:19Z", "creator": "m_kato@ga2.so-net.ne.jp", "count": 7, "text": "Created attachment 710044\nPart 1: support Win32/arm (code part1)", "author": "m_kato@ga2.so-net.ne.jp", "tags": [], "time": "2013-02-05T04:59:19Z", "raw_text": "", "attachment_id": 710044}, {"tags": [], "raw_text": "This patch includes bug 759239.", "attachment_id": 710045, "time": "2013-02-05T05:00:06Z", "creation_time": "2013-02-05T05:00:06Z", "is_private": false, "bug_id": 687033, "id": 7070151, "text": "Created attachment 710045\nPart 2: build config part\n\nThis patch includes bug 759239.", "count": 8, "author": "m_kato@ga2.so-net.ne.jp", "creator": "m_kato@ga2.so-net.ne.jp"}, {"time": "2013-02-05T05:01:46Z", "raw_text": "", "attachment_id": 710046, "tags": [], "creator": "m_kato@ga2.so-net.ne.jp", "text": "Created attachment 710046\nPart 2: build config part", "count": 9, "author": "m_kato@ga2.so-net.ne.jp", "bug_id": 687033, "id": 7070155, "is_private": false, "creation_time": "2013-02-05T05:01:46Z"}, {"creation_time": "2013-02-05T05:07:56Z", "is_private": false, "id": 7070163, "bug_id": 687033, "text": "Comment on attachment 710044\nPart 1: support Win32/arm (code part1)\n\nThis fix is for jailbreak arm target.\n\nIf we need store API only, we have to fix bug 746441 and etc.", "count": 10, "author": "m_kato@ga2.so-net.ne.jp", "creator": "m_kato@ga2.so-net.ne.jp", "tags": [], "raw_text": "This fix is for jailbreak arm target.\n\nIf we need store API only, we have to fix bug 746441 and etc.", "attachment_id": 710044, "time": "2013-02-05T05:07:56Z"}, {"creator": "m_kato@ga2.so-net.ne.jp", "count": 11, "text": "Comment on attachment 710046\nPart 2: build config part\n\nThis fix includes bug 759239.  (To cross building using MSVS, I need bug 759239's fix)\n\nIf landing bug 759239, I will create a patch again.", "author": "m_kato@ga2.so-net.ne.jp", "id": 7070164, "bug_id": 687033, "is_private": false, "creation_time": "2013-02-05T05:09:33Z", "time": "2013-02-05T05:09:33Z", "raw_text": "This fix includes bug 759239.  (To cross building using MSVS, I need bug 759239's fix)\n\nIf landing bug 759239, I will create a patch again.", "attachment_id": 710046, "tags": []}, {"creator": "m_kato@ga2.so-net.ne.jp", "author": "m_kato@ga2.so-net.ne.jp", "text": "hwo to build.\n\nmy nspr path: c:/Development/cvs-mirror.mozilla.org/winrt/\nVS2012 path: <VS2012 PATH>\n\nHOST_CC=cl CC=<VS2012 PATH>/VC/BIN/X86_ARM/CL.EXE LD=link  DLLFLAGS=\"-LIBPATH:\\\"C:/Program Files (x86)/Windows Kits/8.0/LIB/WIN8/UM/ARM\\\" -LIBPATH:\\\"<VS2012 PATH>/VC/LIB/ARM\\\"\" /c/Development/cvs-mirror.mozilla.org/winrt/mozilla/nsprpub/configure  --disable-debug --disable-tests --target=arm-pc-mingw32 --with-dist-prefix=c:/Development/cvs-mirror.mozilla.org/winrt/objdir/dist --with-mozilla --enable-optimize --srcdir=/c/Development/cvs-mirror.mozilla.org/winrt/mozilla/nsprpub/", "count": 12, "bug_id": 687033, "id": 7070167, "creation_time": "2013-02-05T05:12:05Z", "is_private": false, "time": "2013-02-05T05:12:05Z", "attachment_id": null, "raw_text": "hwo to build.\n\nmy nspr path: c:/Development/cvs-mirror.mozilla.org/winrt/\nVS2012 path: <VS2012 PATH>\n\nHOST_CC=cl CC=<VS2012 PATH>/VC/BIN/X86_ARM/CL.EXE LD=link  DLLFLAGS=\"-LIBPATH:\\\"C:/Program Files (x86)/Windows Kits/8.0/LIB/WIN8/UM/ARM\\\" -LIBPATH:\\\"<VS2012 PATH>/VC/LIB/ARM\\\"\" /c/Development/cvs-mirror.mozilla.org/winrt/mozilla/nsprpub/configure  --disable-debug --disable-tests --target=arm-pc-mingw32 --with-dist-prefix=c:/Development/cvs-mirror.mozilla.org/winrt/objdir/dist --with-mozilla --enable-optimize --srcdir=/c/Development/cvs-mirror.mozilla.org/winrt/mozilla/nsprpub/", "tags": []}, {"tags": [], "time": "2013-02-05T07:48:03Z", "raw_text": ">-/* Windows CE has GetFileAttributesEx. */\n>-#ifndef WINCE\n>+/* Windows CE and Windows on x64 and arm have GetFileAttributesEx. */\n>+#if !defined(WINCE) && !defined(_M_ARM) && !defined(_M_X64)\n\nI think we can just assume GetFileAttributesEx is always available.\nI was told by wtc that the current NSPR system requirement is XPSP2.", "attachment_id": 710044, "bug_id": 687033, "id": 7070362, "creation_time": "2013-02-05T07:48:03Z", "is_private": false, "creator": "VYV03354@nifty.ne.jp", "count": 13, "text": "Comment on attachment 710044\nPart 1: support Win32/arm (code part1)\n\n>-/* Windows CE has GetFileAttributesEx. */\n>-#ifndef WINCE\n>+/* Windows CE and Windows on x64 and arm have GetFileAttributesEx. */\n>+#if !defined(WINCE) && !defined(_M_ARM) && !defined(_M_X64)\n\nI think we can just assume GetFileAttributesEx is always available.\nI was told by wtc that the current NSPR system requirement is XPSP2.", "author": "VYV03354@nifty.ne.jp"}, {"attachment_id": 710044, "tags": [], "creator": "wtc@google.com", "creation_time": "2013-02-12T22:49:31Z", "is_private": false, "time": "2013-02-12T22:49:31Z", "raw_text": "Makoto: thank you for the patch. The changes in this patch seem\nvery small. So even though I question the need for this patch,\nI am probably willing to check this in.\n\nCould you take the opportunity to delete the WINCE code?\nJust delete the WINCE code if you need to modify it. (I'm not\nasking you to delete all the WINCE code in NSPR.)", "author": "wtc@google.com", "count": 14, "text": "Comment on attachment 710044\nPart 1: support Win32/arm (code part1)\n\nMakoto: thank you for the patch. The changes in this patch seem\nvery small. So even though I question the need for this patch,\nI am probably willing to check this in.\n\nCould you take the opportunity to delete the WINCE code?\nJust delete the WINCE code if you need to modify it. (I'm not\nasking you to delete all the WINCE code in NSPR.)", "id": 7097022, "bug_id": 687033}, {"tags": [], "attachment_id": 710046, "creation_time": "2013-02-12T22:52:42Z", "is_private": false, "creator": "wtc@google.com", "raw_text": "This patch also seems small, but I will ask Ted to review it\nbecause I am not familiar with cross-compiling NSPR.\n\nTed: please feel free to decline the review request because\nright now this port seems like a \"hobbyist\" activity.", "time": "2013-02-12T22:52:42Z", "bug_id": 687033, "id": 7097043, "author": "wtc@google.com", "text": "Comment on attachment 710046\nPart 2: build config part\n\nThis patch also seems small, but I will ask Ted to review it\nbecause I am not familiar with cross-compiling NSPR.\n\nTed: please feel free to decline the review request because\nright now this port seems like a \"hobbyist\" activity.", "count": 15}, {"time": "2013-02-15T00:48:10Z", "attachment_id": 714173, "raw_text": "NSPR only needs to support Windows XP and later now.\nThere is a comment in prsystem.c that says\nGlobalMemoryStatusEx is available on Windows 2000+.\nSo we can delete the dynamic lookup code.", "tags": [], "creator": "wtc@google.com", "author": "wtc@google.com", "text": "Created attachment 714173\nprsystem.c patch: assume GlobalMemoryStatusEx is available\n\nNSPR only needs to support Windows XP and later now.\nThere is a comment in prsystem.c that says\nGlobalMemoryStatusEx is available on Windows 2000+.\nSo we can delete the dynamic lookup code.", "count": 16, "id": 7106434, "bug_id": 687033, "creation_time": "2013-02-15T00:48:10Z", "is_private": false}, {"is_private": false, "creation_time": "2013-02-15T00:52:57Z", "bug_id": 687033, "id": 7106452, "text": "Created attachment 714174\nw95io.c patch: remove WINCE and Win9x support\n\nThis patch removes a lot of obsolete code from w95io.c.\nWe can assume GetFileAttributesEx is available. A comment\nin w95io.c says \"GetFileAttributesEx is supported on Win 2K\nand up.\"\n\nAlso, this MXR query shows _pr_useUnicode is set but not\nused, so we can remove the _pr_useUnicode global variable\naltogether.", "count": 17, "author": "wtc@google.com", "creator": "wtc@google.com", "tags": [], "raw_text": "This patch removes a lot of obsolete code from w95io.c.\nWe can assume GetFileAttributesEx is available. A comment\nin w95io.c says \"GetFileAttributesEx is supported on Win 2K\nand up.\"\n\nAlso, this MXR query shows _pr_useUnicode is set but not\nused, so we can remove the _pr_useUnicode global variable\naltogether.", "attachment_id": 714174, "time": "2013-02-15T00:52:57Z"}, {"bug_id": 687033, "id": 7106467, "author": "wtc@google.com", "text": "Created attachment 714179\nPart 1: support Win32/arm, v2, by Makoto Kato\n\nWe don't need to support Windows/arm in the deprecated\n\"WINNT\" build configuration. So I removed the _winnt.cfg\nand _winnt.h changes from your patch.\n\nI addressed prsystem.c and w95io.c separately, inspired\nby your patch. This patch is what remains.", "count": 18, "raw_text": "We don't need to support Windows/arm in the deprecated\n\"WINNT\" build configuration. So I removed the _winnt.cfg\nand _winnt.h changes from your patch.\n\nI addressed prsystem.c and w95io.c separately, inspired\nby your patch. This patch is what remains.", "time": "2013-02-15T00:56:52Z", "is_private": false, "creation_time": "2013-02-15T00:56:52Z", "creator": "wtc@google.com", "tags": [], "attachment_id": 714179}, {"attachment_id": 714173, "raw_text": "https://hg.mozilla.org/projects/nspr/rev/9e3594ac2353", "time": "2013-03-29T21:44:09Z", "tags": [], "author": "wtc@google.com", "count": 19, "text": "Comment on attachment 714173\nprsystem.c patch: assume GlobalMemoryStatusEx is available\n\nhttps://hg.mozilla.org/projects/nspr/rev/9e3594ac2353", "creator": "wtc@google.com", "creation_time": "2013-03-29T21:44:09Z", "is_private": false, "bug_id": 687033, "id": 7258969}, {"attachment_id": 714174, "tags": [], "creator": "wtc@google.com", "creation_time": "2013-03-29T21:45:08Z", "is_private": false, "raw_text": "https://hg.mozilla.org/projects/nspr/rev/141140050d0e", "time": "2013-03-29T21:45:08Z", "author": "wtc@google.com", "count": 20, "text": "Comment on attachment 714174\nw95io.c patch: remove WINCE and Win9x support\n\nhttps://hg.mozilla.org/projects/nspr/rev/141140050d0e", "id": 7258971, "bug_id": 687033}, {"author": "wtc@google.com", "text": "Comment on attachment 714179\nPart 1: support Win32/arm, v2, by Makoto Kato\n\nhttps://hg.mozilla.org/projects/nspr/rev/0c076527d529", "count": 21, "id": 7258980, "bug_id": 687033, "time": "2013-03-29T21:45:55Z", "raw_text": "https://hg.mozilla.org/projects/nspr/rev/0c076527d529", "creator": "wtc@google.com", "creation_time": "2013-03-29T21:45:55Z", "is_private": false, "attachment_id": 714179, "tags": []}, {"text": "Comment on attachment 710046\nPart 2: build config part\n\nReview of attachment 710046:\n-----------------------------------------------------------------\n\nSorry this took so long. This looks fine.\n\n::: configure.in\n@@ +66,5 @@\n>  HOST_LDFLAGS=\"${HOST_LDFLAGS=}\"\n>  \n>  case \"$target\" in\n> +arm-*-mingw*)\n> +    dnl Win32/arm is corss target only\n\nspelling: \"cross\"\n\n@@ +1109,5 @@\n>      thumb_flag=\"-marm\"\n>      ;;\n>  *)\n> +    if test \"$GNU_CC\"; then\n> +        dnl __thumb2__ is gcc only\n\nDoes the Microsoft arm toolchain support generating thumb2 code? If so you should look into supporting that.", "count": 22, "author": "ted@mielczarek.org", "id": 7300693, "bug_id": 687033, "raw_text": "Review of attachment 710046:\n-----------------------------------------------------------------\n\nSorry this took so long. This looks fine.\n\n::: configure.in\n@@ +66,5 @@\n>  HOST_LDFLAGS=\"${HOST_LDFLAGS=}\"\n>  \n>  case \"$target\" in\n> +arm-*-mingw*)\n> +    dnl Win32/arm is corss target only\n\nspelling: \"cross\"\n\n@@ +1109,5 @@\n>      thumb_flag=\"-marm\"\n>      ;;\n>  *)\n> +    if test \"$GNU_CC\"; then\n> +        dnl __thumb2__ is gcc only\n\nDoes the Microsoft arm toolchain support generating thumb2 code? If so you should look into supporting that.", "time": "2013-04-10T19:44:00Z", "creator": "ted@mielczarek.org", "creation_time": "2013-04-10T19:44:00Z", "is_private": false, "attachment_id": 710046, "tags": []}]}}, "comments": {}}