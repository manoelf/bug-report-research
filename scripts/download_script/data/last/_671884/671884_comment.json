{"bugs": {"671884": {"comments": [{"id": 5593689, "attachment_id": null, "raw_text": "I want to know for how often we get 304 overall and also for resources in certain conditions.  The question is: what the right conditions are?\n\nIdea is to try to predict by metadata we have associated with the resource on how probable is we get 304 or 200 for a conditional request.\n\nAttributes could be:\n- fetch count, the higher the number, the more chance for a 304\n- Last-modified, Age, if present\n- some new metadata as rate of 200/304 on this resource, frequency of changes of the resource\n\nThis is related to the new pipelining code: we want to put conditional requests on a single pipelined connection but we don't like 200 responses on it so, we would like to enhance the condition to put conditional requests on this dedicated \"304\" connection to maximize only presence of 304 responses on it.", "author": "honzab.moz@firemni.cz", "creation_time": "2011-07-15T16:45:36Z", "bug_id": 671884, "time": "2011-07-15T16:45:36Z", "tags": [], "text": "I want to know for how often we get 304 overall and also for resources in certain conditions.  The question is: what the right conditions are?\n\nIdea is to try to predict by metadata we have associated with the resource on how probable is we get 304 or 200 for a conditional request.\n\nAttributes could be:\n- fetch count, the higher the number, the more chance for a 304\n- Last-modified, Age, if present\n- some new metadata as rate of 200/304 on this resource, frequency of changes of the resource\n\nThis is related to the new pipelining code: we want to put conditional requests on a single pipelined connection but we don't like 200 responses on it so, we would like to enhance the condition to put conditional requests on this dedicated \"304\" connection to maximize only presence of 304 responses on it.", "creator": "honzab.moz@firemni.cz", "is_private": false, "count": 0}, {"tags": [], "time": "2012-04-05T12:02:31Z", "bug_id": 671884, "text": "Created attachment 612506\nSamplePatch\n\nI have added the patch to tell if its a Http304 response or not\nCould you tell me if it is right!...What all tests should I run to check that the patch is fine?\nWhat other parameters (like rtt) am I exactly supposed to measure if my present patch is right?\nCould you give me an idea of how to predict by metadata we have associated with the resource on how probable is it that we get 304 or 200 for a conditional request?", "author": "junky.argonaut@gmail.com", "creation_time": "2012-04-05T12:02:31Z", "count": 1, "creator": "junky.argonaut@gmail.com", "is_private": false, "id": 6200068, "raw_text": "I have added the patch to tell if its a Http304 response or not\nCould you tell me if it is right!...What all tests should I run to check that the patch is fine?\nWhat other parameters (like rtt) am I exactly supposed to measure if my present patch is right?\nCould you give me an idea of how to predict by metadata we have associated with the resource on how probable is it that we get 304 or 200 for a conditional request?", "attachment_id": 612506}, {"creator": "josh@joshmatthews.net", "is_private": false, "count": 2, "author": "josh@joshmatthews.net", "creation_time": "2012-04-05T16:03:28Z", "bug_id": 671884, "tags": [], "time": "2012-04-05T16:03:28Z", "text": "Comment on attachment 612506\nSamplePatch\n\nCancelling feedback request for now; this patch is simple enough at the moment that it doesn't require Honza's eyes.", "attachment_id": 612506, "raw_text": "Cancelling feedback request for now; this patch is simple enough at the moment that it doesn't require Honza's eyes.", "id": 6200598}, {"count": 3, "bug_id": 671884, "creator": "honzab.moz@firemni.cz", "is_private": false, "author": "honzab.moz@firemni.cz", "creation_time": "2012-04-05T19:11:41Z", "tags": [], "time": "2012-04-05T19:11:41Z", "text": "(In reply to Arjun from comment #1)\n> Could you give me an idea of how to predict by metadata we have associated\n> with the resource on how probable is it that we get 304 or 200 for a\n> conditional request?\n\nTo figure this out is part of goal of this bug.  Try something, as suggested in comment 0, maybe even simpler and let's start getting some first data.  Maybe we'll figure out there is no way to predict at all, which is also a valuable result of this effort.", "attachment_id": null, "raw_text": "(In reply to Arjun from comment #1)\n> Could you give me an idea of how to predict by metadata we have associated\n> with the resource on how probable is it that we get 304 or 200 for a\n> conditional request?\n\nTo figure this out is part of goal of this bug.  Try something, as suggested in comment 0, maybe even simpler and let's start getting some first data.  Maybe we'll figure out there is no way to predict at all, which is also a valuable result of this effort.", "id": 6201381}, {"bug_id": 671884, "count": 4, "id": 6202966, "attachment_id": null, "raw_text": "Thanks for the advice :mayhemer. I will try something out and let you know if I strike gold! I think I have better idea of what this bug is all about now.", "creation_time": "2012-04-06T05:51:39Z", "author": "junky.argonaut@gmail.com", "text": "Thanks for the advice :mayhemer. I will try something out and let you know if I strike gold! I think I have better idea of what this bug is all about now.", "tags": [], "time": "2012-04-06T05:51:39Z", "is_private": false, "creator": "junky.argonaut@gmail.com"}, {"id": 6285458, "attachment_id": 621587, "raw_text": "", "creation_time": "2012-05-07T14:17:21Z", "author": "junky.argonaut@gmail.com", "text": "Created attachment 621587\nPatchv1.1", "time": "2012-05-07T14:17:21Z", "tags": [], "bug_id": 671884, "is_private": false, "creator": "junky.argonaut@gmail.com", "count": 5}, {"tags": [], "time": "2012-05-07T14:20:57Z", "text": "Created attachment 621589\nPatchv1\n\nThe patch with the requested changes.", "author": "junky.argonaut@gmail.com", "creation_time": "2012-05-07T14:20:57Z", "creator": "junky.argonaut@gmail.com", "is_private": false, "id": 6285464, "raw_text": "The patch with the requested changes.", "attachment_id": 621589, "bug_id": 671884, "count": 6}, {"is_private": false, "creator": "honzab.moz@firemni.cz", "count": 7, "creation_time": "2012-05-07T16:14:53Z", "author": "honzab.moz@firemni.cz", "text": "Comment on attachment 621589\nPatchv1\n\nReview of attachment 621589:\n-----------------------------------------------------------------\n\nI've found out we already have got a probe (mozilla::Telemetry::HTTP_CACHE_DISPOSITION).  So this was just a training patch, sorry, I wasn't aware.\n\nThe comments here are just to express what would the review requirements here:\n\n::: netwerk/protocol/http/nsHttpChannel.cpp\n@@ +1230,5 @@\n>      nsresult rv;\n>  \n>      LOG((\"nsHttpChannel::ProcessNormal [this=%p]\\n\", this));\n>  \n> +    if(mDidReval) {\n\nSpace between if and (\n\n@@ +1231,5 @@\n>  \n>      LOG((\"nsHttpChannel::ProcessNormal [this=%p]\\n\", this));\n>  \n> +    if(mDidReval) {\n> +        Telemetry::Accumulate(Telemetry::HTTP304_POSITIVE_RATE, false);    \n\nRemove any trailing spaces\n\n@@ +2012,5 @@\n>  \n>      LOG((\"nsHttpChannel::ProcessNotModified [this=%p]\\n\", this)); \n>  \n> +    if(mDidReval) {\n> +        Telemetry::Accumulate(Telemetry::HTTP304_POSITIVE_RATE, true);    \n\nSame here", "bug_id": 671884, "time": "2012-05-07T16:14:53Z", "tags": [], "attachment_id": 621589, "raw_text": "Review of attachment 621589:\n-----------------------------------------------------------------\n\nI've found out we already have got a probe (mozilla::Telemetry::HTTP_CACHE_DISPOSITION).  So this was just a training patch, sorry, I wasn't aware.\n\nThe comments here are just to express what would the review requirements here:\n\n::: netwerk/protocol/http/nsHttpChannel.cpp\n@@ +1230,5 @@\n>      nsresult rv;\n>  \n>      LOG((\"nsHttpChannel::ProcessNormal [this=%p]\\n\", this));\n>  \n> +    if(mDidReval) {\n\nSpace between if and (\n\n@@ +1231,5 @@\n>  \n>      LOG((\"nsHttpChannel::ProcessNormal [this=%p]\\n\", this));\n>  \n> +    if(mDidReval) {\n> +        Telemetry::Accumulate(Telemetry::HTTP304_POSITIVE_RATE, false);    \n\nRemove any trailing spaces\n\n@@ +2012,5 @@\n>  \n>      LOG((\"nsHttpChannel::ProcessNotModified [this=%p]\\n\", this)); \n>  \n> +    if(mDidReval) {\n> +        Telemetry::Accumulate(Telemetry::HTTP304_POSITIVE_RATE, true);    \n\nSame here", "id": 6285804}, {"attachment_id": null, "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "id": 12659072, "is_private": false, "creator": "bug-husbandry-bot@mozilla.bugs", "count": 8, "creation_time": "2017-09-13T18:41:16Z", "author": "bug-husbandry-bot@mozilla.bugs", "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "time": "2017-09-13T18:41:16Z", "tags": [], "bug_id": 671884}]}}, "comments": {}}