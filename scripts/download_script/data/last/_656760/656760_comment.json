{"comments": {}, "bugs": {"656760": {"comments": [{"author": "sphink@gmail.com", "is_private": false, "id": 5466601, "attachment_id": null, "creation_time": "2011-05-12T21:22:34Z", "tags": [], "bug_id": 656760, "count": 0, "time": "2011-05-12T21:22:34Z", "creator": "sphink@gmail.com", "raw_text": "In a hook triggered by an exception being thrown, the JS engine should be able to scan the stack to find the frame that will catch the exception, if any.\n\nComplications I can think of: (1) the user might use heuristics to decide whether a given frame is just going to re-throw the exception, in which case it would want to restart the scan from the next older frame. Or make the API per-frame: \"would this frame catch my exception?\" (2) If natives want to play nicely, we'd need a way for them to register catchers. And make 'frame' mean JS frame or C frame-like thing. Otherwise no answer can be trusted -- a frame might rethrow an exception, and a native might catch an exception that no JS frame would catch.", "text": "In a hook triggered by an exception being thrown, the JS engine should be able to scan the stack to find the frame that will catch the exception, if any.\n\nComplications I can think of: (1) the user might use heuristics to decide whether a given frame is just going to re-throw the exception, in which case it would want to restart the scan from the next older frame. Or make the API per-frame: \"would this frame catch my exception?\" (2) If natives want to play nicely, we'd need a way for them to register catchers. And make 'frame' mean JS frame or C frame-like thing. Otherwise no answer can be trusted -- a frame might rethrow an exception, and a native might catch an exception that no JS frame would catch."}, {"id": 5466714, "is_private": false, "author": "johnjbarton@johnjbarton.com", "time": "2011-05-12T21:47:26Z", "count": 1, "bug_id": 656760, "text": "see also Bug 636057", "tags": [], "creation_time": "2011-05-12T21:47:26Z", "attachment_id": null, "raw_text": "see also Bug 636057", "creator": "johnjbarton@johnjbarton.com"}]}}}