{"bugs": {"653993": {"comments": [{"id": 5441791, "is_private": false, "count": 0, "author": "lowzl@hotmail.com", "time": "2011-05-01T13:35:14Z", "bug_id": 653993, "text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\nBuild Identifier: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nSince updating to Firefox 4.0.1 on Mac OS X, certain spacing modifier letters (to be precise, those in the range U+02c8 to U+02d7, with the exception of U+02c9) in Tahoma are incorrectly rendered as combining diacritics.\n\nThe problem was not present in Firefox 4.0.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. See attached test case.\n\n\nActual Results:  \nSome spacing modifier letters are rendered as combining diacritics.\n\nExpected Results:  \nSpacing modifier letters should be rendered as non-combining characters.", "attachment_id": null, "creation_time": "2011-05-01T13:35:14Z", "tags": [], "creator": "lowzl@hotmail.com", "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\nBuild Identifier: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nSince updating to Firefox 4.0.1 on Mac OS X, certain spacing modifier letters (to be precise, those in the range U+02c8 to U+02d7, with the exception of U+02c9) in Tahoma are incorrectly rendered as combining diacritics.\n\nThe problem was not present in Firefox 4.0.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. See attached test case.\n\n\nActual Results:  \nSome spacing modifier letters are rendered as combining diacritics.\n\nExpected Results:  \nSpacing modifier letters should be rendered as non-combining characters."}, {"id": 5441792, "is_private": false, "author": "lowzl@hotmail.com", "time": "2011-05-01T13:36:08Z", "count": 1, "bug_id": 653993, "text": "Created attachment 529347\nTest case\n\nThe choice of font can be changed using the textboxes. (Javascript required.)", "tags": [], "creation_time": "2011-05-01T13:36:08Z", "attachment_id": 529347, "raw_text": "The choice of font can be changed using the textboxes. (Javascript required.)", "creator": "lowzl@hotmail.com"}, {"bug_id": 653993, "tags": [], "creation_time": "2011-05-01T14:18:00Z", "attachment_id": null, "id": 5441805, "is_private": false, "author": "jfkthame@gmail.com", "text": "This is caused by a font bug - the version of Tahoma shipped with OS X (and also on Windows7, it seems), has a bad GDEF table where these glyphs are assigned to class 3, defined in the OpenType spec as \"Mark glyph (non-spacing combining glyph)\". In Fx4.0.1, we now respect the GDEF table (because this was required to fix problems with Arabic script, among other examples - see bug 635639).\n\nUnfortunately, some existing fonts have incorrect GDEF tables and hence display incorrectly when we take this table into account. A more common example is Times New Roman Italic (see bug 589682 and its duplicates); for that case, we have added a font-specific hack to the code in order to work around the problem, but I'm not sure it is practical to do this in every instance. In general, bad fonts are liable to result in bad text display.\n\nWe may be able to work around the font error, but I'm concerned that we don't disrupt the correct rendering of correct fonts in an attempt to deal with bad ones!", "raw_text": "This is caused by a font bug - the version of Tahoma shipped with OS X (and also on Windows7, it seems), has a bad GDEF table where these glyphs are assigned to class 3, defined in the OpenType spec as \"Mark glyph (non-spacing combining glyph)\". In Fx4.0.1, we now respect the GDEF table (because this was required to fix problems with Arabic script, among other examples - see bug 635639).\n\nUnfortunately, some existing fonts have incorrect GDEF tables and hence display incorrectly when we take this table into account. A more common example is Times New Roman Italic (see bug 589682 and its duplicates); for that case, we have added a font-specific hack to the code in order to work around the problem, but I'm not sure it is practical to do this in every instance. In general, bad fonts are liable to result in bad text display.\n\nWe may be able to work around the font error, but I'm concerned that we don't disrupt the correct rendering of correct fonts in an attempt to deal with bad ones!", "creator": "jfkthame@gmail.com", "time": "2011-05-01T14:18:00Z", "count": 2}, {"text": "In HarfBuzz I changed the logic to use Unicode General Category Mn for zeroing mark advances, not GDEF.  So this should be addressed by that change.", "creator": "mozilla@behdad.org", "raw_text": "In HarfBuzz I changed the logic to use Unicode General Category Mn for zeroing mark advances, not GDEF.  So this should be addressed by that change.", "count": 3, "time": "2012-08-07T16:42:57Z", "bug_id": 653993, "attachment_id": null, "tags": [], "creation_time": "2012-08-07T16:42:57Z", "id": 6537288, "is_private": false, "author": "mozilla@behdad.org"}, {"bug_id": 653993, "text": "HarfBuzz got resolved in version 1.3.0.", "attachment_id": null, "creation_time": "2016-07-24T14:16:29Z", "tags": [], "creator": "shanshandehongxing@outlook.com", "raw_text": "HarfBuzz got resolved in version 1.3.0.", "id": 11570699, "is_private": false, "count": 4, "time": "2016-07-24T14:16:29Z", "author": "shanshandehongxing@outlook.com"}]}}, "comments": {}}