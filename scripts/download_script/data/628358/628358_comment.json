{"bugs": {"628358": {"comments": [{"count": 0, "time": "2011-01-24T20:49:06Z", "raw_text": "", "id": 5222838, "text": "Created attachment 506486\ntestcase (hangs Firefox when loaded)", "is_private": false, "bug_id": 628358, "attachment_id": 506486, "creation_time": "2011-01-24T20:49:06Z", "author": "jruderman@gmail.com", "tags": [], "creator": "jruderman@gmail.com"}, {"tags": [], "author": "jruderman@gmail.com", "attachment_id": 506487, "bug_id": 628358, "raw_text": "", "count": 1, "creator": "jruderman@gmail.com", "creation_time": "2011-01-24T20:49:28Z", "is_private": false, "text": "Created attachment 506487\nhang sample", "id": 5222840, "time": "2011-01-24T20:49:28Z"}, {"count": 2, "raw_text": "Doesn't hang on load anymore, but still asserts.\n\nASSERTION: bad inline size: 'metrics.ISize(lineWM) >= 0', file /builds/slave/m-cen-l64-d-000000000000000000/build/src/layout/generic/nsLineLayout.cpp, line 1039\nASSERTION: bad block size: 'metrics.BSize(lineWM) >= 0', file /builds/slave/m-cen-l64-d-000000000000000000/build/src/layout/generic/nsLineLayout.cpp, line 1040", "bug_id": 628358, "attachment_id": null, "author": "ryanvm@gmail.com", "tags": [], "is_private": false, "time": "2015-10-30T01:11:57Z", "id": 10887870, "text": "Doesn't hang on load anymore, but still asserts.\n\nASSERTION: bad inline size: 'metrics.ISize(lineWM) >= 0', file /builds/slave/m-cen-l64-d-000000000000000000/build/src/layout/generic/nsLineLayout.cpp, line 1039\nASSERTION: bad block size: 'metrics.BSize(lineWM) >= 0', file /builds/slave/m-cen-l64-d-000000000000000000/build/src/layout/generic/nsLineLayout.cpp, line 1040", "creation_time": "2015-10-30T01:11:57Z", "creator": "ryanvm@gmail.com"}, {"raw_text": "Reducing severity -- the assertions in comment 2 aren't especially worrisome, given that the testcase here has `padding: 32631964044403mm`, which is probably large enough to trigger integer overflow in our 32-bit app-unit coordinate space representation.\n\nThese assertions are checking invariants that we expect to be honored, given reasonably-sized content.   Absurdly-large content may make us violate these sorts of (nonfatal) assertions, and may produce broken layout, and that's a tradeoff we've accepted (rather than adding clamping & saturating arithmetic all over the place).\n\nThere's a bug somewhere on adding a \"this document has some absurdly large content\" flag, which we might use to disable some of these assertions.  (I can't find it right now, but we might conceivably tie this to that bug.)", "count": 3, "author": "dholbert@mozilla.com", "tags": [], "bug_id": 628358, "attachment_id": null, "is_private": false, "time": "2021-03-15T19:27:11Z", "text": "Reducing severity -- the assertions in comment 2 aren't especially worrisome, given that the testcase here has `padding: 32631964044403mm`, which is probably large enough to trigger integer overflow in our 32-bit app-unit coordinate space representation.\n\nThese assertions are checking invariants that we expect to be honored, given reasonably-sized content.   Absurdly-large content may make us violate these sorts of (nonfatal) assertions, and may produce broken layout, and that's a tradeoff we've accepted (rather than adding clamping & saturating arithmetic all over the place).\n\nThere's a bug somewhere on adding a \"this document has some absurdly large content\" flag, which we might use to disable some of these assertions.  (I can't find it right now, but we might conceivably tie this to that bug.)", "id": 15311888, "creator": "dholbert@mozilla.com", "creation_time": "2021-03-15T19:27:11Z"}]}}, "comments": {}}