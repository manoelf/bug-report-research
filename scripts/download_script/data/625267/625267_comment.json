{"bugs": {"625267": {"comments": [{"raw_text": "getImageData is a speed trap when we're using hw accel surfaces, especially with D2D.  bz suggested that we consider falling back to a gfxImageSurface if we hit getImageData/putImageData.  Perhaps a smarter heuristic can allow us to shuffle surfaces back and forth as needed -- we may even be able to map the hw surface into memory for a period of time.", "bug_id": 625267, "creator": "vladimir@pobox.com", "author": "vladimir@pobox.com", "attachment_id": null, "time": "2011-01-13T02:28:16Z", "id": 5195644, "count": 0, "is_private": false, "text": "getImageData is a speed trap when we're using hw accel surfaces, especially with D2D.  bz suggested that we consider falling back to a gfxImageSurface if we hit getImageData/putImageData.  Perhaps a smarter heuristic can allow us to shuffle surfaces back and forth as needed -- we may even be able to map the hw surface into memory for a period of time.", "tags": [], "creation_time": "2011-01-13T02:28:16Z"}, {"tags": [], "creation_time": "2014-12-03T02:44:53Z", "text": "As I understand it from reading other bugs the major issue is waiting for the surface to be read from the gfx memory.\n\nWould it be possible to this off-thread and get the image data asynchronously? I'm guessing this is more of an interleaving/latency issue (GPU and CPU taking turns to wait on each other) than a bandwidth bottleneck.\nI know a new API would be necessary for this, but other browsers seem to have the same issue, so it might be useful as a standard.\n\nDepending on the exact use-cases that might be sufficient to allowing developers to simply prepare multiple frames in advance and/or do other work while waiting on the readback. Same could apply to writes, except that they don't even need a callback, they could just be put on a queue and worked off in the background.\n\nThis is mostly interesting for off-window surfaces that are used for pixel data twiddling where high throughput and some degree of parallelism is more desirable than jank-free, frame-accurate rendering. Although one can serve as precomputation for the other.", "is_private": false, "count": 1, "id": 9656403, "time": "2014-12-03T02:44:53Z", "attachment_id": null, "creator": "bugzilla.mozilla.org@infinite-source.de", "author": "bugzilla.mozilla.org@infinite-source.de", "bug_id": 625267, "raw_text": "As I understand it from reading other bugs the major issue is waiting for the surface to be read from the gfx memory.\n\nWould it be possible to this off-thread and get the image data asynchronously? I'm guessing this is more of an interleaving/latency issue (GPU and CPU taking turns to wait on each other) than a bandwidth bottleneck.\nI know a new API would be necessary for this, but other browsers seem to have the same issue, so it might be useful as a standard.\n\nDepending on the exact use-cases that might be sufficient to allowing developers to simply prepare multiple frames in advance and/or do other work while waiting on the readback. Same could apply to writes, except that they don't even need a callback, they could just be put on a queue and worked off in the background.\n\nThis is mostly interesting for off-window surfaces that are used for pixel data twiddling where high throughput and some degree of parallelism is more desirable than jank-free, frame-accurate rendering. Although one can serve as precomputation for the other."}]}}, "comments": {}}