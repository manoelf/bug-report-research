{"comments": {}, "bugs": {"633818": {"comments": [{"id": 5275702, "author": "marc@marcpare.com", "time": "2011-02-13T13:36:20Z", "count": 0, "text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\nBuild Identifier: 3.1.7\n\nWhen typing content in the compose window, if .pdf or .doc is added, a warning \"banner\" on the bottom of the compose window pops up warning to not forget to add the attachments. Would it be possible to add the OpenDocument Format extensions to these by default as well. We should be promoting opensource formats and this will encourage people to use OpenDocument Format (ODF) if they see if supported in mainstream software such as Thunderbird. For such little effort in adding this by default in the installation, you will be showing support for these formats rather than showing support for only the .pdf and .doc format as well as showing support for the opensource community.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Just add any text into the compose window and add .pdf and .doc and a reminder window will pop up on the bottom. If you add: .odt or .odp or .ods or .odg or .odb or .odf from the OpenDocument Format extensions, there is no reminder at all for these. If this were added in the default installation it would show great support for the ODF formats.\n2.\n3.\nActual Results:  \nNo pop-up reminder window for any ODF extensions.\n\nExpected Results:  \nA pop-up reminder window should show just like for .pdf and .doc extensions.", "is_private": false, "attachment_id": null, "creator": "marc@marcpare.com", "tags": [], "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\nBuild Identifier: 3.1.7\n\nWhen typing content in the compose window, if .pdf or .doc is added, a warning \"banner\" on the bottom of the compose window pops up warning to not forget to add the attachments. Would it be possible to add the OpenDocument Format extensions to these by default as well. We should be promoting opensource formats and this will encourage people to use OpenDocument Format (ODF) if they see if supported in mainstream software such as Thunderbird. For such little effort in adding this by default in the installation, you will be showing support for these formats rather than showing support for only the .pdf and .doc format as well as showing support for the opensource community.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Just add any text into the compose window and add .pdf and .doc and a reminder window will pop up on the bottom. If you add: .odt or .odp or .ods or .odg or .odb or .odf from the OpenDocument Format extensions, there is no reminder at all for these. If this were added in the default installation it would show great support for the ODF formats.\n2.\n3.\nActual Results:  \nNo pop-up reminder window for any ODF extensions.\n\nExpected Results:  \nA pop-up reminder window should show just like for .pdf and .doc extensions.", "bug_id": 633818, "creation_time": "2011-02-13T13:36:20Z"}, {"creator": "rsx11m.pub@gmail.com", "attachment_id": null, "text": "Though the keyword list allows to be extended manually, having just \".doc\" and \".pdf\" in the default set is a bit too selective. Bug 547589 would certainly simplify adding rules like \".od[tpsgbf]\" for OpenOffice-generated documents, and it's a common alternative to Microsoft's Office package. Thus confirming.", "count": 1, "author": "rsx11m.pub@gmail.com", "raw_text": "Though the keyword list allows to be extended manually, having just \".doc\" and \".pdf\" in the default set is a bit too selective. Bug 547589 would certainly simplify adding rules like \".od[tpsgbf]\" for OpenOffice-generated documents, and it's a common alternative to Microsoft's Office package. Thus confirming.", "creation_time": "2011-02-16T13:31:53Z", "bug_id": 633818, "tags": [], "is_private": false, "time": "2011-02-16T13:31:53Z", "id": 5282804}, {"tags": [], "raw_text": "", "bug_id": 633818, "creation_time": "2011-02-16T16:53:50Z", "is_private": false, "id": 5283248, "time": "2011-02-16T16:53:50Z", "creator": "ludovic@hirlimann.net", "attachment_id": 512819, "text": "Created attachment 512819\nAdding Libre Office extensions v1", "count": 2, "author": "ludovic@hirlimann.net"}, {"id": 5283738, "author": "rsx11m.pub@gmail.com", "time": "2011-02-16T18:58:23Z", "text": "The reason why I mentioned bug 547589 is that it would combine an elegant way to group related file types, such as \".{{doc,xls,pp[ts]},x}\" rather than having a flood of single file-extension entries in the keyword list. Either way, it may be worth adding the Microsoft counterparts .xls and .ppt (maybe .rtf and .pps) if you want to stick with separate entries.", "count": 3, "attachment_id": null, "is_private": false, "creator": "rsx11m.pub@gmail.com", "tags": [], "raw_text": "The reason why I mentioned bug 547589 is that it would combine an elegant way to group related file types, such as \".{{doc,xls,pp[ts]},x}\" rather than having a flood of single file-extension entries in the keyword list. Either way, it may be worth adding the Microsoft counterparts .xls and .ppt (maybe .rtf and .pps) if you want to stick with separate entries.", "creation_time": "2011-02-16T18:58:23Z", "bug_id": 633818}, {"count": 4, "text": "(actually, \".{doc,xls,pp[ts]}{,x}\" not \".{{doc,xls,pp[ts]},x}\" would match\n .doc .docx .xls .xlsx .ppt .pptx .pps .ppsx, but you get the idea...)", "author": "rsx11m.pub@gmail.com", "creator": "rsx11m.pub@gmail.com", "attachment_id": null, "time": "2011-02-16T19:38:21Z", "id": 5283967, "creation_time": "2011-02-16T19:38:21Z", "bug_id": 633818, "raw_text": "(actually, \".{doc,xls,pp[ts]}{,x}\" not \".{{doc,xls,pp[ts]},x}\" would match\n .doc .docx .xls .xlsx .ppt .pptx .pps .ppsx, but you get the idea...)", "tags": [], "is_private": false}, {"count": 5, "text": "Comment on attachment 512819\nAdding Libre Office extensions v1\n\nThis looks good to me.  And I believe the existing tests should cover this change well enough that we don't need to add more.\n\nSpinning off a separate bug to add .ppt and .xls would be nice.", "time": "2011-02-22T18:57:58Z", "author": "bwinton@latte.ca", "id": 5296305, "creation_time": "2011-02-22T18:57:58Z", "bug_id": 633818, "raw_text": "This looks good to me.  And I believe the existing tests should cover this change well enough that we don't need to add more.\n\nSpinning off a separate bug to add .ppt and .xls would be nice.", "tags": [], "creator": "bwinton@latte.ca", "is_private": false, "attachment_id": 512819}, {"tags": [], "creator": "standard8@mozilla.com", "bug_id": 633818, "creation_time": "2011-02-23T09:06:33Z", "raw_text": "-mail.compose.attachment_reminder_keywords=.doc,.pdf,attachment,attach,attached,attaching,enclosed,CV,cover letter\n+mail.compose.attachment_reminder_keywords=.doc,.pdf,.odf,.odt,.odp,.ods,.odg,.odb,attachment,attach,attached,attaching,enclosed,CV,cover letter\n\nHmm, I wonder if we should be changing the string name so that localisations will pick this up.", "is_private": false, "attachment_id": null, "text": "-mail.compose.attachment_reminder_keywords=.doc,.pdf,attachment,attach,attached,attaching,enclosed,CV,cover letter\n+mail.compose.attachment_reminder_keywords=.doc,.pdf,.odf,.odt,.odp,.ods,.odg,.odb,attachment,attach,attached,attaching,enclosed,CV,cover letter\n\nHmm, I wonder if we should be changing the string name so that localisations will pick this up.", "count": 6, "id": 5298034, "time": "2011-02-23T09:06:33Z", "author": "standard8@mozilla.com"}, {"raw_text": "(In reply to comment #6)\n> -mail.compose.attachment_reminder_keywords=.doc,.pdf,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> +mail.compose.attachment_reminder_keywords=.doc,.pdf,.odf,.odt,.odp,.ods,.odg,.odb,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> \n> Hmm, I wonder if we should be changing the string name so that localisations\n> will pick this up.\n\nIf so I'll resubmit a patch with the content of bug 635938. \n\nDo you have a proposed new keyword ?", "bug_id": 633818, "creation_time": "2011-02-23T09:26:36Z", "creator": "ludovic@hirlimann.net", "tags": [], "attachment_id": null, "is_private": false, "text": "(In reply to comment #6)\n> -mail.compose.attachment_reminder_keywords=.doc,.pdf,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> +mail.compose.attachment_reminder_keywords=.doc,.pdf,.odf,.odt,.odp,.ods,.odg,.odb,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> \n> Hmm, I wonder if we should be changing the string name so that localisations\n> will pick this up.\n\nIf so I'll resubmit a patch with the content of bug 635938. \n\nDo you have a proposed new keyword ?", "count": 7, "author": "ludovic@hirlimann.net", "time": "2011-02-23T09:26:36Z", "id": 5298049}, {"time": "2011-02-23T09:30:11Z", "id": 5298053, "bug_id": 633818, "creation_time": "2011-02-23T09:30:11Z", "raw_text": "(In reply to comment #6)\n> -mail.compose.attachment_reminder_keywords=.doc,.pdf,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> +mail.compose.attachment_reminder_keywords=.doc,.pdf,.odf,.odt,.odp,.ods,.odg,.odb,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> \n> Hmm, I wonder if we should be changing the string name so that localisations\n> will pick this up.\n\nWhat about defining file extensions independently from the localization and appending them to the localized mail.compose.attachment_reminder_keywords ? I think it would make sense, and the localizations would still be able to add their own extensions if needed.\n\nBy the way, maybe .docx,.xls,.xlsx,.xps should also be added?", "tags": [], "is_private": false, "count": 8, "text": "(In reply to comment #6)\n> -mail.compose.attachment_reminder_keywords=.doc,.pdf,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> +mail.compose.attachment_reminder_keywords=.doc,.pdf,.odf,.odt,.odp,.ods,.odg,.odb,attachment,attach,attached,attaching,enclosed,CV,cover\n> letter\n> \n> Hmm, I wonder if we should be changing the string name so that localisations\n> will pick this up.\n\nWhat about defining file extensions independently from the localization and appending them to the localized mail.compose.attachment_reminder_keywords ? I think it would make sense, and the localizations would still be able to add their own extensions if needed.\n\nBy the way, maybe .docx,.xls,.xlsx,.xps should also be added?", "author": "rimas@mozilla.lt", "creator": "rimas@mozilla.lt", "attachment_id": null}, {"time": "2011-02-23T10:52:16Z", "author": "l10n@mozilla.com", "id": 5298143, "text": "Yeah, what Rimas said.", "count": 9, "attachment_id": null, "is_private": false, "bug_id": 633818, "creation_time": "2011-02-23T10:52:16Z", "raw_text": "Yeah, what Rimas said.", "tags": [], "creator": "l10n@mozilla.com"}, {"count": 10, "text": "Keep in mind though that mail.compose.attachment_reminder_keywords is the name of the underlying preference, thus you don't want to change that property.\n\nRe mail.compose.attachment_reminder_filenames (or whatever new name), it may make sense given that keywords and file extensions are different things. I still think that a wildcard/expression-based matching would be better for these kind of similar but different entries (otherwise you'll need yet another UI element for modifying the file-type entries, etc.).", "author": "rsx11m.pub@gmail.com", "creator": "rsx11m.pub@gmail.com", "attachment_id": null, "id": 5298272, "time": "2011-02-23T13:11:46Z", "tags": [], "raw_text": "Keep in mind though that mail.compose.attachment_reminder_keywords is the name of the underlying preference, thus you don't want to change that property.\n\nRe mail.compose.attachment_reminder_filenames (or whatever new name), it may make sense given that keywords and file extensions are different things. I still think that a wildcard/expression-based matching would be better for these kind of similar but different entries (otherwise you'll need yet another UI element for modifying the file-type entries, etc.).", "bug_id": 633818, "creation_time": "2011-02-23T13:11:46Z", "is_private": false}, {"count": 11, "text": "Created attachment 514469\nHaving two prefs WIP\n\n>kind of similar but different entries (otherwise you'll need yet another UI\n>element for modifying the file-type entries, etc.).\n\nThat's where I end up being. I think having two list would be clumsy for the user.", "author": "ludovic@hirlimann.net", "creator": "ludovic@hirlimann.net", "attachment_id": 514469, "id": 5298300, "time": "2011-02-23T13:29:17Z", "tags": [], "raw_text": ">kind of similar but different entries (otherwise you'll need yet another UI\n>element for modifying the file-type entries, etc.).\n\nThat's where I end up being. I think having two list would be clumsy for the user.", "bug_id": 633818, "creation_time": "2011-02-23T13:29:17Z", "is_private": false}, {"attachment_id": null, "creator": "ludovic@hirlimann.net", "author": "ludovic@hirlimann.net", "count": 12, "text": "Bryan thoughts ?", "is_private": false, "bug_id": 633818, "creation_time": "2011-02-23T13:29:41Z", "raw_text": "Bryan thoughts ?", "tags": [], "time": "2011-02-23T13:29:41Z", "id": 5298301}, {"tags": [], "raw_text": "(In reply to comment #10)\n> Keep in mind though that mail.compose.attachment_reminder_keywords is the name\n> of the underlying preference, thus you don't want to change that property.\n\nThis is actually a good point. L10n just doesn't cope with this sort of thing.\n\nI'm starting to wonder if we're going to end up with some sort of moving pref and having to migrate it.\n\nAlthough maybe what we could do is this:\n\nmail.compose.attachment_reminder_keywords<n> is the latest version of the preference (where <n> is a number), as determined in the code.\n\nmail.compose.attachment_reminder_keywords (no number) is where we store the user-preference of the values.\n\nIf the user-preference is set we use that, else we use the latest version of the preference.\n\nThis way l10n can have a preference bump each time we add to the list.\n\nThe downsides are:\n\n- If a user modifies prefs.js via about:config they will likely set the wrong value. I think that we can just say that's not recommended for setting that pref.\n\n- When we change the default value of the pref, users who have updated that pref manually won't get the update. This is the same situation that we're in now, and I'm not sure we can easily do much here.", "creation_time": "2011-02-23T13:32:42Z", "bug_id": 633818, "is_private": false, "id": 5298306, "time": "2011-02-23T13:32:42Z", "creator": "standard8@mozilla.com", "attachment_id": null, "count": 13, "text": "(In reply to comment #10)\n> Keep in mind though that mail.compose.attachment_reminder_keywords is the name\n> of the underlying preference, thus you don't want to change that property.\n\nThis is actually a good point. L10n just doesn't cope with this sort of thing.\n\nI'm starting to wonder if we're going to end up with some sort of moving pref and having to migrate it.\n\nAlthough maybe what we could do is this:\n\nmail.compose.attachment_reminder_keywords<n> is the latest version of the preference (where <n> is a number), as determined in the code.\n\nmail.compose.attachment_reminder_keywords (no number) is where we store the user-preference of the values.\n\nIf the user-preference is set we use that, else we use the latest version of the preference.\n\nThis way l10n can have a preference bump each time we add to the list.\n\nThe downsides are:\n\n- If a user modifies prefs.js via about:config they will likely set the wrong value. I think that we can just say that's not recommended for setting that pref.\n\n- When we change the default value of the pref, users who have updated that pref manually won't get the update. This is the same situation that we're in now, and I'm not sure we can easily do much here.", "author": "standard8@mozilla.com"}, {"creation_time": "2011-02-23T15:48:11Z", "bug_id": 633818, "raw_text": "Just to make it clear, I suggest that the default file extensions should NOT be localizable (well, except perhaps for some special cases, which could be handled \nby prefs.js).\nThese extensions *could* be stored in a hidden pref, but I don't think Tb should make the list available for editing in its UI. IMO, this option isn't very likely to be of interest to our user, and we're not SeaMonkey. :)", "tags": [], "creator": "rimas@mozilla.lt", "is_private": false, "attachment_id": null, "text": "Just to make it clear, I suggest that the default file extensions should NOT be localizable (well, except perhaps for some special cases, which could be handled \nby prefs.js).\nThese extensions *could* be stored in a hidden pref, but I don't think Tb should make the list available for editing in its UI. IMO, this option isn't very likely to be of interest to our user, and we're not SeaMonkey. :)", "count": 14, "time": "2011-02-23T15:48:11Z", "author": "rimas@mozilla.lt", "id": 5298699}, {"is_private": false, "creation_time": "2011-02-23T16:12:21Z", "bug_id": 633818, "raw_text": "Why do you want to keep the file extensions hidden from the user? For the same reasons that one may want to adjust the keyword list, you may want to add those file types you frequently use personally (but maybe \"nobody else\"), and remove other file extensions you don't care about (\"who's using MS Word?\").", "tags": [], "time": "2011-02-23T16:12:21Z", "id": 5298744, "attachment_id": null, "creator": "rsx11m.pub@gmail.com", "author": "rsx11m.pub@gmail.com", "count": 15, "text": "Why do you want to keep the file extensions hidden from the user? For the same reasons that one may want to adjust the keyword list, you may want to add those file types you frequently use personally (but maybe \"nobody else\"), and remove other file extensions you don't care about (\"who's using MS Word?\")."}, {"count": 16, "text": "(In reply to comment #15)\n> Why do you want to keep the file extensions hidden from the user? \n\nI said it above, IMO, this option isn't very likely to be of interest to our user, and we're not SeaMonkey. :)\n\n> For the same\n> reasons that one may want to adjust the keyword list, you may want to add those\n> file types you frequently use personally (but maybe \"nobody else\"), and remove\n> other file extensions you don't care about (\"who's using MS Word?\").\n\nWell first of all, I don't think these extensions would get in anyones way. Whether or not you're using MS Word, you're probably not very likely to have a string \".doc\" in your message, except when mentioning .doc files.\n\nOn the other hand, if you want to add your own extension, you could still do one of the follwing:\na) add it to the list of words (mail.compose.attachment_reminder_keywords) which is configurable. Would you care enough that this list doesn't support regexps?\nb) if you're a geek enough to want to use regexps (assuming bug 547589), you would probably not be too scared to edit the hidden pref (e.g. mail.compose.attachment_reminder_regexp) and add your extensions to it using about:config.", "author": "rimas@mozilla.lt", "creator": "rimas@mozilla.lt", "attachment_id": null, "time": "2011-02-23T18:15:21Z", "id": 5299135, "raw_text": "(In reply to comment #15)\n> Why do you want to keep the file extensions hidden from the user? \n\nI said it above, IMO, this option isn't very likely to be of interest to our user, and we're not SeaMonkey. :)\n\n> For the same\n> reasons that one may want to adjust the keyword list, you may want to add those\n> file types you frequently use personally (but maybe \"nobody else\"), and remove\n> other file extensions you don't care about (\"who's using MS Word?\").\n\nWell first of all, I don't think these extensions would get in anyones way. Whether or not you're using MS Word, you're probably not very likely to have a string \".doc\" in your message, except when mentioning .doc files.\n\nOn the other hand, if you want to add your own extension, you could still do one of the follwing:\na) add it to the list of words (mail.compose.attachment_reminder_keywords) which is configurable. Would you care enough that this list doesn't support regexps?\nb) if you're a geek enough to want to use regexps (assuming bug 547589), you would probably not be too scared to edit the hidden pref (e.g. mail.compose.attachment_reminder_regexp) and add your extensions to it using about:config.", "creation_time": "2011-02-23T18:15:21Z", "bug_id": 633818, "tags": [], "is_private": false}, {"author": "rsx11m.pub@gmail.com", "text": "Fair enough, I'll leave it up to Bryan whether going with two prefs is the right way. It would in theory provide context if a keyword is a \"real\" keyword or just a file extension (thus aiding bug 547589 or bug 635993), but the user may - as you say - just add an extension to the keyword list and thus screw up any logic based on different interpretation of the prefs.\n\n> and we're not SeaMonkey. :)\n\n...which doesn't offer that feature, by the way. :-D", "count": 17, "attachment_id": null, "creator": "rsx11m.pub@gmail.com", "id": 5299190, "time": "2011-02-23T18:28:09Z", "is_private": false, "tags": [], "raw_text": "Fair enough, I'll leave it up to Bryan whether going with two prefs is the right way. It would in theory provide context if a keyword is a \"real\" keyword or just a file extension (thus aiding bug 547589 or bug 635993), but the user may - as you say - just add an extension to the keyword list and thus screw up any logic based on different interpretation of the prefs.\n\n> and we're not SeaMonkey. :)\n\n...which doesn't offer that feature, by the way. :-D", "creation_time": "2011-02-23T18:28:09Z", "bug_id": 633818}, {"text": "I don't think you really want me to comment on the implementation of using two prefs so I'll just try to lay out the way I believe this should be working so you guys can figure the rest out.\n\nThe user has a list of possibly modified keywords they want to search for and we need to preserve any changes they make to that list.  At the same time we also want to be able to update that list periodically in releases.  My tech suggestion would be that we have some way to append new elements to the users list but that the user list stays the same; take that or leave it.\n\nSeparating out keywords and file extensions might be something nice we could do in the keyword UI.  This would likely have the benefit of helping people find keywords and easily add/remove file extensions.  But it would still need to have the same properties where people could remove any item from either list.  I'd be willing to work on this but I wouldn't personally push this as a priority right now since the current single list works pretty well for most peoples needs.  Adding a lot more extensions makes this list larger but not significantly at this point.\n\nI'll comment on the regex bug later but I'm sure you've already guessed that I feel like this is not going to be a great thing to enter into the product.  The regex support will enable a small set of users to have very powerful searches while increasing complexity and possible confusion for almost all users.  We could work to have them coexist but really with some sub string matches most users will be fine with the existing string searching.  Regexes are programming languages and so they require a good understand of how they work, testing, and almost always come with bugs.", "count": 18, "id": 5317149, "time": "2011-03-03T01:09:07Z", "author": "clarkbw@mozilla.com", "tags": [], "creator": "clarkbw@mozilla.com", "creation_time": "2011-03-03T01:09:07Z", "bug_id": 633818, "raw_text": "I don't think you really want me to comment on the implementation of using two prefs so I'll just try to lay out the way I believe this should be working so you guys can figure the rest out.\n\nThe user has a list of possibly modified keywords they want to search for and we need to preserve any changes they make to that list.  At the same time we also want to be able to update that list periodically in releases.  My tech suggestion would be that we have some way to append new elements to the users list but that the user list stays the same; take that or leave it.\n\nSeparating out keywords and file extensions might be something nice we could do in the keyword UI.  This would likely have the benefit of helping people find keywords and easily add/remove file extensions.  But it would still need to have the same properties where people could remove any item from either list.  I'd be willing to work on this but I wouldn't personally push this as a priority right now since the current single list works pretty well for most peoples needs.  Adding a lot more extensions makes this list larger but not significantly at this point.\n\nI'll comment on the regex bug later but I'm sure you've already guessed that I feel like this is not going to be a great thing to enter into the product.  The regex support will enable a small set of users to have very powerful searches while increasing complexity and possible confusion for almost all users.  We could work to have them coexist but really with some sub string matches most users will be fine with the existing string searching.  Regexes are programming languages and so they require a good understand of how they work, testing, and almost always come with bugs.", "is_private": false, "attachment_id": null}, {"id": 5330095, "time": "2011-03-08T15:05:46Z", "is_private": false, "tags": [], "creation_time": "2011-03-08T15:05:46Z", "bug_id": 633818, "raw_text": "Shall we maintain Three list ?\n current list of keyword\n list of keywords that were removed\n list of keywords we want to add as part of an update\n An update flag.\n\nStartup sequence -> is update flag to true ?\n Yes\n  read the add list , is the keuword in the removed list ?\n     yes read next keyword\n     no is it in the current list\n     yes read next keyword\n     no add it to the list\n\nI think This would work - thoughts ?", "author": "ludovic@hirlimann.net", "text": "Shall we maintain Three list ?\n current list of keyword\n list of keywords that were removed\n list of keywords we want to add as part of an update\n An update flag.\n\nStartup sequence -> is update flag to true ?\n Yes\n  read the add list , is the keuword in the removed list ?\n     yes read next keyword\n     no is it in the current list\n     yes read next keyword\n     no add it to the list\n\nI think This would work - thoughts ?", "count": 19, "attachment_id": null, "creator": "ludovic@hirlimann.net"}, {"time": "2011-03-08T15:27:18Z", "id": 5330127, "raw_text": "I think the things suggested here are getting increasingly complex for no real reason. The purpose of that list is to offer *sane defaults*. I think it's absolutely fine that as defaults are updated, already existing users settings remain the same. This list of keywords is far from being as volatile as say anti-virus definitions. I think it can perfectly live on wiithout our intervention, after the account has been created.\n\nThe suggestion I gave in comment #8\u00a0was to simply make a core set of file extensions independent from the localization used, because they're not as likely to vary between locales as the real keywords.", "creation_time": "2011-03-08T15:27:18Z", "bug_id": 633818, "tags": [], "is_private": false, "count": 20, "text": "I think the things suggested here are getting increasingly complex for no real reason. The purpose of that list is to offer *sane defaults*. I think it's absolutely fine that as defaults are updated, already existing users settings remain the same. This list of keywords is far from being as volatile as say anti-virus definitions. I think it can perfectly live on wiithout our intervention, after the account has been created.\n\nThe suggestion I gave in comment #8\u00a0was to simply make a core set of file extensions independent from the localization used, because they're not as likely to vary between locales as the real keywords.", "author": "rimas@mozilla.lt", "creator": "rimas@mozilla.lt", "attachment_id": null}, {"creator": "rsx11m.pub@gmail.com", "attachment_id": null, "count": 21, "text": "The most generic solution to this problem I can think of would be to collect all file extensions from mimeTypes.rdf, then get a list of registered file types and their extensions from the operating system, and use this as the second list without restricting it to some fixed set of file extensions to start with. Since this may cause too many false positives, maybe trigger only for a set of MIME-type classes (e.g., application/*, image/*, and text/*).\n\nWhile this idea sounds like a nice solution, it may be likely overdoing it. Separating file extensions from \"regular\" keywords in a second preference, as long as there is no different treatment of such (comment #17). Going with Rimas' suggestion is probably a good trade-off among interests and effort.", "author": "rsx11m.pub@gmail.com", "creation_time": "2011-03-11T12:52:28Z", "bug_id": 633818, "raw_text": "The most generic solution to this problem I can think of would be to collect all file extensions from mimeTypes.rdf, then get a list of registered file types and their extensions from the operating system, and use this as the second list without restricting it to some fixed set of file extensions to start with. Since this may cause too many false positives, maybe trigger only for a set of MIME-type classes (e.g., application/*, image/*, and text/*).\n\nWhile this idea sounds like a nice solution, it may be likely overdoing it. Separating file extensions from \"regular\" keywords in a second preference, as long as there is no different treatment of such (comment #17). Going with Rimas' suggestion is probably a good trade-off among interests and effort.", "tags": [], "is_private": false, "time": "2011-03-11T12:52:28Z", "id": 5338790}, {"time": "2011-10-03T17:46:01Z", "id": 5754552, "is_private": false, "bug_id": 633818, "creation_time": "2011-10-03T17:46:01Z", "raw_text": "I was wondering if this was still being considered? It looks like it mushroomed to having more than the suggested ODF extensions. The initial suggestion was that Thunderbird recognize the ODF extensions just as it does with .doc and .pdf. Adding the ODF extensions would lend support to the OpenSource platform of which Thunderbird belongs rather than recognize only .doc and .pdf proprietary extensions.\n\nBTW ... OASIS standard ODF 1.2 has just been approved [http://lists.oasis-open.org/archives/tc-announce/201109/msg00010.html].", "tags": [], "author": "marc@marcpare.com", "count": 22, "text": "I was wondering if this was still being considered? It looks like it mushroomed to having more than the suggested ODF extensions. The initial suggestion was that Thunderbird recognize the ODF extensions just as it does with .doc and .pdf. Adding the ODF extensions would lend support to the OpenSource platform of which Thunderbird belongs rather than recognize only .doc and .pdf proprietary extensions.\n\nBTW ... OASIS standard ODF 1.2 has just been approved [http://lists.oasis-open.org/archives/tc-announce/201109/msg00010.html].", "attachment_id": null, "creator": "marc@marcpare.com"}, {"time": "2013-09-22T12:19:01Z", "author": "bugzilla2007@duellmann24.net", "id": 7887651, "count": 23, "text": "This depends on bug 545837 (make attachment reminder keywords language-sensitive) because if we do that bug we'll probably need a different approach here.", "is_private": false, "attachment_id": null, "bug_id": 633818, "creation_time": "2013-09-22T12:19:01Z", "raw_text": "This depends on bug 545837 (make attachment reminder keywords language-sensitive) because if we do that bug we'll probably need a different approach here.", "tags": [], "creator": "bugzilla2007@duellmann24.net"}, {"attachment_id": null, "creator": "acelists@atlas.sk", "author": "acelists@atlas.sk", "count": 24, "text": "I should look at refreshing this. It even has partial patch.", "is_private": false, "bug_id": 633818, "creation_time": "2015-04-01T18:44:31Z", "raw_text": "I should look at refreshing this. It even has partial patch.", "tags": [], "time": "2015-04-01T18:44:31Z", "id": 10107427}, {"attachment_id": null, "is_private": false, "raw_text": "", "bug_id": 633818, "creation_time": "2016-11-26T17:10:01Z", "creator": "richard.marti@gmail.com", "tags": [], "author": "richard.marti@gmail.com", "time": "2016-11-26T17:10:01Z", "id": 11888880, "text": "*** Bug 1320443 has been marked as a duplicate of this bug. ***", "count": 25}, {"count": 26, "text": "(In reply to :aceman from comment #24)\n> I should look at refreshing this. It even has partial patch.\nPerhaps you should before we collect more duplicates ;-)", "id": 11888929, "author": "jorgk-bmo@jorgk.com", "time": "2016-11-26T18:19:06Z", "creator": "jorgk-bmo@jorgk.com", "tags": [], "raw_text": "(In reply to :aceman from comment #24)\n> I should look at refreshing this. It even has partial patch.\nPerhaps you should before we collect more duplicates ;-)", "bug_id": 633818, "creation_time": "2016-11-26T18:19:06Z", "is_private": false, "attachment_id": null}]}}}