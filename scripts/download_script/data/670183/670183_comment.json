{"bugs": {"670183": {"comments": [{"creation_time": "2011-07-08T17:46:08Z", "author": "mail@lukewagner.name", "text": "bug 667915 demonstrated several cases where real websites were locking the browser by OOM'ing the slow script dialog JS.  One aspect of this problem was fixed in bug 667915 (chrome should have more stack than content), but it still raises the question: why did the DOMOperationCallback allow script execution to continue on error?  WebKit has the same stack problem but after throwing up a managled-from-OOM slow-script dialog, they kill script execution.\n\nFor this particular issue, the offender is this code in DOMOperationCallback:\n\n  nsCOMPtr<nsIPrompt> prompt = GetPromptFromContext(ctx);\n  NS_ENSURE_TRUE(prompt, JS_TRUE);\n\n(returning JS_FALSE will kill script execution).  It definitely seems like this should be fixed, but there are a few other cases where, on error, we default to JS_TRUE.  Perhaps these should also be changed; at least audited.", "tags": [], "time": "2011-07-08T17:46:08Z", "bug_id": 670183, "is_private": false, "creator": "mail@lukewagner.name", "count": 0, "id": 5581332, "attachment_id": null, "raw_text": "bug 667915 demonstrated several cases where real websites were locking the browser by OOM'ing the slow script dialog JS.  One aspect of this problem was fixed in bug 667915 (chrome should have more stack than content), but it still raises the question: why did the DOMOperationCallback allow script execution to continue on error?  WebKit has the same stack problem but after throwing up a managled-from-OOM slow-script dialog, they kill script execution.\n\nFor this particular issue, the offender is this code in DOMOperationCallback:\n\n  nsCOMPtr<nsIPrompt> prompt = GetPromptFromContext(ctx);\n  NS_ENSURE_TRUE(prompt, JS_TRUE);\n\n(returning JS_FALSE will kill script execution).  It definitely seems like this should be fixed, but there are a few other cases where, on error, we default to JS_TRUE.  Perhaps these should also be changed; at least audited."}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-07-08T20:17:57Z", "tags": [], "time": "2011-07-08T20:17:57Z", "bug_id": 670183, "text": "> For this particular issue, the offender is this code in DOMOperationCallback:\n\nThe problem is that this can't tell whether there's no prompt because this context is not tied to a window (e.g. some sandbox) or because of some sort of error....\n\nMaybe we should err on the side of killing content scripts on no prompt and not killing chrome scripts?", "creator": "bzbarsky@mit.edu", "is_private": false, "count": 1, "id": 5581659, "attachment_id": null, "raw_text": "> For this particular issue, the offender is this code in DOMOperationCallback:\n\nThe problem is that this can't tell whether there's no prompt because this context is not tied to a window (e.g. some sandbox) or because of some sort of error....\n\nMaybe we should err on the side of killing content scripts on no prompt and not killing chrome scripts?"}, {"count": 2, "bug_id": 670183, "raw_text": "How can content script run in a sandbox? Or otherwise have script not tied to a window?\n\nI also seem to recall that we don't throw an uncatchable exception when a script was aborted due to the slow-script dialog. If that is indeed the case then we should IMHO fix that.", "attachment_id": null, "id": 5581958, "is_private": false, "creator": "jonas@sicking.cc", "text": "How can content script run in a sandbox? Or otherwise have script not tied to a window?\n\nI also seem to recall that we don't throw an uncatchable exception when a script was aborted due to the slow-script dialog. If that is indeed the case then we should IMHO fix that.", "time": "2011-07-08T22:45:35Z", "tags": [], "creation_time": "2011-07-08T22:45:35Z", "author": "jonas@sicking.cc"}, {"raw_text": "> How can content script run in a sandbox?\n\nNo idea.  Chances are it can't.\n\n> Or otherwise have script not tied to a window?\n\nI don't think it can.  Hence my proposal to kill content script if we can't get a prompt.", "attachment_id": null, "id": 5582289, "is_private": false, "creator": "bzbarsky@mit.edu", "text": "> How can content script run in a sandbox?\n\nNo idea.  Chances are it can't.\n\n> Or otherwise have script not tied to a window?\n\nI don't think it can.  Hence my proposal to kill content script if we can't get a prompt.", "tags": [], "time": "2011-07-09T03:42:52Z", "creation_time": "2011-07-09T03:42:52Z", "author": "bzbarsky@mit.edu", "count": 3, "bug_id": 670183}, {"is_private": false, "creator": "jonas@sicking.cc", "count": 4, "creation_time": "2011-07-11T15:26:39Z", "author": "jonas@sicking.cc", "text": "Sounds good to me then.", "tags": [], "time": "2011-07-11T15:26:39Z", "bug_id": 670183, "attachment_id": null, "raw_text": "Sounds good to me then.", "id": 5584528}, {"id": 5738566, "attachment_id": null, "raw_text": "So, can we go turn all those 'return JS_TRUE' to 'report-error + return JS_FALSE' ?", "author": "mail@lukewagner.name", "creation_time": "2011-09-26T23:34:59Z", "tags": [], "bug_id": 670183, "time": "2011-09-26T23:34:59Z", "text": "So, can we go turn all those 'return JS_TRUE' to 'report-error + return JS_FALSE' ?", "creator": "mail@lukewagner.name", "is_private": false, "count": 5}, {"attachment_id": null, "raw_text": "p1 since it's a possible solution to 705695. Assigning to luke since he has a lot of wisdom on this.", "id": 5886316, "creator": "taras.mozilla@glek.net", "is_private": false, "author": "taras.mozilla@glek.net", "creation_time": "2011-12-01T21:03:32Z", "tags": [], "time": "2011-12-01T21:03:32Z", "text": "p1 since it's a possible solution to 705695. Assigning to luke since he has a lot of wisdom on this.", "count": 6, "bug_id": 670183}, {"attachment_id": null, "raw_text": "Luke says this is probably not needed for bug 705695 and is more of a cleanup bug, so it probably doesn't need Snappy:P1.", "id": 5987597, "creator": "dmandelin@mozilla.com", "is_private": false, "count": 7, "author": "dmandelin@mozilla.com", "creation_time": "2012-01-18T01:59:53Z", "time": "2012-01-18T01:59:53Z", "tags": [], "bug_id": 670183, "text": "Luke says this is probably not needed for bug 705695 and is more of a cleanup bug, so it probably doesn't need Snappy:P1."}]}}, "comments": {}}