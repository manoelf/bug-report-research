{"bugs": {"696571": {"comments": [{"id": 5798567, "bug_id": 696571, "is_private": false, "creation_time": "2011-10-22T12:30:03Z", "creator": "jab_creations@yahoo.com", "author": "jab_creations@yahoo.com", "count": 0, "text": "Let's say you have the following XHTML...\n\n<p>1111 <s>2222</s> 1111 <s>2222</s> 1111 <s>2222</s> </p>\n\nThe selection bug occurs when you less-than-half select the last '1' character and drag the mouse right to select part of the 's' element (in part of whole it seems, trivial).\n\nThis won't matter if you're trying to work with range and s[0] however Gecko selects s[0] regardless of WHICH s[i] you choose. I have confirmed this using methods such as compareDocumentPosition and offsetLeft/offsetTop.\n\nThe problem is that the selection area is very small. Since the character was NOT fully selected (I presume fully means 50% of it's width or greater) that the browser sets the SELECTION to the next character to the right HOWEVER the RANGE seems to consider it part of the selection even though the horizontal width was not sufficient to include it in the SELECTED text. Therefore I think this issue is a disagreement between RANGE and SELECTION. This issue does NOT occur in any of the other browsers.\n\nThe reason this bug is very nasty is because there is absolutely no reliable method to determine which s[i] was selected. If none of the s[i] elements have the same toString as the selected s[i] then it might be possible however it is not if there are multiple instances where the s element's textNode match exactly.\n\nI do not have the time to make a test case this morning, I might be able to later today though if anyone wants to test it before then I HIGHLY recommend setting the font-size to 40px or greater in order to make it easy to partially (less than half the width of the character, not making it visually part of the selection but having Gecko add it to the range) select the text (left to right) from s[1] or a later s element.", "tags": [], "time": "2011-10-22T12:30:03Z", "attachment_id": null, "raw_text": "Let's say you have the following XHTML...\n\n<p>1111 <s>2222</s> 1111 <s>2222</s> 1111 <s>2222</s> </p>\n\nThe selection bug occurs when you less-than-half select the last '1' character and drag the mouse right to select part of the 's' element (in part of whole it seems, trivial).\n\nThis won't matter if you're trying to work with range and s[0] however Gecko selects s[0] regardless of WHICH s[i] you choose. I have confirmed this using methods such as compareDocumentPosition and offsetLeft/offsetTop.\n\nThe problem is that the selection area is very small. Since the character was NOT fully selected (I presume fully means 50% of it's width or greater) that the browser sets the SELECTION to the next character to the right HOWEVER the RANGE seems to consider it part of the selection even though the horizontal width was not sufficient to include it in the SELECTED text. Therefore I think this issue is a disagreement between RANGE and SELECTION. This issue does NOT occur in any of the other browsers.\n\nThe reason this bug is very nasty is because there is absolutely no reliable method to determine which s[i] was selected. If none of the s[i] elements have the same toString as the selected s[i] then it might be possible however it is not if there are multiple instances where the s element's textNode match exactly.\n\nI do not have the time to make a test case this morning, I might be able to later today though if anyone wants to test it before then I HIGHLY recommend setting the font-size to 40px or greater in order to make it easy to partially (less than half the width of the character, not making it visually part of the selection but having Gecko add it to the range) select the text (left to right) from s[1] or a later s element."}, {"time": "2011-10-23T13:50:24Z", "raw_text": "The test case is very simple, simply select the text just to the left of the red border (without the visual selection including the space to the left) or do the same from the right side and click the button. In Opera 11.5, Safari 5.1 and Chrome 14 the node.childNodes.length is 1 unless the selection visually includes the space in which case then yes it is correct to have two childNodes selected. This test case was tested on Windows XP 64 Bit.", "bug_id": 696571, "id": 5799362, "author": "jab_creations@yahoo.com", "count": 1, "text": "Created attachment 568948\nTest Case 1\n\nThe test case is very simple, simply select the text just to the left of the red border (without the visual selection including the space to the left) or do the same from the right side and click the button. In Opera 11.5, Safari 5.1 and Chrome 14 the node.childNodes.length is 1 unless the selection visually includes the space in which case then yes it is correct to have two childNodes selected. This test case was tested on Windows XP 64 Bit.", "tags": [], "attachment_id": 568948, "is_private": false, "creation_time": "2011-10-23T13:50:24Z", "creator": "jab_creations@yahoo.com"}, {"tags": [], "raw_text": "I think the range is more correct in Firefox than in Chrome given how\nthe selection is being done.  The result in Chrome misses the fact\nthe selection gesture passed over the <em> start boundary so the\nresulting cloneContents() fragment doesn't have <em>2</em> just \"2\"\nwhich might matter in an editing context.\n\nI guess we could avoid the empty text node in the result by setting\nthe start position between the first text node and the <em> (at <p> / 1).\n\nConsider also what happens when selecting the text as suggested and\nthen typing DEL vs. BACKSPACE and then typing text.  Chrome inserts\ntext before the <em> in both cases which seems wrong for BACKSPACE.\n\n(tested with Firefox trunk / Chrome 16, both on Linux)", "attachment_id": 568956, "time": "2011-10-23T17:11:19Z", "is_private": false, "creation_time": "2011-10-23T17:11:19Z", "id": 5799460, "bug_id": 696571, "count": 2, "text": "Created attachment 568956\nTest Case 2\n\nI think the range is more correct in Firefox than in Chrome given how\nthe selection is being done.  The result in Chrome misses the fact\nthe selection gesture passed over the <em> start boundary so the\nresulting cloneContents() fragment doesn't have <em>2</em> just \"2\"\nwhich might matter in an editing context.\n\nI guess we could avoid the empty text node in the result by setting\nthe start position between the first text node and the <em> (at <p> / 1).\n\nConsider also what happens when selecting the text as suggested and\nthen typing DEL vs. BACKSPACE and then typing text.  Chrome inserts\ntext before the <em> in both cases which seems wrong for BACKSPACE.\n\n(tested with Firefox trunk / Chrome 16, both on Linux)", "author": "MatsPalmgren_bugz@use.startmail.com", "creator": "MatsPalmgren_bugz@use.startmail.com"}, {"id": 5799469, "bug_id": 696571, "text": "Actually this is a normal level bug because mot people are not going to be aware of a bug where (at normal / low text size levels) that users have unknowingly selected more nodes then they intended.\n\nThe most important part of the bug problem is that if you have more than one child element (say an 's' element) that have the EXACT same nodeValues (e.g. <s>111</s> 222 <s>111</s>) Gecko does NOT correctly select the second 's' element, it instead selects the first 's' element in those circumstances. So there is NO work around in such cases for correctly working with the DOM if there are other elements with the exact same nodeValue, the script has no choice but to ignore the request. I can create another test case (either later today or sometime tomorrow) to demonstrate this with and without patching.", "count": 3, "author": "jab_creations@yahoo.com", "time": "2011-10-23T17:22:54Z", "raw_text": "Actually this is a normal level bug because mot people are not going to be aware of a bug where (at normal / low text size levels) that users have unknowingly selected more nodes then they intended.\n\nThe most important part of the bug problem is that if you have more than one child element (say an 's' element) that have the EXACT same nodeValues (e.g. <s>111</s> 222 <s>111</s>) Gecko does NOT correctly select the second 's' element, it instead selects the first 's' element in those circumstances. So there is NO work around in such cases for correctly working with the DOM if there are other elements with the exact same nodeValue, the script has no choice but to ignore the request. I can create another test case (either later today or sometime tomorrow) to demonstrate this with and without patching.", "creation_time": "2011-10-23T17:22:54Z", "is_private": false, "creator": "jab_creations@yahoo.com", "tags": [], "attachment_id": null}, {"time": "2011-10-28T05:23:00Z", "attachment_id": null, "raw_text": "(In reply to John A. Bilicki III from comment #3)\n> The most important part of the bug problem is that if you have more than one\n> child element (say an 's' element) that have the EXACT same nodeValues (e.g.\n> <s>111</s> 222 <s>111</s>) Gecko does NOT correctly select the second 's'\n> element, it instead selects the first 's' element in those circumstances.\n\nDo you have a test that demonstrates this problem?", "tags": [], "creator": "MatsPalmgren_bugz@use.startmail.com", "author": "MatsPalmgren_bugz@use.startmail.com", "count": 4, "text": "(In reply to John A. Bilicki III from comment #3)\n> The most important part of the bug problem is that if you have more than one\n> child element (say an 's' element) that have the EXACT same nodeValues (e.g.\n> <s>111</s> 222 <s>111</s>) Gecko does NOT correctly select the second 's'\n> element, it instead selects the first 's' element in those circumstances.\n\nDo you have a test that demonstrates this problem?", "bug_id": 696571, "id": 5810748, "creation_time": "2011-10-28T05:23:00Z", "is_private": false}, {"creation_time": "2011-10-28T18:44:17Z", "is_private": false, "creator": "jab_creations@yahoo.com", "tags": [], "attachment_id": null, "id": 5811961, "bug_id": 696571, "author": "jab_creations@yahoo.com", "text": "Mats, your modification to my test case is brilliant, thank you for creating a visual example.\n\nI can't make a full test case just yet however I can at least clarify how I'm approaching the issue and how it's causing problems...\n\nI'm building a rich text editor. For text editing I essentially have to start with determining how many nodes are selected...\n\n**********\n\nvar c = window.getSelection().getRangeAt(0).cloneContents();\n\nif (c.childNodes.length==1) {alert('Selected one node.');}\nelse if (c.childNodes.length==2) {alert('Selected two nodes.');}\nelse if (c.childNodes.length==3) {alert('Selected three nodes.');}\nelse {alert('Selected '+c.childNodes.length+' nodes.');}\n\n**********\n\nThe problem for me is that when a single node (the red bordered em element in the test cases) is selected the user might unintentionally overshoot their selection in a Gecko browser. That immediately changes the condition from (c.childNodes.length==1) in other browsers to (c.childNodes.length==2) for Gecko alone. This has ended up being a much nastier bug for me to deal with than a very large percentage of early Trident issues.\n\nThe ranges should be limited to ONLY the actually selected text and they are not in Gecko. I will try to find some time sometime next week (busy until then) to produce a new test case to demonstrate how I have had to determine which element was intended for selection, count the selection length, remove all ranges and manually reselect the correct range for the user in order to make this work.", "count": 5, "time": "2011-10-28T18:44:17Z", "raw_text": "Mats, your modification to my test case is brilliant, thank you for creating a visual example.\n\nI can't make a full test case just yet however I can at least clarify how I'm approaching the issue and how it's causing problems...\n\nI'm building a rich text editor. For text editing I essentially have to start with determining how many nodes are selected...\n\n**********\n\nvar c = window.getSelection().getRangeAt(0).cloneContents();\n\nif (c.childNodes.length==1) {alert('Selected one node.');}\nelse if (c.childNodes.length==2) {alert('Selected two nodes.');}\nelse if (c.childNodes.length==3) {alert('Selected three nodes.');}\nelse {alert('Selected '+c.childNodes.length+' nodes.');}\n\n**********\n\nThe problem for me is that when a single node (the red bordered em element in the test cases) is selected the user might unintentionally overshoot their selection in a Gecko browser. That immediately changes the condition from (c.childNodes.length==1) in other browsers to (c.childNodes.length==2) for Gecko alone. This has ended up being a much nastier bug for me to deal with than a very large percentage of early Trident issues.\n\nThe ranges should be limited to ONLY the actually selected text and they are not in Gecko. I will try to find some time sometime next week (busy until then) to produce a new test case to demonstrate how I have had to determine which element was intended for selection, count the selection length, remove all ranges and manually reselect the correct range for the user in order to make this work."}, {"creation_time": "2011-11-04T01:19:48Z", "is_private": false, "creator": "jab_creations@yahoo.com", "tags": [], "attachment_id": 571862, "bug_id": 696571, "id": 5825471, "text": "Created attachment 571862\nTest case 3, there are four ways to select the text applicable to the bug.\n\nI've attached a test case demonstrating the large amount of code needed to work around this bug. I've added a visual status that displays what has been selected.\n\nThere are four applicable scenarios...\n\n1.) The user selects the left portion of an emphasis element, selection made left-to-right.\n\n2.) The user selects the left portion of an emphasis element, selection made right-to-left.\n\n3.) The user selects the right portion of an emphasis element, selection made right-to-left.\n\n4.) The user selects the right portion of an emphasis element, selection made left-to-right.\n\nWhen selecting the text in the applicable way the status text will update letting you know which side of the element you've selected and which direction (left-to-right or right-to-left) you made when selecting the text. If someone testing test case file #3 does not see this when selecting the text and pressing the button then they are not partially selecting (less than half though greater than 0 pixels) of the adjacent text node.\n\nEach scenario requires some slight modification further complicating the fix specific to Gecko browsers. All other browsers I've tested only select a single node thus bypassing any need for this fix. This bug took roughly a week and a half to make transparent at a user level. Since text on websites is usually smaller it's very likely that numerous developers and end-users have encountered this issue and are NOT able to explain what is happening in Gecko based browsers so under the given circumstances I would consider this a normal bug instead of a minor bug.", "count": 6, "author": "jab_creations@yahoo.com", "time": "2011-11-04T01:19:48Z", "raw_text": "I've attached a test case demonstrating the large amount of code needed to work around this bug. I've added a visual status that displays what has been selected.\n\nThere are four applicable scenarios...\n\n1.) The user selects the left portion of an emphasis element, selection made left-to-right.\n\n2.) The user selects the left portion of an emphasis element, selection made right-to-left.\n\n3.) The user selects the right portion of an emphasis element, selection made right-to-left.\n\n4.) The user selects the right portion of an emphasis element, selection made left-to-right.\n\nWhen selecting the text in the applicable way the status text will update letting you know which side of the element you've selected and which direction (left-to-right or right-to-left) you made when selecting the text. If someone testing test case file #3 does not see this when selecting the text and pressing the button then they are not partially selecting (less than half though greater than 0 pixels) of the adjacent text node.\n\nEach scenario requires some slight modification further complicating the fix specific to Gecko browsers. All other browsers I've tested only select a single node thus bypassing any need for this fix. This bug took roughly a week and a half to make transparent at a user level. Since text on websites is usually smaller it's very likely that numerous developers and end-users have encountered this issue and are NOT able to explain what is happening in Gecko based browsers so under the given circumstances I would consider this a normal bug instead of a minor bug."}, {"id": 5825856, "bug_id": 696571, "count": 7, "text": "John, do you have a test that demonstrates the problem in comment 4?", "author": "MatsPalmgren_bugz@use.startmail.com", "time": "2011-11-04T07:53:44Z", "raw_text": "John, do you have a test that demonstrates the problem in comment 4?", "is_private": false, "creation_time": "2011-11-04T07:53:44Z", "creator": "MatsPalmgren_bugz@use.startmail.com", "tags": [], "attachment_id": null}, {"time": "2011-11-04T08:03:21Z", "raw_text": "Mat, lines 40-96 exist ONLY for this bug. Line 40 starts with...\n\nelse if (c.childNodes.length==2)\n\nTry the third test case file in Chrome, IE9+, Opera, or Safari and it should tell you that there is only one node in the selection, they will all use the FIRST condition (c.childNodes.length==1).\n\nRemember, you need to select just outside of an emphasis element (regardless of which side) just enough that Gecko selects two nodes though not so much that a space character is selected. The status text field is used to tell you if your selection is applicable to the concerns of this bug report. If you need further clarification I'll be happy to help however I can.", "author": "jab_creations@yahoo.com", "text": "Mat, lines 40-96 exist ONLY for this bug. Line 40 starts with...\n\nelse if (c.childNodes.length==2)\n\nTry the third test case file in Chrome, IE9+, Opera, or Safari and it should tell you that there is only one node in the selection, they will all use the FIRST condition (c.childNodes.length==1).\n\nRemember, you need to select just outside of an emphasis element (regardless of which side) just enough that Gecko selects two nodes though not so much that a space character is selected. The status text field is used to tell you if your selection is applicable to the concerns of this bug report. If you need further clarification I'll be happy to help however I can.", "count": 8, "id": 5825866, "bug_id": 696571, "attachment_id": null, "tags": [], "creator": "jab_creations@yahoo.com", "is_private": false, "creation_time": "2011-11-04T08:03:21Z"}, {"attachment_id": null, "raw_text": "I'm not talking about the latest test.  You claimed in comment 3 that selecting\ntwo *different* DOM text nodes that happened to have the same text contents \"111\"\nresulted in a range with only one text node... or something.  I want to know if you\nhave a test that demonstrates this, or if it just a mistake.", "time": "2011-11-04T08:26:59Z", "tags": [], "author": "MatsPalmgren_bugz@use.startmail.com", "text": "I'm not talking about the latest test.  You claimed in comment 3 that selecting\ntwo *different* DOM text nodes that happened to have the same text contents \"111\"\nresulted in a range with only one text node... or something.  I want to know if you\nhave a test that demonstrates this, or if it just a mistake.", "count": 9, "creator": "MatsPalmgren_bugz@use.startmail.com", "is_private": false, "creation_time": "2011-11-04T08:26:59Z", "bug_id": 696571, "id": 5825890}, {"bug_id": 696571, "id": 5825941, "count": 10, "text": "As far as I can tell, Test case 3 doesn't show anything new compared to\nthe earlier tests which I've already commented on in comment 2.\nTo be clear, I don't consider this to be a bug.\n\nLooking at Test case 3, are you trying to delete the selected text?\nIn that case, why not simply use Range.deleteContents() - it should work\nin all browsers regardless of what the range looks like.\nhttp://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#interface-range", "author": "MatsPalmgren_bugz@use.startmail.com", "time": "2011-11-04T09:07:19Z", "raw_text": "As far as I can tell, Test case 3 doesn't show anything new compared to\nthe earlier tests which I've already commented on in comment 2.\nTo be clear, I don't consider this to be a bug.\n\nLooking at Test case 3, are you trying to delete the selected text?\nIn that case, why not simply use Range.deleteContents() - it should work\nin all browsers regardless of what the range looks like.\nhttp://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#interface-range", "creation_time": "2011-11-04T09:07:19Z", "is_private": false, "creator": "MatsPalmgren_bugz@use.startmail.com", "tags": [], "attachment_id": null}, {"tags": [], "time": "2011-11-05T03:45:13Z", "attachment_id": 572165, "raw_text": "I fixed a bug where if you selected text in the FIRST paragraph (p[0]) the j variable in the script would become a negative value thus breaking the script as JavaScript does not allow nodes to have negative index numbers.", "id": 5828120, "bug_id": 696571, "creation_time": "2011-11-05T03:45:13Z", "is_private": false, "creator": "jab_creations@yahoo.com", "author": "jab_creations@yahoo.com", "text": "Created attachment 572165\nTest case 3.1, fixed a bug where j-- would make the script attempt to select a node with a negative index.\n\nI fixed a bug where if you selected text in the FIRST paragraph (p[0]) the j variable in the script would become a negative value thus breaking the script as JavaScript does not allow nodes to have negative index numbers.", "count": 11}, {"creator": "jab_creations@yahoo.com", "text": "Mats, the ENTIRE second condition (else if (c.childNodes.length==2)) in the function editor_text(e) exists SOLELY because of this bug. Add an alert to the first line of each condition to note how many nodes are selected and then run the test in every browser (Firefox, Internet Explorer, Opera and Safari). Only Gecko browsers will select two nodes when slightly selecting text outside of an emphasis element but not enough to have the space on either side become part of the VISUAL selection. Keep in mind that you shouldn't select the ENTIRE emphasis element, only part of it (there are 13 characters, select 12 or less and start or end the selection by selecting only a few pixels of a space in either adjacent textNode to the right or left). This bug requires very astute attention to detail to catch though before I realized I had found a bug I had no problem encountering it while testing the editor I'm working on from an end-users perspective.", "count": 12, "author": "jab_creations@yahoo.com", "bug_id": 696571, "id": 5828124, "creation_time": "2011-11-05T03:50:47Z", "is_private": false, "time": "2011-11-05T03:50:47Z", "raw_text": "Mats, the ENTIRE second condition (else if (c.childNodes.length==2)) in the function editor_text(e) exists SOLELY because of this bug. Add an alert to the first line of each condition to note how many nodes are selected and then run the test in every browser (Firefox, Internet Explorer, Opera and Safari). Only Gecko browsers will select two nodes when slightly selecting text outside of an emphasis element but not enough to have the space on either side become part of the VISUAL selection. Keep in mind that you shouldn't select the ENTIRE emphasis element, only part of it (there are 13 characters, select 12 or less and start or end the selection by selecting only a few pixels of a space in either adjacent textNode to the right or left). This bug requires very astute attention to detail to catch though before I realized I had found a bug I had no problem encountering it while testing the editor I'm working on from an end-users perspective.", "attachment_id": null, "tags": []}, {"bug_id": 696571, "id": 5828148, "is_private": false, "creation_time": "2011-11-05T04:25:36Z", "creator": "jab_creations@yahoo.com", "text": "Created attachment 572172\nTest case 3.2, JavaScript alert dialogs are now used to clearly inform you of the status of your selection.\n\nMats, to make test case 3 as clear as possible I have added JavaScript alert dialogs to help clarify the status of your selection. There are two notice types, normal notice and bug notice. Normal notice merely alerts you that your current selection does not involve this bug. Bug notice alert dialogs (four of them) will only occur if your current text selection correlates with this bug. If this does not clarify the bug enough I will be happy to produce a video with the cursor video to visually demonstrate how the text needs to be selected in order to trigger this bug.", "count": 13, "author": "jab_creations@yahoo.com", "tags": [], "time": "2011-11-05T04:25:36Z", "raw_text": "Mats, to make test case 3 as clear as possible I have added JavaScript alert dialogs to help clarify the status of your selection. There are two notice types, normal notice and bug notice. Normal notice merely alerts you that your current selection does not involve this bug. Bug notice alert dialogs (four of them) will only occur if your current text selection correlates with this bug. If this does not clarify the bug enough I will be happy to produce a video with the cursor video to visually demonstrate how the text needs to be selected in order to trigger this bug.", "attachment_id": 572172}, {"id": 5828286, "bug_id": 696571, "author": "jab_creations@yahoo.com", "count": 14, "text": "After doing some test I've noticed some issues with selecting an emphasis element from left-to-right on the left side of the element. I have an idea of what is causing this and will upload test case 3.3 soon, likely in a day or two. The other ways to select text seem to work fine in test case 3.2 (left side: right-to-left and right side: left-to-right and right-to-left).", "raw_text": "After doing some test I've noticed some issues with selecting an emphasis element from left-to-right on the left side of the element. I have an idea of what is causing this and will upload test case 3.3 soon, likely in a day or two. The other ways to select text seem to work fine in test case 3.2 (left side: right-to-left and right side: left-to-right and right-to-left).", "time": "2011-11-05T10:09:12Z", "is_private": false, "creation_time": "2011-11-05T10:09:12Z", "creator": "jab_creations@yahoo.com", "tags": [], "attachment_id": null}, {"time": "2011-11-07T08:26:29Z", "raw_text": "I have fixed all the remaining bugs I can find in test case 3 in version 3.3 and have done extensive testing to ensure there aren't any errors in the console regardless of how you select the text.\n\nThe JavaScript alert dialogs should help clarify when you have or have not selected text in a way that is applicable to this bug.", "attachment_id": 572402, "tags": [], "creator": "jab_creations@yahoo.com", "text": "Created attachment 572402\nTest case 3.3, fixed bugs in previous versions of test case 3 and tested extensively.\n\nI have fixed all the remaining bugs I can find in test case 3 in version 3.3 and have done extensive testing to ensure there aren't any errors in the console regardless of how you select the text.\n\nThe JavaScript alert dialogs should help clarify when you have or have not selected text in a way that is applicable to this bug.", "count": 15, "author": "jab_creations@yahoo.com", "id": 5830031, "bug_id": 696571, "creation_time": "2011-11-07T08:26:29Z", "is_private": false}, {"creator": "jstutte@mozilla.com", "count": 16, "text": "Bulk-downgrade of unassigned, >=5 years untouched DOM/Storage bugs' priority and severity.\n\nIf you have reason to believe this is wrong, please write a comment and ni :jstutte.", "author": "jstutte@mozilla.com", "bug_id": 696571, "id": 15175819, "is_private": false, "creation_time": "2020-12-15T07:16:14Z", "time": "2020-12-15T07:16:14Z", "raw_text": "Bulk-downgrade of unassigned, >=5 years untouched DOM/Storage bugs' priority and severity.\n\nIf you have reason to believe this is wrong, please write a comment and ni :jstutte.", "attachment_id": null, "tags": []}]}}, "comments": {}}