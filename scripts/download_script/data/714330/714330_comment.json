{"comments": {}, "bugs": {"714330": {"comments": [{"is_private": false, "count": 0, "id": 5947285, "author": "jesper@staunhansen.dk", "creator": "jesper@staunhansen.dk", "creation_time": "2011-12-30T19:35:31Z", "time": "2011-12-30T19:35:31Z", "raw_text": "Firefox currently fails in firefox 9-12 at keeping its image scale while zooming out.\nIn the testcase provided is the scale on my monitor 34%.\n\nSteps to Reproduce:\n1. Open testcase\n2. Scale is set to your optimal viewing window\n3. Ctrl-minus 4 times and image gets smaller while scale is kept constant\n4. Ctrl-minus a 5th time\n\nActual Results:\n1. Scale is set to 100% and its zoom is kept\n2. Image is now bigger\n\nExpected Results:\n1. Scale kept at 34% and zooms out a 5th time\n2. Image should be smaller", "attachment_id": 585004, "tags": [], "text": "Created attachment 585004\nimage testcase (2592x1936)\n\nFirefox currently fails in firefox 9-12 at keeping its image scale while zooming out.\nIn the testcase provided is the scale on my monitor 34%.\n\nSteps to Reproduce:\n1. Open testcase\n2. Scale is set to your optimal viewing window\n3. Ctrl-minus 4 times and image gets smaller while scale is kept constant\n4. Ctrl-minus a 5th time\n\nActual Results:\n1. Scale is set to 100% and its zoom is kept\n2. Image is now bigger\n\nExpected Results:\n1. Scale kept at 34% and zooms out a 5th time\n2. Image should be smaller", "bug_id": 714330}, {"attachment_id": null, "raw_text": "I'm no expert of Layout but here's some information I've found.\nWhen asking to zoom out at the problem level of zoom, nsStylePosition has a height and width of 0. This leads nsImageFrame::ComputeSizeWithIntrinsicDimensions() to return the intrinsic size of the image, which I guess explains how the zoom out ends up making the image larger instead (as the image is now ignoring the zoom?).\n\nThe process first hits nsDocumentViewer::SetFullZoom(), which records the zoom level and then ends up calling mozilla::RestyleManager::RebuildAllStyleData(). This ends up calling mozilla:ElementRestyler::RestyleSelf() on the image frame. From what I can understand by looking at mozilla::ElementRestyler::CaptureChange() it looks like the image keeps its same width and height.\nThe process later calls PresShell::FireResizeEvent(), which I do not understand its purpose.\nLater PresShell::WillPaint() is called, leading to mozilla:RestylerManager::RestyleElement() and then mozilla:ElementRestyler::RestyleSelf() again. This time mozilla::ElementRestyler::CaptureChange() returns a result of 0 for both the width and the height.\nI'm currently trying to understand why/how the new nsStyleContext is different at the later pass through ElementRestyler. The two runs through RestyleSelf() differ in that the hints direct the first run to call nsStyleSet::ResolveStyleWithReplacement(), and the second run calls nsStyleSet::ResolveStyleFor().", "tags": [], "text": "I'm no expert of Layout but here's some information I've found.\nWhen asking to zoom out at the problem level of zoom, nsStylePosition has a height and width of 0. This leads nsImageFrame::ComputeSizeWithIntrinsicDimensions() to return the intrinsic size of the image, which I guess explains how the zoom out ends up making the image larger instead (as the image is now ignoring the zoom?).\n\nThe process first hits nsDocumentViewer::SetFullZoom(), which records the zoom level and then ends up calling mozilla::RestyleManager::RebuildAllStyleData(). This ends up calling mozilla:ElementRestyler::RestyleSelf() on the image frame. From what I can understand by looking at mozilla::ElementRestyler::CaptureChange() it looks like the image keeps its same width and height.\nThe process later calls PresShell::FireResizeEvent(), which I do not understand its purpose.\nLater PresShell::WillPaint() is called, leading to mozilla:RestylerManager::RestyleElement() and then mozilla:ElementRestyler::RestyleSelf() again. This time mozilla::ElementRestyler::CaptureChange() returns a result of 0 for both the width and the height.\nI'm currently trying to understand why/how the new nsStyleContext is different at the later pass through ElementRestyler. The two runs through RestyleSelf() differ in that the hints direct the first run to call nsStyleSet::ResolveStyleWithReplacement(), and the second run calls nsStyleSet::ResolveStyleFor().", "bug_id": 714330, "id": 9970742, "count": 1, "is_private": false, "time": "2015-02-28T22:37:59Z", "creation_time": "2015-02-28T22:37:59Z", "creator": "ian.wills.9@gmail.com", "author": "ian.wills.9@gmail.com"}, {"creation_time": "2015-03-06T05:32:15Z", "time": "2015-03-06T05:32:15Z", "creator": "ian.wills.9@gmail.com", "author": "ian.wills.9@gmail.com", "id": 9994944, "count": 2, "is_private": false, "tags": [], "bug_id": 714330, "text": "To summarize, the situation that occurs is that when the page is zoomed out enough to fit the image's intrinsic (source) size, the browser sizes the image to its intrinsic size, overriding the previously calculated size of the image. This causes the image to become bigger than expected, in my window's case bigger than the previous size of the image.\nThis is caused in ImageDocument::CheckOverflowing(). The variable 'windowBecameBigEnough' becomes true, and then RestoreImage() is called, causing the image to be set to bigger than expected.\nThe problem seems to be fixed by simply commenting out the call to RestoreImage(): the image keeps its originally calculated size and therefore shrinks as expected. I assume there is some reason though for the code to revert the image size like that in another use case, but I don't know what that case is.", "attachment_id": null, "raw_text": "To summarize, the situation that occurs is that when the page is zoomed out enough to fit the image's intrinsic (source) size, the browser sizes the image to its intrinsic size, overriding the previously calculated size of the image. This causes the image to become bigger than expected, in my window's case bigger than the previous size of the image.\nThis is caused in ImageDocument::CheckOverflowing(). The variable 'windowBecameBigEnough' becomes true, and then RestoreImage() is called, causing the image to be set to bigger than expected.\nThe problem seems to be fixed by simply commenting out the call to RestoreImage(): the image keeps its originally calculated size and therefore shrinks as expected. I assume there is some reason though for the code to revert the image size like that in another use case, but I don't know what that case is."}, {"author": "jesper@staunhansen.dk", "creator": "jesper@staunhansen.dk", "creation_time": "2015-03-06T18:16:30Z", "time": "2015-03-06T18:16:30Z", "is_private": false, "count": 3, "id": 9997597, "bug_id": 714330, "text": "Found the original bug report that introduced this.\nNeedinfo'd Chris Thomas for his ancient thoughts on this.", "tags": [], "raw_text": "Found the original bug report that introduced this.\nNeedinfo'd Chris Thomas for his ancient thoughts on this.", "attachment_id": null}]}}}