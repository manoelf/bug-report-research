{"bugs": {"711819": {"comments": [{"count": 0, "bug_id": 711819, "is_private": false, "creator": "gal@uci.edu", "text": "Android has hardware support for YUV2RGB conversion with mirroring and rotation through the \"copybit\" device contained in libhardware.so. See hardware/libhardware/include/hardware/copybit.h for the API. We should use this for ConvertYCbCrToRGB32 and ScaleYCbCrToRGB32 since its hardware accelerated on some phones.\n\nThis is going to help B2G as well, obviously.", "time": "2011-12-18T10:13:36Z", "tags": [], "creation_time": "2011-12-18T10:13:36Z", "author": "gal@uci.edu", "raw_text": "Android has hardware support for YUV2RGB conversion with mirroring and rotation through the \"copybit\" device contained in libhardware.so. See hardware/libhardware/include/hardware/copybit.h for the API. We should use this for ConvertYCbCrToRGB32 and ScaleYCbCrToRGB32 since its hardware accelerated on some phones.\n\nThis is going to help B2G as well, obviously.", "attachment_id": null, "id": 5925199}, {"creator": "cjones.bugs@gmail.com", "is_private": false, "author": "cjones.bugs@gmail.com", "creation_time": "2011-12-19T00:37:13Z", "tags": [], "time": "2011-12-19T00:37:13Z", "text": "We need to figure out how this is implemented before deciding whether it would help us.  We (already?) have code to unpack yuv with shaders during compositing, which is optimal wrt memory bandwidth.", "attachment_id": null, "raw_text": "We need to figure out how this is implemented before deciding whether it would help us.  We (already?) have code to unpack yuv with shaders during compositing, which is optimal wrt memory bandwidth.", "id": 5925804, "count": 1, "bug_id": 711819}, {"bug_id": 711819, "count": 2, "tags": [], "time": "2011-12-19T01:43:37Z", "text": "Maybe we could use copybit when GL acceleration is not available. The question is whether there are many devices where that would be a win.", "author": "roc@ocallahan.org", "creation_time": "2011-12-19T01:43:37Z", "creator": "roc@ocallahan.org", "is_private": false, "id": 5925848, "raw_text": "Maybe we could use copybit when GL acceleration is not available. The question is whether there are many devices where that would be a win.", "attachment_id": null}, {"is_private": false, "creator": "james.zhang@spreadtrum.com", "count": 3, "creation_time": "2012-11-22T10:07:05Z", "author": "james.zhang@spreadtrum.com", "text": "Hi all,\n\nI found a chrome patch which optimizes YUV2RGB performance by NEON assembly, http://code.google.com/p/chromium/issues/detail?id=71403\n\nIn Cubevid apps, the major hotspot \"FastConvertYUVToRGB32Row_C\" reduced quite a lot from 23% to 3%. \n\nBR\nJames", "bug_id": 711819, "time": "2012-11-22T10:07:05Z", "tags": [], "attachment_id": null, "raw_text": "Hi all,\n\nI found a chrome patch which optimizes YUV2RGB performance by NEON assembly, http://code.google.com/p/chromium/issues/detail?id=71403\n\nIn Cubevid apps, the major hotspot \"FastConvertYUVToRGB32Row_C\" reduced quite a lot from 23% to 3%. \n\nBR\nJames", "id": 6844930}, {"id": 6844941, "attachment_id": 684354, "raw_text": "yuv2rgb neon patch", "creation_time": "2012-11-22T10:10:57Z", "author": "james.zhang@spreadtrum.com", "text": "Created attachment 684354\nyuv2rgb neon patch\n\nyuv2rgb neon patch", "tags": [], "time": "2012-11-22T10:10:57Z", "is_private": false, "creator": "james.zhang@spreadtrum.com", "bug_id": 711819, "count": 4}, {"creator": "josh@joshmatthews.net", "is_private": false, "count": 5, "author": "josh@joshmatthews.net", "creation_time": "2012-11-22T14:42:56Z", "time": "2012-11-22T14:42:56Z", "bug_id": 711819, "tags": [], "text": "Created attachment 684409\nPatch\n\nHere's a version that applies well.", "attachment_id": 684409, "raw_text": "Here's a version that applies well.", "id": 6845509}, {"creation_time": "2012-11-22T14:47:02Z", "author": "josh@joshmatthews.net", "text": "Comment on attachment 684409\nPatch\n\nRandrom r? request to get this process kicked off.", "bug_id": 711819, "time": "2012-11-22T14:47:02Z", "tags": [], "is_private": false, "creator": "josh@joshmatthews.net", "count": 6, "id": 6845523, "attachment_id": 684409, "raw_text": "Randrom r? request to get this process kicked off."}, {"id": 6845544, "raw_text": "Hi all,\n   You can test this path and use it in FFOS. It improves Cubevid performance.\nBR\nJames", "attachment_id": null, "text": "Hi all,\n   You can test this path and use it in FFOS. It improves Cubevid performance.\nBR\nJames", "bug_id": 711819, "time": "2012-11-22T14:53:15Z", "tags": [], "creation_time": "2012-11-22T14:53:15Z", "author": "james.zhang@spreadtrum.com", "count": 7, "is_private": false, "creator": "james.zhang@spreadtrum.com"}, {"attachment_id": null, "raw_text": "I expect that this patch will need to be properly added to the infrastructure like update.sh and the README in gfx/ycbcr as well.", "id": 6845918, "is_private": false, "creator": "josh@joshmatthews.net", "count": 8, "creation_time": "2012-11-22T17:25:47Z", "author": "josh@joshmatthews.net", "text": "I expect that this patch will need to be properly added to the infrastructure like update.sh and the README in gfx/ycbcr as well.", "time": "2012-11-22T17:25:47Z", "tags": [], "bug_id": 711819}, {"count": 9, "bug_id": 711819, "is_private": false, "creator": "gal@uci.edu", "text": "update.sh doesn't work for me any more, I think that machinery is out of date. I am ok with just patching over it.", "tags": [], "time": "2012-11-22T17:46:45Z", "creation_time": "2012-11-22T17:46:45Z", "author": "gal@uci.edu", "raw_text": "update.sh doesn't work for me any more, I think that machinery is out of date. I am ok with just patching over it.", "attachment_id": null, "id": 6845981}, {"text": "I would like to capture a stack to see why we end up here though. I would have thought we do this with GL.", "bug_id": 711819, "time": "2012-11-22T18:28:23Z", "tags": [], "creation_time": "2012-11-22T18:28:23Z", "author": "gal@uci.edu", "count": 10, "is_private": false, "creator": "gal@uci.edu", "id": 6846100, "raw_text": "I would like to capture a stack to see why we end up here though. I would have thought we do this with GL.", "attachment_id": null}, {"count": 11, "is_private": false, "creator": "gal@uci.edu", "text": "wow, ok, no wonder this is slow:\n\n(gdb) bt 30\n#0  mozilla::gfx::ConvertYCbCrToRGB32 (\n    y_buf=0x4316401c \"\\033\\033\\033\\033\\033\\033\\033\\033\", '\\034' <repeats 14 times>, \"\\035\\035\\035\\035\", '\\036' <repeats 28 times>, \"\\037\\037\\037\\037    \\037\\037\\037\\037\", '\\036' <repeats 33 times>, \"\\034\\033\\032\\032\\032\\032\\032\\032\\032\\032\\032\\033\\033\\034\\034\\035\\033\\032\\031\\031\\031\\031\\031\\031\\031\\031\\031\\032\\032\\032\\032\\032\\030\\027\\025\\025\\025\\026\\026\\030\\030\\031\\031\\031\\030\\027\\026\\025\\022\\021\\020\\020\\016\\r\\017\\024\\027\\031\\033\\036!$&''''()+,---,+**))()*++++,-/01100000023\"..., \n    u_buf=0x4319c41c '\\177' <repeats 103 times>, \"~\\200\\205\\214\\225\\230\\230\\230\\221\\204\\203\\201\", '\\177' <repeats 11 times>, \"~zuss\", 't' <repeats 45 times>, \"uuvwxxxxxxxyyzz{{||{{z\"..., \n    v_buf=0x431aa51crepeats 15 times>\"\\200, \\200\\201\\201\\202\\203\\204\\205\\205\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\205\\205\\204\\204\\203\\203\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\"..., rgb_buf=0x4c501000 \"\", pic_x=0, pic_y=0, pic_width=640, pic_height=360, \n    y_pitch=640, uv_pitch=320, rgb_pitch=2560, yuv_type=mozilla::gfx::YV12) at /Users/gal/workspace/B2G/gecko/gfx/ycbcr/yuv_convert.cpp:62\n#1  0x40f17ee4 in gfxUtils::ConvertYCbCrToRGB (aData=..., aDestFormat=@0xbe93f91c, aDestSize=<value optimized out>, aDestBuffer=0x4c501000 \"\", aStride=2560)\n    at /Users/gal/workspace/B2G/gecko/gfx/thebes/gfxUtils.cpp:772\n#2  0x40f27ec4 in mozilla::layers::PlanarYCbCrImage::GetAsSurface (this=0x469d2690) at /Users/gal/workspace/B2G/gecko/gfx/layers/ImageContainer.cpp:502\n#3  0x40f40a64 in mozilla::layers::SharedPlanarYCbCrImage::GetAsSurface (this=0x4316401c) at /Users/gal/workspace/B2G/gecko/gfx/layers/ipc/ImageContainerChild.cpp:495\n#4  0x40f284da in mozilla::layers::ImageContainer::GetCurrentAsSurface (this=0x46f23940, aSize=0xbe93f970) at /Users/gal/workspace/B2G/gecko/gfx/layers/ImageContainer.cpp:323\n#5  0x40813fb8 in nsLayoutUtils::SurfaceFromElement (aElement=0x40379480, aSurfaceFlags=<value optimized out>)\n    at /Users/gal/workspace/B2G/gecko/layout/base/nsLayoutUtils.cpp:4490\n#6  0x40e8026e in mozilla::WebGLContext::SurfaceFromElement<nsHTMLVideoElement> (cx=0x46e49b00, obj=<value optimized out>, self=0x439a5980, argc=<value optimized out>, \n    vp=0x42a38128) at /Users/gal/workspace/B2G/gecko/content/canvas/src/WebGLContext.h:1289\n#7  mozilla::WebGLContext::TexImage2D<nsHTMLVideoElement> (cx=0x46e49b00, obj=<value optimized out>, self=0x439a5980, argc=<value optimized out>, vp=0x42a38128)\n    at /Users/gal/workspace/B2G/gecko/content/canvas/src/WebGLContext.h:863\n#8  texImage2D (cx=0x46e49b00, obj=<value optimized out>, self=0x439a5980, argc=<value optimized out>, vp=0x42a38128)\n    at /Users/gal/workspace/B2G/objdir-gecko/dom/bindings/WebGLRenderingContextBinding.cpp:7238\n#9  0x40e83872 in genericMethod (cx=0x46e49b00, argc=6, vp=0x42a38128) at /Users/gal/workspace/B2G/objdir-gecko/dom/bindings/WebGLRenderingContextBinding.cpp:9625\n#10 0x41151466 in CallJSNative (cx=0x46e49b00, args=..., construct=js::NO_CONSTRUCT) at /Users/gal/workspace/B2G/gecko/js/src/jscntxtinlines.h:364\n#11 InvokeKernel (cx=0x46e49b00, args=..., construct=js::NO_CONSTRUCT) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:369\n#12 0x4114e518 in js::Interpret (cx=0x46e49b00, entryFrame=<value optimized out>, interpMode=<value optimized out>) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:2331\n#13 0x41150d26 in js::RunScript (cx=0x46e49b00, script=<value optimized out>, fp=0x42a38038) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:326\n#14 0x41152046 in InvokeKernel (cx=0x46e49b00, thisv=..., fval=..., argc=<value optimized out>, argv=0xbe9402d0, rval=0xbe940410)\n    at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:381\n#15 Invoke (cx=0x46e49b00, thisv=..., fval=..., argc=<value optimized out>, argv=0xbe9402d0, rval=0xbe940410) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.h:109\n#16 Invoke (cx=0x46e49b00, thisv=..., fval=..., argc=<value optimized out>, argv=0xbe9402d0, rval=0xbe940410) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:414\n#17 0x410f0bc6 in JS_CallFunctionValue (cx=0x46e49b00, objArg=<value optimized out>, fval=..., argc=1, argv=0xbe9402d0, rval=0xbe940410)\n    at /Users/gal/workspace/B2G/gecko/js/src/jsapi.cpp:5758\n#18 0x40c2ec70 in nsXPCWrappedJSClass::CallMethod (this=0x46e2b880, wrapper=<value optimized out>, methodIndex=<value optimized out>, info_=0x425b6928, \n    nativeParams=0xbe9404d0) at /Users/gal/workspace/B2G/gecko/js/xpconnect/src/XPCWrappedJSClass.cpp:1432\n#19 0x40c2c3f6 in nsXPCWrappedJS::CallMethod (this=0x475bae00, methodIndex=3, info=0x425b6928, params=<value optimized out>)\n    at /Users/gal/workspace/B2G/gecko/js/xpconnect/src/XPCWrappedJS.cpp:580\n#20 0x40ecc624 in PrepareAndDispatch (self=0x47b72e40, methodIndex=<value optimized out>, args=0xbe94058c)\n    at /Users/gal/workspace/B2G/gecko/xpcom/reflect/xptcall/src/md/unix/xptcstubs_arm.cpp:105\n#21 0x40ecbd8c in SharedStub () from /Users/gal/workspace/B2G/objdir-gecko/dist/bin/libxul.so\n#22 0x40988a8a in nsEventListenerManager::HandleEventSubType (this=<value optimized out>, aListenerStruct=<value optimized out>, aListener=0x47b72e40, aDOMEvent=0x46e931f0, \n    aCurrentTarget=0x40379480, aPhaseFlags=6, aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventListenerManager.cpp:893\n#23 0x40988bc2 in nsEventListenerManager::HandleEventInternal (this=0x482be1f0, aPresContext=<value optimized out>, aEvent=0x475ce280, aDOMEvent=0xbe9406c0, \n    aCurrentTarget=0x40379480, aFlags=6, aEventStatus=0xbe9406c4, aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventListenerManager.cpp:966\n#24 0x40998064 in nsEventListenerManager::HandleEvent (this=<value optimized out>, aVisitor=<value optimized out>, aFlags=6, \n---Type <return> to continue, or q <return> to quit---\n    aMayHaveNewListenerManagers=<value optimized out>, aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventListenerManager.h:153\n#25 nsEventTargetChainItem::HandleEvent (this=<value optimized out>, aVisitor=<value optimized out>, aFlags=6, aMayHaveNewListenerManagers=<value optimized out>, \n    aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:184\n#26 0x40998150 in nsEventTargetChainItem::HandleEventTargetChain (this=<value optimized out>, aVisitor=..., aFlags=6, aCallback=0x0, aMayHaveNewListenerManagers=false, \n    aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:316\n#27 0x409986d8 in nsEventDispatcher::Dispatch (aTarget=<value optimized out>, aPresContext=0x4aa87000, aEvent=0x475ce280, aDOMEvent=<value optimized out>, \n    aEventStatus=0xbe940750, aCallback=0x0, aTargets=0x0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:634\n#28 0x409988d0 in nsEventDispatcher::DispatchDOMEvent (aTarget=0x40379480, aEvent=0x475ce280, aDOMEvent=0x46e931f0, aPresContext=0x4aa87000, aEventStatus=0xbe940750)\n    at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:694\n#29 0x4093e930 in nsINode::DispatchEvent (this=0x40379480, aEvent=0x46e931f0, aRetVal=0xbe94078f) at /Users/gal/workspace/B2G/gecko/content/base/src/nsINode.cpp:1086\n(More stack frames follow...)\n(gdb)", "time": "2012-11-22T18:34:47Z", "bug_id": 711819, "tags": [], "creation_time": "2012-11-22T18:34:47Z", "author": "gal@uci.edu", "raw_text": "wow, ok, no wonder this is slow:\n\n(gdb) bt 30\n#0  mozilla::gfx::ConvertYCbCrToRGB32 (\n    y_buf=0x4316401c \"\\033\\033\\033\\033\\033\\033\\033\\033\", '\\034' <repeats 14 times>, \"\\035\\035\\035\\035\", '\\036' <repeats 28 times>, \"\\037\\037\\037\\037    \\037\\037\\037\\037\", '\\036' <repeats 33 times>, \"\\034\\033\\032\\032\\032\\032\\032\\032\\032\\032\\032\\033\\033\\034\\034\\035\\033\\032\\031\\031\\031\\031\\031\\031\\031\\031\\031\\032\\032\\032\\032\\032\\030\\027\\025\\025\\025\\026\\026\\030\\030\\031\\031\\031\\030\\027\\026\\025\\022\\021\\020\\020\\016\\r\\017\\024\\027\\031\\033\\036!$&''''()+,---,+**))()*++++,-/01100000023\"..., \n    u_buf=0x4319c41c '\\177' <repeats 103 times>, \"~\\200\\205\\214\\225\\230\\230\\230\\221\\204\\203\\201\", '\\177' <repeats 11 times>, \"~zuss\", 't' <repeats 45 times>, \"uuvwxxxxxxxyyzz{{||{{z\"..., \n    v_buf=0x431aa51crepeats 15 times>\"\\200, \\200\\201\\201\\202\\203\\204\\205\\205\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\206\\205\\205\\204\\204\\203\\203\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\\202\"..., rgb_buf=0x4c501000 \"\", pic_x=0, pic_y=0, pic_width=640, pic_height=360, \n    y_pitch=640, uv_pitch=320, rgb_pitch=2560, yuv_type=mozilla::gfx::YV12) at /Users/gal/workspace/B2G/gecko/gfx/ycbcr/yuv_convert.cpp:62\n#1  0x40f17ee4 in gfxUtils::ConvertYCbCrToRGB (aData=..., aDestFormat=@0xbe93f91c, aDestSize=<value optimized out>, aDestBuffer=0x4c501000 \"\", aStride=2560)\n    at /Users/gal/workspace/B2G/gecko/gfx/thebes/gfxUtils.cpp:772\n#2  0x40f27ec4 in mozilla::layers::PlanarYCbCrImage::GetAsSurface (this=0x469d2690) at /Users/gal/workspace/B2G/gecko/gfx/layers/ImageContainer.cpp:502\n#3  0x40f40a64 in mozilla::layers::SharedPlanarYCbCrImage::GetAsSurface (this=0x4316401c) at /Users/gal/workspace/B2G/gecko/gfx/layers/ipc/ImageContainerChild.cpp:495\n#4  0x40f284da in mozilla::layers::ImageContainer::GetCurrentAsSurface (this=0x46f23940, aSize=0xbe93f970) at /Users/gal/workspace/B2G/gecko/gfx/layers/ImageContainer.cpp:323\n#5  0x40813fb8 in nsLayoutUtils::SurfaceFromElement (aElement=0x40379480, aSurfaceFlags=<value optimized out>)\n    at /Users/gal/workspace/B2G/gecko/layout/base/nsLayoutUtils.cpp:4490\n#6  0x40e8026e in mozilla::WebGLContext::SurfaceFromElement<nsHTMLVideoElement> (cx=0x46e49b00, obj=<value optimized out>, self=0x439a5980, argc=<value optimized out>, \n    vp=0x42a38128) at /Users/gal/workspace/B2G/gecko/content/canvas/src/WebGLContext.h:1289\n#7  mozilla::WebGLContext::TexImage2D<nsHTMLVideoElement> (cx=0x46e49b00, obj=<value optimized out>, self=0x439a5980, argc=<value optimized out>, vp=0x42a38128)\n    at /Users/gal/workspace/B2G/gecko/content/canvas/src/WebGLContext.h:863\n#8  texImage2D (cx=0x46e49b00, obj=<value optimized out>, self=0x439a5980, argc=<value optimized out>, vp=0x42a38128)\n    at /Users/gal/workspace/B2G/objdir-gecko/dom/bindings/WebGLRenderingContextBinding.cpp:7238\n#9  0x40e83872 in genericMethod (cx=0x46e49b00, argc=6, vp=0x42a38128) at /Users/gal/workspace/B2G/objdir-gecko/dom/bindings/WebGLRenderingContextBinding.cpp:9625\n#10 0x41151466 in CallJSNative (cx=0x46e49b00, args=..., construct=js::NO_CONSTRUCT) at /Users/gal/workspace/B2G/gecko/js/src/jscntxtinlines.h:364\n#11 InvokeKernel (cx=0x46e49b00, args=..., construct=js::NO_CONSTRUCT) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:369\n#12 0x4114e518 in js::Interpret (cx=0x46e49b00, entryFrame=<value optimized out>, interpMode=<value optimized out>) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:2331\n#13 0x41150d26 in js::RunScript (cx=0x46e49b00, script=<value optimized out>, fp=0x42a38038) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:326\n#14 0x41152046 in InvokeKernel (cx=0x46e49b00, thisv=..., fval=..., argc=<value optimized out>, argv=0xbe9402d0, rval=0xbe940410)\n    at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:381\n#15 Invoke (cx=0x46e49b00, thisv=..., fval=..., argc=<value optimized out>, argv=0xbe9402d0, rval=0xbe940410) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.h:109\n#16 Invoke (cx=0x46e49b00, thisv=..., fval=..., argc=<value optimized out>, argv=0xbe9402d0, rval=0xbe940410) at /Users/gal/workspace/B2G/gecko/js/src/jsinterp.cpp:414\n#17 0x410f0bc6 in JS_CallFunctionValue (cx=0x46e49b00, objArg=<value optimized out>, fval=..., argc=1, argv=0xbe9402d0, rval=0xbe940410)\n    at /Users/gal/workspace/B2G/gecko/js/src/jsapi.cpp:5758\n#18 0x40c2ec70 in nsXPCWrappedJSClass::CallMethod (this=0x46e2b880, wrapper=<value optimized out>, methodIndex=<value optimized out>, info_=0x425b6928, \n    nativeParams=0xbe9404d0) at /Users/gal/workspace/B2G/gecko/js/xpconnect/src/XPCWrappedJSClass.cpp:1432\n#19 0x40c2c3f6 in nsXPCWrappedJS::CallMethod (this=0x475bae00, methodIndex=3, info=0x425b6928, params=<value optimized out>)\n    at /Users/gal/workspace/B2G/gecko/js/xpconnect/src/XPCWrappedJS.cpp:580\n#20 0x40ecc624 in PrepareAndDispatch (self=0x47b72e40, methodIndex=<value optimized out>, args=0xbe94058c)\n    at /Users/gal/workspace/B2G/gecko/xpcom/reflect/xptcall/src/md/unix/xptcstubs_arm.cpp:105\n#21 0x40ecbd8c in SharedStub () from /Users/gal/workspace/B2G/objdir-gecko/dist/bin/libxul.so\n#22 0x40988a8a in nsEventListenerManager::HandleEventSubType (this=<value optimized out>, aListenerStruct=<value optimized out>, aListener=0x47b72e40, aDOMEvent=0x46e931f0, \n    aCurrentTarget=0x40379480, aPhaseFlags=6, aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventListenerManager.cpp:893\n#23 0x40988bc2 in nsEventListenerManager::HandleEventInternal (this=0x482be1f0, aPresContext=<value optimized out>, aEvent=0x475ce280, aDOMEvent=0xbe9406c0, \n    aCurrentTarget=0x40379480, aFlags=6, aEventStatus=0xbe9406c4, aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventListenerManager.cpp:966\n#24 0x40998064 in nsEventListenerManager::HandleEvent (this=<value optimized out>, aVisitor=<value optimized out>, aFlags=6, \n---Type <return> to continue, or q <return> to quit---\n    aMayHaveNewListenerManagers=<value optimized out>, aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventListenerManager.h:153\n#25 nsEventTargetChainItem::HandleEvent (this=<value optimized out>, aVisitor=<value optimized out>, aFlags=6, aMayHaveNewListenerManagers=<value optimized out>, \n    aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:184\n#26 0x40998150 in nsEventTargetChainItem::HandleEventTargetChain (this=<value optimized out>, aVisitor=..., aFlags=6, aCallback=0x0, aMayHaveNewListenerManagers=false, \n    aPusher=0xbe9406d0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:316\n#27 0x409986d8 in nsEventDispatcher::Dispatch (aTarget=<value optimized out>, aPresContext=0x4aa87000, aEvent=0x475ce280, aDOMEvent=<value optimized out>, \n    aEventStatus=0xbe940750, aCallback=0x0, aTargets=0x0) at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:634\n#28 0x409988d0 in nsEventDispatcher::DispatchDOMEvent (aTarget=0x40379480, aEvent=0x475ce280, aDOMEvent=0x46e931f0, aPresContext=0x4aa87000, aEventStatus=0xbe940750)\n    at /Users/gal/workspace/B2G/gecko/content/events/src/nsEventDispatcher.cpp:694\n#29 0x4093e930 in nsINode::DispatchEvent (this=0x40379480, aEvent=0x46e931f0, aRetVal=0xbe94078f) at /Users/gal/workspace/B2G/gecko/content/base/src/nsINode.cpp:1086\n(More stack frames follow...)\n(gdb)", "attachment_id": null, "id": 6846117}, {"raw_text": "This is going to need texture streaming from webgl to be really fast. I hear thats close. James, want to try the patch bug 716859? It should avoid the CPU path altogether.", "attachment_id": null, "id": 6846122, "creator": "gal@uci.edu", "is_private": false, "tags": [], "time": "2012-11-22T18:38:39Z", "text": "This is going to need texture streaming from webgl to be really fast. I hear thats close. James, want to try the patch bug 716859? It should avoid the CPU path altogether.", "author": "gal@uci.edu", "creation_time": "2012-11-22T18:38:39Z", "count": 12, "bug_id": 711819}, {"id": 6846130, "raw_text": "Actually, no, the way the example works here, there will be still a CPU conversion. I will see if I can make the actual cubevid code smarter.", "attachment_id": null, "time": "2012-11-22T18:42:48Z", "tags": [], "bug_id": 711819, "text": "Actually, no, the way the example works here, there will be still a CPU conversion. I will see if I can make the actual cubevid code smarter.", "author": "gal@uci.edu", "creation_time": "2012-11-22T18:42:48Z", "count": 13, "creator": "gal@uci.edu", "is_private": false}, {"id": 6846133, "attachment_id": null, "raw_text": "Alright, we will need both patches. The texture streaming will avoid the CPU readback in WebGL and buy us some performance, and canvas will keep hitting the CPU path here for the time being.", "author": "gal@uci.edu", "creation_time": "2012-11-22T18:44:40Z", "tags": [], "time": "2012-11-22T18:44:40Z", "bug_id": 711819, "text": "Alright, we will need both patches. The texture streaming will avoid the CPU readback in WebGL and buy us some performance, and canvas will keep hitting the CPU path here for the time being.", "creator": "gal@uci.edu", "is_private": false, "count": 14}, {"attachment_id": 684409, "raw_text": "I am going to redo this patch a bit.", "id": 6846252, "creator": "gal@uci.edu", "is_private": false, "count": 15, "author": "gal@uci.edu", "creation_time": "2012-11-22T19:46:55Z", "tags": [], "bug_id": 711819, "time": "2012-11-22T19:46:55Z", "text": "Comment on attachment 684409\nPatch\n\nI am going to redo this patch a bit."}, {"id": 6846323, "raw_text": "(In reply to Andreas Gal :gal from comment #12)\n> This is going to need texture streaming from webgl to be really fast. I hear\n> thats close. James, want to try the patch bug 716859? It should avoid the\n> CPU path altogether.\n\nI don't think that patch will get you anything -- it doesn't (observabily, afaik) modify anything other than WebGL itself, and for B2G it effectively does the same thing it does today (for now -- it sets up the stage for something smarter).\n\nAlso, to texture from a video frame to webgl, you have to convert it to RGB -- we have no native YUV textures in WebGL, and we have no way to upload the raw YCbCr values to a texture (as we'd need two or three textures to do it, since the Cb/Cr channels are likely to be smaller than Y).  So every time you do a texImage2D from a video file, you will hit ConvertYCbCrToRGB32 during the upload.", "attachment_id": null, "tags": [], "time": "2012-11-22T20:22:40Z", "bug_id": 711819, "text": "(In reply to Andreas Gal :gal from comment #12)\n> This is going to need texture streaming from webgl to be really fast. I hear\n> thats close. James, want to try the patch bug 716859? It should avoid the\n> CPU path altogether.\n\nI don't think that patch will get you anything -- it doesn't (observabily, afaik) modify anything other than WebGL itself, and for B2G it effectively does the same thing it does today (for now -- it sets up the stage for something smarter).\n\nAlso, to texture from a video frame to webgl, you have to convert it to RGB -- we have no native YUV textures in WebGL, and we have no way to upload the raw YCbCr values to a texture (as we'd need two or three textures to do it, since the Cb/Cr channels are likely to be smaller than Y).  So every time you do a texImage2D from a video file, you will hit ConvertYCbCrToRGB32 during the upload.", "author": "vladimir@pobox.com", "creation_time": "2012-11-22T20:22:40Z", "count": 16, "creator": "vladimir@pobox.com", "is_private": false}, {"attachment_id": null, "raw_text": "If the video is being decoded with the Gonk hardware decoder, the video frame will be a GonkIOSurfaceImage, which can be used as a texture directly (see ImageLayerOGL::RenderLayer). So can't we just make texImage2D copy from that texture to the destination texture? (Bonus points if we can somehow make texImage2D rebind to the GonkIOSurfaceImage texture directly without copying.)", "id": 6846450, "is_private": false, "creator": "roc@ocallahan.org", "count": 17, "creation_time": "2012-11-22T21:34:38Z", "author": "roc@ocallahan.org", "text": "If the video is being decoded with the Gonk hardware decoder, the video frame will be a GonkIOSurfaceImage, which can be used as a texture directly (see ImageLayerOGL::RenderLayer). So can't we just make texImage2D copy from that texture to the destination texture? (Bonus points if we can somehow make texImage2D rebind to the GonkIOSurfaceImage texture directly without copying.)", "bug_id": 711819, "tags": [], "time": "2012-11-22T21:34:38Z"}, {"author": "gal@uci.edu", "creation_time": "2012-11-22T21:39:36Z", "tags": [], "time": "2012-11-22T21:39:36Z", "bug_id": 711819, "text": "<3 comment 17. Even without that we get rid of the read back. Agree on CPU path. The patch needs a supports_neon. Please steal if you can. Until comment 17 we should land this.", "creator": "gal@uci.edu", "is_private": false, "count": 18, "id": 6846459, "attachment_id": null, "raw_text": "<3 comment 17. Even without that we get rid of the read back. Agree on CPU path. The patch needs a supports_neon. Please steal if you can. Until comment 17 we should land this."}, {"bug_id": 711819, "count": 19, "text": "We could avoid webgl and use CSS if I could play the same source into multiple video elements without decoding multiple times.", "tags": [], "time": "2012-11-22T21:43:10Z", "creation_time": "2012-11-22T21:43:10Z", "author": "gal@uci.edu", "is_private": false, "creator": "gal@uci.edu", "id": 6846461, "raw_text": "We could avoid webgl and use CSS if I could play the same source into multiple video elements without decoding multiple times.", "attachment_id": null}, {"is_private": false, "creator": "roc@ocallahan.org", "text": "(In reply to Andreas Gal :gal from comment #19)\n> We could avoid webgl and use CSS if I could play the same source into\n> multiple video elements without decoding multiple times.\n\nYou should be able to do that using MediaStreams, e.g.\nvideo2.mozSrcObject = video1.mozCaptureStream();", "tags": [], "time": "2012-11-22T21:47:53Z", "creation_time": "2012-11-22T21:47:53Z", "author": "roc@ocallahan.org", "raw_text": "(In reply to Andreas Gal :gal from comment #19)\n> We could avoid webgl and use CSS if I could play the same source into\n> multiple video elements without decoding multiple times.\n\nYou should be able to do that using MediaStreams, e.g.\nvideo2.mozSrcObject = video1.mozCaptureStream();", "attachment_id": null, "id": 6846467, "count": 20, "bug_id": 711819}, {"is_private": false, "creator": "roc@ocallahan.org", "creation_time": "2012-11-22T22:04:32Z", "author": "roc@ocallahan.org", "text": "I filed bug 814524 for comment #17.", "tags": [], "time": "2012-11-22T22:04:32Z", "attachment_id": null, "raw_text": "I filed bug 814524 for comment #17.", "id": 6846488, "count": 21, "bug_id": 711819}, {"author": "gal@uci.edu", "creation_time": "2012-11-23T02:13:42Z", "time": "2012-11-23T02:13:42Z", "tags": [], "text": "Can I do it for playback?", "creator": "gal@uci.edu", "is_private": false, "id": 6846795, "attachment_id": null, "raw_text": "Can I do it for playback?", "bug_id": 711819, "count": 22}, {"id": 6846825, "attachment_id": null, "raw_text": "Not sure what you mean.\n\nThis demo works on desktop: http://people.mozilla.org/~roc/multi_stream.html\nDoesn't seem to work on my Android phone though. Maybe OOM.", "author": "roc@ocallahan.org", "creation_time": "2012-11-23T02:36:10Z", "tags": [], "time": "2012-11-23T02:36:10Z", "text": "Not sure what you mean.\n\nThis demo works on desktop: http://people.mozilla.org/~roc/multi_stream.html\nDoesn't seem to work on my Android phone though. Maybe OOM.", "creator": "roc@ocallahan.org", "is_private": false, "bug_id": 711819, "count": 23}, {"count": 25, "creator": "james.zhang@spreadtrum.com", "is_private": false, "time": "2012-11-23T02:42:21Z", "bug_id": 711819, "tags": [], "text": "Created attachment 684559\nCLContext patch\n\nCLContext patch, which avoids readback data from GPU in Disable out-of-process case. It can share image memory cross-thread.", "author": "james.zhang@spreadtrum.com", "creation_time": "2012-11-23T02:42:21Z", "raw_text": "CLContext patch, which avoids readback data from GPU in Disable out-of-process case. It can share image memory cross-thread.", "attachment_id": 684559, "id": 6846871}, {"creator": "james.zhang@spreadtrum.com", "is_private": false, "author": "james.zhang@spreadtrum.com", "creation_time": "2012-11-23T03:26:35Z", "time": "2012-11-23T03:26:35Z", "tags": [], "text": "WEBGL_dynamic_texture is the most optimized solution to display video stream in 3D scene. But it rely on some low level extensions, including EGL_KHR_stream, EGL_KHR_stream_consumer_gltexture and GL_NV_EGL_stream_consumer_external. As I know, ARM/Mali will support it next year.", "attachment_id": null, "raw_text": "WEBGL_dynamic_texture is the most optimized solution to display video stream in 3D scene. But it rely on some low level extensions, including EGL_KHR_stream, EGL_KHR_stream_consumer_gltexture and GL_NV_EGL_stream_consumer_external. As I know, ARM/Mali will support it next year.", "id": 6846915, "count": 26, "bug_id": 711819}, {"id": 6847582, "attachment_id": 684665, "raw_text": "", "creation_time": "2012-11-23T12:40:53Z", "author": "gal@uci.edu", "text": "Created attachment 684665\nupdated patch", "bug_id": 711819, "time": "2012-11-23T12:40:53Z", "tags": [], "is_private": false, "creator": "gal@uci.edu", "count": 27}, {"creation_time": "2012-11-23T12:42:49Z", "author": "gal@uci.edu", "text": "comment 23: roc, thats exactly what I need. Thanks.", "tags": [], "time": "2012-11-23T12:42:49Z", "bug_id": 711819, "is_private": false, "creator": "gal@uci.edu", "count": 28, "id": 6847586, "attachment_id": null, "raw_text": "comment 23: roc, thats exactly what I need. Thanks."}, {"is_private": false, "creator": "gal@uci.edu", "count": 29, "creation_time": "2012-11-23T13:13:02Z", "author": "gal@uci.edu", "text": "Created attachment 684676\nupdated patch", "tags": [], "time": "2012-11-23T13:13:02Z", "bug_id": 711819, "attachment_id": 684676, "raw_text": "", "id": 6847642}, {"text": "One review will do. Whoever gets up first.", "time": "2012-11-23T13:14:28Z", "tags": [], "creation_time": "2012-11-23T13:14:28Z", "author": "gal@uci.edu", "is_private": false, "creator": "gal@uci.edu", "id": 6847648, "raw_text": "One review will do. Whoever gets up first.", "attachment_id": null, "bug_id": 711819, "count": 30}, {"tags": [], "time": "2012-11-23T17:48:15Z", "text": "I attached a CSS version of cubevid to bug 814737.", "author": "gal@uci.edu", "creation_time": "2012-11-23T17:48:15Z", "creator": "gal@uci.edu", "is_private": false, "id": 6848126, "raw_text": "I attached a CSS version of cubevid to bug 814737.", "attachment_id": null, "bug_id": 711819, "count": 31}, {"id": 6848372, "attachment_id": 684676, "raw_text": "Review of attachment 684676:\n-----------------------------------------------------------------\n\nI'm not the right person to review this", "creation_time": "2012-11-23T20:26:30Z", "author": "roc@ocallahan.org", "text": "Comment on attachment 684676\nupdated patch\n\nReview of attachment 684676:\n-----------------------------------------------------------------\n\nI'm not the right person to review this", "bug_id": 711819, "time": "2012-11-23T20:26:30Z", "tags": [], "is_private": false, "creator": "roc@ocallahan.org", "count": 32}, {"bug_id": 711819, "tags": [], "time": "2012-11-24T01:10:20Z", "text": "Comment on attachment 684676\nupdated patch\n\nI defer to tim on this. My knowledge of neon is zero.", "author": "cajbir.bugzilla@cd.pn", "creation_time": "2012-11-24T01:10:20Z", "count": 33, "creator": "cajbir.bugzilla@cd.pn", "is_private": false, "id": 6848751, "raw_text": "I defer to tim on this. My knowledge of neon is zero.", "attachment_id": 684676}, {"count": 34, "bug_id": 711819, "creator": "tterribe@vt.edu", "is_private": false, "tags": [], "time": "2012-11-25T02:53:48Z", "text": "Comment on attachment 684676\nupdated patch\n\nReview of attachment 684676:\n-----------------------------------------------------------------\n\nThis needs some work.\n\nIn the future, please generate patches with at least 8 lines of context (-U8).\n\n::: gfx/ycbcr/Makefile.in\n@@ +24,5 @@\n>            ycbcr_to_rgb565.cpp \\\n>            $(NULL)\n>  \n> +ifdef HAVE_ARM_NEON\n> +SSRCS += yuv2rgb8888_neon.S\n\nYou should add this in the same section as yuv_row_arm.s. There's no reason to handle both files differently.\n\n@@ +93,5 @@\n>  endif\n>  endif\n> +\n> +ifdef HAVE_ARM_NEON\n> +yuv2rgb8888_neon.$(OBJ_SUFFIX): COMPILE_CFLAGS += $(ARM_NEON_CFLAGS)\n\nSo, this doesn't work. With this current patch on Android -mfpu=neon does not show up on the compile line and I get\n\n/home/derf/src/android/mozilla-central/gfx/ycbcr/yuv_convert.cpp:93: undefined reference to `yuv420_2_rgb8888_neon'\n/home/derf/src/android/mozilla-central/gfx/ycbcr/yuv_convert.cpp:97: undefined reference to `yuv422_2_rgb8888_neon'\n\nYou should use explicit directives in the .S file. See below.\n\n::: gfx/ycbcr/yuv2rgb8888_neon.S\n@@ +1,3 @@\n> +// Copyright (c) 2011 ARM Limited. All rights reserved.\n> +// Use of this source code is governed by a BSD-style license that can be\n> +// found in the LICENSE file.\n\nDo we need to update license.html for this? Where is the LICENSE file?\n\n@@ +1,4 @@\n> +// Copyright (c) 2011 ARM Limited. All rights reserved.\n> +// Use of this source code is governed by a BSD-style license that can be\n> +// found in the LICENSE file.\n> +\n\nIn order for this to work with NEON detection, you need the following directives:\n\n.arch armv7-a\n.fpu  neon\n.object_arch armv4t\n\nThe last one is important for producing an executable which can run on all architectures. See gfx/ycbcr/yuv_row_arm.s for an example.\n\n@@ +1,5 @@\n> +// Copyright (c) 2011 ARM Limited. All rights reserved.\n> +// Use of this source code is governed by a BSD-style license that can be\n> +// found in the LICENSE file.\n> +\n> +#ifdef __ARM_NEON__\n\nThis doesn't get defined without -mfpu=neon, which you aren't using correctly (see above).\n\n@@ +98,5 @@\n> +                               const uint8_t *y_ptr,\n> +                               const uint8_t *u_ptr,\n> +                               const uint8_t *v_ptr,\n> +                               int            width,\n> +                               int            height); */\n\nThis prototype is incorrect.\n\n@@ +109,5 @@\n> +    /*  <> = height */\n> +    /*  <> = y_pitch */\n> +    /*  <> = uv_pitch */\n> +    /*  <> = rgb_pitch */\n> +    .fnstart\n\nThere are a bunch of opportunities to shave a few cycles off in various places in this function. I assume that that is not the priority here.\n\n@@ +310,5 @@\n> +        BGT             loop_v_420\n> +\n> +        VPOP            {q4-q7}\n> +        POP             {r4-r12, pc}\n> +        .fnend\n\nPlease include a .size directive so that gdb/valgrind etc., can identify this function on the callstack.\n\n@@ +464,5 @@\n> +        BGT             loop_v_422\n> +\n> +        VPOP            {q4-q7}\n> +        POP             {r4-r12, pc}\n> +        .fnend\n\nPlease include a .size directive so that gdb/valgrind etc., can identify this function on the callstack.\n\n@@ +466,5 @@\n> +        VPOP            {q4-q7}\n> +        POP             {r4-r12, pc}\n> +        .fnend\n> +\n> +#endif /* __ARM_NEON__ */\n\nYou need to include an ELF directive to indicate that this object does not require an executable stack in order to keep the linker from accidentally marking the stack executable for the entire program. See bug 752293 for an example.\n\n::: gfx/ycbcr/yuv_convert.cpp\n@@ +44,5 @@\n> +\t\t      int height,\n> +\t\t      int y_pitch,\n> +\t\t      int uv_pitch,\n> +\t\t      int rgb_pitch);\n> +#endif /* MOZILLA_MAY_SUPPORT_MMX */\n\nThis comment is wrong.\n\n@@ +88,5 @@\n> +#ifdef MOZILLA_MAY_SUPPORT_NEON\n> +  if (supports_neon()) {\n> +    switch (yuv_type) {\n> +    case YV12:\n> +      yuv420_2_rgb8888_neon(rgb_buf, y_buf, u_buf, v_buf, pic_width, pic_height,\n\nThis function does not support pic_width<16 and is also incorrect if either pic_width or pic_height is odd. You need to detect those cases and fall back to the C version here (or fix the function to work correctly in these cases).\n\n@@ +92,5 @@\n> +      yuv420_2_rgb8888_neon(rgb_buf, y_buf, u_buf, v_buf, pic_width, pic_height,\n> +                            y_pitch, uv_pitch, rgb_pitch);\n> +      return;\n> +    case YV16:\n> +      yuv422_2_rgb8888_neon(rgb_buf, y_buf, u_buf, v_buf, pic_width, pic_height,\n\nThis function does not support pic_width<16 and is also incorrect if pic_width is odd. You need to detect those cases and fall back to the C version here (or fix the function to work correctly in these cases).", "author": "tterribe@vt.edu", "creation_time": "2012-11-25T02:53:48Z", "raw_text": "Review of attachment 684676:\n-----------------------------------------------------------------\n\nThis needs some work.\n\nIn the future, please generate patches with at least 8 lines of context (-U8).\n\n::: gfx/ycbcr/Makefile.in\n@@ +24,5 @@\n>            ycbcr_to_rgb565.cpp \\\n>            $(NULL)\n>  \n> +ifdef HAVE_ARM_NEON\n> +SSRCS += yuv2rgb8888_neon.S\n\nYou should add this in the same section as yuv_row_arm.s. There's no reason to handle both files differently.\n\n@@ +93,5 @@\n>  endif\n>  endif\n> +\n> +ifdef HAVE_ARM_NEON\n> +yuv2rgb8888_neon.$(OBJ_SUFFIX): COMPILE_CFLAGS += $(ARM_NEON_CFLAGS)\n\nSo, this doesn't work. With this current patch on Android -mfpu=neon does not show up on the compile line and I get\n\n/home/derf/src/android/mozilla-central/gfx/ycbcr/yuv_convert.cpp:93: undefined reference to `yuv420_2_rgb8888_neon'\n/home/derf/src/android/mozilla-central/gfx/ycbcr/yuv_convert.cpp:97: undefined reference to `yuv422_2_rgb8888_neon'\n\nYou should use explicit directives in the .S file. See below.\n\n::: gfx/ycbcr/yuv2rgb8888_neon.S\n@@ +1,3 @@\n> +// Copyright (c) 2011 ARM Limited. All rights reserved.\n> +// Use of this source code is governed by a BSD-style license that can be\n> +// found in the LICENSE file.\n\nDo we need to update license.html for this? Where is the LICENSE file?\n\n@@ +1,4 @@\n> +// Copyright (c) 2011 ARM Limited. All rights reserved.\n> +// Use of this source code is governed by a BSD-style license that can be\n> +// found in the LICENSE file.\n> +\n\nIn order for this to work with NEON detection, you need the following directives:\n\n.arch armv7-a\n.fpu  neon\n.object_arch armv4t\n\nThe last one is important for producing an executable which can run on all architectures. See gfx/ycbcr/yuv_row_arm.s for an example.\n\n@@ +1,5 @@\n> +// Copyright (c) 2011 ARM Limited. All rights reserved.\n> +// Use of this source code is governed by a BSD-style license that can be\n> +// found in the LICENSE file.\n> +\n> +#ifdef __ARM_NEON__\n\nThis doesn't get defined without -mfpu=neon, which you aren't using correctly (see above).\n\n@@ +98,5 @@\n> +                               const uint8_t *y_ptr,\n> +                               const uint8_t *u_ptr,\n> +                               const uint8_t *v_ptr,\n> +                               int            width,\n> +                               int            height); */\n\nThis prototype is incorrect.\n\n@@ +109,5 @@\n> +    /*  <> = height */\n> +    /*  <> = y_pitch */\n> +    /*  <> = uv_pitch */\n> +    /*  <> = rgb_pitch */\n> +    .fnstart\n\nThere are a bunch of opportunities to shave a few cycles off in various places in this function. I assume that that is not the priority here.\n\n@@ +310,5 @@\n> +        BGT             loop_v_420\n> +\n> +        VPOP            {q4-q7}\n> +        POP             {r4-r12, pc}\n> +        .fnend\n\nPlease include a .size directive so that gdb/valgrind etc., can identify this function on the callstack.\n\n@@ +464,5 @@\n> +        BGT             loop_v_422\n> +\n> +        VPOP            {q4-q7}\n> +        POP             {r4-r12, pc}\n> +        .fnend\n\nPlease include a .size directive so that gdb/valgrind etc., can identify this function on the callstack.\n\n@@ +466,5 @@\n> +        VPOP            {q4-q7}\n> +        POP             {r4-r12, pc}\n> +        .fnend\n> +\n> +#endif /* __ARM_NEON__ */\n\nYou need to include an ELF directive to indicate that this object does not require an executable stack in order to keep the linker from accidentally marking the stack executable for the entire program. See bug 752293 for an example.\n\n::: gfx/ycbcr/yuv_convert.cpp\n@@ +44,5 @@\n> +\t\t      int height,\n> +\t\t      int y_pitch,\n> +\t\t      int uv_pitch,\n> +\t\t      int rgb_pitch);\n> +#endif /* MOZILLA_MAY_SUPPORT_MMX */\n\nThis comment is wrong.\n\n@@ +88,5 @@\n> +#ifdef MOZILLA_MAY_SUPPORT_NEON\n> +  if (supports_neon()) {\n> +    switch (yuv_type) {\n> +    case YV12:\n> +      yuv420_2_rgb8888_neon(rgb_buf, y_buf, u_buf, v_buf, pic_width, pic_height,\n\nThis function does not support pic_width<16 and is also incorrect if either pic_width or pic_height is odd. You need to detect those cases and fall back to the C version here (or fix the function to work correctly in these cases).\n\n@@ +92,5 @@\n> +      yuv420_2_rgb8888_neon(rgb_buf, y_buf, u_buf, v_buf, pic_width, pic_height,\n> +                            y_pitch, uv_pitch, rgb_pitch);\n> +      return;\n> +    case YV16:\n> +      yuv422_2_rgb8888_neon(rgb_buf, y_buf, u_buf, v_buf, pic_width, pic_height,\n\nThis function does not support pic_width<16 and is also incorrect if pic_width is odd. You need to detect those cases and fall back to the C version here (or fix the function to work correctly in these cases).", "attachment_id": 684676, "id": 6849602}, {"id": 6870136, "attachment_id": null, "raw_text": "Not sure why this was nominated but we can't block on it.", "author": "overholt@mozilla.com", "creation_time": "2012-11-30T22:05:10Z", "tags": [], "time": "2012-11-30T22:05:10Z", "bug_id": 711819, "text": "Not sure why this was nominated but we can't block on it.", "creator": "overholt@mozilla.com", "is_private": false, "count": 35}]}}, "comments": {}}