{"bugs": {"651346": {"comments": [{"count": 0, "author": "dhtmlkitchen@gmail.com", "time": "2011-04-20T05:05:56Z", "is_private": false, "id": 5420549, "creator": "dhtmlkitchen@gmail.com", "raw_text": "Automatic Semicolon Insertion causes problems when Program, then a semicolon is automatically inserted at the end of the input stream.  \n\nProductions that are not restricted can be created accidentally where ASI has been used. This is often the result of where the developer forgot to use a semicolon. Regardless, the problems it creates can occur when the order of Statements changes or when line terminators are added or removed, including those that appear in comments. Where semicolons are needed, it is recommended that they appear explicitly. \n\nSo, for starters, warn against ASI at the end of a file. This won't correct for mistakes where order of statements is rearranged; only when files are concatenated. \n\nFor example, file a.js:\n\n| var MyWidget = function(){\n|   this.name = \"mike\";\n| }\n\nASI occurs at the end of the file. A warning should be issued in that case (at least, for starters).", "attachment_id": null, "tags": [], "creation_time": "2011-04-20T05:05:56Z", "text": "Automatic Semicolon Insertion causes problems when Program, then a semicolon is automatically inserted at the end of the input stream.  \n\nProductions that are not restricted can be created accidentally where ASI has been used. This is often the result of where the developer forgot to use a semicolon. Regardless, the problems it creates can occur when the order of Statements changes or when line terminators are added or removed, including those that appear in comments. Where semicolons are needed, it is recommended that they appear explicitly. \n\nSo, for starters, warn against ASI at the end of a file. This won't correct for mistakes where order of statements is rearranged; only when files are concatenated. \n\nFor example, file a.js:\n\n| var MyWidget = function(){\n|   this.name = \"mike\";\n| }\n\nASI occurs at the end of the file. A warning should be issued in that case (at least, for starters).", "bug_id": 651346}, {"count": 1, "time": "2011-04-20T07:12:27Z", "text": "Without a semicolon ending the function assignment errors can result when b.js is appended to a.js (b.js could contain any valid js). A warning would help prevent these errors.", "creator": "michael@ratcliffefamily.org", "raw_text": "Without a semicolon ending the function assignment errors can result when b.js is appended to a.js (b.js could contain any valid js). A warning would help prevent these errors.", "id": 5420734, "author": "michael@ratcliffefamily.org", "is_private": false, "bug_id": 651346, "attachment_id": null, "creation_time": "2011-04-20T07:12:27Z", "tags": []}, {"count": 2, "author": "david.herman@gmail.com", "time": "2011-04-20T08:41:11Z", "is_private": false, "id": 5420799, "creator": "david.herman@gmail.com", "raw_text": "I'm confused why this would be something we should warn against in the browser. Isn't this only a hazard in offline build processes based on script concatenation? If a page contains multiple <script> tags, it's not going to treat them as one concatenated Program production, right?\n\nAlso, should this be filed under Core|JavaScript Engine instead?\n\nDave", "attachment_id": null, "creation_time": "2011-04-20T08:41:11Z", "tags": [], "text": "I'm confused why this would be something we should warn against in the browser. Isn't this only a hazard in offline build processes based on script concatenation? If a page contains multiple <script> tags, it's not going to treat them as one concatenated Program production, right?\n\nAlso, should this be filed under Core|JavaScript Engine instead?\n\nDave", "bug_id": 651346}, {"count": 3, "time": "2011-04-20T16:14:54Z", "author": "dhtmlkitchen@gmail.com", "is_private": false, "id": 5421401, "creator": "dhtmlkitchen@gmail.com", "raw_text": "Warning in the browser for ASI could help find a missing semicolong when developers develop a script tag independently. When that script is then build to a concatenated script, there's no changed behavior.", "attachment_id": null, "tags": [], "creation_time": "2011-04-20T16:14:54Z", "text": "Warning in the browser for ASI could help find a missing semicolong when developers develop a script tag independently. When that script is then build to a concatenated script, there's no changed behavior.", "bug_id": 651346}]}}, "comments": {}}