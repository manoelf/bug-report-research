{"comments": {}, "bugs": {"695592": {"comments": [{"raw_text": "I haven't profiled it yet, but my guess is that it's JS", "attachment_id": null, "id": 5791096, "count": 0, "is_private": false, "creator": "jmuizelaar@mozilla.com", "text": "I haven't profiled it yet, but my guess is that it's JS", "time": "2011-10-19T03:21:43Z", "bug_id": 695592, "tags": [], "creation_time": "2011-10-19T03:21:43Z", "author": "jmuizelaar@mozilla.com"}, {"creator": "jmuizelaar@mozilla.com", "is_private": false, "count": 1, "author": "jmuizelaar@mozilla.com", "creation_time": "2011-10-19T03:30:20Z", "time": "2011-10-19T03:30:20Z", "tags": [], "bug_id": 695592, "text": "The source for the slow one is at: https://github.com/adrianbg/n22d/commit/c8d171d3cc964bfb1f270b057532221289f0b61f\n\nThe hottest pieces are:\n531.0ms    3.4%\t \tjs::mjit::stubs::FixupArity(js::VMFrame&, unsigned int)\n424.0ms    2.7%\t \tCallCompiler::generateNativeStub()\n396.0ms    2.5%\t \tbool js::gc::Arena::finalize<JSObject>(JSContext*, js::gc::AllocKind, unsigned long)", "attachment_id": null, "raw_text": "The source for the slow one is at: https://github.com/adrianbg/n22d/commit/c8d171d3cc964bfb1f270b057532221289f0b61f\n\nThe hottest pieces are:\n531.0ms    3.4%\t \tjs::mjit::stubs::FixupArity(js::VMFrame&, unsigned int)\n424.0ms    2.7%\t \tCallCompiler::generateNativeStub()\n396.0ms    2.5%\t \tbool js::gc::Arena::finalize<JSObject>(JSContext*, js::gc::AllocKind, unsigned long)", "id": 5791107}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-10-19T17:17:57Z", "tags": [], "time": "2011-10-19T17:17:57Z", "text": "Assuming I did the git magic right to check out the right thing....\n\nLooks like 42% of the time is methodjit generated code, 7% is under array_slice, another 5% doing generateNativeStub stuff around the array_slice.  This is all under the NativeCall ic.\n\n8% under array_extra, half of this calling back into JS.  5% allocating arrays directly from jitcode.  Lots of stubcalls (FixupArity, CreateThis, GetElem, StrictEq, Arguments, FlatLambda).\n\n2% actual mjit compilation via TryCompile.\n\nAll those percentages are of total time, not main thread time.  Main thread is about 92% of total; the remainder looks like the GC finalization thread, almost all self time in FinalizeArenas.", "creator": "bzbarsky@mit.edu", "is_private": false, "id": 5792266, "attachment_id": null, "raw_text": "Assuming I did the git magic right to check out the right thing....\n\nLooks like 42% of the time is methodjit generated code, 7% is under array_slice, another 5% doing generateNativeStub stuff around the array_slice.  This is all under the NativeCall ic.\n\n8% under array_extra, half of this calling back into JS.  5% allocating arrays directly from jitcode.  Lots of stubcalls (FixupArity, CreateThis, GetElem, StrictEq, Arguments, FlatLambda).\n\n2% actual mjit compilation via TryCompile.\n\nAll those percentages are of total time, not main thread time.  Main thread is about 92% of total; the remainder looks like the GC finalization thread, almost all self time in FinalizeArenas.", "bug_id": 695592, "count": 2}]}}}