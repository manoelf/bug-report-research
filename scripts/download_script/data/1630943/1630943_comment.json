{"comments": {}, "bugs": {"1630943": {"comments": [{"id": 14761354, "text": "The following works fine with Thunderbird 68, but fails with Thunderbird 77 nightly.\n\nI'm using the simple \"radicale\" server.\nI have a private calendar with private credentials.\nI have a second, shared calendar, with shared credentials.\n\nAdding the first calendar works fine, regardless which one I choose.\n\nWhen adding the second calendar, the configuration is accepted, but there's NO prompt for the second username.\nAfter creation, the second calendar is shown with a disabled state.\nIt can manually enabled, but it doesn't work.\n\nError console reports:\nLightning: [calCachedCalendar] replay action failed: <unknown>, uri={calendar-url}, result=2147500037, operation=[xpconnect wrapped calIOperation] 2 calCachedCalendar.js:346\n\nI have created two test calendars that I can share privately with a developer who wants to work on this issue.", "attachment_id": null, "creator": "kaie@kuix.de", "creation_time": "2020-04-17T12:46:01Z", "count": 0, "is_private": false, "bug_id": 1630943, "tags": [], "author": "kaie@kuix.de", "time": "2020-04-17T12:46:01Z", "raw_text": "The following works fine with Thunderbird 68, but fails with Thunderbird 77 nightly.\n\nI'm using the simple \"radicale\" server.\nI have a private calendar with private credentials.\nI have a second, shared calendar, with shared credentials.\n\nAdding the first calendar works fine, regardless which one I choose.\n\nWhen adding the second calendar, the configuration is accepted, but there's NO prompt for the second username.\nAfter creation, the second calendar is shown with a disabled state.\nIt can manually enabled, but it doesn't work.\n\nError console reports:\nLightning: [calCachedCalendar] replay action failed: <unknown>, uri={calendar-url}, result=2147500037, operation=[xpconnect wrapped calIOperation] 2 calCachedCalendar.js:346\n\nI have created two test calendars that I can share privately with a developer who wants to work on this issue."}, {"author": "mkmelin+mozilla@iki.fi", "tags": [], "bug_id": 1630943, "count": 1, "is_private": false, "raw_text": "Any idea when it broke?", "time": "2020-04-17T13:40:50Z", "text": "Any idea when it broke?", "id": 14761448, "creation_time": "2020-04-17T13:40:50Z", "attachment_id": null, "creator": "mkmelin+mozilla@iki.fi"}, {"raw_text": "(In reply to Magnus Melin [:mkmelin] from comment #1)\n> Any idea when it broke?\n\nNo. I could try to find out, by testing every beta version between 69 and 77.", "time": "2020-04-17T14:41:52Z", "author": "kaie@kuix.de", "tags": [], "bug_id": 1630943, "is_private": false, "count": 2, "creation_time": "2020-04-17T14:41:52Z", "creator": "kaie@kuix.de", "attachment_id": null, "id": 14761592, "text": "(In reply to Magnus Melin [:mkmelin] from comment #1)\n> Any idea when it broke?\n\nNo. I could try to find out, by testing every beta version between 69 and 77."}, {"is_private": false, "count": 3, "bug_id": 1630943, "tags": [], "author": "kaie@kuix.de", "time": "2020-04-17T14:43:23Z", "raw_text": "Philipp pointed me to the calendar.network.multirealm pref. If I set it to true, and recreate the calendars, it works fine.\n\nAll radicale calendar URL of a deployment are identical.\n\nApparently TB 68 didn't have an issue with them being identical.", "text": "Philipp pointed me to the calendar.network.multirealm pref. If I set it to true, and recreate the calendars, it works fine.\n\nAll radicale calendar URL of a deployment are identical.\n\nApparently TB 68 didn't have an issue with them being identical.", "id": 14761596, "attachment_id": null, "creator": "kaie@kuix.de", "creation_time": "2020-04-17T14:43:23Z"}, {"raw_text": "It broke in 77.\n\nI used a profile created with tb 68, then started all beta versions after it.\nAll versions up to and including 76.0b1 still worked fine, they displayed both calendars.\n\nBut starting 77.0a1 (nightly) fails. The second calendar is grayed out / disabled, and its entries are no longer shown.", "time": "2020-04-17T15:23:46Z", "author": "kaie@kuix.de", "tags": [], "bug_id": 1630943, "count": 4, "is_private": false, "creation_time": "2020-04-17T15:23:46Z", "creator": "kaie@kuix.de", "attachment_id": null, "id": 14761688, "text": "It broke in 77.\n\nI used a profile created with tb 68, then started all beta versions after it.\nAll versions up to and including 76.0b1 still worked fine, they displayed both calendars.\n\nBut starting 77.0a1 (nightly) fails. The second calendar is grayed out / disabled, and its entries are no longer shown."}, {"time": "2020-04-17T15:51:25Z", "raw_text": "For bug 1546606 perhaps?", "tags": [], "bug_id": 1630943, "count": 5, "is_private": false, "author": "mkmelin+mozilla@iki.fi", "attachment_id": null, "creator": "mkmelin+mozilla@iki.fi", "creation_time": "2020-04-17T15:51:25Z", "id": 14761749, "text": "For bug 1546606 perhaps?"}, {"count": 6, "is_private": false, "bug_id": 1630943, "tags": [], "author": "paul@paulwmorris.com", "time": "2020-04-17T21:15:27Z", "raw_text": "I took a look using the test calendars and was able to reproduce this and get a stack trace (below).  I'm out of time today, but will try again on Monday.  It does look like fallout from bug 1546606.\n\nEdit: the following log is from doing a `console.trace()` right before the `cal.ERROR(\"[calCachedCalendar] replay action failed: \"` in calCachedCalendar.js (which is the error Kai mentioned at the top of this bug).\n\n    calCachedCalendar.js:346:23\n    onResult resource:///components/calCachedCalendar.js:346\n    completeCheckServerInfo resource:///modules/CalDavCalendar.jsm:1872\n    checkDavResourceType resource:///modules/CalDavCalendar.jsm:1474\n    (Async: promise callback)\n    checkDavResourceType resource:///modules/CalDavCalendar.jsm:1458\n    replayChangesOn resource:///modules/CalDavCalendar.jsm:235\n    synchronize resource:///components/calCachedCalendar.js:363\n    downstreamRefresh resource:///components/calCachedCalendar.js:716\n    popItemQueue resource:///components/calCachedCalendar.js:616\n    onOperationComplete resource:///components/calCachedCalendar.js:658\n    notifyPureOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:515\n    notifyOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:534\n    getItems resource:///modules/CalStorageCalendar.jsm:838\n    playbackOfflineItems resource:///components/calCachedCalendar.js:663\n    popItemQueue resource:///components/calCachedCalendar.js:616\n    onOperationComplete resource:///components/calCachedCalendar.js:658\n    notifyPureOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:515\n    notifyOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:534\n    getItems resource:///modules/CalStorageCalendar.jsm:838\n    playbackOfflineItems resource:///components/calCachedCalendar.js:663\n    popItemQueue resource:///components/calCachedCalendar.js:616\n    onOperationComplete resource:///components/calCachedCalendar.js:658\n    notifyPureOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:515\n    notifyOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:534\n    getItems resource:///modules/CalStorageCalendar.jsm:838\n    playbackOfflineItems resource:///components/calCachedCalendar.js:663\n    refresh resource:///components/calCachedCalendar.js:707\n    registerCalendar resource:///modules/CalCalendarManager.jsm:265\n    doCreateCalendar chrome://calendar/content/calendarCreation.js:248\n    doCreateCalendar chrome://lightning/content/lightning-calendar-creation.js:20\n    doCreateCalendar chrome://lightning/content/caldav-lightning-calendar-creation.js:18\n    _fireEvent chrome://global/content/elements/wizard.js:483\n    advance chrome://global/content/elements/wizard.js:292\n    listeners chrome://global/content/elements/wizard.js:535\n    (Async: EventListener.handleEvent)\n    connectedCallback chrome://global/content/elements/wizard.js:544\n    (Async: LifecycleConnectedCallback)\n    <anonymous> chrome://global/content/elements/wizard.js:668\n    <anonymous> chrome://global/content/customElements.js:839\n    <anonymous> chrome://global/content/customElements.js:862\n    observe resource://gre/modules/CustomElementsListener.jsm:24", "text": "I took a look using the test calendars and was able to reproduce this and get a stack trace (below).  I'm out of time today, but will try again on Monday.  It does look like fallout from bug 1546606.\n\nEdit: the following log is from doing a `console.trace()` right before the `cal.ERROR(\"[calCachedCalendar] replay action failed: \"` in calCachedCalendar.js (which is the error Kai mentioned at the top of this bug).\n\n    calCachedCalendar.js:346:23\n    onResult resource:///components/calCachedCalendar.js:346\n    completeCheckServerInfo resource:///modules/CalDavCalendar.jsm:1872\n    checkDavResourceType resource:///modules/CalDavCalendar.jsm:1474\n    (Async: promise callback)\n    checkDavResourceType resource:///modules/CalDavCalendar.jsm:1458\n    replayChangesOn resource:///modules/CalDavCalendar.jsm:235\n    synchronize resource:///components/calCachedCalendar.js:363\n    downstreamRefresh resource:///components/calCachedCalendar.js:716\n    popItemQueue resource:///components/calCachedCalendar.js:616\n    onOperationComplete resource:///components/calCachedCalendar.js:658\n    notifyPureOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:515\n    notifyOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:534\n    getItems resource:///modules/CalStorageCalendar.jsm:838\n    playbackOfflineItems resource:///components/calCachedCalendar.js:663\n    popItemQueue resource:///components/calCachedCalendar.js:616\n    onOperationComplete resource:///components/calCachedCalendar.js:658\n    notifyPureOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:515\n    notifyOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:534\n    getItems resource:///modules/CalStorageCalendar.jsm:838\n    playbackOfflineItems resource:///components/calCachedCalendar.js:663\n    popItemQueue resource:///components/calCachedCalendar.js:616\n    onOperationComplete resource:///components/calCachedCalendar.js:658\n    notifyPureOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:515\n    notifyOperationComplete resource:///modules/calendar/utils/calProviderUtils.jsm:534\n    getItems resource:///modules/CalStorageCalendar.jsm:838\n    playbackOfflineItems resource:///components/calCachedCalendar.js:663\n    refresh resource:///components/calCachedCalendar.js:707\n    registerCalendar resource:///modules/CalCalendarManager.jsm:265\n    doCreateCalendar chrome://calendar/content/calendarCreation.js:248\n    doCreateCalendar chrome://lightning/content/lightning-calendar-creation.js:20\n    doCreateCalendar chrome://lightning/content/caldav-lightning-calendar-creation.js:18\n    _fireEvent chrome://global/content/elements/wizard.js:483\n    advance chrome://global/content/elements/wizard.js:292\n    listeners chrome://global/content/elements/wizard.js:535\n    (Async: EventListener.handleEvent)\n    connectedCallback chrome://global/content/elements/wizard.js:544\n    (Async: LifecycleConnectedCallback)\n    <anonymous> chrome://global/content/elements/wizard.js:668\n    <anonymous> chrome://global/content/customElements.js:839\n    <anonymous> chrome://global/content/customElements.js:862\n    observe resource://gre/modules/CustomElementsListener.jsm:24", "id": 14762507, "creator": "paul@paulwmorris.com", "attachment_id": null, "creation_time": "2020-04-17T21:15:27Z"}, {"id": 14770390, "text": "Created attachment 9142199\npart1-fix-multiple-caldav-calendars-0.patch\n\n1 of 2.  We were passing a caldav request object to `prepHttpChannel` when it needed a calendar object.  Type checking would have come in handy here.", "creation_time": "2020-04-21T22:14:59Z", "attachment_id": 9142199, "creator": "paul@paulwmorris.com", "author": "paul@paulwmorris.com", "tags": [], "bug_id": 1630943, "count": 7, "is_private": false, "raw_text": "1 of 2.  We were passing a caldav request object to `prepHttpChannel` when it needed a calendar object.  Type checking would have come in handy here.", "time": "2020-04-21T22:14:59Z"}, {"time": "2020-04-21T22:15:51Z", "raw_text": "2 of 2: Clean up some comments while we're here.", "bug_id": 1630943, "tags": [], "is_private": false, "count": 8, "author": "paul@paulwmorris.com", "attachment_id": 9142201, "creator": "paul@paulwmorris.com", "creation_time": "2020-04-21T22:15:51Z", "text": "Created attachment 9142201\npart2-clean-up-comments-0.patch\n\n2 of 2: Clean up some comments while we're here.", "id": 14770393}, {"time": "2020-04-21T22:22:03Z", "raw_text": "Part1 revised.  There was another instance of the same problem.", "bug_id": 1630943, "tags": [], "is_private": false, "count": 9, "author": "paul@paulwmorris.com", "creator": "paul@paulwmorris.com", "attachment_id": 9142202, "creation_time": "2020-04-21T22:22:03Z", "id": 14770409, "text": "Created attachment 9142202\npart1-fix-multiple-caldav-calendars-1.patch\n\nPart1 revised.  There was another instance of the same problem."}, {"text": "Comment on attachment 9142202\npart1-fix-multiple-caldav-calendars-1.patch\n\nReview of attachment 9142202:\n-----------------------------------------------------------------\n\nDoes this mean the usage in CalICSCalendar.jsm is also wrong? A quick look makes me think it is. The jsdoc on prepHttpChannel could probably be improved too (at least mentioning calICalendar would be good).", "id": 14770759, "creation_time": "2020-04-22T03:53:10Z", "creator": "geoff@thunderbird.net", "attachment_id": 9142202, "author": "geoff@thunderbird.net", "count": 10, "is_private": false, "tags": [], "bug_id": 1630943, "raw_text": "Review of attachment 9142202:\n-----------------------------------------------------------------\n\nDoes this mean the usage in CalICSCalendar.jsm is also wrong? A quick look makes me think it is. The jsdoc on prepHttpChannel could probably be improved too (at least mentioning calICalendar would be good).", "time": "2020-04-22T03:53:10Z"}, {"bug_id": 1630943, "tags": [], "is_private": false, "count": 11, "author": "paul@paulwmorris.com", "time": "2020-04-22T15:49:05Z", "raw_text": "(In reply to Geoff Lankow (:darktrojan) from comment #10)\n> Does this mean the usage in CalICSCalendar.jsm is also wrong? A quick look\n> makes me think it is. \n\nAh, good catch. I did look at that but mistook `this` as a `CalICSCalendar` when it was merely an `httpHooks`.  Fixed.\n\n> The jsdoc on prepHttpChannel could probably be\n> improved too (at least mentioning calICalendar would be good).\n\nI worked on it a bit.  (I wish we documented our JSDoc conventions, particularly how to format long param descriptions that need to wrap.  The JSDoc docs are no help on that.  This was discussed some [here](https://bugzilla.mozilla.org/show_bug.cgi?id=1546606#c33) with no conclusion reached.  In this case I wanted to avoid the narrow column of text on the right so I went with the style that does that.)\n\nEdit: try run: https://treeherder.mozilla.org/#/jobs?repo=try-comm-central&revision=434c7510fdb453cb2ec3cb48313e53c0e50279ca", "id": 14771979, "text": "Created attachment 9142449\npart1-fix-multiple-caldav-calendars-2.patch\n\n(In reply to Geoff Lankow (:darktrojan) from comment #10)\n> Does this mean the usage in CalICSCalendar.jsm is also wrong? A quick look\n> makes me think it is. \n\nAh, good catch. I did look at that but mistook `this` as a `CalICSCalendar` when it was merely an `httpHooks`.  Fixed.\n\n> The jsdoc on prepHttpChannel could probably be\n> improved too (at least mentioning calICalendar would be good).\n\nI worked on it a bit.  (I wish we documented our JSDoc conventions, particularly how to format long param descriptions that need to wrap.  The JSDoc docs are no help on that.  This was discussed some [here](https://bugzilla.mozilla.org/show_bug.cgi?id=1546606#c33) with no conclusion reached.  In this case I wanted to avoid the narrow column of text on the right so I went with the style that does that.)\n\nEdit: try run: https://treeherder.mozilla.org/#/jobs?repo=try-comm-central&revision=434c7510fdb453cb2ec3cb48313e53c0e50279ca", "creator": "paul@paulwmorris.com", "attachment_id": 9142449, "creation_time": "2020-04-22T15:49:05Z"}, {"time": "2020-04-27T19:42:55Z", "raw_text": "The try run turned up some failing tests.  I've been working on getting them to pass, but the problem and solution are eluding me.  \n\nI've added some things to the gMockCalendar so more of it is mocked, and that solved a few errors.\n\nThe failures are related to server redirect not happening fully and/or correctly.  Around line 90 of CalDavRequest.jsm, if you change the \"this.calendar\" back to \"this\" (which is not correct), then the tests pass.  So I've used the Firefox remote debugger to step through the code, with both \"this.calendar\" and \"this\" there, and cannot find where things are going wrong.  With `this` the `asyncOnChannelRedirect` function in CalDavRequest.jsm gets called (somewhere, somehow), whereas with `this.calendar` it does not.\n\nIt seems odd that changes involving the calendar associated with a channel are causing problems with redirects.\n\nPhilipp, can you take a look when you have a chance?  I am stumped.", "count": 12, "is_private": false, "tags": [], "bug_id": 1630943, "author": "paul@paulwmorris.com", "creator": "paul@paulwmorris.com", "attachment_id": 9143778, "creation_time": "2020-04-27T19:42:55Z", "id": 14782400, "text": "Created attachment 9143778\npart3-wip-get-tests-to-pass-0.patch\n\nThe try run turned up some failing tests.  I've been working on getting them to pass, but the problem and solution are eluding me.  \n\nI've added some things to the gMockCalendar so more of it is mocked, and that solved a few errors.\n\nThe failures are related to server redirect not happening fully and/or correctly.  Around line 90 of CalDavRequest.jsm, if you change the \"this.calendar\" back to \"this\" (which is not correct), then the tests pass.  So I've used the Firefox remote debugger to step through the code, with both \"this.calendar\" and \"this\" there, and cannot find where things are going wrong.  With `this` the `asyncOnChannelRedirect` function in CalDavRequest.jsm gets called (somewhere, somehow), whereas with `this.calendar` it does not.\n\nIt seems odd that changes involving the calendar associated with a channel are causing problems with redirects.\n\nPhilipp, can you take a look when you have a chance?  I am stumped."}, {"bug_id": 1630943, "tags": ["typo"], "count": 13, "is_private": false, "author": "philipp@bugzilla.kewis.ch", "text": "Comment on attachment 9143778\npart3-wip-get-tests-to-pass-0.patch\n\n.", "id": 14825292, "time": "2020-05-16T12:06:31Z", "attachment_id": 9143778, "creator": "philipp@bugzilla.kewis.ch", "creation_time": "2020-05-16T12:06:31Z", "raw_text": "."}, {"creation_time": "2020-05-16T12:07:23Z", "raw_text": " In order for `asyncOnChannelRedirect` to be called, the network code will look at `httpchannel.notificationCallbacks`, QI that to `nsIInterfaceRequestor`, call `.getInterface(Ci.nsIChannelEventSink)` on that, and then call `asyncOnChannelRedirect` on the result.\n\nThe old code assumed that the calendar was always the notification callback, hence `prepHttpChannel` will first make it look like it needs a calendar, and then later pass it to `httpchannel.notificationCallbacks`. The new code refactors that a bit, so that `CalDavRequestBase` is supposed to be the notification callback, but the calendar is separate.\n\nWhat you'll need to do is change [calProviderUtils line 49](https://searchfox.org/comm-central/rev/2006bce43f7350f93c37e18a136e149f9a7ffb6c/calendar/base/modules/utils/calProviderUtils.jsm#49) to not assume that it can be QI'd to a calICalendar. You could for example do `let calendar = aNotifcationCallbacks.getInterface(Ci.calICalendar)` instead. Then you need to actually pass `this` instead of `this.calendar` in the `reset()` method, so you are actually passing the `nsIInteraceRequestor` instead of the `calICalendar`.", "time": "2020-05-16T12:07:23Z", "attachment_id": null, "creator": "philipp@bugzilla.kewis.ch", "author": "philipp@bugzilla.kewis.ch", "id": 14825293, "text": " In order for `asyncOnChannelRedirect` to be called, the network code will look at `httpchannel.notificationCallbacks`, QI that to `nsIInterfaceRequestor`, call `.getInterface(Ci.nsIChannelEventSink)` on that, and then call `asyncOnChannelRedirect` on the result.\n\nThe old code assumed that the calendar was always the notification callback, hence `prepHttpChannel` will first make it look like it needs a calendar, and then later pass it to `httpchannel.notificationCallbacks`. The new code refactors that a bit, so that `CalDavRequestBase` is supposed to be the notification callback, but the calendar is separate.\n\nWhat you'll need to do is change [calProviderUtils line 49](https://searchfox.org/comm-central/rev/2006bce43f7350f93c37e18a136e149f9a7ffb6c/calendar/base/modules/utils/calProviderUtils.jsm#49) to not assume that it can be QI'd to a calICalendar. You could for example do `let calendar = aNotifcationCallbacks.getInterface(Ci.calICalendar)` instead. Then you need to actually pass `this` instead of `this.calendar` in the `reset()` method, so you are actually passing the `nsIInteraceRequestor` instead of the `calICalendar`.", "bug_id": 1630943, "tags": [], "count": 14, "is_private": false}, {"raw_text": "Thanks Philipp for that helpful explanation.  It's working now, tests and all.  Marking all previous patches obsolete and uploading new ones.  This is the first of two.", "time": "2020-05-18T16:02:40Z", "author": "paul@paulwmorris.com", "bug_id": 1630943, "tags": [], "count": 15, "is_private": false, "creation_time": "2020-05-18T16:02:40Z", "attachment_id": 9149888, "creator": "paul@paulwmorris.com", "id": 14828770, "text": "Created attachment 9149888\npart1-clean-up-comments-1.patch\n\nThanks Philipp for that helpful explanation.  It's working now, tests and all.  Marking all previous patches obsolete and uploading new ones.  This is the first of two."}, {"author": "paul@paulwmorris.com", "tags": [], "bug_id": 1630943, "count": 16, "is_private": false, "raw_text": "2 of 2.  This fixes the problem by bringing `prepHttpChannel` into line with the recently refactored caldav code.  I've tested it manually with the test calendars Kai provided, and the caldav xpcshell tests pass locally.  \n\nTry run, just started: https://treeherder.mozilla.org/#/jobs?repo=try-comm-central&revision=236daf552cbe3f4e2931f5129712b571f658b7e8\n\nAside: XPCOM remains more mysterious to me than I'd like.  Here the difference between these two ways of getting a calICalendar from the aNotificationsCallbacks argument is something I'd like to understand better.  Will have to look into it further.\n\nEdit: Here's the difference: https://searchfox.org/mozilla-central/source/xpcom/base/nsIInterfaceRequestor.idl#10-18", "time": "2020-05-18T16:18:23Z", "id": 14828795, "text": "Created attachment 9149890\npart2-fix-multiple-caldav-calendars-3.patch\n\n2 of 2.  This fixes the problem by bringing `prepHttpChannel` into line with the recently refactored caldav code.  I've tested it manually with the test calendars Kai provided, and the caldav xpcshell tests pass locally.  \n\nTry run, just started: https://treeherder.mozilla.org/#/jobs?repo=try-comm-central&revision=236daf552cbe3f4e2931f5129712b571f658b7e8\n\nAside: XPCOM remains more mysterious to me than I'd like.  Here the difference between these two ways of getting a calICalendar from the aNotificationsCallbacks argument is something I'd like to understand better.  Will have to look into it further.\n\nEdit: Here's the difference: https://searchfox.org/mozilla-central/source/xpcom/base/nsIInterfaceRequestor.idl#10-18", "creation_time": "2020-05-18T16:18:23Z", "attachment_id": 9149890, "creator": "paul@paulwmorris.com"}, {"raw_text": "Review of attachment 9149888:\n-----------------------------------------------------------------\n\n::: calendar/providers/caldav/CalDavCalendar.jsm\n@@ +1714,5 @@\n>    },\n>  \n>    /**\n>     * Checks the principals namespace for scheduling info. This function should\n> +   * solely be called from findPrincipalNS\n\n.", "time": "2020-05-18T22:42:20Z", "author": "geoff@thunderbird.net", "count": 17, "is_private": false, "tags": [], "bug_id": 1630943, "creation_time": "2020-05-18T22:42:20Z", "creator": "geoff@thunderbird.net", "attachment_id": 9149888, "id": 14829669, "text": "Comment on attachment 9149888\npart1-clean-up-comments-1.patch\n\nReview of attachment 9149888:\n-----------------------------------------------------------------\n\n::: calendar/providers/caldav/CalDavCalendar.jsm\n@@ +1714,5 @@\n>    },\n>  \n>    /**\n>     * Checks the principals namespace for scheduling info. This function should\n> +   * solely be called from findPrincipalNS\n\n."}, {"tags": [], "bug_id": 1630943, "count": 18, "is_private": false, "author": "pulsebot@bots.tld", "time": "2020-05-19T10:00:16Z", "raw_text": "Pushed by mkmelin@iki.fi:\nhttps://hg.mozilla.org/comm-central/rev/601e259021fb\nClean up some comments. r=darktrojan\nhttps://hg.mozilla.org/comm-central/rev/c827ec349a36\nFix multiple caldav calendars on same host with different usernames. r=darktrojan", "id": 14830294, "text": "Pushed by mkmelin@iki.fi:\nhttps://hg.mozilla.org/comm-central/rev/601e259021fb\nClean up some comments. r=darktrojan\nhttps://hg.mozilla.org/comm-central/rev/c827ec349a36\nFix multiple caldav calendars on same host with different usernames. r=darktrojan", "attachment_id": null, "creator": "pulsebot@bots.tld", "creation_time": "2020-05-19T10:00:16Z"}]}}}