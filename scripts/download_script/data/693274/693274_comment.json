{"comments": {}, "bugs": {"693274": {"comments": [{"count": 0, "bug_id": 693274, "attachment_id": 565898, "raw_text": "If SNI callback function returns a new cert for the same SNI name, \nWhat's happening : SSL session cache returns the older cert by mistake. \nExpected : New Certificates should be returned to the client. \n\nI modified strsclnt to print session id and cert name. \n\nRun server \n$./server 8080\n\nIn another window run client \n$./strsclnt -n rsacert -p 8080  -d sql:. -c 2  -v -o -o -D -s  -2 -3 -B -a \"www.abc.com\" servername\nstrsclnt: Launched thread in slot 0\nSent 21 bytes to server\nstrsclnt: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nstrsclnt: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA\n          Compression: NULL\nstrsclnt: subject DN: CN=cert2\nstrsclnt: issuer  DN: CN=cert2\nstrsclnt: 0 cache hits; 1 cache misses, 0 cache not reusable\n          0 stateless resumes\nstrsclnt: connection on thread 0 read 37 bytes (37 total).\nstrsclnt: connection on thread 0 read 37 bytes total. ---------\nSSL Session id is : 4811222112091692191731291195897183252322510238225121701919223445616419018862131117\nstrsclnt: Thread in slot 0 returned 0\nstrsclnt: Launched thread in slot 1\nSent 21 bytes to server\nstrsclnt: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nstrsclnt: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA\n          Compression: NULL\nstrsclnt: subject DN: CN=cert2\nstrsclnt: issuer  DN: CN=cert2\nstrsclnt: 1 cache hits; 1 cache misses, 0 cache not reusable\n          0 stateless resumes\nstrsclnt: connection on thread 0 read 37 bytes (37 total).\nstrsclnt: connection on thread 0 read 37 bytes total. ---------\nSSL Session id is : 4811222112091692191731291195897183252322510238225121701919223445616419018862131117\nstrsclnt: Thread in slot 0 returned 0\nstrsclnt: 1 cache hits; 1 cache misses, 0 cache not reusable\n          0 stateless resumes\n\nAs you can see above, both the times same cert is returned and SSL session id is the same.\n----------\nMakefile :\nSECURITY_DIR=/path/to/nss-3.12.10/\nall::\n        gcc -g -o strsclnt -I${SECURITY_DIR}/include/ -lnspr4 -lplds4 -lnssutil3 -lnss3 -lssl3 -L${SECURITY_DIR}/lib strsclnt.c\n        gcc -g -o server -I${SECURITY_DIR}/include/ -lnspr4 -lplds4 -lnssutil3 -lnss3 -lssl3 -L${SECURITY_DIR}/lib server.c\n----------------------\ncreate certs as shown below :\n$certutil -N -d sql:.\n$certutil -S -d sql:. -n rsacert  -s \"CN=servername\" -t \"Cu,Cu,Cu\" -x -v 120 -5\n$certutil -S -d sql:. -n cert2  -s \"CN=cert2\" -t \"Cu,Cu,Cu\" -x -v 120 -5\n$certutil -S -d sql:. -n cert3  -s \"CN=cert3\" -t \"Cu,Cu,Cu\" -x -v 120 -5\n--------------------\nAlso attached is server.c and strsclnt.c(modified)", "id": 5771111, "creator": "u238590@disabled.tld", "is_private": false, "author": "u238590@disabled.tld", "creation_time": "2011-10-10T11:37:16Z", "tags": [], "time": "2011-10-10T11:37:16Z", "text": "Created attachment 565898\nTes server program server.c\n\nIf SNI callback function returns a new cert for the same SNI name, \nWhat's happening : SSL session cache returns the older cert by mistake. \nExpected : New Certificates should be returned to the client. \n\nI modified strsclnt to print session id and cert name. \n\nRun server \n$./server 8080\n\nIn another window run client \n$./strsclnt -n rsacert -p 8080  -d sql:. -c 2  -v -o -o -D -s  -2 -3 -B -a \"www.abc.com\" servername\nstrsclnt: Launched thread in slot 0\nSent 21 bytes to server\nstrsclnt: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nstrsclnt: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA\n          Compression: NULL\nstrsclnt: subject DN: CN=cert2\nstrsclnt: issuer  DN: CN=cert2\nstrsclnt: 0 cache hits; 1 cache misses, 0 cache not reusable\n          0 stateless resumes\nstrsclnt: connection on thread 0 read 37 bytes (37 total).\nstrsclnt: connection on thread 0 read 37 bytes total. ---------\nSSL Session id is : 4811222112091692191731291195897183252322510238225121701919223445616419018862131117\nstrsclnt: Thread in slot 0 returned 0\nstrsclnt: Launched thread in slot 1\nSent 21 bytes to server\nstrsclnt: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nstrsclnt: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA\n          Compression: NULL\nstrsclnt: subject DN: CN=cert2\nstrsclnt: issuer  DN: CN=cert2\nstrsclnt: 1 cache hits; 1 cache misses, 0 cache not reusable\n          0 stateless resumes\nstrsclnt: connection on thread 0 read 37 bytes (37 total).\nstrsclnt: connection on thread 0 read 37 bytes total. ---------\nSSL Session id is : 4811222112091692191731291195897183252322510238225121701919223445616419018862131117\nstrsclnt: Thread in slot 0 returned 0\nstrsclnt: 1 cache hits; 1 cache misses, 0 cache not reusable\n          0 stateless resumes\n\nAs you can see above, both the times same cert is returned and SSL session id is the same.\n----------\nMakefile :\nSECURITY_DIR=/path/to/nss-3.12.10/\nall::\n        gcc -g -o strsclnt -I${SECURITY_DIR}/include/ -lnspr4 -lplds4 -lnssutil3 -lnss3 -lssl3 -L${SECURITY_DIR}/lib strsclnt.c\n        gcc -g -o server -I${SECURITY_DIR}/include/ -lnspr4 -lplds4 -lnssutil3 -lnss3 -lssl3 -L${SECURITY_DIR}/lib server.c\n----------------------\ncreate certs as shown below :\n$certutil -N -d sql:.\n$certutil -S -d sql:. -n rsacert  -s \"CN=servername\" -t \"Cu,Cu,Cu\" -x -v 120 -5\n$certutil -S -d sql:. -n cert2  -s \"CN=cert2\" -t \"Cu,Cu,Cu\" -x -v 120 -5\n$certutil -S -d sql:. -n cert3  -s \"CN=cert3\" -t \"Cu,Cu,Cu\" -x -v 120 -5\n--------------------\nAlso attached is server.c and strsclnt.c(modified)"}, {"is_private": false, "creator": "u238590@disabled.tld", "count": 1, "creation_time": "2011-10-10T11:38:30Z", "author": "u238590@disabled.tld", "text": "Created attachment 565899\nModified strsclnt client test program which prints session id and cert name for every connection", "time": "2011-10-10T11:38:30Z", "tags": [], "bug_id": 693274, "attachment_id": 565899, "raw_text": "", "id": 5771113}, {"id": 5771154, "raw_text": "I found one strange problem in this. \n\nIf I sent in strsclnt an option \"-C n\" apart from above options, the first connection gives an error of no cipher overlap but the second connection goes through fine. \n\n1) Why is the first connection giving NO CIPHER OVERLAP error?\nIn strsclnt.c cipher \"n\" is : SSL_RSA_WITH_RC4_128_SHA /* n */ and\nIn server.c I have enabled this cipher :\nSECStatus secStatus = SSL_CipherPrefSetDefault(SSL_RSA_WITH_RC4_128_SHA, PR_TRUE);\n\n2) How can we have the other connection working if there is no cipher overlap ? You can see  SSL session Id being printed.", "attachment_id": null, "tags": [], "time": "2011-10-10T12:09:55Z", "bug_id": 693274, "text": "I found one strange problem in this. \n\nIf I sent in strsclnt an option \"-C n\" apart from above options, the first connection gives an error of no cipher overlap but the second connection goes through fine. \n\n1) Why is the first connection giving NO CIPHER OVERLAP error?\nIn strsclnt.c cipher \"n\" is : SSL_RSA_WITH_RC4_128_SHA /* n */ and\nIn server.c I have enabled this cipher :\nSECStatus secStatus = SSL_CipherPrefSetDefault(SSL_RSA_WITH_RC4_128_SHA, PR_TRUE);\n\n2) How can we have the other connection working if there is no cipher overlap ? You can see  SSL session Id being printed.", "author": "u238590@disabled.tld", "creation_time": "2011-10-10T12:09:55Z", "count": 2, "creator": "u238590@disabled.tld", "is_private": false}, {"id": 5773970, "attachment_id": null, "raw_text": "Ignore my last comment (comment#2) the problem was due to some SNI bug fix patch (in progress).", "author": "u238590@disabled.tld", "creation_time": "2011-10-11T10:39:54Z", "time": "2011-10-11T10:39:54Z", "bug_id": 693274, "tags": [], "text": "Ignore my last comment (comment#2) the problem was due to some SNI bug fix patch (in progress).", "creator": "u238590@disabled.tld", "is_private": false, "count": 3}, {"author": "u238590@disabled.tld", "creation_time": "2011-10-21T06:07:45Z", "tags": [], "time": "2011-10-21T06:07:45Z", "text": "Reply to comment#2 : \nYes, with this patch (in bug # Bug 675876) we are going to have valid cache misses if stress client uses v2 hello for initial connection.\n\nThey are valid, since v2 hello can not carry extensions and therefore server/client can not agree on the name. Next, server does the protocol step up and uses TLS for the rest of the handshake. When HS is done, created session does not have SNI name in it. When next client hello comes, I believe, that client talks using TLS client hello and supplies the name. The initial session get rejected due to miss match of SNI name.\n\nI believe this is valid behavior and stress client need to be adjusted not to use v2 hello.\nAlexei", "creator": "u238590@disabled.tld", "is_private": false, "id": 5796307, "attachment_id": null, "raw_text": "Reply to comment#2 : \nYes, with this patch (in bug # Bug 675876) we are going to have valid cache misses if stress client uses v2 hello for initial connection.\n\nThey are valid, since v2 hello can not carry extensions and therefore server/client can not agree on the name. Next, server does the protocol step up and uses TLS for the rest of the handshake. When HS is done, created session does not have SNI name in it. When next client hello comes, I believe, that client talks using TLS client hello and supplies the name. The initial session get rejected due to miss match of SNI name.\n\nI believe this is valid behavior and stress client need to be adjusted not to use v2 hello.\nAlexei", "bug_id": 693274, "count": 4}, {"id": 5803898, "raw_text": "But Alexei, I tested this, this wasn't fixed by the patch in bug# 675876.\n\nAlso I am sending \"-2\" so it cant be client hello v2 problem.", "attachment_id": null, "tags": [], "time": "2011-10-25T18:32:58Z", "bug_id": 693274, "text": "But Alexei, I tested this, this wasn't fixed by the patch in bug# 675876.\n\nAlso I am sending \"-2\" so it cant be client hello v2 problem.", "author": "u238590@disabled.tld", "creation_time": "2011-10-25T18:32:58Z", "count": 5, "creator": "u238590@disabled.tld", "is_private": false}, {"attachment_id": null, "raw_text": "The description of this bug is inadequate.\n\nThe SSL session cache does not \"return the older cert by mistake\". What happens is that the old session from the SSL session cache is resumed, when it should not be.\n\nI can reproduce the issue even without SNI being involved at all. The server test case can be simplified in the following way :\n1) create two model sockets, with two different certs\n2) in the loop, after PR_Accept, alternate the model sockets in the SSL_ImportFD calls every other time\n\nWhen using strsclnt, it will reuse the same session for all the connections. The server will continue to honor these sessions. No new full handshake is ever performed, so no new cert is sent.\n\nThere are a couple ways this could be resolved :\n\na) hammer approach. Add an API call to NSS to flush the entire server SSL session cache. This is not optimal, but it is simple.\nThere is already a call to flush the client cache, but not the server cache.\n\nb) add extra data into the session entry in the server cache . This might be some sort of hash of all the server socket properties including server cert and all other socket options, at the time the initial handshake is performed.\n\nWhen a restart handshake is performed, the hash would be recomputed, and the server would compare this hash against the hash in the session entry. If it doesn't match, it would not resume the session", "id": 5805312, "is_private": false, "creator": "julien.pierre@oracle.com", "count": 6, "creation_time": "2011-10-26T03:43:14Z", "author": "julien.pierre@oracle.com", "text": "The description of this bug is inadequate.\n\nThe SSL session cache does not \"return the older cert by mistake\". What happens is that the old session from the SSL session cache is resumed, when it should not be.\n\nI can reproduce the issue even without SNI being involved at all. The server test case can be simplified in the following way :\n1) create two model sockets, with two different certs\n2) in the loop, after PR_Accept, alternate the model sockets in the SSL_ImportFD calls every other time\n\nWhen using strsclnt, it will reuse the same session for all the connections. The server will continue to honor these sessions. No new full handshake is ever performed, so no new cert is sent.\n\nThere are a couple ways this could be resolved :\n\na) hammer approach. Add an API call to NSS to flush the entire server SSL session cache. This is not optimal, but it is simple.\nThere is already a call to flush the client cache, but not the server cache.\n\nb) add extra data into the session entry in the server cache . This might be some sort of hash of all the server socket properties including server cert and all other socket options, at the time the initial handshake is performed.\n\nWhen a restart handshake is performed, the hash would be recomputed, and the server would compare this hash against the hash in the session entry. If it doesn't match, it would not resume the session", "time": "2011-10-26T03:43:14Z", "bug_id": 693274, "tags": []}, {"id": 5808519, "attachment_id": null, "raw_text": "This problem I was reporting of getting 0's in the first connection's session id when I use \"-C n\" was also due to the fact that cipher was set in socket and not in sock.\n\nWhen I use this API SSL_CipherPrefSet the problem goes away.\n\nSo please ignore my comments from comment#2 to comment#4.", "creation_time": "2011-10-27T11:11:04Z", "author": "u238590@disabled.tld", "text": "This problem I was reporting of getting 0's in the first connection's session id when I use \"-C n\" was also due to the fact that cipher was set in socket and not in sock.\n\nWhen I use this API SSL_CipherPrefSet the problem goes away.\n\nSo please ignore my comments from comment#2 to comment#4.", "bug_id": 693274, "time": "2011-10-27T11:11:04Z", "tags": [], "is_private": false, "creator": "u238590@disabled.tld", "count": 7}, {"text": "Meena,\nRe: comment 7,\nWhat are \"sock\" and \"socket\" ? And which source are they in ? You need to write more detailed comments.", "bug_id": 693274, "tags": [], "time": "2011-10-27T20:08:50Z", "creation_time": "2011-10-27T20:08:50Z", "author": "julien.pierre@oracle.com", "count": 8, "is_private": false, "creator": "julien.pierre@oracle.com", "id": 5809774, "raw_text": "Meena,\nRe: comment 7,\nWhat are \"sock\" and \"socket\" ? And which source are they in ? You need to write more detailed comments.", "attachment_id": null}, {"id": 5810685, "attachment_id": null, "raw_text": " When I gave \"-C n\" option, the first connection wasn't working and returning 0's in session id but the second connection was working. That puzzled me.\n\nI had used SSL_CipherPrefSetDefault() in my modified strsclnt.c attached in this bug. It configured that cipher for \"new\" sockets but not in the current socket \"sock\" of my test program.\n\nWhen I changed the API to SSL_CipherPrefSet(sock), this problem went away.", "author": "u238590@disabled.tld", "creation_time": "2011-10-28T04:09:55Z", "bug_id": 693274, "tags": [], "time": "2011-10-28T04:09:55Z", "text": " When I gave \"-C n\" option, the first connection wasn't working and returning 0's in session id but the second connection was working. That puzzled me.\n\nI had used SSL_CipherPrefSetDefault() in my modified strsclnt.c attached in this bug. It configured that cipher for \"new\" sockets but not in the current socket \"sock\" of my test program.\n\nWhen I changed the API to SSL_CipherPrefSet(sock), this problem went away.", "creator": "u238590@disabled.tld", "is_private": false, "count": 9}, {"id": 5811114, "raw_text": "Use compile.sh to compile the test programs\nNSS DBs are also included\nREADME has instructions on how to run server and client test programs.", "attachment_id": 570221, "text": "Created attachment 570221\nAttached simpler single threaded server and client test programs\n\nUse compile.sh to compile the test programs\nNSS DBs are also included\nREADME has instructions on how to run server and client test programs.", "bug_id": 693274, "time": "2011-10-28T12:11:22Z", "tags": [], "creation_time": "2011-10-28T12:11:22Z", "author": "u238590@disabled.tld", "count": 10, "is_private": false, "creator": "u238590@disabled.tld"}, {"raw_text": "Initial hash is calculated at socket configuration time. The hash is copied to session cache or session tickets to identify the original cert that was used to establish the connection.\n\nThe fix depends on sni fix for bug 675876 .", "attachment_id": 595072, "id": 6040970, "is_private": false, "creator": "alvolkov.bgs@gmail.com", "text": "Created attachment 595072\nCalculate hash of a server cert and use it to identify an old session\n\nInitial hash is calculated at socket configuration time. The hash is copied to session cache or session tickets to identify the original cert that was used to establish the connection.\n\nThe fix depends on sni fix for bug 675876 .", "time": "2012-02-07T17:54:56Z", "tags": [], "creation_time": "2012-02-07T17:54:56Z", "author": "alvolkov.bgs@gmail.com", "count": 11, "bug_id": 693274}, {"count": 12, "bug_id": 693274, "creator": "alvolkov.bgs@gmail.com", "is_private": false, "tags": [], "time": "2012-02-22T22:40:11Z", "text": "Julien, can you test the final patch see if it works for you. Thanks!", "author": "alvolkov.bgs@gmail.com", "creation_time": "2012-02-22T22:40:11Z", "raw_text": "Julien, can you test the final patch see if it works for you. Thanks!", "attachment_id": null, "id": 6084385}, {"count": 13, "creator": "u238590@disabled.tld", "is_private": false, "bug_id": 693274, "time": "2012-02-23T06:57:58Z", "tags": [], "text": "Here are my testing results :\n\nI checked out : \n $ cvs -q -z3 co -P -r NSPR_4_8_9_RTM mozilla/nsprpub\n $ cvs -q -z3 co -P -r NSS_3_13_1_RTM mozilla/dbm mozilla/security/dbm mozilla/security/coreconf mozilla/security/nss\n $ cvs -q -z3 co -P -r NSS_3_11_1_RTM mozilla/security/nss/lib/freebl/ecl/ecl-curve.h\n\nThis sample program I attached in this bug worked as you can see SSL sesison id in two cases are different :\n\n\n$./client -n rsacert -p 8080 -d sql:. -c 2 -v -a \"www.abc.com\" $HOSTNAME\nclient: Client connected to server. id=0\nclient: In mySSLAuthCertificate : Peer Subject: CN=cert2\n Peer : Issuer : CN=cert2\nSent 25 bytes to server\nclient: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nclient: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA Compression: NULL\nclient: Peer subject DN: CN=cert2\nclient:Peer issuer  DN: CN=cert2\nclient: CACHE: 0 hits; 1 misses, 0 not reusable 0 stateless resumes\nclient: connection 0 read 35 bytes (35 total).\nclient: connection 0 read 35 bytes total. \nSSL Session id is : 692817237253282291911771262331661702521347613625063586524518623824217817062137238123129\nClosing connection 0 \n-----------------------\nclient: Client connected to server. id=1\nclient: In mySSLAuthCertificate : Peer Subject: CN=cert3\n Peer : Issuer : CN=cert3\nSent 25 bytes to server\nclient: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nclient: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA Compression: NULL\nclient: Peer subject DN: CN=cert3\nclient:Peer issuer  DN: CN=cert3\nclient: CACHE: 0 hits; 2 misses, 0 not reusable 0 stateless resumes\nclient: connection 1 read 35 bytes (35 total).\nclient: connection 1 read 35 bytes total. \nSSL Session id is : 692821119921661057020010913212167142113181224162144227552391821822149152153336232144\nClosing connection 1 \n-----------------------\nclient: CACHE: 0 hits; 2 misses, 0 not reusable 0 stateless resumes", "author": "u238590@disabled.tld", "creation_time": "2012-02-23T06:57:58Z", "raw_text": "Here are my testing results :\n\nI checked out : \n $ cvs -q -z3 co -P -r NSPR_4_8_9_RTM mozilla/nsprpub\n $ cvs -q -z3 co -P -r NSS_3_13_1_RTM mozilla/dbm mozilla/security/dbm mozilla/security/coreconf mozilla/security/nss\n $ cvs -q -z3 co -P -r NSS_3_11_1_RTM mozilla/security/nss/lib/freebl/ecl/ecl-curve.h\n\nThis sample program I attached in this bug worked as you can see SSL sesison id in two cases are different :\n\n\n$./client -n rsacert -p 8080 -d sql:. -c 2 -v -a \"www.abc.com\" $HOSTNAME\nclient: Client connected to server. id=0\nclient: In mySSLAuthCertificate : Peer Subject: CN=cert2\n Peer : Issuer : CN=cert2\nSent 25 bytes to server\nclient: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nclient: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA Compression: NULL\nclient: Peer subject DN: CN=cert2\nclient:Peer issuer  DN: CN=cert2\nclient: CACHE: 0 hits; 1 misses, 0 not reusable 0 stateless resumes\nclient: connection 0 read 35 bytes (35 total).\nclient: connection 0 read 35 bytes total. \nSSL Session id is : 692817237253282291911771262331661702521347613625063586524518623824217817062137238123129\nClosing connection 0 \n-----------------------\nclient: Client connected to server. id=1\nclient: In mySSLAuthCertificate : Peer Subject: CN=cert3\n Peer : Issuer : CN=cert3\nSent 25 bytes to server\nclient: SSL version 3.1 using 128-bit RC4 with 128-bit MD5 MAC\nclient: Server Auth: 1024-bit RSA, Key Exchange: 1024-bit RSA Compression: NULL\nclient: Peer subject DN: CN=cert3\nclient:Peer issuer  DN: CN=cert3\nclient: CACHE: 0 hits; 2 misses, 0 not reusable 0 stateless resumes\nclient: connection 1 read 35 bytes (35 total).\nclient: connection 1 read 35 bytes total. \nSSL Session id is : 692821119921661057020010913212167142113181224162144227552391821822149152153336232144\nClosing connection 1 \n-----------------------\nclient: CACHE: 0 hits; 2 misses, 0 not reusable 0 stateless resumes", "attachment_id": null, "id": 6085695}, {"creator": "u238590@disabled.tld", "is_private": false, "tags": [], "time": "2012-08-07T06:34:13Z", "text": "Any updates on code review of this bug?", "author": "u238590@disabled.tld", "creation_time": "2012-08-07T06:34:13Z", "raw_text": "Any updates on code review of this bug?", "attachment_id": null, "id": 6536103, "count": 14, "bug_id": 693274}, {"attachment_id": 595072, "raw_text": "Review of attachment 595072:\n-----------------------------------------------------------------\n\nDropping this review. I'm not as familiar with the server-side stuff as others are.", "id": 9045877, "is_private": false, "creator": "brian@briansmith.org", "count": 15, "creation_time": "2014-07-12T00:25:39Z", "author": "brian@briansmith.org", "text": "Comment on attachment 595072\nCalculate hash of a server cert and use it to identify an old session\n\nReview of attachment 595072:\n-----------------------------------------------------------------\n\nDropping this review. I'm not as familiar with the server-side stuff as others are.", "time": "2014-07-12T00:25:39Z", "tags": [], "bug_id": 693274}]}}}