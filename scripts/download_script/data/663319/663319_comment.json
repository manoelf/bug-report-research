{"bugs": {"663319": {"comments": [{"creator": "brian@briansmith.org", "author": "brian@briansmith.org", "bug_id": 663319, "tags": [], "is_private": false, "count": 0, "id": 5524329, "text": "When we call CERT_PKIXVerifyCert, we should be able to specify which signature algorithms (e.g. ECDSA-P256-SHA256, RSA(1024+)-SHA1-PKCS1) are acceptable. Note that, for the NSA Suite B profile for TLS, we need to be able to specify precise combination of algorithm+curve+hash; we can't say \"ECDSA or RSA, P256 or P384, SHA256 or SHA384\" but instead must say \"ECDSA-P256-SHA256 or ECDSA-P384-SHA384\". Also, because the safety of RSA signatures depends on the length of the hash being signed, some RSA key lengths need to be restricted to shorter hashes. E.g. RSA1024+SHA512 is not a safe combination but RSA1024+SHA1 and RSA1024+SHA256 are.\n\nBecause the rules are likely to be complicated, it might be better to pass in a pointer to a function with the signature (signature algorithm, hash algorithm, public key size, curve ID) -> bool.", "time": "2011-06-10T06:08:35Z", "attachment_id": null, "raw_text": "When we call CERT_PKIXVerifyCert, we should be able to specify which signature algorithms (e.g. ECDSA-P256-SHA256, RSA(1024+)-SHA1-PKCS1) are acceptable. Note that, for the NSA Suite B profile for TLS, we need to be able to specify precise combination of algorithm+curve+hash; we can't say \"ECDSA or RSA, P256 or P384, SHA256 or SHA384\" but instead must say \"ECDSA-P256-SHA256 or ECDSA-P384-SHA384\". Also, because the safety of RSA signatures depends on the length of the hash being signed, some RSA key lengths need to be restricted to shorter hashes. E.g. RSA1024+SHA512 is not a safe combination but RSA1024+SHA1 and RSA1024+SHA256 are.\n\nBecause the rules are likely to be complicated, it might be better to pass in a pointer to a function with the signature (signature algorithm, hash algorithm, public key size, curve ID) -> bool.", "creation_time": "2011-06-10T06:08:35Z"}, {"tags": [], "is_private": false, "count": 1, "id": 5524330, "bug_id": 663319, "raw_text": "Also, passing in a function would allow a caller to specify date-based restrictions (e.g. \"no MD5 after July 1, 2011).", "creation_time": "2011-06-10T06:09:11Z", "text": "Also, passing in a function would allow a caller to specify date-based restrictions (e.g. \"no MD5 after July 1, 2011).", "attachment_id": null, "time": "2011-06-10T06:09:11Z", "creator": "brian@briansmith.org", "author": "brian@briansmith.org"}, {"author": "alexeyc2003@hotmail.com", "creator": "alexeyc2003@hotmail.com", "raw_text": "Brian, should this bug be open still, or has it been resolved after 9 years?\n\nThe function seems to accept a bunch of parameters:\n```\n *  params  - an array of type/value parameters which can be\n *            used to modify the behavior of the validation\n *            algorithm, or supply additional constraints.\n```\nhttps://searchfox.org/mozilla-central/source/security/nss/lib/certhigh/certvfypkix.c#2004\n\nOne of which is:\n```\n    cert_pi_chainVerifyCallback = 13,\n    /* The callback container for doing extra\n     * validation on the currently calculated chain.\n     * Value is in value.pointer.chainVerifyCallback */\n```\nhttps://searchfox.org/mozilla-central/source/security/nss/lib/certdb/certt.h#901\n\nDon't know if the intent of this bug is satisfied though.\n\nAlso don't know if NSS cipher policy applies to cert validations:\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_Config_Options", "creation_time": "2020-08-08T18:00:33Z", "time": "2020-08-08T18:00:33Z", "attachment_id": null, "text": "Brian, should this bug be open still, or has it been resolved after 9 years?\n\nThe function seems to accept a bunch of parameters:\n```\n *  params  - an array of type/value parameters which can be\n *            used to modify the behavior of the validation\n *            algorithm, or supply additional constraints.\n```\nhttps://searchfox.org/mozilla-central/source/security/nss/lib/certhigh/certvfypkix.c#2004\n\nOne of which is:\n```\n    cert_pi_chainVerifyCallback = 13,\n    /* The callback container for doing extra\n     * validation on the currently calculated chain.\n     * Value is in value.pointer.chainVerifyCallback */\n```\nhttps://searchfox.org/mozilla-central/source/security/nss/lib/certdb/certt.h#901\n\nDon't know if the intent of this bug is satisfied though.\n\nAlso don't know if NSS cipher policy applies to cert validations:\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_Config_Options", "id": 14979661, "tags": [], "count": 2, "is_private": false, "bug_id": 663319}, {"creator": "brian@briansmith.org", "author": "brian@briansmith.org", "bug_id": 663319, "is_private": false, "count": 3, "tags": [], "id": 15717669, "text": "> Brian, should this bug be open still, or has it been resolved after 9 years?\n\nIDK, probably neither. If it were me, I'd WONTFIX it.", "time": "2022-01-03T23:01:19Z", "attachment_id": null, "creation_time": "2022-01-03T23:01:19Z", "raw_text": "> Brian, should this bug be open still, or has it been resolved after 9 years?\n\nIDK, probably neither. If it were me, I'd WONTFIX it."}]}}, "comments": {}}