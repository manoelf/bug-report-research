{"comments": {}, "bugs": {"697448": {"comments": [{"tags": [], "text": "User Agent: Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.202 Safari/535.1\n\nSteps to reproduce:\n\nI have recieved a mail with a txt in attachment\n\n\nActual results:\n\nI thunderbird the txt attchement have '=' at the end of the file. \nI have send the same mail to lotus and outlook and nobody see this '='\n\n\nExpected results:\n\nDon't add to attachement the =", "bug_id": 697448, "attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.202 Safari/535.1\n\nSteps to reproduce:\n\nI have recieved a mail with a txt in attachment\n\n\nActual results:\n\nI thunderbird the txt attchement have '=' at the end of the file. \nI have send the same mail to lotus and outlook and nobody see this '='\n\n\nExpected results:\n\nDon't add to attachement the =", "creator": "luca.preziati@gmail.com", "time": "2011-10-26T15:16:57Z", "creation_time": "2011-10-26T15:16:57Z", "author": "luca.preziati@gmail.com", "is_private": false, "id": 5806206, "count": 0}, {"id": 5806214, "count": 1, "is_private": false, "author": "luca.preziati@gmail.com", "time": "2011-10-26T15:19:43Z", "creation_time": "2011-10-26T15:19:43Z", "creator": "luca.preziati@gmail.com", "raw_text": "I can't add as attachment the mail, if you need I can send you the message as confidentionaly.", "attachment_id": null, "tags": [], "text": "I can't add as attachment the mail, if you need I can send you the message as confidentionaly.", "bug_id": 697448}, {"author": "ludovic@hirlimann.net", "creator": "ludovic@hirlimann.net", "time": "2011-10-26T15:31:20Z", "creation_time": "2011-10-26T15:31:20Z", "is_private": false, "id": 5806248, "count": 2, "bug_id": 697448, "text": "if you send it to me make sure top have the bug number somewhere so I know which bug we are talking about.", "tags": [], "raw_text": "if you send it to me make sure top have the bug number somewhere so I know which bug we are talking about.", "attachment_id": null}, {"attachment_id": null, "raw_text": "(In reply to Luca Preziati from comment #1)\n> I can't add as attachment the mail, if you need I can send you the message\n> as confidentionaly.\n\nOk I'm going to disclose technical information about the email - nothing about the content.\n\nX-Mailer: Lotus Notes Release 8.5 December 05, 2008\nContent-type: multipart/mixed; boundary=\"=_mixed 00551CB1C125791E_=\"\n\n--=_mixed 00551CB1C125791E_=\nContent-Type: multipart/alternative; boundary=\"=_alternative 00551CB1C125791E_=\"\n\n--=_alternative 00551CB1C125791E_=\nContent-Transfer-Encoding: 7bit\nContent-Type: text/plain; charset=\"us-ascii\"\n\n--=_alternative 00551CB1C125791E_=\nContent-Transfer-Encoding: 7bit\nContent-Type: text/html; charset=\"us-ascii\"\n\n--=_alternative 00551CB1C125791E_=--\n--=_mixed 00551CB1C125791E_=\nContent-Type: text/plain; name=\"Addebiti_BBS.txt\"\nContent-Disposition: attachment; filename=\"Addebiti_BBS.txt\"\nContent-Transfer-Encoding: quoted-printable\n\n--=_mixed 00551CB1C125791E_=--\n\nAnd just before that line you have an empty line with a single = \n\nTo me it seems the lotus mailer is sending the text file with the extra = and get rids of it when it saves/extracts the file from the email.", "tags": [], "text": "(In reply to Luca Preziati from comment #1)\n> I can't add as attachment the mail, if you need I can send you the message\n> as confidentionaly.\n\nOk I'm going to disclose technical information about the email - nothing about the content.\n\nX-Mailer: Lotus Notes Release 8.5 December 05, 2008\nContent-type: multipart/mixed; boundary=\"=_mixed 00551CB1C125791E_=\"\n\n--=_mixed 00551CB1C125791E_=\nContent-Type: multipart/alternative; boundary=\"=_alternative 00551CB1C125791E_=\"\n\n--=_alternative 00551CB1C125791E_=\nContent-Transfer-Encoding: 7bit\nContent-Type: text/plain; charset=\"us-ascii\"\n\n--=_alternative 00551CB1C125791E_=\nContent-Transfer-Encoding: 7bit\nContent-Type: text/html; charset=\"us-ascii\"\n\n--=_alternative 00551CB1C125791E_=--\n--=_mixed 00551CB1C125791E_=\nContent-Type: text/plain; name=\"Addebiti_BBS.txt\"\nContent-Disposition: attachment; filename=\"Addebiti_BBS.txt\"\nContent-Transfer-Encoding: quoted-printable\n\n--=_mixed 00551CB1C125791E_=--\n\nAnd just before that line you have an empty line with a single = \n\nTo me it seems the lotus mailer is sending the text file with the extra = and get rids of it when it saves/extracts the file from the email.", "bug_id": 697448, "count": 3, "id": 5808390, "is_private": false, "creation_time": "2011-10-27T08:23:55Z", "time": "2011-10-27T08:23:55Z", "creator": "ludovic@hirlimann.net", "author": "ludovic@hirlimann.net"}, {"attachment_id": 591729, "raw_text": "If I save the attachment with Thunderbird 9.0, a trailing equal \"=\" is left at the end of the file.\n\n1234567\n=\n\nThe python quoted-printable decoding result is without the equal:\n\n>>> import quopri\n>>> quopri.decodestring('1234567\\r\\n=')\n'1234567\\r\\n'", "bug_id": 697448, "text": "Created attachment 591729\nsample mail with attachment\n\nIf I save the attachment with Thunderbird 9.0, a trailing equal \"=\" is left at the end of the file.\n\n1234567\n=\n\nThe python quoted-printable decoding result is without the equal:\n\n>>> import quopri\n>>> quopri.decodestring('1234567\\r\\n=')\n'1234567\\r\\n'", "tags": [], "is_private": false, "count": 4, "id": 6010602, "creator": "zegrep@gmail.com", "creation_time": "2012-01-26T10:37:49Z", "time": "2012-01-26T10:37:49Z", "author": "zegrep@gmail.com"}, {"is_private": false, "id": 6282723, "count": 5, "creator": "bugzilla2007@duellmann24.net", "creation_time": "2012-05-05T11:05:35Z", "time": "2012-05-05T11:05:35Z", "author": "bugzilla2007@duellmann24.net", "attachment_id": null, "raw_text": "Luca (reporter), or zegreb (comment 4), can you add detailed Steps to reproduce (STR) for this bug?\n\nThere is an extra = in its own line in test.txt attached to test.eml of attachment 591729, yes - but why should this be a bug of TB? Did TB add the extra = when you attached a txt file with only \"1234567\" as text content?\n\nThis shows the relevant part of the source of tst.eml of attachment 591729:\n\n--=_mixed 0041E91AC125798E_=\nContent-Type: text/plain; name=\"TEST.TXT\"\nContent-Disposition: attachment; filename=\"TEST.TXT\"\nContent-Transfer-Encoding: quoted-printable\n\n1234567\n=\n--=_mixed 0041E91AC125798E_=--\n\nThis looks like wfm per ludo's comment 3.", "tags": [], "bug_id": 697448, "text": "Luca (reporter), or zegreb (comment 4), can you add detailed Steps to reproduce (STR) for this bug?\n\nThere is an extra = in its own line in test.txt attached to test.eml of attachment 591729, yes - but why should this be a bug of TB? Did TB add the extra = when you attached a txt file with only \"1234567\" as text content?\n\nThis shows the relevant part of the source of tst.eml of attachment 591729:\n\n--=_mixed 0041E91AC125798E_=\nContent-Type: text/plain; name=\"TEST.TXT\"\nContent-Disposition: attachment; filename=\"TEST.TXT\"\nContent-Transfer-Encoding: quoted-printable\n\n1234567\n=\n--=_mixed 0041E91AC125798E_=--\n\nThis looks like wfm per ludo's comment 3."}, {"raw_text": "I create the file with PSPAD and I write the text.\n\nThen I attach the file to a mail whit the mouse using drag and drop and I send to myself. \n\nAt the end I recievied the file with a new line and '=' added.\n\nI don't know who and why it happen. \n\nI do with a windows system in italian language.", "attachment_id": null, "tags": [], "text": "I create the file with PSPAD and I write the text.\n\nThen I attach the file to a mail whit the mouse using drag and drop and I send to myself. \n\nAt the end I recievied the file with a new line and '=' added.\n\nI don't know who and why it happen. \n\nI do with a windows system in italian language.", "bug_id": 697448, "is_private": false, "count": 6, "id": 6283096, "author": "luca.preziati@gmail.com", "creator": "luca.preziati@gmail.com", "time": "2012-05-05T17:01:40Z", "creation_time": "2012-05-05T17:01:40Z"}, {"attachment_id": null, "raw_text": "This is going to get a bit standards-lawyer, but the test message as shown isn't quite legal.\n\n\n\nhttps://tools.ietf.org/html/rfc2046 page 19, the \"Note\" in the second paragraph, indicates that the example part in Comment 5 ends with the bare '=', because the subsequent CRLF belongs to the multipart boundary.\n\nhttps://tools.ietf.org/html/rfc2045#section-6.7, and in particular Note 3 on https://tools.ietf.org/html/rfc2045#page-22, states that a bare '=' is illegal as the last byte in a Quoted-Printable (Q-P) object.\n\n\nNow, the = at the end of a Q-P line means to ignore the line break and join the current line with the next line; a generous interpretation of a bare = at the end of a Q-P object would be to assume it means \"this Q-P object doesn't end in CRLF\", which looks like the interpretation some of the other decoders are applying. Note that this isn't necessary; the multipart boundary rule cited above already allows for non-CRLF terminated parts by giving the last CRLF to the boundary; when a part ends with CRLF, the multipart representation has two CRLFs at the end - one for the part, one for the boundary.\n\nI'd be happy to mentor a contributor through implementing this change if they really want it, but it's pretty low priority for the core team since it's accommodating somebody else's violation of a standard. Unless TB is also generating bogus Q-P objects...", "tags": [], "bug_id": 697448, "text": "This is going to get a bit standards-lawyer, but the test message as shown isn't quite legal.\n\n\n\nhttps://tools.ietf.org/html/rfc2046 page 19, the \"Note\" in the second paragraph, indicates that the example part in Comment 5 ends with the bare '=', because the subsequent CRLF belongs to the multipart boundary.\n\nhttps://tools.ietf.org/html/rfc2045#section-6.7, and in particular Note 3 on https://tools.ietf.org/html/rfc2045#page-22, states that a bare '=' is illegal as the last byte in a Quoted-Printable (Q-P) object.\n\n\nNow, the = at the end of a Q-P line means to ignore the line break and join the current line with the next line; a generous interpretation of a bare = at the end of a Q-P object would be to assume it means \"this Q-P object doesn't end in CRLF\", which looks like the interpretation some of the other decoders are applying. Note that this isn't necessary; the multipart boundary rule cited above already allows for non-CRLF terminated parts by giving the last CRLF to the boundary; when a part ends with CRLF, the multipart representation has two CRLFs at the end - one for the part, one for the boundary.\n\nI'd be happy to mentor a contributor through implementing this change if they really want it, but it's pretty low priority for the core team since it's accommodating somebody else's violation of a standard. Unless TB is also generating bogus Q-P objects...", "id": 6315806, "count": 7, "is_private": false, "time": "2012-05-17T15:46:54Z", "creation_time": "2012-05-17T15:46:54Z", "creator": "irving@cfrq.net", "author": "irving@cfrq.net"}, {"author": "sean@pedorro.com", "time": "2012-09-06T22:25:25Z", "creation_time": "2012-09-06T22:25:25Z", "creator": "sean@pedorro.com", "count": 8, "id": 6616240, "is_private": false, "tags": [], "bug_id": 697448, "text": "I'm interested in helping out with TB development. I  came across this bug as being one that might be good for getting introduced.  I can open the attached email sample in TB and see the offending '='.  I'm not able to reproduce it myself though.  Is it Windows only?\n\nIrving, are you up for helping me out with this?\nThanks", "raw_text": "I'm interested in helping out with TB development. I  came across this bug as being one that might be good for getting introduced.  I can open the attached email sample in TB and see the offending '='.  I'm not able to reproduce it myself though.  Is it Windows only?\n\nIrving, are you up for helping me out with this?\nThanks", "attachment_id": null}, {"time": "2012-09-07T12:00:19Z", "creation_time": "2012-09-07T12:00:19Z", "creator": "irving@cfrq.net", "tags": [], "bug_id": 697448, "text": "Sean, thanks for looking at this. A properly implemented mail client won't create a message that reproduces the problem, so the sample attached to the bug is the best way we have of reproducing.\n\nNext step for you is to get a Thunderbird build environment up and working, if you don't have one already; the conversation about doing that mostly happens in the IRC channel #maildev (see https://wiki.mozilla.org/IRC), but you can start with https://developer.mozilla.org/en-US/docs/Simple_Thunderbird_build.\n\nYou can also get in touch with me by email at the address in the CC field of this bug, but you'll get faster turnaround and help from more people if you ask in #maildev.", "author": "irving@cfrq.net", "count": 9, "id": 6617638, "attachment_id": null, "is_private": false, "raw_text": "Sean, thanks for looking at this. A properly implemented mail client won't create a message that reproduces the problem, so the sample attached to the bug is the best way we have of reproducing.\n\nNext step for you is to get a Thunderbird build environment up and working, if you don't have one already; the conversation about doing that mostly happens in the IRC channel #maildev (see https://wiki.mozilla.org/IRC), but you can start with https://developer.mozilla.org/en-US/docs/Simple_Thunderbird_build.\n\nYou can also get in touch with me by email at the address in the CC field of this bug, but you'll get faster turnaround and help from more people if you ask in #maildev."}, {"author": "syshagarwal@gmail.com", "creator": "syshagarwal@gmail.com", "time": "2013-06-07T20:03:33Z", "creation_time": "2013-06-07T20:03:33Z", "is_private": false, "count": 10, "id": 7511424, "bug_id": 697448, "text": "Created attachment 759903\nPatch", "tags": [], "raw_text": "", "attachment_id": 759903}, {"attachment_id": 759903, "raw_text": "Review of attachment 759903:\n-----------------------------------------------------------------\n\nThanks for the patch, and my apologies for taking so long to review. I suspect there's one easy-to-fix regression in your code change, and unfortunately it doesn't look like we have unit test coverage for either that case, or the new one you're handling with this patch. A fixed version of this patch would be great, but adding unit tests would be even greater - I don't suppose you'd be interested in writing those tests?\n\n::: mailnews/mime/src/mimeenc.cpp\n@@ +743,5 @@\n>    /* Flush out the last few buffered characters. */\n>    if (!abort_p &&\n>      data->token_size > 0 &&\n> +    data->token[0] != '=' &&\n> +    data->encoding == mime_Base64)\n\nThe change is a bit subtle, it took me a little while to figure out why it works. I'd like to update the comment at line 743; one option would be to say something like\n\n/* insert missing '=' characters at the end of a base64 part,\n * discard any other incomplete escape sequence at the end of\n * an encoded part */\n\n@@ -747,4 @@\n>    {\n> -    if (data->encoding == mime_Base64)\n> -    while ((unsigned int)data->token_size < sizeof (data->token))\n> -      data->token [data->token_size++] = '=';\n\nI think we still need this while loop to fill in any missing '=' from a truncated base64 part.", "tags": [], "bug_id": 697448, "text": "Comment on attachment 759903\nPatch\n\nReview of attachment 759903:\n-----------------------------------------------------------------\n\nThanks for the patch, and my apologies for taking so long to review. I suspect there's one easy-to-fix regression in your code change, and unfortunately it doesn't look like we have unit test coverage for either that case, or the new one you're handling with this patch. A fixed version of this patch would be great, but adding unit tests would be even greater - I don't suppose you'd be interested in writing those tests?\n\n::: mailnews/mime/src/mimeenc.cpp\n@@ +743,5 @@\n>    /* Flush out the last few buffered characters. */\n>    if (!abort_p &&\n>      data->token_size > 0 &&\n> +    data->token[0] != '=' &&\n> +    data->encoding == mime_Base64)\n\nThe change is a bit subtle, it took me a little while to figure out why it works. I'd like to update the comment at line 743; one option would be to say something like\n\n/* insert missing '=' characters at the end of a base64 part,\n * discard any other incomplete escape sequence at the end of\n * an encoded part */\n\n@@ -747,4 @@\n>    {\n> -    if (data->encoding == mime_Base64)\n> -    while ((unsigned int)data->token_size < sizeof (data->token))\n> -      data->token [data->token_size++] = '=';\n\nI think we still need this while loop to fill in any missing '=' from a truncated base64 part.", "is_private": false, "id": 7724457, "count": 11, "creator": "irving@cfrq.net", "time": "2013-08-08T00:54:37Z", "creation_time": "2013-08-08T00:54:37Z", "author": "irving@cfrq.net"}, {"attachment_id": null, "raw_text": "Okay, thanks for reviewing.\nI will fix this soon and I'll definitely try writing the test.\n\nThanks.", "tags": [], "bug_id": 697448, "text": "Okay, thanks for reviewing.\nI will fix this soon and I'll definitely try writing the test.\n\nThanks.", "is_private": false, "count": 12, "id": 7835317, "creator": "syshagarwal@gmail.com", "time": "2013-09-08T09:25:06Z", "creation_time": "2013-09-08T09:25:06Z", "author": "syshagarwal@gmail.com"}]}}}