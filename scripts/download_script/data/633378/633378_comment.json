{"bugs": {"633378": {"comments": [{"attachment_id": null, "is_private": false, "raw_text": "> CERTCertificate *\n> CERT_DupCertificate(CERTCertificate *c)\n> {\n>    if (c) {\n>        NSSCertificate *tmp = STAN_GetNSSCertificate(c);\n>        nssCertificate_AddRef(tmp);\n>    }\n>    return c;\n> }\n\nSTAN_GetNSSCertificate() will return NULL if it failed to create the NSSCertificate object for any reason. nssCertificate_AddRef does nothing if its argument is NULL.\n\nCERT_DupCertificate must check the return value of STAN_GetNSSCertificate, and if it is NULL, it must return NULL. (It looks like all callers of GetNSSCertificate do this except for CERT_DupCertificate).\n\nAll callers of CERT_DupCertificate must check the result against NULL. A quick check shows that some callers inside NSS do not make this check (e.g. in crl.c, ssl3con.c, and probably others). All calls to CERT_DupCertificate need to be reviewed and fixed as necessary.\n\nnssCertificate_AddRef should abort if its argument is NULL.", "creation_time": "2011-02-11T00:23:12Z", "bug_id": 633378, "creator": "brian@briansmith.org", "tags": [], "author": "brian@briansmith.org", "time": "2011-02-11T00:23:12Z", "id": 5271274, "count": 0, "text": "> CERTCertificate *\n> CERT_DupCertificate(CERTCertificate *c)\n> {\n>    if (c) {\n>        NSSCertificate *tmp = STAN_GetNSSCertificate(c);\n>        nssCertificate_AddRef(tmp);\n>    }\n>    return c;\n> }\n\nSTAN_GetNSSCertificate() will return NULL if it failed to create the NSSCertificate object for any reason. nssCertificate_AddRef does nothing if its argument is NULL.\n\nCERT_DupCertificate must check the return value of STAN_GetNSSCertificate, and if it is NULL, it must return NULL. (It looks like all callers of GetNSSCertificate do this except for CERT_DupCertificate).\n\nAll callers of CERT_DupCertificate must check the result against NULL. A quick check shows that some callers inside NSS do not make this check (e.g. in crl.c, ssl3con.c, and probably others). All calls to CERT_DupCertificate need to be reviewed and fixed as necessary.\n\nnssCertificate_AddRef should abort if its argument is NULL."}, {"id": 5273905, "time": "2011-02-11T22:31:16Z", "tags": [], "creation_time": "2011-02-11T22:31:16Z", "bug_id": 633378, "raw_text": "Thank you for the bug report.\n\nI agree that some NSS code protects against null input unnecessarily,\nwhich could make it harder to track down a crash.\n\nRe: your proposal\n\nToo much code has been written that assumes CERT_DupCertificate\nis an AddRef operation, which cannot fail.  So we need to preserve\nthat, rather than changing the callers to check a NULL return value.\n\nThis means two things:\n\n1. Every CERTCertificate passed to CERT_DupCertificate should\nalready have the nssCertificate member created, so that the\nSTAN_GetNSSCertificate(c) call cannot possibly fail.\n\n2. In the unlikely event that STAN_GetNSSCertificate(c) returns\nNULL, CERT_DupCertificate should crash the program, rather than\neither returning NULL or failing to do AddRef silently.", "is_private": false, "text": "Thank you for the bug report.\n\nI agree that some NSS code protects against null input unnecessarily,\nwhich could make it harder to track down a crash.\n\nRe: your proposal\n\nToo much code has been written that assumes CERT_DupCertificate\nis an AddRef operation, which cannot fail.  So we need to preserve\nthat, rather than changing the callers to check a NULL return value.\n\nThis means two things:\n\n1. Every CERTCertificate passed to CERT_DupCertificate should\nalready have the nssCertificate member created, so that the\nSTAN_GetNSSCertificate(c) call cannot possibly fail.\n\n2. In the unlikely event that STAN_GetNSSCertificate(c) returns\nNULL, CERT_DupCertificate should crash the program, rather than\neither returning NULL or failing to do AddRef silently.", "count": 1, "author": "wtc@google.com", "creator": "wtc@google.com", "attachment_id": null}]}}, "comments": {}}