{"comments": {}, "bugs": {"674164": {"comments": [{"raw_text": "The invariant I want to establish is: if your onNewScript handler walks the getChildScripts tree, and it gets in before any JS code, it will see every single Debugger.Script object you ever find on the stack. \n\nCurrently I think you get a new Debugger.Script each time a cached eval script is used, but only the first one is delivered to onNewScript. Two possible paths:\n\n  - use the same Debugger.Script every time for a cached eval script\n    (but this would mean if we cleared out the cache, the Debugger.Script might\n    become dead, or else it would have to keep the JSScript alive)\n\n  - fire the onNewScript hook each time the cached script is used\n    (but that means multiple Debug.Scripts could have the same child scripts,\n    i.e. the getChildScripts graph is not a collection of trees but a\n    collection of dags)", "time": "2011-07-26T06:51:39Z", "id": 5613209, "bug_id": 674164, "count": 0, "text": "The invariant I want to establish is: if your onNewScript handler walks the getChildScripts tree, and it gets in before any JS code, it will see every single Debugger.Script object you ever find on the stack. \n\nCurrently I think you get a new Debugger.Script each time a cached eval script is used, but only the first one is delivered to onNewScript. Two possible paths:\n\n  - use the same Debugger.Script every time for a cached eval script\n    (but this would mean if we cleared out the cache, the Debugger.Script might\n    become dead, or else it would have to keep the JSScript alive)\n\n  - fire the onNewScript hook each time the cached script is used\n    (but that means multiple Debug.Scripts could have the same child scripts,\n    i.e. the getChildScripts graph is not a collection of trees but a\n    collection of dags)", "author": "jorendorff@mozilla.com", "tags": [], "attachment_id": null, "creation_time": "2011-07-26T06:51:39Z", "is_private": false, "creator": "jorendorff@mozilla.com"}, {"id": 5635005, "bug_id": 674164, "is_private": false, "creation_time": "2011-08-05T02:35:20Z", "creator": "jorendorff@mozilla.com", "author": "jorendorff@mozilla.com", "count": 1, "text": "I think the patches in bug 665167 fix this, but I need to add a test for it. Taking.", "tags": [], "time": "2011-08-05T02:35:20Z", "attachment_id": null, "raw_text": "I think the patches in bug 665167 fix this, but I need to add a test for it. Taking."}, {"tags": [], "time": "2011-08-05T21:39:59Z", "raw_text": "Yep. With the patches in bug 665167 applied, these tests pass.", "attachment_id": 551164, "bug_id": 674164, "id": 5636803, "is_private": false, "creation_time": "2011-08-05T21:39:59Z", "creator": "jorendorff@mozilla.com", "text": "Created attachment 551164\ntests\n\nYep. With the patches in bug 665167 applied, these tests pass.", "count": 2, "author": "jorendorff@mozilla.com"}]}}}