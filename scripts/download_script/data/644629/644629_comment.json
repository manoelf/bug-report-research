{"bugs": {"644629": {"comments": [{"is_private": false, "time": "2011-03-24T16:32:33Z", "attachment_id": null, "creation_time": "2011-03-24T16:32:33Z", "text": "Currently all of our asynchronous scrolling and zooming code lives in Fennec. Add this to the platform browser binding with tests.", "id": 5366200, "raw_text": "Currently all of our asynchronous scrolling and zooming code lives in Fennec. Add this to the platform browser binding with tests.", "creator": "ben@stechz.com", "count": 0, "tags": [], "bug_id": 644629, "author": "ben@stechz.com"}, {"author": "ben@stechz.com", "creation_time": "2011-03-24T16:44:32Z", "text": "Created attachment 521522\nPart 1: component and frame script for asynchronous views\n\nI did my best not to pollute browser.xml more than necessary. I split off almost everything into\nits own component.", "id": 5366235, "raw_text": "I did my best not to pollute browser.xml more than necessary. I split off almost everything into\nits own component.", "tags": [], "count": 1, "creator": "ben@stechz.com", "bug_id": 644629, "attachment_id": 521522, "is_private": false, "time": "2011-03-24T16:44:32Z"}, {"bug_id": 644629, "tags": [], "creator": "ben@stechz.com", "count": 2, "raw_text": "Not sure who should review the actual changes to browser.xml.", "id": 5366238, "text": "Created attachment 521523\nChanges to browser widget\n\nNot sure who should review the actual changes to browser.xml.", "creation_time": "2011-03-24T16:44:57Z", "author": "ben@stechz.com", "time": "2011-03-24T16:44:57Z", "is_private": false, "attachment_id": 521523}, {"attachment_id": 521524, "author": "ben@stechz.com", "id": 5366243, "raw_text": "", "creation_time": "2011-03-24T16:45:28Z", "is_private": false, "text": "Created attachment 521524\nTests for view APIs", "creator": "ben@stechz.com", "tags": [], "time": "2011-03-24T16:45:28Z", "count": 3, "bug_id": 644629}, {"author": "ben@stechz.com", "id": 5366246, "raw_text": "", "creation_time": "2011-03-24T16:46:27Z", "text": "Created attachment 521525\nPart 2: Changes to browser widget", "creator": "ben@stechz.com", "tags": [], "count": 4, "bug_id": 644629, "attachment_id": 521525, "is_private": false, "time": "2011-03-24T16:46:27Z"}, {"author": "ben@stechz.com", "raw_text": "", "id": 5366248, "text": "Created attachment 521526\nPart 3 Tests for view APIs", "creation_time": "2011-03-24T16:46:48Z", "bug_id": 644629, "creator": "ben@stechz.com", "count": 5, "tags": [], "attachment_id": 521526, "is_private": false, "time": "2011-03-24T16:46:48Z"}, {"bug_id": 644629, "creator": "ben@stechz.com", "tags": [], "count": 6, "text": "Mark: the code is almost a direct port from Fennec so that refactorings wouldn't be hidden in the mass move. I am planning to refactor some things in a different bug.", "creation_time": "2011-03-24T16:47:57Z", "raw_text": "Mark: the code is almost a direct port from Fennec so that refactorings wouldn't be hidden in the mass move. I am planning to refactor some things in a different bug.", "id": 5366250, "author": "ben@stechz.com", "time": "2011-03-24T16:47:57Z", "is_private": false, "attachment_id": null}, {"attachment_id": 521527, "time": "2011-03-24T16:49:03Z", "is_private": false, "author": "ben@stechz.com", "count": 7, "creator": "ben@stechz.com", "tags": [], "bug_id": 644629, "id": 5366254, "raw_text": "", "creation_time": "2011-03-24T16:49:03Z", "text": "Created attachment 521527\nRemove redundant browser code that's moved to platform"}, {"author": "ben@stechz.com", "bug_id": 644629, "count": 8, "creator": "ben@stechz.com", "tags": [], "text": "Created attachment 521528\nRemove redundant browser code that's moved to platform", "creation_time": "2011-03-24T16:51:38Z", "raw_text": "", "id": 5366262, "attachment_id": 521528, "time": "2011-03-24T16:51:38Z", "is_private": false}, {"is_private": false, "time": "2011-03-24T16:59:13Z", "attachment_id": 521530, "creation_time": "2011-03-24T16:59:13Z", "text": "Created attachment 521530\nPart 1: component and frame script for asynchronous views", "id": 5366293, "raw_text": "", "tags": [], "count": 9, "creator": "ben@stechz.com", "bug_id": 644629, "author": "ben@stechz.com"}, {"is_private": false, "time": "2011-03-24T16:59:43Z", "attachment_id": 521531, "id": 5366295, "raw_text": "", "creation_time": "2011-03-24T16:59:43Z", "text": "Created attachment 521531\nPart 2: Changes to browser widget", "tags": [], "creator": "ben@stechz.com", "count": 10, "bug_id": 644629, "author": "ben@stechz.com"}, {"attachment_id": 521528, "author": "mbrubeck@limpet.net", "is_private": false, "creation_time": "2011-03-25T22:02:50Z", "text": "Comment on attachment 521528\nRemove redundant browser code that's moved to platform\n\nLooks good to me.  I'd also be in favor of completely ditching the finishFuzzyZoom API (which now has just one caller) and moving completely to the scale/resolution setters.", "id": 5370788, "raw_text": "Looks good to me.  I'd also be in favor of completely ditching the finishFuzzyZoom API (which now has just one caller) and moving completely to the scale/resolution setters.", "tags": [], "time": "2011-03-25T22:02:50Z", "creator": "mbrubeck@limpet.net", "count": 11, "bug_id": 644629}, {"author": "mark.finkle@gmail.com", "attachment_id": 521531, "bug_id": 644629, "count": 12, "creator": "mark.finkle@gmail.com", "time": "2011-04-07T18:37:56Z", "tags": [], "text": "Comment on attachment 521531\nPart 2: Changes to browser widget\n\n\n>+          Components.utils.import(\"resource://gre/modules/View.jsm\");\n>+          this._viewManager = new ViewManager(this);\n\nCan we make a viewManager property/field and load the module on first access? That would help performance\n\n>+      <!-- Scale the page without changing layout -->\n>+      <property name=\"resolution\"\n>+                onget=\"return this._viewManager.resolution\"\n>+                onset=\"this._viewManager.resolution = val\"/>\n>+\n>+      <!-- Scale the page without changing layout -->\n>+      <property name=\"scale\"\n>+                onget=\"return this._viewManager.scale\"\n>+                onset=\"this._viewManager.scale = val\"/>\n\nYou need better comments on these methods. I assume they don't do the exact same thing", "creation_time": "2011-04-07T18:37:56Z", "is_private": false, "raw_text": "\n>+          Components.utils.import(\"resource://gre/modules/View.jsm\");\n>+          this._viewManager = new ViewManager(this);\n\nCan we make a viewManager property/field and load the module on first access? That would help performance\n\n>+      <!-- Scale the page without changing layout -->\n>+      <property name=\"resolution\"\n>+                onget=\"return this._viewManager.resolution\"\n>+                onset=\"this._viewManager.resolution = val\"/>\n>+\n>+      <!-- Scale the page without changing layout -->\n>+      <property name=\"scale\"\n>+                onget=\"return this._viewManager.scale\"\n>+                onset=\"this._viewManager.scale = val\"/>\n\nYou need better comments on these methods. I assume they don't do the exact same thing", "id": 5394789}, {"attachment_id": 521530, "time": "2011-04-07T19:11:15Z", "is_private": false, "author": "mark.finkle@gmail.com", "count": 13, "creator": "mark.finkle@gmail.com", "tags": [], "bug_id": 644629, "id": 5394838, "raw_text": "\n>+// For instance: cachePercentageWidth is 1500\n\ncacheRatioWidth, not cachePercentageWidth\n\n>+pref(\"asyncscroll.cacheRatioWidth\", 2000);\n>+pref(\"asyncscroll.cacheRatioHeight\", 3000);\n>+\n>+// How long before a content view (a handle to a remote scrollable object)\n>+// expires. Defined in milliseconds.\n>+pref(\"asyncscroll.viewExpire\", 3000);\n\nI don't like \"asyncscroll\" since this really has more to do displayport so let's use \"browser.displayport\"\n\n>diff --git a/toolkit/components/Makefile.in b/toolkit/components/Makefile.in\n\n>+ifdef MOZ_IPC\n>+PARALLEL_DIRS += \\\n>+  asyncscroll \\\n>+  $(NULL)\n>+endif\n\n* No MOZ_IPC anymore\n* I don't like \"asycnscroll\" for the folder name. Can we use \"viewmanager\"?\n\n>+Cu.import(\"resource://gre/modules/Geometry.jsm\");\n\nCan we delay load this? We seem to only use \"Rect\".\n\n>diff --git a/toolkit/components/asyncscroll/src/content.js b/toolkit/components/asyncscroll/src/content.js\n\nCi.nsIDOMWindowUtils_MOZILLA_2_0_BRANCH\n\nThat is gone\n\nFirst pass finished\nI was originally thinking this would be moved into platform a bit differently - moved into C++, not a JS move. I guess the JS move is ok.", "creation_time": "2011-04-07T19:11:15Z", "text": "Comment on attachment 521530\nPart 1: component and frame script for asynchronous views\n\n\n>+// For instance: cachePercentageWidth is 1500\n\ncacheRatioWidth, not cachePercentageWidth\n\n>+pref(\"asyncscroll.cacheRatioWidth\", 2000);\n>+pref(\"asyncscroll.cacheRatioHeight\", 3000);\n>+\n>+// How long before a content view (a handle to a remote scrollable object)\n>+// expires. Defined in milliseconds.\n>+pref(\"asyncscroll.viewExpire\", 3000);\n\nI don't like \"asyncscroll\" since this really has more to do displayport so let's use \"browser.displayport\"\n\n>diff --git a/toolkit/components/Makefile.in b/toolkit/components/Makefile.in\n\n>+ifdef MOZ_IPC\n>+PARALLEL_DIRS += \\\n>+  asyncscroll \\\n>+  $(NULL)\n>+endif\n\n* No MOZ_IPC anymore\n* I don't like \"asycnscroll\" for the folder name. Can we use \"viewmanager\"?\n\n>+Cu.import(\"resource://gre/modules/Geometry.jsm\");\n\nCan we delay load this? We seem to only use \"Rect\".\n\n>diff --git a/toolkit/components/asyncscroll/src/content.js b/toolkit/components/asyncscroll/src/content.js\n\nCi.nsIDOMWindowUtils_MOZILLA_2_0_BRANCH\n\nThat is gone\n\nFirst pass finished\nI was originally thinking this would be moved into platform a bit differently - moved into C++, not a JS move. I guess the JS move is ok."}, {"attachment_id": null, "is_private": false, "time": "2011-04-11T22:42:36Z", "author": "ben@stechz.com", "text": "> \n> >+          Components.utils.import(\"resource://gre/modules/View.jsm\");\n> >+          this._viewManager = new ViewManager(this);\n> \n> Can we make a viewManager property/field and load the module on first access?\n> That would help performance\n\nDone.\n\n> \n> >+      <!-- Scale the page without changing layout -->\n> >+      <property name=\"resolution\"\n> >+                onget=\"return this._viewManager.resolution\"\n> >+                onset=\"this._viewManager.resolution = val\"/>\n> >+\n> >+      <!-- Scale the page without changing layout -->\n> >+      <property name=\"scale\"\n> >+                onget=\"return this._viewManager.scale\"\n> >+                onset=\"this._viewManager.scale = val\"/>\n> \n> You need better comments on these methods. I assume they don't do the exact\n> same thing\n\nDone.\n\n(In reply to comment #13)\n> Comment on attachment 521530 [details]\n> Part 1: component and frame script for asynchronous views\n> \n> \n> >+// For instance: cachePercentageWidth is 1500\n> \n> cacheRatioWidth, not cachePercentageWidth\n> \n\nDone.\n\n> >+pref(\"asyncscroll.cacheRatioWidth\", 2000);\n> >+pref(\"asyncscroll.cacheRatioHeight\", 3000);\n> >+\n> >+// How long before a content view (a handle to a remote scrollable object)\n> >+// expires. Defined in milliseconds.\n> >+pref(\"asyncscroll.viewExpire\", 3000);\n> \n> I don't like \"asyncscroll\" since this really has more to do displayport so\n> let's use \"browser.displayport\"\n> \n\nFine.\n\n> >diff --git a/toolkit/components/Makefile.in b/toolkit/components/Makefile.in\n> \n> >+ifdef MOZ_IPC\n> >+PARALLEL_DIRS += \\\n> >+  asyncscroll \\\n> >+  $(NULL)\n> >+endif\n> \n> * No MOZ_IPC anymore\n> * I don't like \"asycnscroll\" for the folder name. Can we use \"viewmanager\"?\n> \n\nDone.\n\n> >+Cu.import(\"resource://gre/modules/Geometry.jsm\");\n> \n> Can we delay load this? We seem to only use \"Rect\".\n\nDone.\n\n> \n> >diff --git a/toolkit/components/asyncscroll/src/content.js b/toolkit/components/asyncscroll/src/content.js\n> \n> Ci.nsIDOMWindowUtils_MOZILLA_2_0_BRANCH\n> \n> That is gone\n> \n> First pass finished\n> I was originally thinking this would be moved into platform a bit differently -\n> moved into C++, not a JS move. I guess the JS move is ok.\n\nDone.", "creation_time": "2011-04-11T22:42:36Z", "raw_text": "> \n> >+          Components.utils.import(\"resource://gre/modules/View.jsm\");\n> >+          this._viewManager = new ViewManager(this);\n> \n> Can we make a viewManager property/field and load the module on first access?\n> That would help performance\n\nDone.\n\n> \n> >+      <!-- Scale the page without changing layout -->\n> >+      <property name=\"resolution\"\n> >+                onget=\"return this._viewManager.resolution\"\n> >+                onset=\"this._viewManager.resolution = val\"/>\n> >+\n> >+      <!-- Scale the page without changing layout -->\n> >+      <property name=\"scale\"\n> >+                onget=\"return this._viewManager.scale\"\n> >+                onset=\"this._viewManager.scale = val\"/>\n> \n> You need better comments on these methods. I assume they don't do the exact\n> same thing\n\nDone.\n\n(In reply to comment #13)\n> Comment on attachment 521530 [details]\n> Part 1: component and frame script for asynchronous views\n> \n> \n> >+// For instance: cachePercentageWidth is 1500\n> \n> cacheRatioWidth, not cachePercentageWidth\n> \n\nDone.\n\n> >+pref(\"asyncscroll.cacheRatioWidth\", 2000);\n> >+pref(\"asyncscroll.cacheRatioHeight\", 3000);\n> >+\n> >+// How long before a content view (a handle to a remote scrollable object)\n> >+// expires. Defined in milliseconds.\n> >+pref(\"asyncscroll.viewExpire\", 3000);\n> \n> I don't like \"asyncscroll\" since this really has more to do displayport so\n> let's use \"browser.displayport\"\n> \n\nFine.\n\n> >diff --git a/toolkit/components/Makefile.in b/toolkit/components/Makefile.in\n> \n> >+ifdef MOZ_IPC\n> >+PARALLEL_DIRS += \\\n> >+  asyncscroll \\\n> >+  $(NULL)\n> >+endif\n> \n> * No MOZ_IPC anymore\n> * I don't like \"asycnscroll\" for the folder name. Can we use \"viewmanager\"?\n> \n\nDone.\n\n> >+Cu.import(\"resource://gre/modules/Geometry.jsm\");\n> \n> Can we delay load this? We seem to only use \"Rect\".\n\nDone.\n\n> \n> >diff --git a/toolkit/components/asyncscroll/src/content.js b/toolkit/components/asyncscroll/src/content.js\n> \n> Ci.nsIDOMWindowUtils_MOZILLA_2_0_BRANCH\n> \n> That is gone\n> \n> First pass finished\n> I was originally thinking this would be moved into platform a bit differently -\n> moved into C++, not a JS move. I guess the JS move is ok.\n\nDone.", "id": 5401963, "bug_id": 644629, "count": 14, "creator": "ben@stechz.com", "tags": []}, {"creator": "ben@stechz.com", "tags": [], "count": 15, "time": "2011-04-18T19:49:08Z", "bug_id": 644629, "creation_time": "2011-04-18T19:49:08Z", "is_private": false, "text": "Created attachment 526791\nPart 1: component and frame script for asynchronous views", "id": 5416522, "raw_text": "", "attachment_id": 526791, "author": "ben@stechz.com"}, {"attachment_id": 526793, "author": "ben@stechz.com", "creation_time": "2011-04-18T19:53:19Z", "is_private": false, "text": "Created attachment 526793\nPart 0: Very basic support for remote tabs in tabbrowser", "id": 5416539, "raw_text": "", "creator": "ben@stechz.com", "tags": [], "count": 16, "time": "2011-04-18T19:53:19Z", "bug_id": 644629}, {"attachment_id": 526794, "time": "2011-04-18T19:54:07Z", "is_private": false, "author": "ben@stechz.com", "creator": "ben@stechz.com", "count": 17, "tags": [], "bug_id": 644629, "id": 5416541, "raw_text": "", "creation_time": "2011-04-18T19:54:07Z", "text": "Created attachment 526794\nPart 1: component and frame script for asynchronous views"}, {"creation_time": "2011-04-18T19:55:32Z", "text": "Created attachment 526795\nPart 2: Changes to browser widget", "id": 5416543, "raw_text": "", "tags": [], "creator": "ben@stechz.com", "count": 18, "bug_id": 644629, "author": "ben@stechz.com", "is_private": false, "time": "2011-04-18T19:55:32Z", "attachment_id": 526795}, {"time": "2011-04-18T21:58:43Z", "is_private": false, "attachment_id": 526839, "bug_id": 644629, "creator": "ben@stechz.com", "count": 19, "tags": [], "raw_text": "", "id": 5416907, "text": "Created attachment 526839\nPart 3 Tests for view APIs", "creation_time": "2011-04-18T21:58:43Z", "author": "ben@stechz.com"}, {"author": "ben@stechz.com", "bug_id": 644629, "tags": [], "count": 20, "creator": "ben@stechz.com", "raw_text": "Lots of test issues on try:\nhttp://tbpl.mozilla.org/?tree=MozillaTry&rev=a3bac500e0f7\n\nTests timing out, process crashes, bad values being returned.", "id": 5416986, "text": "Lots of test issues on try:\nhttp://tbpl.mozilla.org/?tree=MozillaTry&rev=a3bac500e0f7\n\nTests timing out, process crashes, bad values being returned.", "creation_time": "2011-04-18T22:24:41Z", "attachment_id": null, "time": "2011-04-18T22:24:41Z", "is_private": false}, {"count": 21, "time": "2011-04-25T09:21:15Z", "creator": "dao+bmo@mozilla.com", "tags": [], "bug_id": 644629, "id": 5429083, "raw_text": ">--- a/browser/base/content/tabbrowser.xml\n>+++ b/browser/base/content/tabbrowser.xml\n>@@ -1162,16 +1162,17 @@\n> \n>       <method name=\"addTab\">\n>         <parameter name=\"aURI\"/>\n>         <parameter name=\"aReferrerURI\"/>\n>         <parameter name=\"aCharset\"/>\n>         <parameter name=\"aPostData\"/>\n>         <parameter name=\"aOwner\"/>\n>         <parameter name=\"aAllowThirdPartyFixup\"/>\n>+        <parameter name=\"aRemoteBrowser\"/>\n>         <body>\n\nI don't think we want this to be part of the tabbrowser API. (Not sure why this patch is in this bug anyway.)", "is_private": false, "creation_time": "2011-04-25T09:21:15Z", "text": "Comment on attachment 526793\nPart 0: Very basic support for remote tabs in tabbrowser\n\n>--- a/browser/base/content/tabbrowser.xml\n>+++ b/browser/base/content/tabbrowser.xml\n>@@ -1162,16 +1162,17 @@\n> \n>       <method name=\"addTab\">\n>         <parameter name=\"aURI\"/>\n>         <parameter name=\"aReferrerURI\"/>\n>         <parameter name=\"aCharset\"/>\n>         <parameter name=\"aPostData\"/>\n>         <parameter name=\"aOwner\"/>\n>         <parameter name=\"aAllowThirdPartyFixup\"/>\n>+        <parameter name=\"aRemoteBrowser\"/>\n>         <body>\n\nI don't think we want this to be part of the tabbrowser API. (Not sure why this patch is in this bug anyway.)", "attachment_id": 526793, "author": "dao+bmo@mozilla.com"}, {"attachment_id": 526795, "is_private": false, "time": "2011-04-25T09:23:07Z", "author": "dao+bmo@mozilla.com", "raw_text": ">--- a/toolkit/content/widgets/browser.xml\n>+++ b/toolkit/content/widgets/browser.xml\n>@@ -670,23 +670,30 @@\n>             Components.utils.reportError(e);\n>           }\n>           try {\n>             var securityUI = this.securityUI;\n>           }\n>           catch (e) {\n>           }\n> \n>+          Components.utils.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n>+          XPCOMUtils.defineLazyGetter(this, \"_viewManager\", function() {\n>+            let obj = {};\n>+            Components.utils.import(\"resource://gre/modules/View.jsm\", obj);\n>+            return new obj.ViewManager(this);\n>+          });\n\nYou're leaking XPCOMUtils into the global scope.\n\nThis patch also needs review from a toolkit peer, maybe super-review too.", "id": 5429086, "text": "Comment on attachment 526795\nPart 2: Changes to browser widget\n\n>--- a/toolkit/content/widgets/browser.xml\n>+++ b/toolkit/content/widgets/browser.xml\n>@@ -670,23 +670,30 @@\n>             Components.utils.reportError(e);\n>           }\n>           try {\n>             var securityUI = this.securityUI;\n>           }\n>           catch (e) {\n>           }\n> \n>+          Components.utils.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n>+          XPCOMUtils.defineLazyGetter(this, \"_viewManager\", function() {\n>+            let obj = {};\n>+            Components.utils.import(\"resource://gre/modules/View.jsm\", obj);\n>+            return new obj.ViewManager(this);\n>+          });\n\nYou're leaking XPCOMUtils into the global scope.\n\nThis patch also needs review from a toolkit peer, maybe super-review too.", "creation_time": "2011-04-25T09:23:07Z", "bug_id": 644629, "creator": "dao+bmo@mozilla.com", "tags": [], "count": 22}, {"creator": "gavin.sharp@gmail.com", "count": 23, "tags": [], "time": "2011-06-03T20:46:01Z", "bug_id": 644629, "is_private": false, "creation_time": "2011-06-03T20:46:01Z", "text": "Comment on attachment 526839\nPart 3 Tests for view APIs\n\nLooks like this review request is no longer relevant (seems to be on top of other patches that need updating). Also this looks somewhat out of date, and missing some key parts (\"docShell\" only referred to in one place, nsIDOMWindowUtils_MOZILLA_2_0_BRANCH no longer exists, etc.). Be glad to talk through this stuff if this work picks up again.", "id": 5511750, "raw_text": "Looks like this review request is no longer relevant (seems to be on top of other patches that need updating). Also this looks somewhat out of date, and missing some key parts (\"docShell\" only referred to in one place, nsIDOMWindowUtils_MOZILLA_2_0_BRANCH no longer exists, etc.). Be glad to talk through this stuff if this work picks up again.", "attachment_id": 526839, "author": "gavin.sharp@gmail.com"}]}}, "comments": {}}