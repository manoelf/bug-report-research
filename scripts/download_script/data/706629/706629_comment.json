{"bugs": {"706629": {"comments": [{"creator": "rowebb@gmail.com", "time": "2011-11-30T21:14:44Z", "creation_time": "2011-11-30T21:14:44Z", "author": "rowebb@gmail.com", "is_private": false, "count": 0, "id": 5883350, "tags": [], "bug_id": 706629, "text": "With the addition of the sightings table, we need a way in the UI to add new sightings to a bug. A create new bug button should be added to the sightings table that will create a new sighting of the master bug.", "attachment_id": null, "raw_text": "With the addition of the sightings table, we need a way in the UI to add new sightings to a bug. A create new bug button should be added to the sightings table that will create a new sighting of the master bug."}, {"attachment_id": null, "is_private": false, "id": 6133733, "count": 1, "raw_text": "Been busy with other projects at work. I'm moving back onto getting this finished; should be able to post some diffs this week.", "creator": "rowebb@gmail.com", "creation_time": "2012-03-12T21:02:43Z", "time": "2012-03-12T21:02:43Z", "author": "rowebb@gmail.com", "tags": [], "text": "Been busy with other projects at work. I'm moving back onto getting this finished; should be able to post some diffs this week.", "bug_id": 706629}, {"time": "2012-03-16T21:10:16Z", "creation_time": "2012-03-16T21:10:16Z", "creator": "rowebb@gmail.com", "author": "rowebb@gmail.com", "id": 6147430, "count": 2, "is_private": false, "tags": [], "text": "Created attachment 606725\nCreate A Sighting From the Sightings Table diff v1.\n\nThis adds a button to the bottom of the sightings table that will allow you to create a new sighting on the bug. I've also included a hidden/toggle text area for you to add a different description to the sighting that's created.", "bug_id": 706629, "attachment_id": 606725, "raw_text": "This adds a button to the bottom of the sightings table that will allow you to create a new sighting on the bug. I've also included a hidden/toggle text area for you to add a different description to the sighting that's created."}, {"author": "rowebb@gmail.com", "creation_time": "2012-03-16T21:17:23Z", "time": "2012-03-16T21:17:23Z", "creator": "rowebb@gmail.com", "id": 6147450, "count": 3, "is_private": false, "tags": [], "bug_id": 706629, "text": "A note on this; I wasn't too sure what fields to exclude when duping the values from the master bug. From the design we have \"When a user edits a master bug, the values are populated to all of the sightings. We synch the values for almost all fields except for CCs, Time Tracking, Attachments, Flags, Status, Resolution, Dupe of and Comments.\" But we don't state anything about values to synch when creating the sighting.", "raw_text": "A note on this; I wasn't too sure what fields to exclude when duping the values from the master bug. From the design we have \"When a user edits a master bug, the values are populated to all of the sightings. We synch the values for almost all fields except for CCs, Time Tracking, Attachments, Flags, Status, Resolution, Dupe of and Comments.\" But we don't state anything about values to synch when creating the sighting.", "attachment_id": null}, {"attachment_id": 606725, "raw_text": "Requesting review from LpSolit", "tags": [], "text": "Comment on attachment 606725\nCreate A Sighting From the Sightings Table diff v1.\n\nRequesting review from LpSolit", "bug_id": 706629, "is_private": false, "count": 4, "id": 6164129, "creator": "rowebb@gmail.com", "creation_time": "2012-03-22T22:44:35Z", "time": "2012-03-22T22:44:35Z", "author": "rowebb@gmail.com"}, {"count": 5, "id": 6283860, "is_private": false, "author": "LpSolit@gmail.com", "creation_time": "2012-05-06T13:03:05Z", "time": "2012-05-06T13:03:05Z", "creator": "LpSolit@gmail.com", "raw_text": ">=== modified file 'process_bug.cgi'\n\n>+if (defined $cgi->param('add_sighting')) {\n\nWhat happens if I try to hack the URL and I define add_sighting while editing several bugs at once (mass-change)?\n\n\n>+    foreach my $field (Bugzilla::Bug->fields) {\n>+        $bug_params{$field} = $first_bug->{$field};\n>+    }\n\nHow does this work when a user creates a sighting when the bug is restricted to some groups which the user is not a member of? Does your code also copy attachments (I hope not)?\n\n\n>+    $bug_params{'master_bug_id'} = $cgi->param('master_bug');\n\nDoes the validator make sure you are allowed to access master_bug?\n\n\nWhat bothers me with this code is that I cannot create a new sighting independently of what I'm currently doing in the bug I'm viewing. I think creating a new sighting shouldn't commit what you were doing in the bug, because \"Create Sighting\" != \"Save Changes\", and I didn't expect my changes to be committed already; I just wanted to create a new sighting.\n\nAlso, if a powerless user (without editbugs privs) tries to create a new sighting, he gets a weird error message about a missing product. If the powerless user shouldn't be allowed to create a new sighting, then the \"Create Sighting\" button shouldn't be displayed.\n\n\n\n>=== modified file 'template/en/default/sighting/list.html.tmpl'\n\nWhen there is no sighting, this table takes too much space. Most bugs won't have any sighting and we shouldn't waste so much space. To partially fix this problem, the \"Create Sighting\" problem should at least be on the same row as the \"Create sighting with different description\" link. Also, its location seems weird to me. I would expect to see it at the very top of the bug report, not above the timetracking fields, which makes the UI really not nice. Also, I think the product, component and version should at least be displayed in this table, else it's pretty useless.", "attachment_id": 606725, "bug_id": 706629, "text": "Comment on attachment 606725\nCreate A Sighting From the Sightings Table diff v1.\n\n>=== modified file 'process_bug.cgi'\n\n>+if (defined $cgi->param('add_sighting')) {\n\nWhat happens if I try to hack the URL and I define add_sighting while editing several bugs at once (mass-change)?\n\n\n>+    foreach my $field (Bugzilla::Bug->fields) {\n>+        $bug_params{$field} = $first_bug->{$field};\n>+    }\n\nHow does this work when a user creates a sighting when the bug is restricted to some groups which the user is not a member of? Does your code also copy attachments (I hope not)?\n\n\n>+    $bug_params{'master_bug_id'} = $cgi->param('master_bug');\n\nDoes the validator make sure you are allowed to access master_bug?\n\n\nWhat bothers me with this code is that I cannot create a new sighting independently of what I'm currently doing in the bug I'm viewing. I think creating a new sighting shouldn't commit what you were doing in the bug, because \"Create Sighting\" != \"Save Changes\", and I didn't expect my changes to be committed already; I just wanted to create a new sighting.\n\nAlso, if a powerless user (without editbugs privs) tries to create a new sighting, he gets a weird error message about a missing product. If the powerless user shouldn't be allowed to create a new sighting, then the \"Create Sighting\" button shouldn't be displayed.\n\n\n\n>=== modified file 'template/en/default/sighting/list.html.tmpl'\n\nWhen there is no sighting, this table takes too much space. Most bugs won't have any sighting and we shouldn't waste so much space. To partially fix this problem, the \"Create Sighting\" problem should at least be on the same row as the \"Create sighting with different description\" link. Also, its location seems weird to me. I would expect to see it at the very top of the bug report, not above the timetracking fields, which makes the UI really not nice. Also, I think the product, component and version should at least be displayed in this table, else it's pretty useless.", "tags": []}, {"raw_text": "> What happens if I try to hack the URL and I define add_sighting while editing\n> several bugs at once (mass-change)?\n\nIt'll create a single sighting on the first bug in the list. I can certainly restrict this by only allowing sightings to be added when you're only editing a single bug: if we get more than one display an error.\n\n> How does this work when a user creates a sighting when the bug is restricted to\n> some groups which the user is not a member of? Does your code also copy\n> attachments (I hope not)?\n\nAttachments are not copied; in the design we have them on a per-bug basis. I had thought I had thrown in a security check to make sure the user can edit the bug (they should only be able to add a sighting to a bug they cannot edit), but I apparently missed that check. Also, if you can think of a better way to clone the bug's values to a new bug, I'd gladly use it. :)\n\n> Does the validator make sure you are allowed to access master_bug?\n\nYes, it does.\n\n> What bothers me with this code is that I cannot create a new sighting \n> independently of what I'm currently doing in the bug I'm viewing. I think \n> creating a new sighting shouldn't commit what you were doing in the bug, \n> because \"Create Sighting\" != \"Save Changes\", and I didn't expect my changes to \n> be committed already; I just wanted to create a new sighting.\n\nAbsolutely, I agree. Originally I was thinking of having another form that I'd post to when you press the submit button, but unfortunately due to the restrictions in HTML you can't nest forms that post to different places. What I can do, however, is move this whole sightings ordeal up higher in the process_bug.cgi file to add the sighting and bail out of modifying the original bug. If you have other options I'd be glad to hear them.\n\n> Also, if a powerless user (without editbugs privs) tries to create a new\n> sighting, he gets a weird error message about a missing product. If the\n> powerless user shouldn't be allowed to create a new sighting, then the \"Create\n> Sighting\" button shouldn't be displayed.\n\nI hadn't considered this. I'll modify the templates to not even render the buttons if you can't modify the bug.\n\n> When there is no sighting, this table takes too much space. Most bugs won't\n> have any sighting and we shouldn't waste so much space. To partially fix this\n> problem, the \"Create Sighting\" problem should at least be on the same row as\n> the \"Create sighting with different description\" link.\n\nI can hide a lot of this table when there are no sightings available on the bug (so all you see is just that section with the \"Create Sighting\" button). I'll also move the description and sighting buttons onto the same line to save vertical space.\n\n> Also, its location seems weird to me. I would expect to see it at the very top\n> of the bug report, not above the timetracking fields, which makes the UI\n> really not nice. Also, I think the product, component and version should at\n> least be displayed in this table, else it's pretty useless.\n\nWhere in the bug report would you like to see the table? The original thought was just to keep it down with the rest of the tables (attachments, timetracking, etc).\n\nAs for having the product, component and version being displayed, that area off to the right is eventually going to hold all of the fields that the sighting is varied on. Having extra fields displayed there that the sighting is not varied on would be rather confusing. I know it looks weird now, but this is only really half of the stuff we planned on putting into the table. Definitely refer to the design proposal we have for this on bug 55970 as we have a full mock-up for how this will appear in the end. If you have any questions or concerns involving that document, I'd gladly hear them.", "attachment_id": null, "text": "> What happens if I try to hack the URL and I define add_sighting while editing\n> several bugs at once (mass-change)?\n\nIt'll create a single sighting on the first bug in the list. I can certainly restrict this by only allowing sightings to be added when you're only editing a single bug: if we get more than one display an error.\n\n> How does this work when a user creates a sighting when the bug is restricted to\n> some groups which the user is not a member of? Does your code also copy\n> attachments (I hope not)?\n\nAttachments are not copied; in the design we have them on a per-bug basis. I had thought I had thrown in a security check to make sure the user can edit the bug (they should only be able to add a sighting to a bug they cannot edit), but I apparently missed that check. Also, if you can think of a better way to clone the bug's values to a new bug, I'd gladly use it. :)\n\n> Does the validator make sure you are allowed to access master_bug?\n\nYes, it does.\n\n> What bothers me with this code is that I cannot create a new sighting \n> independently of what I'm currently doing in the bug I'm viewing. I think \n> creating a new sighting shouldn't commit what you were doing in the bug, \n> because \"Create Sighting\" != \"Save Changes\", and I didn't expect my changes to \n> be committed already; I just wanted to create a new sighting.\n\nAbsolutely, I agree. Originally I was thinking of having another form that I'd post to when you press the submit button, but unfortunately due to the restrictions in HTML you can't nest forms that post to different places. What I can do, however, is move this whole sightings ordeal up higher in the process_bug.cgi file to add the sighting and bail out of modifying the original bug. If you have other options I'd be glad to hear them.\n\n> Also, if a powerless user (without editbugs privs) tries to create a new\n> sighting, he gets a weird error message about a missing product. If the\n> powerless user shouldn't be allowed to create a new sighting, then the \"Create\n> Sighting\" button shouldn't be displayed.\n\nI hadn't considered this. I'll modify the templates to not even render the buttons if you can't modify the bug.\n\n> When there is no sighting, this table takes too much space. Most bugs won't\n> have any sighting and we shouldn't waste so much space. To partially fix this\n> problem, the \"Create Sighting\" problem should at least be on the same row as\n> the \"Create sighting with different description\" link.\n\nI can hide a lot of this table when there are no sightings available on the bug (so all you see is just that section with the \"Create Sighting\" button). I'll also move the description and sighting buttons onto the same line to save vertical space.\n\n> Also, its location seems weird to me. I would expect to see it at the very top\n> of the bug report, not above the timetracking fields, which makes the UI\n> really not nice. Also, I think the product, component and version should at\n> least be displayed in this table, else it's pretty useless.\n\nWhere in the bug report would you like to see the table? The original thought was just to keep it down with the rest of the tables (attachments, timetracking, etc).\n\nAs for having the product, component and version being displayed, that area off to the right is eventually going to hold all of the fields that the sighting is varied on. Having extra fields displayed there that the sighting is not varied on would be rather confusing. I know it looks weird now, but this is only really half of the stuff we planned on putting into the table. Definitely refer to the design proposal we have for this on bug 55970 as we have a full mock-up for how this will appear in the end. If you have any questions or concerns involving that document, I'd gladly hear them.", "bug_id": 706629, "tags": [], "count": 6, "id": 6290458, "is_private": false, "author": "rowebb@gmail.com", "creation_time": "2012-05-08T19:33:08Z", "time": "2012-05-08T19:33:08Z", "creator": "rowebb@gmail.com"}, {"tags": [], "bug_id": 706629, "text": "(In reply to Robert Webb from comment #6)\n> Absolutely, I agree. Originally I was thinking of having another form that\n> I'd post to when you press the submit button, but unfortunately due to the\n> restrictions in HTML you can't nest forms that post to different places.\n\nCouldn't you use JSON-RPC to create the sighting without leaving the current bug, and update the sighting table accordingly? I know this is much more work, but this would be the less surprising behavior.\n\n\n> Where in the bug report would you like to see the table? The original\n> thought was just to keep it down with the rest of the tables (attachments,\n> timetracking, etc).\n\nI was thinking to have it above the bug summary.\n\n\nI will have to re-read comments in bug 55970. I will do that once I have some time. :)", "raw_text": "(In reply to Robert Webb from comment #6)\n> Absolutely, I agree. Originally I was thinking of having another form that\n> I'd post to when you press the submit button, but unfortunately due to the\n> restrictions in HTML you can't nest forms that post to different places.\n\nCouldn't you use JSON-RPC to create the sighting without leaving the current bug, and update the sighting table accordingly? I know this is much more work, but this would be the less surprising behavior.\n\n\n> Where in the bug report would you like to see the table? The original\n> thought was just to keep it down with the rest of the tables (attachments,\n> timetracking, etc).\n\nI was thinking to have it above the bug summary.\n\n\nI will have to re-read comments in bug 55970. I will do that once I have some time. :)", "attachment_id": null, "author": "LpSolit@gmail.com", "creator": "LpSolit@gmail.com", "time": "2012-05-08T21:54:41Z", "creation_time": "2012-05-08T21:54:41Z", "is_private": false, "id": 6291057, "count": 7}, {"is_private": false, "count": 8, "id": 6291102, "author": "rowebb@gmail.com", "creator": "rowebb@gmail.com", "time": "2012-05-08T22:05:44Z", "creation_time": "2012-05-08T22:05:44Z", "raw_text": "Certainly, we could use JSON-RPC, though I mainly was going with how the rest of Bugzilla works. Are there any other pages that use this to make changes? How are errors handled? It just strikes me that JSON-RPC would be a much less expected behavior than submitting a form. However, if this is the direction Bugzilla is taking to become more Javascript oriented, I certainly don't mind implementing it in that way.\n\nSo for the sightings table to be above the bug summary, do you mean at the top of the page basically?\n\nI wouldn't bother reading through all those comments in bug 55970. The important thing is the Initial Sightings Design Doc. That has almost everything incorporated in it from the comments on the bug, just in a more distilled form.", "attachment_id": null, "tags": [], "text": "Certainly, we could use JSON-RPC, though I mainly was going with how the rest of Bugzilla works. Are there any other pages that use this to make changes? How are errors handled? It just strikes me that JSON-RPC would be a much less expected behavior than submitting a form. However, if this is the direction Bugzilla is taking to become more Javascript oriented, I certainly don't mind implementing it in that way.\n\nSo for the sightings table to be above the bug summary, do you mean at the top of the page basically?\n\nI wouldn't bother reading through all those comments in bug 55970. The important thing is the Initial Sightings Design Doc. That has almost everything incorporated in it from the comments on the bug, just in a more distilled form.", "bug_id": 706629}, {"is_private": false, "id": 8268314, "count": 9, "author": "rowebb@gmail.com", "creator": "rowebb@gmail.com", "creation_time": "2014-01-08T22:38:15Z", "time": "2014-01-08T22:38:15Z", "raw_text": "Byron or David, would either of you be available to follow up on this review? I've still got some outstanding questions that need answering, but I can provide a new patch as soon as they're covered.", "attachment_id": null, "text": "Byron or David, would either of you be available to follow up on this review? I've still got some outstanding questions that need answering, but I can provide a new patch as soon as they're covered.", "bug_id": 706629, "tags": []}, {"author": "rowebb@gmail.com", "creator": "rowebb@gmail.com", "creation_time": "2014-01-16T00:28:22Z", "time": "2014-01-16T00:28:22Z", "is_private": false, "count": 10, "id": 8295741, "tags": [], "text": "Created attachment 8360742\nCreate A Sighting From the Sightings Table diff v2.\n\nDavid, I just assigned the review to you but if you want to pass this onto Byron (or someone else who can do these), feel free. You may want to read up on the original proposal on bug 55970 as well.\n\nI've made the following changes:\n - You cannot create a sighting when editing multiple bugs (hacking your POST params won't force one to be created, we check for it).\n - When a sighting is created it doesn't edit the bug you're currently viewing.\n - When a sighting is created it uses the current state of the bug to be created (no more pulling in data from the POST params).\n - Correctly set visibility on sightings table; if you can't see the bug you won't see it in the sightings table.\n - If there are no sightings in the table you will only see the \"Create Sighting\" button, unless you're not logged in (then you see nothing).", "bug_id": 706629, "raw_text": "David, I just assigned the review to you but if you want to pass this onto Byron (or someone else who can do these), feel free. You may want to read up on the original proposal on bug 55970 as well.\n\nI've made the following changes:\n - You cannot create a sighting when editing multiple bugs (hacking your POST params won't force one to be created, we check for it).\n - When a sighting is created it doesn't edit the bug you're currently viewing.\n - When a sighting is created it uses the current state of the bug to be created (no more pulling in data from the POST params).\n - Correctly set visibility on sightings table; if you can't see the bug you won't see it in the sightings table.\n - If there are no sightings in the table you will only see the \"Create Sighting\" button, unless you're not logged in (then you see nothing).", "attachment_id": 8360742}, {"text": "Comment on attachment 8360742\nCreate A Sighting From the Sightings Table diff v2.\n\nsorry, but i don't have the time to do this review right now.", "bug_id": 706629, "tags": [], "attachment_id": 8360742, "raw_text": "sorry, but i don't have the time to do this review right now.", "creation_time": "2014-01-20T06:00:59Z", "time": "2014-01-20T06:00:59Z", "creator": "glob@mozilla.com", "author": "glob@mozilla.com", "id": 8308768, "count": 11, "is_private": false}, {"author": "rowebb@gmail.com", "creator": "rowebb@gmail.com", "time": "2014-01-27T18:35:33Z", "creation_time": "2014-01-27T18:35:33Z", "is_private": false, "count": 12, "id": 8337961, "tags": [], "bug_id": 706629, "text": "Chris is taking over these bugs from me. He should be available to make the requested changes and get the reviews updated.", "raw_text": "Chris is taking over these bugs from me. He should be available to make the requested changes and get the reviews updated.", "attachment_id": null}, {"author": "gerv@mozilla.org", "time": "2014-02-06T14:26:49Z", "creation_time": "2014-02-06T14:26:49Z", "creator": "gerv@mozilla.org", "count": 13, "id": 8382544, "is_private": false, "bug_id": 706629, "text": "Comment on attachment 8360742\nCreate A Sighting From the Sightings Table diff v2.\n\nHi Robert,\n\nI'm really sorry, but I don't really have time either :-( And I think reviewing this patch would impose an obligation to see the project through and review all the patches in the set, and I definitely don't have time for that. I can imagine this is quite frustrating for you; but Bugzilla is currently not replete with maintainers who have time on their hands :-|\n\nGerv", "tags": [], "raw_text": "Hi Robert,\n\nI'm really sorry, but I don't really have time either :-( And I think reviewing this patch would impose an obligation to see the project through and review all the patches in the set, and I definitely don't have time for that. I can imagine this is quite frustrating for you; but Bugzilla is currently not replete with maintainers who have time on their hands :-|\n\nGerv", "attachment_id": 8360742}, {"is_private": false, "id": 8383664, "count": 14, "creator": "LpSolit@gmail.com", "creation_time": "2014-02-06T17:27:36Z", "time": "2014-02-06T17:27:36Z", "author": "LpSolit@gmail.com", "attachment_id": 8360742, "raw_text": "Should stay in reviewers' radar.", "text": "Comment on attachment 8360742\nCreate A Sighting From the Sightings Table diff v2.\n\nShould stay in reviewers' radar.", "bug_id": 706629, "tags": []}, {"raw_text": "I'm a bit surprised that mkanat asked you to split the sightings implementation into so small pieces... Anyway, here is my review.\n\n\n>=== modified file 'process_bug.cgi'\n\n>+# Add a new sighting to the bug.\n>+if (defined $cgi->param('add_sighting')) {\n\nThis code should be in Bugzilla::Bug so that sightings can be created using the WebServices. It should be in $bug->create_sighting().\n\n\n>+    ThrowUserError('create_sighting_on_multiple_not_allowed')\n>+        if (scalar(@bug_objects) > 1);\n\nIf we are editing several bugs at once, simply ignore sightings. process_bug.cgi already has several |if ($cgi->param('id'))| to check that.\n\n\n>+    # Create a new bug with all of the same settings as this bug.\n>+    my %bug_params;\n>+    foreach my $field (Bugzilla::Bug->fields) {\n>+        $bug_params{$field} = $first_bug->{$field};\n>+    }\n\nWhy not using $first_bug->$field instead?\n\n\n>+    # Convert some IDs to objects.\n>+    $bug_params{'assigned_to'} = $first_bug->assigned_to;\n>+    $bug_params{'product'} = $first_bug->product;\n>+    $bug_params{'component'} = $first_bug->component;\n\nIf you use ->$field instead of ->{$field}, this code would be useless.\n\n\n>+    my @strip_fields = ('actual_time', 'classification', 'classification_id', 'dup_id',\n>+                        'resolution', 'see_also', 'bug_id');\n\nYou must also exclude the bug alias. Also, do we really want to copy the CC list and the dependency trees? This could spam a lot of people. What about the assignee? I don't have the original proposal in mind, so maybe these questions have already been answered elsewhere.\n\nYou should also list bug_status and reporter to make clear that we are going to override them later. I had to read the code carefully to understand what was going on here with these fields.\n\nThis makes me think: shouldn't the code be refactored a bit as it seems to share quite a lot of code with post_bug.cgi, especially the list of fields to clone?\n\n\n>+    foreach my $field (@strip_fields) {\n>+        delete $bug_params{$field} if exists $bug_params{$field};\n>+    }\n\nNo need to check for the existence of the key. Simply delete it.\n\n\n>+    $bug_params{'master_bug_id'} = $cgi->param('master_bug');\n\nYou should get master_bug_id from $first_bug->master_bug_id to avoid user trying to abuse sightings.\n\n\n>+    my $product = $user->can_enter_product($bug_params{'product'}, THROW_ERROR);\n\nIf the user is not allowed to create sightings in the current product, then no button should be displayed to create one.\n\n\n>+    $vars->{'id'} = $sighting->bug_id;\n\nNit: note that you can write $vars->{foo} instead of $vars->{'foo'} here and elsewhere.\n\n\n\n>=== modified file 'skins/standard/global.css'\n\n>+.bz_sighting_footer td {\n>+    text-align: left ! important;\n>+}\n\nYou shouldn't call !important. Else it's impossible for skins to override this. Also, with the move to HTML5, the master bug is badly aligned in the sighting table. This should also be fixed.\n\n\n\n>=== modified file 'template/en/default/global/user-error.html.tmpl'\n\n>+  [% ELSIF error == \"create_sighting_on_multiple_not_allowed\" %]\n>+    [% title = \"Creating a Sighting on Multiple Bugs is not Allowed\" %]\n>+    You may not create a sighting on multiple [% terms.bugs %] at once.\n\nThis error is no longer needed, see above (and \"Bugs\" was hardcoded in the title).\n\n\n\n>=== modified file 'template/en/default/sighting/list.html.tmpl'\n\n>+[% IF sightings.size > 0 OR user.id %]\n\nYou should also check user.can_enter_product in case the user is not allowed to create a bug in the current product.\n\n\n>+<input type=\"hidden\" name=\"master_bug\" value=\"[% master_bug.id FILTER html %]\">\n\nThis info is (should be) available from ->master_bug_id.\n\n\n>+    [% PROCESS render_sighting_row target = master_bug tag = \"th\" %]\n\nI really dislike passing HTML elements this way. This makes the code hard to read and parse. IMO, HTML elements should be hardcoded. This will let you fix the align problem mentioned above.\n\n\n>+      </span><br/>\n>+      <input id=\"add_sighting\" name=\"add_sighting\" type=\"submit\"\n>+             value=\"Create Sighting\"><br/>\n\nWrite <br> instead of <br/>. Bugzilla uses the HTML5 doctype, not XHTML.", "attachment_id": 8360742, "text": "Comment on attachment 8360742\nCreate A Sighting From the Sightings Table diff v2.\n\nI'm a bit surprised that mkanat asked you to split the sightings implementation into so small pieces... Anyway, here is my review.\n\n\n>=== modified file 'process_bug.cgi'\n\n>+# Add a new sighting to the bug.\n>+if (defined $cgi->param('add_sighting')) {\n\nThis code should be in Bugzilla::Bug so that sightings can be created using the WebServices. It should be in $bug->create_sighting().\n\n\n>+    ThrowUserError('create_sighting_on_multiple_not_allowed')\n>+        if (scalar(@bug_objects) > 1);\n\nIf we are editing several bugs at once, simply ignore sightings. process_bug.cgi already has several |if ($cgi->param('id'))| to check that.\n\n\n>+    # Create a new bug with all of the same settings as this bug.\n>+    my %bug_params;\n>+    foreach my $field (Bugzilla::Bug->fields) {\n>+        $bug_params{$field} = $first_bug->{$field};\n>+    }\n\nWhy not using $first_bug->$field instead?\n\n\n>+    # Convert some IDs to objects.\n>+    $bug_params{'assigned_to'} = $first_bug->assigned_to;\n>+    $bug_params{'product'} = $first_bug->product;\n>+    $bug_params{'component'} = $first_bug->component;\n\nIf you use ->$field instead of ->{$field}, this code would be useless.\n\n\n>+    my @strip_fields = ('actual_time', 'classification', 'classification_id', 'dup_id',\n>+                        'resolution', 'see_also', 'bug_id');\n\nYou must also exclude the bug alias. Also, do we really want to copy the CC list and the dependency trees? This could spam a lot of people. What about the assignee? I don't have the original proposal in mind, so maybe these questions have already been answered elsewhere.\n\nYou should also list bug_status and reporter to make clear that we are going to override them later. I had to read the code carefully to understand what was going on here with these fields.\n\nThis makes me think: shouldn't the code be refactored a bit as it seems to share quite a lot of code with post_bug.cgi, especially the list of fields to clone?\n\n\n>+    foreach my $field (@strip_fields) {\n>+        delete $bug_params{$field} if exists $bug_params{$field};\n>+    }\n\nNo need to check for the existence of the key. Simply delete it.\n\n\n>+    $bug_params{'master_bug_id'} = $cgi->param('master_bug');\n\nYou should get master_bug_id from $first_bug->master_bug_id to avoid user trying to abuse sightings.\n\n\n>+    my $product = $user->can_enter_product($bug_params{'product'}, THROW_ERROR);\n\nIf the user is not allowed to create sightings in the current product, then no button should be displayed to create one.\n\n\n>+    $vars->{'id'} = $sighting->bug_id;\n\nNit: note that you can write $vars->{foo} instead of $vars->{'foo'} here and elsewhere.\n\n\n\n>=== modified file 'skins/standard/global.css'\n\n>+.bz_sighting_footer td {\n>+    text-align: left ! important;\n>+}\n\nYou shouldn't call !important. Else it's impossible for skins to override this. Also, with the move to HTML5, the master bug is badly aligned in the sighting table. This should also be fixed.\n\n\n\n>=== modified file 'template/en/default/global/user-error.html.tmpl'\n\n>+  [% ELSIF error == \"create_sighting_on_multiple_not_allowed\" %]\n>+    [% title = \"Creating a Sighting on Multiple Bugs is not Allowed\" %]\n>+    You may not create a sighting on multiple [% terms.bugs %] at once.\n\nThis error is no longer needed, see above (and \"Bugs\" was hardcoded in the title).\n\n\n\n>=== modified file 'template/en/default/sighting/list.html.tmpl'\n\n>+[% IF sightings.size > 0 OR user.id %]\n\nYou should also check user.can_enter_product in case the user is not allowed to create a bug in the current product.\n\n\n>+<input type=\"hidden\" name=\"master_bug\" value=\"[% master_bug.id FILTER html %]\">\n\nThis info is (should be) available from ->master_bug_id.\n\n\n>+    [% PROCESS render_sighting_row target = master_bug tag = \"th\" %]\n\nI really dislike passing HTML elements this way. This makes the code hard to read and parse. IMO, HTML elements should be hardcoded. This will let you fix the align problem mentioned above.\n\n\n>+      </span><br/>\n>+      <input id=\"add_sighting\" name=\"add_sighting\" type=\"submit\"\n>+             value=\"Create Sighting\"><br/>\n\nWrite <br> instead of <br/>. Bugzilla uses the HTML5 doctype, not XHTML.", "bug_id": 706629, "tags": [], "count": 15, "id": 8457288, "is_private": false, "author": "LpSolit@gmail.com", "creation_time": "2014-02-24T23:23:25Z", "time": "2014-02-24T23:23:25Z", "creator": "LpSolit@gmail.com"}, {"attachment_id": 8397430, "raw_text": "I've made the following changes from the last diff:\n\n1. Added create_sighting to Bugzilla/Bug.pm\n2. Hide create sighting button if user can't create one\n3. Changed alignment of values within the sightings table\n4. ignore creating sightings when editing multiple bugs instead of throwing error\n\nI couldn't find any previous dialog about syncing the CC lists or dependency trees.  The original spec discusses how fields are synced on edit but not on creation.  Within our org we copy the CC field so that users can determine if they want to remain on the CC list or not.  This works better for us than requiring people to add themselves to the CC lists after the fact.\n\nI looked at refactoring code from post_bug.cgi but there seemed to be very little overlap related to the fields.  post_bug builds up the fields required to create a bug while create_sighting has all of these fields ready and removes the ones that no longer apply.", "text": "Created attachment 8397430\nCreate a sighting from the sightings table\n\nI've made the following changes from the last diff:\n\n1. Added create_sighting to Bugzilla/Bug.pm\n2. Hide create sighting button if user can't create one\n3. Changed alignment of values within the sightings table\n4. ignore creating sightings when editing multiple bugs instead of throwing error\n\nI couldn't find any previous dialog about syncing the CC lists or dependency trees.  The original spec discusses how fields are synced on edit but not on creation.  Within our org we copy the CC field so that users can determine if they want to remain on the CC list or not.  This works better for us than requiring people to add themselves to the CC lists after the fact.\n\nI looked at refactoring code from post_bug.cgi but there seemed to be very little overlap related to the fields.  post_bug builds up the fields required to create a bug while create_sighting has all of these fields ready and removes the ones that no longer apply.", "bug_id": 706629, "tags": [], "id": 8583956, "count": 16, "is_private": false, "creation_time": "2014-03-26T22:30:54Z", "time": "2014-03-26T22:30:54Z", "creator": "ckin2001+bugzilla@gmail.com", "author": "ckin2001+bugzilla@gmail.com"}, {"count": 17, "id": 8801751, "is_private": false, "time": "2014-05-16T11:13:20Z", "creation_time": "2014-05-16T11:13:20Z", "creator": "LpSolit@gmail.com", "author": "LpSolit@gmail.com", "attachment_id": 8397430, "raw_text": "Sorry, but I'm not involved in Bugzilla anymore.", "bug_id": 706629, "text": "Comment on attachment 8397430\nCreate a sighting from the sightings table\n\nSorry, but I'm not involved in Bugzilla anymore.", "tags": []}, {"is_private": false, "id": 11899010, "count": 18, "author": "dkl@mozilla.com", "creator": "dkl@mozilla.com", "creation_time": "2016-11-30T21:23:30Z", "time": "2016-11-30T21:23:30Z", "raw_text": "Sorry for squatting on this for so long. I am just too busy with other responsibilities to do a proper review of this. Also the code is undoubtedly bit-rotted and will need to be updated. Plus the sightings table branch was never merged. So we may need to start from square one on this and do it as a single patch.\n\ndkl", "attachment_id": 8397430, "tags": [], "bug_id": 706629, "text": "Comment on attachment 8397430\nCreate a sighting from the sightings table\n\nSorry for squatting on this for so long. I am just too busy with other responsibilities to do a proper review of this. Also the code is undoubtedly bit-rotted and will need to be updated. Plus the sightings table branch was never merged. So we may need to start from square one on this and do it as a single patch.\n\ndkl"}]}}, "comments": {}}