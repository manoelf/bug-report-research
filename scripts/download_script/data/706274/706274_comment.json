{"bugs": {"706274": {"comments": [{"creation_time": "2011-11-29T22:40:59Z", "author": "paul@oshannessy.com", "text": "This is one of the ideas Gavin & I discussed around making global app tabs (587873) a priority without being too hacky on the front end.\n\nThe idea being this: We have an app tab in window A and open window B. Window B should have the app tab. I can make that work with a lot of watching and then swapping docshells when the tab in window B is focused so it can be interacted with. My unfocused app tab just has a random url (currently about:apptabs because I needed something), so things like switch-to-tab (and so many others) which look at browser.currentURI are going to be wrong. Also, without watching for loads in the non-active tab, it would be programatically possible to tell the non-active tab to navigate to some page (while expecting it to act on the global app tab).\n\nSo ideally we would be able to have a mirrored docshell & whatever needed so that without having to change the surface, things \"just work\" underneath.", "tags": [], "time": "2011-11-29T22:40:59Z", "bug_id": 706274, "is_private": false, "creator": "paul@oshannessy.com", "count": 0, "id": 5880320, "attachment_id": null, "raw_text": "This is one of the ideas Gavin & I discussed around making global app tabs (587873) a priority without being too hacky on the front end.\n\nThe idea being this: We have an app tab in window A and open window B. Window B should have the app tab. I can make that work with a lot of watching and then swapping docshells when the tab in window B is focused so it can be interacted with. My unfocused app tab just has a random url (currently about:apptabs because I needed something), so things like switch-to-tab (and so many others) which look at browser.currentURI are going to be wrong. Also, without watching for loads in the non-active tab, it would be programatically possible to tell the non-active tab to navigate to some page (while expecting it to act on the global app tab).\n\nSo ideally we would be able to have a mirrored docshell & whatever needed so that without having to change the surface, things \"just work\" underneath."}, {"tags": [], "time": "2011-11-30T22:25:21Z", "bug_id": 706274, "text": "So what you want is to have a single docshell associated with multiple tabs, basically?  That is, the browser binding will operate on some other docshell, not the one actually created for the <browser> (but then still swap docshells on tab switch)?", "author": "bzbarsky@mit.edu", "creation_time": "2011-11-30T22:25:21Z", "count": 1, "creator": "bzbarsky@mit.edu", "is_private": false, "id": 5883593, "raw_text": "So what you want is to have a single docshell associated with multiple tabs, basically?  That is, the browser binding will operate on some other docshell, not the one actually created for the <browser> (but then still swap docshells on tab switch)?", "attachment_id": null}, {"count": 2, "bug_id": 706274, "is_private": false, "creator": "paul@oshannessy.com", "creation_time": "2011-11-30T23:03:30Z", "author": "paul@oshannessy.com", "text": "Yea I guess it could work like that, but I was envisioning it working without having to swap docshells - <browser>s would use this shared docshell, new tabs could be added to use the same docshell, tabs could be closed and so long as there was 1 tab still using it the docshell would hang around. I don't know how feasible that would be or what other challenges it would bring up, but that feels ideal to me.", "time": "2011-11-30T23:03:30Z", "tags": [], "attachment_id": null, "raw_text": "Yea I guess it could work like that, but I was envisioning it working without having to swap docshells - <browser>s would use this shared docshell, new tabs could be added to use the same docshell, tabs could be closed and so long as there was 1 tab still using it the docshell would hang around. I don't know how feasible that would be or what other challenges it would bring up, but that feels ideal to me.", "id": 5883707}, {"raw_text": "So the thing is that docshells are currently tied to a docshell tree which includes the chrome.  For example, window.close() in the last docshell in a window closes that window.  But maybe we don't want that for app tabs?\n\nIf we want to make the content-window-to-chrome-window one-to-many, we'll have to figure out all the ways they interact and probably change most of them....", "attachment_id": null, "id": 5883717, "count": 3, "is_private": false, "creator": "bzbarsky@mit.edu", "text": "So the thing is that docshells are currently tied to a docshell tree which includes the chrome.  For example, window.close() in the last docshell in a window closes that window.  But maybe we don't want that for app tabs?\n\nIf we want to make the content-window-to-chrome-window one-to-many, we'll have to figure out all the ways they interact and probably change most of them....", "bug_id": 706274, "tags": [], "time": "2011-11-30T23:06:33Z", "creation_time": "2011-11-30T23:06:33Z", "author": "bzbarsky@mit.edu"}, {"count": 4, "bug_id": 706274, "creator": "paul@oshannessy.com", "is_private": false, "tags": [], "time": "2011-12-07T23:56:31Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #3)\n> So the thing is that docshells are currently tied to a docshell tree which\n> includes the chrome.  For example, window.close() in the last docshell in a\n> window closes that window.  But maybe we don't want that for app tabs?\n\nMaybe not. Is that something we could maybe forward up to chrome first like we did with the link target stuff?\n\n> If we want to make the content-window-to-chrome-window one-to-many, we'll\n> have to figure out all the ways they interact and probably change most of\n> them....\n\nIs this a crazy idea? You don't seem like you're vehemently against something like this. Is this going to end up with (more) delicate code that in a year we regret ever writing it? (Dolske told me stories of print preview & issues with multiple views). Docshell & the content-chrome-window relationship are a bunch of black boxes to me so I don't have a good grasp on risk here.\n\nI think it would be good to get moving on this asap if possible, whichever route we go. I'm happy to talk more if you need more info. Like I said, I don't know much about all of this, so if this isn't something you or somebody else can jump on, I can start down the rabbit hole.", "author": "paul@oshannessy.com", "creation_time": "2011-12-07T23:56:31Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #3)\n> So the thing is that docshells are currently tied to a docshell tree which\n> includes the chrome.  For example, window.close() in the last docshell in a\n> window closes that window.  But maybe we don't want that for app tabs?\n\nMaybe not. Is that something we could maybe forward up to chrome first like we did with the link target stuff?\n\n> If we want to make the content-window-to-chrome-window one-to-many, we'll\n> have to figure out all the ways they interact and probably change most of\n> them....\n\nIs this a crazy idea? You don't seem like you're vehemently against something like this. Is this going to end up with (more) delicate code that in a year we regret ever writing it? (Dolske told me stories of print preview & issues with multiple views). Docshell & the content-chrome-window relationship are a bunch of black boxes to me so I don't have a good grasp on risk here.\n\nI think it would be good to get moving on this asap if possible, whichever route we go. I'm happy to talk more if you need more info. Like I said, I don't know much about all of this, so if this isn't something you or somebody else can jump on, I can start down the rabbit hole.", "attachment_id": null, "id": 5899021}, {"attachment_id": null, "raw_text": "> Is that something we could maybe forward up to chrome first like we did with the link\n> target stuff?\n\nI can't recall what we did with link targets, but we'd need to do something with all users of GetParent on docshells, with web progress listeners, with treeowners, and so forth.\n\n> You don't seem like you're vehemently against something like this. \n\nWell, I'm not vehemently opposed to general rearchitecture of docshell, no.  It won't be a short-term project, though.\n\n> Is this going to end up with (more) delicate code that in a year we regret ever\n> writing it? \n\nIf we try to do a quick-and-dirty approach, almost certainly.\n\nBasically, the proposal is to change a bunch of docshell invariants.  It can be done, if we're careful, but it'll be a good bit of work and we need a good plan for what the new invariants will be and whatnot.", "id": 5899208, "is_private": false, "creator": "bzbarsky@mit.edu", "count": 5, "creation_time": "2011-12-08T01:01:53Z", "author": "bzbarsky@mit.edu", "text": "> Is that something we could maybe forward up to chrome first like we did with the link\n> target stuff?\n\nI can't recall what we did with link targets, but we'd need to do something with all users of GetParent on docshells, with web progress listeners, with treeowners, and so forth.\n\n> You don't seem like you're vehemently against something like this. \n\nWell, I'm not vehemently opposed to general rearchitecture of docshell, no.  It won't be a short-term project, though.\n\n> Is this going to end up with (more) delicate code that in a year we regret ever\n> writing it? \n\nIf we try to do a quick-and-dirty approach, almost certainly.\n\nBasically, the proposal is to change a bunch of docshell invariants.  It can be done, if we're careful, but it'll be a good bit of work and we need a good plan for what the new invariants will be and whatnot.", "time": "2011-12-08T01:01:53Z", "tags": [], "bug_id": 706274}, {"attachment_id": null, "raw_text": "What happened with this? It seems to be have completely stalled?", "id": 6638375, "creator": "pwd.mozilla@yahoo.co.uk", "is_private": false, "author": "pwd.mozilla@yahoo.co.uk", "creation_time": "2012-09-16T12:02:09Z", "time": "2012-09-16T12:02:09Z", "tags": [], "text": "What happened with this? It seems to be have completely stalled?", "count": 6, "bug_id": 706274}]}}, "comments": {}}