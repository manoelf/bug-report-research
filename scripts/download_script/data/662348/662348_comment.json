{"bugs": {"662348": {"comments": [{"creator": "jonas@sicking.cc", "author": "jonas@sicking.cc", "count": 0, "text": "We currently mark all idl methods as using stdcall calling convention on windows. This has several downsides:\n\n1. Slower\n2. Forces us to use ugly macros when declaring and implementing idl methods\n3. Makes it harder to migrate between .h and .idl interfaces\n4. If you get the macro magic wrong, it'll likely only break on one platform\n\nSo we should stop doing this.\n\n\nOn win32 this seems very easy. All we need to do is remove this line:\n\nhttp://mxr.mozilla.org/mozilla-central/source/xpcom/reflect/xptcall/src/md/win32/xptcinvoke.cpp#99\n\nTechnically, moving off of stdcall means that the caller now has to do the stack cleanup as I understand it. However for anything that goes through xptcall, no cleanup should be needed other than adjusting esp. However that already happens on this line:\n\nhttp://mxr.mozilla.org/mozilla-central/source/xpcom/reflect/xptcall/src/md/win32/xptcinvoke.cpp#103\n\n\nI'm trying to grokk the win64 code, but there's a number of things that are looking weird to me so I'm gonna grab someone on irc to get some help.", "id": 5515772, "bug_id": 662348, "creation_time": "2011-06-06T19:46:58Z", "is_private": false, "time": "2011-06-06T19:46:58Z", "attachment_id": null, "raw_text": "We currently mark all idl methods as using stdcall calling convention on windows. This has several downsides:\n\n1. Slower\n2. Forces us to use ugly macros when declaring and implementing idl methods\n3. Makes it harder to migrate between .h and .idl interfaces\n4. If you get the macro magic wrong, it'll likely only break on one platform\n\nSo we should stop doing this.\n\n\nOn win32 this seems very easy. All we need to do is remove this line:\n\nhttp://mxr.mozilla.org/mozilla-central/source/xpcom/reflect/xptcall/src/md/win32/xptcinvoke.cpp#99\n\nTechnically, moving off of stdcall means that the caller now has to do the stack cleanup as I understand it. However for anything that goes through xptcall, no cleanup should be needed other than adjusting esp. However that already happens on this line:\n\nhttp://mxr.mozilla.org/mozilla-central/source/xpcom/reflect/xptcall/src/md/win32/xptcinvoke.cpp#103\n\n\nI'm trying to grokk the win64 code, but there's a number of things that are looking weird to me so I'm gonna grab someone on irc to get some help.", "tags": []}, {"time": "2011-06-06T19:49:34Z", "raw_text": "There will be code that interfaces with MS-COM that will need to be fixed here.", "attachment_id": null, "tags": [], "creator": "khuey@kylehuey.com", "count": 1, "text": "There will be code that interfaces with MS-COM that will need to be fixed here.", "author": "khuey@kylehuey.com", "bug_id": 662348, "id": 5515777, "is_private": false, "creation_time": "2011-06-06T19:49:34Z"}, {"creation_time": "2011-06-06T21:13:16Z", "is_private": false, "creator": "khuey@kylehuey.com", "tags": [], "attachment_id": null, "id": 5516011, "bug_id": 662348, "text": "(In reply to comment #1)\n> There will be code that interfaces with MS-COM that will need to be fixed\n> here.\n\nOr maybe not, looks like it all uses STDMETHOD and whatnot.", "count": 2, "author": "khuey@kylehuey.com", "time": "2011-06-06T21:13:16Z", "raw_text": "(In reply to comment #1)\n> There will be code that interfaces with MS-COM that will need to be fixed\n> here.\n\nOr maybe not, looks like it all uses STDMETHOD and whatnot."}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-06-07T00:44:38Z", "creator": "jonas@sicking.cc", "time": "2011-06-07T00:44:38Z", "raw_text": "So it turns out that we have objects with implement both nsISupports and IUnknown in the tree. This makes it impossible to do this until we change that :(\n\nAt the very least this class does this:\nhttp://mxr.mozilla.org/mozilla-central/source/accessible/src/msaa/nsAccessNodeWrap.h", "bug_id": 662348, "id": 5516570, "text": "So it turns out that we have objects with implement both nsISupports and IUnknown in the tree. This makes it impossible to do this until we change that :(\n\nAt the very least this class does this:\nhttp://mxr.mozilla.org/mozilla-central/source/accessible/src/msaa/nsAccessNodeWrap.h", "count": 3, "author": "jonas@sicking.cc"}, {"tags": [], "time": "2011-06-07T00:46:38Z", "attachment_id": null, "raw_text": "Ah, a11y does it.  I knew there was something.\n\nI think you can do this, you just need to split the COM object into separate C++ objects.  Implement the MS-COM ifaces on a tearoff and fwd to the main object.", "bug_id": 662348, "id": 5516574, "creation_time": "2011-06-07T00:46:38Z", "is_private": false, "creator": "khuey@kylehuey.com", "author": "khuey@kylehuey.com", "text": "Ah, a11y does it.  I knew there was something.\n\nI think you can do this, you just need to split the COM object into separate C++ objects.  Implement the MS-COM ifaces on a tearoff and fwd to the main object.", "count": 4}, {"raw_text": "__stdcall is noop on Win64 (both for IA64 and x64) because there's only one calling convention on those platforms.\nhttp://msdn.microsoft.com/en-us/library/zxk0tw93.aspx", "attachment_id": null, "time": "2011-06-07T05:35:41Z", "tags": [], "count": 5, "text": "__stdcall is noop on Win64 (both for IA64 and x64) because there's only one calling convention on those platforms.\nhttp://msdn.microsoft.com/en-us/library/zxk0tw93.aspx", "author": "VYV03354@nifty.ne.jp", "creator": "VYV03354@nifty.ne.jp", "is_private": false, "creation_time": "2011-06-07T05:35:41Z", "bug_id": 662348, "id": 5516883}, {"id": 5521476, "bug_id": 662348, "creation_time": "2011-06-09T01:25:08Z", "is_private": false, "creator": "jonas@sicking.cc", "count": 6, "text": "Created attachment 538157\nThis'll do it\n\nI need to additionally fix the mingw stubs I think. Will look at that once the a11y code is fixed.", "author": "jonas@sicking.cc", "tags": [], "time": "2011-06-09T01:25:08Z", "raw_text": "I need to additionally fix the mingw stubs I think. Will look at that once the a11y code is fixed.", "attachment_id": 538157}]}}, "comments": {}}