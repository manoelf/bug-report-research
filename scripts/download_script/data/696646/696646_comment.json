{"bugs": {"696646": {"comments": [{"attachment_id": null, "raw_text": "If a page (A) redirects to another page (B) with status 301, this redirect response is cached. If, at a later date, a change in policy means the old redirect is removed, and B instead redirects to A, the browser will follow both the old and the new redirect, creating a loop.\n\nFirefox will detect this loop, and display a \"this page is redirecting improperly\" error, but the problem may actually be resolved on the server.\n\nWould it be possible, on detecting a redirect loop, to suspend the cache, to see if the loop has actually been resolved by the server maintainer.\n\nIn other words, current behaviour is something like this:\nLoad B -> Load A [from cache] -> Load B [from cache] #LOOP DETECTED\nThe additional step would be:\nLoad B [skip cache] -> Load A [skip cache] #200 SUCCESS\n\n(I've written more on this here: http://rwec.co.uk/q/cached-redirs)", "id": 5799430, "is_private": false, "creator": "rowan.collins@gmail.com", "count": 0, "creation_time": "2011-10-23T16:20:27Z", "author": "rowan.collins@gmail.com", "text": "If a page (A) redirects to another page (B) with status 301, this redirect response is cached. If, at a later date, a change in policy means the old redirect is removed, and B instead redirects to A, the browser will follow both the old and the new redirect, creating a loop.\n\nFirefox will detect this loop, and display a \"this page is redirecting improperly\" error, but the problem may actually be resolved on the server.\n\nWould it be possible, on detecting a redirect loop, to suspend the cache, to see if the loop has actually been resolved by the server maintainer.\n\nIn other words, current behaviour is something like this:\nLoad B -> Load A [from cache] -> Load B [from cache] #LOOP DETECTED\nThe additional step would be:\nLoad B [skip cache] -> Load A [skip cache] #200 SUCCESS\n\n(I've written more on this here: http://rwec.co.uk/q/cached-redirs)", "time": "2011-10-23T16:20:27Z", "tags": [], "bug_id": 696646}, {"id": 11197423, "attachment_id": null, "raw_text": "", "author": "mcmanus@ducksong.com", "creation_time": "2016-02-26T02:46:07Z", "time": "2016-02-26T02:46:07Z", "tags": [], "text": "*** Bug 1225593 has been marked as a duplicate of this bug. ***", "creator": "mcmanus@ducksong.com", "is_private": false, "bug_id": 696646, "count": 1}, {"raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "attachment_id": null, "id": 12658303, "count": 2, "creator": "bug-husbandry-bot@mozilla.bugs", "is_private": false, "bug_id": 696646, "time": "2017-09-13T18:37:33Z", "tags": [], "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "author": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2017-09-13T18:37:33Z"}, {"bug_id": 696646, "count": 3, "id": 12659857, "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "attachment_id": null, "tags": [], "time": "2017-09-13T18:49:38Z", "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "author": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2017-09-13T18:49:38Z", "creator": "bug-husbandry-bot@mozilla.bugs", "is_private": false}, {"raw_text": "I can confirm this.\n\nI encountered this with a single-sign-on system. A server issues a 301 redirect to the single-sign-on system, then the SSO system redirects back to the original server after authenticating...but firefox has the 301 redirect cached, so it redirects right back to the SSO system. Disabling the cache (using the checkbox on the network console) forces Firefox to actually make the second request to the server, and get back a non-redirect.\n\nThe original server really shouldn't use a 301 redirect for this, but nonetheless, Firefox ought to handle this case.\n\nNote that Chrome works on the same site.", "attachment_id": null, "id": 14490456, "creator": "josh@joshtriplett.org", "is_private": false, "tags": [], "time": "2019-11-15T19:11:25Z", "text": "I can confirm this.\n\nI encountered this with a single-sign-on system. A server issues a 301 redirect to the single-sign-on system, then the SSO system redirects back to the original server after authenticating...but firefox has the 301 redirect cached, so it redirects right back to the SSO system. Disabling the cache (using the checkbox on the network console) forces Firefox to actually make the second request to the server, and get back a non-redirect.\n\nThe original server really shouldn't use a 301 redirect for this, but nonetheless, Firefox ought to handle this case.\n\nNote that Chrome works on the same site.", "author": "josh@joshtriplett.org", "creation_time": "2019-11-15T19:11:25Z", "count": 4, "bug_id": 696646}]}}, "comments": {}}