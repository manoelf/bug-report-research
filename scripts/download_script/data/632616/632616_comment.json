{"bugs": {"632616": {"comments": [{"creation_time": "2011-02-09T00:38:51Z", "author": "ted@mielczarek.org", "text": "In bug 631645, Jeff pointed out a crash report where some frames had missing source file names. Copy/pasting some investigation from that report:\n\nThe missing source file bit is interesting, the line in the raw dump looks\nlike:\n0|5|XUL|mozilla::layers::LayerManagerOGL::Initialize|hg:hg.mozilla.org/mozilla-central::1c2d53a2dcfb|1817|0xe\n\nso somehow we lost the filename when we were mangling it? That's also claiming\nit's on line 1817, and LayerManagerOGL.cpp doesn't have that many lines, so it\nmight be something that got inlined. I'll have to look more closely at the\nsymbol file.\n\nOk, so the missing source file is:\nFILE 524 ../../dist/include/GLContext.h\n\nI guess we shouldn't mangle that path into an empty file, so that's a bug, but\nI also don't know why dump_syms spits out these relative paths. Even if we\ncould do something smarter, what's that path relative to? Is that really what's\nin the debug info? If so, how are tools supposed to resolve that filename?\n\nI've morphed that bug to cover the fact that dump_syms spits out relative pathnames, which are hard to do anything useful with, and this bug will be about fixing symbolstore.py to at least not mangle the filename out of existence in this case.", "creator": "ted@mielczarek.org", "id": 5264917, "attachment_id": null, "count": 0, "bug_id": 632616, "raw_text": "In bug 631645, Jeff pointed out a crash report where some frames had missing source file names. Copy/pasting some investigation from that report:\n\nThe missing source file bit is interesting, the line in the raw dump looks\nlike:\n0|5|XUL|mozilla::layers::LayerManagerOGL::Initialize|hg:hg.mozilla.org/mozilla-central::1c2d53a2dcfb|1817|0xe\n\nso somehow we lost the filename when we were mangling it? That's also claiming\nit's on line 1817, and LayerManagerOGL.cpp doesn't have that many lines, so it\nmight be something that got inlined. I'll have to look more closely at the\nsymbol file.\n\nOk, so the missing source file is:\nFILE 524 ../../dist/include/GLContext.h\n\nI guess we shouldn't mangle that path into an empty file, so that's a bug, but\nI also don't know why dump_syms spits out these relative paths. Even if we\ncould do something smarter, what's that path relative to? Is that really what's\nin the debug info? If so, how are tools supposed to resolve that filename?\n\nI've morphed that bug to cover the fact that dump_syms spits out relative pathnames, which are hard to do anything useful with, and this bug will be about fixing symbolstore.py to at least not mangle the filename out of existence in this case.", "tags": [], "is_private": false, "time": "2011-02-09T00:38:51Z"}, {"raw_text": "Bug 663330 is perhaps another example, per ted.", "is_private": false, "tags": [], "creation_time": "2011-06-10T12:21:18Z", "attachment_id": null, "id": 5524686, "text": "Bug 663330 is perhaps another example, per ted.", "bug_id": 632616, "count": 1, "time": "2011-06-10T12:21:18Z", "creator": "vseerror@lehigh.edu", "author": "vseerror@lehigh.edu"}, {"raw_text": "I remember seeing this before a while ago. I think I concluded (although I'm not sure I wrote it down in a bug :-( ) that when we got a relative source file, there was some sort of carriage return reset.\n\nSo taking the case from bug 663330, it was something like this:\n\nhg:hg.mozilla.org/releases/mozilla-miramar:.h:c93fe6829c74|106|0x0\n ../../../mailnews/imap/src/nsIMAPBodyShell.h\n\nThe first line being what shows up in the raw dump. The second line being the source file.\n\nYou can see that the hg section somehow overwrites the source file section, but only when the source file is relative. When the source file is non-relative, it appears appended onto the hg section.", "is_private": false, "tags": [], "creation_time": "2011-06-10T12:26:11Z", "id": 5524689, "attachment_id": null, "text": "I remember seeing this before a while ago. I think I concluded (although I'm not sure I wrote it down in a bug :-( ) that when we got a relative source file, there was some sort of carriage return reset.\n\nSo taking the case from bug 663330, it was something like this:\n\nhg:hg.mozilla.org/releases/mozilla-miramar:.h:c93fe6829c74|106|0x0\n ../../../mailnews/imap/src/nsIMAPBodyShell.h\n\nThe first line being what shows up in the raw dump. The second line being the source file.\n\nYou can see that the hg section somehow overwrites the source file section, but only when the source file is relative. When the source file is non-relative, it appears appended onto the hg section.", "bug_id": 632616, "count": 2, "time": "2011-06-10T12:26:11Z", "creator": "standard8@mozilla.com", "author": "standard8@mozilla.com"}, {"author": "ted@mielczarek.org", "creator": "ted@mielczarek.org", "count": 3, "bug_id": 632616, "time": "2011-06-10T12:34:05Z", "creation_time": "2011-06-10T12:34:05Z", "id": 5524692, "attachment_id": null, "text": "comment 0 shows an example where the filename got elided completely. I hadn't seen this other failure mode, but I guess it's another way to fail. Fixing bug 631645 would probably fix the underlying problem, but that's a bit harder.", "raw_text": "comment 0 shows an example where the filename got elided completely. I hadn't seen this other failure mode, but I guess it's another way to fail. Fixing bug 631645 would probably fix the underlying problem, but that's a bit harder.", "is_private": false, "tags": []}, {"time": "2011-06-10T17:48:43Z", "bug_id": 632616, "count": 4, "creator": "standard8@mozilla.com", "author": "standard8@mozilla.com", "tags": [], "is_private": false, "raw_text": "comment 0 probably just means that the filename got overwritten completely, I think its the same failure mode somehow triggered by the relative strings.\n\nDoes python or some pipe stuff handle \"..\" specially or something?", "text": "comment 0 probably just means that the filename got overwritten completely, I think its the same failure mode somehow triggered by the relative strings.\n\nDoes python or some pipe stuff handle \"..\" specially or something?", "attachment_id": null, "id": 5525375, "creation_time": "2011-06-10T17:48:43Z"}, {"creation_time": "2011-06-10T17:51:17Z", "attachment_id": null, "id": 5525387, "text": "All filenames go through this function for munging:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/tools/symbolstore.py#310\n\nIt's probably just a bug there.", "raw_text": "All filenames go through this function for munging:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/tools/symbolstore.py#310\n\nIt's probably just a bug there.", "is_private": false, "tags": [], "creator": "ted@mielczarek.org", "author": "ted@mielczarek.org", "bug_id": 632616, "count": 5, "time": "2011-06-10T17:51:17Z"}, {"author": "ted@mielczarek.org", "creator": "ted@mielczarek.org", "time": "2011-07-18T15:39:02Z", "count": 6, "bug_id": 632616, "text": "*** Bug 623593 has been marked as a duplicate of this bug. ***", "id": 5596566, "attachment_id": null, "creation_time": "2011-07-18T15:39:02Z", "tags": [], "is_private": false, "raw_text": ""}, {"bug_id": 632616, "raw_text": "", "count": 7, "time": "2012-05-23T19:29:56Z", "tags": [], "is_private": false, "creation_time": "2012-05-23T19:29:56Z", "text": "*** Bug 757821 has been marked as a duplicate of this bug. ***", "creator": "ted@mielczarek.org", "attachment_id": null, "id": 6332210, "author": "ted@mielczarek.org"}, {"author": "ted@mielczarek.org", "creator": "ted@mielczarek.org", "count": 8, "bug_id": 632616, "time": "2012-05-23T19:36:15Z", "creation_time": "2012-05-23T19:36:15Z", "attachment_id": null, "id": 6332241, "text": "Oh, I found the bug!\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/tools/symbolstore.py#288\n\nIsInDir does an abspath on the filename, but we use the original filename to strip off the srcdir, so relative paths like ../dist/include/whatever.h return true from IsInDir, but then get mostly or completely stripped out because they're not longer than the srcdir length...", "raw_text": "Oh, I found the bug!\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/tools/symbolstore.py#288\n\nIsInDir does an abspath on the filename, but we use the original filename to strip off the srcdir, so relative paths like ../dist/include/whatever.h return true from IsInDir, but then get mostly or completely stripped out because they're not longer than the srcdir length...", "is_private": false, "tags": []}, {"author": "ted@mielczarek.org", "id": 6334926, "attachment_id": 626834, "creator": "ted@mielczarek.org", "text": "Created attachment 626834\nfix symbolstore.py's handling of relative paths\n\n3-line fix + a unit test. Tagging catlee for review since I don't really have any peers on this code and it's just Python.", "creation_time": "2012-05-24T16:00:04Z", "is_private": false, "tags": [], "time": "2012-05-24T16:00:04Z", "count": 9, "raw_text": "3-line fix + a unit test. Tagging catlee for review since I don't really have any peers on this code and it's just Python.", "bug_id": 632616}, {"text": "Comment on attachment 626834\nfix symbolstore.py's handling of relative paths\n\nReview of attachment 626834:\n-----------------------------------------------------------------\n\nwould test-symbolstore.py be a more appropriate name?", "attachment_id": 626834, "id": 6338039, "creation_time": "2012-05-25T12:49:13Z", "tags": [], "is_private": false, "raw_text": "Review of attachment 626834:\n-----------------------------------------------------------------\n\nwould test-symbolstore.py be a more appropriate name?", "creator": "catlee@mozilla.com", "author": "catlee@mozilla.com", "time": "2012-05-25T12:49:13Z", "bug_id": 632616, "count": 10}, {"creator": "ted@mielczarek.org", "author": "ted@mielczarek.org", "bug_id": 632616, "count": 11, "time": "2012-05-25T13:08:57Z", "creation_time": "2012-05-25T13:08:57Z", "text": "I was following the trend in http://mxr.mozilla.org/mozilla-central/source/config/tests/. I almost put the test there, but I wanted to keep it near the code.", "id": 6338095, "attachment_id": null, "raw_text": "I was following the trend in http://mxr.mozilla.org/mozilla-central/source/config/tests/. I almost put the test there, but I wanted to keep it near the code.", "tags": [], "is_private": false}, {"tags": [], "is_private": false, "time": "2012-05-25T17:46:38Z", "count": 12, "bug_id": 632616, "raw_text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/4566522a1bfd", "author": "ted@mielczarek.org", "text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/4566522a1bfd", "creator": "ted@mielczarek.org", "id": 6338976, "attachment_id": null, "creation_time": "2012-05-25T17:46:38Z"}, {"text": "Backed out because the tests broke on mac:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/120561214943", "creator": "ted@mielczarek.org", "id": 6339425, "attachment_id": null, "author": "ted@mielczarek.org", "creation_time": "2012-05-25T19:51:52Z", "time": "2012-05-25T19:51:52Z", "tags": [], "is_private": false, "bug_id": 632616, "raw_text": "Backed out because the tests broke on mac:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/120561214943", "count": 13}, {"author": "ted@mielczarek.org", "creator": "ted@mielczarek.org", "count": 14, "bug_id": 632616, "time": "2012-05-30T13:36:32Z", "creation_time": "2012-05-30T13:36:32Z", "text": "I figured out why the test broke on mac. tempfile.mktempd() gives you a folder in /var/folders/..., but /var is a symlink to /private/var. So if you chdir to that folder and call os.getcwd(), you get /private/var/folders/...\n\nI have a patch to fix it, but it touches a bunch of other things in symbolstore.py, so it's kind of ugly. I think the changes are good for correctness, but they're a little invasive.", "attachment_id": null, "id": 6348317, "raw_text": "I figured out why the test broke on mac. tempfile.mktempd() gives you a folder in /var/folders/..., but /var is a symlink to /private/var. So if you chdir to that folder and call os.getcwd(), you get /private/var/folders/...\n\nI have a patch to fix it, but it touches a bunch of other things in symbolstore.py, so it's kind of ugly. I think the changes are good for correctness, but they're a little invasive.", "tags": [], "is_private": false}]}}, "comments": {}}