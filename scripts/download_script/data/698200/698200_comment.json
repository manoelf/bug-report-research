{"comments": {}, "bugs": {"698200": {"comments": [{"id": 5813299, "attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928134238\n\nSteps to reproduce:\n\nI have an HTML5 page roughly structured as follows:\n\n<!doctype html>  \n<html>  \n<head>\n<script type=\"text/javascript\" src=\"jquery.js\"></script>      \n<style>\n   section { display: block; }\n   body.popup section { display: none; }\n   aside { display: none; }\n   body.popup aside { display: block; }\n   textarea { width: 100% }\n</style>\n</head>\n<body>\n    <a href=\"javascript:$('body').toggleClass('popup');\">Toggle</a>\n   <section><textarea onresize=\"alert('resized');\">123345</textarea>\n   <aside>I'm a popup</aside>\n</body>\n</html>\n\n\n\n\nActual results:\n\nAdding popup to body.class (i.e. hiding the section) triggers the textarea.onresize event as the textarea.width is forced to 100px.  Removing popup redisplays the section and properly resets the textarea.width (e.g. to 800px) but does not trigger the resize.\n\n\nExpected results:\n\nMinimally, I would expect the resize to trigger symmetrically.  If it is to fire on hide (because textarea.width changes) then it should fire upon show.\n\nPreferably, the width should not change on a show/hide and the resize event should thus not trigger.  Display:none should only affect whether the rendering engine includes an element in calculating how to display other elements.  The current approach of setting widths and heights to arbitrary values not dictated by the CSS often requires hacks in the JavaScript to calculate sizing after an object is shown (rather than before).", "creation_time": "2011-10-29T15:44:32Z", "author": "webmaster@loudthink.com", "text": "User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928134238\n\nSteps to reproduce:\n\nI have an HTML5 page roughly structured as follows:\n\n<!doctype html>  \n<html>  \n<head>\n<script type=\"text/javascript\" src=\"jquery.js\"></script>      \n<style>\n   section { display: block; }\n   body.popup section { display: none; }\n   aside { display: none; }\n   body.popup aside { display: block; }\n   textarea { width: 100% }\n</style>\n</head>\n<body>\n    <a href=\"javascript:$('body').toggleClass('popup');\">Toggle</a>\n   <section><textarea onresize=\"alert('resized');\">123345</textarea>\n   <aside>I'm a popup</aside>\n</body>\n</html>\n\n\n\n\nActual results:\n\nAdding popup to body.class (i.e. hiding the section) triggers the textarea.onresize event as the textarea.width is forced to 100px.  Removing popup redisplays the section and properly resets the textarea.width (e.g. to 800px) but does not trigger the resize.\n\n\nExpected results:\n\nMinimally, I would expect the resize to trigger symmetrically.  If it is to fire on hide (because textarea.width changes) then it should fire upon show.\n\nPreferably, the width should not change on a show/hide and the resize event should thus not trigger.  Display:none should only affect whether the rendering engine includes an element in calculating how to display other elements.  The current approach of setting widths and heights to arbitrary values not dictated by the CSS often requires hacks in the JavaScript to calculate sizing after an object is shown (rather than before).", "tags": [], "bug_id": 698200, "time": "2011-10-29T15:44:32Z", "is_private": false, "creator": "webmaster@loudthink.com", "count": 0}]}}}