{"comments": {}, "bugs": {"626845": {"comments": [{"id": 5209012, "text": "While developing a filter action for FiltaQuilla, I came across this. I do not need FiltaQuilla to reproduce:\n\nSTR:\n\n1) Setup an IMAP account, set option to not save messages locally\n2) Turn off any automatic marking of message as read\n3) Send yourself an IMAP message, but do not try to open it.\n4) Invoke \"Save as\" for the message by right clicking the message to avoid predownloading the body.\n\nExpected results: message remains unread\nActual results\" message is marked read.\n\nThis is fairly rare in normal usage, but is a serious issue for a filter action that saves messages as a file invoking SaveMessageToDisk  The action to set the message as read is being invoked here:\n\n>\tmsgdb.dll!nsMsgDatabase::MarkHdrReadInDB(nsIMsgDBHdr * msgHdr=0x05852e28, int bRead=0x00000001, nsIDBChangeListener * instigator=0x00000000)  Line 1975\tC++\n \tmsgdb.dll!nsMsgDatabase::MarkHdrRead(nsIMsgDBHdr * msgHdr=0x05852e28, int bRead=0x00000001, nsIDBChangeListener * instigator=0x00000000)  Line 2430 + 0x1c bytes\tC++\n \tmsgimap.dll!nsImapMailFolder::NotifyMessageFlagsFromHdr(nsIMsgDBHdr * dbHdr=0x05852e28, unsigned int msgKey=0x00000cd9, unsigned int flags=0x00000021)  Line 4751\tC++\n \tmsgimap.dll!nsImapMailFolder::NotifyMessageFlags(unsigned int aFlags=0x00000021, unsigned int aMsgKey=0x00000cd9, unsigned __int64 aHighestModSeq=0x00000000000000a3)  Line 4814\tC++\n \txpcom_core.dll!NS_InvokeByIndex_P(nsISupports * that=0x0360ded0, unsigned int methodIndex=0x00000008, unsigned int paramCount=0x00000003, nsXPTCVariant * params=0x099fdfe0)  Line 103\tC++\n \txpcom_core.dll!nsProxyObjectCallInfo::Run()  Line 181 + 0x2d bytes\tC++\n \txpcom_core.dll!nsThread::ProcessNextEvent(int mayWait=0x00000001, int * result=0x0023f278)  Line 527 + 0x19 bytes\tC++\n \txpcom_core.dll!NS_ProcessNextEvent_P(nsIThread * thread=0x00488fb0, int mayWait=0x00000001)  Line 250 + 0x16 bytes\tC++\n \tgkwidget.dll!nsBaseAppShell::Run()  Line 177 + 0xc bytes\tC++\n\n\nImap thread looks like:\n\n \tntdll.dll!77c764f4() \t\n \t[Frames below may be incorrect and/or missing, no symbols loaded for ntdll.dll]\t\n \tntdll.dll!77c75e8c() \t\n \tKernelBase.dll!7603179c() \t\n>\txpcom_core.dll!nsAutoLockBase::nsAutoLockBase(void * addr=0x05db8b50, nsAutoLockBase::nsAutoLockType type=0xffffffff)  Line 327 + 0x13 bytes\tC++\n \txpcom_core.dll!nsAutoMonitor::Wait(unsigned int interval=0xffffffff)  Line 340 + 0x11 bytes\tC++\n \txpcom_core.dll!nsEventQueue::GetEvent(int mayWait=0x00000001, nsIRunnable * * result=0x07adf128)  Line 86\tC++\n \txpcom_core.dll!nsThread::nsChainedEventQueue::GetEvent(int mayWait=0x00000001, nsIRunnable * * event=0x07adf128)  Line 113\tC++\n \txpcom_core.dll!nsThread::ProcessNextEvent(int mayWait=0x00000001, int * result=0x07adf150)  Line 521 + 0x49 bytes\tC++\n \txpcom_core.dll!NS_ProcessNextEvent_P(nsIThread * thread=0x05853f80, int mayWait=0x00000001)  Line 250 + 0x16 bytes\tC++\n \txpcom_core.dll!nsProxyEventObject::CallMethod(unsigned short methodIndex=0x0008, const XPTMethodDescriptor * methodInfo=0x037fa080, nsXPTCMiniVariant * params=0x07adf1fc)  Line 260 + 0xb bytes\tC++\n \txpcom_core.dll!PrepareAndDispatch(nsXPTCStubBase * self=0x05db8f78, unsigned int methodIndex=0x00000008, unsigned int * args=0x07adf2bc, unsigned int * stackBytesToPop=0x07adf2ac)  Line 114 + 0x21 bytes\tC++\n \txpcom_core.dll!SharedStub()  Line 142\tC++\n \tmsgimap.dll!nsImapProtocol::NotifyMessageFlags(unsigned short flags=0x0021, unsigned int key=0x00000cd9, unsigned __int64 highestModSeq=0x00000000000000a3)  Line 4736\tC++\n \tmsgimap.dll!nsImapServerResponseParser::PostProcessEndOfLine()  Line 782\tC++\n \tmsgimap.dll!nsImapServerResponseParser::response_data()  Line 766\tC++\n \tmsgimap.dll!nsImapServerResponseParser::ParseIMAPServerResponse(const char * aCurrentCommand=0x099fe340, int aIgnoreBadAndNOResponses=0x00000000, char * aGreetingWithCapability=0x00000000)  Line 247\tC++\n \tmsgimap.dll!nsImapProtocol::ParseIMAPandCheckForNewMail(const char * commandString=0x099fe340, int aIgnoreBadAndNOResponses=0x00000000)  Line 1892\tC++\n \tmsgimap.dll!nsImapProtocol::FetchMessage(const nsCString & messageIds={...}, nsIMAPeFetchFields whatToFetch=kEveryThingRFC822, const char * fetchModifier=0x00000000, unsigned int startByte=0x00000000, unsigned int numBytes=0x00000000, char * part=0x00000000)  Line 3453\tC++\n \tmsgimap.dll!nsImapProtocol::FetchTryChunking(const nsCString & messageIds={...}, nsIMAPeFetchFields whatToFetch=kEveryThingRFC822, int idIsUid=0x00000001, char * part=0x00000000, unsigned int downloadSize=0x000005c7, int tryChunking=0x00000001)  Line 3519\tC++\n \tmsgimap.dll!nsImapProtocol::ProcessSelectedStateURL()  Line 2552\tC++\n \tmsgimap.dll!nsImapProtocol::ProcessCurrentURL()  Line 1743\tC++\n \tmsgimap.dll!nsImapProtocol::ImapThreadMainLoop()  Line 1380 + 0xd bytes\tC++\n \tmsgimap.dll!nsImapProtocol::Run()  Line 1078\tC++\n \txpcom_core.dll!nsThread::ProcessNextEvent(int mayWait=0x00000001, int * result=0x07adfb10)  Line 527 + 0x19 bytes\tC++\n \txpcom_core.dll!NS_ProcessNextEvent_P(nsIThread * thread=0x05853f80, int mayWait=0x00000001)  Line 250 + 0x16 bytes\tC++\n \txpcom_core.dll!nsThread::ThreadFunc(void * arg=0x05853f80)  Line 254 + 0xb bytes\tC++\n \tnspr4.dll!_PR_NativeRunThread(void * arg=0x05b7aa18)  Line 426 + 0xf bytes\tC", "time": "2011-01-18T23:34:57Z", "is_private": false, "creator": "rkent@caspia.com", "creation_time": "2011-01-18T23:34:57Z", "raw_text": "While developing a filter action for FiltaQuilla, I came across this. I do not need FiltaQuilla to reproduce:\n\nSTR:\n\n1) Setup an IMAP account, set option to not save messages locally\n2) Turn off any automatic marking of message as read\n3) Send yourself an IMAP message, but do not try to open it.\n4) Invoke \"Save as\" for the message by right clicking the message to avoid predownloading the body.\n\nExpected results: message remains unread\nActual results\" message is marked read.\n\nThis is fairly rare in normal usage, but is a serious issue for a filter action that saves messages as a file invoking SaveMessageToDisk  The action to set the message as read is being invoked here:\n\n>\tmsgdb.dll!nsMsgDatabase::MarkHdrReadInDB(nsIMsgDBHdr * msgHdr=0x05852e28, int bRead=0x00000001, nsIDBChangeListener * instigator=0x00000000)  Line 1975\tC++\n \tmsgdb.dll!nsMsgDatabase::MarkHdrRead(nsIMsgDBHdr * msgHdr=0x05852e28, int bRead=0x00000001, nsIDBChangeListener * instigator=0x00000000)  Line 2430 + 0x1c bytes\tC++\n \tmsgimap.dll!nsImapMailFolder::NotifyMessageFlagsFromHdr(nsIMsgDBHdr * dbHdr=0x05852e28, unsigned int msgKey=0x00000cd9, unsigned int flags=0x00000021)  Line 4751\tC++\n \tmsgimap.dll!nsImapMailFolder::NotifyMessageFlags(unsigned int aFlags=0x00000021, unsigned int aMsgKey=0x00000cd9, unsigned __int64 aHighestModSeq=0x00000000000000a3)  Line 4814\tC++\n \txpcom_core.dll!NS_InvokeByIndex_P(nsISupports * that=0x0360ded0, unsigned int methodIndex=0x00000008, unsigned int paramCount=0x00000003, nsXPTCVariant * params=0x099fdfe0)  Line 103\tC++\n \txpcom_core.dll!nsProxyObjectCallInfo::Run()  Line 181 + 0x2d bytes\tC++\n \txpcom_core.dll!nsThread::ProcessNextEvent(int mayWait=0x00000001, int * result=0x0023f278)  Line 527 + 0x19 bytes\tC++\n \txpcom_core.dll!NS_ProcessNextEvent_P(nsIThread * thread=0x00488fb0, int mayWait=0x00000001)  Line 250 + 0x16 bytes\tC++\n \tgkwidget.dll!nsBaseAppShell::Run()  Line 177 + 0xc bytes\tC++\n\n\nImap thread looks like:\n\n \tntdll.dll!77c764f4() \t\n \t[Frames below may be incorrect and/or missing, no symbols loaded for ntdll.dll]\t\n \tntdll.dll!77c75e8c() \t\n \tKernelBase.dll!7603179c() \t\n>\txpcom_core.dll!nsAutoLockBase::nsAutoLockBase(void * addr=0x05db8b50, nsAutoLockBase::nsAutoLockType type=0xffffffff)  Line 327 + 0x13 bytes\tC++\n \txpcom_core.dll!nsAutoMonitor::Wait(unsigned int interval=0xffffffff)  Line 340 + 0x11 bytes\tC++\n \txpcom_core.dll!nsEventQueue::GetEvent(int mayWait=0x00000001, nsIRunnable * * result=0x07adf128)  Line 86\tC++\n \txpcom_core.dll!nsThread::nsChainedEventQueue::GetEvent(int mayWait=0x00000001, nsIRunnable * * event=0x07adf128)  Line 113\tC++\n \txpcom_core.dll!nsThread::ProcessNextEvent(int mayWait=0x00000001, int * result=0x07adf150)  Line 521 + 0x49 bytes\tC++\n \txpcom_core.dll!NS_ProcessNextEvent_P(nsIThread * thread=0x05853f80, int mayWait=0x00000001)  Line 250 + 0x16 bytes\tC++\n \txpcom_core.dll!nsProxyEventObject::CallMethod(unsigned short methodIndex=0x0008, const XPTMethodDescriptor * methodInfo=0x037fa080, nsXPTCMiniVariant * params=0x07adf1fc)  Line 260 + 0xb bytes\tC++\n \txpcom_core.dll!PrepareAndDispatch(nsXPTCStubBase * self=0x05db8f78, unsigned int methodIndex=0x00000008, unsigned int * args=0x07adf2bc, unsigned int * stackBytesToPop=0x07adf2ac)  Line 114 + 0x21 bytes\tC++\n \txpcom_core.dll!SharedStub()  Line 142\tC++\n \tmsgimap.dll!nsImapProtocol::NotifyMessageFlags(unsigned short flags=0x0021, unsigned int key=0x00000cd9, unsigned __int64 highestModSeq=0x00000000000000a3)  Line 4736\tC++\n \tmsgimap.dll!nsImapServerResponseParser::PostProcessEndOfLine()  Line 782\tC++\n \tmsgimap.dll!nsImapServerResponseParser::response_data()  Line 766\tC++\n \tmsgimap.dll!nsImapServerResponseParser::ParseIMAPServerResponse(const char * aCurrentCommand=0x099fe340, int aIgnoreBadAndNOResponses=0x00000000, char * aGreetingWithCapability=0x00000000)  Line 247\tC++\n \tmsgimap.dll!nsImapProtocol::ParseIMAPandCheckForNewMail(const char * commandString=0x099fe340, int aIgnoreBadAndNOResponses=0x00000000)  Line 1892\tC++\n \tmsgimap.dll!nsImapProtocol::FetchMessage(const nsCString & messageIds={...}, nsIMAPeFetchFields whatToFetch=kEveryThingRFC822, const char * fetchModifier=0x00000000, unsigned int startByte=0x00000000, unsigned int numBytes=0x00000000, char * part=0x00000000)  Line 3453\tC++\n \tmsgimap.dll!nsImapProtocol::FetchTryChunking(const nsCString & messageIds={...}, nsIMAPeFetchFields whatToFetch=kEveryThingRFC822, int idIsUid=0x00000001, char * part=0x00000000, unsigned int downloadSize=0x000005c7, int tryChunking=0x00000001)  Line 3519\tC++\n \tmsgimap.dll!nsImapProtocol::ProcessSelectedStateURL()  Line 2552\tC++\n \tmsgimap.dll!nsImapProtocol::ProcessCurrentURL()  Line 1743\tC++\n \tmsgimap.dll!nsImapProtocol::ImapThreadMainLoop()  Line 1380 + 0xd bytes\tC++\n \tmsgimap.dll!nsImapProtocol::Run()  Line 1078\tC++\n \txpcom_core.dll!nsThread::ProcessNextEvent(int mayWait=0x00000001, int * result=0x07adfb10)  Line 527 + 0x19 bytes\tC++\n \txpcom_core.dll!NS_ProcessNextEvent_P(nsIThread * thread=0x05853f80, int mayWait=0x00000001)  Line 250 + 0x16 bytes\tC++\n \txpcom_core.dll!nsThread::ThreadFunc(void * arg=0x05853f80)  Line 254 + 0xb bytes\tC++\n \tnspr4.dll!_PR_NativeRunThread(void * arg=0x05b7aa18)  Line 426 + 0xf bytes\tC", "count": 0, "tags": [], "author": "rkent@caspia.com", "attachment_id": null, "bug_id": 626845}, {"count": 1, "raw_text": "Danny can you reproduce?", "attachment_id": null, "bug_id": 626845, "tags": [], "author": "vseerror@lehigh.edu", "is_private": false, "text": "Danny can you reproduce?", "id": 15274219, "time": "2021-02-20T16:35:54Z", "creation_time": "2021-02-20T16:35:54Z", "creator": "vseerror@lehigh.edu"}, {"is_private": false, "time": "2021-02-20T20:17:49Z", "text": "No, I cannot reproduce the failure.  I got persisting UNREAD status on two tests.\n\nI created an IMAP account in TB and a corresponding email account at my web-host's server, sent & received two emails, and saved them to .EML files.\n\nTest 1:\nWrote to the new account with recognizable subject and content.  Logged in to Webmail to ensure email was there (it was).  Did a GETMAIL on the new account to pull message into TB.  Message displayed in UNREAD mode.  (Did NOT view the message in TB.)  RIght-clicked and SAVED-AS to known location.  Viewed resulting .EML file from location -- OK, exactly as written & sent.  **Message in TB remained UNREAD.**\n\nTest 2:\nCreated a filter in TB for the account to add STAR, tag PINK, and move to TEST TB folder.   Wrote to the new account with another recognizable subject and content.  New message showed up in Webmail.  Did another GETMAIL on the new account to pull message into TB.  Message was located in the TEST TB folder, in PINK, with STAR -- exactly as per filter.  Displayed in UNREAD mode.  (Did NOT view the message in TB.)  RIght-clicked and SAVED-AS to same known location.  Viewed resulting .EML file from location -- OK, exactly as written & sent.  **Message in TB also remained UNREAD.**\n\nSo from what I can see, **everything worked as per \"Expected\" in original bug report.**\n\nCaveat -- not sure what this means:  \"set option to not save messages locally\".\nThe messages came down *on demand*  via GETMAIL and went directly (were saved??) to a mail folder in TB.  The messages were *not* saved to a hard drive folder until saved on demand.", "id": 15274334, "creator": "dannyfox@pmtech.ca", "creation_time": "2021-02-20T20:17:49Z", "raw_text": "No, I cannot reproduce the failure.  I got persisting UNREAD status on two tests.\n\nI created an IMAP account in TB and a corresponding email account at my web-host's server, sent & received two emails, and saved them to .EML files.\n\nTest 1:\nWrote to the new account with recognizable subject and content.  Logged in to Webmail to ensure email was there (it was).  Did a GETMAIL on the new account to pull message into TB.  Message displayed in UNREAD mode.  (Did NOT view the message in TB.)  RIght-clicked and SAVED-AS to known location.  Viewed resulting .EML file from location -- OK, exactly as written & sent.  **Message in TB remained UNREAD.**\n\nTest 2:\nCreated a filter in TB for the account to add STAR, tag PINK, and move to TEST TB folder.   Wrote to the new account with another recognizable subject and content.  New message showed up in Webmail.  Did another GETMAIL on the new account to pull message into TB.  Message was located in the TEST TB folder, in PINK, with STAR -- exactly as per filter.  Displayed in UNREAD mode.  (Did NOT view the message in TB.)  RIght-clicked and SAVED-AS to same known location.  Viewed resulting .EML file from location -- OK, exactly as written & sent.  **Message in TB also remained UNREAD.**\n\nSo from what I can see, **everything worked as per \"Expected\" in original bug report.**\n\nCaveat -- not sure what this means:  \"set option to not save messages locally\".\nThe messages came down *on demand*  via GETMAIL and went directly (were saved??) to a mail folder in TB.  The messages were *not* saved to a hard drive folder until saved on demand.", "count": 2, "author": "dannyfox@pmtech.ca", "tags": [], "bug_id": 626845, "attachment_id": null}, {"id": 15274532, "text": "> Caveat -- not sure what this means: \"set option to not save messages locally\".\n\nI think it means, have \"sync\" disabled.  You would want to test with synchronized unchecked.", "raw_text": "> Caveat -- not sure what this means: \"set option to not save messages locally\".\n\nI think it means, have \"sync\" disabled.  You would want to test with synchronized unchecked.", "time": "2021-02-21T14:10:09Z", "is_private": false, "count": 3, "creator": "vseerror@lehigh.edu", "tags": [], "author": "vseerror@lehigh.edu", "attachment_id": null, "bug_id": 626845, "creation_time": "2021-02-21T14:10:09Z"}, {"attachment_id": null, "bug_id": 626845, "creation_time": "2021-02-24T02:38:34Z", "tags": [], "creator": "dannyfox@pmtech.ca", "author": "dannyfox@pmtech.ca", "count": 4, "text": "I did some more testing, basically trying to repeat the previous tests in my Comment #2.  I had deleted the previous accounts at my web-host server and my local TB email -- so I recreated them.  The only difference I noticed was that, in an IMAP account (which I've never used before testing this bug), in Account Settings there is a page for \"Synchronization & Storage\".  I hadn't touched that option page in the previous tests.\n\nThe new IMAP account settings were:\n**Message Synchronizing:**\nKeep messages in all folders on this computer:  Checked.\nUnder ADVANCED, I unchecked \"Download\" (so it wouldn't download automatically?)\n**Disk Space:**\nThere are two radio buttons and this WILL NOT ALLOW me to uncheck (de-select) any kind of SYNC -- it's either any age or recent so-many days, but SYNC is always explicitly selected.  For \"Don't Download Larger Than...\", I first reduced to minimum (1 kb), so nothing should have downloaded or operated, yet it did.  (Later set to 10kb and I sent a 50kb image.)  Not sure what effect this option had.\nI left the file deletion section at the default -- \"Don't delete any messages\" -- yet some did delete automatically from the server anyway!!\n\nI sent a few messages, checked Webmail to ensure they were received at the server and ready to download.  Then I right-clicked and downloaded.  When I put the filter in effect, the messages were moved, starred, and tagged.  But everything was different!!!\n\nWhen I logged in to the IMAP account, the first message was bold (\"unread\"), and present in Webmail.  Then it suddenly went unbolded (\"read\") in the IMAP account, co-incident with another message being deleted from the server.  I don't know what or when anything happened to trigger this, and it didn't repeat for a second message (probably the one just deleted, not sure).  All subsequent messages -- with the filter now in effect -- remained bolded & unread, but the Webmail versions (ie, on the mail server) eventually all disappeared.  Only one message remained, the one that never went through the filter (before filter was activated).  All these deletions despite the setting \"Don't delete any messages\".\n\nSo I can't say what is going on now.  I don't know how this is supposed to work with the various options, but I can say one or more options is not doing what it is supposed to do, and what I see is inexplicable.  Two local messages became unbolded (read) -- one was filtered, the other not.  The size limit didn't seem to matter (but it's not clear if this option is for manual or just automatic downloads).  And all filtered messages eventually were deleted automatically from the server (unattended, unfortunately) despite the setting, although all remain locally and appear bolded (unread).  \n\nFinally, despite my assertion in Comment #2 that the bug could not be reproduced (ie, message status persisted and remained bolded & unread), this time the message DID unbold and appear to be read.  So I would have to say best case is that the bug is still in effect sometimes under certain so-far indeterminate conditions.  The \"save-as\" (to simulate filter action) didn't change the status, but then the status changed to \"read\" awhile later.  (Just to be clear, my setting to \"mark messages as read\" is unchecked and has never flipped a status.)  And most but not all of the the actually-filtered messages retained their \"unread\" status.  My guy feeling is that something else is going on -- probably at the same time -- causing intermittent and/or inconsistent results.", "id": 15279908, "raw_text": "I did some more testing, basically trying to repeat the previous tests in my Comment #2.  I had deleted the previous accounts at my web-host server and my local TB email -- so I recreated them.  The only difference I noticed was that, in an IMAP account (which I've never used before testing this bug), in Account Settings there is a page for \"Synchronization & Storage\".  I hadn't touched that option page in the previous tests.\n\nThe new IMAP account settings were:\n**Message Synchronizing:**\nKeep messages in all folders on this computer:  Checked.\nUnder ADVANCED, I unchecked \"Download\" (so it wouldn't download automatically?)\n**Disk Space:**\nThere are two radio buttons and this WILL NOT ALLOW me to uncheck (de-select) any kind of SYNC -- it's either any age or recent so-many days, but SYNC is always explicitly selected.  For \"Don't Download Larger Than...\", I first reduced to minimum (1 kb), so nothing should have downloaded or operated, yet it did.  (Later set to 10kb and I sent a 50kb image.)  Not sure what effect this option had.\nI left the file deletion section at the default -- \"Don't delete any messages\" -- yet some did delete automatically from the server anyway!!\n\nI sent a few messages, checked Webmail to ensure they were received at the server and ready to download.  Then I right-clicked and downloaded.  When I put the filter in effect, the messages were moved, starred, and tagged.  But everything was different!!!\n\nWhen I logged in to the IMAP account, the first message was bold (\"unread\"), and present in Webmail.  Then it suddenly went unbolded (\"read\") in the IMAP account, co-incident with another message being deleted from the server.  I don't know what or when anything happened to trigger this, and it didn't repeat for a second message (probably the one just deleted, not sure).  All subsequent messages -- with the filter now in effect -- remained bolded & unread, but the Webmail versions (ie, on the mail server) eventually all disappeared.  Only one message remained, the one that never went through the filter (before filter was activated).  All these deletions despite the setting \"Don't delete any messages\".\n\nSo I can't say what is going on now.  I don't know how this is supposed to work with the various options, but I can say one or more options is not doing what it is supposed to do, and what I see is inexplicable.  Two local messages became unbolded (read) -- one was filtered, the other not.  The size limit didn't seem to matter (but it's not clear if this option is for manual or just automatic downloads).  And all filtered messages eventually were deleted automatically from the server (unattended, unfortunately) despite the setting, although all remain locally and appear bolded (unread).  \n\nFinally, despite my assertion in Comment #2 that the bug could not be reproduced (ie, message status persisted and remained bolded & unread), this time the message DID unbold and appear to be read.  So I would have to say best case is that the bug is still in effect sometimes under certain so-far indeterminate conditions.  The \"save-as\" (to simulate filter action) didn't change the status, but then the status changed to \"read\" awhile later.  (Just to be clear, my setting to \"mark messages as read\" is unchecked and has never flipped a status.)  And most but not all of the the actually-filtered messages retained their \"unread\" status.  My guy feeling is that something else is going on -- probably at the same time -- causing intermittent and/or inconsistent results.", "time": "2021-02-24T02:38:34Z", "is_private": false}, {"text": "I've done more testing today with fresh eyes, and this is what I see.  If I flip read status in Webmail, then run GetMail on the account in TB, the status is reflected in the TB account -- ie, they have SYNC'd, one way or the other.  But more importantly, note specifically:  If I *knowingly* turn status to \"SEEN\" (READ) in Webmail, the status then shows READ (unbolded) in TB.  Could that be what the reporter saw?  Could his Webmail have flipped status to SEEN, and then TB SYNC'd it to READ so it was unbolded?\n\nEverything I did today seemed much more predictable than the testing in my report from yesterday.  If the filter was active, messages were starred, tagged, and moved as directed, with status UNREAD.  If not, then not -- the messages went straight to inbox as UNREAD.  Right-click downloading any message did not affect READ status.  Only reading them flipped the status (unless I changed the status in Webmail *and* did a GetMail in TB).\n\nBut two weird things still bother me.  If I click & drag (or MOVE) a message from the filter's target folder back to the inbox, it stays there for a short while, then spontaneously disappears and returns to the target folder -- or returns immediately if I do a GetMail.  (Possibly \"spontaneous\" is an automatic GetMail, but it's too quick for that -- setting says \"10 minutes\".)  Meanwhile, a REFRESH in Webmail causes another deleted instance of the file to show.  But if I move the message, REFRESH the Webmail (so it shows as present & unseen), and *then* run GetMail, the message does come down to TB but now remains in Webmail and does not delete.  Very strange and inconsistent, I think.\n\nI have closed and restarted TB several times during my tests, each time requiring me to \"log in\" to the IMAP account (I didn't check \"use memory manager to save\", and the setting checks for new mail on startup).  After logging in, if I run REFRESH in Webmail, all \"deleted\" message lines disappear permanently (have been \"purged\", in the language of my Webmail host).\n\nSo I sense an interaction between TB and *my* Webmail host that may or may not be normal or expected.  The operation is, as I said, much more predictable -- but not quite, as one early message today disappeared in Webmail (for no apparent reason) when I clicked on it there.  Perhaps I had restarted TB then?  Don't know, and can't now prove exactly what I did.\n\nAs for this bug, today I see the messages remain UNREAD (bolded) whether or not they are moved by a filter action.  (I see no SAVE function in the filter action choices.)  And read status remains unaffected by right-click SAVE-AS.  Whether IMAP interactions work properly with a particular Webmail host, I have no way to judge.", "id": 15280797, "time": "2021-02-24T16:45:30Z", "is_private": false, "creation_time": "2021-02-24T16:45:30Z", "creator": "dannyfox@pmtech.ca", "count": 5, "raw_text": "I've done more testing today with fresh eyes, and this is what I see.  If I flip read status in Webmail, then run GetMail on the account in TB, the status is reflected in the TB account -- ie, they have SYNC'd, one way or the other.  But more importantly, note specifically:  If I *knowingly* turn status to \"SEEN\" (READ) in Webmail, the status then shows READ (unbolded) in TB.  Could that be what the reporter saw?  Could his Webmail have flipped status to SEEN, and then TB SYNC'd it to READ so it was unbolded?\n\nEverything I did today seemed much more predictable than the testing in my report from yesterday.  If the filter was active, messages were starred, tagged, and moved as directed, with status UNREAD.  If not, then not -- the messages went straight to inbox as UNREAD.  Right-click downloading any message did not affect READ status.  Only reading them flipped the status (unless I changed the status in Webmail *and* did a GetMail in TB).\n\nBut two weird things still bother me.  If I click & drag (or MOVE) a message from the filter's target folder back to the inbox, it stays there for a short while, then spontaneously disappears and returns to the target folder -- or returns immediately if I do a GetMail.  (Possibly \"spontaneous\" is an automatic GetMail, but it's too quick for that -- setting says \"10 minutes\".)  Meanwhile, a REFRESH in Webmail causes another deleted instance of the file to show.  But if I move the message, REFRESH the Webmail (so it shows as present & unseen), and *then* run GetMail, the message does come down to TB but now remains in Webmail and does not delete.  Very strange and inconsistent, I think.\n\nI have closed and restarted TB several times during my tests, each time requiring me to \"log in\" to the IMAP account (I didn't check \"use memory manager to save\", and the setting checks for new mail on startup).  After logging in, if I run REFRESH in Webmail, all \"deleted\" message lines disappear permanently (have been \"purged\", in the language of my Webmail host).\n\nSo I sense an interaction between TB and *my* Webmail host that may or may not be normal or expected.  The operation is, as I said, much more predictable -- but not quite, as one early message today disappeared in Webmail (for no apparent reason) when I clicked on it there.  Perhaps I had restarted TB then?  Don't know, and can't now prove exactly what I did.\n\nAs for this bug, today I see the messages remain UNREAD (bolded) whether or not they are moved by a filter action.  (I see no SAVE function in the filter action choices.)  And read status remains unaffected by right-click SAVE-AS.  Whether IMAP interactions work properly with a particular Webmail host, I have no way to judge.", "attachment_id": null, "bug_id": 626845, "tags": [], "author": "dannyfox@pmtech.ca"}, {"creator": "dannyfox@pmtech.ca", "creation_time": "2021-02-26T04:56:57Z", "is_private": false, "id": 15283753, "text": "*Just for the record...*  NONE of the recent email messages have disappeared from the Webmail server in the meantime (well over 24 hrs) -- unlike what happened after testing in Comment #4.", "time": "2021-02-26T04:56:57Z", "tags": [], "author": "dannyfox@pmtech.ca", "attachment_id": null, "bug_id": 626845, "raw_text": "*Just for the record...*  NONE of the recent email messages have disappeared from the Webmail server in the meantime (well over 24 hrs) -- unlike what happened after testing in Comment #4.", "count": 6}]}}}