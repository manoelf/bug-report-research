{"comments": {}, "bugs": {"662069": {"comments": [{"id": 5513486, "count": 0, "is_private": false, "creation_time": "2011-06-04T18:11:49Z", "time": "2011-06-04T18:11:49Z", "creator": "bhackett1024@gmail.com", "author": "bhackett1024@gmail.com", "attachment_id": null, "raw_text": "Track some minor issues found while trying out JSBench.", "tags": [], "text": "Track some minor issues found while trying out JSBench.", "bug_id": 662069}, {"creator": "bhackett1024@gmail.com", "time": "2011-06-04T18:15:32Z", "creation_time": "2011-06-04T18:15:32Z", "author": "bhackett1024@gmail.com", "is_private": false, "id": 5513489, "count": 1, "bug_id": 662069, "text": "Created attachment 537368\ngoogle.com replay with -O uremv\n\nReplay from loading google.com and then replaying with -O uremv.  When generating the callArgs arrays used to verify calls, references to undefined variables appear, e.g. 'o69'.", "tags": [], "attachment_id": 537368, "raw_text": "Replay from loading google.com and then replaying with -O uremv.  When generating the callArgs arrays used to verify calls, references to undefined variables appear, e.g. 'o69'."}, {"attachment_id": 537370, "raw_text": "Removing the 'm' flag fixes the undefined variables, but then during replay there are errors triggered by verifySet (e.g. 'o75.height is not \"100px\", it's undefined!').  The problem may be that the verifySet calls are emitted before the code on the page is geval'ed, as if I move the verifySet calls to the end all the properties searched for are now in place with the right value.", "text": "Created attachment 537370\ngoogle.com replay with -O urev\n\nRemoving the 'm' flag fixes the undefined variables, but then during replay there are errors triggered by verifySet (e.g. 'o75.height is not \"100px\", it's undefined!').  The problem may be that the verifySet calls are emitted before the code on the page is geval'ed, as if I move the verifySet calls to the end all the properties searched for are now in place with the right value.", "bug_id": 662069, "tags": [], "is_private": false, "count": 2, "id": 5513492, "creator": "bhackett1024@gmail.com", "creation_time": "2011-06-04T18:18:58Z", "time": "2011-06-04T18:18:58Z", "author": "bhackett1024@gmail.com"}, {"text": "Created attachment 537371\nconsole patch\n\nBoilerplate fixes to get the google.com replay working in the shell without modification.  window.top was undefined, and the browser-but-not-shell builtin Image was undefined (I'm sure there are a bazillion more of these, but this is the only one used on google.com).", "bug_id": 662069, "tags": [], "raw_text": "Boilerplate fixes to get the google.com replay working in the shell without modification.  window.top was undefined, and the browser-but-not-shell builtin Image was undefined (I'm sure there are a bazillion more of these, but this is the only one used on google.com).", "attachment_id": 537371, "author": "bhackett1024@gmail.com", "time": "2011-06-04T18:25:26Z", "creation_time": "2011-06-04T18:25:26Z", "creator": "bhackett1024@gmail.com", "count": 3, "id": 5513497, "is_private": false}, {"is_private": false, "count": 4, "id": 5513569, "author": "gkrichar@purdue.edu", "creator": "gkrichar@purdue.edu", "time": "2011-06-04T20:40:38Z", "creation_time": "2011-06-04T20:40:38Z", "raw_text": "At present the 'v' option isn't compatible with various other modes, simply because I didnAt yet work to preserve verification-relevant information in them. urv is about the most sophisticated mode that ought to work. More could work, I just haven't gotten around to making them work.", "attachment_id": null, "bug_id": 662069, "text": "At present the 'v' option isn't compatible with various other modes, simply because I didnAt yet work to preserve verification-relevant information in them. urv is about the most sophisticated mode that ought to work. More could work, I just haven't gotten around to making them work.", "tags": []}, {"tags": [], "text": "Probably a better solution for Image would be to add it to the list of instrumented names. See instrumentation/objects.js. The \"do\" and \"don't\"", "bug_id": 662069, "attachment_id": null, "raw_text": "Probably a better solution for Image would be to add it to the list of instrumented names. See instrumentation/objects.js. The \"do\" and \"don't\"", "creator": "gkrichar@purdue.edu", "creation_time": "2011-06-04T20:43:26Z", "time": "2011-06-04T20:43:26Z", "author": "gkrichar@purdue.edu", "is_private": false, "id": 5513571, "count": 5}, {"bug_id": 662069, "text": "Probably a better solution for Image would be to add it to the list of instrumented names. See instrumentation/objects.js. The \"do\" and \"don't\" instrument lists are decided in a somewhat ad-hoc way, basically global types don't get instrumented, but global objects do. It was done that way when things were much buggier, probably the vast majority could be instrumented now.", "tags": [], "raw_text": "Probably a better solution for Image would be to add it to the list of instrumented names. See instrumentation/objects.js. The \"do\" and \"don't\" instrument lists are decided in a somewhat ad-hoc way, basically global types don't get instrumented, but global objects do. It was done that way when things were much buggier, probably the vast majority could be instrumented now.", "attachment_id": null, "author": "gkrichar@purdue.edu", "time": "2011-06-04T20:45:37Z", "creation_time": "2011-06-04T20:45:37Z", "creator": "gkrichar@purdue.edu", "id": 5513572, "count": 6, "is_private": false}, {"id": 5513616, "count": 7, "is_private": false, "time": "2011-06-04T22:33:44Z", "creation_time": "2011-06-04T22:33:44Z", "creator": "bhackett1024@gmail.com", "author": "bhackett1024@gmail.com", "attachment_id": 537384, "raw_text": "OK, next thing I've been trying is the AWFY assorted page (A smaller version of the breakdown page that is causing problems in bug 662082):\n\nhttp://arewefastyet.com/?a=b&view=assorted\n\nThe first time I tried to record I got a 'window is undefined' exception.  Moving 'window' from dontInstrument to doInstrument in objects.js fixed this, but I don't know if mucking with that is advised.  After that, recording spun a while and then gave a syntax error ('unrecognized expression: >' with no file/line, d'oh).\n\nTrying to replay that syntax error with -O ur gave me a few new problems (could these have been caused by the window change above?).  Replay .js attached.  The navigator object 'o30' is assigned to the window before being created, and is constructed a second time later before giving it the userAgent property.\n\nwindow.JSBNG__navigator = o30;\no30 = {};\n...\no30 = {};\n...\no30.userAgent = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:6.0a1) Gecko/20110603 \n\nFixing those ran into another problem where the script calls createDocumentFragment three times but only two calls were recorded.  Don't know which is correct, need to dig some more.", "text": "Created attachment 537384\nawfy replay with -O ur\n\nOK, next thing I've been trying is the AWFY assorted page (A smaller version of the breakdown page that is causing problems in bug 662082):\n\nhttp://arewefastyet.com/?a=b&view=assorted\n\nThe first time I tried to record I got a 'window is undefined' exception.  Moving 'window' from dontInstrument to doInstrument in objects.js fixed this, but I don't know if mucking with that is advised.  After that, recording spun a while and then gave a syntax error ('unrecognized expression: >' with no file/line, d'oh).\n\nTrying to replay that syntax error with -O ur gave me a few new problems (could these have been caused by the window change above?).  Replay .js attached.  The navigator object 'o30' is assigned to the window before being created, and is constructed a second time later before giving it the userAgent property.\n\nwindow.JSBNG__navigator = o30;\no30 = {};\n...\no30 = {};\n...\no30.userAgent = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:6.0a1) Gecko/20110603 \n\nFixing those ran into another problem where the script calls createDocumentFragment three times but only two calls were recorded.  Don't know which is correct, need to dig some more.", "bug_id": 662069, "tags": []}, {"raw_text": "You got \"window is undefined\" at /record/ time??? That's ... terrifying? I'll look into that tomorrow if I can catch a few minutes of time.\n\nIn general it's safe to move things between doInstrument and dontInstrument (with the obvious caveat that anything you move do -> dont won't be instrumented), but window is the exception to that rule, as the instrumentation doesn't know about its unique semantics (being both the global scope and a nameable object). Besides, if you instrument it then references at replay time will be replaced with mock objects, which is rather silly for the global scope :)", "attachment_id": null, "bug_id": 662069, "text": "You got \"window is undefined\" at /record/ time??? That's ... terrifying? I'll look into that tomorrow if I can catch a few minutes of time.\n\nIn general it's safe to move things between doInstrument and dontInstrument (with the obvious caveat that anything you move do -> dont won't be instrumented), but window is the exception to that rule, as the instrumentation doesn't know about its unique semantics (being both the global scope and a nameable object). Besides, if you instrument it then references at replay time will be replaced with mock objects, which is rather silly for the global scope :)", "tags": [], "is_private": false, "count": 8, "id": 5513716, "author": "gkrichar@purdue.edu", "creator": "gkrichar@purdue.edu", "time": "2011-06-05T01:32:41Z", "creation_time": "2011-06-05T01:32:41Z"}, {"is_private": false, "id": 5513799, "count": 9, "author": "gkrichar@purdue.edu", "creator": "gkrichar@purdue.edu", "creation_time": "2011-06-05T04:14:29Z", "time": "2011-06-05T04:14:29Z", "raw_text": "OK, I fixed that as well as merging in the iframes branch (it had all bugfixes that were related to interframe communication, even if the bug showed up with iframes disabled). iframes are still disabled by default (and should be, they're not \"there\" yet), but you may find more success with it.\n\nThe AWFY assorted page is now giving me a truly bizarre error (regex too complex???), I'll keep hunting :)", "attachment_id": null, "text": "OK, I fixed that as well as merging in the iframes branch (it had all bugfixes that were related to interframe communication, even if the bug showed up with iframes disabled). iframes are still disabled by default (and should be, they're not \"there\" yet), but you may find more success with it.\n\nThe AWFY assorted page is now giving me a truly bizarre error (regex too complex???), I'll keep hunting :)", "bug_id": 662069, "tags": []}]}}}