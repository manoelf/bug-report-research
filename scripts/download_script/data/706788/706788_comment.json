{"comments": {}, "bugs": {"706788": {"comments": [{"raw_text": "If both browser.sessionstore.enabled is set to true, and privacy.sanitize.sanitizeOnShutdown is set to true, then session restore does not work.\n\nAlthough it might seem that they make no sense together, in fact they do. Very broadly speaking, sessionstore concerns the current browsing session; while the various sanitizeOnShutdown/clearOnShutdown options concern historic data; History, Form history, etc. (not entirely, but mostly).\n\nThe behavior is actually buggy even aside from debates regarding whether on should negate another. What privacy.sanitize.sanitizeOnShutdown actually does, in respect of sessions, is disable all reading and writing of the sessionstore.js file.\n\nSo, if privacy.sanitize.sanitizeOnShutdown is set to true while Firefox is running:\n1.  Any sessionstore.js remains, uncleared and in plain text, in the profile.\n2.  Crashed sessions are not restored.\n3.  Editing user.js/prefs.js to turn off privacy.sanitize.sanitizeOnShutdown will restore the last session written before the option was turned on - perhaps months or even years ago.\n\nSo, privacy.sanitize.sanitizeOnShutdown should not affect reading to or writing from the sessionstore.js file; that should be entirely in the scope of the browser.sessionstore.enabled option.\n\nAlternatively, this might be reconciled by another privacy setting, such as privacy.clearOnShutdown.browsingSession or similar, to specifically indicate unambiguous behavior.", "creation_time": "2011-12-01T12:13:19Z", "text": "If both browser.sessionstore.enabled is set to true, and privacy.sanitize.sanitizeOnShutdown is set to true, then session restore does not work.\n\nAlthough it might seem that they make no sense together, in fact they do. Very broadly speaking, sessionstore concerns the current browsing session; while the various sanitizeOnShutdown/clearOnShutdown options concern historic data; History, Form history, etc. (not entirely, but mostly).\n\nThe behavior is actually buggy even aside from debates regarding whether on should negate another. What privacy.sanitize.sanitizeOnShutdown actually does, in respect of sessions, is disable all reading and writing of the sessionstore.js file.\n\nSo, if privacy.sanitize.sanitizeOnShutdown is set to true while Firefox is running:\n1.  Any sessionstore.js remains, uncleared and in plain text, in the profile.\n2.  Crashed sessions are not restored.\n3.  Editing user.js/prefs.js to turn off privacy.sanitize.sanitizeOnShutdown will restore the last session written before the option was turned on - perhaps months or even years ago.\n\nSo, privacy.sanitize.sanitizeOnShutdown should not affect reading to or writing from the sessionstore.js file; that should be entirely in the scope of the browser.sessionstore.enabled option.\n\nAlternatively, this might be reconciled by another privacy setting, such as privacy.clearOnShutdown.browsingSession or similar, to specifically indicate unambiguous behavior.", "attachment_id": null, "time": "2011-12-01T12:13:19Z", "tags": [], "count": 0, "is_private": false, "id": 5884843, "bug_id": 706788, "creator": "theimp@iinet.net.au", "author": "theimp@iinet.net.au"}, {"creator": "paul@oshannessy.com", "author": "paul@oshannessy.com", "text": "(In reply to theimp from comment #0)\n> If both browser.sessionstore.enabled is set to true, and\n> privacy.sanitize.sanitizeOnShutdown is set to true, then session restore\n> does not work.\n\nbrowser.sessionstore.enabled has not been used by Firefox for many versions now (I think 3.0 was the last to use it).\n\nThat said, sessionstore & clearing history at shutdown have been at odds with each other for a long time (there's a bug somewhere).", "attachment_id": null, "time": "2011-12-02T00:13:19Z", "creation_time": "2011-12-02T00:13:19Z", "raw_text": "(In reply to theimp from comment #0)\n> If both browser.sessionstore.enabled is set to true, and\n> privacy.sanitize.sanitizeOnShutdown is set to true, then session restore\n> does not work.\n\nbrowser.sessionstore.enabled has not been used by Firefox for many versions now (I think 3.0 was the last to use it).\n\nThat said, sessionstore & clearing history at shutdown have been at odds with each other for a long time (there's a bug somewhere).", "bug_id": 706788, "count": 1, "is_private": false, "tags": [], "id": 5886971}, {"bug_id": 706788, "id": 5887004, "tags": [], "is_private": false, "count": 2, "author": "theimp@iinet.net.au", "time": "2011-12-02T00:26:48Z", "attachment_id": null, "text": "Okay, you're right, sorry, I meant the option browser.startup.page with a value of 3.\n\nI just double-checked it to make sure I wasn't mistaken, and it is indeed the same bug. I obviously just got confused and wrote the wrong preference in the bug report.\n\nIndeed the issue is not new, but I've only just got around to exploring the buggy side-effects.", "creator": "theimp@iinet.net.au", "creation_time": "2011-12-02T00:26:48Z", "raw_text": "Okay, you're right, sorry, I meant the option browser.startup.page with a value of 3.\n\nI just double-checked it to make sure I wasn't mistaken, and it is indeed the same bug. I obviously just got confused and wrote the wrong preference in the bug report.\n\nIndeed the issue is not new, but I've only just got around to exploring the buggy side-effects."}, {"author": "paul@oshannessy.com", "creator": "paul@oshannessy.com", "id": 5889144, "tags": [], "is_private": false, "count": 3, "bug_id": 706788, "raw_text": "(In reply to theimp from comment #2)\n> Okay, you're right, sorry, I meant the option browser.startup.page with a\n> value of 3.\n\nI figured :)\n\n(In reply to theimp from comment #0)\n> If both browser.sessionstore.enabled is set to true, and\n> privacy.sanitize.sanitizeOnShutdown is set to true, then session restore\n> does not work.\n\nThat's bug 398817.\n\n> The behavior is actually buggy even aside from debates regarding whether on\n> should negate another. What privacy.sanitize.sanitizeOnShutdown actually\n> does, in respect of sessions, is disable all reading and writing of the\n> sessionstore.js file.\n> \n> So, if privacy.sanitize.sanitizeOnShutdown is set to true while Firefox is\n> running:\n> 1.  Any sessionstore.js remains, uncleared and in plain text, in the profile.\n\nI can't seem to reproduce this.\n\n> 2.  Crashed sessions are not restored.\n\nThat is by design - the purge notification is fired at startup following a crash, so we respect that. We do write the file throughout the session though and it's available in your profile... That can definitely be better...\n\n> 3.  Editing user.js/prefs.js to turn off privacy.sanitize.sanitizeOnShutdown\n> will restore the last session written before the option was turned on -\n> perhaps months or even years ago.\n\nAgain, I can't reproduce this since (see 1) I'm not left with a sessionstore.js in my folder, except following a crash.", "creation_time": "2011-12-02T20:14:14Z", "time": "2011-12-02T20:14:14Z", "attachment_id": null, "text": "(In reply to theimp from comment #2)\n> Okay, you're right, sorry, I meant the option browser.startup.page with a\n> value of 3.\n\nI figured :)\n\n(In reply to theimp from comment #0)\n> If both browser.sessionstore.enabled is set to true, and\n> privacy.sanitize.sanitizeOnShutdown is set to true, then session restore\n> does not work.\n\nThat's bug 398817.\n\n> The behavior is actually buggy even aside from debates regarding whether on\n> should negate another. What privacy.sanitize.sanitizeOnShutdown actually\n> does, in respect of sessions, is disable all reading and writing of the\n> sessionstore.js file.\n> \n> So, if privacy.sanitize.sanitizeOnShutdown is set to true while Firefox is\n> running:\n> 1.  Any sessionstore.js remains, uncleared and in plain text, in the profile.\n\nI can't seem to reproduce this.\n\n> 2.  Crashed sessions are not restored.\n\nThat is by design - the purge notification is fired at startup following a crash, so we respect that. We do write the file throughout the session though and it's available in your profile... That can definitely be better...\n\n> 3.  Editing user.js/prefs.js to turn off privacy.sanitize.sanitizeOnShutdown\n> will restore the last session written before the option was turned on -\n> perhaps months or even years ago.\n\nAgain, I can't reproduce this since (see 1) I'm not left with a sessionstore.js in my folder, except following a crash."}, {"id": 5889691, "tags": [], "is_private": false, "count": 4, "bug_id": 706788, "creation_time": "2011-12-02T22:59:07Z", "raw_text": "> I can't seem to reproduce this.\n\nNow I can't either.\n\nIt definitely happens, however, if Firefox crashes after enabling the privacy.sanitize.sanitizeOnShutdown preference. I guess it only removes it on shutdown, if it has an open handle to it, which it won't after restoring from a crash, because it'll never have opened it again on startup.\n\nI'll see if I can isolate the behavior that I reported.\n\n> That's bug 398817.\n\nHm. Missed that one. Sorry.\n\n> I'm not left with a sessionstore.js in my folder, except following a crash.\n\nStill, I guess that this is enough of a bug even if it involves a crash.\n\nSince Bug 398817 seems to indicate that the opinion of the responsible developers is that clearing the history should override saving the session for data security reasons, then, privacy.sanitize.sanitizeOnShutdown should close (and thus remove) sessionstore.js at the instant that it is changed to a value of true. Otherwise, the argument that the behavior is for data security is a bit hollow if it only needs a stray crash (howsoever caused) to break that same security.", "time": "2011-12-02T22:59:07Z", "attachment_id": null, "text": "> I can't seem to reproduce this.\n\nNow I can't either.\n\nIt definitely happens, however, if Firefox crashes after enabling the privacy.sanitize.sanitizeOnShutdown preference. I guess it only removes it on shutdown, if it has an open handle to it, which it won't after restoring from a crash, because it'll never have opened it again on startup.\n\nI'll see if I can isolate the behavior that I reported.\n\n> That's bug 398817.\n\nHm. Missed that one. Sorry.\n\n> I'm not left with a sessionstore.js in my folder, except following a crash.\n\nStill, I guess that this is enough of a bug even if it involves a crash.\n\nSince Bug 398817 seems to indicate that the opinion of the responsible developers is that clearing the history should override saving the session for data security reasons, then, privacy.sanitize.sanitizeOnShutdown should close (and thus remove) sessionstore.js at the instant that it is changed to a value of true. Otherwise, the argument that the behavior is for data security is a bit hollow if it only needs a stray crash (howsoever caused) to break that same security.", "author": "theimp@iinet.net.au", "creator": "theimp@iinet.net.au"}]}}}