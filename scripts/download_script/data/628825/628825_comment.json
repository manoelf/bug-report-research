{"comments": {}, "bugs": {"628825": {"comments": [{"text": "User-Agent:       Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.4; en-GB; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: \n\nFirefox currently allows line breaking before a punctuation mark when it is preceded by a breakable space, such as a thin space U+2009 (as used in French). This is incorrect. The line breaking algorithm should be improved, for instance as described by:\n\n  http://www.unicode.org/reports/tr14/\n\n(Unicode Standard Annex #14 - Unicode Line Breaking Algorithm). In particular, see LB13: \"Do not break before \u2018]\u2019 or \u2018!\u2019 or \u2018;\u2019 or \u2018/\u2019, even after spaces.\" Note that the list of cited characters is not exhaustive.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Open a page with a word followed by a thin space then by a punctuation mark such as \"!\" or \"?\" (see testcase).\n2. Adjust the window width to see the various line breaking positions.\nActual Results:  \nFor some width, Firefox breaks the line before the punctuation mark.\n\nExpected Results:  \nFirefox should break the line before the word preceding it.\n\nWebKit-based browsers have no such problem (tested only with a thin space).\n\nThe normal space should be handled as well, because some authors use it instead of a thin space (even with such a slightly incorrect typography, authors often don't use the typical no-break space, probably because a normal space is easier to type on a keyboard).", "id": 5227026, "time": "2011-01-25T23:48:53Z", "is_private": false, "creator": "vincent-moz@vinc17.net", "creation_time": "2011-01-25T23:48:53Z", "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.4; en-GB; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: \n\nFirefox currently allows line breaking before a punctuation mark when it is preceded by a breakable space, such as a thin space U+2009 (as used in French). This is incorrect. The line breaking algorithm should be improved, for instance as described by:\n\n  http://www.unicode.org/reports/tr14/\n\n(Unicode Standard Annex #14 - Unicode Line Breaking Algorithm). In particular, see LB13: \"Do not break before \u2018]\u2019 or \u2018!\u2019 or \u2018;\u2019 or \u2018/\u2019, even after spaces.\" Note that the list of cited characters is not exhaustive.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Open a page with a word followed by a thin space then by a punctuation mark such as \"!\" or \"?\" (see testcase).\n2. Adjust the window width to see the various line breaking positions.\nActual Results:  \nFor some width, Firefox breaks the line before the punctuation mark.\n\nExpected Results:  \nFirefox should break the line before the word preceding it.\n\nWebKit-based browsers have no such problem (tested only with a thin space).\n\nThe normal space should be handled as well, because some authors use it instead of a thin space (even with such a slightly incorrect typography, authors often don't use the typical no-break space, probably because a normal space is easier to type on a keyboard).", "count": 0, "tags": [], "author": "vincent-moz@vinc17.net", "attachment_id": null, "bug_id": 628825}, {"raw_text": "", "count": 1, "author": "vincent-moz@vinc17.net", "tags": [], "bug_id": 628825, "attachment_id": 506932, "is_private": false, "time": "2011-01-25T23:50:46Z", "text": "Created attachment 506932\ntestcase (HTML document with thin space before punctuation)", "id": 5227030, "creator": "vincent-moz@vinc17.net", "creation_time": "2011-01-25T23:50:46Z"}, {"creation_time": "2011-01-26T00:48:06Z", "attachment_id": null, "bug_id": 628825, "tags": [], "creator": "xtc4uall@gmail.com", "author": "xtc4uall@gmail.com", "count": 2, "is_private": false, "id": 5227253, "text": "See also Bug 56652 and Bug 206152 with its Dependencies.", "raw_text": "See also Bug 56652 and Bug 206152 with its Dependencies.", "time": "2011-01-26T00:48:06Z"}, {"time": "2011-01-26T03:14:07Z", "id": 5227580, "text": "Last I checked we purposefully allowed breaking before '/' because it's common for sites to depend on that.", "raw_text": "Last I checked we purposefully allowed breaking before '/' because it's common for sites to depend on that.", "is_private": false, "count": 3, "author": "bzbarsky@mit.edu", "tags": [], "creator": "bzbarsky@mit.edu", "bug_id": 628825, "attachment_id": null, "creation_time": "2011-01-26T03:14:07Z"}, {"creator": "masayuki@d-toybox.com", "creation_time": "2011-01-26T05:05:12Z", "time": "2011-01-26T05:05:12Z", "id": 5227786, "text": "How about the importance of this bug for Western language users? Is that a major format?", "is_private": false, "author": "masayuki@d-toybox.com", "tags": [], "bug_id": 628825, "attachment_id": null, "raw_text": "How about the importance of this bug for Western language users? Is that a major format?", "count": 4}, {"tags": [], "author": "masayuki@d-toybox.com", "attachment_id": null, "bug_id": 628825, "raw_text": "Hmm, looks like the spaces are marked as breakable in nsLineBreaker::AppendText(). However, we need to access to nsILineBreaker's implementation when we check whether the next character is open punctuation or not...", "count": 5, "creator": "masayuki@d-toybox.com", "creation_time": "2011-01-26T05:39:54Z", "is_private": false, "text": "Hmm, looks like the spaces are marked as breakable in nsLineBreaker::AppendText(). However, we need to access to nsILineBreaker's implementation when we check whether the next character is open punctuation or not...", "id": 5227838, "time": "2011-01-26T05:39:54Z"}, {"is_private": false, "id": 5227840, "text": "s/open punctuation/close punctuation", "time": "2011-01-26T05:42:12Z", "creator": "masayuki@d-toybox.com", "creation_time": "2011-01-26T05:42:12Z", "raw_text": "s/open punctuation/close punctuation", "count": 6, "tags": [], "author": "masayuki@d-toybox.com", "attachment_id": null, "bug_id": 628825}, {"time": "2011-01-26T06:11:53Z", "id": 5227879, "text": "http://mxr.mozilla.org/mozilla-central/source/intl/lwbrk/src/nsJISx4501LineBreaker.cpp#867\n\nNow, GetJISx4051Breaks() always returns FALSE for first character. It might be usable. If the first character is not breakable even with a breakable character, we can set TRUE. Then, nsLineBreaker can know the first character's class of \"word\" and it can overwrite the previous space's state. But this is just my guess.", "is_private": false, "creator": "masayuki@d-toybox.com", "creation_time": "2011-01-26T06:11:53Z", "raw_text": "http://mxr.mozilla.org/mozilla-central/source/intl/lwbrk/src/nsJISx4501LineBreaker.cpp#867\n\nNow, GetJISx4051Breaks() always returns FALSE for first character. It might be usable. If the first character is not breakable even with a breakable character, we can set TRUE. Then, nsLineBreaker can know the first character's class of \"word\" and it can overwrite the previous space's state. But this is just my guess.", "count": 7, "author": "masayuki@d-toybox.com", "tags": [], "bug_id": 628825, "attachment_id": null}]}}}