{"bugs": {"696885": {"comments": [{"creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com", "count": 0, "is_private": false, "tags": [], "id": 5801521, "bug_id": 696885, "creation_time": "2011-10-24T21:24:03Z", "raw_text": "https://groups.google.com/group/mozilla.dev.tech.dom/browse_thread/thread/af26484d4ca83036\n\nThis scenario occurs when clicking on google web search cache links, but here's a synthetic test:\n_______________________________________________________\ntop1.html:\n\n<iframe src=\"iframe.html\"></iframe>\n\niframe.html:\n\n<script>\nparent.location = 'top2.htm';\nlocation = 'about:blank'\n</script>\n______________________________________________\n\nDOMContentLoaded is attached by an extension (optimizegoogle) overlay.\n\nit fires for iframe.html which at that point appears to be orphaned", "text": "https://groups.google.com/group/mozilla.dev.tech.dom/browse_thread/thread/af26484d4ca83036\n\nThis scenario occurs when clicking on google web search cache links, but here's a synthetic test:\n_______________________________________________________\ntop1.html:\n\n<iframe src=\"iframe.html\"></iframe>\n\niframe.html:\n\n<script>\nparent.location = 'top2.htm';\nlocation = 'about:blank'\n</script>\n______________________________________________\n\nDOMContentLoaded is attached by an extension (optimizegoogle) overlay.\n\nit fires for iframe.html which at that point appears to be orphaned", "time": "2011-10-24T21:24:03Z", "attachment_id": null}, {"author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "creation_time": "2011-10-25T00:33:52Z", "raw_text": "(In reply to al_9x from comment #0)\n> \n> it fires for iframe.html which at that point appears to be orphaned\n\ndocument.location (event.target.location) is null\nevent.target is iframe.html (but it's already been unhooked and replaced):\nevent.target.defaultView.document is about:blank", "time": "2011-10-25T00:33:52Z", "attachment_id": null, "text": "(In reply to al_9x from comment #0)\n> \n> it fires for iframe.html which at that point appears to be orphaned\n\ndocument.location (event.target.location) is null\nevent.target is iframe.html (but it's already been unhooked and replaced):\nevent.target.defaultView.document is about:blank", "id": 5802025, "is_private": false, "count": 1, "tags": [], "bug_id": 696885}, {"tags": [], "count": 2, "is_private": false, "id": 5803519, "bug_id": 696885, "raw_text": "Henri, do we fire DOMContentLoaded unconditionally when the parser terminates?", "creation_time": "2011-10-25T16:56:48Z", "creator": "bzbarsky@mit.edu", "text": "Henri, do we fire DOMContentLoaded unconditionally when the parser terminates?", "author": "bzbarsky@mit.edu", "time": "2011-10-25T16:56:48Z", "attachment_id": null}, {"creator": "hsivonen@mozilla.com", "author": "hsivonen@mozilla.com", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #2)\n> Henri, do we fire DOMContentLoaded unconditionally when the parser\n> terminates?\n\nYes.\n\nnsHtml5TreeOpExecutor::DidBuildModel (and in the old world, HTMLContentSink::DidBuildModel) call nsDocument::EndLoad unconditionally.", "creation_time": "2011-10-26T06:35:10Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #2)\n> Henri, do we fire DOMContentLoaded unconditionally when the parser\n> terminates?\n\nYes.\n\nnsHtml5TreeOpExecutor::DidBuildModel (and in the old world, HTMLContentSink::DidBuildModel) call nsDocument::EndLoad unconditionally.", "attachment_id": null, "time": "2011-10-26T06:35:10Z", "is_private": false, "count": 3, "tags": [], "id": 5805523, "bug_id": 696885}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "raw_text": "In that case looks like everything is behaving as it should here.", "creation_time": "2011-10-26T07:04:35Z", "time": "2011-10-26T07:04:35Z", "attachment_id": null, "text": "In that case looks like everything is behaving as it should here.", "id": 5805549, "tags": [], "count": 4, "is_private": false, "bug_id": 696885}, {"creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com", "tags": [], "is_private": false, "count": 5, "id": 5805935, "bug_id": 696885, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #4)\n> In that case looks like everything is behaving as it should here.\n\nAre you saying that DOMContentLoaded for a doc that's no longer part of the DOM, makes sense?", "creation_time": "2011-10-26T13:22:39Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #4)\n> In that case looks like everything is behaving as it should here.\n\nAre you saying that DOMContentLoaded for a doc that's no longer part of the DOM, makes sense?", "attachment_id": null, "time": "2011-10-26T13:22:39Z"}, {"author": "bugs@pettay.fi", "creator": "bugs@pettay.fi", "id": 5805937, "is_private": false, "count": 6, "tags": [], "bug_id": 696885, "creation_time": "2011-10-26T13:25:06Z", "raw_text": "DOM document itself is the root of a \"DOM\".", "time": "2011-10-26T13:25:06Z", "attachment_id": null, "text": "DOM document itself is the root of a \"DOM\"."}, {"creation_time": "2011-10-26T13:36:33Z", "raw_text": "Yep.  All DOMContentLoaded means is \"parser is don\".  It can fire as a result of the user hitting the stop button partway through the page load, for example.", "attachment_id": null, "time": "2011-10-26T13:36:33Z", "text": "Yep.  All DOMContentLoaded means is \"parser is don\".  It can fire as a result of the user hitting the stop button partway through the page load, for example.", "id": 5805958, "is_private": false, "count": 7, "tags": [], "bug_id": 696885, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu"}, {"author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "raw_text": "Parser being done for a document that's no longer in the tree is irrelevant.  Events only makes sense for current nodes, not past nodes.", "creation_time": "2011-10-26T13:40:48Z", "attachment_id": null, "time": "2011-10-26T13:40:48Z", "text": "Parser being done for a document that's no longer in the tree is irrelevant.  Events only makes sense for current nodes, not past nodes.", "id": 5805966, "count": 8, "is_private": false, "tags": [], "bug_id": 696885}, {"bug_id": 696885, "count": 9, "is_private": false, "tags": [], "id": 5805977, "text": "> Parser being done for a document that's no longer in the tree is irrelevant.\n\nWhy?  For example, the responseXML of an XMLHttpRequest is \"no longer in the tree\" (and in fact is never in the tree), right?  Similar for documents created via DOMImplementation.\n\n> Events only makes sense for current nodes, not past nodes.\n\nIf you have a reference to it, it's not a \"past node\".", "attachment_id": null, "time": "2011-10-26T13:45:47Z", "raw_text": "> Parser being done for a document that's no longer in the tree is irrelevant.\n\nWhy?  For example, the responseXML of an XMLHttpRequest is \"no longer in the tree\" (and in fact is never in the tree), right?  Similar for documents created via DOMImplementation.\n\n> Events only makes sense for current nodes, not past nodes.\n\nIf you have a reference to it, it's not a \"past node\".", "creation_time": "2011-10-26T13:45:47Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "id": 5806003, "count": 10, "is_private": false, "tags": [], "bug_id": 696885, "creation_time": "2011-10-26T13:58:35Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #9)\n> > Parser being done for a document that's no longer in the tree is irrelevant.\n> \n> Why?  For example, the responseXML of an XMLHttpRequest is \"no longer in the\n> tree\" (and in fact is never in the tree), right?  Similar for documents\n> created via DOMImplementation.\n> \n\nthat's straw man, we are clearly talking about documents that are meant to be part of the DOM tree (rooted somewhere in chrome)\n\n> > Events only makes sense for current nodes, not past nodes.\n> \n> If you have a reference to it, it's not a \"past node\".\n\nI don't have a reference to it, the event handler was attached to appcontent.  It is a past node because it is no longer DOM tree.  Event bubbling makes sense for the nodes currently in the tree.  How is it logical for an event from a disconnected node bubble up to appcontent?", "attachment_id": null, "time": "2011-10-26T13:58:35Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #9)\n> > Parser being done for a document that's no longer in the tree is irrelevant.\n> \n> Why?  For example, the responseXML of an XMLHttpRequest is \"no longer in the\n> tree\" (and in fact is never in the tree), right?  Similar for documents\n> created via DOMImplementation.\n> \n\nthat's straw man, we are clearly talking about documents that are meant to be part of the DOM tree (rooted somewhere in chrome)\n\n> > Events only makes sense for current nodes, not past nodes.\n> \n> If you have a reference to it, it's not a \"past node\".\n\nI don't have a reference to it, the event handler was attached to appcontent.  It is a past node because it is no longer DOM tree.  Event bubbling makes sense for the nodes currently in the tree.  How is it logical for an event from a disconnected node bubble up to appcontent?"}, {"is_private": false, "count": 11, "tags": [], "id": 5806013, "bug_id": 696885, "creation_time": "2011-10-26T14:01:09Z", "raw_text": "> we are clearly talking about documents that are meant to be part of the DOM tree\n\nThe document itself doesn't care what's \"meant\".  It just fires an event when it's done parsing.\n\nIf your handler is not attached to the document itself, then it may make sense to cut off the event propagation at the window if it's not the current inner.  Olli?", "text": "> we are clearly talking about documents that are meant to be part of the DOM tree\n\nThe document itself doesn't care what's \"meant\".  It just fires an event when it's done parsing.\n\nIf your handler is not attached to the document itself, then it may make sense to cut off the event propagation at the window if it's not the current inner.  Olli?", "time": "2011-10-26T14:01:09Z", "attachment_id": null, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #11)\n> > we are clearly talking about documents that are meant to be part of the DOM tree\n> \n> The document itself doesn't care what's \"meant\".  It just fires an event\n> when it's done parsing.\n\nWhen a doc is unhooked from the tree (window), that is the end of its life, logically it no longer exists.  That it still fires an event is an implementation artifact, no events should be delivered from it.\n\n> \n> If your handler is not attached to the document itself, then it may make\n> sense to cut off the event propagation at the window if it's not the current\n> inner.  Olli?\n\nAs I mentioned in the newsgroup thread, a handler attached to the document itself in content, is already not invoked. That makes sense, there should be no events from a dead doc, regardless of where they were attached.", "creation_time": "2011-10-26T14:50:52Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #11)\n> > we are clearly talking about documents that are meant to be part of the DOM tree\n> \n> The document itself doesn't care what's \"meant\".  It just fires an event\n> when it's done parsing.\n\nWhen a doc is unhooked from the tree (window), that is the end of its life, logically it no longer exists.  That it still fires an event is an implementation artifact, no events should be delivered from it.\n\n> \n> If your handler is not attached to the document itself, then it may make\n> sense to cut off the event propagation at the window if it's not the current\n> inner.  Olli?\n\nAs I mentioned in the newsgroup thread, a handler attached to the document itself in content, is already not invoked. That makes sense, there should be no events from a dead doc, regardless of where they were attached.", "time": "2011-10-26T14:50:52Z", "attachment_id": null, "is_private": false, "count": 12, "tags": [], "id": 5806127, "bug_id": 696885}, {"raw_text": "> When a doc is unhooked from the tree (window), that is the end of its life\n\nNo, it's really not.  For example, documents in the bfcache are thus unhooked but are most definitely not at the end of their life and very definitely exist.  Again, if you have a reference to the document it would all be there with all its elements and such.", "creation_time": "2011-10-26T14:55:11Z", "time": "2011-10-26T14:55:11Z", "attachment_id": null, "text": "> When a doc is unhooked from the tree (window), that is the end of its life\n\nNo, it's really not.  For example, documents in the bfcache are thus unhooked but are most definitely not at the end of their life and very definitely exist.  Again, if you have a reference to the document it would all be there with all its elements and such.", "id": 5806136, "tags": [], "is_private": false, "count": 13, "bug_id": 696885, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu"}, {"bug_id": 696885, "id": 5806413, "tags": [], "is_private": false, "count": 14, "author": "al_9x@yahoo.com", "attachment_id": null, "time": "2011-10-26T16:31:36Z", "creator": "al_9x@yahoo.com", "text": "(In reply to Boris Zbarsky (:bz) from comment #13)\n> > When a doc is unhooked from the tree (window), that is the end of its life\n> \n> No, it's really not.  For example, documents in the bfcache are thus\n> unhooked but are most definitely not at the end of their life and very\n> definitely exist. \n\nShould docs in bfcache fire events that propagate up the current/live dom tree?  That's what's at issue here.", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #13)\n> > When a doc is unhooked from the tree (window), that is the end of its life\n> \n> No, it's really not.  For example, documents in the bfcache are thus\n> unhooked but are most definitely not at the end of their life and very\n> definitely exist. \n\nShould docs in bfcache fire events that propagate up the current/live dom tree?  That's what's at issue here.", "creation_time": "2011-10-26T16:31:36Z"}, {"creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "creation_time": "2011-10-26T16:37:00Z", "raw_text": "Events can certainly be fired on docs in bfcache, and event listeners attached to those documents would get them.\n\nI agree that propagating the event to chrome is probably not desirable.", "text": "Events can certainly be fired on docs in bfcache, and event listeners attached to those documents would get them.\n\nI agree that propagating the event to chrome is probably not desirable.", "time": "2011-10-26T16:37:00Z", "attachment_id": null, "tags": [], "count": 15, "is_private": false, "id": 5806433, "bug_id": 696885}, {"creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "text": "There are few different cases. What if DOMContentLoaded is already dispatched and some event listener\nin the page causes a new page to be loaded? In that case capturing listeners in chrome have\nalready run, should also listeners in bubble phase run?", "attachment_id": null, "time": "2011-10-26T21:25:48Z", "raw_text": "There are few different cases. What if DOMContentLoaded is already dispatched and some event listener\nin the page causes a new page to be loaded? In that case capturing listeners in chrome have\nalready run, should also listeners in bubble phase run?", "creation_time": "2011-10-26T21:25:48Z", "bug_id": 696885, "tags": [], "count": 16, "is_private": false, "id": 5807329}, {"author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "bug_id": 696885, "id": 5808421, "tags": [], "count": 17, "is_private": false, "attachment_id": null, "time": "2011-10-27T08:55:07Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #15)\n> Events can certainly be fired on docs in bfcache, and event listeners\n> attached to those documents would get them.\n> \n\nCan you give an example of that?  I thought that bfcashed docs are supposed to be \"frozen\" so nothing should run in them, is that not the case?", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #15)\n> Events can certainly be fired on docs in bfcache, and event listeners\n> attached to those documents would get them.\n> \n\nCan you give an example of that?  I thought that bfcashed docs are supposed to be \"frozen\" so nothing should run in them, is that not the case?", "creation_time": "2011-10-27T08:55:07Z"}, {"creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "creation_time": "2011-10-27T10:33:02Z", "raw_text": "Nothing runs in the bfcached documents, but you may still have a pointer to them. And if\nan event is dispatched to such document, it ends up to chrome.\nThat is a case we could easily change though, since in that case we know before event dispatch\nthat the document is not the current document in the outer window and event target chain could stop\nto the inner window of the bfcached document.", "text": "Nothing runs in the bfcached documents, but you may still have a pointer to them. And if\nan event is dispatched to such document, it ends up to chrome.\nThat is a case we could easily change though, since in that case we know before event dispatch\nthat the document is not the current document in the outer window and event target chain could stop\nto the inner window of the bfcached document.", "attachment_id": null, "time": "2011-10-27T10:33:02Z", "count": 18, "is_private": false, "tags": [], "id": 5808497, "bug_id": 696885}, {"bug_id": 696885, "tags": [], "count": 19, "is_private": false, "id": 5808499, "text": "(In reply to Olli Pettay [:smaug] from comment #16)\n> There are few different cases. What if DOMContentLoaded is already\n> dispatched and some event listener\n> in the page causes a new page to be loaded? In that case capturing listeners\n> in chrome have\n> already run, should also listeners in bubble phase run?\n\nNo, after a doc is unhooked, no listeners should run.  I don't think anyone desires or even anticipates encountering docs in this state.  If such listeners run they will never do anything useful and only waste resources and produce bugs.", "time": "2011-10-27T10:35:09Z", "attachment_id": null, "raw_text": "(In reply to Olli Pettay [:smaug] from comment #16)\n> There are few different cases. What if DOMContentLoaded is already\n> dispatched and some event listener\n> in the page causes a new page to be loaded? In that case capturing listeners\n> in chrome have\n> already run, should also listeners in bubble phase run?\n\nNo, after a doc is unhooked, no listeners should run.  I don't think anyone desires or even anticipates encountering docs in this state.  If such listeners run they will never do anything useful and only waste resources and produce bugs.", "creation_time": "2011-10-27T10:35:09Z", "creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com"}, {"creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "bug_id": 696885, "tags": [], "is_private": false, "count": 20, "id": 5808502, "text": "Actually, I see the behavior that event listeners don't currently run in the bfcached documents\nas a bug, If you have a document and it has listener, those listeners should run when an event\nis dispatched. That is what the spec says.\nBecause of certain security related issues we've disabled event handling in bfcached documents.\n\nBut, whether or not events propagate from a bcached document to chrome is all Gecko internal\nthing, and we could change that.", "time": "2011-10-27T10:41:02Z", "attachment_id": null, "raw_text": "Actually, I see the behavior that event listeners don't currently run in the bfcached documents\nas a bug, If you have a document and it has listener, those listeners should run when an event\nis dispatched. That is what the spec says.\nBecause of certain security related issues we've disabled event handling in bfcached documents.\n\nBut, whether or not events propagate from a bcached document to chrome is all Gecko internal\nthing, and we could change that.", "creation_time": "2011-10-27T10:41:02Z"}, {"author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "attachment_id": null, "time": "2011-10-27T10:52:25Z", "text": "(In reply to Olli Pettay [:smaug] from comment #20)\n> Actually, I see the behavior that event listeners don't currently run in the\n> bfcached documents\n> as a bug, If you have a document and it has listener, those listeners should\n> run when an event\n> is dispatched. That is what the spec says.\n\nLink?  A bfcached document is supposed to be frozen, it's cached data, it should not be running.  Content scripts are not written with disconnected bfcached documents in mind, if you let them run not only will it be a waste of resources (all these cached docs doing stuff), but they will fail in subtle ways because they will expect the document to be part of the current dom tree.", "raw_text": "(In reply to Olli Pettay [:smaug] from comment #20)\n> Actually, I see the behavior that event listeners don't currently run in the\n> bfcached documents\n> as a bug, If you have a document and it has listener, those listeners should\n> run when an event\n> is dispatched. That is what the spec says.\n\nLink?  A bfcached document is supposed to be frozen, it's cached data, it should not be running.  Content scripts are not written with disconnected bfcached documents in mind, if you let them run not only will it be a waste of resources (all these cached docs doing stuff), but they will fail in subtle ways because they will expect the document to be part of the current dom tree.", "creation_time": "2011-10-27T10:52:25Z", "bug_id": 696885, "id": 5808509, "tags": [], "count": 21, "is_private": false}, {"bug_id": 696885, "count": 22, "is_private": false, "tags": [], "id": 5808520, "text": "(In reply to al_9x from comment #21)\n> not only will it be a waste\n> of resources (all these cached docs doing stuff)\n\nI guess if only events bfcached docs can receive are those programmatically dispatched by content (or extension) code (is that so?), resources are not a concern.\n\nI mentioned resources because initially I imagined flurry of background activity in numerous bfcached docs with events enabled.", "creator": "al_9x@yahoo.com", "time": "2011-10-27T11:12:30Z", "attachment_id": null, "author": "al_9x@yahoo.com", "creation_time": "2011-10-27T11:12:30Z", "raw_text": "(In reply to al_9x from comment #21)\n> not only will it be a waste\n> of resources (all these cached docs doing stuff)\n\nI guess if only events bfcached docs can receive are those programmatically dispatched by content (or extension) code (is that so?), resources are not a concern.\n\nI mentioned resources because initially I imagined flurry of background activity in numerous bfcached docs with events enabled."}, {"raw_text": "(In reply to al_9x from comment #21)\n> (In reply to Olli Pettay [:smaug] from comment #20) \n> Link? \nhttp://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html", "creation_time": "2011-10-27T11:18:23Z", "text": "(In reply to al_9x from comment #21)\n> (In reply to Olli Pettay [:smaug] from comment #20) \n> Link? \nhttp://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html", "time": "2011-10-27T11:18:23Z", "attachment_id": null, "tags": [], "is_private": false, "count": 23, "id": 5808524, "bug_id": 696885, "creator": "bugs@pettay.fi", "author": "bugs@pettay.fi"}, {"author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "id": 5808540, "tags": [], "count": 24, "is_private": false, "bug_id": 696885, "creation_time": "2011-10-27T11:36:15Z", "raw_text": "(In reply to Olli Pettay [:smaug] from comment #23)\n> (In reply to al_9x from comment #21)\n> > (In reply to Olli Pettay [:smaug] from comment #20) \n> > Link? \n> http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\n\nThat's a big document, please be more specific, where does it mention bfcached documents needing to run listeners?", "time": "2011-10-27T11:36:15Z", "attachment_id": null, "text": "(In reply to Olli Pettay [:smaug] from comment #23)\n> (In reply to al_9x from comment #21)\n> > (In reply to Olli Pettay [:smaug] from comment #20) \n> > Link? \n> http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\n\nThat's a big document, please be more specific, where does it mention bfcached documents needing to run listeners?"}, {"raw_text": "bfcache is Gecko internal thing, but documents have an API defined in that spec. And the spec is\nclear what should happen if you have listener added to some node and you dispatch an event.", "creation_time": "2011-10-27T12:38:42Z", "attachment_id": null, "time": "2011-10-27T12:38:42Z", "text": "bfcache is Gecko internal thing, but documents have an API defined in that spec. And the spec is\nclear what should happen if you have listener added to some node and you dispatch an event.", "id": 5808593, "count": 25, "is_private": false, "tags": [], "bug_id": 696885, "author": "bugs@pettay.fi", "creator": "bugs@pettay.fi"}, {"text": "> please be more specific, where does it mention bfcached documents needing to run\n> listeners?\n\nAny node with a listener attached needs to have that listener run when the relevant event is dispatched.  Doesn't matter what sort of document it's in.\n\nIf script holds a ref to a document and that document is unloaded or goes into bfcache, it's not like that document disappears: script is holding a reference to it.  It can still create elements from that document, import them into other documents, import elements into this document, fire events at it, etc.  It's just an in-memory DOM not being shown.  Plenty of those around, as I pointed out in comment 9.  The spec is very clear on all this; it simply doesn't make any exceptions for such documents.\n\nAgain, that's all separate from what should happen with event propagation to chrome.", "creator": "bzbarsky@mit.edu", "attachment_id": null, "time": "2011-10-27T13:27:55Z", "author": "bzbarsky@mit.edu", "creation_time": "2011-10-27T13:27:55Z", "raw_text": "> please be more specific, where does it mention bfcached documents needing to run\n> listeners?\n\nAny node with a listener attached needs to have that listener run when the relevant event is dispatched.  Doesn't matter what sort of document it's in.\n\nIf script holds a ref to a document and that document is unloaded or goes into bfcache, it's not like that document disappears: script is holding a reference to it.  It can still create elements from that document, import them into other documents, import elements into this document, fire events at it, etc.  It's just an in-memory DOM not being shown.  Plenty of those around, as I pointed out in comment 9.  The spec is very clear on all this; it simply doesn't make any exceptions for such documents.\n\nAgain, that's all separate from what should happen with event propagation to chrome.", "bug_id": 696885, "is_private": false, "count": 26, "tags": [], "id": 5808667}, {"bug_id": 696885, "id": 5808791, "tags": [], "is_private": false, "count": 27, "time": "2011-10-27T14:33:21Z", "attachment_id": null, "text": "Ok, I understand, the key factor here is some non gecko code keeping a reference to the doc, then whether it's bfcached or not is immaterial.  However, I was more interested in the case where the doc is bfcached with no references to it kept, because that scenario is closer to this bug.  A bfcached doc, with no one pocking at it, will and should remain completely frozen (no code, no events), right?", "raw_text": "Ok, I understand, the key factor here is some non gecko code keeping a reference to the doc, then whether it's bfcached or not is immaterial.  However, I was more interested in the case where the doc is bfcached with no references to it kept, because that scenario is closer to this bug.  A bfcached doc, with no one pocking at it, will and should remain completely frozen (no code, no events), right?", "creation_time": "2011-10-27T14:33:21Z", "author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com"}, {"id": 5809320, "is_private": false, "count": 28, "tags": [], "bug_id": 696885, "creation_time": "2011-10-27T17:29:10Z", "raw_text": "No obvious guarantees of that, but probably yes.", "attachment_id": null, "time": "2011-10-27T17:29:10Z", "text": "No obvious guarantees of that, but probably yes.", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu"}, {"attachment_id": null, "time": "2018-06-29T04:58:38Z", "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "creation_time": "2018-06-29T04:58:38Z", "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "bug_id": 696885, "id": 13436655, "tags": [], "count": 29, "is_private": false, "author": "bug-husbandry-bot@mozilla.bugs", "creator": "bug-husbandry-bot@mozilla.bugs"}]}}, "comments": {}}