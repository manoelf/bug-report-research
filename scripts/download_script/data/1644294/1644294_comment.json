{"comments": {}, "bugs": {"1644294": {"comments": [{"tags": [], "author": "ksiegler@mozilla.com", "attachment_id": null, "creator": "ksiegler@mozilla.com", "id": 14870678, "bug_id": 1644294, "count": 0, "is_private": false, "text": "Grafana shows elevated cumulative enrollment counts for an experiment as compared against telemetry.events.\n\nFor my particular experiment, this is the query I was comparing Grafana against which shows enrollment of ~300k / branch: https://sql.telemetry.mozilla.org/queries/71835/source\n\nAnd the Grafana dashboard, at ~1.7M: https://grafana.telemetry.mozilla.org/d/XspgvdxZz/experiment-enrollment?orgId=1&var-experiment_id=bug-1638228-pref-baseline-strict-mode-by-default-retention-study-v-release-76-80&from=1590364800000&to=", "creation_time": "2020-06-08T22:50:32Z", "time": "2020-06-08T22:50:32Z", "raw_text": "Grafana shows elevated cumulative enrollment counts for an experiment as compared against telemetry.events.\n\nFor my particular experiment, this is the query I was comparing Grafana against which shows enrollment of ~300k / branch: https://sql.telemetry.mozilla.org/queries/71835/source\n\nAnd the Grafana dashboard, at ~1.7M: https://grafana.telemetry.mozilla.org/d/XspgvdxZz/experiment-enrollment?orgId=1&var-experiment_id=bug-1638228-pref-baseline-strict-mode-by-default-retention-study-v-release-76-80&from=1590364800000&to="}, {"id": 14872709, "bug_id": 1644294, "author": "ascholtz@mozilla.com", "tags": [], "creator": "ascholtz@mozilla.com", "attachment_id": null, "is_private": false, "raw_text": "I found the issue. If you zoom in far enough into the graph in Grafana then the values will be correct. \n\nThe SQL query on Grafana depends on the zoom level of the graph or more specifically the `$__interval_ms` which will be larger the more the graph is zoomed out. `telemetry_derived.experiment_enrollment_aggregates_live` already provides cumulative enroll and unenroll counts over 5 minute intervals. Currently, the SQL query in Grafana sums up all of these 5 minute intervals that fit into `$__interval_ms`. E.g. if the graph in Grafana has a 20 minute time interval, then cumulative enroll counts for 4 aggregated intervals are summed up for each point in the graph. So the value shown in Grafana would be about 4 times higher than the actual value.\n\nAs a fix, the SQL query in Grafana needs to be changed. We might want to plot the counts for the start of each interval in the graph:\n\n```\n#standardSQL\nSELECT\n  timestamp_millis(cast((unix_millis(window_start)/$__interval_ms) as int64)*$__interval_ms) AS `time`,\n  `branch` as metric,\n  min(`cumulative_enroll_count`) - min(`cumulative_unenroll_count`) - min(`cumulative_graduate_count`) AS cumulative_population\nFROM `moz-fx-data-shared-prod.telemetry_derived.experiment_enrollment_aggregates_live`\nWHERE\n  $__timeFilter(window_start) AND\n  experiment = \"$experiment_id\"\n  and `branch` is not null\nGROUP BY 1, 2\nORDER BY 1\n```\n\nI hope my explanation is not too confusing. \n\nI updated the Grafana dashboard. For the provided example the values look to me as expected now. The fuzziness of the cumulative population graph is a known issue and related to https://bugzilla.mozilla.org/show_bug.cgi?id=1602041", "time": "2020-06-09T19:26:26Z", "creation_time": "2020-06-09T19:26:26Z", "text": "I found the issue. If you zoom in far enough into the graph in Grafana then the values will be correct. \n\nThe SQL query on Grafana depends on the zoom level of the graph or more specifically the `$__interval_ms` which will be larger the more the graph is zoomed out. `telemetry_derived.experiment_enrollment_aggregates_live` already provides cumulative enroll and unenroll counts over 5 minute intervals. Currently, the SQL query in Grafana sums up all of these 5 minute intervals that fit into `$__interval_ms`. E.g. if the graph in Grafana has a 20 minute time interval, then cumulative enroll counts for 4 aggregated intervals are summed up for each point in the graph. So the value shown in Grafana would be about 4 times higher than the actual value.\n\nAs a fix, the SQL query in Grafana needs to be changed. We might want to plot the counts for the start of each interval in the graph:\n\n```\n#standardSQL\nSELECT\n  timestamp_millis(cast((unix_millis(window_start)/$__interval_ms) as int64)*$__interval_ms) AS `time`,\n  `branch` as metric,\n  min(`cumulative_enroll_count`) - min(`cumulative_unenroll_count`) - min(`cumulative_graduate_count`) AS cumulative_population\nFROM `moz-fx-data-shared-prod.telemetry_derived.experiment_enrollment_aggregates_live`\nWHERE\n  $__timeFilter(window_start) AND\n  experiment = \"$experiment_id\"\n  and `branch` is not null\nGROUP BY 1, 2\nORDER BY 1\n```\n\nI hope my explanation is not too confusing. \n\nI updated the Grafana dashboard. For the provided example the values look to me as expected now. The fuzziness of the cumulative population graph is a known issue and related to https://bugzilla.mozilla.org/show_bug.cgi?id=1602041", "count": 1}, {"raw_text": ":kimmy Do the graphs look correct to you now?", "time": "2020-06-09T19:27:27Z", "is_private": false, "count": 2, "bug_id": 1644294, "id": 14872713, "creator": "ascholtz@mozilla.com", "creation_time": "2020-06-09T19:27:27Z", "text": ":kimmy Do the graphs look correct to you now?", "attachment_id": null, "author": "ascholtz@mozilla.com", "tags": []}, {"is_private": false, "raw_text": "Sorry I must have missed this before, just seeing it now. Yes that does make sense, and the graph I was referencing before now matches what I was seeing in the data. Thanks for the update!", "creation_time": "2020-06-11T15:24:33Z", "time": "2020-06-11T15:24:33Z", "text": "Sorry I must have missed this before, just seeing it now. Yes that does make sense, and the graph I was referencing before now matches what I was seeing in the data. Thanks for the update!", "count": 3, "id": 14876448, "bug_id": 1644294, "author": "ksiegler@mozilla.com", "tags": [], "creator": "ksiegler@mozilla.com", "attachment_id": null}]}}}