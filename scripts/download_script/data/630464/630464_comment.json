{"comments": {}, "bugs": {"630464": {"comments": [{"count": 0, "raw_text": "Brendan offered this as a way to punch a hole through the js layer between the xpconnect exception creator and the DOM error reporter exception consumer.  Then we can change the DOM code to use that info, and fix bug 482137.", "bug_id": 630464, "attachment_id": null, "author": "bzbarsky@mit.edu", "tags": [], "time": "2011-02-01T06:11:34Z", "text": "Brendan offered this as a way to punch a hole through the js layer between the xpconnect exception creator and the DOM error reporter exception consumer.  Then we can change the DOM code to use that info, and fix bug 482137.", "id": 5242101, "is_private": false, "creation_time": "2011-02-01T06:11:34Z", "creator": "bzbarsky@mit.edu"}, {"author": "gal@uci.edu", "tags": [], "bug_id": 630464, "attachment_id": null, "raw_text": "Information leaks beware. Make sure this stashed value is wrapped properly to censor information leaks.", "count": 1, "creator": "gal@uci.edu", "creation_time": "2011-02-01T06:14:43Z", "time": "2011-02-01T06:14:43Z", "text": "Information leaks beware. Make sure this stashed value is wrapped properly to censor information leaks.", "id": 5242106, "is_private": false}, {"raw_text": "Wrapped in what sense?\n\nI assume that we would censor it the same exact way we currently censor exceptions already in the dom error reporter, no?", "text": "Wrapped in what sense?\n\nI assume that we would censor it the same exact way we currently censor exceptions already in the dom error reporter, no?", "id": 5242109, "time": "2011-02-01T06:17:22Z", "is_private": false, "count": 2, "tags": [], "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "attachment_id": null, "bug_id": 630464, "creation_time": "2011-02-01T06:17:22Z"}, {"raw_text": "Yeah. We just have to suddenly wrap where we didn't have to wrap before. Also, JSErrorReport is not going to keep the value alive. Are you sure it is rooted somewhere?", "count": 3, "author": "gal@uci.edu", "tags": [], "bug_id": 630464, "attachment_id": null, "time": "2011-02-01T06:20:10Z", "text": "Yeah. We just have to suddenly wrap where we didn't have to wrap before. Also, JSErrorReport is not going to keep the value alive. Are you sure it is rooted somewhere?", "id": 5242113, "is_private": false, "creator": "gal@uci.edu", "creation_time": "2011-02-01T06:20:10Z"}, {"id": 5242120, "text": "brendan hand-waved something about making sure it's rooted, yes... ;)\n\nI'm still not sure where we need where we didn't have to wrap before...", "time": "2011-02-01T06:22:37Z", "is_private": false, "creator": "bzbarsky@mit.edu", "creation_time": "2011-02-01T06:22:37Z", "raw_text": "brendan hand-waved something about making sure it's rooted, yes... ;)\n\nI'm still not sure where we need where we didn't have to wrap before...", "count": 4, "tags": [], "author": "bzbarsky@mit.edu", "attachment_id": null, "bug_id": 630464}, {"is_private": false, "time": "2011-02-01T06:37:19Z", "id": 5242144, "text": "The wrapping worry would be if an exception was uncaught and the reporter was called from a different compartment. But shouldn't the exception be wrapped as it throws across compartment boundaries?\n\nI didn't hand-wave rooting, I said we need to root the thrown exception value!\n\nbrendan: bz: we can extend JSErrorReport with a copy of the pending exception value (need to make sure it's rooted, via stack conservatively if possible)\n\n/be", "creator": "brendan@mozilla.org", "creation_time": "2011-02-01T06:37:19Z", "raw_text": "The wrapping worry would be if an exception was uncaught and the reporter was called from a different compartment. But shouldn't the exception be wrapped as it throws across compartment boundaries?\n\nI didn't hand-wave rooting, I said we need to root the thrown exception value!\n\nbrendan: bz: we can extend JSErrorReport with a copy of the pending exception value (need to make sure it's rooted, via stack conservatively if possible)\n\n/be", "count": 5, "author": "brendan@mozilla.org", "tags": [], "bug_id": 630464, "attachment_id": null}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "tags": [], "creation_time": "2013-07-25T16:09:14Z", "bug_id": 630464, "attachment_id": null, "is_private": false, "time": "2013-07-25T16:09:14Z", "id": 7676556, "raw_text": "The HTML spec just added a new argument to window.onerror: the original exception, so that .stack can be gotten from it.\n\nWe can't implement that unless this bug is fixed.", "text": "The HTML spec just added a new argument to window.onerror: the original exception, so that .stack can be gotten from it.\n\nWe can't implement that unless this bug is fixed.", "count": 6}, {"author": "nth10sd@gmail.com", "tags": [], "bug_id": 630464, "attachment_id": null, "raw_text": "This blocks getting stacks from JS errors, which is extremely useful for QA/Stability teams for Firefox OS, and which blocks bug 355430, so nominating for b2g.", "count": 7, "creator": "nth10sd@gmail.com", "creation_time": "2013-10-02T16:41:20Z", "time": "2013-10-02T16:41:20Z", "text": "This blocks getting stacks from JS errors, which is extremely useful for QA/Stability teams for Firefox OS, and which blocks bug 355430, so nominating for b2g.", "id": 7926794, "is_private": false}, {"bug_id": 630464, "attachment_id": null, "creation_time": "2013-10-02T17:16:16Z", "author": "jwalden@mit.edu", "creator": "jwalden@mit.edu", "tags": [], "count": 8, "time": "2013-10-02T17:16:16Z", "id": 7926941, "raw_text": "I'll take a look at this.", "text": "I'll take a look at this.", "is_private": false}, {"raw_text": "(In reply to Gary Kwong [:gkw] [:nth10sd] (yes, still catching up on bugmail) from comment #7)\n> This blocks getting stacks from JS errors, which is extremely useful for\n> QA/Stability teams for Firefox OS, and which blocks bug 355430, so\n> nominating for b2g.\n\nThis isn't a committed feature for 1.3, so this isn't a blocker.", "count": 9, "tags": [], "author": "jsmith@mozilla.com", "attachment_id": null, "bug_id": 630464, "is_private": false, "id": 8137437, "text": "(In reply to Gary Kwong [:gkw] [:nth10sd] (yes, still catching up on bugmail) from comment #7)\n> This blocks getting stacks from JS errors, which is extremely useful for\n> QA/Stability teams for Firefox OS, and which blocks bug 355430, so\n> nominating for b2g.\n\nThis isn't a committed feature for 1.3, so this isn't a blocker.", "time": "2013-11-29T01:12:52Z", "creator": "jsmith@mozilla.com", "creation_time": "2013-11-29T01:12:52Z"}]}}}