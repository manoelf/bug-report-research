{"comments": {}, "bugs": {"711479": {"comments": [{"attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Ubuntu; X11; Linux i686; rv:8.0) Gecko/20100101 Firefox/8.0\nBuild ID: 20111115183158\n\nSteps to reproduce:\n\nThe following potential NULL pointer dereference was found by Coccinelle (http://coccinelle.lip6.fr) in the file content/base/src/nsDocument.cpp in the function nsDocument::FullScreenStackPop.  Element can be NULL in the then branch of the conditional, in which case the dereference is invalid.\n\n    if (!element || !element->IsInDoc() || element->OwnerDoc() != this) {\n      NS_ASSERTION(!element->IsFullScreenAncestor(),\n                   \"Should have already removed full-screen styles\");", "time": "2011-12-16T16:13:38Z", "tags": [], "author": "julia.lawall@lip6.fr", "text": "User Agent: Mozilla/5.0 (Ubuntu; X11; Linux i686; rv:8.0) Gecko/20100101 Firefox/8.0\nBuild ID: 20111115183158\n\nSteps to reproduce:\n\nThe following potential NULL pointer dereference was found by Coccinelle (http://coccinelle.lip6.fr) in the file content/base/src/nsDocument.cpp in the function nsDocument::FullScreenStackPop.  Element can be NULL in the then branch of the conditional, in which case the dereference is invalid.\n\n    if (!element || !element->IsInDoc() || element->OwnerDoc() != this) {\n      NS_ASSERTION(!element->IsFullScreenAncestor(),\n                   \"Should have already removed full-screen styles\");", "count": 0, "creator": "julia.lawall@lip6.fr", "is_private": false, "creation_time": "2011-12-16T16:13:38Z", "id": 5922051, "bug_id": 711479}, {"is_private": false, "creation_time": "2011-12-19T08:11:41Z", "bug_id": 711479, "id": 5926129, "author": "acelists@atlas.sk", "text": "Thanks, the problem looks valid.", "count": 1, "creator": "acelists@atlas.sk", "tags": [], "attachment_id": null, "raw_text": "Thanks, the problem looks valid.", "time": "2011-12-19T08:11:41Z"}, {"tags": [], "time": "2011-12-19T08:20:22Z", "raw_text": "In fact, the null-check is redundant. FullScreenStackTop() asserts that it returns non-null if !mFullScreenStack.IsEmpty(), and this check is in a while (!mFullScreenStack.IsEmpty()) loop.", "attachment_id": null, "id": 5926137, "bug_id": 711479, "creation_time": "2011-12-19T08:20:22Z", "is_private": false, "creator": "Ms2ger@gmail.com", "count": 2, "text": "In fact, the null-check is redundant. FullScreenStackTop() asserts that it returns non-null if !mFullScreenStack.IsEmpty(), and this check is in a while (!mFullScreenStack.IsEmpty()) loop.", "author": "Ms2ger@gmail.com"}, {"attachment_id": null, "tags": [], "creator": "bzbarsky@mit.edu", "creation_time": "2011-12-19T08:23:17Z", "is_private": false, "time": "2011-12-19T08:23:17Z", "raw_text": "Chris, can you take a look?", "author": "bzbarsky@mit.edu", "count": 3, "text": "Chris, can you take a look?", "bug_id": 711479, "id": 5926140}, {"creator": "Ms2ger@gmail.com", "author": "Ms2ger@gmail.com", "text": "Created attachment 582760\nAssert that FullScreenStackTop() returns a non-null element when mFullScreenStack.IsEmpty() is false;", "count": 4, "id": 5926146, "bug_id": 711479, "creation_time": "2011-12-19T08:25:28Z", "is_private": false, "time": "2011-12-19T08:25:28Z", "attachment_id": 582760, "raw_text": "", "tags": []}, {"time": "2011-12-19T21:07:51Z", "attachment_id": 582760, "raw_text": "Review of attachment 582760:\n-----------------------------------------------------------------\n\nFullScreenStackTop() can return a null element; it returns the front element in a queue of weak references, the weak references can be annulled if the object they point to are GC'd.\n\nWe should just change the assertion on line 8777 to:\n\n      NS_ASSERTION(!element || !element->IsFullScreenAncestor(),\n                   \"Should have already removed full-screen styles\");\n\nThanks for pointing out this issue!", "tags": [], "creator": "chris@pearce.org.nz", "author": "chris@pearce.org.nz", "count": 5, "text": "Comment on attachment 582760\nAssert that FullScreenStackTop() returns a non-null element when mFullScreenStack.IsEmpty() is false;\n\nReview of attachment 582760:\n-----------------------------------------------------------------\n\nFullScreenStackTop() can return a null element; it returns the front element in a queue of weak references, the weak references can be annulled if the object they point to are GC'd.\n\nWe should just change the assertion on line 8777 to:\n\n      NS_ASSERTION(!element || !element->IsFullScreenAncestor(),\n                   \"Should have already removed full-screen styles\");\n\nThanks for pointing out this issue!", "bug_id": 711479, "id": 5927782, "is_private": false, "creation_time": "2011-12-19T21:07:51Z"}, {"time": "2011-12-19T21:12:31Z", "raw_text": "So the assertions in <http://mxr.mozilla.org/mozilla-central/source/content/base/src/nsDocument.cpp#8757> are all lies?", "bug_id": 711479, "id": 5927799, "count": 6, "text": "So the assertions in <http://mxr.mozilla.org/mozilla-central/source/content/base/src/nsDocument.cpp#8757> are all lies?", "author": "Ms2ger@gmail.com", "tags": [], "attachment_id": null, "creation_time": "2011-12-19T21:12:31Z", "is_private": false, "creator": "Ms2ger@gmail.com"}, {"attachment_id": null, "raw_text": "Yes. Oops.", "time": "2011-12-19T21:18:46Z", "tags": [], "author": "chris@pearce.org.nz", "count": 7, "text": "Yes. Oops.", "creator": "chris@pearce.org.nz", "is_private": false, "creation_time": "2011-12-19T21:18:46Z", "bug_id": 711479, "id": 5927816}, {"raw_text": "Actually no, they're not. FullScreenStackTop() will always return non-null, because the only way the full-screen element can be GC'd is if it's removed from the document, and we exit full-screen in that case.\n\nThe only way the full-screen element can change is when we call FullScreenStackPop() which makes the top-most non-null element as the full-screen element, so then we'd be covered by the former case to ensure it's non-null.\n\nSo those assertions are still correct, but we could definitely use a comment explaining the above...", "time": "2011-12-19T21:51:24Z", "count": 8, "text": "Actually no, they're not. FullScreenStackTop() will always return non-null, because the only way the full-screen element can be GC'd is if it's removed from the document, and we exit full-screen in that case.\n\nThe only way the full-screen element can change is when we call FullScreenStackPop() which makes the top-most non-null element as the full-screen element, so then we'd be covered by the former case to ensure it's non-null.\n\nSo those assertions are still correct, but we could definitely use a comment explaining the above...", "author": "chris@pearce.org.nz", "bug_id": 711479, "id": 5927916, "attachment_id": null, "tags": [], "creator": "chris@pearce.org.nz", "creation_time": "2011-12-19T21:51:24Z", "is_private": false}, {"is_private": false, "creation_time": "2011-12-20T10:41:37Z", "creator": "Ms2ger@gmail.com", "tags": [], "attachment_id": 583104, "id": 5929104, "bug_id": 711479, "author": "Ms2ger@gmail.com", "count": 9, "text": "Created attachment 583104\nCorrect assertions around FullScreenStackTop();\n\nLike this, then?", "time": "2011-12-20T10:41:37Z", "raw_text": "Like this, then?"}, {"tags": [], "attachment_id": 583109, "is_private": false, "creation_time": "2011-12-20T11:14:50Z", "creator": "Ms2ger@gmail.com", "time": "2011-12-20T11:14:50Z", "raw_text": "Or like this?", "bug_id": 711479, "id": 5929157, "author": "Ms2ger@gmail.com", "text": "Created attachment 583109\nAssert that FullScreenStackTop() returns a non-null element when mFullScreenStack.IsEmpty() is false;\n\nOr like this?", "count": 10}, {"author": "chris@pearce.org.nz", "text": "Comment on attachment 583104\nCorrect assertions around FullScreenStackTop();\n\nReview of attachment 583104:\n-----------------------------------------------------------------\n\nr=cpearce with the assertion \"NS_ASSERTION(element, \"Should have full-screen element!\");\" put back in.\n\n::: content/base/src/nsDocument.cpp\n@@ -8760,5 @@\n>      return nsnull;\n>    }\n>    PRUint32 last = mFullScreenStack.Length() - 1;\n>    nsCOMPtr<Element> element(do_QueryReferent(mFullScreenStack[last]));\n> -  NS_ASSERTION(element, \"Should have full-screen element!\");\n\nLeave this assertion in; if the full-screen stack non-empty and the top-most element in the stack is null, we're in an incorrect state.\n\n@@ -8762,5 @@\n>    PRUint32 last = mFullScreenStack.Length() - 1;\n>    nsCOMPtr<Element> element(do_QueryReferent(mFullScreenStack[last]));\n> -  NS_ASSERTION(element, \"Should have full-screen element!\");\n> -  NS_ASSERTION(element->IsInDoc(), \"Full-screen element should be in doc\");\n> -  NS_ASSERTION(element->OwnerDoc() == this, \"Full-screen element should be in this doc\");\n\nYup, go ahead and remove these assertions and replace them with your new one.", "count": 11, "creator": "chris@pearce.org.nz", "is_private": false, "creation_time": "2011-12-21T21:26:16Z", "bug_id": 711479, "id": 5933565, "attachment_id": 583104, "raw_text": "Review of attachment 583104:\n-----------------------------------------------------------------\n\nr=cpearce with the assertion \"NS_ASSERTION(element, \"Should have full-screen element!\");\" put back in.\n\n::: content/base/src/nsDocument.cpp\n@@ -8760,5 @@\n>      return nsnull;\n>    }\n>    PRUint32 last = mFullScreenStack.Length() - 1;\n>    nsCOMPtr<Element> element(do_QueryReferent(mFullScreenStack[last]));\n> -  NS_ASSERTION(element, \"Should have full-screen element!\");\n\nLeave this assertion in; if the full-screen stack non-empty and the top-most element in the stack is null, we're in an incorrect state.\n\n@@ -8762,5 @@\n>    PRUint32 last = mFullScreenStack.Length() - 1;\n>    nsCOMPtr<Element> element(do_QueryReferent(mFullScreenStack[last]));\n> -  NS_ASSERTION(element, \"Should have full-screen element!\");\n> -  NS_ASSERTION(element->IsInDoc(), \"Full-screen element should be in doc\");\n> -  NS_ASSERTION(element->OwnerDoc() == this, \"Full-screen element should be in this doc\");\n\nYup, go ahead and remove these assertions and replace them with your new one.", "time": "2011-12-21T21:26:16Z", "tags": []}, {"creator": "chris@pearce.org.nz", "is_private": false, "creation_time": "2011-12-21T21:30:22Z", "attachment_id": 583109, "tags": [], "text": "Comment on attachment 583109\nAssert that FullScreenStackTop() returns a non-null element when mFullScreenStack.IsEmpty() is false;\n\nReview of attachment 583109:\n-----------------------------------------------------------------\n\nLet's take the other patch instead. Thanks!\n\n::: content/base/src/nsDocument.cpp\n@@ +8753,5 @@\n>      }\n>    }\n>  }\n>  \n> +// FullScreenStackTop() will always return non-null, because the only way the\n\nLet's move this comment into the other patch, but let's make that \"FullScreenStackTop() should always return non-null...\"", "count": 12, "author": "chris@pearce.org.nz", "id": 5933578, "bug_id": 711479, "raw_text": "Review of attachment 583109:\n-----------------------------------------------------------------\n\nLet's take the other patch instead. Thanks!\n\n::: content/base/src/nsDocument.cpp\n@@ +8753,5 @@\n>      }\n>    }\n>  }\n>  \n> +// FullScreenStackTop() will always return non-null, because the only way the\n\nLet's move this comment into the other patch, but let's make that \"FullScreenStackTop() should always return non-null...\"", "time": "2011-12-21T21:30:22Z"}, {"time": "2018-06-29T04:39:32Z", "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven't been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "bug_id": 711479, "id": 13435088, "author": "bug-husbandry-bot@mozilla.bugs", "count": 13, "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven't been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2018-06-29T04:39:32Z", "creator": "bug-husbandry-bot@mozilla.bugs"}]}}}