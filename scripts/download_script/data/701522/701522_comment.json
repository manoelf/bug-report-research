{"comments": {}, "bugs": {"701522": {"comments": [{"author": "mattm@letsencrypt.org", "creator": "mattm@letsencrypt.org", "raw_text": "I am working on integrating LevelDB (bug 679852).\n\nThe \"#define kNotFound -1\" conflicts with an element of an enum in LevelDB.\n\nIf nsAString.h is #included before any LevelDB headers, at best we get a compile error (Because enum Code { ..., -1 = 1, ...}; is invalid syntax).\n\nAt worst, somebody in the leveldb:: namespace who uses kNotFound compares against -1 instead of 1, leading to incorrect behaviour.\n\nCorrect use of #undef kNotFound before #including LevelDB headers avoids this problem, however it may lead to future problems.\n\nOne possibility is changing nsAString.h. That's what this bug is for.", "creation_time": "2011-11-10T22:15:21Z", "attachment_id": null, "time": "2011-11-10T22:15:21Z", "text": "I am working on integrating LevelDB (bug 679852).\n\nThe \"#define kNotFound -1\" conflicts with an element of an enum in LevelDB.\n\nIf nsAString.h is #included before any LevelDB headers, at best we get a compile error (Because enum Code { ..., -1 = 1, ...}; is invalid syntax).\n\nAt worst, somebody in the leveldb:: namespace who uses kNotFound compares against -1 instead of 1, leading to incorrect behaviour.\n\nCorrect use of #undef kNotFound before #including LevelDB headers avoids this problem, however it may lead to future problems.\n\nOne possibility is changing nsAString.h. That's what this bug is for.", "id": 5841361, "tags": [], "is_private": false, "count": 0, "bug_id": 701522}, {"tags": [], "is_private": false, "count": 1, "id": 5842455, "bug_id": 701522, "creation_time": "2011-11-11T12:23:57Z", "raw_text": "Looks like we could probably change that to const PRInt32 kNotFound = -1;", "text": "Looks like we could probably change that to const PRInt32 kNotFound = -1;", "creator": "ted@mielczarek.org", "author": "ted@mielczarek.org", "time": "2011-11-11T12:23:57Z", "attachment_id": null}, {"attachment_id": null, "time": "2011-11-13T04:36:40Z", "text": "Or even to a static member on nsAString, and fix our consumers.", "raw_text": "Or even to a static member on nsAString, and fix our consumers.", "creation_time": "2011-11-13T04:36:40Z", "bug_id": 701522, "id": 5845116, "count": 2, "is_private": false, "tags": [], "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu"}, {"tags": [], "count": 3, "is_private": false, "id": 5845124, "bug_id": 701522, "creation_time": "2011-11-13T04:50:04Z", "raw_text": "Seems to build on Linux, at least. Pushing to try to find out what happens.", "text": "Created attachment 574115\nGlobal constant kNotFound\n\nSeems to build on Linux, at least. Pushing to try to find out what happens.", "attachment_id": 574115, "time": "2011-11-13T04:50:04Z", "creator": "mattm@letsencrypt.org", "author": "mattm@letsencrypt.org"}, {"creator": "release@mozilla.com", "author": "release@mozilla.com", "creation_time": "2011-11-13T08:50:19Z", "raw_text": "Try run for 7b687eed8c27 is complete.\nDetailed breakdown of the results available here:\n    https://tbpl.mozilla.org/?tree=Try&rev=7b687eed8c27\nResults (out of 209 total builds):\n    success: 190\n    warnings: 18\n    failure: 1\nBuilds available at http://ftp.mozilla.org/pub/mozilla.org/firefox/try-builds/mmcpherrin@mozilla.com-7b687eed8c27", "text": "Try run for 7b687eed8c27 is complete.\nDetailed breakdown of the results available here:\n    https://tbpl.mozilla.org/?tree=Try&rev=7b687eed8c27\nResults (out of 209 total builds):\n    success: 190\n    warnings: 18\n    failure: 1\nBuilds available at http://ftp.mozilla.org/pub/mozilla.org/firefox/try-builds/mmcpherrin@mozilla.com-7b687eed8c27", "time": "2011-11-13T08:50:19Z", "attachment_id": null, "count": 4, "is_private": false, "tags": [], "id": 5845247, "bug_id": 701522}, {"text": "I've been working on a patch to make nsAString::kNotFound instead of a global, which I think is preferable but requires some treewide changes.", "time": "2011-11-14T15:00:34Z", "attachment_id": null, "raw_text": "I've been working on a patch to make nsAString::kNotFound instead of a global, which I think is preferable but requires some treewide changes.", "creation_time": "2011-11-14T15:00:34Z", "bug_id": 701522, "tags": [], "is_private": false, "count": 5, "id": 5846580, "creator": "benjamin@smedbergs.us", "author": "benjamin@smedbergs.us"}, {"id": 6433796, "tags": [], "count": 6, "is_private": false, "bug_id": 701522, "raw_text": "I'm not going to have the time to finish what I started here. If there's a simpler patch and this is still an issue we can probably take that.", "creation_time": "2012-06-29T15:45:16Z", "time": "2012-06-29T15:45:16Z", "attachment_id": null, "text": "I'm not going to have the time to finish what I started here. If there's a simpler patch and this is still an issue we can probably take that.", "author": "benjamin@smedbergs.us", "creator": "benjamin@smedbergs.us"}]}}}