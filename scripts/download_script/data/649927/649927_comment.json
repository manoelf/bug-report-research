{"bugs": {"649927": {"comments": [{"raw_text": "Server when parses a parses session ticket sent by the client, it sets\nstatelessResume to true.\n\n    882 SECStatus\n    883 ssl3_ServerHandleSessionTicketXtn(sslSocket *ss, PRUint16 ex_type,\n    884 SECItem *data)\n    885 {\n    ...\n    1258     ss->statelessResume = PR_TRUE;\n\n    http://mxr.mozilla.org/mozilla/source/security/nss/lib/ssl/ssl3con.c#6136\n\n    5966 static SECStatus\n    5967 ssl3_HandleClientHello(sslSocket *ss, SSL3Opaque *b, PRUint32 length)\n    5968 {\n    ...\n    6136 } else if (ss->statelessResume) {\n    6137  /* Fill in the client's session ID if doing a stateless resume.\n    6138   * (When doing stateless resumes, server echos client's SessionID.)\n    6139   */\n    6140   sid = ss->sec.ci.sid;\n    6141   PORT_Assert(sid != NULL); /* Should have already been filled in.*/\n    6142\n    6143   if (sidBytes.len > 0 && sidBytes.len <= SSL3_SESSIONID_BYTES) {\n    6144   sid->u.ssl3.sessionIDLength = sidBytes.len;\n    6145   PORT_Memcpy(sid->u.ssl3.sessionID, sidBytes.data,\n    6146               sidBytes.len);\n    6147   sid->u.ssl3.sessionIDLength = sidBytes.len;\n\n-> Nit this is same as line #6144\n\n    6148 } else {\n    6149     sid->u.ssl3.sessionIDLength = 0;\n\nShould we set ss->statelessResume = PR_FALSE; here? \n\n    6150 }\n    ...\n\nThis \"statelessResume\" is used to log statistics later :\n\n    6403 SSL_AtomicIncrementLong(& ssl3stats.hch_sid_cache_hits );\n    6404 if (ss->statelessResume)\n    6405     SSL_AtomicIncrementLong(& ssl3stats.hch_sid_stateless_resumes );", "is_private": false, "tags": [], "creation_time": "2011-04-14T06:40:57Z", "id": 5408869, "attachment_id": null, "text": "Server when parses a parses session ticket sent by the client, it sets\nstatelessResume to true.\n\n    882 SECStatus\n    883 ssl3_ServerHandleSessionTicketXtn(sslSocket *ss, PRUint16 ex_type,\n    884 SECItem *data)\n    885 {\n    ...\n    1258     ss->statelessResume = PR_TRUE;\n\n    http://mxr.mozilla.org/mozilla/source/security/nss/lib/ssl/ssl3con.c#6136\n\n    5966 static SECStatus\n    5967 ssl3_HandleClientHello(sslSocket *ss, SSL3Opaque *b, PRUint32 length)\n    5968 {\n    ...\n    6136 } else if (ss->statelessResume) {\n    6137  /* Fill in the client's session ID if doing a stateless resume.\n    6138   * (When doing stateless resumes, server echos client's SessionID.)\n    6139   */\n    6140   sid = ss->sec.ci.sid;\n    6141   PORT_Assert(sid != NULL); /* Should have already been filled in.*/\n    6142\n    6143   if (sidBytes.len > 0 && sidBytes.len <= SSL3_SESSIONID_BYTES) {\n    6144   sid->u.ssl3.sessionIDLength = sidBytes.len;\n    6145   PORT_Memcpy(sid->u.ssl3.sessionID, sidBytes.data,\n    6146               sidBytes.len);\n    6147   sid->u.ssl3.sessionIDLength = sidBytes.len;\n\n-> Nit this is same as line #6144\n\n    6148 } else {\n    6149     sid->u.ssl3.sessionIDLength = 0;\n\nShould we set ss->statelessResume = PR_FALSE; here? \n\n    6150 }\n    ...\n\nThis \"statelessResume\" is used to log statistics later :\n\n    6403 SSL_AtomicIncrementLong(& ssl3stats.hch_sid_cache_hits );\n    6404 if (ss->statelessResume)\n    6405     SSL_AtomicIncrementLong(& ssl3stats.hch_sid_stateless_resumes );", "bug_id": 649927, "count": 0, "time": "2011-04-14T06:40:57Z", "creator": "u238590@disabled.tld", "author": "u238590@disabled.tld"}]}}, "comments": {}}