{"bugs": {"664633": {"comments": [{"raw_text": "Currently, Thunderbird asks the user for his email address, e.g. fred@example.com and password. \n\nThen, sends an http request to http://autoconfig.example.com/mail/config-v1.1.xml?emailaddress=fred@example.com. This is problematic because:\n\n(1) The user's email address in sent in the clear, so it is vulnerable to passive attacks like Firesheep, and the response is unauthenticated, so it is vulnerable to active attacks that would allow an attacker to provide bogus configuration information that would allow the attacker to steal the user's credentials during the first attempted login. We should do this request over an authenticated channel.\n(2) If the email service provider provides this per-user configuration information, then it may leak users' authentication usernames to attackers. (Attackers can do dictionary attacks for usernames). We should not encourage email providers to leak this information. \n(3). If the email service provider provides this per-user configuration information, then it will be leaking the validity of email addresses at that domain. (Attackers can do dictionary attacks for email addresses, to determine which ones are valid). We should not be encouraging email providers to leak this information.\n\nThen, Thunderbird sends a request to http://autoconfig.example.com/mail/config-v1.1.xml. This has the same problem with unauthenticated data as the previous case.\n\nThen, Thunderbird sends a request to https://live.mozillamessaging.com/autoconfig/v1.1/example.com. This is done so that the mozillamessaging.com server can look up the MX record for the domain and/or return configuration info from its configuration database. This leaks the user's domain name to the live.mozillamessaging.com server, and means that Thunderbird must trust the love.mozillamessaging.com server to provide accurate results. We should try the MX record lookup client-side first, and we should try to look up the configuration from a local copy of the configuration database. We should only fall back to sending the domain name to the mozillamessaging.com server when this local lookup fails. (Also, we don't yet have a way of validating the MX record's authenticity since we don't support DNSSEC and many email providers do not have DNSSEC signed records.) Since a local copy of the configuration database will have the correct information for the vast majority (Sid0 said ~95%) of cases, this would avoid leaking any info for the vast majority of users. IMO it makes sense to only do the request to mozillamessaging.com upon receiving permission from the user. (But, maybe this would be overkill.) Note that it is important to get as many users as possible to send their domain name to the mozillamessaging.com service when the auto-configuration fails, so that we can improve the auto-configuration.\n\nAlso, the auto-configuration database doesn't include any information about whether to expect a valid TLS certificate for the server. This would be very useful information to have because it would prevent MitM attacks that use invalid certificates. Basically, the auto-configuration database should include some kind of HSTS designation for the server.", "time": "2011-06-16T01:22:04Z", "count": 0, "text": "Currently, Thunderbird asks the user for his email address, e.g. fred@example.com and password. \n\nThen, sends an http request to http://autoconfig.example.com/mail/config-v1.1.xml?emailaddress=fred@example.com. This is problematic because:\n\n(1) The user's email address in sent in the clear, so it is vulnerable to passive attacks like Firesheep, and the response is unauthenticated, so it is vulnerable to active attacks that would allow an attacker to provide bogus configuration information that would allow the attacker to steal the user's credentials during the first attempted login. We should do this request over an authenticated channel.\n(2) If the email service provider provides this per-user configuration information, then it may leak users' authentication usernames to attackers. (Attackers can do dictionary attacks for usernames). We should not encourage email providers to leak this information. \n(3). If the email service provider provides this per-user configuration information, then it will be leaking the validity of email addresses at that domain. (Attackers can do dictionary attacks for email addresses, to determine which ones are valid). We should not be encouraging email providers to leak this information.\n\nThen, Thunderbird sends a request to http://autoconfig.example.com/mail/config-v1.1.xml. This has the same problem with unauthenticated data as the previous case.\n\nThen, Thunderbird sends a request to https://live.mozillamessaging.com/autoconfig/v1.1/example.com. This is done so that the mozillamessaging.com server can look up the MX record for the domain and/or return configuration info from its configuration database. This leaks the user's domain name to the live.mozillamessaging.com server, and means that Thunderbird must trust the love.mozillamessaging.com server to provide accurate results. We should try the MX record lookup client-side first, and we should try to look up the configuration from a local copy of the configuration database. We should only fall back to sending the domain name to the mozillamessaging.com server when this local lookup fails. (Also, we don't yet have a way of validating the MX record's authenticity since we don't support DNSSEC and many email providers do not have DNSSEC signed records.) Since a local copy of the configuration database will have the correct information for the vast majority (Sid0 said ~95%) of cases, this would avoid leaking any info for the vast majority of users. IMO it makes sense to only do the request to mozillamessaging.com upon receiving permission from the user. (But, maybe this would be overkill.) Note that it is important to get as many users as possible to send their domain name to the mozillamessaging.com service when the auto-configuration fails, so that we can improve the auto-configuration.\n\nAlso, the auto-configuration database doesn't include any information about whether to expect a valid TLS certificate for the server. This would be very useful information to have because it would prevent MitM attacks that use invalid certificates. Basically, the auto-configuration database should include some kind of HSTS designation for the server.", "author": "brian@briansmith.org", "id": 5535750, "bug_id": 664633, "attachment_id": null, "tags": [], "creator": "brian@briansmith.org", "is_private": false, "creation_time": "2011-06-16T01:22:04Z"}, {"creator": "rain@sunshowers.io", "is_private": false, "creation_time": "2011-06-16T01:27:00Z", "attachment_id": null, "tags": [], "count": 1, "text": "Sorry, the 95% was a misunderstanding...", "author": "rain@sunshowers.io", "bug_id": 664633, "id": 5535761, "time": "2011-06-16T01:27:00Z", "raw_text": "Sorry, the 95% was a misunderstanding..."}, {"creator": "brian@briansmith.org", "is_private": false, "creation_time": "2011-06-16T01:55:56Z", "attachment_id": null, "tags": [], "author": "brian@briansmith.org", "count": 2, "text": "Bug 563958 is about doing the MX lookup from the client instead of trusting our server to do it.", "bug_id": 664633, "id": 5535799, "raw_text": "Bug 563958 is about doing the MX lookup from the client instead of trusting our server to do it.", "time": "2011-06-16T01:55:56Z"}, {"creator": "ben.bucksch@beonex.com", "creation_time": "2011-06-16T02:15:21Z", "is_private": false, "attachment_id": null, "tags": [], "text": "Sorry, but this is already FIXED. We already had a security review - several in fact. This was discussed long and in public, over years. See the archives of mozilla.dev.apps.thunderbird and\n<https://wiki.mozilla.org/Security/Reviews/> ->\n<https://wiki.mozilla.org/Firefox3.6/Security> ->\n<https://wiki.mozilla.org/Thunderbird:Autoconfiguration:Security_review_FetchConfigFromISP>", "count": 3, "author": "ben.bucksch@beonex.com", "bug_id": 664633, "id": 5535818, "raw_text": "Sorry, but this is already FIXED. We already had a security review - several in fact. This was discussed long and in public, over years. See the archives of mozilla.dev.apps.thunderbird and\n<https://wiki.mozilla.org/Security/Reviews/> ->\n<https://wiki.mozilla.org/Firefox3.6/Security> ->\n<https://wiki.mozilla.org/Thunderbird:Autoconfiguration:Security_review_FetchConfigFromISP>", "time": "2011-06-16T02:15:21Z"}, {"attachment_id": null, "raw_text": "The current implementation doesn't match the design that was reviewed, AFAICT.\n\nSee https://wiki.mozilla.org/Thunderbird:Autoconfiguration:Security_review_FetchConfigFromISP\n\nIn particular, \"To retrieve configuration parameters, Thunderbird will use HTTP on a transport of SSL or on a transport of TLS. Thunderbird will abort the retrieval if the server presents an improper certificate. We chose this protocol over DNS, our choice being more secure than DNS is.\"\n\nAlso, the information leakage of the username and validity of an email address was not covered in the security review, AFAICT. And, AFAICT, I don't see any notes describing the privacy implications of leaking the uesr's domain name unnecessarily to the mozillamessaging.com server.", "time": "2011-06-16T02:24:29Z", "tags": [], "author": "brian@briansmith.org", "text": "The current implementation doesn't match the design that was reviewed, AFAICT.\n\nSee https://wiki.mozilla.org/Thunderbird:Autoconfiguration:Security_review_FetchConfigFromISP\n\nIn particular, \"To retrieve configuration parameters, Thunderbird will use HTTP on a transport of SSL or on a transport of TLS. Thunderbird will abort the retrieval if the server presents an improper certificate. We chose this protocol over DNS, our choice being more secure than DNS is.\"\n\nAlso, the information leakage of the username and validity of an email address was not covered in the security review, AFAICT. And, AFAICT, I don't see any notes describing the privacy implications of leaking the uesr's domain name unnecessarily to the mozillamessaging.com server.", "count": 4, "creator": "brian@briansmith.org", "is_private": false, "creation_time": "2011-06-16T02:24:29Z", "bug_id": 664633, "id": 5535830}, {"creator": "ben.bucksch@beonex.com", "author": "ben.bucksch@beonex.com", "text": "Did you also read \"Mitigating factors\"? Please consider these.\n\nAlso, please read the documents linked from the page, because I don't want to repeat it all.\n\nSorry to be annoyed, but you are not the first to \"discover\" this. As I said, we discussed this for *years*. Including almost all you said. There has to be an end of discussion some time.\n\nI'll respond to some of the questions you raised, just for clarification.\n\n> (1) The user's email address in sent in the clear\n\nIt was the full intent to use SSL, but it turned out to be simply *impossible* in practice. Domain hosters, which were one of important use cases for this mechanism, would need one SSL certificate per customer domain, and that is simply prohibitive, because 1) SSL certs cost money 2) have a process that needs to be followed to each customer domain and last but not least 3) need one IP address per domain, which runs totally against the virtual hosting that is industry practice. So, domain hosters told us that it's completely impossible to serve all their domains with config info, if we require SSL, for these reasons, and they are sound.\nBasically, SSL is broken by design.\n\nThis was discussed in bugzilla, I can't find it anymore, though.\n\n> it may leak users' authentication usernames to attackers\n\nThe service has to be able to return usernames, because there are a few big ISPs that need an IMAP username which is entirely unrelated to the email address. To support such accounts, the ISP must be able to return the username. There is no other way to set up the account, short of the user knowing the username, which is the whole problem we want to solve.\nWe do allow ISP provided configs to have placeholders and we fill in email address or its local part, and that is preferred.\n\n> We should try the MX record lookup client-side first\n\nI fully agree, and I think you can see that from the bugs (and the fact that I filed bug 563958, thanks for linking it). If you can help with its blocker bug 545866, that would be *highly* appreciated.\n\n> (Also, we don't yet have a way of validating the MX record's\n> authenticity since we don't support DNSSEC and many email providers\n> do not have DNSSEC signed records.\n\nYes, we were aware of that also, and that's in fact arguing *for* a web-service. We can more easily spot an attack on the central web service than a specifically targetted user can spot an attack on him.\n\n> we should try to look up the configuration from a local copy of the\n> configuration database\n\nThis is a nice idea, I like the idea, but it has a problem: The configs can change. For example, mail.ru recently added SSL-capable servers. If you use the local config without checking against the server, you'd configure the non-SSL config and send plaintext passwords (!), because that was the only config we had before.\n\nIf you weight that (these users configuring plaintext passwords for many more months, sometimes years in the case of Debian release policy and companies' policies and many lazy non-updating users) against the concerns issued here, I hope you will conclude in favor of autoconfig as implemented.\n\n---\n\nAll in all, I fully agree with your goals and notion, and that was the original intent, as you can see from the discussion. If there are security or privacy problems, then because we had no other realistic choice.", "count": 5, "bug_id": 664633, "id": 5535863, "creation_time": "2011-06-16T03:04:42Z", "is_private": false, "time": "2011-06-16T03:04:42Z", "attachment_id": null, "raw_text": "Did you also read \"Mitigating factors\"? Please consider these.\n\nAlso, please read the documents linked from the page, because I don't want to repeat it all.\n\nSorry to be annoyed, but you are not the first to \"discover\" this. As I said, we discussed this for *years*. Including almost all you said. There has to be an end of discussion some time.\n\nI'll respond to some of the questions you raised, just for clarification.\n\n> (1) The user's email address in sent in the clear\n\nIt was the full intent to use SSL, but it turned out to be simply *impossible* in practice. Domain hosters, which were one of important use cases for this mechanism, would need one SSL certificate per customer domain, and that is simply prohibitive, because 1) SSL certs cost money 2) have a process that needs to be followed to each customer domain and last but not least 3) need one IP address per domain, which runs totally against the virtual hosting that is industry practice. So, domain hosters told us that it's completely impossible to serve all their domains with config info, if we require SSL, for these reasons, and they are sound.\nBasically, SSL is broken by design.\n\nThis was discussed in bugzilla, I can't find it anymore, though.\n\n> it may leak users' authentication usernames to attackers\n\nThe service has to be able to return usernames, because there are a few big ISPs that need an IMAP username which is entirely unrelated to the email address. To support such accounts, the ISP must be able to return the username. There is no other way to set up the account, short of the user knowing the username, which is the whole problem we want to solve.\nWe do allow ISP provided configs to have placeholders and we fill in email address or its local part, and that is preferred.\n\n> We should try the MX record lookup client-side first\n\nI fully agree, and I think you can see that from the bugs (and the fact that I filed bug 563958, thanks for linking it). If you can help with its blocker bug 545866, that would be *highly* appreciated.\n\n> (Also, we don't yet have a way of validating the MX record's\n> authenticity since we don't support DNSSEC and many email providers\n> do not have DNSSEC signed records.\n\nYes, we were aware of that also, and that's in fact arguing *for* a web-service. We can more easily spot an attack on the central web service than a specifically targetted user can spot an attack on him.\n\n> we should try to look up the configuration from a local copy of the\n> configuration database\n\nThis is a nice idea, I like the idea, but it has a problem: The configs can change. For example, mail.ru recently added SSL-capable servers. If you use the local config without checking against the server, you'd configure the non-SSL config and send plaintext passwords (!), because that was the only config we had before.\n\nIf you weight that (these users configuring plaintext passwords for many more months, sometimes years in the case of Debian release policy and companies' policies and many lazy non-updating users) against the concerns issued here, I hope you will conclude in favor of autoconfig as implemented.\n\n---\n\nAll in all, I fully agree with your goals and notion, and that was the original intent, as you can see from the discussion. If there are security or privacy problems, then because we had no other realistic choice.", "tags": []}, {"time": "2011-06-16T06:41:31Z", "attachment_id": null, "raw_text": "(In reply to comment #5)\n> > (1) The user's email address in sent in the clear\n> \n> It was the full intent to use SSL, but it turned out to be simply\n> *impossible* in practice. Domain hosters, which were one of important use\n> cases for this mechanism, would need one SSL certificate per customer\n> domain\n\nNot if they configure the same MX host for every server and we perform an autoconfig lookup at the host. It is also theoretically possible to \n \n> 3) need one IP address per domain\n\nNot with SNI, which NSS supports.\n\n> \n> This is a nice idea, I like the idea, but it has a problem: The configs can\n> change. For example, mail.ru recently added SSL-capable servers. If you use\n> the local config without checking against the server, you'd configure the\n> non-SSL config and send plaintext passwords (!), because that was the only\n> config we had before.\n\nPeriodic incremental updates + bug 664636 should ameliorate this.", "tags": [], "creator": "rain@sunshowers.io", "author": "rain@sunshowers.io", "count": 6, "text": "(In reply to comment #5)\n> > (1) The user's email address in sent in the clear\n> \n> It was the full intent to use SSL, but it turned out to be simply\n> *impossible* in practice. Domain hosters, which were one of important use\n> cases for this mechanism, would need one SSL certificate per customer\n> domain\n\nNot if they configure the same MX host for every server and we perform an autoconfig lookup at the host. It is also theoretically possible to \n \n> 3) need one IP address per domain\n\nNot with SNI, which NSS supports.\n\n> \n> This is a nice idea, I like the idea, but it has a problem: The configs can\n> change. For example, mail.ru recently added SSL-capable servers. If you use\n> the local config without checking against the server, you'd configure the\n> non-SSL config and send plaintext passwords (!), because that was the only\n> config we had before.\n\nPeriodic incremental updates + bug 664636 should ameliorate this.", "id": 5536072, "bug_id": 664633, "is_private": false, "creation_time": "2011-06-16T06:41:31Z"}, {"creator": "rain@sunshowers.io", "creation_time": "2011-06-16T06:48:50Z", "is_private": false, "attachment_id": null, "tags": [], "author": "rain@sunshowers.io", "text": "s/It is also theoretically possible to //", "count": 7, "bug_id": 664633, "id": 5536078, "time": "2011-06-16T06:48:50Z", "raw_text": "s/It is also theoretically possible to //"}, {"tags": [], "attachment_id": null, "creation_time": "2011-06-16T09:42:15Z", "is_private": false, "creator": "ben.bucksch@beonex.com", "time": "2011-06-16T09:42:15Z", "raw_text": "> Not if they configure the same MX host for every server\n\nYes, but that isn't the case. They often use the customer domain name\n\n> Not with SNI\n\nFine, but the other 2 problems still persist, and each of them is prohibitive.", "bug_id": 664633, "id": 5536225, "author": "ben.bucksch@beonex.com", "text": "> Not if they configure the same MX host for every server\n\nYes, but that isn't the case. They often use the customer domain name\n\n> Not with SNI\n\nFine, but the other 2 problems still persist, and each of them is prohibitive.", "count": 8}, {"tags": [], "attachment_id": null, "raw_text": "", "time": "2011-07-05T11:50:05Z", "creation_time": "2011-07-05T11:50:05Z", "is_private": false, "id": 5573651, "bug_id": 664633, "author": "tagnaq@bitmessage.ch", "count": 9, "text": "*** Bug 669282 has been marked as a duplicate of this bug. ***", "creator": "tagnaq@bitmessage.ch"}, {"raw_text": "(In reply to Ben Bucksch (:BenB) from comment #5)\n> Did you also read \"Mitigating factors\"? Please consider these.\n\nThe mitigating factors seem somewhat out of date now. Secure email protocols are significantly more common now than they were in 2009. In this context, weak autoconf is no longer just another unencrypted piece in an unencrypted chain, but presents a weakness in an otherwise potentially secure system. Might it be worth reconsidering the security tradeoff in light of this development?", "attachment_id": null, "time": "2011-08-15T23:51:07Z", "tags": [], "text": "(In reply to Ben Bucksch (:BenB) from comment #5)\n> Did you also read \"Mitigating factors\"? Please consider these.\n\nThe mitigating factors seem somewhat out of date now. Secure email protocols are significantly more common now than they were in 2009. In this context, weak autoconf is no longer just another unencrypted piece in an unencrypted chain, but presents a weakness in an otherwise potentially secure system. Might it be worth reconsidering the security tradeoff in light of this development?", "count": 10, "author": "me@tomlowenthal.com", "creator": "me@tomlowenthal.com", "creation_time": "2011-08-15T23:51:07Z", "is_private": false, "bug_id": 664633, "id": 5655660}, {"time": "2012-01-12T15:27:16Z", "raw_text": "Do we need to keep this open ?", "bug_id": 664633, "id": 5975272, "text": "Do we need to keep this open ?", "count": 11, "author": "ludovic@hirlimann.net", "tags": [], "attachment_id": null, "creation_time": "2012-01-12T15:27:16Z", "is_private": false, "creator": "ludovic@hirlimann.net"}, {"author": "me@tomlowenthal.com", "text": "(In reply to Ludovic Hirlimann [:Usul] from comment #11)\n> Do we need to keep this open ?\n\nIs the issue resolved?", "count": 12, "creator": "me@tomlowenthal.com", "creation_time": "2012-01-12T18:39:41Z", "is_private": false, "bug_id": 664633, "id": 5975932, "attachment_id": null, "raw_text": "(In reply to Ludovic Hirlimann [:Usul] from comment #11)\n> Do we need to keep this open ?\n\nIs the issue resolved?", "time": "2012-01-12T18:39:41Z", "tags": []}, {"attachment_id": null, "raw_text": "Yes.", "time": "2012-01-13T01:16:10Z", "tags": [], "author": "ben.bucksch@beonex.com", "text": "Yes.", "count": 13, "creator": "ben.bucksch@beonex.com", "creation_time": "2012-01-13T01:16:10Z", "is_private": false, "bug_id": 664633, "id": 5977359}, {"time": "2012-01-13T01:21:05Z", "raw_text": "somebody else than me please close this.", "author": "ben.bucksch@beonex.com", "text": "somebody else than me please close this.", "count": 14, "id": 5977381, "bug_id": 664633, "attachment_id": null, "tags": [], "creator": "ben.bucksch@beonex.com", "is_private": false, "creation_time": "2012-01-13T01:21:05Z"}, {"attachment_id": null, "raw_text": "I cannot find the notes from the new security review that was done when Curtis marked the security review complete on 2011-10-12. Where are the notes?", "time": "2012-01-16T18:22:06Z", "tags": [], "author": "brian@briansmith.org", "count": 15, "text": "I cannot find the notes from the new security review that was done when Curtis marked the security review complete on 2011-10-12. Where are the notes?", "creator": "brian@briansmith.org", "creation_time": "2012-01-16T18:22:06Z", "is_private": false, "id": 5983114, "bug_id": 664633}, {"raw_text": "I don't believe a full review was done on this bug, and my process for dealing with bugs was pretty new at the time so sorry for the lack of notes.\n\nThis may have been discussed during the account provisioning discussion (https://wiki.mozilla.org/Security/Reviews/Firefox7/ReviewNotes/AcctProvis) but there are no notes about this bug.\n\nI don't recall this bug particularly, and the dates are during the email/calendar loss. I think we may have marked this complete during a triage meeting and decided no further look at this was warranted and thus marked it complete. And the minutes from that meeting are also lost to the email black hole.", "time": "2012-01-17T17:46:11Z", "bug_id": 664633, "id": 5985799, "author": "curtisk@mozilla.com", "text": "I don't believe a full review was done on this bug, and my process for dealing with bugs was pretty new at the time so sorry for the lack of notes.\n\nThis may have been discussed during the account provisioning discussion (https://wiki.mozilla.org/Security/Reviews/Firefox7/ReviewNotes/AcctProvis) but there are no notes about this bug.\n\nI don't recall this bug particularly, and the dates are during the email/calendar loss. I think we may have marked this complete during a triage meeting and decided no further look at this was warranted and thus marked it complete. And the minutes from that meeting are also lost to the email black hole.", "count": 16, "tags": [], "attachment_id": null, "creation_time": "2012-01-17T17:46:11Z", "is_private": false, "creator": "curtisk@mozilla.com"}, {"author": "me@tomlowenthal.com", "count": 17, "text": "I think we should leave this open until it's confirmed that we have fixed it, or accepted the current status, and Brian and I both know what's up with it. Does that seem reasonable?", "id": 5991107, "bug_id": 664633, "raw_text": "I think we should leave this open until it's confirmed that we have fixed it, or accepted the current status, and Brian and I both know what's up with it. Does that seem reasonable?", "time": "2012-01-19T03:22:49Z", "creator": "me@tomlowenthal.com", "creation_time": "2012-01-19T03:22:49Z", "is_private": false, "attachment_id": null, "tags": []}, {"author": "standard8@mozilla.com", "count": 18, "text": "Based on comments 15 - 17, re-requesting security review so we can lead this to a resolution one way or another.", "bug_id": 664633, "id": 6113716, "time": "2012-03-05T09:02:02Z", "raw_text": "Based on comments 15 - 17, re-requesting security review so we can lead this to a resolution one way or another.", "creator": "standard8@mozilla.com", "is_private": false, "creation_time": "2012-03-05T09:02:02Z", "attachment_id": null, "tags": []}, {"id": 6257705, "bug_id": 664633, "creation_time": "2012-04-26T20:02:31Z", "is_private": false, "creator": "curtisk@mozilla.com", "author": "curtisk@mozilla.com", "text": "Talked this over with Sid and he feels the best way to resolve any lingering items is to have a public discussion on dev-planning and/or other appropriate lists. This is more a privacy item than a security item in our opinion. The previous privacy review for this can be found at:\n\nhttps://wiki.mozilla.org/Privacy/Reviews/AccountProvisioner", "count": 19, "tags": [], "time": "2012-04-26T20:02:31Z", "attachment_id": null, "raw_text": "Talked this over with Sid and he feels the best way to resolve any lingering items is to have a public discussion on dev-planning and/or other appropriate lists. This is more a privacy item than a security item in our opinion. The previous privacy review for this can be found at:\n\nhttps://wiki.mozilla.org/Privacy/Reviews/AccountProvisioner"}, {"tags": [], "raw_text": "Curtis, we already had discussion on the newsgroups about this, including privacy aspects, when we designed the feature.\nhttp://groups.google.com/group/mozilla.dev.apps.thunderbird/browse_thread/thread/e8bdb0af31961908/a73bd97251b18777?q=#a73bd97251b18777\nhttp://groups.google.com/group/mozilla.dev.apps.thunderbird/browse_thread/thread/e85fd8d5db0a4a6d/2b36ce3fbb7c2142?q=#2b36ce3fbb7c2142", "attachment_id": null, "time": "2012-04-26T23:42:14Z", "is_private": false, "creation_time": "2012-04-26T23:42:14Z", "bug_id": 664633, "id": 6258624, "text": "Curtis, we already had discussion on the newsgroups about this, including privacy aspects, when we designed the feature.\nhttp://groups.google.com/group/mozilla.dev.apps.thunderbird/browse_thread/thread/e8bdb0af31961908/a73bd97251b18777?q=#a73bd97251b18777\nhttp://groups.google.com/group/mozilla.dev.apps.thunderbird/browse_thread/thread/e85fd8d5db0a4a6d/2b36ce3fbb7c2142?q=#2b36ce3fbb7c2142", "count": 20, "author": "ben.bucksch@beonex.com", "creator": "ben.bucksch@beonex.com"}, {"is_private": false, "creation_time": "2012-04-27T01:00:25Z", "creator": "curtisk@mozilla.com", "tags": [], "attachment_id": null, "id": 6258796, "bug_id": 664633, "count": 21, "text": ":benb yes, however comment 18 a re-review was requested due to other comments. We don't feel a re-review is warranted and that further public discussion can resolve the outstanding issues. If the community does not fell strongly that there is an issue with what has been raised I think we can move on.", "author": "curtisk@mozilla.com", "time": "2012-04-27T01:00:25Z", "raw_text": ":benb yes, however comment 18 a re-review was requested due to other comments. We don't feel a re-review is warranted and that further public discussion can resolve the outstanding issues. If the community does not fell strongly that there is an issue with what has been raised I think we can move on."}, {"id": 6258804, "bug_id": 664633, "creation_time": "2012-04-27T01:04:39Z", "is_private": false, "creator": "ben.bucksch@beonex.com", "count": 22, "text": "Personally, I'd much rather have a formal meeting than an open-ended newsgroup discussion. The meeting costs me 1h, while a newsgroup discussion typically eats 4-8h (reading, responding etc, over a week).", "author": "ben.bucksch@beonex.com", "tags": [], "time": "2012-04-27T01:04:39Z", "raw_text": "Personally, I'd much rather have a formal meeting than an open-ended newsgroup discussion. The meeting costs me 1h, while a newsgroup discussion typically eats 4-8h (reading, responding etc, over a week).", "attachment_id": null}, {"time": "2012-04-27T01:21:53Z", "raw_text": "FWIW, from my POV, the biggest problems, and their causes are:\n* Fact: Domain hosters, and large ISPs hosting other smaller ISPs, don't / can't affort one SSL cert per customers. Thus, hostname mismatches are commonplace, mail.davidbienvenu.org has mail.dreamhost.com as hostname in the SSL cert. If we have to guess the config, we can only guess mail.davidbienvenu.org, not mail.dreamhost.com.\n* Decision: Thus, we must allow the user to override a hostname mismatch. (See bug 721369 for some discussion.)\n* Decision: Thus, we cannot enforce SSL when fetching a config from a domain hoster as we intended. https://davidbienvenu.org/.../config.xml is not possible, because dreamhost won't have an SSL cert for davidbienvenu.org.\n* Fact: We can't know the hoster of a customer domain like davidbienvenu.org. The only for us to guess it is to look at DNS MX for the domain, and take the domain of the MX server. However, DNS is (currently, without DNSSEC) unprotected, so *everything* that follows based on that hoster is insecure.\n* Decision: In order to support many important hosters, we do the MX lookup and then try to find the config for the hoster. E.g. if \nhttps://live.mozillamessaging.com/autoconfig/v1.1/davidbienvenu.org\ndoesn't exist, we look up\ndavidbienvenu.org.      14400   IN      MX      0 mx1.sub4.homie.mail.dreamhost.com.\nand take the SLD of that, and look up\nhttps://live.mozillamessaging.com/autoconfig/v1.1/dreamhost.com\nwhich then often does exist (not in this case, but in others, e.g. gmail)", "text": "FWIW, from my POV, the biggest problems, and their causes are:\n* Fact: Domain hosters, and large ISPs hosting other smaller ISPs, don't / can't affort one SSL cert per customers. Thus, hostname mismatches are commonplace, mail.davidbienvenu.org has mail.dreamhost.com as hostname in the SSL cert. If we have to guess the config, we can only guess mail.davidbienvenu.org, not mail.dreamhost.com.\n* Decision: Thus, we must allow the user to override a hostname mismatch. (See bug 721369 for some discussion.)\n* Decision: Thus, we cannot enforce SSL when fetching a config from a domain hoster as we intended. https://davidbienvenu.org/.../config.xml is not possible, because dreamhost won't have an SSL cert for davidbienvenu.org.\n* Fact: We can't know the hoster of a customer domain like davidbienvenu.org. The only for us to guess it is to look at DNS MX for the domain, and take the domain of the MX server. However, DNS is (currently, without DNSSEC) unprotected, so *everything* that follows based on that hoster is insecure.\n* Decision: In order to support many important hosters, we do the MX lookup and then try to find the config for the hoster. E.g. if \nhttps://live.mozillamessaging.com/autoconfig/v1.1/davidbienvenu.org\ndoesn't exist, we look up\ndavidbienvenu.org.      14400   IN      MX      0 mx1.sub4.homie.mail.dreamhost.com.\nand take the SLD of that, and look up\nhttps://live.mozillamessaging.com/autoconfig/v1.1/dreamhost.com\nwhich then often does exist (not in this case, but in others, e.g. gmail)", "count": 23, "author": "ben.bucksch@beonex.com", "bug_id": 664633, "id": 6258848, "attachment_id": null, "tags": [], "creator": "ben.bucksch@beonex.com", "is_private": false, "creation_time": "2012-04-27T01:21:53Z"}, {"time": "2012-04-27T01:42:45Z", "raw_text": "It's worth noting that we're planning to use the Thunderbird autoconfig mechanism in the B2G e-mail client, so having another discussion could be fruitful, especially in that potentially enlarged context.\n\nI think the key changes between the last discussion and now, at least as it relates to B2G are:\n\n- The last time we had the discussion, I don't think there were free SSL certs.  StartCom now appears to provide free (simple, one-host) certs:\nhttp://www.startssl.com/?app=1\n\n- In principal, we can issue TXT and SRV queries over DNS-over-TCP by using the node-dns library shimmed to use our new WebTCP API (or privileged chrome TCP api wrapper like instantbird's socket.jsm) to do client-side resolutions.  (There is also ongoing work to make the platform provide this, but it's not here yet.)", "attachment_id": null, "tags": [], "creator": "bugmail@asutherland.org", "text": "It's worth noting that we're planning to use the Thunderbird autoconfig mechanism in the B2G e-mail client, so having another discussion could be fruitful, especially in that potentially enlarged context.\n\nI think the key changes between the last discussion and now, at least as it relates to B2G are:\n\n- The last time we had the discussion, I don't think there were free SSL certs.  StartCom now appears to provide free (simple, one-host) certs:\nhttp://www.startssl.com/?app=1\n\n- In principal, we can issue TXT and SRV queries over DNS-over-TCP by using the node-dns library shimmed to use our new WebTCP API (or privileged chrome TCP api wrapper like instantbird's socket.jsm) to do client-side resolutions.  (There is also ongoing work to make the platform provide this, but it's not here yet.)", "count": 24, "author": "bugmail@asutherland.org", "bug_id": 664633, "id": 6258884, "is_private": false, "creation_time": "2012-04-27T01:42:45Z"}, {"time": "2014-02-07T23:50:50Z", "raw_text": "I've been attaching a patch that allows to disable the non-SSL HTTP calls per hidden pref.", "attachment_id": null, "tags": [], "creator": "ben.bucksch@beonex.com", "text": "I've been attaching a patch that allows to disable the non-SSL HTTP calls per hidden pref.", "count": 25, "author": "ben.bucksch@beonex.com", "id": 8391665, "bug_id": 664633, "is_private": false, "creation_time": "2014-02-07T23:50:50Z"}, {"author": "ben.bucksch@beonex.com", "count": 26, "text": "... to bug 669282.", "id": 8391667, "bug_id": 664633, "raw_text": "... to bug 669282.", "time": "2014-02-07T23:51:09Z", "creator": "ben.bucksch@beonex.com", "creation_time": "2014-02-07T23:51:09Z", "is_private": false, "attachment_id": null, "tags": []}]}}, "comments": {}}