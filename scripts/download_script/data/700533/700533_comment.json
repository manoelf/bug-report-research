{"comments": {}, "bugs": {"700533": {"comments": [{"raw_text": "The default size of an <img> element is 0x0, so drawing an SVG image should be the same as drawing any other 0x0 image, due to it scaling down to 0x0. Idealy, the minimum dimensions of the SVG should be used, but roc has explained to me that this is not feasible to implement.", "attachment_id": null, "time": "2011-11-08T02:26:51Z", "tags": [], "text": "The default size of an <img> element is 0x0, so drawing an SVG image should be the same as drawing any other 0x0 image, due to it scaling down to 0x0. Idealy, the minimum dimensions of the SVG should be used, but roc has explained to me that this is not feasible to implement.", "count": 0, "author": "bugmail@eligrey.com", "creator": "bugmail@eligrey.com", "is_private": false, "creation_time": "2011-11-08T02:26:51Z", "bug_id": 700533, "id": 5832985}, {"tags": [], "attachment_id": null, "creation_time": "2011-11-08T03:19:10Z", "is_private": false, "creator": "bzbarsky@mit.edu", "time": "2011-11-08T03:19:10Z", "raw_text": "> The default size of an <img> element is 0x0\n\nNo, the default size is its intrinsic size.... which SVG doesn't always have.\n\nThat said, the HTML5 spec actually specifies what to do here:\n\n   If the image has no intrinsic dimensions, the concrete object size must be used\n   instead, as determined using the CSS \"Concrete Object Size Resolution\" algorithm, with\n   the specified size having neither a definite width nor height, nor any additional \n   contraints, the object's intrinsic properties being those of the image argument, and\n   the default object size being the size of the canvas element.\n\nwith a link to http://dev.w3.org/csswg/css3-images/#default-sizing\n\nWhat that means in practice is that we end up in the third bullet point there, and attempt to make the <svg> as big as we can without running out of canvas.  Does that behavior actually make sense?", "bug_id": 700533, "id": 5833074, "text": "> The default size of an <img> element is 0x0\n\nNo, the default size is its intrinsic size.... which SVG doesn't always have.\n\nThat said, the HTML5 spec actually specifies what to do here:\n\n   If the image has no intrinsic dimensions, the concrete object size must be used\n   instead, as determined using the CSS \"Concrete Object Size Resolution\" algorithm, with\n   the specified size having neither a definite width nor height, nor any additional \n   contraints, the object's intrinsic properties being those of the image argument, and\n   the default object size being the size of the canvas element.\n\nwith a link to http://dev.w3.org/csswg/css3-images/#default-sizing\n\nWhat that means in practice is that we end up in the third bullet point there, and attempt to make the <svg> as big as we can without running out of canvas.  Does that behavior actually make sense?", "count": 1, "author": "bzbarsky@mit.edu"}, {"tags": [], "time": "2011-11-17T05:13:00Z", "attachment_id": null, "raw_text": "As noted in bug 574330 comment 58 & 59, this bug seems to be the reason that the \"\u2026drawn to <canvas>\u2026\" chunk is blank at http://phrogz.net/SVG/svg_to_png.xhtml", "id": 5854596, "bug_id": 700533, "creation_time": "2011-11-17T05:13:00Z", "is_private": false, "creator": "dholbert@mozilla.com", "author": "dholbert@mozilla.com", "count": 2, "text": "As noted in bug 574330 comment 58 & 59, this bug seems to be the reason that the \"\u2026drawn to <canvas>\u2026\" chunk is blank at http://phrogz.net/SVG/svg_to_png.xhtml"}, {"is_private": false, "creation_time": "2011-11-17T05:39:38Z", "creator": "dholbert@mozilla.com", "tags": [], "attachment_id": null, "id": 5854632, "bug_id": 700533, "author": "dholbert@mozilla.com", "count": 3, "text": "(In reply to Boris Zbarsky (:bz) from comment #1)\n> That said, the HTML5 spec actually specifies what to do here:\n[...]\n> with a link to http://dev.w3.org/csswg/css3-images/#default-sizing\n\nThat refers to the \"default object size\", which links here:\n  http://dev.w3.org/csswg/css3-images/#default-object-size\nwhich defines a (different) default size for various image contexts (but sadly does not mention <canvas>)", "time": "2011-11-17T05:39:38Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #1)\n> That said, the HTML5 spec actually specifies what to do here:\n[...]\n> with a link to http://dev.w3.org/csswg/css3-images/#default-sizing\n\nThat refers to the \"default object size\", which links here:\n  http://dev.w3.org/csswg/css3-images/#default-object-size\nwhich defines a (different) default size for various image contexts (but sadly does not mention <canvas>)"}, {"creation_time": "2011-11-17T05:46:46Z", "is_private": false, "creator": "dholbert@mozilla.com", "tags": [], "attachment_id": null, "bug_id": 700533, "id": 5854646, "count": 4, "text": "Ah, nevermind - I was interpreting \"default object size\" as talking about the default size of the _image_ (the input), but it's talking about the default size of the _canvas_.  So, disregard comment 3.", "author": "dholbert@mozilla.com", "raw_text": "Ah, nevermind - I was interpreting \"default object size\" as talking about the default size of the _image_ (the input), but it's talking about the default size of the _canvas_.  So, disregard comment 3.", "time": "2011-11-17T05:46:46Z"}, {"tags": [], "time": "2011-11-17T06:02:55Z", "raw_text": "bz also points out that on <canvas>, there are two distinct sizes:\n - |width| & |height| attributes (which define the internal virtual surface size used by the canvas)\n - |width| & |height| properties (which define the actual rendered size, on-screen)\n\nSo if the width/height properties are larger than the attributes, then we effectively end up scaling up the canvas, and drawing it with \"large pixels\".\n\nThe current spec text is unclear about which of these sizes we should use.  fantasai suggests that I file a spec issue about this -- I need to do that at some point.", "attachment_id": null, "id": 5854669, "bug_id": 700533, "creation_time": "2011-11-17T06:02:55Z", "is_private": false, "creator": "dholbert@mozilla.com", "text": "bz also points out that on <canvas>, there are two distinct sizes:\n - |width| & |height| attributes (which define the internal virtual surface size used by the canvas)\n - |width| & |height| properties (which define the actual rendered size, on-screen)\n\nSo if the width/height properties are larger than the attributes, then we effectively end up scaling up the canvas, and drawing it with \"large pixels\".\n\nThe current spec text is unclear about which of these sizes we should use.  fantasai suggests that I file a spec issue about this -- I need to do that at some point.", "count": 5, "author": "dholbert@mozilla.com"}, {"tags": [], "raw_text": "Given:\n    <!-- heightAndWidthAttributes.svg has width=\"640\" height=\"480\" -->\n    <img id=\"nono\"   src=\"noHeightOrWidth.svg\" />\n    <img id=\"noyes\"  src=\"noHeightOrWidth.svg\" width=\"100\" height=\"200\" />\n    <img id=\"yesno\"  src=\"heightAndWidthAttributes.svg\" />\n    <img id=\"yesyes\" src=\"heightAndWidthAttributes.svg\" width=\"1\" height=\"1\" />\n\n    myCanvasContext.drawImage(document.querySelector('#nono'),0,0);\n    myCanvasContext.drawImage(document.querySelector('#noyes'),0,0);\n    myCanvasContext.drawImage(document.querySelector('#yesno'),0,0);\n    myCanvasContext.drawImage(document.querySelector('#yesyes'),0,0);\n\n...what do we expect to occur in each situation? For \"noyes\" (the case in http://phrogz.net/SVG/svg_to_png.xhtml) and \"yesyes\" and others I personally expected the SVG to be rasterized into the `<img>` object at the dimensions specified in the HTML. When the image does not have a size, I expect it to use the height/width of the SVG to determine the raster size. And for \"nono\"...I'm not sure what I expect.\n\nHowever, it's not my expectations that matter, but what the specs say. However, any clarification should ensure that all four of those cases are handled.", "attachment_id": null, "time": "2011-11-17T21:16:00Z", "creation_time": "2011-11-17T21:16:00Z", "is_private": false, "id": 5856381, "bug_id": 700533, "text": "Given:\n    <!-- heightAndWidthAttributes.svg has width=\"640\" height=\"480\" -->\n    <img id=\"nono\"   src=\"noHeightOrWidth.svg\" />\n    <img id=\"noyes\"  src=\"noHeightOrWidth.svg\" width=\"100\" height=\"200\" />\n    <img id=\"yesno\"  src=\"heightAndWidthAttributes.svg\" />\n    <img id=\"yesyes\" src=\"heightAndWidthAttributes.svg\" width=\"1\" height=\"1\" />\n\n    myCanvasContext.drawImage(document.querySelector('#nono'),0,0);\n    myCanvasContext.drawImage(document.querySelector('#noyes'),0,0);\n    myCanvasContext.drawImage(document.querySelector('#yesno'),0,0);\n    myCanvasContext.drawImage(document.querySelector('#yesyes'),0,0);\n\n...what do we expect to occur in each situation? For \"noyes\" (the case in http://phrogz.net/SVG/svg_to_png.xhtml) and \"yesyes\" and others I personally expected the SVG to be rasterized into the `<img>` object at the dimensions specified in the HTML. When the image does not have a size, I expect it to use the height/width of the SVG to determine the raster size. And for \"nono\"...I'm not sure what I expect.\n\nHowever, it's not my expectations that matter, but what the specs say. However, any clarification should ensure that all four of those cases are handled.", "count": 6, "author": "phrogz@me.com", "creator": "phrogz@me.com"}, {"attachment_id": null, "raw_text": "I have an issue which is, I believe, related to this bug:\n\nWhen I load a SVG data URL as an Image, and in the image's onload handler draw it onto a canvas, Firefox 18 throws NS_ERROR_NOT_AVAILABLE. At this point the image's width & height properties are indeed zero.\n\nAnyone knows why this is happening? The SVG file does have width and height set (in px). Let me know if you need any additional information.\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"98.279px\" height=\"25.336px\" viewBox=\"0 0 98.279 25.336\" enable-background=\"new 0 0 98.279 25.336\" xml:space=\"preserve\">", "time": "2013-01-04T01:26:25Z", "tags": [], "author": "gottfried.haider@gmail.com", "text": "I have an issue which is, I believe, related to this bug:\n\nWhen I load a SVG data URL as an Image, and in the image's onload handler draw it onto a canvas, Firefox 18 throws NS_ERROR_NOT_AVAILABLE. At this point the image's width & height properties are indeed zero.\n\nAnyone knows why this is happening? The SVG file does have width and height set (in px). Let me know if you need any additional information.\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"98.279px\" height=\"25.336px\" viewBox=\"0 0 98.279 25.336\" enable-background=\"new 0 0 98.279 25.336\" xml:space=\"preserve\">", "count": 7, "creator": "gottfried.haider@gmail.com", "creation_time": "2013-01-04T01:26:25Z", "is_private": false, "bug_id": 700533, "id": 6962187}, {"text": "I'm not sure, offhand. Could you file a new bug at\n https://bugzilla.mozilla.org/enter_bug.cgi?product=Core&component=SVG\nwith a testcase (including the canvas) that reproduces it, and CC me?\n\n(Also: unassigning myself from this one, since I haven't gotten to it for a while and it likely won't be at the top of my list in the near term)", "count": 8, "author": "dholbert@mozilla.com", "creator": "dholbert@mozilla.com", "creation_time": "2013-01-04T01:29:43Z", "is_private": false, "id": 6962192, "bug_id": 700533, "raw_text": "I'm not sure, offhand. Could you file a new bug at\n https://bugzilla.mozilla.org/enter_bug.cgi?product=Core&component=SVG\nwith a testcase (including the canvas) that reproduces it, and CC me?\n\n(Also: unassigning myself from this one, since I haven't gotten to it for a while and it likely won't be at the top of my list in the near term)", "attachment_id": null, "time": "2013-01-04T01:29:43Z", "tags": []}, {"author": "gottfried.haider@gmail.com", "count": 9, "text": "Filled my issue as bug 697743 & added dholbert to CC.", "creator": "gottfried.haider@gmail.com", "creation_time": "2013-01-04T01:55:19Z", "is_private": false, "bug_id": 700533, "id": 6962242, "attachment_id": null, "raw_text": "Filled my issue as bug 697743 & added dholbert to CC.", "time": "2013-01-04T01:55:19Z", "tags": []}, {"is_private": false, "creation_time": "2013-01-04T01:56:16Z", "creator": "gottfried.haider@gmail.com", "tags": [], "attachment_id": null, "id": 6962246, "bug_id": 700533, "text": "Sorry, bug 826562 it is.", "count": 10, "author": "gottfried.haider@gmail.com", "raw_text": "Sorry, bug 826562 it is.", "time": "2013-01-04T01:56:16Z"}, {"creator": "cobexer@gmail.com", "is_private": false, "creation_time": "2015-05-04T13:39:14Z", "attachment_id": null, "tags": ["me-too"], "author": "cobexer@gmail.com", "count": 11, "text": "I just encountered this bug as I tried to use html2canvas to create screenshots of web applications;\nFrom my debugging it appears to be impossible to render such SVG images to a canvas - even if I manually set the width and height properties of the img element (which is not in the DOM at the time of being drawn onto the canvas).\n\nIs there any workaround to get such a SVG to successfully draw onto the canvas?\n\nAlso the reported Error is: \"NS_ERROR_NOT_AVAILABLE: \" and nothing else (in the Firefox Console) which is also not useful in figuring out what the problem is.", "bug_id": 700533, "id": 10227109, "raw_text": "I just encountered this bug as I tried to use html2canvas to create screenshots of web applications;\nFrom my debugging it appears to be impossible to render such SVG images to a canvas - even if I manually set the width and height properties of the img element (which is not in the DOM at the time of being drawn onto the canvas).\n\nIs there any workaround to get such a SVG to successfully draw onto the canvas?\n\nAlso the reported Error is: \"NS_ERROR_NOT_AVAILABLE: \" and nothing else (in the Firefox Console) which is also not useful in figuring out what the problem is.", "time": "2015-05-04T13:39:14Z"}, {"attachment_id": null, "raw_text": "Also just encountered this bug, but what stumped me was that we don't imply width/height from the viewBox attribute? Seems Chrome does this, might be something worth doing as a lot of major tools seem to not put width/height.", "time": "2015-07-14T14:56:18Z", "tags": [], "author": "chrislord.net@gmail.com", "text": "Also just encountered this bug, but what stumped me was that we don't imply width/height from the viewBox attribute? Seems Chrome does this, might be something worth doing as a lot of major tools seem to not put width/height.", "count": 12, "creator": "chrislord.net@gmail.com", "is_private": false, "creation_time": "2015-07-14T14:56:18Z", "id": 10491798, "bug_id": 700533}, {"attachment_id": null, "tags": [], "creator": "cam@mcc.id.au", "is_private": false, "creation_time": "2015-07-15T00:09:06Z", "raw_text": "How does Chrome size the image exactly?\n\nI think we should try to use the same sizing behaviour as if the <img> was in the document and rendered.  So for no width=\"\" or height=\"\" attribute but with a viewBox=\"\" present, you would size it to the width of the containing block and to a height such that it maintains the aspect ratio of the viewBox.  The problem then is what to use as the containing block size to base those off if the <img> (both for when the <img> is in the document and when it isn't).  At a guess I would say to use the containing block of the <img> if it is in the document (and so the image will be the same size as the one rendered in the document), or using the 300x150 dimensions if not in the document.", "time": "2015-07-15T00:09:06Z", "author": "cam@mcc.id.au", "text": "How does Chrome size the image exactly?\n\nI think we should try to use the same sizing behaviour as if the <img> was in the document and rendered.  So for no width=\"\" or height=\"\" attribute but with a viewBox=\"\" present, you would size it to the width of the containing block and to a height such that it maintains the aspect ratio of the viewBox.  The problem then is what to use as the containing block size to base those off if the <img> (both for when the <img> is in the document and when it isn't).  At a guess I would say to use the containing block of the <img> if it is in the document (and so the image will be the same size as the one rendered in the document), or using the 300x150 dimensions if not in the document.", "count": 13, "bug_id": 700533, "id": 10494461}, {"bug_id": 700533, "id": 10583716, "creation_time": "2015-08-06T02:12:53Z", "is_private": false, "creator": "Wesw02@gmail.com", "count": 14, "text": "Is there any known workaround, other than manually adding width=\"\" or height=\"\"? In our case, we have users supplying their own SVGs and we can't reasonable expect them to add width/height.", "author": "Wesw02@gmail.com", "tags": [], "time": "2015-08-06T02:12:53Z", "raw_text": "Is there any known workaround, other than manually adding width=\"\" or height=\"\"? In our case, we have users supplying their own SVGs and we can't reasonable expect them to add width/height.", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "dholbert@mozilla.com", "creation_time": "2015-08-11T20:11:30Z", "is_private": false, "time": "2015-08-11T20:11:30Z", "raw_text": "(In reply to Wesley Workman from comment #14)\n> Is there any known workaround, other than manually adding width=\"\" or\n> height=\"\"?\n\nNot currently.\n\n> In our case, we have users supplying their own SVGs and we can't\n> reasonable expect them to add width/height.\n\nSure -- but what do you even expect to happen in this scenario? In particular, if there's no width=\"\"/height/viewport in the user-supplied images, how big do you expect the SVG image to be when you call ctx.drawImage(mySVGImage, x, y)?  And how should percents in the SVG be resolved in e.g. <rect height=\"100%\" width=\"100%\">?\n\nThis is all well-defined when SVG is viewed directly (where the browser's viewport is the SVG's viewport-size) and when SVG is included as an <img> (because CSS defines fallback sizing behavior).  But it's unclear what the right thing to do is in canvas drawImage, where there's no fallback.", "count": 15, "text": "(In reply to Wesley Workman from comment #14)\n> Is there any known workaround, other than manually adding width=\"\" or\n> height=\"\"?\n\nNot currently.\n\n> In our case, we have users supplying their own SVGs and we can't\n> reasonable expect them to add width/height.\n\nSure -- but what do you even expect to happen in this scenario? In particular, if there's no width=\"\"/height/viewport in the user-supplied images, how big do you expect the SVG image to be when you call ctx.drawImage(mySVGImage, x, y)?  And how should percents in the SVG be resolved in e.g. <rect height=\"100%\" width=\"100%\">?\n\nThis is all well-defined when SVG is viewed directly (where the browser's viewport is the SVG's viewport-size) and when SVG is included as an <img> (because CSS defines fallback sizing behavior).  But it's unclear what the right thing to do is in canvas drawImage, where there's no fallback.", "author": "dholbert@mozilla.com", "id": 10605664, "bug_id": 700533}, {"tags": [], "raw_text": "Actually I did find a work around. I apologize for not sharing it. Here is the JSBin: http://jsbin.com/rizivo/1/edit?html,js,output . In that case, I'm taking the viewBox data and manually setting them as the height/width of the SVG. The JSBin doesn't illustrate this, but I only do this workaround when I catch the NS_ERROR_NOT_AVAILABLE exception.\n\nI'm not at all an SVG expert. So I don't know what the \"right thing to do is\". But I can tell you what I would expect as a naive web developer. That is for it to mimic the same behavior as webkit, falling back to viewBox and rendering the SVG at the same ratio.", "attachment_id": null, "time": "2015-08-12T00:11:42Z", "is_private": false, "creation_time": "2015-08-12T00:11:42Z", "bug_id": 700533, "id": 10606797, "count": 16, "text": "Actually I did find a work around. I apologize for not sharing it. Here is the JSBin: http://jsbin.com/rizivo/1/edit?html,js,output . In that case, I'm taking the viewBox data and manually setting them as the height/width of the SVG. The JSBin doesn't illustrate this, but I only do this workaround when I catch the NS_ERROR_NOT_AVAILABLE exception.\n\nI'm not at all an SVG expert. So I don't know what the \"right thing to do is\". But I can tell you what I would expect as a naive web developer. That is for it to mimic the same behavior as webkit, falling back to viewBox and rendering the SVG at the same ratio.", "author": "Wesw02@gmail.com", "creator": "Wesw02@gmail.com"}, {"id": 10606938, "bug_id": 700533, "is_private": false, "creation_time": "2015-08-12T01:17:01Z", "creator": "dholbert@mozilla.com", "author": "dholbert@mozilla.com", "count": 17, "text": "(In reply to Wesley Workman from comment #16)\n> I'm not at all an SVG expert. So I don't know what the \"right thing to do\n> is\". But I can tell you what I would expect as a naive web developer. That\n> is for it to mimic the same behavior as webkit, falling back to viewBox and\n> rendering the SVG at the same ratio.\n\nTwo things:\n (1) I should've specified -- I meant to ask what happens (and/or what Chrome does) if there was no viewBox present. (I assume you have to consider that case as well, if you're having to worry about the no-width-or-height case.)\n\n (2) The SVG viewBox *might* give you a useful size, but its size doesn't necessarily represent a reasonable amount of screen real-estate.  It just represents a region of the infinite SVG canvas (in the author's units) which should be scaled to fit the viewport.  So you could e.g. have a SVG document with viewBox=\"0 0 10000 10000\", but it's not actually intended to be rendered at 10,000px wide.\n\nWhatever we do, it's probably worth striving for consistency with Blink/WebKit & considering their fallback behavior.  If anyone here has a chance to test that thoroughly (perhaps posting a testcase with a variety of scenarios with subsets of [width,height,viewBox] specified), to answer heycam's question from comment 13, that would definitely be useful for testing & considering different options here!", "tags": [], "time": "2015-08-12T01:17:01Z", "attachment_id": null, "raw_text": "(In reply to Wesley Workman from comment #16)\n> I'm not at all an SVG expert. So I don't know what the \"right thing to do\n> is\". But I can tell you what I would expect as a naive web developer. That\n> is for it to mimic the same behavior as webkit, falling back to viewBox and\n> rendering the SVG at the same ratio.\n\nTwo things:\n (1) I should've specified -- I meant to ask what happens (and/or what Chrome does) if there was no viewBox present. (I assume you have to consider that case as well, if you're having to worry about the no-width-or-height case.)\n\n (2) The SVG viewBox *might* give you a useful size, but its size doesn't necessarily represent a reasonable amount of screen real-estate.  It just represents a region of the infinite SVG canvas (in the author's units) which should be scaled to fit the viewport.  So you could e.g. have a SVG document with viewBox=\"0 0 10000 10000\", but it's not actually intended to be rendered at 10,000px wide.\n\nWhatever we do, it's probably worth striving for consistency with Blink/WebKit & considering their fallback behavior.  If anyone here has a chance to test that thoroughly (perhaps posting a testcase with a variety of scenarios with subsets of [width,height,viewBox] specified), to answer heycam's question from comment 13, that would definitely be useful for testing & considering different options here!"}, {"time": "2015-08-15T13:10:04Z", "raw_text": "In the example given ( http://phrogz.net/SVG/svg_to_png.xhtml ) the code that draws the SVG onto the canvas uses the version that explicitly specifies target width and height.\n\nWhy does that not work either? There are no open questions for Firefox in that case or are there?", "attachment_id": null, "tags": [], "creator": "cobexer@gmail.com", "count": 18, "text": "In the example given ( http://phrogz.net/SVG/svg_to_png.xhtml ) the code that draws the SVG onto the canvas uses the version that explicitly specifies target width and height.\n\nWhy does that not work either? There are no open questions for Firefox in that case or are there?", "author": "cobexer@gmail.com", "id": 10622095, "bug_id": 700533, "is_private": false, "creation_time": "2015-08-15T13:10:04Z"}, {"tags": [], "attachment_id": null, "creation_time": "2015-08-15T19:44:44Z", "is_private": false, "creator": "dholbert@mozilla.com", "time": "2015-08-15T19:44:44Z", "raw_text": "It depends. I think I agree there are no open questions, if there's a viewBox and drawImage is called with a width & height provided.  If there's no viewBox, though (and/or if there's a specified 'width' but no 'height' on the SVG, for example -- or an arbitrary percent value for one of them), it's less clear to me what should happen.\n\nAnyway, IIRC we fail early even in this \"no open questions\" case because this internal drawing path currently requires an intrinsic size, and fails if it doesn't get one, even if we *could* proceed using slightly different information.", "bug_id": 700533, "id": 10622609, "author": "dholbert@mozilla.com", "text": "It depends. I think I agree there are no open questions, if there's a viewBox and drawImage is called with a width & height provided.  If there's no viewBox, though (and/or if there's a specified 'width' but no 'height' on the SVG, for example -- or an arbitrary percent value for one of them), it's less clear to me what should happen.\n\nAnyway, IIRC we fail early even in this \"no open questions\" case because this internal drawing path currently requires an intrinsic size, and fails if it doesn't get one, even if we *could* proceed using slightly different information.", "count": 19}, {"creator": "longsonr@gmail.com", "author": "longsonr@gmail.com", "text": "*** Bug 1242823 has been marked as a duplicate of this bug. ***", "count": 20, "id": 11107489, "bug_id": 700533, "is_private": false, "creation_time": "2016-01-26T07:39:58Z", "time": "2016-01-26T07:39:58Z", "attachment_id": null, "raw_text": "", "tags": []}, {"id": 11436643, "bug_id": 700533, "is_private": false, "creation_time": "2016-05-25T17:50:46Z", "creator": "timdream@gmail.com", "count": 21, "text": "drawImages() no longer throws per bug summary -- it simply doesn't draw the image, which is arguably worse :'(", "author": "timdream@gmail.com", "tags": [], "time": "2016-05-25T17:50:46Z", "raw_text": "drawImages() no longer throws per bug summary -- it simply doesn't draw the image, which is arguably worse :'(", "attachment_id": null}, {"tags": [], "time": "2016-06-30T01:36:08Z", "attachment_id": null, "raw_text": "", "bug_id": 700533, "id": 11512931, "is_private": false, "creation_time": "2016-06-30T01:36:08Z", "creator": "longsonr@gmail.com", "author": "longsonr@gmail.com", "count": 22, "text": "*** Bug 1283234 has been marked as a duplicate of this bug. ***"}, {"time": "2016-11-10T19:52:15Z", "raw_text": "This is still an issue for me too. Setting width & height on the <img> tag in the canvas didn't fix it.\n\nDebugging this was a challenge since there was no thrown error, but we have worked around it by using a .png instead of .svg.", "author": "ben@rabidtech.co.nz", "count": 23, "text": "This is still an issue for me too. Setting width & height on the <img> tag in the canvas didn't fix it.\n\nDebugging this was a challenge since there was no thrown error, but we have worked around it by using a .png instead of .svg.", "bug_id": 700533, "id": 11851498, "attachment_id": null, "tags": ["me-too"], "creator": "ben@rabidtech.co.nz", "is_private": false, "creation_time": "2016-11-10T19:52:15Z"}, {"author": "andreabogazzi79@gmail.com", "count": 24, "text": "Today i encountered same problem and opened a bug ticket. After some comment i got reference to this bug, and i paste here the information i have:\n\n\nChrome, Safari, Edge have different behaviour, but all get dimensions different from 0 and can actually paint the image over the canvas.\n\nFirefox and ie11 go 0 dimensions and cannot paint anything.\n\nI tried to assign the image object width and height but this does not change any result. i tried assigning them before load and after load event but does not change the result.\n\nThose are behaviour of other browsers:\nChrome ( best solution in my opinion ): take 300x150 (naturalWidth/naturalHeight) and fit the image in that area.\nSafari 10: display image with viewBox dimensions\nEdge: make a 300x150 image and put the svg with correct aspect ratio at center.\n\nWhat feels wrong most of all is the inability to render after displaying the svg in the dom.", "id": 11951933, "bug_id": 700533, "time": "2017-01-02T21:29:29Z", "raw_text": "Today i encountered same problem and opened a bug ticket. After some comment i got reference to this bug, and i paste here the information i have:\n\n\nChrome, Safari, Edge have different behaviour, but all get dimensions different from 0 and can actually paint the image over the canvas.\n\nFirefox and ie11 go 0 dimensions and cannot paint anything.\n\nI tried to assign the image object width and height but this does not change any result. i tried assigning them before load and after load event but does not change the result.\n\nThose are behaviour of other browsers:\nChrome ( best solution in my opinion ): take 300x150 (naturalWidth/naturalHeight) and fit the image in that area.\nSafari 10: display image with viewBox dimensions\nEdge: make a 300x150 image and put the svg with correct aspect ratio at center.\n\nWhat feels wrong most of all is the inability to render after displaying the svg in the dom.", "creator": "andreabogazzi79@gmail.com", "is_private": false, "creation_time": "2017-01-02T21:29:29Z", "attachment_id": null, "tags": []}, {"tags": [], "attachment_id": null, "raw_text": "Tim, did you intentionally set platform-rel?", "time": "2017-01-30T20:21:06Z", "is_private": false, "creation_time": "2017-01-30T20:21:06Z", "id": 12022256, "bug_id": 700533, "author": "overholt@mozilla.com", "count": 25, "text": "Tim, did you intentionally set platform-rel?", "creator": "overholt@mozilla.com"}, {"author": "timdream@gmail.com", "text": "I guess I did, without really understand what it means. How do I escalate a bug on browser-parity that affects developer experiences?", "count": 26, "id": 12026732, "bug_id": 700533, "raw_text": "I guess I did, without really understand what it means. How do I escalate a bug on browser-parity that affects developer experiences?", "time": "2017-02-01T01:56:19Z", "creator": "timdream@gmail.com", "is_private": false, "creation_time": "2017-02-01T01:56:19Z", "attachment_id": null, "tags": []}, {"creation_time": "2017-02-01T07:28:44Z", "is_private": false, "bug_id": 700533, "id": 12026986, "text": "There is no browser parity here, everyone is different, see comment 24 for instance. I guess the first thing therefore would be to get w3c to define what should happen.", "count": 27, "author": "longsonr@gmail.com", "creator": "longsonr@gmail.com", "tags": [], "raw_text": "There is no browser parity here, everyone is different, see comment 24 for instance. I guess the first thing therefore would be to get w3c to define what should happen.", "attachment_id": null, "time": "2017-02-01T07:28:44Z"}, {"attachment_id": null, "tags": [], "creator": "andreabogazzi79@gmail.com", "creation_time": "2017-02-01T09:18:52Z", "is_private": false, "raw_text": "Specs refers to container. no width and no height means 100% of contanier.\nWe do not have a proper container here.\nI search on w3c svg spec some kind of use case that could fit this but i did not find anything.\n\nStill the image can render in the browser alone where parent viewport is defined by browser window.\nI can understand painting an image on a canvas is different but i think the common sense is that something should be rendered.\nthe `drawImage(svg, dx, dy)` and `drawImage(svg, sx, sy, sw, sh, dx, dy, dw, dh)` are problematic use cases that let think that a default fallback viewport size is a nice thing.\nOr at least throw something in the console, fail not silently so that if an app cannot render at least can collect errors.", "time": "2017-02-01T09:18:52Z", "count": 28, "text": "Specs refers to container. no width and no height means 100% of contanier.\nWe do not have a proper container here.\nI search on w3c svg spec some kind of use case that could fit this but i did not find anything.\n\nStill the image can render in the browser alone where parent viewport is defined by browser window.\nI can understand painting an image on a canvas is different but i think the common sense is that something should be rendered.\nthe `drawImage(svg, dx, dy)` and `drawImage(svg, sx, sy, sw, sh, dx, dy, dw, dh)` are problematic use cases that let think that a default fallback viewport size is a nice thing.\nOr at least throw something in the console, fail not silently so that if an app cannot render at least can collect errors.", "author": "andreabogazzi79@gmail.com", "id": 12027097, "bug_id": 700533}, {"creator": "overholt@mozilla.com", "count": 29, "text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #26)\n> I guess I did, without really understand what it means. How do I escalate a\n> bug on browser-parity that affects developer experiences?\n\nGood question. platform-rel is for partner-related things (\"platform relations\") so it's not the best option. One option is needinfoing the triage owner of a bug but I guess emailing dev-platform?", "author": "overholt@mozilla.com", "id": 12028898, "bug_id": 700533, "is_private": false, "creation_time": "2017-02-01T19:14:12Z", "time": "2017-02-01T19:14:12Z", "raw_text": "(In reply to Tim Guan-tin Chien [:timdream] (please needinfo) from comment #26)\n> I guess I did, without really understand what it means. How do I escalate a\n> bug on browser-parity that affects developer experiences?\n\nGood question. platform-rel is for partner-related things (\"platform relations\") so it's not the best option. One option is needinfoing the triage owner of a bug but I guess emailing dev-platform?", "attachment_id": null, "tags": []}, {"attachment_id": null, "tags": [], "creator": "longsonr@gmail.com", "is_private": false, "creation_time": "2017-05-20T08:41:26Z", "raw_text": "", "time": "2017-05-20T08:41:26Z", "count": 30, "text": "*** Bug 1366299 has been marked as a duplicate of this bug. ***", "author": "longsonr@gmail.com", "bug_id": 700533, "id": 12334944}, {"creation_time": "2017-06-18T21:50:33Z", "is_private": false, "bug_id": 700533, "id": 12407951, "author": "longsonr@gmail.com", "count": 31, "text": "*** Bug 1374049 has been marked as a duplicate of this bug. ***", "creator": "longsonr@gmail.com", "tags": [], "attachment_id": null, "raw_text": "", "time": "2017-06-18T21:50:33Z"}, {"id": 13600332, "bug_id": 700533, "is_private": false, "creation_time": "2018-09-08T08:31:37Z", "creator": "longsonr@gmail.com", "author": "longsonr@gmail.com", "text": "*** Bug 1489418 has been marked as a duplicate of this bug. ***", "count": 32, "tags": [], "time": "2018-09-08T08:31:37Z", "attachment_id": null, "raw_text": ""}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2018-11-17T22:22:46Z", "creator": "longsonr@gmail.com", "raw_text": "", "time": "2018-11-17T22:22:46Z", "id": 13763335, "bug_id": 700533, "author": "longsonr@gmail.com", "count": 33, "text": "*** Bug 1508077 has been marked as a duplicate of this bug. ***"}, {"time": "2018-11-17T23:06:38Z", "attachment_id": null, "raw_text": "http://jsfiddle.net/d3x0r/6yvkcw9b/  \nthis sets the image size.\nstill doesn't draw.", "tags": ["off-topic"], "creator": "d3ck0r@gmail.com", "author": "d3ck0r@gmail.com", "text": "http://jsfiddle.net/d3x0r/6yvkcw9b/  \nthis sets the image size.\nstill doesn't draw.", "count": 34, "id": 13763358, "bug_id": 700533, "creation_time": "2018-11-17T23:06:38Z", "is_private": false}, {"bug_id": 700533, "id": 13771878, "creation_time": "2018-11-21T19:53:07Z", "is_private": false, "creator": "dholbert@mozilla.com", "author": "dholbert@mozilla.com", "text": "(In reply to d3ck0r from comment #34)\n> this sets the image size.\n> still doesn't draw.\n\nThen it's probably not this bug. Mind filing a new bug at https://bugzilla.mozilla.org/enter_bug.cgi?product=Core&component=SVG ?\n\n(For what it's worth, I'm seeing the same output from Chrome and Firefox on that testcase (the canvas just has a black rect, and the yellow circle <svg> element shows up alongside it at the bottom right, not in the canvas at all).  Though Edge does seem to draw the yellow circle in the canvas (on top of the black rect), which I'm assuming is your expected behavior, so it's possible they're right and Firefox/Chrome are wrong.", "count": 35, "tags": ["obsolete"], "time": "2018-11-21T19:53:07Z", "attachment_id": null, "raw_text": "(In reply to d3ck0r from comment #34)\n> this sets the image size.\n> still doesn't draw.\n\nThen it's probably not this bug. Mind filing a new bug at https://bugzilla.mozilla.org/enter_bug.cgi?product=Core&component=SVG ?\n\n(For what it's worth, I'm seeing the same output from Chrome and Firefox on that testcase (the canvas just has a black rect, and the yellow circle <svg> element shows up alongside it at the bottom right, not in the canvas at all).  Though Edge does seem to draw the yellow circle in the canvas (on top of the black rect), which I'm assuming is your expected behavior, so it's possible they're right and Firefox/Chrome are wrong."}, {"tags": ["obsolete"], "attachment_id": null, "creation_time": "2018-11-21T20:01:09Z", "is_private": false, "creator": "longsonr@gmail.com", "time": "2018-11-21T20:01:09Z", "raw_text": "The testcase has multiple problems e.g. it draws on a timeout rather than waiting for the image's onload event.", "id": 13771893, "bug_id": 700533, "text": "The testcase has multiple problems e.g. it draws on a timeout rather than waiting for the image's onload event.", "count": 36, "author": "longsonr@gmail.com"}, {"text": "If the original testcase is unclear i can improve it.", "count": 37, "author": "andreabogazzi79@gmail.com", "id": 13771905, "bug_id": 700533, "time": "2018-11-21T20:08:23Z", "raw_text": "If the original testcase is unclear i can improve it.", "creator": "andreabogazzi79@gmail.com", "creation_time": "2018-11-21T20:08:23Z", "is_private": false, "attachment_id": null, "tags": ["off-topic"]}, {"creator": "d3ck0r@gmail.com", "is_private": false, "creation_time": "2018-11-21T20:13:55Z", "attachment_id": null, "tags": ["off-topic"], "count": 38, "text": "I have since updated it to be more correct, and it shows correctly all over.\nhttps://jsfiddle.net/d3x0r/6yvkcw9b/29/\nNo issues. Thanx.\n1) read with xmlserializer\n2) setAttribute  \"width\", \"height", "author": "d3ck0r@gmail.com", "bug_id": 700533, "id": 13771917, "time": "2018-11-21T20:13:55Z", "raw_text": "I have since updated it to be more correct, and it shows correctly all over.\nhttps://jsfiddle.net/d3x0r/6yvkcw9b/29/\nNo issues. Thanx.\n1) read with xmlserializer\n2) setAttribute  \"width\", \"height"}, {"creator": "webrant@gmail.com", "creation_time": "2019-03-13T09:43:32Z", "is_private": false, "attachment_id": null, "tags": [], "author": "webrant@gmail.com", "text": "Here is a workaround where you can use the built SVG document to set the width/heights.\n\nconst svgDocument = new DOMParser().parseFromString(atob(base64EncodedSVG), \"image/svg+xml\");\nsvgDocument.documentElement.width.baseVal.valueAsString = svgDocument.documentElement.width.baseVal.value.toString();\nsvgDocument.documentElement.height.baseVal.valueAsString = svgDocument.documentElement.height.baseVal.value.toString();\nbase64EncodedSVG = btoa(new XMLSerializer().serializeToString(svgDocument));\n\nThis works because the document knows it should be 100% (default in valueAsString) and it calculates the value correctly from the viewBox in baseVal.value.\n\nSo it's quite weird that it doesn't \"just work\" without this silly workaround.", "count": 39, "bug_id": 700533, "id": 13983629, "raw_text": "Here is a workaround where you can use the built SVG document to set the width/heights.\n\nconst svgDocument = new DOMParser().parseFromString(atob(base64EncodedSVG), \"image/svg+xml\");\nsvgDocument.documentElement.width.baseVal.valueAsString = svgDocument.documentElement.width.baseVal.value.toString();\nsvgDocument.documentElement.height.baseVal.valueAsString = svgDocument.documentElement.height.baseVal.value.toString();\nbase64EncodedSVG = btoa(new XMLSerializer().serializeToString(svgDocument));\n\nThis works because the document knows it should be 100% (default in valueAsString) and it calculates the value correctly from the viewBox in baseVal.value.\n\nSo it's quite weird that it doesn't \"just work\" without this silly workaround.", "time": "2019-03-13T09:43:32Z"}, {"time": "2019-03-13T10:11:43Z", "raw_text": "my understanding is that specs are unclear on what to do and they do not want to implement something that just make sense.\n\nThe bug is really annoying.\nAll other browsers took a stance somehow.", "bug_id": 700533, "id": 13983658, "count": 40, "text": "my understanding is that specs are unclear on what to do and they do not want to implement something that just make sense.\n\nThe bug is really annoying.\nAll other browsers took a stance somehow.", "author": "andreabogazzi79@gmail.com", "tags": ["advocacy"], "attachment_id": null, "creation_time": "2019-03-13T10:11:43Z", "is_private": false, "creator": "andreabogazzi79@gmail.com"}, {"time": "2019-03-13T10:23:31Z", "raw_text": "Firefox own SVGDocument knows the value to use since it exposes the correct value in width.baseVal.value. So they follow the  other browsers there.\nSo different stances within the browser...", "author": "webrant@gmail.com", "count": 41, "text": "Firefox own SVGDocument knows the value to use since it exposes the correct value in width.baseVal.value. So they follow the  other browsers there.\nSo different stances within the browser...", "id": 13983683, "bug_id": 700533, "attachment_id": null, "tags": [], "creator": "webrant@gmail.com", "creation_time": "2019-03-13T10:23:31Z", "is_private": false}, {"time": "2019-07-16T17:20:24Z", "raw_text": "", "count": 42, "text": "*** Bug 1565551 has been marked as a duplicate of this bug. ***", "author": "longsonr@gmail.com", "id": 14239896, "bug_id": 700533, "attachment_id": null, "tags": [], "creator": "longsonr@gmail.com", "creation_time": "2019-07-16T17:20:24Z", "is_private": false}, {"creation_time": "2019-11-29T17:11:49Z", "is_private": false, "creator": "ashley@scirra.com", "tags": [], "attachment_id": null, "id": 14518259, "bug_id": 700533, "text": "Why doesn't this work with the overload specifying a size, i.e. drawImage(img, 0, 0, width, height)? Surely that size could then be used as the box size to display the SVG in, and then there is at least a workaround for drawing SVGs to a canvas. Is that the same as this bug or is it a different case?", "count": 43, "author": "ashley@scirra.com", "time": "2019-11-29T17:11:49Z", "raw_text": "Why doesn't this work with the overload specifying a size, i.e. drawImage(img, 0, 0, width, height)? Surely that size could then be used as the box size to display the SVG in, and then there is at least a workaround for drawing SVGs to a canvas. Is that the same as this bug or is it a different case?"}, {"raw_text": "I was getting blank PNG's in firefox trying to render my svg's, took me a while before if found this firefox issue. I was calling drawImage with a width and a height it would be logical if those sizes where respected like ashley mentioned here.", "attachment_id": null, "time": "2020-02-20T12:49:54Z", "tags": ["me-too"], "count": 44, "text": "I was getting blank PNG's in firefox trying to render my svg's, took me a while before if found this firefox issue. I was calling drawImage with a width and a height it would be logical if those sizes where respected like ashley mentioned here.", "author": "AndreVanKammen@gmail.com", "creator": "AndreVanKammen@gmail.com", "creation_time": "2020-02-20T12:49:54Z", "is_private": false, "id": 14651673, "bug_id": 700533}, {"time": "2020-03-31T23:08:27Z", "raw_text": "I don't really care if Firefox works like other browsers, but I have found information on how Firefox behaves in this to be lacking.\n\n- I have an svg which I manipulated so that the contents are flush with the viewbox", "text": "I don't really care if Firefox works like other browsers, but I have found information on how Firefox behaves in this to be lacking.\n\n- I have an svg which I manipulated so that the contents are flush with the viewbox", "count": 45, "author": "jonathan.potter.business@gmail.com", "bug_id": 700533, "id": 14728053, "attachment_id": null, "tags": ["advocacy"], "creator": "jonathan.potter.business@gmail.com", "is_private": false, "creation_time": "2020-03-31T23:08:27Z"}, {"text": "*** Bug 1659371 has been marked as a duplicate of this bug. ***", "count": 46, "author": "longsonr@gmail.com", "creator": "longsonr@gmail.com", "creation_time": "2020-08-17T08:34:17Z", "is_private": false, "id": 14992239, "bug_id": 700533, "raw_text": "", "attachment_id": null, "time": "2020-08-17T08:34:17Z", "tags": []}, {"raw_text": "This is affecting at least one site using canvas-based map software mapbox-gl in conjuction with SVG icons for markers, as can be seen in https://webcompat.com/issues/64352.", "attachment_id": null, "time": "2021-01-11T23:33:35Z", "tags": [], "text": "This is affecting at least one site using canvas-based map software mapbox-gl in conjuction with SVG icons for markers, as can be seen in https://webcompat.com/issues/64352.", "count": 47, "author": "twisniewski@mozilla.com", "creator": "twisniewski@mozilla.com", "is_private": false, "creation_time": "2021-01-11T23:33:35Z", "id": 15211870, "bug_id": 700533}, {"is_private": false, "creation_time": "2021-08-25T08:18:12Z", "creator": "sakari@psitriangle.net", "tags": ["advocacy"], "attachment_id": null, "bug_id": 700533, "id": 15542654, "count": 48, "text": "Wondering why Firefox doesn't render SVG images loaded to a canvas without this silly fix.\nAffecting my application too, where I am just loading an SVG vector and using canvas drawImage to draw it.\nWorks perfectly fine in Chrome based browsers without having the dimension being read, and I'm also using drawImage(0, 0, width, height) so it is quite silly why this doesn't work.", "author": "sakari@psitriangle.net", "time": "2021-08-25T08:18:12Z", "raw_text": "Wondering why Firefox doesn't render SVG images loaded to a canvas without this silly fix.\nAffecting my application too, where I am just loading an SVG vector and using canvas drawImage to draw it.\nWorks perfectly fine in Chrome based browsers without having the dimension being read, and I'm also using drawImage(0, 0, width, height) so it is quite silly why this doesn't work."}, {"text": "*** Bug 1743977 has been marked as a duplicate of this bug. ***", "count": 49, "author": "tnikkel@gmail.com", "creator": "tnikkel@gmail.com", "is_private": false, "creation_time": "2021-12-03T12:42:57Z", "bug_id": 700533, "id": 15681783, "raw_text": "", "attachment_id": null, "time": "2021-12-03T12:42:57Z", "tags": []}]}}}