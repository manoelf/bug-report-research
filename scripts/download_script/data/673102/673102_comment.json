{"bugs": {"673102": {"comments": [{"creator": "joey@mozilla.com", "author": "joey@mozilla.com", "raw_text": "multiple copies of nsinstall.c exist in the sandbox.  Would it make sense to refactor sources to have consistent behavior and build the tool into a common directory for general use ?\n\n./config/nsinstall.c\n./nsprpub/config/nsinstall.c\n./security/coreconf/nsinstall/nsinstall.c\n./js/src/config/nsinstall.c", "creation_time": "2011-07-21T13:20:50Z", "text": "multiple copies of nsinstall.c exist in the sandbox.  Would it make sense to refactor sources to have consistent behavior and build the tool into a common directory for general use ?\n\n./config/nsinstall.c\n./nsprpub/config/nsinstall.c\n./security/coreconf/nsinstall/nsinstall.c\n./js/src/config/nsinstall.c", "time": "2011-07-21T13:20:50Z", "attachment_id": null, "count": 0, "is_private": false, "tags": [], "id": 5604091, "bug_id": 673102}, {"creator": "ted@mielczarek.org", "author": "ted@mielczarek.org", "bug_id": 673102, "count": 1, "is_private": false, "tags": [], "id": 5604112, "text": "It's...complicated. NSPR and NSS are standalone upstream projects. js/src functions more-or-less as a standalone project these days.", "time": "2011-07-21T13:32:08Z", "attachment_id": null, "raw_text": "It's...complicated. NSPR and NSS are standalone upstream projects. js/src functions more-or-less as a standalone project these days.", "creation_time": "2011-07-21T13:32:08Z"}, {"creator": "joey@mozilla.com", "author": "joey@mozilla.com", "bug_id": 673102, "tags": [], "is_private": false, "count": 2, "id": 5604147, "text": "(In reply to comment #1)\n> It's...complicated. NSPR and NSS are standalone upstream projects. js/src\n> functions more-or-less as a standalone project these days.\n\nFor the upstream projects would the problem be coordination or long term maintenance ?  A quick and dirty answer { if upstream owners do not care } might be to patch their makefile so it can either copy the common nsinstall.c in locally for a build or change the makefile nsinstall path so a pre-built binary from bin/obj could be used [ yes this answer is simpler but would introduce a dependency ].\n\nUmmm, ignoring js/ for the moment as there are a few tools in that basket :)", "time": "2011-07-21T13:52:03Z", "attachment_id": null, "creation_time": "2011-07-21T13:52:03Z", "raw_text": "(In reply to comment #1)\n> It's...complicated. NSPR and NSS are standalone upstream projects. js/src\n> functions more-or-less as a standalone project these days.\n\nFor the upstream projects would the problem be coordination or long term maintenance ?  A quick and dirty answer { if upstream owners do not care } might be to patch their makefile so it can either copy the common nsinstall.c in locally for a build or change the makefile nsinstall path so a pre-built binary from bin/obj could be used [ yes this answer is simpler but would introduce a dependency ].\n\nUmmm, ignoring js/ for the moment as there are a few tools in that basket :)"}, {"id": 5604402, "tags": [], "is_private": false, "count": 3, "bug_id": 673102, "raw_text": "Coordinating with NSS isn't worth the effort. We can coordinate with NSPR, but since they are all separate build systems it probably isn't worth the effort.", "creation_time": "2011-07-21T15:32:38Z", "attachment_id": null, "time": "2011-07-21T15:32:38Z", "text": "Coordinating with NSS isn't worth the effort. We can coordinate with NSPR, but since they are all separate build systems it probably isn't worth the effort.", "author": "benjamin@smedbergs.us", "creator": "benjamin@smedbergs.us"}, {"raw_text": "Note that we could \"simply\" override the NSINSTALL variable when going in NSPR, NSS and js, to force them to use whatever the main tree uses.", "creation_time": "2011-07-21T15:36:06Z", "text": "Note that we could \"simply\" override the NSINSTALL variable when going in NSPR, NSS and js, to force them to use whatever the main tree uses.", "attachment_id": null, "time": "2011-07-21T15:36:06Z", "is_private": false, "count": 4, "tags": [], "id": 5604411, "bug_id": 673102, "creator": "mh+mozilla@glandium.org", "author": "mh+mozilla@glandium.org"}, {"author": "benjamin@smedbergs.us", "creator": "benjamin@smedbergs.us", "bug_id": 673102, "id": 5604413, "count": 5, "is_private": false, "tags": [], "time": "2011-07-21T15:37:30Z", "attachment_id": null, "text": "What problem does that solve?", "raw_text": "What problem does that solve?", "creation_time": "2011-07-21T15:37:30Z"}, {"creator": "mh+mozilla@glandium.org", "author": "mh+mozilla@glandium.org", "is_private": false, "count": 6, "tags": [], "id": 5604418, "bug_id": 673102, "raw_text": "That would allow to have a canonical implementation of nsinstall, whatever the other projects want to use. Especially, that'd allow to use nsinstall.py in NSPR and NSS (since aiui, nsinstall.py is mostly ready to be used)", "creation_time": "2011-07-21T15:39:43Z", "text": "That would allow to have a canonical implementation of nsinstall, whatever the other projects want to use. Especially, that'd allow to use nsinstall.py in NSPR and NSS (since aiui, nsinstall.py is mostly ready to be used)", "attachment_id": null, "time": "2011-07-21T15:39:43Z"}]}}, "comments": {}}