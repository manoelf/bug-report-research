{"bugs": {"661957": {"comments": [{"attachment_id": null, "raw_text": "I was fiddling around with the profiler and I found that I could eek about a hundred points out of v8-v6 by switching the POD vector copy construct to memcpy... the ReplaceRegExpCallback stuff that builds the replacement string by appendInfallibling ranges of jschars gets much faster (looked like half the cycles in callgrind).\n\nSo, luke suggests we investigate use of the new PodCopy hotness, and I think we can refine podcopy to switch based on |nelems * sizeof(T)| instead of nelems.\n\nThis has to be tested across platforms, and I've temporarily nuked my windows partition on my lappy, so I'm using this bug as a reminder.", "id": 5512017, "creator": "cdleary@acm.org", "is_private": false, "count": 0, "author": "cdleary@acm.org", "creation_time": "2011-06-03T22:32:58Z", "tags": [], "bug_id": 661957, "time": "2011-06-03T22:32:58Z", "text": "I was fiddling around with the profiler and I found that I could eek about a hundred points out of v8-v6 by switching the POD vector copy construct to memcpy... the ReplaceRegExpCallback stuff that builds the replacement string by appendInfallibling ranges of jschars gets much faster (looked like half the cycles in callgrind).\n\nSo, luke suggests we investigate use of the new PodCopy hotness, and I think we can refine podcopy to switch based on |nelems * sizeof(T)| instead of nelems.\n\nThis has to be tested across platforms, and I've temporarily nuked my windows partition on my lappy, so I'm using this bug as a reminder."}, {"bug_id": 661957, "count": 1, "id": 5512020, "attachment_id": null, "raw_text": "(In reply to comment #0)\n> I found that I could eek about a\n> hundred points out of v8-v6\n\nSorry, on v8-regexp specifically, not overall.", "author": "cdleary@acm.org", "creation_time": "2011-06-03T22:33:44Z", "tags": [], "time": "2011-06-03T22:33:44Z", "text": "(In reply to comment #0)\n> I found that I could eek about a\n> hundred points out of v8-v6\n\nSorry, on v8-regexp specifically, not overall.", "creator": "cdleary@acm.org", "is_private": false}, {"text": "Created attachment 600498\nUse PodCopy for same-type copy construct.\n\nIn addition to the movement from jsutil.h to Utility.h note the change to sizeof(T) * nelems.\n\nI only see a ~50 point increase on v8-regexp from this now, on my laptop i7 machine.", "bug_id": 661957, "tags": [], "time": "2012-02-24T21:28:52Z", "creation_time": "2012-02-24T21:28:52Z", "author": "cdleary@acm.org", "count": 2, "is_private": false, "creator": "cdleary@acm.org", "id": 6091329, "raw_text": "In addition to the movement from jsutil.h to Utility.h note the change to sizeof(T) * nelems.\n\nI only see a ~50 point increase on v8-regexp from this now, on my laptop i7 machine.", "attachment_id": 600498}, {"attachment_id": 600498, "raw_text": "Cool\n\n>+            PodCopy<T>(dst, (const T *) srcbeg, srcend - srcbeg);\n\nIf T == U, then I wouldn't think the cast would be necessary; can we drop it?", "id": 6091340, "creator": "mail@lukewagner.name", "is_private": false, "count": 3, "author": "mail@lukewagner.name", "creation_time": "2012-02-24T21:32:56Z", "tags": [], "time": "2012-02-24T21:32:56Z", "bug_id": 661957, "text": "Comment on attachment 600498\nUse PodCopy for same-type copy construct.\n\nCool\n\n>+            PodCopy<T>(dst, (const T *) srcbeg, srcend - srcbeg);\n\nIf T == U, then I wouldn't think the cast would be necessary; can we drop it?"}, {"raw_text": "Mass-reassigning cdleary's bugs to default. He won't work on any of them, anymore. I guess, at least.\n\n@cdleary: shout if you take issue with this.", "attachment_id": null, "id": 7248829, "creator": "till@tillschneidereit.net", "is_private": false, "time": "2013-03-27T11:40:56Z", "tags": [], "text": "Mass-reassigning cdleary's bugs to default. He won't work on any of them, anymore. I guess, at least.\n\n@cdleary: shout if you take issue with this.", "author": "till@tillschneidereit.net", "creation_time": "2013-03-27T11:40:56Z", "count": 4, "bug_id": 661957}]}}, "comments": {}}