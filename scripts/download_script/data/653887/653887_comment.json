{"bugs": {"653887": {"comments": [{"bug_id": 653887, "text": "Right now we require BeginUpdate/EndUpdate on all mutation/document observer notifications.\n\nI think we should drop this requirement.  In particular, I think we should start by dropping it for state change notifications and attribute modifications.  I don't think those are really batched effectively anyway; the few consumers that do more mutation under the attribute notification (e.g. XBL) can do it off a script runner.\n\nOnce we no longer flush sinks from BeginUpdate for insertion/removal of nodes we can think about removing those begin/ends as well.\n\nWe would need to double-check the existing Begin/EndUpdate implementations to make sure they're ok with this change, of course, and we may still need scriptblockers for attribute changes, at least.\n\nThe win from doing this is saving lots of code running per mutation; for example for inline style changes the begin+end for the attr change is somewhere in the 30-50% range of the total time for the inline style change.\n\nAnything obviously wrong with this plan?", "tags": [], "creation_time": "2011-04-30T02:15:31Z", "attachment_id": null, "raw_text": "Right now we require BeginUpdate/EndUpdate on all mutation/document observer notifications.\n\nI think we should drop this requirement.  In particular, I think we should start by dropping it for state change notifications and attribute modifications.  I don't think those are really batched effectively anyway; the few consumers that do more mutation under the attribute notification (e.g. XBL) can do it off a script runner.\n\nOnce we no longer flush sinks from BeginUpdate for insertion/removal of nodes we can think about removing those begin/ends as well.\n\nWe would need to double-check the existing Begin/EndUpdate implementations to make sure they're ok with this change, of course, and we may still need scriptblockers for attribute changes, at least.\n\nThe win from doing this is saving lots of code running per mutation; for example for inline style changes the begin+end for the attr change is somewhere in the 30-50% range of the total time for the inline style change.\n\nAnything obviously wrong with this plan?", "creator": "bzbarsky@mit.edu", "id": 5440880, "is_private": false, "author": "bzbarsky@mit.edu", "time": "2011-04-30T02:15:31Z", "count": 0}, {"is_private": false, "count": 1, "author": "jonas@sicking.cc", "time": "2011-04-30T05:09:43Z", "id": 5440988, "attachment_id": null, "creation_time": "2011-04-30T05:09:43Z", "tags": [], "creator": "jonas@sicking.cc", "raw_text": "Yay! Lets do it! I'll try to do the XBL parts as part of bug 653881, or as a followup to it.", "bug_id": 653887, "text": "Yay! Lets do it! I'll try to do the XBL parts as part of bug 653881, or as a followup to it."}, {"count": 2, "time": "2011-04-30T06:17:09Z", "text": "We would need to change how we manage nsBindingManager::mAttachedStackSizeOnOutermost since that currently relies on BeginUpdate/EndUpdate and we'd want to move it to a scriptrunner which doesn't have the begin part.\n\nWe'd have to do that even if we're just changing attribute changes since they can cause bindings to be added/removed.\n\nHowever I think it should work if ProcessAttachedQueue sets mAttachedStackSizeOnOutermost to the current mAttachedStack.Length() while running every attach handler. Or something like that :)", "creator": "jonas@sicking.cc", "raw_text": "We would need to change how we manage nsBindingManager::mAttachedStackSizeOnOutermost since that currently relies on BeginUpdate/EndUpdate and we'd want to move it to a scriptrunner which doesn't have the begin part.\n\nWe'd have to do that even if we're just changing attribute changes since they can cause bindings to be added/removed.\n\nHowever I think it should work if ProcessAttachedQueue sets mAttachedStackSizeOnOutermost to the current mAttachedStack.Length() while running every attach handler. Or something like that :)", "id": 5441014, "author": "jonas@sicking.cc", "is_private": false, "bug_id": 653887, "attachment_id": null, "tags": [], "creation_time": "2011-04-30T06:17:09Z"}, {"id": 5445012, "is_private": false, "author": "bzbarsky@mit.edu", "bug_id": 653887, "tags": [], "creation_time": "2011-05-03T03:51:43Z", "attachment_id": null, "time": "2011-05-03T03:51:43Z", "count": 3, "text": "OK.  So we have the following implementations of nsIDocumentObserver::BeginUpdate:\n\n1) PresShell\n2) XMLPrettyPrinter\n3) nsContentSink\n\nThat's it.  Plus whatever nsDocument::Begin/EndUpdate do.\n\nThe nsContentSink ones already ignore UPDATE_CONTENT_STATE and will go away with Henri's XML work anyway.  It also doesn't actually care about attribute changes; it just can't tell them apart from DOM insertions/removals.\n\nThe XMLPrettyPrinter just wants to know when the last update ends so it can drop its stuff.  This can happen off a script runner as long as script blockers are still installed at current begin/end callsites (which we want to do).\n\nPresshell is more interesting.  It calls through to the frame constructor and for UPDATE_STYLE updates batches style set changes.  That batching is actually useful; I think we will want to keep it.  Luckily, UPDATE_STYLE changes are rare and already expensive, so that would be OK.\n\nFrame constructor needs to detect ends of outermost updates so it can recalc quotes and counters.  It also calls IncrementDOMGeneration() on the prescontext, which is used to bail out of FrameLayerBuilder::DrawThebesLayer if the DOM changes under it.  We should just do that on actual mutation notifications; we certainly don't need to do it on state changes.  As for quotes and counters, the quotes stuff only cares about frames being destroyed and created.  Same for counters.  Neither attribute nor state changes on their own can cause that to happen.\n\nnsDocument does the mInXBLUpdate thing Jonas promised to remove, which is all about notifying the binding manager.  It also handles adding/removing script blockers (removable for UPDATE_CONTENT_MODEL, not removable otherwise) and notifying the three observers above.\n\nThe binding manager just needs to keep track of the attached stack depth, so it's only concerned about things that can cause binding attachment.  I believe neither attribute nor state changes can trigger that directly.\n\nSo I think that we can remove the begin/end stuff for attributes and states right now, if we move prettyprinter to a scriptrunner.  For insert/remove we'll need to do something with binding manager, the sink, and the frame constructor.  STYLE updates we want to keep the begin/end for.\n\nAny obvious errors in the above?", "raw_text": "OK.  So we have the following implementations of nsIDocumentObserver::BeginUpdate:\n\n1) PresShell\n2) XMLPrettyPrinter\n3) nsContentSink\n\nThat's it.  Plus whatever nsDocument::Begin/EndUpdate do.\n\nThe nsContentSink ones already ignore UPDATE_CONTENT_STATE and will go away with Henri's XML work anyway.  It also doesn't actually care about attribute changes; it just can't tell them apart from DOM insertions/removals.\n\nThe XMLPrettyPrinter just wants to know when the last update ends so it can drop its stuff.  This can happen off a script runner as long as script blockers are still installed at current begin/end callsites (which we want to do).\n\nPresshell is more interesting.  It calls through to the frame constructor and for UPDATE_STYLE updates batches style set changes.  That batching is actually useful; I think we will want to keep it.  Luckily, UPDATE_STYLE changes are rare and already expensive, so that would be OK.\n\nFrame constructor needs to detect ends of outermost updates so it can recalc quotes and counters.  It also calls IncrementDOMGeneration() on the prescontext, which is used to bail out of FrameLayerBuilder::DrawThebesLayer if the DOM changes under it.  We should just do that on actual mutation notifications; we certainly don't need to do it on state changes.  As for quotes and counters, the quotes stuff only cares about frames being destroyed and created.  Same for counters.  Neither attribute nor state changes on their own can cause that to happen.\n\nnsDocument does the mInXBLUpdate thing Jonas promised to remove, which is all about notifying the binding manager.  It also handles adding/removing script blockers (removable for UPDATE_CONTENT_MODEL, not removable otherwise) and notifying the three observers above.\n\nThe binding manager just needs to keep track of the attached stack depth, so it's only concerned about things that can cause binding attachment.  I believe neither attribute nor state changes can trigger that directly.\n\nSo I think that we can remove the begin/end stuff for attributes and states right now, if we move prettyprinter to a scriptrunner.  For insert/remove we'll need to do something with binding manager, the sink, and the frame constructor.  STYLE updates we want to keep the begin/end for.\n\nAny obvious errors in the above?", "creator": "bzbarsky@mit.edu"}, {"creator": "bzbarsky@mit.edu", "raw_text": "> attribute changes since they can cause bindings to be added/removed\n\nSynchronously under the attribute change update (ignoring mutation events for now)?", "text": "> attribute changes since they can cause bindings to be added/removed\n\nSynchronously under the attribute change update (ignoring mutation events for now)?", "count": 4, "time": "2011-05-03T03:52:42Z", "attachment_id": null, "tags": [], "creation_time": "2011-05-03T03:52:42Z", "bug_id": 653887, "author": "bzbarsky@mit.edu", "is_private": false, "id": 5445014}, {"time": "2011-05-12T06:56:49Z", "count": 5, "text": "Talked to roc; he thinks IncrementDOMGeneration should be safe for state and attr changes.", "raw_text": "Talked to roc; he thinks IncrementDOMGeneration should be safe for state and attr changes.", "creator": "bzbarsky@mit.edu", "id": 5464887, "author": "bzbarsky@mit.edu", "is_private": false, "bug_id": 653887, "tags": [], "creation_time": "2011-05-12T06:56:49Z", "attachment_id": null}, {"id": 5472234, "is_private": false, "author": "bzbarsky@mit.edu", "bug_id": 653887, "attachment_id": null, "tags": [], "creation_time": "2011-05-16T14:44:44Z", "count": 6, "time": "2011-05-16T14:44:44Z", "text": "OK.  I'm going to file separate bugs for the state thing (which I need right this second) and the attribute thing (which I will do ASAP).", "creator": "bzbarsky@mit.edu", "raw_text": "OK.  I'm going to file separate bugs for the state thing (which I need right this second) and the attribute thing (which I will do ASAP)."}]}}, "comments": {}}