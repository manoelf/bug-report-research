{"comments": {}, "bugs": {"664077": {"comments": [{"tags": [], "text": "Created attachment 539121\nexample of gradient not showing\n\nIn test.html, the call to fillRect does not properly display the gradient. If the fillStyle is changed to a single color, then the rectangle is shown.\n\nIn the commented section, the same rectangle is rendered correctly. The only difference between that section and the original is that context is scaled differently.", "bug_id": 664077, "attachment_id": 539121, "raw_text": "In test.html, the call to fillRect does not properly display the gradient. If the fillStyle is changed to a single color, then the rectangle is shown.\n\nIn the commented section, the same rectangle is rendered correctly. The only difference between that section and the original is that context is scaled differently.", "time": "2011-06-14T05:27:42Z", "creation_time": "2011-06-14T05:27:42Z", "creator": "sbarman@mozilla.com", "author": "sbarman@mozilla.com", "count": 0, "id": 5530762, "is_private": false}, {"bug_id": 664077, "text": "++shaon", "tags": [], "attachment_id": null, "raw_text": "++shaon", "creator": "gal@uci.edu", "time": "2011-06-14T06:00:32Z", "creation_time": "2011-06-14T06:00:32Z", "author": "gal@uci.edu", "is_private": false, "count": 1, "id": 5530787}, {"creation_time": "2011-06-14T06:03:01Z", "time": "2011-06-14T06:03:01Z", "creator": "gal@uci.edu", "author": "gal@uci.edu", "id": 5530789, "count": 2, "is_private": false, "tags": [], "bug_id": 664077, "text": "This is biting Shaon's intern project pretty bad. I am offering a large quantity of a beverage of their choice to the person who could whip up a quick fix for us.", "attachment_id": null, "raw_text": "This is biting Shaon's intern project pretty bad. I am offering a large quantity of a beverage of their choice to the person who could whip up a quick fix for us."}, {"is_private": false, "count": 3, "id": 5530792, "creator": "roc@ocallahan.org", "creation_time": "2011-06-14T06:06:39Z", "time": "2011-06-14T06:06:39Z", "author": "roc@ocallahan.org", "attachment_id": null, "raw_text": "WFM on Windows (D2D). Presumably a cairo/X bug? Possibly even a pixman bug.", "tags": [], "bug_id": 664077, "text": "WFM on Windows (D2D). Presumably a cairo/X bug? Possibly even a pixman bug."}, {"bug_id": 664077, "text": "Works on macosx. I guess we can work around this by giving shaon a different machine. That makes this a lot less urgent. Thanks!", "tags": [], "attachment_id": null, "raw_text": "Works on macosx. I guess we can work around this by giving shaon a different machine. That makes this a lot less urgent. Thanks!", "creator": "gal@uci.edu", "creation_time": "2011-06-14T06:09:44Z", "time": "2011-06-14T06:09:44Z", "author": "gal@uci.edu", "is_private": false, "id": 5530799, "count": 4}, {"id": 5530804, "count": 5, "is_private": false, "author": "roc@ocallahan.org", "creation_time": "2011-06-14T06:12:23Z", "time": "2011-06-14T06:12:23Z", "creator": "roc@ocallahan.org", "raw_text": "You should check any of the _cairo_fixed_16_16_from_double calls in _cairo_xlib_surface_acquire_pattern_surface are failing due to out-of-range.\n\nTry setting MOZ_CANVAS_IMAGE_SURFACE in your environment (see nsCanvasRenderingContext2D::SetDimensions) to see if that works around the problem.", "attachment_id": null, "bug_id": 664077, "text": "You should check any of the _cairo_fixed_16_16_from_double calls in _cairo_xlib_surface_acquire_pattern_surface are failing due to out-of-range.\n\nTry setting MOZ_CANVAS_IMAGE_SURFACE in your environment (see nsCanvasRenderingContext2D::SetDimensions) to see if that works around the problem.", "tags": []}, {"raw_text": "Thanks for filing this, Shaon!\n\nDoesn't work for me on d2d.  I found while hacking on a similar test that it worked up to scale=499 and abruptly stopped at scale=500, even after varying the other scale-dependent params.  Bas seemed to have an idea (guessed d2d) but we didn't connect on IRC in time.", "attachment_id": null, "bug_id": 664077, "text": "Thanks for filing this, Shaon!\n\nDoesn't work for me on d2d.  I found while hacking on a similar test that it worked up to scale=499 and abruptly stopped at scale=500, even after varying the other scale-dependent params.  Bas seemed to have an idea (guessed d2d) but we didn't connect on IRC in time.", "tags": [], "is_private": false, "id": 5530822, "count": 6, "author": "cjones.bugs@gmail.com", "creator": "cjones.bugs@gmail.com", "time": "2011-06-14T06:28:29Z", "creation_time": "2011-06-14T06:28:29Z"}, {"raw_text": "Correction!  I had GPU rendering force-disabled to test something else and forgot.  No d2d.\n\nWith force-disabled turned off, ... I'm now getting d3d9 instead of d3d10 :|.  So still broken.", "attachment_id": null, "tags": [], "bug_id": 664077, "text": "Correction!  I had GPU rendering force-disabled to test something else and forgot.  No d2d.\n\nWith force-disabled turned off, ... I'm now getting d3d9 instead of d3d10 :|.  So still broken.", "is_private": false, "id": 5530829, "count": 7, "author": "cjones.bugs@gmail.com", "creator": "cjones.bugs@gmail.com", "time": "2011-06-14T06:37:51Z", "creation_time": "2011-06-14T06:37:51Z"}, {"bug_id": 664077, "text": "Bug definitely lies somewhere within cairo/pixman.  Buggy with d2d and MOZ_CANVAS_IMAGE_SURFACE=1.  Didn't track it down tonight, can poke later if no one beats me to it.", "tags": [], "attachment_id": null, "raw_text": "Bug definitely lies somewhere within cairo/pixman.  Buggy with d2d and MOZ_CANVAS_IMAGE_SURFACE=1.  Didn't track it down tonight, can poke later if no one beats me to it.", "creation_time": "2011-06-14T07:12:00Z", "time": "2011-06-14T07:12:00Z", "creator": "cjones.bugs@gmail.com", "author": "cjones.bugs@gmail.com", "count": 8, "id": 5530863, "is_private": false}, {"tags": [], "bug_id": 664077, "text": "pixman is bailing out of the stack below because a transformed point is underflowing at this check\n\n\tquo = v[j] / (v[2] >> 16);\n\tif (quo > pixman_max_fixed_48_16 || quo < pixman_min_fixed_48_16)\n\t    return FALSE;\n\nv[j] = -48947593920512\nv[2] = 1073741824\nquo  = -2987524043\n\n\txul.dll!_moz_pixman_transform_point(const pixman_transform * transform=0x134b0738, pixman_vector * vector=0x00229cf8)  Line 110\tC\n \txul.dll!compute_sample_extents(pixman_transform * transform=0x134b0738, pixman_box32 * extents=0x00229d74, int x=28, int y=360, int x_off=0, int y_off=0, int width=0, int height=0)  Line 607 + 0xd bytes\tC\n \txul.dll!analyze_extent(pixman_image * image=0x134b05f0, int x=28, int y=360, const pixman_box32 * extents=0x00229dcc, unsigned int * flags=0x00229db8)  Line 770 + 0x25 bytes\tC\n \txul.dll!_moz_pixman_image_composite32(pixman_op_t op=PIXMAN_OP_OVER, pixman_image * src=0x134b05f0, pixman_image * mask=0x00000000, pixman_image * dest=0x136ea490, int src_x=57, int src_y=59, int mask_x=85, int mask_y=419, int dest_x=85, int dest_y=419, int width=250, int height=100)  Line 861 + 0x1f bytes\tC\n \txul.dll!_composite_boxes(_cairo_image_surface * dst=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * pattern=0x0022aa98, _cairo_boxes_t * boxes=0x0022a55c, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_clip * clip=0x00000000, const _cairo_composite_rectangles * extents=0x0022a79c)  Line 3007 + 0x4d bytes\tC\n \txul.dll!_clip_and_composite_boxes(_cairo_image_surface * dst=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * src=0x0022aa98, _cairo_boxes_t * boxes=0x0022a55c, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_composite_rectangles * extents=0x0022a79c, _cairo_clip * clip=0x00000000)  Line 3041 + 0x21 bytes\tC\n \txul.dll!_cairo_image_surface_fill(void * abstract_surface=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * source=0x0022aa98, _cairo_path_fixed * path=0x565788ac, _cairo_fill_rule fill_rule=CAIRO_FILL_RULE_WINDING, double tolerance=0.10000000000000001, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_clip * clip=0x00000000)  Line 3761 + 0x27 bytes\tC\n \txul.dll!_cairo_surface_fill(_cairo_surface * surface=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * source=0x0022aa98, _cairo_path_fixed * path=0x565788ac, _cairo_fill_rule fill_rule=CAIRO_FILL_RULE_WINDING, double tolerance=0.10000000000000001, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_clip * clip=0x00000000)  Line 2341 + 0x2f bytes\tC\n \txul.dll!_cairo_gstate_fill(_cairo_gstate * gstate=0x565785f8, _cairo_path_fixed * path=0x565788ac)  Line 1295 + 0x52 bytes\tC\n \txul.dll!_moz_cairo_fill_preserve(_cairo * cr=0x565785d8)  Line 2459 + 0x16 bytes\tC\n \txul.dll!gfxContext::Fill()  Line 151 + 0xc bytes\tC++\n \txul.dll!nsCanvasRenderingContext2D::DrawPath(nsCanvasRenderingContext2D::Style style=STYLE_FILL, gfxRect * dirtyRect=0x0022ad3c)  Line 1962\tC++\n \txul.dll!nsCanvasRenderingContext2D::DrawRect(const gfxRect & rect={...}, nsCanvasRenderingContext2D::Style style=STYLE_FILL)  Line 2021 + 0x10 bytes\tC++\n \txul.dll!nsCanvasRenderingContext2D::FillRect(float x=3000.0000, float y=20000.000, float w=25000.000, float h=10000.000)  Line 2032\tC++\n \txul.dll!nsIDOMCanvasRenderingContext2D_FillRect(JSContext * cx=0x12ac2e90, unsigned int argc=4, jsval_layout * vp=0x0cac00e8)  Line 2284 + 0x2d bytes\tC++\n \tmozjs.dll!js::CallJSNative(JSContext * cx=0x12ac2e90, int (JSContext *, unsigned int, js::Value *)* native=0x549a8310, unsigned int argc=4, js::Value * vp=0x0cac00e8)  Line 277 + 0xf bytes\tC++\n\n\nThoughts?", "raw_text": "pixman is bailing out of the stack below because a transformed point is underflowing at this check\n\n\tquo = v[j] / (v[2] >> 16);\n\tif (quo > pixman_max_fixed_48_16 || quo < pixman_min_fixed_48_16)\n\t    return FALSE;\n\nv[j] = -48947593920512\nv[2] = 1073741824\nquo  = -2987524043\n\n\txul.dll!_moz_pixman_transform_point(const pixman_transform * transform=0x134b0738, pixman_vector * vector=0x00229cf8)  Line 110\tC\n \txul.dll!compute_sample_extents(pixman_transform * transform=0x134b0738, pixman_box32 * extents=0x00229d74, int x=28, int y=360, int x_off=0, int y_off=0, int width=0, int height=0)  Line 607 + 0xd bytes\tC\n \txul.dll!analyze_extent(pixman_image * image=0x134b05f0, int x=28, int y=360, const pixman_box32 * extents=0x00229dcc, unsigned int * flags=0x00229db8)  Line 770 + 0x25 bytes\tC\n \txul.dll!_moz_pixman_image_composite32(pixman_op_t op=PIXMAN_OP_OVER, pixman_image * src=0x134b05f0, pixman_image * mask=0x00000000, pixman_image * dest=0x136ea490, int src_x=57, int src_y=59, int mask_x=85, int mask_y=419, int dest_x=85, int dest_y=419, int width=250, int height=100)  Line 861 + 0x1f bytes\tC\n \txul.dll!_composite_boxes(_cairo_image_surface * dst=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * pattern=0x0022aa98, _cairo_boxes_t * boxes=0x0022a55c, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_clip * clip=0x00000000, const _cairo_composite_rectangles * extents=0x0022a79c)  Line 3007 + 0x4d bytes\tC\n \txul.dll!_clip_and_composite_boxes(_cairo_image_surface * dst=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * src=0x0022aa98, _cairo_boxes_t * boxes=0x0022a55c, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_composite_rectangles * extents=0x0022a79c, _cairo_clip * clip=0x00000000)  Line 3041 + 0x21 bytes\tC\n \txul.dll!_cairo_image_surface_fill(void * abstract_surface=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * source=0x0022aa98, _cairo_path_fixed * path=0x565788ac, _cairo_fill_rule fill_rule=CAIRO_FILL_RULE_WINDING, double tolerance=0.10000000000000001, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_clip * clip=0x00000000)  Line 3761 + 0x27 bytes\tC\n \txul.dll!_cairo_surface_fill(_cairo_surface * surface=0x179d1810, _cairo_operator op=CAIRO_OPERATOR_OVER, const _cairo_pattern * source=0x0022aa98, _cairo_path_fixed * path=0x565788ac, _cairo_fill_rule fill_rule=CAIRO_FILL_RULE_WINDING, double tolerance=0.10000000000000001, _cairo_antialias antialias=CAIRO_ANTIALIAS_DEFAULT, _cairo_clip * clip=0x00000000)  Line 2341 + 0x2f bytes\tC\n \txul.dll!_cairo_gstate_fill(_cairo_gstate * gstate=0x565785f8, _cairo_path_fixed * path=0x565788ac)  Line 1295 + 0x52 bytes\tC\n \txul.dll!_moz_cairo_fill_preserve(_cairo * cr=0x565785d8)  Line 2459 + 0x16 bytes\tC\n \txul.dll!gfxContext::Fill()  Line 151 + 0xc bytes\tC++\n \txul.dll!nsCanvasRenderingContext2D::DrawPath(nsCanvasRenderingContext2D::Style style=STYLE_FILL, gfxRect * dirtyRect=0x0022ad3c)  Line 1962\tC++\n \txul.dll!nsCanvasRenderingContext2D::DrawRect(const gfxRect & rect={...}, nsCanvasRenderingContext2D::Style style=STYLE_FILL)  Line 2021 + 0x10 bytes\tC++\n \txul.dll!nsCanvasRenderingContext2D::FillRect(float x=3000.0000, float y=20000.000, float w=25000.000, float h=10000.000)  Line 2032\tC++\n \txul.dll!nsIDOMCanvasRenderingContext2D_FillRect(JSContext * cx=0x12ac2e90, unsigned int argc=4, jsval_layout * vp=0x0cac00e8)  Line 2284 + 0x2d bytes\tC++\n \tmozjs.dll!js::CallJSNative(JSContext * cx=0x12ac2e90, int (JSContext *, unsigned int, js::Value *)* native=0x549a8310, unsigned int argc=4, js::Value * vp=0x0cac00e8)  Line 277 + 0xf bytes\tC++\n\n\nThoughts?", "attachment_id": null, "author": "cjones.bugs@gmail.com", "creator": "cjones.bugs@gmail.com", "time": "2011-06-14T17:24:14Z", "creation_time": "2011-06-14T17:24:14Z", "is_private": false, "count": 9, "id": 5531741}, {"raw_text": "I don't know pixman. It's probably hard to avoid this kind of problem given pixman's (and cairo's) fixed-point design. Probably somewhere we can normalize the gradient scale to avoid this.", "attachment_id": null, "tags": [], "text": "I don't know pixman. It's probably hard to avoid this kind of problem given pixman's (and cairo's) fixed-point design. Probably somewhere we can normalize the gradient scale to avoid this.", "bug_id": 664077, "id": 5532841, "count": 10, "is_private": false, "author": "roc@ocallahan.org", "time": "2011-06-14T23:53:21Z", "creation_time": "2011-06-14T23:53:21Z", "creator": "roc@ocallahan.org"}, {"raw_text": "I stepped through some cairo code that seemed to be trying to do that.  \"Real bug\" might be there.", "attachment_id": null, "tags": [], "bug_id": 664077, "text": "I stepped through some cairo code that seemed to be trying to do that.  \"Real bug\" might be there.", "is_private": false, "count": 11, "id": 5532881, "author": "cjones.bugs@gmail.com", "creator": "cjones.bugs@gmail.com", "creation_time": "2011-06-15T00:09:51Z", "time": "2011-06-15T00:09:51Z"}, {"raw_text": "FWIW, I found this comment while searching a cause for this bug : \nhttp://mxr.mozilla.org/mozilla-central/source/gfx/cairo/cairo/src/cairo-pattern.c?mark=1380-1383#1380", "is_private": false, "attachment_id": null, "count": 12, "id": 5622208, "author": "padenot@mozilla.com", "text": "FWIW, I found this comment while searching a cause for this bug : \nhttp://mxr.mozilla.org/mozilla-central/source/gfx/cairo/cairo/src/cairo-pattern.c?mark=1380-1383#1380", "bug_id": 664077, "tags": [], "creator": "padenot@mozilla.com", "time": "2011-07-29T16:56:29Z", "creation_time": "2011-07-29T16:56:29Z"}, {"text": "I debugged a bit and it looks like the overflows does not occur because of createLinearGradient arguments, but instead, because of the transform arguments:\n\n0,010000 0,000000 0,000000 -0,010000 55,000000 719,000000\n\ngives and invert matrix of \n\n100,000002 0,000000 0,000000 -100,000002 -5500,000123 71900,001607\n\nand\n\n71900,001607 is too large for cairo (_cairo_fixed_16_16_from_double(71900,001607)) returns a negative value.\n\nThen, after ctx.transform (and therefore, cairo_transform) call, gstate->ctm_inverse is wrong in cairo.", "bug_id": 664077, "tags": [], "raw_text": "I debugged a bit and it looks like the overflows does not occur because of createLinearGradient arguments, but instead, because of the transform arguments:\n\n0,010000 0,000000 0,000000 -0,010000 55,000000 719,000000\n\ngives and invert matrix of \n\n100,000002 0,000000 0,000000 -100,000002 -5500,000123 71900,001607\n\nand\n\n71900,001607 is too large for cairo (_cairo_fixed_16_16_from_double(71900,001607)) returns a negative value.\n\nThen, after ctx.transform (and therefore, cairo_transform) call, gstate->ctm_inverse is wrong in cairo.", "attachment_id": null, "author": "arno@renevier.net", "creator": "arno@renevier.net", "time": "2011-08-18T15:59:05Z", "creation_time": "2011-08-18T15:59:05Z", "is_private": false, "id": 5662614, "count": 13}, {"count": 14, "id": 8455253, "is_private": false, "creation_time": "2014-02-24T17:14:40Z", "time": "2014-02-24T17:14:40Z", "creator": "ydelendik@mozilla.com", "author": "ydelendik@mozilla.com", "attachment_id": null, "raw_text": "", "bug_id": 664077, "text": "*** Bug 975905 has been marked as a duplicate of this bug. ***", "tags": []}, {"attachment_id": null, "raw_text": "Also duplicates\nhttps://github.com/mozilla/pdf.js/issues/15\nhttps://github.com/mozilla/pdf.js/issues/4499", "bug_id": 664077, "text": "Also duplicates\nhttps://github.com/mozilla/pdf.js/issues/15\nhttps://github.com/mozilla/pdf.js/issues/4499", "tags": [], "is_private": false, "id": 8563074, "count": 15, "creator": "ydelendik@mozilla.com", "creation_time": "2014-03-21T14:46:47Z", "time": "2014-03-21T14:46:47Z", "author": "ydelendik@mozilla.com"}, {"is_private": false, "id": 8563182, "count": 16, "author": "ydelendik@mozilla.com", "creator": "ydelendik@mozilla.com", "time": "2014-03-21T15:10:36Z", "creation_time": "2014-03-21T15:10:36Z", "raw_text": "", "attachment_id": null, "text": "*** Bug 986514 has been marked as a duplicate of this bug. ***", "bug_id": 664077, "tags": []}, {"creation_time": "2014-08-18T20:15:32Z", "time": "2014-08-18T20:15:32Z", "creator": "ydelendik@mozilla.com", "bug_id": 664077, "text": "*** Bug 1054698 has been marked as a duplicate of this bug. ***", "tags": [], "author": "ydelendik@mozilla.com", "count": 17, "id": 9197170, "attachment_id": null, "is_private": false, "raw_text": ""}, {"id": 9752470, "count": 18, "is_private": false, "creation_time": "2015-01-05T16:13:45Z", "time": "2015-01-05T16:13:45Z", "creator": "ydelendik@mozilla.com", "author": "ydelendik@mozilla.com", "attachment_id": null, "raw_text": "", "bug_id": 664077, "text": "*** Bug 1117794 has been marked as a duplicate of this bug. ***", "tags": []}]}}}