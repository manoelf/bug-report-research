{"bugs": {"669698": {"comments": [{"id": 5576910, "raw_text": "The devtools plan is that although webconsole and debugging will occur remotely, the inspector panel (tree view) needs to be implemented in the same process as the content it inspects.\n\nMy current thought is something like:\n\n<xul:browser type=\"content-primary\" remote=\"true\" id=\"idofremotebrowser\"/>\n...\n<xul:iframe type=\"chrome\" remote=\"true\" related=\"idofremotebrowser\" src=\"chrome://inspector/content/inspectorpanel.xul\" />\n\nAnd the content scripts for the iframe would have the following extra properties: * relatedContent (the window of the content specified by \"linked\")\n* relatedDocshell (the docshell of the content specified by \"linked\")", "attachment_id": null, "text": "The devtools plan is that although webconsole and debugging will occur remotely, the inspector panel (tree view) needs to be implemented in the same process as the content it inspects.\n\nMy current thought is something like:\n\n<xul:browser type=\"content-primary\" remote=\"true\" id=\"idofremotebrowser\"/>\n...\n<xul:iframe type=\"chrome\" remote=\"true\" related=\"idofremotebrowser\" src=\"chrome://inspector/content/inspectorpanel.xul\" />\n\nAnd the content scripts for the iframe would have the following extra properties: * relatedContent (the window of the content specified by \"linked\")\n* relatedDocshell (the docshell of the content specified by \"linked\")", "tags": [], "bug_id": 669698, "time": "2011-07-06T18:26:36Z", "creation_time": "2011-07-06T18:26:36Z", "author": "benjamin@smedbergs.us", "count": 0, "is_private": false, "creator": "benjamin@smedbergs.us"}, {"id": 5576966, "raw_text": "This is a good start.\n\nCurrently that iframe lives in a xul:panel. Probably not an issue.\n\nWhat *may* be an issue is that the code that populates this iframe doesn't live in the iframe itself. It's a jsm imported into chrome.\n\nWe may need a way to host these jsms in the content process as well and give them access to both the content process' browser document and the iframe's document.", "attachment_id": null, "time": "2011-07-06T18:45:00Z", "tags": [], "text": "This is a good start.\n\nCurrently that iframe lives in a xul:panel. Probably not an issue.\n\nWhat *may* be an issue is that the code that populates this iframe doesn't live in the iframe itself. It's a jsm imported into chrome.\n\nWe may need a way to host these jsms in the content process as well and give them access to both the content process' browser document and the iframe's document.", "author": "rcampbell@mozilla.com", "creation_time": "2011-07-06T18:45:00Z", "creator": "rcampbell@mozilla.com", "is_private": false, "bug_id": 669698, "count": 1}, {"id": 5576984, "attachment_id": null, "raw_text": "That's not a problem, you can use JSMs from the content script to hook it all up.", "creation_time": "2011-07-06T18:50:47Z", "author": "benjamin@smedbergs.us", "text": "That's not a problem, you can use JSMs from the content script to hook it all up.", "tags": [], "time": "2011-07-06T18:50:47Z", "bug_id": 669698, "is_private": false, "creator": "benjamin@smedbergs.us", "count": 2}, {"id": 5694395, "raw_text": "Olli, can you take this? This blocks the inspector/highlighter work that the devtools team needs to do in early Q4. Let me know if you can attach a date when you think it might be done, and I'll add it to the short-term goal list.", "attachment_id": null, "text": "Olli, can you take this? This blocks the inspector/highlighter work that the devtools team needs to do in early Q4. Let me know if you can attach a date when you think it might be done, and I'll add it to the short-term goal list.", "tags": [], "time": "2011-09-01T19:11:30Z", "bug_id": 669698, "creation_time": "2011-09-01T19:11:30Z", "author": "benjamin@smedbergs.us", "count": 3, "is_private": false, "creator": "benjamin@smedbergs.us"}, {"id": 5698318, "raw_text": "I should be able to do this next week, if not this weekend.", "attachment_id": null, "text": "I should be able to do this next week, if not this weekend.", "bug_id": 669698, "tags": [], "time": "2011-09-03T13:25:51Z", "creation_time": "2011-09-03T13:25:51Z", "author": "bugs@pettay.fi", "count": 4, "is_private": false, "creator": "bugs@pettay.fi"}, {"creation_time": "2011-09-03T16:25:14Z", "author": "bugs@pettay.fi", "text": "Oh, hmm, we don't support message managers for non-remote chrome browsers.\nBut I guess I could change that, so that in case of\n\"inspection\" browsers, there could be mm.\n\nAlso, so far we haven't supported chrome remote browsers.\n\n\nI guess the syntax/API needs to look like:\n\n<browser type=\"content-primary\"/>\n<browser type=\"chrome\" forcemessagemanager=\"true\" needsrelated=\"true\">\n\n(The fact that browsers are remote or not doesn't change anything.\n It is just that they both need to be remote=\"true\" or both need to be remote=\"false\".\n Also, it doesn't matter whether one uses <browser> or <iframe>.)\n\nneedsrelated attribute is need to prevent automatic process and docshell creation.\n\nThen, when needed one does in the code something like\nvar browsers = document.getElementsByTagName(\"browser\");\nbrowsers[1].relatedBrowser = browsers[0];\n\nSetting .relatedBrowser ensures that both browsers use the same process.", "tags": [], "bug_id": 669698, "time": "2011-09-03T16:25:14Z", "is_private": false, "creator": "bugs@pettay.fi", "count": 5, "id": 5698433, "attachment_id": null, "raw_text": "Oh, hmm, we don't support message managers for non-remote chrome browsers.\nBut I guess I could change that, so that in case of\n\"inspection\" browsers, there could be mm.\n\nAlso, so far we haven't supported chrome remote browsers.\n\n\nI guess the syntax/API needs to look like:\n\n<browser type=\"content-primary\"/>\n<browser type=\"chrome\" forcemessagemanager=\"true\" needsrelated=\"true\">\n\n(The fact that browsers are remote or not doesn't change anything.\n It is just that they both need to be remote=\"true\" or both need to be remote=\"false\".\n Also, it doesn't matter whether one uses <browser> or <iframe>.)\n\nneedsrelated attribute is need to prevent automatic process and docshell creation.\n\nThen, when needed one does in the code something like\nvar browsers = document.getElementsByTagName(\"browser\");\nbrowsers[1].relatedBrowser = browsers[0];\n\nSetting .relatedBrowser ensures that both browsers use the same process."}, {"text": "(In reply to Olli Pettay [:smaug] from comment #5) \n> Then, when needed one does in the code something like\n> var browsers = document.getElementsByTagName(\"browser\");\n> browsers[1].relatedBrowser = browsers[0];\n\nHrm, this may need to be\nbrowsers[1].frameLoader.relatedBrowser = browsers[0].frameLoader;", "tags": [], "time": "2011-09-03T16:34:14Z", "bug_id": 669698, "creation_time": "2011-09-03T16:34:14Z", "author": "bugs@pettay.fi", "count": 6, "is_private": false, "creator": "bugs@pettay.fi", "id": 5698436, "raw_text": "(In reply to Olli Pettay [:smaug] from comment #5) \n> Then, when needed one does in the code something like\n> var browsers = document.getElementsByTagName(\"browser\");\n> browsers[1].relatedBrowser = browsers[0];\n\nHrm, this may need to be\nbrowsers[1].frameLoader.relatedBrowser = browsers[0].frameLoader;", "attachment_id": null}, {"count": 7, "creator": "benjamin@smedbergs.us", "is_private": false, "bug_id": 669698, "time": "2011-09-04T14:20:55Z", "tags": [], "text": "There's no particular reason why these browsers need to be type=\"chrome\", is there? Wouldn't a type=\"content\" browser work just fine, as long as it isn't content-primary?", "author": "benjamin@smedbergs.us", "creation_time": "2011-09-04T14:20:55Z", "raw_text": "There's no particular reason why these browsers need to be type=\"chrome\", is there? Wouldn't a type=\"content\" browser work just fine, as long as it isn't content-primary?", "attachment_id": null, "id": 5699375}, {"id": 5699486, "attachment_id": null, "raw_text": "I thought there would be some js running in the inspector frame, and it should be able to access\nthe related frame. If the inspector doesn't run using chrome privileges, that access would be\nblocked.\n\n(And btw, type=\"chrome\" should be easy to implement.)", "author": "bugs@pettay.fi", "creation_time": "2011-09-04T14:27:41Z", "bug_id": 669698, "time": "2011-09-04T14:27:41Z", "tags": [], "text": "I thought there would be some js running in the inspector frame, and it should be able to access\nthe related frame. If the inspector doesn't run using chrome privileges, that access would be\nblocked.\n\n(And btw, type=\"chrome\" should be easy to implement.)", "creator": "bugs@pettay.fi", "is_private": false, "count": 8}, {"id": 5699596, "raw_text": "The inspector is running with chrome privileges, but as far as I know that's no reason why we couldn't load it into a content-type docshell.", "attachment_id": null, "text": "The inspector is running with chrome privileges, but as far as I know that's no reason why we couldn't load it into a content-type docshell.", "time": "2011-09-04T14:37:44Z", "bug_id": 669698, "tags": [], "creation_time": "2011-09-04T14:37:44Z", "author": "benjamin@smedbergs.us", "count": 9, "is_private": false, "creator": "benjamin@smedbergs.us"}, {"bug_id": 669698, "tags": [], "time": "2011-09-04T21:02:57Z", "text": "Actually, inspector should use xul:iframe since xul:browser has already some\nassumptions when and how message manager works.\n\nI have WIP patch for this. Need to write some more tests and clean up the code a bit.", "author": "bugs@pettay.fi", "creation_time": "2011-09-04T21:02:57Z", "count": 10, "creator": "bugs@pettay.fi", "is_private": false, "id": 5699827, "raw_text": "Actually, inspector should use xul:iframe since xul:browser has already some\nassumptions when and how message manager works.\n\nI have WIP patch for this. Need to write some more tests and clean up the code a bit.", "attachment_id": null}, {"attachment_id": 558269, "raw_text": "Uploaded to tryserver.", "id": 5700458, "is_private": false, "creator": "bugs@pettay.fi", "count": 11, "creation_time": "2011-09-05T12:51:40Z", "author": "bugs@pettay.fi", "text": "Created attachment 558269\npatch\n\nUploaded to tryserver.", "time": "2011-09-05T12:51:40Z", "bug_id": 669698, "tags": []}, {"tags": [], "time": "2011-09-05T13:03:22Z", "bug_id": 669698, "text": "Rob, would be great if you could try the patch a bit.\nBasically, create <xul:iframe needsrelated=\"true\">, add it to document and\nset its relatedFrame to point some frameloader\niframe.QueryInterface(Components.interfaces.nsIFrameLoaderOwner).frameLoader.relatedFrame = _frame_loader_of_some_browser;\nAt that point the messagemanager of iframe is created and you can send scripts and add message listeners and send\nmessages. In the tabchildglobal of iframe relatedDocShell and relatedContent should now point to the other tab.\n\niframe is out-of-process if related browser is out-of-process, otherwise same-process.\n\nAlso, it should be possible to re-set .relatedFrame. That re-creates message manager.", "author": "bugs@pettay.fi", "creation_time": "2011-09-05T13:03:22Z", "count": 12, "creator": "bugs@pettay.fi", "is_private": false, "id": 5700467, "raw_text": "Rob, would be great if you could try the patch a bit.\nBasically, create <xul:iframe needsrelated=\"true\">, add it to document and\nset its relatedFrame to point some frameloader\niframe.QueryInterface(Components.interfaces.nsIFrameLoaderOwner).frameLoader.relatedFrame = _frame_loader_of_some_browser;\nAt that point the messagemanager of iframe is created and you can send scripts and add message listeners and send\nmessages. In the tabchildglobal of iframe relatedDocShell and relatedContent should now point to the other tab.\n\niframe is out-of-process if related browser is out-of-process, otherwise same-process.\n\nAlso, it should be possible to re-set .relatedFrame. That re-creates message manager.", "attachment_id": null}, {"count": 13, "is_private": false, "creator": "bugs@pettay.fi", "text": "Tryserver shows still some problem.", "bug_id": 669698, "tags": [], "time": "2011-09-05T14:50:33Z", "creation_time": "2011-09-05T14:50:33Z", "author": "bugs@pettay.fi", "raw_text": "Tryserver shows still some problem.", "attachment_id": null, "id": 5700595}, {"bug_id": 669698, "count": 14, "id": 5700785, "attachment_id": null, "raw_text": "Linux64 only problems o_O", "creation_time": "2011-09-05T18:20:59Z", "author": "bugs@pettay.fi", "text": "Linux64 only problems o_O", "tags": [], "time": "2011-09-05T18:20:59Z", "is_private": false, "creator": "bugs@pettay.fi"}, {"bug_id": 669698, "count": 15, "id": 5700892, "attachment_id": 558269, "raw_text": "New patch coming (without support for chrome docshells in content process).", "creation_time": "2011-09-05T19:41:23Z", "author": "bugs@pettay.fi", "text": "Comment on attachment 558269\npatch\n\nNew patch coming (without support for chrome docshells in content process).", "tags": [], "time": "2011-09-05T19:41:23Z", "is_private": false, "creator": "bugs@pettay.fi"}, {"bug_id": 669698, "count": 16, "author": "bugs@pettay.fi", "creation_time": "2011-09-05T20:16:35Z", "tags": [], "time": "2011-09-05T20:16:35Z", "text": "Created attachment 558330\npatch", "creator": "bugs@pettay.fi", "is_private": false, "id": 5700920, "attachment_id": 558330, "raw_text": ""}, {"id": 5701039, "raw_text": "The patch is still causing apparently content process crash in tryserver/linux64.\nCan't reproduce locally.", "attachment_id": null, "text": "The patch is still causing apparently content process crash in tryserver/linux64.\nCan't reproduce locally.", "tags": [], "time": "2011-09-05T21:46:22Z", "creation_time": "2011-09-05T21:46:22Z", "author": "bugs@pettay.fi", "is_private": false, "creator": "bugs@pettay.fi", "bug_id": 669698, "count": 17}, {"count": 18, "is_private": false, "creator": "bugs@pettay.fi", "text": "Created attachment 558443\npatch", "tags": [], "time": "2011-09-06T11:36:11Z", "bug_id": 669698, "creation_time": "2011-09-06T11:36:11Z", "author": "bugs@pettay.fi", "raw_text": "", "attachment_id": 558443, "id": 5701710}, {"author": "bugs@pettay.fi", "creation_time": "2011-09-06T19:46:37Z", "tags": [], "time": "2011-09-06T19:46:37Z", "bug_id": 669698, "text": "Comment on attachment 558443\npatch\n\nBenjamin, what do you think about this approach?", "creator": "bugs@pettay.fi", "is_private": false, "count": 19, "id": 5702859, "attachment_id": 558443, "raw_text": "Benjamin, what do you think about this approach?"}, {"count": 20, "bug_id": 669698, "is_private": false, "creator": "benjamin@smedbergs.us", "creation_time": "2011-09-14T19:04:01Z", "author": "benjamin@smedbergs.us", "text": "Comment on attachment 558443\npatch\n\nI'd like bz or somebody to review this. I think the API is ok, but perhaps the devtools team should provide feedback on that.", "tags": [], "time": "2011-09-14T19:04:01Z", "attachment_id": 558443, "raw_text": "I'd like bz or somebody to review this. I think the API is ok, but perhaps the devtools team should provide feedback on that.", "id": 5717382}, {"is_private": false, "creator": "bugs@pettay.fi", "count": 21, "creation_time": "2011-09-14T19:58:40Z", "author": "bugs@pettay.fi", "text": "Yes, anyone from devtools team, please give feedback.\nThis is the first step, we can sure add more to the API later.", "tags": [], "time": "2011-09-14T19:58:40Z", "bug_id": 669698, "attachment_id": null, "raw_text": "Yes, anyone from devtools team, please give feedback.\nThis is the first step, we can sure add more to the API later.", "id": 5717492}, {"count": 22, "bug_id": 669698, "is_private": false, "creator": "rcampbell@mozilla.com", "creation_time": "2011-09-19T18:51:24Z", "author": "rcampbell@mozilla.com", "text": "Comment on attachment 558443\npatch\n\nI *think* this API looks fine. I have a couple of comment nits for you, but otherwise, f+.\n\nsince you're in nsIFrameLoader.idl anyway:\n\n   /**\n    * With this event mode, it's the application's responsability to \n    * convert and forward events to the content process\n\nchange responsability->responsibility.\n\nin nsFrameLoader.cpp:\n\n+  // We don't fire any errors or throw exceptions if we're\n+  // still waiting that .relatedFrame will be set.\n+  if (NeedsRelated() && !mRelatedFrame) {\n\nITYM, \"...if we're still waiting for .relatedFrame to be set\".\n\nthanks! :)", "tags": [], "time": "2011-09-19T18:51:24Z", "attachment_id": 558443, "raw_text": "I *think* this API looks fine. I have a couple of comment nits for you, but otherwise, f+.\n\nsince you're in nsIFrameLoader.idl anyway:\n\n   /**\n    * With this event mode, it's the application's responsability to \n    * convert and forward events to the content process\n\nchange responsability->responsibility.\n\nin nsFrameLoader.cpp:\n\n+  // We don't fire any errors or throw exceptions if we're\n+  // still waiting that .relatedFrame will be set.\n+  if (NeedsRelated() && !mRelatedFrame) {\n\nITYM, \"...if we're still waiting for .relatedFrame to be set\".\n\nthanks! :)", "id": 5723586}, {"count": 23, "bug_id": 669698, "attachment_id": 558443, "raw_text": ">+++ b/content/base/public/nsIFrameLoader.idl\n>+  attribute nsIFrameLoader relatedFrame;\n\nThis needs documentation.  The interaction between LoadURI and the setter here is ... non-obvious at best.\n\nThank you for adding that builtinclass annotation!\n\n>+++ b/content/base/public/nsIFrameMessageManager.idl\n>+   * The current top level window in the related frame or null.\n\n\"current\" makes it sounds like it's an inner window.  I assume it's actually an outer window, right?  Certainly the getter returns an outer window.\n\nIn that case, what makes it \"current\"?\n\nWorth documenting whether \"null\" means no related frame or no window in it or either one.\n\n>+   * The related docshell or null.\n\nAgain, document when null can happen.\n\n>+++ b/content/base/src/nsFrameLoader.cpp\n>+  // still waiting that .relatedFrame will be set.\n\n still waiting to be told what our related frame is.\n\n>+  mShown = PR_TRUE;\n\nPlease document the mShown member.  And maybe call it mIsShowing?\n\n>+nsFrameLoader::SetRelatedFrame(nsIFrameLoader* aRelated)\n\nWhy do we enforce that aRelated != this but not lack of other sorts of loops in the related-frame chain?\n\n>+++ b/content/base/src/nsFrameLoader.h\n>+  nsresult DestroyInternal(PRBool aReuse);\n\nDocument, please.  Especially the invariants aReuse values assume.\n\n>+  bool NeedsRelated();\n\nDocument.\n\n>+++ b/dom/ipc/PBrowser.ipdl\n>+    RelatedFrame(PBrowser related);\n\nDocument.\n\n>+++ b/dom/ipc/TabChild.h\n>+    nsWeakPtr mRelatedFrame;\n\nIt would be good to document what you can ask for from that nsWeakPtr.  You seem to put a docshell in but ask for a webnavigation back out, then getInterface a docshell from that... which is confusing.  I suspect you want to change some part of that code too.\n\nr=me with the above issues fixed.", "id": 5723732, "creator": "bzbarsky@mit.edu", "is_private": false, "author": "bzbarsky@mit.edu", "creation_time": "2011-09-19T19:40:57Z", "tags": [], "time": "2011-09-19T19:40:57Z", "text": "Comment on attachment 558443\npatch\n\n>+++ b/content/base/public/nsIFrameLoader.idl\n>+  attribute nsIFrameLoader relatedFrame;\n\nThis needs documentation.  The interaction between LoadURI and the setter here is ... non-obvious at best.\n\nThank you for adding that builtinclass annotation!\n\n>+++ b/content/base/public/nsIFrameMessageManager.idl\n>+   * The current top level window in the related frame or null.\n\n\"current\" makes it sounds like it's an inner window.  I assume it's actually an outer window, right?  Certainly the getter returns an outer window.\n\nIn that case, what makes it \"current\"?\n\nWorth documenting whether \"null\" means no related frame or no window in it or either one.\n\n>+   * The related docshell or null.\n\nAgain, document when null can happen.\n\n>+++ b/content/base/src/nsFrameLoader.cpp\n>+  // still waiting that .relatedFrame will be set.\n\n still waiting to be told what our related frame is.\n\n>+  mShown = PR_TRUE;\n\nPlease document the mShown member.  And maybe call it mIsShowing?\n\n>+nsFrameLoader::SetRelatedFrame(nsIFrameLoader* aRelated)\n\nWhy do we enforce that aRelated != this but not lack of other sorts of loops in the related-frame chain?\n\n>+++ b/content/base/src/nsFrameLoader.h\n>+  nsresult DestroyInternal(PRBool aReuse);\n\nDocument, please.  Especially the invariants aReuse values assume.\n\n>+  bool NeedsRelated();\n\nDocument.\n\n>+++ b/dom/ipc/PBrowser.ipdl\n>+    RelatedFrame(PBrowser related);\n\nDocument.\n\n>+++ b/dom/ipc/TabChild.h\n>+    nsWeakPtr mRelatedFrame;\n\nIt would be good to document what you can ask for from that nsWeakPtr.  You seem to put a docshell in but ask for a webnavigation back out, then getInterface a docshell from that... which is confusing.  I suspect you want to change some part of that code too.\n\nr=me with the above issues fixed."}, {"count": 24, "is_private": false, "creator": "bugs@pettay.fi", "text": "Created attachment 566291\npatch", "tags": [], "bug_id": 669698, "time": "2011-10-11T19:06:23Z", "creation_time": "2011-10-11T19:06:23Z", "author": "bugs@pettay.fi", "raw_text": "", "attachment_id": 566291, "id": 5775318}, {"creator": "bugs@pettay.fi", "is_private": false, "count": 25, "author": "bugs@pettay.fi", "creation_time": "2011-10-11T21:21:04Z", "bug_id": 669698, "time": "2011-10-11T21:21:04Z", "tags": [], "text": "Um, nice, the test case crashes now on Windows try.\n\n\nCrash reason:  EXCEPTION_BREAKPOINT\nCrash address: 0x6a0c111b\n\nThread 0 (crashed)\n 0  mozalloc.dll!mozalloc_abort(char const * const) [mozalloc_abort.cpp:1131ea691369 : 77 + 0x0]\n    eip = 0x6a0c111b   esp = 0x0030c804   ebp = 0x0030c8a4   ebx = 0x00000040\n    esi = 0x6bb7e457   edi = 0x6bbba392   eax = 0x00000000   ecx = 0x6bbba4c8\n    edx = 0x00000003   efl = 0x00000202\n    Found by: given as instruction pointer in context\n 1  xul.dll!NS_DebugBreak_P [nsDebugImpl.cpp:1131ea691369 : 345 + 0x9]\n    eip = 0x6abf00eb   esp = 0x0030c810   ebp = 0x0030c8a4\n    Found by: call frame info\n 2  xul.dll!mozilla::layers::SurfaceDescriptor::MaybeDestroy(mozilla::layers::SurfaceDescriptor::Type) [PLayers.cpp:1131ea691369 : 326 + 0x17]\n    eip = 0x6abb8899   esp = 0x0030cc34   ebp = 0x0030d0ec   ebx = 0x00000002\n    Found by: call frame info\n 3  xul.dll!mozilla::layers::SurfaceDescriptor::operator=(mozilla::layers::SurfaceDescriptor const &) [PLayers.cpp:1131ea691369 : 437 + 0x6]\n    eip = 0x6abb895c   esp = 0x0030cc4c   ebp = 0x0030d0ec\n    Found by: call frame info\n 4  xul.dll!mozilla::layers::ShadowThebesLayerD3D10::Swap(mozilla::layers::ThebesBuffer const &,nsIntRegion const &,mozilla::layers::OptionalThebesBuffer *,nsIntRegion *,mozilla::layers::OptionalThebesBuffer *,nsIntRegion *) [ThebesLayerD3D10.cpp:1131ea691369 : 485 + 0xa]\n    eip = 0x6ac4ec7f   esp = 0x0030cc64   ebp = 0x0030cc78   ebx = 0x0de86820\n    Found by: call frame info\n 5  xul.dll!mozilla::layers::ShadowLayersParent::RecvUpdate(InfallibleTArray<mozilla::layers::Edit> const &,InfallibleTArray<mozilla::layers::EditReply> *) [ShadowLayersParent.cpp:1131ea691369 : 326 + 0x21]\n    eip = 0x6ac51e5b   esp = 0x0030cc80   ebp = 0x0030d0e0\n    Found by: call frame info\n 6  xul.dll!mozilla::layers::PLayersParent::OnMessageReceived(IPC::Message const &,IPC::Message * &) [PLayersParent.cpp:1131ea691369 : 220 + 0x17]\n    eip = 0x6ab98274   esp = 0x0030d158   ebp = 0x0030d174   ebx = 0xfffffffc\n    Found by: call frame info", "attachment_id": null, "raw_text": "Um, nice, the test case crashes now on Windows try.\n\n\nCrash reason:  EXCEPTION_BREAKPOINT\nCrash address: 0x6a0c111b\n\nThread 0 (crashed)\n 0  mozalloc.dll!mozalloc_abort(char const * const) [mozalloc_abort.cpp:1131ea691369 : 77 + 0x0]\n    eip = 0x6a0c111b   esp = 0x0030c804   ebp = 0x0030c8a4   ebx = 0x00000040\n    esi = 0x6bb7e457   edi = 0x6bbba392   eax = 0x00000000   ecx = 0x6bbba4c8\n    edx = 0x00000003   efl = 0x00000202\n    Found by: given as instruction pointer in context\n 1  xul.dll!NS_DebugBreak_P [nsDebugImpl.cpp:1131ea691369 : 345 + 0x9]\n    eip = 0x6abf00eb   esp = 0x0030c810   ebp = 0x0030c8a4\n    Found by: call frame info\n 2  xul.dll!mozilla::layers::SurfaceDescriptor::MaybeDestroy(mozilla::layers::SurfaceDescriptor::Type) [PLayers.cpp:1131ea691369 : 326 + 0x17]\n    eip = 0x6abb8899   esp = 0x0030cc34   ebp = 0x0030d0ec   ebx = 0x00000002\n    Found by: call frame info\n 3  xul.dll!mozilla::layers::SurfaceDescriptor::operator=(mozilla::layers::SurfaceDescriptor const &) [PLayers.cpp:1131ea691369 : 437 + 0x6]\n    eip = 0x6abb895c   esp = 0x0030cc4c   ebp = 0x0030d0ec\n    Found by: call frame info\n 4  xul.dll!mozilla::layers::ShadowThebesLayerD3D10::Swap(mozilla::layers::ThebesBuffer const &,nsIntRegion const &,mozilla::layers::OptionalThebesBuffer *,nsIntRegion *,mozilla::layers::OptionalThebesBuffer *,nsIntRegion *) [ThebesLayerD3D10.cpp:1131ea691369 : 485 + 0xa]\n    eip = 0x6ac4ec7f   esp = 0x0030cc64   ebp = 0x0030cc78   ebx = 0x0de86820\n    Found by: call frame info\n 5  xul.dll!mozilla::layers::ShadowLayersParent::RecvUpdate(InfallibleTArray<mozilla::layers::Edit> const &,InfallibleTArray<mozilla::layers::EditReply> *) [ShadowLayersParent.cpp:1131ea691369 : 326 + 0x21]\n    eip = 0x6ac51e5b   esp = 0x0030cc80   ebp = 0x0030d0e0\n    Found by: call frame info\n 6  xul.dll!mozilla::layers::PLayersParent::OnMessageReceived(IPC::Message const &,IPC::Message * &) [PLayersParent.cpp:1131ea691369 : 220 + 0x17]\n    eip = 0x6ab98274   esp = 0x0030d158   ebp = 0x0030d174   ebx = 0xfffffffc\n    Found by: call frame info", "id": 5775814}, {"count": 26, "bug_id": 669698, "raw_text": "One way how to simplify Firebug's e10s adoption is utilizing the linked remote browser (just like the built-in inspector panel)\n\nIn fact the entire Firebug UI (except of the Firebug start button now available on Firefox toolbar and Firefox Web Developer menu overly) is embedded inside a <xul:browser> element, see the following overlay:\n\n<!-- Firebug panel -->\n<vbox id=\"appcontent\">\n    <splitter id=\"fbContentSplitter\" collapsed=\"true\"/>\n    <vbox persist=\"height\" id=\"fbMainFrame\" collapsed=\"true\">\n        <browser id=\"fbMainContainer\" flex=\"2\" src=\"chrome://firebug/content/firefox/firebugFrame.xul\" disablehistory=\"true\"/>\n    </vbox>\n</vbox>\n\nThat's how Firebug puts itself into the browser window (and btw. using type=\"chrome\").\n\nFirebug has been forced to use <browser> since there were some font-zoom issues when using <iframe> Are there still any expected problems with using <browser> ?\n\nAlso, Firebug is importing several JSMs, mostly simple stuff but there is firebug-service.js module implementing Firebug's debugger API based on JSD. Is it possible to load such JSM into the content process as well?\n\nAlso, if I understand correctly, all overlays applied on the linked <browser> element will also run in the same process, correct? (I am thinking about Firebug extensions here)\n\nHonza", "attachment_id": null, "id": 5776895, "is_private": false, "creator": "odvarko@gmail.com", "text": "One way how to simplify Firebug's e10s adoption is utilizing the linked remote browser (just like the built-in inspector panel)\n\nIn fact the entire Firebug UI (except of the Firebug start button now available on Firefox toolbar and Firefox Web Developer menu overly) is embedded inside a <xul:browser> element, see the following overlay:\n\n<!-- Firebug panel -->\n<vbox id=\"appcontent\">\n    <splitter id=\"fbContentSplitter\" collapsed=\"true\"/>\n    <vbox persist=\"height\" id=\"fbMainFrame\" collapsed=\"true\">\n        <browser id=\"fbMainContainer\" flex=\"2\" src=\"chrome://firebug/content/firefox/firebugFrame.xul\" disablehistory=\"true\"/>\n    </vbox>\n</vbox>\n\nThat's how Firebug puts itself into the browser window (and btw. using type=\"chrome\").\n\nFirebug has been forced to use <browser> since there were some font-zoom issues when using <iframe> Are there still any expected problems with using <browser> ?\n\nAlso, Firebug is importing several JSMs, mostly simple stuff but there is firebug-service.js module implementing Firebug's debugger API based on JSD. Is it possible to load such JSM into the content process as well?\n\nAlso, if I understand correctly, all overlays applied on the linked <browser> element will also run in the same process, correct? (I am thinking about Firebug extensions here)\n\nHonza", "time": "2011-10-12T08:15:49Z", "tags": [], "creation_time": "2011-10-12T08:15:49Z", "author": "odvarko@gmail.com"}, {"count": 27, "is_private": false, "creator": "rcampbell@mozilla.com", "text": "marking this as assigned since Olli's deep into it.\n\nHonza, not sure I understand your question. You have overlays *inside* your browser element or containing the <browser>? If containing, then no, I don't think they'll be in the same process.\n\nis there a good reason you can't move from <browser> to <iframe>? I was under the impression browsers were used when Firebug was created because iframes weren't really a viable option inside xul.", "time": "2011-10-19T13:34:29Z", "tags": [], "bug_id": 669698, "creation_time": "2011-10-19T13:34:29Z", "author": "rcampbell@mozilla.com", "raw_text": "marking this as assigned since Olli's deep into it.\n\nHonza, not sure I understand your question. You have overlays *inside* your browser element or containing the <browser>? If containing, then no, I don't think they'll be in the same process.\n\nis there a good reason you can't move from <browser> to <iframe>? I was under the impression browsers were used when Firebug was created because iframes weren't really a viable option inside xul.", "attachment_id": null, "id": 5791669}, {"count": 28, "is_private": false, "creator": "odvarko@gmail.com", "text": "(In reply to Rob Campbell [:rc] (robcee) from comment #27)\n> marking this as assigned since Olli's deep into it.\n> \n> Honza, not sure I understand your question. You have overlays *inside* your\n> browser element or containing the <browser>? If containing, then no, I don't\n> think they'll be in the same process.\nThe overlays are inside the browser element.\n\n> is there a good reason you can't move from <browser> to <iframe>? I was\n> under the impression browsers were used when Firebug was created because\n> iframes weren't really a viable option inside xul.\n\nWe had couple of problems with iframe in the past. One related to a security issue (bug 665369) and the type attribute of the iframe. The second was related to the text-zoom, since content of the iframe is XUL and it behaves differently from using <browser> element\n\nThese issues could be perhaps fixed, but it would be easier for Firebug to continue running in <browser>.\n\nHonza", "bug_id": 669698, "tags": [], "time": "2011-10-19T15:48:32Z", "creation_time": "2011-10-19T15:48:32Z", "author": "odvarko@gmail.com", "raw_text": "(In reply to Rob Campbell [:rc] (robcee) from comment #27)\n> marking this as assigned since Olli's deep into it.\n> \n> Honza, not sure I understand your question. You have overlays *inside* your\n> browser element or containing the <browser>? If containing, then no, I don't\n> think they'll be in the same process.\nThe overlays are inside the browser element.\n\n> is there a good reason you can't move from <browser> to <iframe>? I was\n> under the impression browsers were used when Firebug was created because\n> iframes weren't really a viable option inside xul.\n\nWe had couple of problems with iframe in the past. One related to a security issue (bug 665369) and the type attribute of the iframe. The second was related to the text-zoom, since content of the iframe is XUL and it behaves differently from using <browser> element\n\nThese issues could be perhaps fixed, but it would be easier for Firebug to continue running in <browser>.\n\nHonza", "attachment_id": null, "id": 5791996}, {"creator": "odvarko@gmail.com", "is_private": false, "count": 29, "author": "odvarko@gmail.com", "creation_time": "2011-10-20T08:09:10Z", "bug_id": 669698, "tags": [], "time": "2011-10-20T08:09:10Z", "text": "I tried to apply the patch on fx-team repo (cloned now), but there are same failures. Should I use different repository?\n\nHonza\n\n$ patch -p1 --dry-run < linked_browsers_4.diff\npatching file content/base/public/nsIFrameLoader.idl\npatching file content/base/public/nsIFrameMessageManager.idl\npatching file content/base/src/nsFrameLoader.cpp\nHunk #2 FAILED at 324.\nHunk #3 FAILED at 415.\nHunk #4 succeeded at 456 (offset -3 lines).\nHunk #5 FAILED at 768.\nHunk #7 FAILED at 943.\nHunk #8 FAILED at 1260.\nHunk #9 succeeded at 1340 (offset -6 lines).\nHunk #11 succeeded at 1816 (offset -6 lines).\nHunk #13 succeeded at 2073 (offset -6 lines).\nHunk #14 succeeded at 2195 with fuzz 1.\n5 out of 14 hunks FAILED -- saving rejects to file content/base/src/nsFrameLoade\nr.cpp.rej\npatching file content/base/src/nsFrameLoader.h\nHunk #2 succeeded at 163 with fuzz 1.\nHunk #4 FAILED at 250.\n1 out of 6 hunks FAILED -- saving rejects to file content/base/src/nsFrameLoader\n.h.rej\npatching file content/base/src/nsFrameMessageManager.cpp\npatching file content/base/src/nsGkAtomList.h\nHunk #1 succeeded at 595 (offset 3 lines).\npatching file content/base/src/nsInProcessTabChildGlobal.cpp\nHunk #2 FAILED at 391.\n1 out of 2 hunks FAILED -- saving rejects to file content/base/src/nsInProcessTa\nbChildGlobal.cpp.rej\npatching file content/base/src/nsInProcessTabChildGlobal.h\npatching file content/base/test/chrome/Makefile.in\npatching file content/base/test/chrome/file_bug669698.xul\npatching file content/base/test/chrome/test_bug669698.xul\npatching file dom/ipc/PBrowser.ipdl\npatching file dom/ipc/TabChild.cpp\nHunk #1 FAILED at 823.\n1 out of 2 hunks FAILED -- saving rejects to file dom/ipc/TabChild.cpp.rej\npatching file dom/ipc/TabChild.h\npatching file layout/generic/nsSubDocumentFrame.h", "attachment_id": null, "raw_text": "I tried to apply the patch on fx-team repo (cloned now), but there are same failures. Should I use different repository?\n\nHonza\n\n$ patch -p1 --dry-run < linked_browsers_4.diff\npatching file content/base/public/nsIFrameLoader.idl\npatching file content/base/public/nsIFrameMessageManager.idl\npatching file content/base/src/nsFrameLoader.cpp\nHunk #2 FAILED at 324.\nHunk #3 FAILED at 415.\nHunk #4 succeeded at 456 (offset -3 lines).\nHunk #5 FAILED at 768.\nHunk #7 FAILED at 943.\nHunk #8 FAILED at 1260.\nHunk #9 succeeded at 1340 (offset -6 lines).\nHunk #11 succeeded at 1816 (offset -6 lines).\nHunk #13 succeeded at 2073 (offset -6 lines).\nHunk #14 succeeded at 2195 with fuzz 1.\n5 out of 14 hunks FAILED -- saving rejects to file content/base/src/nsFrameLoade\nr.cpp.rej\npatching file content/base/src/nsFrameLoader.h\nHunk #2 succeeded at 163 with fuzz 1.\nHunk #4 FAILED at 250.\n1 out of 6 hunks FAILED -- saving rejects to file content/base/src/nsFrameLoader\n.h.rej\npatching file content/base/src/nsFrameMessageManager.cpp\npatching file content/base/src/nsGkAtomList.h\nHunk #1 succeeded at 595 (offset 3 lines).\npatching file content/base/src/nsInProcessTabChildGlobal.cpp\nHunk #2 FAILED at 391.\n1 out of 2 hunks FAILED -- saving rejects to file content/base/src/nsInProcessTa\nbChildGlobal.cpp.rej\npatching file content/base/src/nsInProcessTabChildGlobal.h\npatching file content/base/test/chrome/Makefile.in\npatching file content/base/test/chrome/file_bug669698.xul\npatching file content/base/test/chrome/test_bug669698.xul\npatching file dom/ipc/PBrowser.ipdl\npatching file dom/ipc/TabChild.cpp\nHunk #1 FAILED at 823.\n1 out of 2 hunks FAILED -- saving rejects to file dom/ipc/TabChild.cpp.rej\npatching file dom/ipc/TabChild.h\npatching file layout/generic/nsSubDocumentFrame.h", "id": 5793959}]}}, "comments": {}}