{"bugs": {"1631492": {"comments": [{"creation_time": "2020-04-20T16:09:02Z", "text": "For Office 365, the AUTH XOAUTH2 command string can get very long. It doesn't work\nhttps://tools.ietf.org/html/rfc2449#section-4 \n\n4.  Parameter and Response Lengths\n\n   This specification increases the length restrictions on commands and\n   parameters imposed by RFC 1939.\n\n   The maximum length of a command is increased from 47 characters (4\n   character command, single space, 40 character argument, CRLF) to 255\n   octets, including the terminating CRLF.\n\n   Servers which support the CAPA command MUST support commands up to\n   255 octets.  Servers MUST also support the largest maximum command\n   length specified by any supported capability.\n\nInstead, send the command on one line, and the actual string on the next line. The next line is treated as a blob and arbitrary sized content is allowed.", "attachment_id": null, "tags": [], "author": "mkmelin+mozilla@iki.fi", "count": 0, "time": "2020-04-20T16:09:02Z", "raw_text": "For Office 365, the AUTH XOAUTH2 command string can get very long. It doesn't work\nhttps://tools.ietf.org/html/rfc2449#section-4 \n\n4.  Parameter and Response Lengths\n\n   This specification increases the length restrictions on commands and\n   parameters imposed by RFC 1939.\n\n   The maximum length of a command is increased from 47 characters (4\n   character command, single space, 40 character argument, CRLF) to 255\n   octets, including the terminating CRLF.\n\n   Servers which support the CAPA command MUST support commands up to\n   255 octets.  Servers MUST also support the largest maximum command\n   length specified by any supported capability.\n\nInstead, send the command on one line, and the actual string on the next line. The next line is treated as a blob and arbitrary sized content is allowed.", "is_private": false, "creator": "mkmelin+mozilla@iki.fi", "bug_id": 1631492, "id": 14766849}, {"count": 1, "is_private": false, "raw_text": "", "creation_time": "2020-04-20T16:11:40Z", "text": "Created attachment 9141750\nbug1631492_pop3_oauth2_cmd_length_limit.patch", "time": "2020-04-20T16:11:40Z", "author": "mkmelin+mozilla@iki.fi", "tags": [], "creator": "mkmelin+mozilla@iki.fi", "attachment_id": 9141750, "id": 14766859, "bug_id": 1631492}, {"count": 2, "is_private": false, "creation_time": "2020-04-21T05:06:17Z", "text": "Comment on attachment 9141750\nbug1631492_pop3_oauth2_cmd_length_limit.patch\n\nReview of attachment 9141750:\n-----------------------------------------------------------------\n\nr- for the reasons below, but I don't see any reason it wouldn't actually _work_, so I'm willing to be persuaded otherwise :-)\n\n::: mailnews/local/src/nsPop3Protocol.cpp\n@@ +1753,5 @@\n> +\n> +  if (!m_pop3ConData->command_succeeded) {\n> +    m_OAuth2String.Truncate();\n> +    m_pop3ConData->next_state = POP3_ERROR_DONE;\n> +    ProcessProtocolState(nullptr, nullptr, 0, 0);\n\nIt seems wrong to be recursively calling ProcessProtocolState() from here...\nShouldn't OAuth2AuthStep() just return and let the while() loop (out in ProcessProtocolState) handle progressing the state?\n\n@@ +1792,5 @@\n> +  // RFC 2449 limits command length to 255 octets. If our command is over that,\n> +  // send AUTH XOAUTH2 on one line, and the actual data on the next.\n> +  // The second line is treated as a blob allowing arbitrary size content.\n> +  if (cmd.Length() <= 255) {\n> +    m_pop3ConData->next_state_after_response = POP3_AUTH_OAUTH2_AUTH_STEP;\n\nCould the <=255 case just progress using the original POP3_NEXT_AUTH_STEP state as before?\n\nie go into POP3_AUTH_OAUTH2_AUTH_STEP _only_ to send the second line (the >255 blob)?\n\n@@ +1810,5 @@\n> +    cmdLine1 += CRLF;\n> +    m_pop3ConData->next_state = POP3_WAIT_FOR_RESPONSE;\n> +    m_pop3ConData->pause_for_read = true;\n> +    m_pop3ConData->next_state_after_response = POP3_AUTH_OAUTH2_AUTH_STEP;\n> +    if (Pop3SendData(cmdLine1.get(), false)) {\n\nIf Pop3SendData() is synchronous, could it be called twice here, to send both lines in one place and avoid adding POP3_AUTH_OAUTH2_AUTH_STEP state at al? (and dropping out to POP3_ERROR_DONE if either of the sends fail)", "time": "2020-04-21T05:06:17Z", "raw_text": "Review of attachment 9141750:\n-----------------------------------------------------------------\n\nr- for the reasons below, but I don't see any reason it wouldn't actually _work_, so I'm willing to be persuaded otherwise :-)\n\n::: mailnews/local/src/nsPop3Protocol.cpp\n@@ +1753,5 @@\n> +\n> +  if (!m_pop3ConData->command_succeeded) {\n> +    m_OAuth2String.Truncate();\n> +    m_pop3ConData->next_state = POP3_ERROR_DONE;\n> +    ProcessProtocolState(nullptr, nullptr, 0, 0);\n\nIt seems wrong to be recursively calling ProcessProtocolState() from here...\nShouldn't OAuth2AuthStep() just return and let the while() loop (out in ProcessProtocolState) handle progressing the state?\n\n@@ +1792,5 @@\n> +  // RFC 2449 limits command length to 255 octets. If our command is over that,\n> +  // send AUTH XOAUTH2 on one line, and the actual data on the next.\n> +  // The second line is treated as a blob allowing arbitrary size content.\n> +  if (cmd.Length() <= 255) {\n> +    m_pop3ConData->next_state_after_response = POP3_AUTH_OAUTH2_AUTH_STEP;\n\nCould the <=255 case just progress using the original POP3_NEXT_AUTH_STEP state as before?\n\nie go into POP3_AUTH_OAUTH2_AUTH_STEP _only_ to send the second line (the >255 blob)?\n\n@@ +1810,5 @@\n> +    cmdLine1 += CRLF;\n> +    m_pop3ConData->next_state = POP3_WAIT_FOR_RESPONSE;\n> +    m_pop3ConData->pause_for_read = true;\n> +    m_pop3ConData->next_state_after_response = POP3_AUTH_OAUTH2_AUTH_STEP;\n> +    if (Pop3SendData(cmdLine1.get(), false)) {\n\nIf Pop3SendData() is synchronous, could it be called twice here, to send both lines in one place and avoid adding POP3_AUTH_OAUTH2_AUTH_STEP state at al? (and dropping out to POP3_ERROR_DONE if either of the sends fail)", "tags": [], "author": "benc@thunderbird.net", "attachment_id": 9141750, "creator": "benc@thunderbird.net", "id": 14768298, "bug_id": 1631492}, {"author": "mkmelin+mozilla@iki.fi", "tags": [], "attachment_id": null, "text": "(In reply to Ben Campbell from comment #2)\n> If Pop3SendData() is synchronous, could it be called twice here, to send\n> both lines in one place and avoid adding POP3_AUTH_OAUTH2_AUTH_STEP state at\n> al? (and dropping out to POP3_ERROR_DONE if either of the sends fail)\n\nI don't think one can do that, since it would mess up the state machine if there is not a one-one on the send-receive.\n\nIt will look something like this:\n\nSEND: AUTH XOAUTH2\nRECV: + \nSEND: dXBlcj10YnRlc3RAbW96dGh1bmRlcmJpcmQub25taWNy.......\nRECV: +OK User successfully authenticated.", "creation_time": "2020-04-21T14:15:43Z", "id": 14769081, "bug_id": 1631492, "creator": "mkmelin+mozilla@iki.fi", "is_private": false, "raw_text": "(In reply to Ben Campbell from comment #2)\n> If Pop3SendData() is synchronous, could it be called twice here, to send\n> both lines in one place and avoid adding POP3_AUTH_OAUTH2_AUTH_STEP state at\n> al? (and dropping out to POP3_ERROR_DONE if either of the sends fail)\n\nI don't think one can do that, since it would mess up the state machine if there is not a one-one on the send-receive.\n\nIt will look something like this:\n\nSEND: AUTH XOAUTH2\nRECV: + \nSEND: dXBlcj10YnRlc3RAbW96dGh1bmRlcmJpcmQub25taWNy.......\nRECV: +OK User successfully authenticated.", "time": "2020-04-21T14:15:43Z", "count": 3}, {"time": "2020-04-21T14:16:23Z", "text": "Created attachment 9142056\nbug1631492_pop3_oauth2_cmd_length_limit.patch\n\nDid the other changes.", "creation_time": "2020-04-21T14:16:23Z", "raw_text": "Did the other changes.", "is_private": false, "count": 4, "bug_id": 1631492, "id": 14769084, "attachment_id": 9142056, "creator": "mkmelin+mozilla@iki.fi", "tags": [], "author": "mkmelin+mozilla@iki.fi"}, {"creation_time": "2020-04-22T03:20:51Z", "text": "Comment on attachment 9142056\nbug1631492_pop3_oauth2_cmd_length_limit.patch\n\nReview of attachment 9142056:\n-----------------------------------------------------------------\n\nYes, that definitely feels a lot clearer to me, thanks.", "attachment_id": 9142056, "author": "benc@thunderbird.net", "tags": [], "count": 5, "raw_text": "Review of attachment 9142056:\n-----------------------------------------------------------------\n\nYes, that definitely feels a lot clearer to me, thanks.", "time": "2020-04-22T03:20:51Z", "is_private": false, "creator": "benc@thunderbird.net", "bug_id": 1631492, "id": 14770736}, {"attachment_id": 9142250, "creator": "benc@thunderbird.net", "tags": [], "author": "benc@thunderbird.net", "bug_id": 1631492, "id": 14770745, "count": 6, "time": "2020-04-22T03:39:26Z", "creation_time": "2020-04-22T03:39:26Z", "text": "Created attachment 9142250\n1631492-next_state_after_response-comment.patch\n\nunrelated comment tweak: I found `next_state_after_response` a little confusing, so I tried to explain it.", "raw_text": "unrelated comment tweak: I found `next_state_after_response` a little confusing, so I tried to explain it.", "is_private": false}, {"author": "mkmelin+mozilla@iki.fi", "tags": [], "creator": "mkmelin+mozilla@iki.fi", "attachment_id": 9142250, "id": 14771122, "bug_id": 1631492, "count": 7, "is_private": false, "raw_text": "Review of attachment 9142250:\n-----------------------------------------------------------------\n\nThanks, will fold it in.", "text": "Comment on attachment 9142250\n1631492-next_state_after_response-comment.patch\n\nReview of attachment 9142250:\n-----------------------------------------------------------------\n\nThanks, will fold it in.", "time": "2020-04-22T08:27:09Z", "creation_time": "2020-04-22T08:27:09Z"}, {"creator": "pulsebot@bots.tld", "id": 14771344, "bug_id": 1631492, "count": 8, "is_private": false, "time": "2020-04-22T10:50:26Z", "raw_text": "Pushed by mkmelin@iki.fi:\nhttps://hg.mozilla.org/comm-central/rev/71abc0529d32\nShould not send AUTH XOAUTH command exceeding 255 characters. r=benc", "tags": [], "author": "pulsebot@bots.tld", "attachment_id": null, "creation_time": "2020-04-22T10:50:26Z", "text": "Pushed by mkmelin@iki.fi:\nhttps://hg.mozilla.org/comm-central/rev/71abc0529d32\nShould not send AUTH XOAUTH command exceeding 255 characters. r=benc"}]}}, "comments": {}}