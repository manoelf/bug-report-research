{"comments": {}, "bugs": {"641891": {"comments": [{"creator": "richm@stanfordalumni.org", "attachment_id": null, "count": 0, "text": "If I have\n\nstatic const char *envvar = \"NSSNOFORK=DISABLED\";\nPR_SetEnv(envvar);\n\nWhen this code is called in tcsh, tcsh aborts with the following assertion and stack trace:\n> # su - foo\n> free(0x173bd2) below bottom of memory. (memtop = 0x9898800 membot = 0x973e000)\n> # gdb /bin/tcsh coredump\n> (gdb) bt\n> #0  0x00ed9416 in __kernel_vsyscall ()\n> #1  0x006e02f1 in raise (sig=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n> #2  0x006e1d5e in abort () at abort.c:92\n> #3  0x08084e6a in free (cp=0x8f2bd2) at tc.alloc.c:313\n> #4  0x08063d83 in blkfree (av0=0x9e7d988) at sh.misc.c:158\n> #5  0x0805af6f in tsetenv (name=0x80a3420 L\"GROUP\", val=0x9e32608\n> L\"valid_group\") at sh.func.c:1725\n> #6  0x0804d910 in main (argc=<value optimized out>, argv=0xbfa7e4f4) at\n> sh.c:561\n\nIf I allocate char *envvar with PL_strdup() instead, everything works correctly.", "author": "richm@stanfordalumni.org", "raw_text": "If I have\n\nstatic const char *envvar = \"NSSNOFORK=DISABLED\";\nPR_SetEnv(envvar);\n\nWhen this code is called in tcsh, tcsh aborts with the following assertion and stack trace:\n> # su - foo\n> free(0x173bd2) below bottom of memory. (memtop = 0x9898800 membot = 0x973e000)\n> # gdb /bin/tcsh coredump\n> (gdb) bt\n> #0  0x00ed9416 in __kernel_vsyscall ()\n> #1  0x006e02f1 in raise (sig=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n> #2  0x006e1d5e in abort () at abort.c:92\n> #3  0x08084e6a in free (cp=0x8f2bd2) at tc.alloc.c:313\n> #4  0x08063d83 in blkfree (av0=0x9e7d988) at sh.misc.c:158\n> #5  0x0805af6f in tsetenv (name=0x80a3420 L\"GROUP\", val=0x9e32608\n> L\"valid_group\") at sh.func.c:1725\n> #6  0x0804d910 in main (argc=<value optimized out>, argv=0xbfa7e4f4) at\n> sh.c:561\n\nIf I allocate char *envvar with PL_strdup() instead, everything works correctly.", "bug_id": 641891, "creation_time": "2011-03-15T17:52:32Z", "tags": [], "is_private": false, "time": "2011-03-15T17:52:32Z", "id": 5346161}, {"is_private": false, "attachment_id": null, "creation_time": "2011-03-15T20:24:27Z", "bug_id": 641891, "raw_text": "Thanks for the bug report.  On Unix, PR_SetEnv passes its\ninput argument directly to putenv().  See\n\nhttp://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/nsprpub/pr/src/misc/prenv.c&rev=3.12&mark=87,96#87\n\nhttp://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/nsprpub/pr/include/private/primpl.h&rev=3.93&mark=1907#1907\n\nhttp://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/nsprpub/pr/include/md/_unixos.h&rev=3.41&mark=303#303\n\nYour code snippet differs from the example in the putenv man page\nonly in the use of 'const':\nhttp://pubs.opengroup.org/onlinepubs/009695399/functions/putenv.html\n\nSo you can try removing 'const'.  But I doubt that'll fix the\ncrash.\n\nI found this CERT page, which recommends dynamically allocating\nmemory for the argument to putenv():\nhttps://www.securecoding.cert.org/confluence/display/seccode/POS34-C.+Do+not+call+putenv()+with+a+pointer+to+an+automatic+variable+as+the+argument\n\nBut it also says:\n  An automatic pointer to a static buffer would work as intended.\n\nSo this seems like a bug in tcsh?\n\nBoth the putenv() man page and the CERT page suggest using setenv()\ninstead.  Perhaps PR_SetEnv should use setenv() if it's available.", "tags": [], "creator": "wtc@google.com", "time": "2011-03-15T20:24:27Z", "author": "wtc@google.com", "id": 5346604, "count": 1, "text": "Thanks for the bug report.  On Unix, PR_SetEnv passes its\ninput argument directly to putenv().  See\n\nhttp://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/nsprpub/pr/src/misc/prenv.c&rev=3.12&mark=87,96#87\n\nhttp://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/nsprpub/pr/include/private/primpl.h&rev=3.93&mark=1907#1907\n\nhttp://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/nsprpub/pr/include/md/_unixos.h&rev=3.41&mark=303#303\n\nYour code snippet differs from the example in the putenv man page\nonly in the use of 'const':\nhttp://pubs.opengroup.org/onlinepubs/009695399/functions/putenv.html\n\nSo you can try removing 'const'.  But I doubt that'll fix the\ncrash.\n\nI found this CERT page, which recommends dynamically allocating\nmemory for the argument to putenv():\nhttps://www.securecoding.cert.org/confluence/display/seccode/POS34-C.+Do+not+call+putenv()+with+a+pointer+to+an+automatic+variable+as+the+argument\n\nBut it also says:\n  An automatic pointer to a static buffer would work as intended.\n\nSo this seems like a bug in tcsh?\n\nBoth the putenv() man page and the CERT page suggest using setenv()\ninstead.  Perhaps PR_SetEnv should use setenv() if it's available."}, {"creator": "richm@stanfordalumni.org", "attachment_id": null, "count": 2, "text": "Yes.  Perhaps use setenv() instead where available.", "author": "richm@stanfordalumni.org", "raw_text": "Yes.  Perhaps use setenv() instead where available.", "bug_id": 641891, "creation_time": "2011-03-18T23:30:03Z", "tags": [], "is_private": false, "time": "2011-03-18T23:30:03Z", "id": 5354652}]}}}