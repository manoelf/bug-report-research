{"comments": {}, "bugs": {"641725": {"comments": [{"attachment_id": null, "author": "songlinhai@163.com", "id": 5344962, "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15\nBuild Identifier: firefox-4.0b11\n\nThere are many code fragments which compare two strings or one string with a\nconstant character in mozilla. These comparisons continue when two characters\nare equal to each other, and stop when two characters are not equal. This byte-wise comparison process can be optimized by word-wise comparison. \n\nAccording to my current knowledge, there are no compiler can do this optimization. \n\nI did unit test for word-wise comparison and byte-wise comparison. \nWhen the common length is smaller than 4 bytes, there is negligible performance\ndifference.\nWhen the common length is larger than 4 bytes, word-wise comparison runs much faster.\nFor example, when common length is 10 bytes, word-wise comparison only takes about 3/4 the time the byte-wise comparison takes. And when\nthe common length is 20, word-wise comparison only takes about HALF\nthe time byte-wise comparison takes.\n\nI list all byte-wise comparison as follows:\n\n/firefox-4.0b11.source/netwerk/protocol/http/nsHttpNTLMAuth.cpp:382\n                while (challenge[len - 1] == '=')\n\n        // strip off any padding (see bug 230351)\n        while (challenge[len - 1] == '=')\n          len--;\n=========================================================================\n/firefox-4.0b11.source/netwerk/base/src/nsURLHelper.cpp:600\n            while (((p-1) >= str) && (*(p-1) == ' ')) {\n\n    // Remove trailing spaces if any\n    while (((p-1) >= str) && (*(p-1) == ' ')) {\n        writing = PR_TRUE;\n        p--;\n    }\n============================================================================\n/firefox-4.0b11.source/extensions/spellcheck/hunspell/src/hunspell.cpp:190\n           while ((nl > 0) && (*(q+nl-1)=='.')) {\n  *pabbrev = 0;\n   int nl = strlen((const char *)q);\n   while ((nl > 0) && (*(q+nl-1)=='.')) {\n       nl--;\n       (*pabbrev)++;\n   }\n==============================================================================\n/firefox-4.0b11.source/extensions/spellcheck/hunspell/src/hunspell.cpp:146\n           while ((nl > 0) && (*(q+nl-1)=='.')) {\n   while ((nl > 0) && (*(q+nl-1)=='.')) {\n       nl--;\n       (*pabbrev)++;\n   }\n=============================================================================\n/firefox-4.0b11.source/extensions/auth/nsHttpNegotiateAuth.cpp:260\n                while (challenge[len - 1] == '=')\n\n   // strip off any padding (see bug 230351)\n        while (challenge[len - 1] == '=')\n            len--;\n===============================================================================\n/firefox-4.0b11.source/security/manager/ssl/src/nsKeygenHandler.cpp:162\n            for (i = 0; params->prime.data[i] == 0; i++)\n\n  for (i = 0; params->prime.data[i] == 0; i++)\n        /* empty */;\n=============================================================================\n/firefox-4.0b11.source/db/sqlite3/src/sqlite3.c:105181\n          while( n>0 && z[n-1]==' ' ){ n--; }\n=============================================================================\n/firefox-4.0b11.source/db/sqlite3/src/sqlite3.c:18792\n                  while( bufpt[-1]=='0' ) *(--bufpt) = 0;\n=============================================================================\n/firefox-4.0b11.source/db/sqlite3/src/sqlite3.c:98304\n          while( n>1 && zAff[n-1]==SQLITE_AFF_NONE ){\n\n  while( n>1 && zAff[n-1]==SQLITE_AFF_NONE ){\n    n--;\n  }\n=============================================================================\n/firefox-4.0b11.source/js/src/config/nsinstall.c:112\n            while (*path == '/' && path[1] == '/')\n   while (*path == '/' && path[1] == '/')\n\tpath++;\n============================================================================\n/firefox-4.0b11.source/js/src/config/nsinstall.c:114\n            for (cp = strrchr(path, '/'); cp && cp != path && *(cp - 1) == '/'; cp--);\n============================================================================\n/firefox-4.0b11.source/js/src/jsopcode.cpp:3090\n                        while (ss->opcodes[pos] == JSOP_ENTERBLOCK) {\n\n         /*\n                 * Now move pos downward over the block's local slots. Even an\n                 * empty destructuring pattern has one (dummy) local.\n                 */\n                while (ss->opcodes[pos] == JSOP_ENTERBLOCK) {\n                    if (pos == 0)\n                        break;\n                    --pos;\n                }\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:2903\n                                                        while(*--s == '0');\n============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:2959\n                                                while(*--s == '9')\nwhile(*--s == '9')\n\t\t\t\t\t\tif (s == s0) {\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t*s = '0';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t++*s++;\n\t\t\t\t\t}\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:3212\n                        while(*--s == '9')\nwhile(*--s == '9')\n\t\t\tif (s == s0) {\n\t\t\t\tk++;\n\t\t\t\t*s++ = '1';\n\t\t\t\tgoto ret;\n\t\t\t\t}\n\t\t++*s++;\n\t\t}\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:3224\n                        while(*--s == '0');\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:1537\n                        while(*++s == '0') ;\n=============================================================================\n/firefox-4.0b11.source/xpcom/io/nsWildCard.cpp:315\n                    while(expr[++y] == '*'){}\n==============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3077\n                                                        while(*--s == '0');\n=============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3133\n                                                while(*--s == '9')\nwhile(*--s == '9')\n\t\t\t\t\t\tif (s == s0) {\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t*s = '0';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t++*s++;\n\t\t\t\t\t}\n==============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3384\n                        while(*--s == '9')\nwhile(*--s == '9')\n\t\t\tif (s == s0) {\n\t\t\t\tk++;\n\t\t\t\t*s++ = '1';\n\t\t\t\tgoto ret;\n\t\t\t\t}\n\t\t++*s++;\n\t\t}\n============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3396\n                        while(*--s == '0');\n============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:1685\n                        while(*++s == '0') ;\n=============================================================================\n/firefox-4.0b11.source/nsprpub/config/nsinstall.c:136\n            while (*path == '/' && path[1] == '/')\nwhile (*path == '/' && path[1] == '/')\n\tpath++;\n==============================================================================\n/firefox-4.0b11.source/nsprpub/config/nsinstall.c:138\n            for (cp = strrchr(path, '/'); cp && cp != path && cp[-1] == '/'; cp--)\n   for (cp = strrchr(path, '/'); cp && cp != path && cp[-1] == '/'; cp--)\n\t;\n===========================================================================\n/firefox-4.0b11.source/config/nsinstall.c:112\n            while (*path == '/' && path[1] == '/')\n\n while (*path == '/' && path[1] == '/')\n\tpath++;\n============================================================================\n/firefox-4.0b11.source/config/nsinstall.c:114\n            for (cp = strrchr(path, '/'); cp && cp != path && *(cp - 1) == '/'; cp--);\n\n\n============================================================================\n\n/firefox-4.0b11.source/security/nss/lib/util/quickder.c:829\n                                while (temp.len > 1 && temp.data[0] == 0)\n\n       while (temp.len > 1 && temp.data[0] == 0)\n                        {              /* leading 0 */\n                            temp.data++;\n                            temp.len--;\n                        }\n==========================================================================\n/firefox-4.0b11.source/security/nss/lib/util/portreg.c:259\n                    while(exp[++y] == '*'){}\n=========================================================================\n/firefox-4.0b11.source/security/nss/lib/util/secasn1d.c:1565\n                    while (len > 1 && buf[0] == 0) {              /* leading 0 */\n  while (len > 1 && buf[0] == 0) {              /* leading 0 */\n\t\tbuf++;\n\t\tlen--;\n\t    }\n============================================================================\n/firefox-4.0b11.source/security/nss/lib/softoken/ecdecode.c:68\n            while ((tmp > 2) && (str[0] == '0') && (str[1] == '0')) {\n    /* skip leading 00's unless the hex string is \"00\" */\n    while ((tmp > 2) && (str[0] == '0') && (str[1] == '0')) {\n        str += 2;\n        tmp -= 2;\n    }\n===========================================================================\n/firefox-4.0b11.source/security/nss/cmd/certutil/keystuff.c:287\n                for (i = 0; params->prime.data[i] == 0; i++) {\n\n\tfor (i = 0; params->prime.data[i] == 0; i++) {\n\t    /* empty */;\n\t}\n\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1.code review\n2.\n3.", "creation_time": "2011-03-15T02:01:18Z", "is_private": false, "text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15\nBuild Identifier: firefox-4.0b11\n\nThere are many code fragments which compare two strings or one string with a\nconstant character in mozilla. These comparisons continue when two characters\nare equal to each other, and stop when two characters are not equal. This byte-wise comparison process can be optimized by word-wise comparison. \n\nAccording to my current knowledge, there are no compiler can do this optimization. \n\nI did unit test for word-wise comparison and byte-wise comparison. \nWhen the common length is smaller than 4 bytes, there is negligible performance\ndifference.\nWhen the common length is larger than 4 bytes, word-wise comparison runs much faster.\nFor example, when common length is 10 bytes, word-wise comparison only takes about 3/4 the time the byte-wise comparison takes. And when\nthe common length is 20, word-wise comparison only takes about HALF\nthe time byte-wise comparison takes.\n\nI list all byte-wise comparison as follows:\n\n/firefox-4.0b11.source/netwerk/protocol/http/nsHttpNTLMAuth.cpp:382\n                while (challenge[len - 1] == '=')\n\n        // strip off any padding (see bug 230351)\n        while (challenge[len - 1] == '=')\n          len--;\n=========================================================================\n/firefox-4.0b11.source/netwerk/base/src/nsURLHelper.cpp:600\n            while (((p-1) >= str) && (*(p-1) == ' ')) {\n\n    // Remove trailing spaces if any\n    while (((p-1) >= str) && (*(p-1) == ' ')) {\n        writing = PR_TRUE;\n        p--;\n    }\n============================================================================\n/firefox-4.0b11.source/extensions/spellcheck/hunspell/src/hunspell.cpp:190\n           while ((nl > 0) && (*(q+nl-1)=='.')) {\n  *pabbrev = 0;\n   int nl = strlen((const char *)q);\n   while ((nl > 0) && (*(q+nl-1)=='.')) {\n       nl--;\n       (*pabbrev)++;\n   }\n==============================================================================\n/firefox-4.0b11.source/extensions/spellcheck/hunspell/src/hunspell.cpp:146\n           while ((nl > 0) && (*(q+nl-1)=='.')) {\n   while ((nl > 0) && (*(q+nl-1)=='.')) {\n       nl--;\n       (*pabbrev)++;\n   }\n=============================================================================\n/firefox-4.0b11.source/extensions/auth/nsHttpNegotiateAuth.cpp:260\n                while (challenge[len - 1] == '=')\n\n   // strip off any padding (see bug 230351)\n        while (challenge[len - 1] == '=')\n            len--;\n===============================================================================\n/firefox-4.0b11.source/security/manager/ssl/src/nsKeygenHandler.cpp:162\n            for (i = 0; params->prime.data[i] == 0; i++)\n\n  for (i = 0; params->prime.data[i] == 0; i++)\n        /* empty */;\n=============================================================================\n/firefox-4.0b11.source/db/sqlite3/src/sqlite3.c:105181\n          while( n>0 && z[n-1]==' ' ){ n--; }\n=============================================================================\n/firefox-4.0b11.source/db/sqlite3/src/sqlite3.c:18792\n                  while( bufpt[-1]=='0' ) *(--bufpt) = 0;\n=============================================================================\n/firefox-4.0b11.source/db/sqlite3/src/sqlite3.c:98304\n          while( n>1 && zAff[n-1]==SQLITE_AFF_NONE ){\n\n  while( n>1 && zAff[n-1]==SQLITE_AFF_NONE ){\n    n--;\n  }\n=============================================================================\n/firefox-4.0b11.source/js/src/config/nsinstall.c:112\n            while (*path == '/' && path[1] == '/')\n   while (*path == '/' && path[1] == '/')\n\tpath++;\n============================================================================\n/firefox-4.0b11.source/js/src/config/nsinstall.c:114\n            for (cp = strrchr(path, '/'); cp && cp != path && *(cp - 1) == '/'; cp--);\n============================================================================\n/firefox-4.0b11.source/js/src/jsopcode.cpp:3090\n                        while (ss->opcodes[pos] == JSOP_ENTERBLOCK) {\n\n         /*\n                 * Now move pos downward over the block's local slots. Even an\n                 * empty destructuring pattern has one (dummy) local.\n                 */\n                while (ss->opcodes[pos] == JSOP_ENTERBLOCK) {\n                    if (pos == 0)\n                        break;\n                    --pos;\n                }\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:2903\n                                                        while(*--s == '0');\n============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:2959\n                                                while(*--s == '9')\nwhile(*--s == '9')\n\t\t\t\t\t\tif (s == s0) {\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t*s = '0';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t++*s++;\n\t\t\t\t\t}\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:3212\n                        while(*--s == '9')\nwhile(*--s == '9')\n\t\t\tif (s == s0) {\n\t\t\t\tk++;\n\t\t\t\t*s++ = '1';\n\t\t\t\tgoto ret;\n\t\t\t\t}\n\t\t++*s++;\n\t\t}\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:3224\n                        while(*--s == '0');\n=============================================================================\n/firefox-4.0b11.source/js/src/dtoa.c:1537\n                        while(*++s == '0') ;\n=============================================================================\n/firefox-4.0b11.source/xpcom/io/nsWildCard.cpp:315\n                    while(expr[++y] == '*'){}\n==============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3077\n                                                        while(*--s == '0');\n=============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3133\n                                                while(*--s == '9')\nwhile(*--s == '9')\n\t\t\t\t\t\tif (s == s0) {\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t*s = '0';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t++*s++;\n\t\t\t\t\t}\n==============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3384\n                        while(*--s == '9')\nwhile(*--s == '9')\n\t\t\tif (s == s0) {\n\t\t\t\tk++;\n\t\t\t\t*s++ = '1';\n\t\t\t\tgoto ret;\n\t\t\t\t}\n\t\t++*s++;\n\t\t}\n============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:3396\n                        while(*--s == '0');\n============================================================================\n/firefox-4.0b11.source/nsprpub/pr/src/misc/prdtoa.c:1685\n                        while(*++s == '0') ;\n=============================================================================\n/firefox-4.0b11.source/nsprpub/config/nsinstall.c:136\n            while (*path == '/' && path[1] == '/')\nwhile (*path == '/' && path[1] == '/')\n\tpath++;\n==============================================================================\n/firefox-4.0b11.source/nsprpub/config/nsinstall.c:138\n            for (cp = strrchr(path, '/'); cp && cp != path && cp[-1] == '/'; cp--)\n   for (cp = strrchr(path, '/'); cp && cp != path && cp[-1] == '/'; cp--)\n\t;\n===========================================================================\n/firefox-4.0b11.source/config/nsinstall.c:112\n            while (*path == '/' && path[1] == '/')\n\n while (*path == '/' && path[1] == '/')\n\tpath++;\n============================================================================\n/firefox-4.0b11.source/config/nsinstall.c:114\n            for (cp = strrchr(path, '/'); cp && cp != path && *(cp - 1) == '/'; cp--);\n\n\n============================================================================\n\n/firefox-4.0b11.source/security/nss/lib/util/quickder.c:829\n                                while (temp.len > 1 && temp.data[0] == 0)\n\n       while (temp.len > 1 && temp.data[0] == 0)\n                        {              /* leading 0 */\n                            temp.data++;\n                            temp.len--;\n                        }\n==========================================================================\n/firefox-4.0b11.source/security/nss/lib/util/portreg.c:259\n                    while(exp[++y] == '*'){}\n=========================================================================\n/firefox-4.0b11.source/security/nss/lib/util/secasn1d.c:1565\n                    while (len > 1 && buf[0] == 0) {              /* leading 0 */\n  while (len > 1 && buf[0] == 0) {              /* leading 0 */\n\t\tbuf++;\n\t\tlen--;\n\t    }\n============================================================================\n/firefox-4.0b11.source/security/nss/lib/softoken/ecdecode.c:68\n            while ((tmp > 2) && (str[0] == '0') && (str[1] == '0')) {\n    /* skip leading 00's unless the hex string is \"00\" */\n    while ((tmp > 2) && (str[0] == '0') && (str[1] == '0')) {\n        str += 2;\n        tmp -= 2;\n    }\n===========================================================================\n/firefox-4.0b11.source/security/nss/cmd/certutil/keystuff.c:287\n                for (i = 0; params->prime.data[i] == 0; i++) {\n\n\tfor (i = 0; params->prime.data[i] == 0; i++) {\n\t    /* empty */;\n\t}\n\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1.code review\n2.\n3.", "count": 0, "creator": "songlinhai@163.com", "time": "2011-03-15T02:01:18Z", "tags": [], "bug_id": 641725}]}}}