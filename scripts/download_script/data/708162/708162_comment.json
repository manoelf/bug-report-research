{"bugs": {"708162": {"comments": [{"id": 5896420, "raw_text": "This is a follow-on to bug 670072 and bug 693143.  The original bug was a complaint by users that text with a very small font size was still rendering on the screen.  Essentially authors want text with a font size < 0.5px to never show up and have not affect layout.  This is somewhat dubious usage (display: none would be better) but I do think we should be displaying consistently across platform/os choices.  Behavior at small sizes is distinct from whether a given backend supports fractional sizes (GDI doesn't, OSX/DirectWrite do) and I think all platforms should behave the same way in this case.\n\nThe patch for 670072 simply rounded the font size in the GDI case but wasn't sufficiently tested and resulted in the top crasher, bug 693143.  Our handling of size = 0 within thebes and cairo font code is somewhat spotty.  In some cases we explicitly set the lower bound on font size to 1.0 (e.g. the font-size-adjust case and the DirectWrite backend case).  There are also assertions in various places that will fail if in the size == 0.  Within cairo code, the codepaths differ for the size == 0 case depending on font type, so at the very least we need more tests to flush out these codepaths (see bug 693143, comment 29).\n\nOne option to consider is trying to offload the handling of zero-sized fonts to the layout code, so that we don't waste resources when all that's needed is essentially a shunt, there's no need was time wandering through font code when nothing is going to be displayed in the end.", "attachment_id": null, "text": "This is a follow-on to bug 670072 and bug 693143.  The original bug was a complaint by users that text with a very small font size was still rendering on the screen.  Essentially authors want text with a font size < 0.5px to never show up and have not affect layout.  This is somewhat dubious usage (display: none would be better) but I do think we should be displaying consistently across platform/os choices.  Behavior at small sizes is distinct from whether a given backend supports fractional sizes (GDI doesn't, OSX/DirectWrite do) and I think all platforms should behave the same way in this case.\n\nThe patch for 670072 simply rounded the font size in the GDI case but wasn't sufficiently tested and resulted in the top crasher, bug 693143.  Our handling of size = 0 within thebes and cairo font code is somewhat spotty.  In some cases we explicitly set the lower bound on font size to 1.0 (e.g. the font-size-adjust case and the DirectWrite backend case).  There are also assertions in various places that will fail if in the size == 0.  Within cairo code, the codepaths differ for the size == 0 case depending on font type, so at the very least we need more tests to flush out these codepaths (see bug 693143, comment 29).\n\nOne option to consider is trying to offload the handling of zero-sized fonts to the layout code, so that we don't waste resources when all that's needed is essentially a shunt, there's no need was time wandering through font code when nothing is going to be displayed in the end.", "tags": [], "time": "2011-12-07T02:51:50Z", "creation_time": "2011-12-07T02:51:50Z", "author": "jd.bugzilla@gmail.com", "is_private": false, "creator": "jd.bugzilla@gmail.com", "bug_id": 708162, "count": 0}, {"id": 5896768, "attachment_id": 579606, "raw_text": "Should render evenly across with no tiny font rendering artifacts when displayed at default zoom level.", "author": "jd.bugzilla@gmail.com", "creation_time": "2011-12-07T07:31:00Z", "tags": [], "time": "2011-12-07T07:31:00Z", "text": "Created attachment 579606\ntestcase using lines of various tiny sizes and different fonts\n\nShould render evenly across with no tiny font rendering artifacts when displayed at default zoom level.", "creator": "jd.bugzilla@gmail.com", "is_private": false, "bug_id": 708162, "count": 1}, {"raw_text": "Testcase results:\n\nIE9/Win, Chrome17/Win, Chrome17/OSX render correctly\nFF8/Win, FF8/OSX, Safari5/OSX render incorrectly (lines shifted or tiny rendering artifacts)", "attachment_id": null, "id": 5896773, "count": 2, "creator": "jd.bugzilla@gmail.com", "is_private": false, "bug_id": 708162, "time": "2011-12-07T07:35:18Z", "tags": [], "text": "Testcase results:\n\nIE9/Win, Chrome17/Win, Chrome17/OSX render correctly\nFF8/Win, FF8/OSX, Safari5/OSX render incorrectly (lines shifted or tiny rendering artifacts)", "author": "jd.bugzilla@gmail.com", "creation_time": "2011-12-07T07:35:18Z"}, {"raw_text": "FF trunk renders correctly for me with D2D.", "attachment_id": null, "id": 5898694, "creator": "roc@ocallahan.org", "is_private": false, "tags": [], "time": "2011-12-07T22:21:21Z", "text": "FF trunk renders correctly for me with D2D.", "author": "roc@ocallahan.org", "creation_time": "2011-12-07T22:21:21Z", "count": 3, "bug_id": 708162}]}}, "comments": {}}