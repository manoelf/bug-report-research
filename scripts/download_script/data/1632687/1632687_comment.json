{"comments": {}, "bugs": {"1632687": {"comments": [{"raw_text": "The Chromium-derived IPC code was, as far as I can tell, originally designed for Windows and assumed that channels would be named pipes, managed and connected to via `std::wstring` paths.  The port to Unix, however, used unnamed `socketpair()` and passed them directly from process to process, so it has no use for these channel IDs...  but it still computes and propagates them, even though they're not used, using deprecated wide-string APIs.\n\nThis also indirectly causes bug 1556599, because using wide strings causes glibc locale initialization which reads the environment on the I/O thread, presumably racing with something on the main thread changing the environment.  Removing channel IDs isn't a proper fix for the underlying problem there \u2014 we'd need to refrain from modifying the environment while multithreaded, which is a large task and outside the scope of IPC \u2014 but it will prevent this particular instance of it.", "time": "2020-04-23T23:48:17Z", "author": "jld@mozilla.com", "tags": [], "bug_id": 1632687, "count": 0, "is_private": false, "creation_time": "2020-04-23T23:48:17Z", "attachment_id": null, "creator": "jld@mozilla.com", "text": "The Chromium-derived IPC code was, as far as I can tell, originally designed for Windows and assumed that channels would be named pipes, managed and connected to via `std::wstring` paths.  The port to Unix, however, used unnamed `socketpair()` and passed them directly from process to process, so it has no use for these channel IDs...  but it still computes and propagates them, even though they're not used, using deprecated wide-string APIs.\n\nThis also indirectly causes bug 1556599, because using wide strings causes glibc locale initialization which reads the environment on the I/O thread, presumably racing with something on the main thread changing the environment.  Removing channel IDs isn't a proper fix for the underlying problem there \u2014 we'd need to refrain from modifying the environment while multithreaded, which is a large task and outside the scope of IPC \u2014 but it will prevent this particular instance of it.", "id": 14775239}, {"is_private": false, "count": 1, "tags": [], "bug_id": 1632687, "author": "jld@mozilla.com", "time": "2020-04-24T00:42:02Z", "raw_text": "The PipeMap class tries to simulate the Windows channel model (named\npipes that the client opens by a pathname) on Unix.  However, it's\neffectively dead code -- the map is empty except in some unit tests that\nwe never imported.\n\nWhat we do is generate a \"channel ID\" with string formatting, then don't\npass it to the child or ever insert anything into the map, then the child\nlooks up an empty string and doesn't find it, so it uses the hard-coded\nfixed fd for the initial channel.\n\nBasically, it does nothing except maybe confuse unfamiliar readers, so\nlet's get rid of it.", "text": "Created attachment 9142902\nBug 1632687 - Part 1: Remove IPC PipeMap.\n\nThe PipeMap class tries to simulate the Windows channel model (named\npipes that the client opens by a pathname) on Unix.  However, it's\neffectively dead code -- the map is empty except in some unit tests that\nwe never imported.\n\nWhat we do is generate a \"channel ID\" with string formatting, then don't\npass it to the child or ever insert anything into the map, then the child\nlooks up an empty string and doesn't find it, so it uses the hard-coded\nfixed fd for the initial channel.\n\nBasically, it does nothing except maybe confuse unfamiliar readers, so\nlet's get rid of it.", "id": 14775306, "creator": "jld@mozilla.com", "attachment_id": 9142902, "creation_time": "2020-04-24T00:42:02Z"}, {"author": "jld@mozilla.com", "id": 14775308, "text": "Created attachment 9142903\nBug 1632687 - Part 1.5: Protect the hard-coded IPC child fd from accidental multiple use.\n\nThis \"create a pipe\" operation has a mode where, on Unix, it doesn't\ncreate a new transport but rather uses a hard-coded fd for the initial\nIPC channel in a child process.  (It was originally written for Windows\nand the assumption of using named pipes and pathnames for everything.)\n\nThat seems like a footgun, so this patch checks for trying to \"create\"\nthat pipe twice.  However, it doesn't check for accidentally calling it\nin the parent process.", "count": 2, "is_private": false, "tags": [], "bug_id": 1632687, "creation_time": "2020-04-24T00:42:05Z", "raw_text": "This \"create a pipe\" operation has a mode where, on Unix, it doesn't\ncreate a new transport but rather uses a hard-coded fd for the initial\nIPC channel in a child process.  (It was originally written for Windows\nand the assumption of using named pipes and pathnames for everything.)\n\nThat seems like a footgun, so this patch checks for trying to \"create\"\nthat pipe twice.  However, it doesn't check for accidentally calling it\nin the parent process.", "creator": "jld@mozilla.com", "attachment_id": 9142903, "time": "2020-04-24T00:42:05Z"}, {"bug_id": 1632687, "tags": [], "is_private": false, "count": 3, "author": "jld@mozilla.com", "time": "2020-04-24T00:42:08Z", "raw_text": "The Chromium-derived IPC code was, as far as I can tell, originally\ndesigned for Windows and assumed that channels would be named pipes,\nmanaged and connected to via `std::wstring` paths.  The port to Unix,\nhowever, used unnamed `socketpair()` and passed them directly from\nprocess to process, so it has no use for these channel IDs...  but it\nstill computes and propagates them, even though they're not used, using\ndeprecated wide-string APIs.\n\nThis patch introduces a typedef for an abstract channel ID, which is a\n`wstring` on Windows and an empty struct on Unix, to allow removing the\nstring code where it's not needed without needing to completely redesign\nthe channel abstraction.", "id": 14775310, "text": "Created attachment 9142904\nBug 1632687 - Part 3: Introduce an OS-dependent ChannelId type to reflect that Unix doesn't use channel IDs.\n\nThe Chromium-derived IPC code was, as far as I can tell, originally\ndesigned for Windows and assumed that channels would be named pipes,\nmanaged and connected to via `std::wstring` paths.  The port to Unix,\nhowever, used unnamed `socketpair()` and passed them directly from\nprocess to process, so it has no use for these channel IDs...  but it\nstill computes and propagates them, even though they're not used, using\ndeprecated wide-string APIs.\n\nThis patch introduces a typedef for an abstract channel ID, which is a\n`wstring` on Windows and an empty struct on Unix, to allow removing the\nstring code where it's not needed without needing to completely redesign\nthe channel abstraction.", "attachment_id": 9142904, "creator": "jld@mozilla.com", "creation_time": "2020-04-24T00:42:08Z"}, {"time": "2020-07-21T00:46:18Z", "raw_text": "Chromium's fix for CVE-2011-3079 added an optional prefix parameter for\nchannel IDs, but we've never used it and have no plans to.  (Chromium\nitself doesn't appear to have used it except with the prefixes \"gpu\"\nand \"nacl\", and the code has since been removed completely in favor of\nMojo.)  So let's simplify things and remove it.", "is_private": false, "count": 4, "bug_id": 1632687, "tags": [], "author": "jld@mozilla.com", "creator": "jld@mozilla.com", "attachment_id": 9164914, "creation_time": "2020-07-21T00:46:18Z", "id": 14947815, "text": "Created attachment 9164914\nBug 1632687 - Part 2: Remove the channel ID prefixes, which we've never used.\n\nChromium's fix for CVE-2011-3079 added an optional prefix parameter for\nchannel IDs, but we've never used it and have no plans to.  (Chromium\nitself doesn't appear to have used it except with the prefixes \"gpu\"\nand \"nacl\", and the code has since been removed completely in favor of\nMojo.)  So let's simplify things and remove it."}, {"raw_text": "Pushed by jedavis@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/1706ed209e22\nPart 1: Remove IPC PipeMap. r=mccr8\nhttps://hg.mozilla.org/integration/autoland/rev/9cdc37802d12\nPart 1.5: Protect the hard-coded IPC child fd from accidental multiple use. r=mccr8\nhttps://hg.mozilla.org/integration/autoland/rev/66bfa0dd136d\nPart 2: Remove the channel ID prefixes, which we've never used. r=mccr8\nhttps://hg.mozilla.org/integration/autoland/rev/d87f5e311934\nPart 3: Introduce an OS-dependent ChannelId type to reflect that Unix doesn't use channel IDs. r=mccr8", "time": "2020-07-22T20:25:09Z", "author": "pulsebot@bots.tld", "is_private": false, "count": 5, "bug_id": 1632687, "tags": [], "creation_time": "2020-07-22T20:25:09Z", "attachment_id": null, "creator": "pulsebot@bots.tld", "id": 14951808, "text": "Pushed by jedavis@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/1706ed209e22\nPart 1: Remove IPC PipeMap. r=mccr8\nhttps://hg.mozilla.org/integration/autoland/rev/9cdc37802d12\nPart 1.5: Protect the hard-coded IPC child fd from accidental multiple use. r=mccr8\nhttps://hg.mozilla.org/integration/autoland/rev/66bfa0dd136d\nPart 2: Remove the channel ID prefixes, which we've never used. r=mccr8\nhttps://hg.mozilla.org/integration/autoland/rev/d87f5e311934\nPart 3: Introduce an OS-dependent ChannelId type to reflect that Unix doesn't use channel IDs. r=mccr8"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/1706ed209e22\nhttps://hg.mozilla.org/mozilla-central/rev/9cdc37802d12\nhttps://hg.mozilla.org/mozilla-central/rev/66bfa0dd136d\nhttps://hg.mozilla.org/mozilla-central/rev/d87f5e311934", "id": 14952292, "creator": "nbeleuzu@mozilla.com", "attachment_id": null, "creation_time": "2020-07-23T03:25:02Z", "is_private": false, "count": 6, "bug_id": 1632687, "tags": ["bugherder"], "author": "nbeleuzu@mozilla.com", "time": "2020-07-23T03:25:02Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/1706ed209e22\nhttps://hg.mozilla.org/mozilla-central/rev/9cdc37802d12\nhttps://hg.mozilla.org/mozilla-central/rev/66bfa0dd136d\nhttps://hg.mozilla.org/mozilla-central/rev/d87f5e311934"}]}}}