{"bugs": {"706773": {"comments": [{"bug_id": 706773, "id": 5884678, "tags": [], "count": 0, "is_private": false, "author": "raydanhk@gmail.com", "attachment_id": 578208, "time": "2011-12-01T09:27:48Z", "text": "Created attachment 578208\ntest.html\n\nUser Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-TW; rv:1.9.2.24) Gecko/20111103 Firefox/3.6.24\nBuild ID: 20111103063747\n\nSteps to reproduce:\n\nwhen a button click & make it disable, the keydown event won't call, user must click somewhere to make keydown work again.\n\nTested on FF 3.6, FF 8, bug happen", "creator": "raydanhk@gmail.com", "raw_text": "User Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-TW; rv:1.9.2.24) Gecko/20111103 Firefox/3.6.24\nBuild ID: 20111103063747\n\nSteps to reproduce:\n\nwhen a button click & make it disable, the keydown event won't call, user must click somewhere to make keydown work again.\n\nTested on FF 3.6, FF 8, bug happen", "creation_time": "2011-12-01T09:27:48Z"}, {"author": "alice0775@gmail.com", "creator": "alice0775@gmail.com", "id": 5884796, "tags": [], "count": 1, "is_private": false, "bug_id": 706773, "raw_text": "I can confirm on\nhttp://hg.mozilla.org/mozilla-central/rev/cc94a16983b0\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:11.0a1) Gecko/20111130 Firefox/11.0a1 ID:20111130031011", "creation_time": "2011-12-01T11:42:49Z", "time": "2011-12-01T11:42:49Z", "attachment_id": null, "text": "I can confirm on\nhttp://hg.mozilla.org/mozilla-central/rev/cc94a16983b0\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:11.0a1) Gecko/20111130 Firefox/11.0a1 ID:20111130031011"}, {"bug_id": 706773, "is_private": false, "count": 2, "tags": [], "id": 9104554, "text": "This issue still persists in Firefox 30, but its resolution is explicitly provided by the HTML 5 spec:\n\n> 7.4.2 Focus management\n> [\u2026]\n> When an element that is focused stops being a focusable element, or stops being focused without another element being explicitly focused in its stead, the user agent should synchronously run the unfocusing steps for the affected element only.\n\nhttp://www.w3.org/TR/html5/editing.html#focus-management\n\nBecause a disabled element should neither maintain nor obtain focus, the keydown event's lack of firing will automatically cease to be a problem as soon as focus management is implemented correctly.", "attachment_id": null, "time": "2014-07-26T09:04:44Z", "creation_time": "2014-07-26T09:04:44Z", "raw_text": "This issue still persists in Firefox 30, but its resolution is explicitly provided by the HTML 5 spec:\n\n> 7.4.2 Focus management\n> [\u2026]\n> When an element that is focused stops being a focusable element, or stops being focused without another element being explicitly focused in its stead, the user agent should synchronously run the unfocusing steps for the affected element only.\n\nhttp://www.w3.org/TR/html5/editing.html#focus-management\n\nBecause a disabled element should neither maintain nor obtain focus, the keydown event's lack of firing will automatically cease to be a problem as soon as focus management is implemented correctly.", "creator": "fransdejonge@gmail.com", "author": "fransdejonge@gmail.com"}, {"creator": "github.wu-lee@noodlefactory.co.uk", "author": "github.wu-lee@noodlefactory.co.uk", "bug_id": 706773, "tags": [], "is_private": false, "count": 3, "id": 11334430, "text": "I think I am seeing this bug in 45.0.1 on Ubuntu Linux.  In the context of an AngularJS application: disabling a button which has been clicked results in all subsequent keyboard events being lost.", "time": "2016-04-18T15:37:20Z", "attachment_id": null, "raw_text": "I think I am seeing this bug in 45.0.1 on Ubuntu Linux.  In the context of an AngularJS application: disabling a button which has been clicked results in all subsequent keyboard events being lost.", "creation_time": "2016-04-18T15:37:20Z"}, {"author": "tobiwae@gmail.com", "creator": "tobiwae@gmail.com", "id": 11471903, "is_private": false, "count": 4, "tags": [], "bug_id": 706773, "raw_text": "This issue still exists in Firefox 47 on Windows. What's the best workaround for this?", "creation_time": "2016-06-08T10:17:39Z", "time": "2016-06-08T10:17:39Z", "attachment_id": null, "text": "This issue still exists in Firefox 47 on Windows. What's the best workaround for this?"}, {"author": "jerry@jvkooten.info", "creator": "jerry@jvkooten.info", "raw_text": "Firefox Developer Edition version 70.0b5 (64-bit) on Windows 10. This problem still exists, 8 years after this bug was opened, without an explanation whether this is acknowledged.", "creation_time": "2019-09-12T13:36:19Z", "time": "2019-09-12T13:36:19Z", "attachment_id": null, "text": "Firefox Developer Edition version 70.0b5 (64-bit) on Windows 10. This problem still exists, 8 years after this bug was opened, without an explanation whether this is acknowledged.", "id": 14357410, "count": 5, "is_private": false, "tags": [], "bug_id": 706773}, {"creator": "me@einarpersson.com", "author": "me@einarpersson.com", "tags": [], "count": 6, "is_private": false, "id": 14728586, "bug_id": 706773, "creation_time": "2020-04-01T09:52:38Z", "raw_text": "Firefox Quantum 68.6.0esr (64bit) running on Ubuntu 18.04\n\nSame thing here.\n\nHow can this remain an open unresolved bug 8 years after it has been reported?", "text": "Firefox Quantum 68.6.0esr (64bit) running on Ubuntu 18.04\n\nSame thing here.\n\nHow can this remain an open unresolved bug 8 years after it has been reported?", "time": "2020-04-01T09:52:38Z", "attachment_id": null}, {"raw_text": "Still seeing this on 78.0.2 (64bit) on Windows. If a button is disabled in response to a click event, no 'keydown' or 'keyup' events will fire for *any* element until you click somewhere else.\n\nExample (paste this in console in a new tab):\n```js\ndocument.write(\"<button id='but'>Click me</button>\");\ndocument.getElementById(\"but\").addEventListener(\"click\", function() { this.disabled=true; });\n\nwindow.addEventListener(\"keydown\", _=>{document.body.style=\"border: 2px solid red;\";}, true);\nwindow.addEventListener(\"keyup\", _=>{document.body.style=\"\"}, true);\n```\n\nPressing any key toggles a red border. If you click the button (even via a keypress), it stops working. Expected behavior (wc3 5.6.4) is that the key events keep firing. Confirmed that it works as expected in Chrome and Edge.\n\nThis example listens for `keydown` and `keyup` events on the window, but you get the same behavior if they're on any element, regardless of whether it contains the disabled button or not, and of whether you use bubbling or capturing. It appears that disabling the focus element immediately and completely disables all key handling until the next click. (The built-in tab key to change focus still works, though, and will also get out of the broken state.)\n\nThis breaks some usability shortcuts, and tracking of key up/down state, for things like games which are controlled by holding down a key.", "creation_time": "2020-07-25T14:56:10Z", "attachment_id": null, "time": "2020-07-25T14:56:10Z", "text": "Still seeing this on 78.0.2 (64bit) on Windows. If a button is disabled in response to a click event, no 'keydown' or 'keyup' events will fire for *any* element until you click somewhere else.\n\nExample (paste this in console in a new tab):\n```js\ndocument.write(\"<button id='but'>Click me</button>\");\ndocument.getElementById(\"but\").addEventListener(\"click\", function() { this.disabled=true; });\n\nwindow.addEventListener(\"keydown\", _=>{document.body.style=\"border: 2px solid red;\";}, true);\nwindow.addEventListener(\"keyup\", _=>{document.body.style=\"\"}, true);\n```\n\nPressing any key toggles a red border. If you click the button (even via a keypress), it stops working. Expected behavior (wc3 5.6.4) is that the key events keep firing. Confirmed that it works as expected in Chrome and Edge.\n\nThis example listens for `keydown` and `keyup` events on the window, but you get the same behavior if they're on any element, regardless of whether it contains the disabled button or not, and of whether you use bubbling or capturing. It appears that disabling the focus element immediately and completely disables all key handling until the next click. (The built-in tab key to change focus still works, though, and will also get out of the broken state.)\n\nThis breaks some usability shortcuts, and tracking of key up/down state, for things like games which are controlled by holding down a key.", "id": 14956182, "tags": [], "count": 7, "is_private": false, "bug_id": 706773, "author": "jpetkau@gmail.com", "creator": "jpetkau@gmail.com"}, {"bug_id": 706773, "is_private": false, "count": 8, "tags": [], "id": 14956198, "creator": "jpetkau@gmail.com", "text": "More info:\n\nWhen an active input element gets disabled, it remains the focus element (`document.activeElement`). This state (`document.activeElement.disabled=true`) is when the key events get lost.\n\nWhen focus is switched to some other element, the disabled element doesn't get a 'blur' event either.\n\nOther browsers change `activeElement` when an active input element gets disabled, and trigger `blur` events as normal for the element losing focus.\n\n[:hsinyi I think think bug should be in product 'Core', component 'DOM: Events'. Maybe that's why it's been sitting here unfixed for nine years. What's the right thing to do? Duplicate the new bug over there, or can someone edit the product field?]", "time": "2020-07-25T15:55:23Z", "attachment_id": null, "author": "jpetkau@gmail.com", "raw_text": "More info:\n\nWhen an active input element gets disabled, it remains the focus element (`document.activeElement`). This state (`document.activeElement.disabled=true`) is when the key events get lost.\n\nWhen focus is switched to some other element, the disabled element doesn't get a 'blur' event either.\n\nOther browsers change `activeElement` when an active input element gets disabled, and trigger `blur` events as normal for the element losing focus.\n\n[:hsinyi I think think bug should be in product 'Core', component 'DOM: Events'. Maybe that's why it's been sitting here unfixed for nine years. What's the right thing to do? Duplicate the new bug over there, or can someone edit the product field?]", "creation_time": "2020-07-25T15:55:23Z"}, {"creator": "htsai@mozilla.com", "author": "htsai@mozilla.com", "text": "Thanks! Moving to a better module.\nThere seem to be some related issues and I will group them together.", "attachment_id": null, "time": "2020-07-28T15:03:18Z", "creation_time": "2020-07-28T15:03:18Z", "raw_text": "Thanks! Moving to a better module.\nThere seem to be some related issues and I will group them together.", "bug_id": 706773, "count": 9, "is_private": false, "tags": [], "id": 14960388}]}}, "comments": {}}