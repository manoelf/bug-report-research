{"comments": {}, "bugs": {"670305": {"comments": [{"author": "LpSolit@gmail.com", "creator": "LpSolit@gmail.com", "time": "2011-07-09T02:01:21Z", "attachment_id": null, "text": "Currently, Bugzilla::Config::Auth uses hardcoded lists for user_info_class and user_verify_class:\n\n   name => 'user_info_class',\n   choices => [ 'CGI', 'Env', 'Env,CGI' ],\n\n   name => 'user_verify_class',\n   choices => [ 'DB', 'RADIUS', 'LDAP' ],\n\nThis means that if you add new authentication methods to the Bugzilla/Auth/Login/ and Bugzilla/Auth/Verify/ directories, then these lists must be updated manually. To avoid this problem, and to reflect what is really available, we should use Module::Pluggable (a module which is included in the core distribution of Perl) in Bugzilla::Auth::Login and Bugzilla::Auth::Verify.\n\nFor instance, Bugzilla::Auth::Login would have the following line:\n\n  use Module::Pluggable search_path => 'Bugzilla::Auth::Login',\n                        except      => 'Bugzilla::Auth::Login::Stack';\n\nAnd Bugzilla::Config::Auth would simply have this single call to get the list of available methods:\n\n  my @methods = Bugzilla::Auth::Login->new()->plugins;", "raw_text": "Currently, Bugzilla::Config::Auth uses hardcoded lists for user_info_class and user_verify_class:\n\n   name => 'user_info_class',\n   choices => [ 'CGI', 'Env', 'Env,CGI' ],\n\n   name => 'user_verify_class',\n   choices => [ 'DB', 'RADIUS', 'LDAP' ],\n\nThis means that if you add new authentication methods to the Bugzilla/Auth/Login/ and Bugzilla/Auth/Verify/ directories, then these lists must be updated manually. To avoid this problem, and to reflect what is really available, we should use Module::Pluggable (a module which is included in the core distribution of Perl) in Bugzilla::Auth::Login and Bugzilla::Auth::Verify.\n\nFor instance, Bugzilla::Auth::Login would have the following line:\n\n  use Module::Pluggable search_path => 'Bugzilla::Auth::Login',\n                        except      => 'Bugzilla::Auth::Login::Stack';\n\nAnd Bugzilla::Config::Auth would simply have this single call to get the list of available methods:\n\n  my @methods = Bugzilla::Auth::Login->new()->plugins;", "creation_time": "2011-07-09T02:01:21Z", "bug_id": 670305, "id": 5582235, "count": 0, "is_private": false, "tags": []}, {"creation_time": "2011-07-19T22:18:47Z", "raw_text": "Ah, except that some orders of modules in user_info_class are forbidden, so we'd also have to take that into account. (For example CGI,Env.) We could add some parameters like must_come_before to the Login modules, though--I imagine that would solve it.", "text": "Ah, except that some orders of modules in user_info_class are forbidden, so we'd also have to take that into account. (For example CGI,Env.) We could add some parameters like must_come_before to the Login modules, though--I imagine that would solve it.", "time": "2011-07-19T22:18:47Z", "attachment_id": null, "tags": [], "is_private": false, "count": 1, "id": 5600342, "bug_id": 670305, "creator": "mkanat@bugzilla.org", "author": "mkanat@bugzilla.org"}]}}}