{"comments": {}, "bugs": {"1630926": {"comments": [{"bug_id": 1630926, "tags": [], "is_private": false, "count": 0, "id": 14761207, "text": "Configure thusly (my build dir is a subdir of js/src):\n```\n../configure --enable-debug --disable-optimize --without-intl-api --enable-simulator=arm64\n```\nBuild as usual, then:\n```\n../jit-test/jit_test.py -f dist/bin/js wasm/multi-value\n```\nOn current mozilla-central (524560:48cefa8cc058) without any patches applied, the test multi-value/call-ref times out.\n\nSince this is a noopt debug build and a slow simulator it could just be an actual timeout, but the loop bound in that test is not *that* large, so filing this before investigating further.\n\n(Yesterday, on an older m-c, ion-inlining also timed out, but it does not do that with this version of m-c.)\n\nI have no idea why we're not seeing this failure on threeherder, as the arm64-sim tests are running there on a linux64-debug configuration.", "author": "lhansen@mozilla.com", "time": "2020-04-17T11:03:57Z", "attachment_id": null, "creator": "lhansen@mozilla.com", "creation_time": "2020-04-17T11:03:57Z", "raw_text": "Configure thusly (my build dir is a subdir of js/src):\n```\n../configure --enable-debug --disable-optimize --without-intl-api --enable-simulator=arm64\n```\nBuild as usual, then:\n```\n../jit-test/jit_test.py -f dist/bin/js wasm/multi-value\n```\nOn current mozilla-central (524560:48cefa8cc058) without any patches applied, the test multi-value/call-ref times out.\n\nSince this is a noopt debug build and a slow simulator it could just be an actual timeout, but the loop bound in that test is not *that* large, so filing this before investigating further.\n\n(Yesterday, on an older m-c, ion-inlining also timed out, but it does not do that with this version of m-c.)\n\nI have no idea why we're not seeing this failure on threeherder, as the arm64-sim tests are running there on a linux64-debug configuration."}, {"attachment_id": null, "creator": "lhansen@mozilla.com", "creation_time": "2020-04-17T11:12:38Z", "id": 14761221, "text": "Cutting the loop bound by a factor of 100 makes a test run of this case only finish in 3.7s so it's probably just a case of the test case being broken, but it would be good to look into it and then also ensure that the test finishes in a reasonable amount of time.\n\nIndeed with that hack, the run of all the multi-value tests takes 137s on my system in this configuration, suggesting there are some tests here that take a very long time.  Would be good to diagnose, maybe discuss if we can make them faster.", "time": "2020-04-17T11:12:38Z", "raw_text": "Cutting the loop bound by a factor of 100 makes a test run of this case only finish in 3.7s so it's probably just a case of the test case being broken, but it would be good to look into it and then also ensure that the test finishes in a reasonable amount of time.\n\nIndeed with that hack, the run of all the multi-value tests takes 137s on my system in this configuration, suggesting there are some tests here that take a very long time.  Would be good to diagnose, maybe discuss if we can make them faster.", "tags": [], "bug_id": 1630926, "count": 1, "is_private": false, "author": "lhansen@mozilla.com"}, {"author": "wingo@igalia.com", "text": "I took a look and I think the slowness is for four reasons that compound each other:\n\n  1. We don't get JIT entry or exit for wasm\n  2. JS and Wasm code is being simulated.  I checked and the JS is Ion-compiled, fwiw.\n  3. The simulator is being run without optimizations\n  4. The test has a not-small iteration count because it was inspired by CGC bugs like https://bugzilla.mozilla.org/show_bug.cgi?id=1609889#c9\n\nSome data, all run with --no-threads fwiw:\n\n  x64 release mode: 150ms\n  x64 debug mode, with optimizations: 1140 ms\n  x64 debug mode, no optimizations: 13416 ms\n  aarch64 simulator, release mode: 6430 ms\n  aarch64 simulator, debug mode, with optimizations: 51550 ms\n  aarch64 simulator, debug mode, no optimizations: 458006 ms\n\nSo to conclude -- for this test, running the simulator is about a 40x slowdown, running debug mode is around 10x, and disabling optimizations is another 10x or so.  What should we do here? :)", "id": 14765904, "count": 2, "is_private": false, "tags": [], "bug_id": 1630926, "creation_time": "2020-04-20T08:32:56Z", "raw_text": "I took a look and I think the slowness is for four reasons that compound each other:\n\n  1. We don't get JIT entry or exit for wasm\n  2. JS and Wasm code is being simulated.  I checked and the JS is Ion-compiled, fwiw.\n  3. The simulator is being run without optimizations\n  4. The test has a not-small iteration count because it was inspired by CGC bugs like https://bugzilla.mozilla.org/show_bug.cgi?id=1609889#c9\n\nSome data, all run with --no-threads fwiw:\n\n  x64 release mode: 150ms\n  x64 debug mode, with optimizations: 1140 ms\n  x64 debug mode, no optimizations: 13416 ms\n  aarch64 simulator, release mode: 6430 ms\n  aarch64 simulator, debug mode, with optimizations: 51550 ms\n  aarch64 simulator, debug mode, no optimizations: 458006 ms\n\nSo to conclude -- for this test, running the simulator is about a 40x slowdown, running debug mode is around 10x, and disabling optimizations is another 10x or so.  What should we do here? :)", "attachment_id": null, "creator": "wingo@igalia.com", "time": "2020-04-20T08:32:56Z"}, {"creation_time": "2020-04-20T12:35:01Z", "attachment_id": null, "creator": "lhansen@mozilla.com", "id": 14766284, "text": "OK, I guess I can live with it, as I am currently living with a number of timeouts for this testing combination.  I think I'm almost the only one using it - everyone else is using debug+optimize.", "raw_text": "OK, I guess I can live with it, as I am currently living with a number of timeouts for this testing combination.  I think I'm almost the only one using it - everyone else is using debug+optimize.", "time": "2020-04-20T12:35:01Z", "author": "lhansen@mozilla.com", "tags": [], "bug_id": 1630926, "count": 3, "is_private": false}]}}}