{"comments": {}, "bugs": {"682553": {"comments": [{"creation_time": "2011-08-27T13:52:31Z", "time": "2011-08-27T13:52:31Z", "creator": "waldheini@freenet.de", "author": "waldheini@freenet.de", "id": 5682579, "count": 0, "is_private": false, "tags": [], "text": "User Agent: Mozilla/5.0 (Windows NT 5.1; rv:6.0) Gecko/20100101 Firefox/6.0\nBuild ID: 20110811165603\n\nSteps to reproduce:\n\nI used Firefox 6.0 (OS: Win XP) to show animated GIFs in forums.\n\n\nActual results:\n\nMy Power Supply beeped every time I showed one or more animated GIFs exactly in the same rhythm as the Icons do.\nCPU Load is up to 30 % with one Icon, and much above with more than one Icon.\nThis behavior is highly reproducable, without exception.\nIron and Opera needs <2% with one Icon.\nIrfan View idles with the same downloaded Icon, _no_CPU_Load_is_visible_.\nIt's the same Problem with all my other Machines, only the percentage differs a little.\nWith the same percentage I can play 3D Games of high complexity.\n\n\nExpected results:\n\nCPU load should be much lower than 1%.\nIt is a general problem in the source, that wasn't recognized so far.\nThere can't be a good reason for this bug.\n\nI have an idea what could be the reason, although I didn't ever review the code:\n\nThe false implementation of the RAII principle:\n\nResources could be allocated and deallocated erroneously for each animation phase of a single GIF, although they're needed all the time.\n\nIn this case the whole bunch of code is\n\n1. pushed on the stack\n2. OS handles are requested\n3. memory is allocated\n4. code is executed (this is all that should be repeated)\n5. memory deallocated\n6. OS handles are freed\n7. the function exits\n8. the function repeats and repeats and ... (only No. 4 should be repeated)\n\nThis performance bug very often happens with Oo-Design.\n\nOnce initialized, there should be only an update, triggered through a timing mechanism. All resources should be allocated and deallocated within the scope of this object, and they should be reused as possible. The bug comes to life when instantiating _and_implicitly_initializing_ an object (of an maybe lower layer) again and again, because it doesn't update itself in the right manner, or it instantiates another object with each update, so constructor and destructor are called again and again ...\n\nA simple resource leak could be the reason either: Each animation phase could be falsely a single instance of the object. So there would be endless consumption of memory either.\n\nThe timing mechanism could be inefficient as well, too many tests, too much focused on precision over efficiency, but this is hypothetic.\n\nSo, with these three ideas in mind (it could be a combination of all three), you should have a Swiss Army knife to solve your problem.\n\nPlease read this article thoroughfully again. You could do your best to save the environment by reducing CPU cycles to almost 1...3 % of the actual amount.\n\nThank you very much for your interest and your great work!\n\nP.S.: Please excuse my poor (german) english (not so polite sounding, although I did my best).", "bug_id": 682553, "attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 5.1; rv:6.0) Gecko/20100101 Firefox/6.0\nBuild ID: 20110811165603\n\nSteps to reproduce:\n\nI used Firefox 6.0 (OS: Win XP) to show animated GIFs in forums.\n\n\nActual results:\n\nMy Power Supply beeped every time I showed one or more animated GIFs exactly in the same rhythm as the Icons do.\nCPU Load is up to 30 % with one Icon, and much above with more than one Icon.\nThis behavior is highly reproducable, without exception.\nIron and Opera needs <2% with one Icon.\nIrfan View idles with the same downloaded Icon, _no_CPU_Load_is_visible_.\nIt's the same Problem with all my other Machines, only the percentage differs a little.\nWith the same percentage I can play 3D Games of high complexity.\n\n\nExpected results:\n\nCPU load should be much lower than 1%.\nIt is a general problem in the source, that wasn't recognized so far.\nThere can't be a good reason for this bug.\n\nI have an idea what could be the reason, although I didn't ever review the code:\n\nThe false implementation of the RAII principle:\n\nResources could be allocated and deallocated erroneously for each animation phase of a single GIF, although they're needed all the time.\n\nIn this case the whole bunch of code is\n\n1. pushed on the stack\n2. OS handles are requested\n3. memory is allocated\n4. code is executed (this is all that should be repeated)\n5. memory deallocated\n6. OS handles are freed\n7. the function exits\n8. the function repeats and repeats and ... (only No. 4 should be repeated)\n\nThis performance bug very often happens with Oo-Design.\n\nOnce initialized, there should be only an update, triggered through a timing mechanism. All resources should be allocated and deallocated within the scope of this object, and they should be reused as possible. The bug comes to life when instantiating _and_implicitly_initializing_ an object (of an maybe lower layer) again and again, because it doesn't update itself in the right manner, or it instantiates another object with each update, so constructor and destructor are called again and again ...\n\nA simple resource leak could be the reason either: Each animation phase could be falsely a single instance of the object. So there would be endless consumption of memory either.\n\nThe timing mechanism could be inefficient as well, too many tests, too much focused on precision over efficiency, but this is hypothetic.\n\nSo, with these three ideas in mind (it could be a combination of all three), you should have a Swiss Army knife to solve your problem.\n\nPlease read this article thoroughfully again. You could do your best to save the environment by reducing CPU cycles to almost 1...3 % of the actual amount.\n\nThank you very much for your interest and your great work!\n\nP.S.: Please excuse my poor (german) english (not so polite sounding, although I did my best)."}, {"count": 1, "id": 5682891, "is_private": false, "time": "2011-08-27T21:18:36Z", "creation_time": "2011-08-27T21:18:36Z", "creator": "fmdevelopertim@gmail.com", "author": "fmdevelopertim@gmail.com", "attachment_id": null, "raw_text": "Does the issue still occur if you start Firefox in Safe Mode? http://support.mozilla.com/en-US/kb/Safe+Mode", "tags": [], "text": "Does the issue still occur if you start Firefox in Safe Mode? http://support.mozilla.com/en-US/kb/Safe+Mode", "bug_id": 682553}, {"creator": "acelists@atlas.sk", "creation_time": "2011-08-30T09:30:20Z", "time": "2011-08-30T09:30:20Z", "author": "acelists@atlas.sk", "is_private": false, "id": 5687231, "count": 2, "tags": [], "text": "Is this bug 595671 or bug 615063?\nAnd please provide any test URL where you can see this.", "bug_id": 682553, "attachment_id": null, "raw_text": "Is this bug 595671 or bug 615063?\nAnd please provide any test URL where you can see this."}]}}}