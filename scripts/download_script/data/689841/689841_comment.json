{"comments": {}, "bugs": {"689841": {"comments": [{"attachment_id": null, "raw_text": "Menus are UI element that doesn't get DOM focus, I don't see a reason why ARIA menu must be different. Getting this as a start point we should allow aria-activedescendant to change the focus when menu doesn't have DOM focus.\n\nUse case of this behavior is http://hanshillen.github.com/jqtest/#goto_autocomplete. DOM focus stays on autocomplete textbox while autocomplete menu menuitems are managed by active-descendant.\n\nAs far as I can see it doesn't break \"must section\" of ARIA spec \n(http://www.w3.org/TR/wai-aria-implementation/#keyboard-focus_aria-activedescendant)\n\nHowever takeFocus section doesn't allow us to set menuitem focused in this case\n(http://www.w3.org/TR/wai-aria-implementation/#keyboard-focus_at) because we must focus container and if successful to change aria-activedescendant. In this case menu is container and it's not focusable.\n\nI filed bug to w3c http://www.w3.org/Bugs/Public/show_bug.cgi?id=14320", "tags": [], "bug_id": 689841, "text": "Menus are UI element that doesn't get DOM focus, I don't see a reason why ARIA menu must be different. Getting this as a start point we should allow aria-activedescendant to change the focus when menu doesn't have DOM focus.\n\nUse case of this behavior is http://hanshillen.github.com/jqtest/#goto_autocomplete. DOM focus stays on autocomplete textbox while autocomplete menu menuitems are managed by active-descendant.\n\nAs far as I can see it doesn't break \"must section\" of ARIA spec \n(http://www.w3.org/TR/wai-aria-implementation/#keyboard-focus_aria-activedescendant)\n\nHowever takeFocus section doesn't allow us to set menuitem focused in this case\n(http://www.w3.org/TR/wai-aria-implementation/#keyboard-focus_at) because we must focus container and if successful to change aria-activedescendant. In this case menu is container and it's not focusable.\n\nI filed bug to w3c http://www.w3.org/Bugs/Public/show_bug.cgi?id=14320", "is_private": false, "id": 5742200, "count": 0, "creator": "surkov.alexander@gmail.com", "time": "2011-09-28T03:22:09Z", "creation_time": "2011-09-28T03:22:09Z", "author": "surkov.alexander@gmail.com"}, {"creator": "jteh@mozilla.com", "time": "2011-09-28T04:10:47Z", "creation_time": "2011-09-28T04:10:47Z", "author": "jteh@mozilla.com", "is_private": false, "id": 5742252, "count": 1, "tags": [], "text": "Because aria-activedescendant specifies the active descendant of a given element, authors may not expect it to suddenly gain focus when they set it. For example, when creating a list (but not focusing it), the page might set aria-activedescendant to the first list item so that this item will receive focus when the list is focused. Therefore, if this is implemented, I think it should be restricted to menus.\n\nOne further issue is demonstrated by the following (admittedly unlikely) scenario where there are two visible menus:\n1. menu1 appears. aria-activedescendant on menu1 is set to menu1item1. The page sets focus to menu1, which causes menu1item1 to receive focus.\n2. menu2 appears. aria-activedescendant on menu2 is set to menu2item1, but this is only so that menu2item1 will gain focus when focus is set to menu2. However, focus remains on menu1 for now.\nIf this bug is implemented, the AT will be informed that menu2item1 has the focus, even though the keyboard focus is still on menu1.", "bug_id": 689841, "attachment_id": null, "raw_text": "Because aria-activedescendant specifies the active descendant of a given element, authors may not expect it to suddenly gain focus when they set it. For example, when creating a list (but not focusing it), the page might set aria-activedescendant to the first list item so that this item will receive focus when the list is focused. Therefore, if this is implemented, I think it should be restricted to menus.\n\nOne further issue is demonstrated by the following (admittedly unlikely) scenario where there are two visible menus:\n1. menu1 appears. aria-activedescendant on menu1 is set to menu1item1. The page sets focus to menu1, which causes menu1item1 to receive focus.\n2. menu2 appears. aria-activedescendant on menu2 is set to menu2item1, but this is only so that menu2item1 will gain focus when focus is set to menu2. However, focus remains on menu1 for now.\nIf this bug is implemented, the AT will be informed that menu2item1 has the focus, even though the keyboard focus is still on menu1."}, {"bug_id": 689841, "text": "That should be restricted to visible menus, if menu is visible then we might want to not require it be focused.\n\nTaking into account second scenario (event it's sort of crazy because only one menu should be visible at a time) it doesn't sound that the guess about focus on our side is really good idea and it's quite possible it's better to require the author to deal with focus explicitly. But I wonder what should have DOM focus in case of ARIA context menus?", "tags": [], "attachment_id": null, "raw_text": "That should be restricted to visible menus, if menu is visible then we might want to not require it be focused.\n\nTaking into account second scenario (event it's sort of crazy because only one menu should be visible at a time) it doesn't sound that the guess about focus on our side is really good idea and it's quite possible it's better to require the author to deal with focus explicitly. But I wonder what should have DOM focus in case of ARIA context menus?", "time": "2011-09-28T07:53:21Z", "creation_time": "2011-09-28T07:53:21Z", "creator": "surkov.alexander@gmail.com", "author": "surkov.alexander@gmail.com", "id": 5742501, "count": 2, "is_private": false}, {"creator": "surkov.alexander@gmail.com", "time": "2011-09-28T08:03:26Z", "creation_time": "2011-09-28T08:03:26Z", "author": "surkov.alexander@gmail.com", "is_private": false, "id": 5742518, "count": 3, "bug_id": 689841, "text": "We might want to say that menus suggestion is wontfix but we should figure out how to make ARIA autocomplete widgets accessible.\n\nSuggestion would be is that autocomplete popup is allowed to manage the focused item via aria-activedescendant when it doesn't have DOM focus but its autcomplete widget has. The ARIA widget is autocomplete popup if it has ARIA menu role and contained by autocomplete widget or pointed by aria-owns. Sounds reasonable?", "tags": [], "attachment_id": null, "raw_text": "We might want to say that menus suggestion is wontfix but we should figure out how to make ARIA autocomplete widgets accessible.\n\nSuggestion would be is that autocomplete popup is allowed to manage the focused item via aria-activedescendant when it doesn't have DOM focus but its autcomplete widget has. The ARIA widget is autocomplete popup if it has ARIA menu role and contained by autocomplete widget or pointed by aria-owns. Sounds reasonable?"}]}}}