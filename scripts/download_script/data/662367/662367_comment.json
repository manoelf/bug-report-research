{"bugs": {"662367": {"comments": [{"is_private": false, "id": 5515870, "count": 0, "author": "jonathan.protzenko@gmail.com", "creator": "jonathan.protzenko@gmail.com", "time": "2011-06-06T20:27:21Z", "creation_time": "2011-06-06T20:27:21Z", "raw_text": "Some functions defined in mail/base/content either:\n- require a mail:3pane to be open although it makes no sense for them to do so, hence making them inaccessible unless a 3pane is open, or\n- operate on selected messages, thus requiring extension authors to rewrite their own copies of the thing to operate on any set of messages.\n\nHere's a non exhaustive list:\ngetIdentityForHeader, ViewPageSource, getCardForEmail, AttachmentInfo, HandleMultipleAttachments, openAttachment, saveAttachment, get the phishing detector, MsgFilters, BatchMessageMover\n\nOther functions I designed in thunderbird-stdlib could probably generalize some routines that only operate on selected messages:\n- mark messages as read,\n- tag a message with an arbitrary set of messages (which implies first removing some tags, then adding other ones)...\n\nI also don't know what's going to happen when we stream messages (e.g. standalone conversation tab) without a 3pane open. What with the msgHeaderSink? What with the msgWindow? I once remember trying to pass my own msgWindow to DisplayMessage, and it failed badly: bad formatting, no smileys... although I need to try again.\n\nThere's also bug 561859 that I never had the courage to tackle (and that would definitely require a lot of work).", "attachment_id": null, "tags": [], "text": "Some functions defined in mail/base/content either:\n- require a mail:3pane to be open although it makes no sense for them to do so, hence making them inaccessible unless a 3pane is open, or\n- operate on selected messages, thus requiring extension authors to rewrite their own copies of the thing to operate on any set of messages.\n\nHere's a non exhaustive list:\ngetIdentityForHeader, ViewPageSource, getCardForEmail, AttachmentInfo, HandleMultipleAttachments, openAttachment, saveAttachment, get the phishing detector, MsgFilters, BatchMessageMover\n\nOther functions I designed in thunderbird-stdlib could probably generalize some routines that only operate on selected messages:\n- mark messages as read,\n- tag a message with an arbitrary set of messages (which implies first removing some tags, then adding other ones)...\n\nI also don't know what's going to happen when we stream messages (e.g. standalone conversation tab) without a 3pane open. What with the msgHeaderSink? What with the msgWindow? I once remember trying to pass my own msgWindow to DisplayMessage, and it failed badly: bad formatting, no smileys... although I need to try again.\n\nThere's also bug 561859 that I never had the courage to tackle (and that would definitely require a lot of work).", "bug_id": 662367}, {"is_private": false, "count": 1, "id": 5557372, "author": "jporterbugs@gmail.com", "creator": "jporterbugs@gmail.com", "time": "2011-06-26T20:12:45Z", "creation_time": "2011-06-26T20:12:45Z", "raw_text": "On this subject, I wouldn't mind seeing functions to open a message in a new tab or in a conversation in MailUtils.js.", "attachment_id": null, "bug_id": 662367, "text": "On this subject, I wouldn't mind seeing functions to open a message in a new tab or in a conversation in MailUtils.js.", "tags": []}, {"count": 2, "id": 5588517, "is_private": false, "creation_time": "2011-07-13T08:22:51Z", "time": "2011-07-13T08:22:51Z", "creator": "jporterbugs@gmail.com", "author": "jporterbugs@gmail.com", "attachment_id": null, "raw_text": "This is only tangentially relevant, but I think I'd like it if getIdentityForHeader was implemented in C++ so that the code I touched in bug 64267 could take advantage of it too.", "bug_id": 662367, "text": "This is only tangentially relevant, but I think I'd like it if getIdentityForHeader was implemented in C++ so that the code I touched in bug 64267 could take advantage of it too.", "tags": []}, {"tags": [], "bug_id": 662367, "text": "+1", "attachment_id": null, "raw_text": "+1", "creation_time": "2011-10-26T17:19:58Z", "time": "2011-10-26T17:19:58Z", "creator": "ben.bucksch@beonex.com", "author": "ben.bucksch@beonex.com", "id": 5806564, "count": 3, "is_private": false}, {"author": "jonathan.protzenko@gmail.com", "creator": "jonathan.protzenko@gmail.com", "creation_time": "2011-11-27T20:25:36Z", "time": "2011-11-27T20:25:36Z", "is_private": false, "id": 5874503, "count": 4, "text": "Created attachment 577156\nWIP patch\n\nHere's a patch with all the work I did so far. The part that bit me was that getIdentityForHeader takes a msgHdr parameter: this hints that the function will return, as one may surmise, the identity for that header. This is a bald-faced lie. The function actually uses a variable that's in the global scope, called currentHeaderData. So this function actually works properly if and only if the header you want the identity for happens to be the currently selected message. I may have shouted \"WTF?\" at this point :).\n\nThe first solution consists in adding the last delivered-to header in the nsIMsgDBHdr, that is, in the msf files, so that the function can recover the correct information. This may bloat the size of the msf files, which we want to avoid as much as possible.\n\nThe second solution consists in making this function asynchronous, which will in turn force all other callers to be asynchronous too, which will be a major pain to implement.\n\nI don't remember if I imported all the functions I wanted. There's certainly much work left to do (just for reference, all the functions we may want to import are lying there https://github.com/protz/thunderbird-stdlib) but it's mostly replacing built-in functions so that they use the newer ones (which will in turn make sure the newer ones work properly). Functions like MsgDeleteSelectedMessages or ToggleMessageTagKey are probably covered by tests, and making sure they're just proxies for the newer functions will probably be enough to make sure everything's working fine.\n\nWe may want to expose even more functions, like folderIsInbox...", "bug_id": 662367, "tags": [], "raw_text": "Here's a patch with all the work I did so far. The part that bit me was that getIdentityForHeader takes a msgHdr parameter: this hints that the function will return, as one may surmise, the identity for that header. This is a bald-faced lie. The function actually uses a variable that's in the global scope, called currentHeaderData. So this function actually works properly if and only if the header you want the identity for happens to be the currently selected message. I may have shouted \"WTF?\" at this point :).\n\nThe first solution consists in adding the last delivered-to header in the nsIMsgDBHdr, that is, in the msf files, so that the function can recover the correct information. This may bloat the size of the msf files, which we want to avoid as much as possible.\n\nThe second solution consists in making this function asynchronous, which will in turn force all other callers to be asynchronous too, which will be a major pain to implement.\n\nI don't remember if I imported all the functions I wanted. There's certainly much work left to do (just for reference, all the functions we may want to import are lying there https://github.com/protz/thunderbird-stdlib) but it's mostly replacing built-in functions so that they use the newer ones (which will in turn make sure the newer ones work properly). Functions like MsgDeleteSelectedMessages or ToggleMessageTagKey are probably covered by tests, and making sure they're just proxies for the newer functions will probably be enough to make sure everything's working fine.\n\nWe may want to expose even more functions, like folderIsInbox...", "attachment_id": 577156}]}}, "comments": {}}