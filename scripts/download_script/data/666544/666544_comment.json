{"comments": {}, "bugs": {"666544": {"comments": [{"author": "faulkner.steve@gmail.com", "creator": "faulkner.steve@gmail.com", "id": 5550690, "tags": [], "is_private": false, "count": 0, "bug_id": 666544, "creation_time": "2011-06-23T11:26:07Z", "raw_text": "User-Agent:       Mozilla/5.0 (Windows NT 6.0; rv:6.0a2) Gecko/20110618 Firefox/6.0a2\nBuild Identifier: Mozilla/5.0 (Windows NT 6.0; rv:6.0a2) Gecko/20110618 Firefox/6.0a2\n\nthe presence of the html5 required results in both the alert high and alert low states being present although the form has not been submitted. this translates to the user being told a text field is invalid when it recieves focus\n\nReproducible: Always\n\nSteps to Reproduce:\n1.go to http://www.html5accessibility.com/tests/form-describedby.html\n2. focus on the first input (has a required attribute)\n3. use an inspect tool to see \n\"State:\tfocused,focusable,alert low,alert high\"\n\n\n\nActual Results:  \ntext input (name) with required attribute has \"State:\tfocused,focusable,alert low,alert high\"\n\nExpected Results:  \nbefore user attempts to submit: text input with required attribute has \"State:\tfocused,focusable,alert low\"\nafter user attempts to submit:\ntext input with required attribute has \"State:\tfocused,focusable,alert low,alert high\"\n\nnote: text input (age) has aria-required instead, it only has the alert low state.", "attachment_id": null, "time": "2011-06-23T11:26:07Z", "text": "User-Agent:       Mozilla/5.0 (Windows NT 6.0; rv:6.0a2) Gecko/20110618 Firefox/6.0a2\nBuild Identifier: Mozilla/5.0 (Windows NT 6.0; rv:6.0a2) Gecko/20110618 Firefox/6.0a2\n\nthe presence of the html5 required results in both the alert high and alert low states being present although the form has not been submitted. this translates to the user being told a text field is invalid when it recieves focus\n\nReproducible: Always\n\nSteps to Reproduce:\n1.go to http://www.html5accessibility.com/tests/form-describedby.html\n2. focus on the first input (has a required attribute)\n3. use an inspect tool to see \n\"State:\tfocused,focusable,alert low,alert high\"\n\n\n\nActual Results:  \ntext input (name) with required attribute has \"State:\tfocused,focusable,alert low,alert high\"\n\nExpected Results:  \nbefore user attempts to submit: text input with required attribute has \"State:\tfocused,focusable,alert low\"\nafter user attempts to submit:\ntext input with required attribute has \"State:\tfocused,focusable,alert low,alert high\"\n\nnote: text input (age) has aria-required instead, it only has the alert low state."}, {"tags": [], "count": 1, "is_private": false, "id": 5550798, "bug_id": 666544, "creation_time": "2011-06-23T12:39:57Z", "raw_text": "(In reply to comment #0)\n> 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> 2. focus on the first input (has a required attribute)\n> 3. use an inspect tool to see \n> \"State:\tfocused,focusable,alert low,alert high\"\n\nThis is correct and so set by the engine's HTML5 validation, to which the a11y APIs just react. As soon as you type a letter into the box, the \"invalid\" state clears. As soon as you remove that letter, the \"invalid\" state returns. This is not just a11y APIs, but if you query the element's validity via JS at these two points, you'll get these answers back, too.\n\nAnd since an empty required field is not valid, this is not a bug.\n\n> note: text input (age) has aria-required instead, it only has the alert low\n> state.\n\nRight, since the ARIA-invalid state must be set via JS, and thus one has to implement their own validation in JS to accomplish the same.", "text": "(In reply to comment #0)\n> 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> 2. focus on the first input (has a required attribute)\n> 3. use an inspect tool to see \n> \"State:\tfocused,focusable,alert low,alert high\"\n\nThis is correct and so set by the engine's HTML5 validation, to which the a11y APIs just react. As soon as you type a letter into the box, the \"invalid\" state clears. As soon as you remove that letter, the \"invalid\" state returns. This is not just a11y APIs, but if you query the element's validity via JS at these two points, you'll get these answers back, too.\n\nAnd since an empty required field is not valid, this is not a bug.\n\n> note: text input (age) has aria-required instead, it only has the alert low\n> state.\n\nRight, since the ARIA-invalid state must be set via JS, and thus one has to implement their own validation in JS to accomplish the same.", "attachment_id": null, "time": "2011-06-23T12:39:57Z", "creator": "marco.zehe@gmail.com", "author": "marco.zehe@gmail.com"}, {"creator": "faulkner.steve@gmail.com", "author": "faulkner.steve@gmail.com", "tags": [], "count": 2, "is_private": false, "id": 5550807, "bug_id": 666544, "raw_text": "(In reply to comment #1)\n> (In reply to comment #0)\n> > 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> > 2. focus on the first input (has a required attribute)\n> > 3. use an inspect tool to see \n> > \"State:\tfocused,focusable,alert low,alert high\"\n> \n> This is correct and so set by the engine's HTML5 validation, to which the\n> a11y APIs just react. As soon as you type a letter into the box, the\n> \"invalid\" state clears. As soon as you remove that letter, the \"invalid\"\n> state returns. This is not just a11y APIs, but if you query the element's\n> validity via JS at these two points, you'll get these answers back, too.\n> \n> And since an empty required field is not valid, this is not a bug.\n> \n> > note: text input (age) has aria-required instead, it only has the alert low\n> > state.\n> \n> Right, since the ARIA-invalid state must be set via JS, and thus one has to\n> implement their own validation in JS to accomplish the same.\n\nseems odd, since sighted users do not get told there is an issue until the user attempts to submit the form.", "creation_time": "2011-06-23T12:45:34Z", "text": "(In reply to comment #1)\n> (In reply to comment #0)\n> > 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> > 2. focus on the first input (has a required attribute)\n> > 3. use an inspect tool to see \n> > \"State:\tfocused,focusable,alert low,alert high\"\n> \n> This is correct and so set by the engine's HTML5 validation, to which the\n> a11y APIs just react. As soon as you type a letter into the box, the\n> \"invalid\" state clears. As soon as you remove that letter, the \"invalid\"\n> state returns. This is not just a11y APIs, but if you query the element's\n> validity via JS at these two points, you'll get these answers back, too.\n> \n> And since an empty required field is not valid, this is not a bug.\n> \n> > note: text input (age) has aria-required instead, it only has the alert low\n> > state.\n> \n> Right, since the ARIA-invalid state must be set via JS, and thus one has to\n> implement their own validation in JS to accomplish the same.\n\nseems odd, since sighted users do not get told there is an issue until the user attempts to submit the form.", "time": "2011-06-23T12:45:34Z", "attachment_id": null}, {"creator": "faulkner.steve@gmail.com", "author": "faulkner.steve@gmail.com", "tags": [], "is_private": false, "count": 3, "id": 5550827, "bug_id": 666544, "creation_time": "2011-06-23T12:53:17Z", "raw_text": "(In reply to comment #2)\n> (In reply to comment #1)\n> > (In reply to comment #0)\n> > > 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> > > 2. focus on the first input (has a required attribute)\n> > > 3. use an inspect tool to see \n> > > \"State:\tfocused,focusable,alert low,alert high\"\n> > \n> > This is correct and so set by the engine's HTML5 validation, to which the\n> > a11y APIs just react. As soon as you type a letter into the box, the\n> > \"invalid\" state clears. As soon as you remove that letter, the \"invalid\"\n> > state returns. This is not just a11y APIs, but if you query the element's\n> > validity via JS at these two points, you'll get these answers back, too.\n> > \n> > And since an empty required field is not valid, this is not a bug.\n> > \n> > > note: text input (age) has aria-required instead, it only has the alert low\n> > > state.\n> > \n> > Right, since the ARIA-invalid state must be set via JS, and thus one has to\n> > implement their own validation in JS to accomplish the same.\n> \n> seems odd, since sighted users do not get told there is an issue until the\n> user attempts to submit the form.\n\nactually a red border appears around a text field with a required attribute if the user types something into the text field, then removes it, but not if the user tabs through it without entering anything.An error message is shown after the user attempts to submit the form.", "text": "(In reply to comment #2)\n> (In reply to comment #1)\n> > (In reply to comment #0)\n> > > 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> > > 2. focus on the first input (has a required attribute)\n> > > 3. use an inspect tool to see \n> > > \"State:\tfocused,focusable,alert low,alert high\"\n> > \n> > This is correct and so set by the engine's HTML5 validation, to which the\n> > a11y APIs just react. As soon as you type a letter into the box, the\n> > \"invalid\" state clears. As soon as you remove that letter, the \"invalid\"\n> > state returns. This is not just a11y APIs, but if you query the element's\n> > validity via JS at these two points, you'll get these answers back, too.\n> > \n> > And since an empty required field is not valid, this is not a bug.\n> > \n> > > note: text input (age) has aria-required instead, it only has the alert low\n> > > state.\n> > \n> > Right, since the ARIA-invalid state must be set via JS, and thus one has to\n> > implement their own validation in JS to accomplish the same.\n> \n> seems odd, since sighted users do not get told there is an issue until the\n> user attempts to submit the form.\n\nactually a red border appears around a text field with a required attribute if the user types something into the text field, then removes it, but not if the user tabs through it without entering anything.An error message is shown after the user attempts to submit the form.", "attachment_id": null, "time": "2011-06-23T12:53:17Z"}, {"author": "faulkner.steve@gmail.com", "creator": "faulkner.steve@gmail.com", "attachment_id": null, "time": "2011-06-23T13:10:04Z", "text": "(In reply to comment #1)\n> (In reply to comment #0)\n> > 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> > 2. focus on the first input (has a required attribute)\n> > 3. use an inspect tool to see \n> > \"State:\tfocused,focusable,alert low,alert high\"\n> \n> This is correct and so set by the engine's HTML5 validation, to which the\n> a11y APIs just react. As soon as you type a letter into the box, the\n> \"invalid\" state clears. As soon as you remove that letter, the \"invalid\"\n> state returns. This is not just a11y APIs, but if you query the element's\n> validity via JS at these two points, you'll get these answers back, too.\n> \n> And since an empty required field is not valid, this is not a bug.\n> \n> > note: text input (age) has aria-required instead, it only has the alert low\n> > state.\n> \n> Right, since the ARIA-invalid state must be set via JS, and thus one has to\n> implement their own validation in JS to accomplish the same.\n\nDo you think we should be advising authors to also set aria-invalid=true on text fields that are required so the same states (alert low,alert high) are conveyed and the user gets the same message  aswith required?", "raw_text": "(In reply to comment #1)\n> (In reply to comment #0)\n> > 1.go to http://www.html5accessibility.com/tests/form-describedby.html\n> > 2. focus on the first input (has a required attribute)\n> > 3. use an inspect tool to see \n> > \"State:\tfocused,focusable,alert low,alert high\"\n> \n> This is correct and so set by the engine's HTML5 validation, to which the\n> a11y APIs just react. As soon as you type a letter into the box, the\n> \"invalid\" state clears. As soon as you remove that letter, the \"invalid\"\n> state returns. This is not just a11y APIs, but if you query the element's\n> validity via JS at these two points, you'll get these answers back, too.\n> \n> And since an empty required field is not valid, this is not a bug.\n> \n> > note: text input (age) has aria-required instead, it only has the alert low\n> > state.\n> \n> Right, since the ARIA-invalid state must be set via JS, and thus one has to\n> implement their own validation in JS to accomplish the same.\n\nDo you think we should be advising authors to also set aria-invalid=true on text fields that are required so the same states (alert low,alert high) are conveyed and the user gets the same message  aswith required?", "creation_time": "2011-06-23T13:10:04Z", "bug_id": 666544, "id": 5550849, "is_private": false, "count": 4, "tags": []}, {"bug_id": 666544, "id": 5558496, "count": 5, "is_private": false, "tags": [], "attachment_id": null, "time": "2011-06-27T13:19:19Z", "author": "richschwer@gmail.com", "creator": "richschwer@gmail.com", "text": "The field should not be marked invalid unless the field is set with an invalid value or the user has actually entered an invalid value. \n\nALL users need to know that something was done incorrectly and not just AT users.", "raw_text": "The field should not be marked invalid unless the field is set with an invalid value or the user has actually entered an invalid value. \n\nALL users need to know that something was done incorrectly and not just AT users.", "creation_time": "2011-06-27T13:19:19Z"}, {"raw_text": "alert-low and alert-high MSAA states are used for required and invalid control states accordingly, that is a hack for old screen readers introduced before IA2. So is there anything we should fix here? wontfix?", "creation_time": "2012-02-08T12:06:03Z", "text": "alert-low and alert-high MSAA states are used for required and invalid control states accordingly, that is a hack for old screen readers introduced before IA2. So is there anything we should fix here? wontfix?", "attachment_id": null, "time": "2012-02-08T12:06:03Z", "count": 6, "is_private": false, "tags": [], "id": 6043430, "bug_id": 666544, "creator": "surkov.alexander@gmail.com", "author": "surkov.alexander@gmail.com"}]}}}