{"bugs": {"650797": {"comments": [{"tags": [], "raw_text": "User-Agent:       Mozilla/5.0 (X11; Linux i686; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Mozilla/5.0 (X11; Linux i686; rv:2.0) Gecko/20100101 Firefox/4.0\n\nIf in an animate values list the list items represent points lists for\npolyline or polygon, it is possible, that those lists consist of different\nnumbers of points. At least for points there is no continouos animation possible, if the numbers of points differ.\nIn SVG tiny 1.2 the behaviour is defined to be the same as for the corresponding\nd attribute of a path - and for this it is defined, that there is only discrete\nanimation possible, if the commands or number of segments differ.\nIn SVG 1.1 there is no equivalence to path d defined, however the definiton of\ncalcMode says: \"The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \u2018calcMode\u2019 attribute is ignored and discrete interpolation is used.\" - Clearly because continuous\nanimation is not possible, if the number of points differ, the default calcMode\nhas to be discrete.\n\nThe example tests this - there should be no red, if the timing and the\nimplication of the calcMode works properly.\n\nUnforunately firefox (and other viewers) ignore the definitions and provide a mix of continuous and discrete animation with obscure timing with the result, that practically authors are forced to set always the calcMode explictly to get\na defined and predictable behaviour. Such a mix would require a new calcMode\nvalue - for example 'auto' (including a precise definition of the timing), to get such a behaviour - in anyone needs this, however this did not happen up\nto now ;o)\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Try the example given at the URI above\n2. Compare with source code, desc(ription), specifications\nActual Results:  \nMixture of continous and discrete animation, obscure timing, therefore something\nred gets visible.\n\nExpected Results:  \nThe calcMode discrete should be detected automatically, looking both on \nattribueName and the provided values list.\n\nFor the sample, the implicated calcMode has to be discrete, this means there\nwill be no red get visible in the animation.", "creation_time": "2011-04-18T14:51:32Z", "bug_id": 650797, "is_private": false, "id": 5415665, "time": "2011-04-18T14:51:32Z", "creator": "dr.o.hoffmann@gmx.de", "attachment_id": null, "count": 0, "text": "User-Agent:       Mozilla/5.0 (X11; Linux i686; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Mozilla/5.0 (X11; Linux i686; rv:2.0) Gecko/20100101 Firefox/4.0\n\nIf in an animate values list the list items represent points lists for\npolyline or polygon, it is possible, that those lists consist of different\nnumbers of points. At least for points there is no continouos animation possible, if the numbers of points differ.\nIn SVG tiny 1.2 the behaviour is defined to be the same as for the corresponding\nd attribute of a path - and for this it is defined, that there is only discrete\nanimation possible, if the commands or number of segments differ.\nIn SVG 1.1 there is no equivalence to path d defined, however the definiton of\ncalcMode says: \"The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \u2018calcMode\u2019 attribute is ignored and discrete interpolation is used.\" - Clearly because continuous\nanimation is not possible, if the number of points differ, the default calcMode\nhas to be discrete.\n\nThe example tests this - there should be no red, if the timing and the\nimplication of the calcMode works properly.\n\nUnforunately firefox (and other viewers) ignore the definitions and provide a mix of continuous and discrete animation with obscure timing with the result, that practically authors are forced to set always the calcMode explictly to get\na defined and predictable behaviour. Such a mix would require a new calcMode\nvalue - for example 'auto' (including a precise definition of the timing), to get such a behaviour - in anyone needs this, however this did not happen up\nto now ;o)\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Try the example given at the URI above\n2. Compare with source code, desc(ription), specifications\nActual Results:  \nMixture of continous and discrete animation, obscure timing, therefore something\nred gets visible.\n\nExpected Results:  \nThe calcMode discrete should be detected automatically, looking both on \nattribueName and the provided values list.\n\nFor the sample, the implicated calcMode has to be discrete, this means there\nwill be no red get visible in the animation.", "author": "dr.o.hoffmann@gmx.de"}]}}, "comments": {}}