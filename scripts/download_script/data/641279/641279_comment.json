{"comments": {}, "bugs": {"641279": {"comments": [{"author": "songlinhai@163.com", "creator": "songlinhai@163.com", "text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15\nBuild Identifier: potential performance waste caused by sprintf\n\n/firefox-4.0b11.source/security/nss/cmd/lib/secutil.c:4111\n           sprintf(dst, \"%02x\", *src++);\n/firefox-4.0b11.source/security/nss/cmd/certutil/certutil.c:776\n           sprintf(dst, \"%02x\", *src++);\n\nAfter reading mozilla codes, I find these two code fragments. Using this method to convert a number into a string which represents the related hex number is very slow.\n\nThis is a patch:\n\nstatic void array_to_hex( char * to , const char * str , unsigned char  len )\n{\n    const char * str_end = str + len;\n    for( ; str != str_end ; ++ str )\n    {\n       *to++ = _dig_vec_lower[ ((unsigned char) *str) >> 4 ];\n       *to++ = _dig_vec_lower[ ((unsigned char) *str) & 0x0F ];\n    }\n}\n\nIn my unit test, my patch run as 7 times faster as these two code fragments I find. If these two code fragments will be executed many times, I believe it can slow down the whole application. \n\nI suggest that we should fix these two bugs. \n\n\nReproducible: Always\n\nSteps to Reproduce:\n1.code review\n2.\n3.", "attachment_id": null, "id": 5341554, "creation_time": "2011-03-13T02:57:50Z", "tags": [], "is_private": false, "time": "2011-03-13T02:57:50Z", "count": 0, "bug_id": 641279, "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15\nBuild Identifier: potential performance waste caused by sprintf\n\n/firefox-4.0b11.source/security/nss/cmd/lib/secutil.c:4111\n           sprintf(dst, \"%02x\", *src++);\n/firefox-4.0b11.source/security/nss/cmd/certutil/certutil.c:776\n           sprintf(dst, \"%02x\", *src++);\n\nAfter reading mozilla codes, I find these two code fragments. Using this method to convert a number into a string which represents the related hex number is very slow.\n\nThis is a patch:\n\nstatic void array_to_hex( char * to , const char * str , unsigned char  len )\n{\n    const char * str_end = str + len;\n    for( ; str != str_end ; ++ str )\n    {\n       *to++ = _dig_vec_lower[ ((unsigned char) *str) >> 4 ];\n       *to++ = _dig_vec_lower[ ((unsigned char) *str) & 0x0F ];\n    }\n}\n\nIn my unit test, my patch run as 7 times faster as these two code fragments I find. If these two code fragments will be executed many times, I believe it can slow down the whole application. \n\nI suggest that we should fix these two bugs. \n\n\nReproducible: Always\n\nSteps to Reproduce:\n1.code review\n2.\n3."}, {"count": 1, "bug_id": 641279, "raw_text": "Ce Zhang, can you provide a proper patch against the current trunk cvs ?\n\nMore Documentation on our processes are at https://developer.mozilla.org/En/Developer_Guide/How_to_Submit_a_Patch and  https://developer.mozilla.org/en/Creating_a_patch .", "tags": [], "is_private": false, "time": "2011-03-14T08:44:24Z", "creation_time": "2011-03-14T08:44:24Z", "author": "ludovic@hirlimann.net", "text": "Ce Zhang, can you provide a proper patch against the current trunk cvs ?\n\nMore Documentation on our processes are at https://developer.mozilla.org/En/Developer_Guide/How_to_Submit_a_Patch and  https://developer.mozilla.org/en/Creating_a_patch .", "creator": "ludovic@hirlimann.net", "attachment_id": null, "id": 5342690}]}}}