{"bugs": {"671204": {"comments": [{"id": 5588542, "count": 0, "is_private": false, "creation_time": "2011-07-13T08:46:48Z", "time": "2011-07-13T08:46:48Z", "creator": "julian.reschke@gmx.de", "author": "julian.reschke@gmx.de", "attachment_id": null, "raw_text": "See <http://greenbytes.de/tech/tc2231/#attmissingdisposition2> and <http://greenbytes.de/tech/tc2231/#attmissingdisposition3>:\n\n  Content-Disposition: x=y; filename=foo.html\n\n  Content-Disposition: \"foo; filename=bar;baz\"; filename=qux\n\nIn both cases, Firefox parses the component before the first semicolon as an unknown disposition type, and thus defaults to \"attachment\". Other UAs with the exception of Chrome just ignore the header field.", "tags": [], "text": "See <http://greenbytes.de/tech/tc2231/#attmissingdisposition2> and <http://greenbytes.de/tech/tc2231/#attmissingdisposition3>:\n\n  Content-Disposition: x=y; filename=foo.html\n\n  Content-Disposition: \"foo; filename=bar;baz\"; filename=qux\n\nIn both cases, Firefox parses the component before the first semicolon as an unknown disposition type, and thus defaults to \"attachment\". Other UAs with the exception of Chrome just ignore the header field.", "bug_id": 671204}, {"is_private": false, "count": 1, "id": 5588832, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "creation_time": "2011-07-13T13:36:27Z", "time": "2011-07-13T13:36:27Z", "raw_text": "I think we and Chrome are right here and the other UAs have a security bug....\n\nSee bug 272541 comment 20.", "attachment_id": null, "text": "I think we and Chrome are right here and the other UAs have a security bug....\n\nSee bug 272541 comment 20.", "bug_id": 671204, "tags": []}, {"creation_time": "2011-07-13T13:48:27Z", "time": "2011-07-13T13:48:27Z", "creator": "julian.reschke@gmx.de", "author": "julian.reschke@gmx.de", "count": 2, "id": 5588853, "is_private": false, "tags": [], "bug_id": 671204, "text": "(In reply to comment #1)\n> I think we and Chrome are right here and the other UAs have a security\n> bug....\n> \n> See bug 272541 comment 20.\n\nIf we are truly concerned about security, shouldn't we consider this as a message we want to drop completely (just as recently introduced for conflicting C-Ls and friends)?", "attachment_id": null, "raw_text": "(In reply to comment #1)\n> I think we and Chrome are right here and the other UAs have a security\n> bug....\n> \n> See bug 272541 comment 20.\n\nIf we are truly concerned about security, shouldn't we consider this as a message we want to drop completely (just as recently introduced for conflicting C-Ls and friends)?"}, {"raw_text": "It depends on which attack scenarios we're worried about.", "attachment_id": null, "text": "It depends on which attack scenarios we're worried about.", "bug_id": 671204, "tags": [], "is_private": false, "count": 3, "id": 5588878, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "creation_time": "2011-07-13T14:02:40Z", "time": "2011-07-13T14:02:40Z"}, {"author": "julian.reschke@gmx.de", "time": "2012-07-21T10:46:51Z", "creation_time": "2012-07-21T10:46:51Z", "creator": "julian.reschke@gmx.de", "id": 6493837, "count": 4, "is_private": false, "bug_id": 671204, "text": "Here's an example of where the behavior of FF is harmful; in that it \"understands\" a broken header field that is rejected by other browsers:\n\n  http://stackoverflow.com/questions/11574199/file-download-name-in-chrome/11575090\n\nMaybe we should consider to keep the current behavior of defaulting to \"attachment\", but at least throw away the filename information?", "tags": [], "raw_text": "Here's an example of where the behavior of FF is harmful; in that it \"understands\" a broken header field that is rejected by other browsers:\n\n  http://stackoverflow.com/questions/11574199/file-download-name-in-chrome/11575090\n\nMaybe we should consider to keep the current behavior of defaulting to \"attachment\", but at least throw away the filename information?", "attachment_id": null}, {"text": "Given that all other browsers now seem to ignore the C-D header when it's malformed (see\n\n  http://greenbytes.de/tech/tc2231/#attmissingdisposition\n\nand the half-dozen tests below it)\n\nI'm much more inclined to ignore malformed C-Ds (i.e. treat them as inline) and not worry about the security angle (i.e that we should assume malformed == site might have wanted 'attachment' semantics).\n\nbz:biesi: thoughts?", "bug_id": 671204, "tags": [], "raw_text": "Given that all other browsers now seem to ignore the C-D header when it's malformed (see\n\n  http://greenbytes.de/tech/tc2231/#attmissingdisposition\n\nand the half-dozen tests below it)\n\nI'm much more inclined to ignore malformed C-Ds (i.e. treat them as inline) and not worry about the security angle (i.e that we should assume malformed == site might have wanted 'attachment' semantics).\n\nbz:biesi: thoughts?", "attachment_id": null, "author": "jduell.mcbugs@gmail.com", "creator": "jduell.mcbugs@gmail.com", "time": "2012-10-10T22:13:51Z", "creation_time": "2012-10-10T22:13:51Z", "is_private": false, "id": 6717284, "count": 5}, {"creator": "jduell.mcbugs@gmail.com", "creation_time": "2012-10-10T22:29:15Z", "time": "2012-10-10T22:29:15Z", "author": "jduell.mcbugs@gmail.com", "is_private": false, "id": 6717358, "count": 6, "text": "To be more precise:  We would also still fail replies as CORRUPT if they had multiple CDs (including malformed ones) that differ.  If only one CD header value is present and is malformed we'd ignore it, which results in 'inline' (i.e. as if no CD header were present).\n\nThat's fairly straightforward to implement since the logic that compares CD values happens at a different, earlier point than the MIME parsing for them.", "bug_id": 671204, "tags": [], "attachment_id": null, "raw_text": "To be more precise:  We would also still fail replies as CORRUPT if they had multiple CDs (including malformed ones) that differ.  If only one CD header value is present and is malformed we'd ignore it, which results in 'inline' (i.e. as if no CD header were present).\n\nThat's fairly straightforward to implement since the logic that compares CD values happens at a different, earlier point than the MIME parsing for them."}, {"raw_text": "I still think that rendering stuff inline when we're not sure is going to open up sites to XSS bugs... but I guess if other UAs are all doing it anyway the battle may be lost.  :(", "attachment_id": null, "tags": [], "bug_id": 671204, "text": "I still think that rendering stuff inline when we're not sure is going to open up sites to XSS bugs... but I guess if other UAs are all doing it anyway the battle may be lost.  :(", "id": 6717773, "count": 7, "is_private": false, "author": "bzbarsky@mit.edu", "time": "2012-10-11T00:55:33Z", "creation_time": "2012-10-11T00:55:33Z", "creator": "bzbarsky@mit.edu"}, {"raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "attachment_id": null, "bug_id": 671204, "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "tags": [], "count": 8, "id": 12658550, "is_private": false, "author": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2017-09-13T18:38:30Z", "time": "2017-09-13T18:38:30Z", "creator": "bug-husbandry-bot@mozilla.bugs"}]}}, "comments": {}}