{"bugs": {"636592": {"comments": [{"author": "mgalli@mgalli.com", "text": "Background:\n---\nMozilla Lab's Rainbow offers an infra-structure to record content from a given canvas [1] into an OGV file. This API feature enables a range of Gecko developers to create video from canvas -- think animation. If an extension developer uses drawWindow, then it is possible to make browser-based browser screen capture apps. Another range of screen capture apps. \n\n[1] https://github.com/mozilla/rainbow/issues/closed/#issue/2 \n\nDesktop Capture, Use Case\n---\nIf you create a top level window that has a transparent background, a developer should be able to use drawWindow against that window, this capturing the desktop content to a given canvas ( thus being able to record using Rainbow's infra-structure ) -- desktop screencasting with gecko. \n\nProblem/Bug: \n---\nFor a given window that has transparent background, drawWindow is drawing white pixels (255,255,255) in the canvas instead the pixels that are the real background -- the desktop in this case.", "creator": "mgalli@mgalli.com", "attachment_id": null, "id": 5302763, "creation_time": "2011-02-24T22:31:26Z", "tags": [], "is_private": false, "time": "2011-02-24T22:31:26Z", "count": 0, "bug_id": 636592, "raw_text": "Background:\n---\nMozilla Lab's Rainbow offers an infra-structure to record content from a given canvas [1] into an OGV file. This API feature enables a range of Gecko developers to create video from canvas -- think animation. If an extension developer uses drawWindow, then it is possible to make browser-based browser screen capture apps. Another range of screen capture apps. \n\n[1] https://github.com/mozilla/rainbow/issues/closed/#issue/2 \n\nDesktop Capture, Use Case\n---\nIf you create a top level window that has a transparent background, a developer should be able to use drawWindow against that window, this capturing the desktop content to a given canvas ( thus being able to record using Rainbow's infra-structure ) -- desktop screencasting with gecko. \n\nProblem/Bug: \n---\nFor a given window that has transparent background, drawWindow is drawing white pixels (255,255,255) in the canvas instead the pixels that are the real background -- the desktop in this case."}, {"author": "tnikkel@gmail.com", "attachment_id": null, "id": 5302793, "text": "Is it a regression? Does it only happen on Mac?", "creator": "tnikkel@gmail.com", "creation_time": "2011-02-24T22:41:16Z", "is_private": false, "tags": [], "time": "2011-02-24T22:41:16Z", "count": 1, "raw_text": "Is it a regression? Does it only happen on Mac?", "bug_id": 636592}, {"raw_text": "We're not going to be able to get the pixels of the desktop or other windows from within drawWindow without some major changes at the very least.\n\nYou can pass \"transparent\" for the background color argument and drawWindow will draw transparent parts of the window as transparent into the canvas (ie leave those pixels unchanged). If that doesn't work than I think that's a bug.", "is_private": false, "tags": [], "creation_time": "2011-02-24T23:15:46Z", "id": 5302892, "attachment_id": null, "text": "We're not going to be able to get the pixels of the desktop or other windows from within drawWindow without some major changes at the very least.\n\nYou can pass \"transparent\" for the background color argument and drawWindow will draw transparent parts of the window as transparent into the canvas (ie leave those pixels unchanged). If that doesn't work than I think that's a bug.", "bug_id": 636592, "count": 2, "time": "2011-02-24T23:15:46Z", "creator": "tnikkel@gmail.com", "author": "tnikkel@gmail.com"}, {"raw_text": "Grabbing pixels outside of the app doesn't feel like a part of drawWindow. It feels like a new API we could add (chrome only of course). And as long as we are grabbing pixels from other apps we may as well grab arbitrary pixels from the screen anywhere. We'd have to think carefully about security implications.", "tags": [], "is_private": false, "creation_time": "2011-02-25T01:12:37Z", "text": "Grabbing pixels outside of the app doesn't feel like a part of drawWindow. It feels like a new API we could add (chrome only of course). And as long as we are grabbing pixels from other apps we may as well grab arbitrary pixels from the screen anywhere. We'd have to think carefully about security implications.", "attachment_id": null, "id": 5303163, "count": 3, "bug_id": 636592, "time": "2011-02-25T01:12:37Z", "author": "tnikkel@gmail.com", "creator": "tnikkel@gmail.com"}, {"time": "2011-03-04T19:40:16Z", "bug_id": 636592, "count": 4, "creator": "mgalli@mgalli.com", "author": "mgalli@mgalli.com", "tags": [], "is_private": false, "raw_text": "I only checked this on Mac. My new testcase is a background window that has 50% translucent white. I will attach an image.", "text": "I only checked this on Mac. My new testcase is a background window that has 50% translucent white. I will attach an image.", "attachment_id": null, "id": 5322465, "creation_time": "2011-03-04T19:40:16Z"}, {"attachment_id": 516961, "id": 5322468, "text": "Created attachment 516961\nImage of a XUL-based app that has a top part semi-transparent showing the desktop.", "creator": "mgalli@mgalli.com", "author": "mgalli@mgalli.com", "creation_time": "2011-03-04T19:41:03Z", "time": "2011-03-04T19:41:03Z", "is_private": false, "tags": [], "raw_text": "", "bug_id": 636592, "count": 5}]}}, "comments": {}}