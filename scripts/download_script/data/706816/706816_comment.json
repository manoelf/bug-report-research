{"comments": {}, "bugs": {"706816": {"comments": [{"creator": "marco.zehe@gmail.com", "time": "2011-12-01T14:38:10Z", "creation_time": "2011-12-01T14:38:10Z", "author": "marco.zehe@gmail.com", "is_private": false, "count": 0, "id": 5885055, "tags": [], "text": "Situation:\nIf an HTML input, textarea, select or button has a validation rule/pattern, is required, or is of a certain type, and if the validation is not given (e. g. an e-mail is not entered correctly), a validation message is provided in two ways:\n1. On hovering the mouse over the given form element.\n2. On attempting to submit the form and the form is not set to not auto-validate. In this instance, an alert is generated and focus is set to the offending form element.\n\nIn both cases, this form element is already marked as invalid via Accessible States.\n\nWhile instance 2 works very well for screen reader users once the user submits the form, instance 1 is totally inaccessible. Most screen readers are set to not read tool tips automatically, which is a good thing because blind users tend to position the mouse randomly, and the so generated tool tip verbiage is distracting.\n\nTherefore, I have the following proposal:\n\nIf the form field has a validation message, prepend it to whatever other info there might be for the AccDescription. This validation message, if any, should come before anything else, since it is a message that requires immediate attention. Upon reading name, type, description and content of the form field, this info will automatically be read as part of the AccDescription and alert the user similar to a mouse user being alerted immediately when they hover the mouse over an invalid form element. This would not require any change to screen reader settings on the user's part, but would give those users the same benefits as a mouse user.\n\nNote that if a form field validates, e. g. the e-mail address or URL is correct, a required field is not empty etc., the validationMessage will be empty.\n\nThoughts?", "bug_id": 706816, "attachment_id": null, "raw_text": "Situation:\nIf an HTML input, textarea, select or button has a validation rule/pattern, is required, or is of a certain type, and if the validation is not given (e. g. an e-mail is not entered correctly), a validation message is provided in two ways:\n1. On hovering the mouse over the given form element.\n2. On attempting to submit the form and the form is not set to not auto-validate. In this instance, an alert is generated and focus is set to the offending form element.\n\nIn both cases, this form element is already marked as invalid via Accessible States.\n\nWhile instance 2 works very well for screen reader users once the user submits the form, instance 1 is totally inaccessible. Most screen readers are set to not read tool tips automatically, which is a good thing because blind users tend to position the mouse randomly, and the so generated tool tip verbiage is distracting.\n\nTherefore, I have the following proposal:\n\nIf the form field has a validation message, prepend it to whatever other info there might be for the AccDescription. This validation message, if any, should come before anything else, since it is a message that requires immediate attention. Upon reading name, type, description and content of the form field, this info will automatically be read as part of the AccDescription and alert the user similar to a mouse user being alerted immediately when they hover the mouse over an invalid form element. This would not require any change to screen reader settings on the user's part, but would give those users the same benefits as a mouse user.\n\nNote that if a form field validates, e. g. the e-mail address or URL is correct, a required field is not empty etc., the validationMessage will be empty.\n\nThoughts?"}, {"creator": "surkov.alexander@gmail.com", "time": "2011-12-01T14:41:38Z", "creation_time": "2011-12-01T14:41:38Z", "author": "surkov.alexander@gmail.com", "is_private": false, "count": 1, "id": 5885063, "bug_id": 706816, "text": "Marco, could you upload testcase to play with it?", "tags": [], "attachment_id": null, "raw_text": "Marco, could you upload testcase to play with it?"}, {"author": "dbolter@mozilla.com", "creation_time": "2011-12-01T14:46:25Z", "time": "2011-12-01T14:46:25Z", "creator": "dbolter@mozilla.com", "count": 2, "id": 5885076, "is_private": false, "tags": [], "text": "I'm wondering if there is a more general thing we can do with tooltips.", "bug_id": 706816, "raw_text": "I'm wondering if there is a more general thing we can do with tooltips.", "attachment_id": null}, {"id": 5885081, "count": 3, "attachment_id": 578246, "is_private": false, "raw_text": "This file shows the different types of possible validation. The first is a pattern validation, the second and third are specific input types, and the last is just a required textarea with a custom error message we can provide via the non-standard x-moz-errormessage attribute.", "creation_time": "2011-12-01T14:49:11Z", "time": "2011-12-01T14:49:11Z", "creator": "marco.zehe@gmail.com", "tags": [], "text": "Created attachment 578246\nTestcase\n\nThis file shows the different types of possible validation. The first is a pattern validation, the second and third are specific input types, and the last is just a required textarea with a custom error message we can provide via the non-standard x-moz-errormessage attribute.", "bug_id": 706816, "author": "marco.zehe@gmail.com"}, {"bug_id": 706816, "text": "(In reply to David Bolter [:davidb] from comment #2)\n> I'm wondering if there is a more general thing we can do with tooltips.\n\nWell, we *do* provide the title of any given HTML element, which visually generates a tool tip, via accessibility APIs, usually via AccDescription, in some rare cases as second or last fall-back for accessible name if all else fails. I'm not sure if there are any more tool tips we need.", "tags": [], "raw_text": "(In reply to David Bolter [:davidb] from comment #2)\n> I'm wondering if there is a more general thing we can do with tooltips.\n\nWell, we *do* provide the title of any given HTML element, which visually generates a tool tip, via accessibility APIs, usually via AccDescription, in some rare cases as second or last fall-back for accessible name if all else fails. I'm not sure if there are any more tool tips we need.", "attachment_id": null, "author": "marco.zehe@gmail.com", "creator": "marco.zehe@gmail.com", "time": "2011-12-01T14:52:12Z", "creation_time": "2011-12-01T14:52:12Z", "is_private": false, "id": 5885087, "count": 4}, {"count": 5, "id": 5885094, "is_private": false, "creation_time": "2011-12-01T14:54:38Z", "time": "2011-12-01T14:54:38Z", "creator": "dbolter@mozilla.com", "author": "dbolter@mozilla.com", "attachment_id": null, "raw_text": "(In reply to Marco Zehe (:MarcoZ) from comment #4)\n> (In reply to David Bolter [:davidb] from comment #2)\n> > I'm wondering if there is a more general thing we can do with tooltips.\n> \n> Well, we *do* provide the title of any given HTML element, which visually\n> generates a tool tip, via accessibility APIs, usually via AccDescription, in\n> some rare cases as second or last fall-back for accessible name if all else\n> fails. I'm not sure if there are any more tool tips we need.\n\nYeah I was thinking longer term (desktop API change).\n\nYour proposal seems reasonable to me in the meantime.", "bug_id": 706816, "text": "(In reply to Marco Zehe (:MarcoZ) from comment #4)\n> (In reply to David Bolter [:davidb] from comment #2)\n> > I'm wondering if there is a more general thing we can do with tooltips.\n> \n> Well, we *do* provide the title of any given HTML element, which visually\n> generates a tool tip, via accessibility APIs, usually via AccDescription, in\n> some rare cases as second or last fall-back for accessible name if all else\n> fails. I'm not sure if there are any more tool tips we need.\n\nYeah I was thinking longer term (desktop API change).\n\nYour proposal seems reasonable to me in the meantime.", "tags": []}, {"raw_text": "I'd say not prepend but use it if nothing left. So if aria-describedby is used then do not expose it as description.\n\nThe reason is that people needs to know the tooltip content when they typed something wrong and left the control. Otherwise they aren't so much interested in it because accessible name (and description) are supposed to provide enough information. \n\nBut if something went wrong then screen reader might want aloud the tooltip content which might be different from description. For that it'd be nice to figure out solution.", "id": 5885113, "count": 6, "attachment_id": null, "is_private": false, "tags": [], "text": "I'd say not prepend but use it if nothing left. So if aria-describedby is used then do not expose it as description.\n\nThe reason is that people needs to know the tooltip content when they typed something wrong and left the control. Otherwise they aren't so much interested in it because accessible name (and description) are supposed to provide enough information. \n\nBut if something went wrong then screen reader might want aloud the tooltip content which might be different from description. For that it'd be nice to figure out solution.", "bug_id": 706816, "author": "surkov.alexander@gmail.com", "creation_time": "2011-12-01T15:03:12Z", "time": "2011-12-01T15:03:12Z", "creator": "surkov.alexander@gmail.com"}, {"attachment_id": null, "raw_text": "(In reply to alexander :surkov from comment #6)\n> I'd say not prepend but use it if nothing left. So if aria-describedby is\n> used then do not expose it as description.\n\nWell, yes, but the case could be that aria-describedby is present, but the tooltip will be present showing an error message why this element is invalid nevertheless.\n\n> The reason is that people needs to know the tooltip content when they typed\n> something wrong and left the control. Otherwise they aren't so much\n> interested in it because accessible name (and description) are supposed to\n> provide enough information. \n\nAgain, this kind of tooltip is only shown if the form field doesn't validate. If it validates, the string is empty.\n\n> But if something went wrong then screen reader might want aloud the tooltip\n> content which might be different from description. For that it'd be nice to\n> figure out solution.\n\nThat case is already taken care of. For example in my attached test case, input just your first name or an incomplete e-mail address (for example leave out the \"com\" part at the end), and tab to the Submit button and press it. Watch what happens.", "bug_id": 706816, "text": "(In reply to alexander :surkov from comment #6)\n> I'd say not prepend but use it if nothing left. So if aria-describedby is\n> used then do not expose it as description.\n\nWell, yes, but the case could be that aria-describedby is present, but the tooltip will be present showing an error message why this element is invalid nevertheless.\n\n> The reason is that people needs to know the tooltip content when they typed\n> something wrong and left the control. Otherwise they aren't so much\n> interested in it because accessible name (and description) are supposed to\n> provide enough information. \n\nAgain, this kind of tooltip is only shown if the form field doesn't validate. If it validates, the string is empty.\n\n> But if something went wrong then screen reader might want aloud the tooltip\n> content which might be different from description. For that it'd be nice to\n> figure out solution.\n\nThat case is already taken care of. For example in my attached test case, input just your first name or an incomplete e-mail address (for example leave out the \"com\" part at the end), and tab to the Submit button and press it. Watch what happens.", "tags": [], "is_private": false, "id": 5885143, "count": 7, "creator": "marco.zehe@gmail.com", "creation_time": "2011-12-01T15:17:16Z", "time": "2011-12-01T15:17:16Z", "author": "marco.zehe@gmail.com"}, {"attachment_id": null, "raw_text": "(In reply to Marco Zehe (:MarcoZ) from comment #7)\n\n> Again, this kind of tooltip is only shown if the form field doesn't\n> validate. If it validates, the string is empty.\n\nthat makes more sense but we need to do some trick to not expose tooltip twice.\n\n> > But if something went wrong then screen reader might want aloud the tooltip\n> > content which might be different from description. For that it'd be nice to\n> > figure out solution.\n> \n> That case is already taken care of. For example in my attached test case,\n> input just your first name or an incomplete e-mail address (for example\n> leave out the \"com\" part at the end), and tab to the Submit button and press\n> it. Watch what happens.\n\nNot exactly. If I typed wrong value then left the control I can see red border around it then I hover a mouse and read the tooltip. I don't do submission.", "tags": [], "bug_id": 706816, "text": "(In reply to Marco Zehe (:MarcoZ) from comment #7)\n\n> Again, this kind of tooltip is only shown if the form field doesn't\n> validate. If it validates, the string is empty.\n\nthat makes more sense but we need to do some trick to not expose tooltip twice.\n\n> > But if something went wrong then screen reader might want aloud the tooltip\n> > content which might be different from description. For that it'd be nice to\n> > figure out solution.\n> \n> That case is already taken care of. For example in my attached test case,\n> input just your first name or an incomplete e-mail address (for example\n> leave out the \"com\" part at the end), and tab to the Submit button and press\n> it. Watch what happens.\n\nNot exactly. If I typed wrong value then left the control I can see red border around it then I hover a mouse and read the tooltip. I don't do submission.", "is_private": false, "id": 5885171, "count": 8, "creator": "surkov.alexander@gmail.com", "time": "2011-12-01T15:29:52Z", "creation_time": "2011-12-01T15:29:52Z", "author": "surkov.alexander@gmail.com"}, {"author": "marco.zehe@gmail.com", "bug_id": 706816, "text": "(In reply to alexander :surkov from comment #8)\n> Not exactly. If I typed wrong value then left the control I can see red\n> border around it then I hover a mouse and read the tooltip. I don't do\n> submission.\n\nAnd this is exactly why I want the tooltip you see to come first in the accDescription at this point, since it will give me an explanation straight away why the screen reader is telling me this field is invalid. Remember ATs do pick up the invalid state already.", "tags": [], "creator": "marco.zehe@gmail.com", "time": "2011-12-01T15:36:44Z", "creation_time": "2011-12-01T15:36:44Z", "raw_text": "(In reply to alexander :surkov from comment #8)\n> Not exactly. If I typed wrong value then left the control I can see red\n> border around it then I hover a mouse and read the tooltip. I don't do\n> submission.\n\nAnd this is exactly why I want the tooltip you see to come first in the accDescription at this point, since it will give me an explanation straight away why the screen reader is telling me this field is invalid. Remember ATs do pick up the invalid state already.", "attachment_id": null, "is_private": false, "id": 5885179, "count": 9}, {"author": "surkov.alexander@gmail.com", "creator": "surkov.alexander@gmail.com", "creation_time": "2011-12-01T16:41:37Z", "time": "2011-12-01T16:41:37Z", "is_private": false, "id": 5885367, "count": 10, "text": "I just said that it would be nice if screen readers tells you automatically what's wrong with typed value when you tab out the control.", "bug_id": 706816, "tags": [], "raw_text": "I just said that it would be nice if screen readers tells you automatically what's wrong with typed value when you tab out the control.", "attachment_id": null}, {"bug_id": 706816, "text": "(In reply to alexander :surkov from comment #10)\n> I just said that it would be nice if screen readers tells you automatically\n> what's wrong with typed value when you tab out the control.\n\nYes, that would be my preferred solution, too, but that would require changing the whole UI interaction model, e. g. triggering the same kind of alert already when a particular form control loses focus, as is done for when \"submit\" is pressed and the whole form gets checked. However, since that always redirects the focus, the user might get stuck on a particular field which they might not be able to fill out properly yet. e. g. when having to tab to a link to get an Audio Captcha, which is located after the actual field for the captcha text in the tab order.\n\nSo I am proposing the above to give screen reader users something to go on when they focus a particular form field, much as sighted users get when hovering the mouse over a field.", "tags": [], "raw_text": "(In reply to alexander :surkov from comment #10)\n> I just said that it would be nice if screen readers tells you automatically\n> what's wrong with typed value when you tab out the control.\n\nYes, that would be my preferred solution, too, but that would require changing the whole UI interaction model, e. g. triggering the same kind of alert already when a particular form control loses focus, as is done for when \"submit\" is pressed and the whole form gets checked. However, since that always redirects the focus, the user might get stuck on a particular field which they might not be able to fill out properly yet. e. g. when having to tab to a link to get an Audio Captcha, which is located after the actual field for the captcha text in the tab order.\n\nSo I am proposing the above to give screen reader users something to go on when they focus a particular form field, much as sighted users get when hovering the mouse over a field.", "attachment_id": null, "author": "marco.zehe@gmail.com", "creator": "marco.zehe@gmail.com", "creation_time": "2011-12-01T17:57:32Z", "time": "2011-12-01T17:57:32Z", "is_private": false, "id": 5885551, "count": 11}, {"attachment_id": null, "raw_text": "Mounir, how is the default tooltip of invalid value input implemented?", "text": "Mounir, how is the default tooltip of invalid value input implemented?", "bug_id": 706816, "tags": [], "is_private": false, "count": 12, "id": 5885559, "creator": "surkov.alexander@gmail.com", "creation_time": "2011-12-01T18:00:47Z", "time": "2011-12-01T18:00:47Z", "author": "surkov.alexander@gmail.com"}, {"attachment_id": null, "raw_text": "It has been implemented in bug 581947. It's implemented in browser/base/content/browser.js (see FillInHTMLTooltip method). Basically, we put element.validationMessage into the tooltip when appropriate. The code should be easy to understand.", "bug_id": 706816, "text": "It has been implemented in bug 581947. It's implemented in browser/base/content/browser.js (see FillInHTMLTooltip method). Basically, we put element.validationMessage into the tooltip when appropriate. The code should be easy to understand.", "tags": [], "id": 5887836, "count": 13, "is_private": false, "creation_time": "2011-12-02T11:33:57Z", "time": "2011-12-02T11:33:57Z", "creator": "mounir@lamouri.fr", "author": "mounir@lamouri.fr"}, {"id": 11938356, "count": 14, "is_private": false, "author": "surkov.alexander@gmail.com", "creation_time": "2016-12-22T18:33:43Z", "time": "2016-12-22T18:33:43Z", "creator": "surkov.alexander@gmail.com", "raw_text": "Jamie, should we use IA2_RELATION_ERROR / IA2_RELATION_ERROR_FOR to point out to a error tooltip when input's value is invalid?", "attachment_id": null, "tags": [], "bug_id": 706816, "text": "Jamie, should we use IA2_RELATION_ERROR / IA2_RELATION_ERROR_FOR to point out to a error tooltip when input's value is invalid?"}, {"author": "surkov.alexander@gmail.com", "creator": "surkov.alexander@gmail.com", "creation_time": "2016-12-22T18:34:54Z", "time": "2016-12-22T18:34:54Z", "is_private": false, "count": 15, "id": 11938360, "tags": [], "bug_id": 706816, "text": "just in case HTML-AAM related issue: https://github.com/w3c/html-aam/issues/47", "raw_text": "just in case HTML-AAM related issue: https://github.com/w3c/html-aam/issues/47", "attachment_id": null}, {"time": "2018-02-19T05:34:45Z", "creation_time": "2018-02-19T05:34:45Z", "creator": "jteh@mozilla.com", "author": "jteh@mozilla.com", "count": 16, "id": 13051972, "is_private": false, "tags": [], "text": "(In reply to alexander :surkov from comment #14)\n> Jamie, should we use IA2_RELATION_ERROR / IA2_RELATION_ERROR_FOR to point\n> out to a error tooltip when input's value is invalid?\n\nI think that makes sense. Note that NVDA doesn't support these error relations yet, so NVDA shouldn't be used for verification.", "bug_id": 706816, "attachment_id": null, "raw_text": "(In reply to alexander :surkov from comment #14)\n> Jamie, should we use IA2_RELATION_ERROR / IA2_RELATION_ERROR_FOR to point\n> out to a error tooltip when input's value is invalid?\n\nI think that makes sense. Note that NVDA doesn't support these error relations yet, so NVDA shouldn't be used for verification."}, {"tags": [], "text": "and input is supposed to expose IA2_STATE_INVALID_ENTRY?", "bug_id": 706816, "attachment_id": null, "raw_text": "and input is supposed to expose IA2_STATE_INVALID_ENTRY?", "creator": "surkov.alexander@gmail.com", "creation_time": "2018-02-23T17:46:06Z", "time": "2018-02-23T17:46:06Z", "author": "surkov.alexander@gmail.com", "is_private": false, "id": 13064700, "count": 17}, {"tags": [], "bug_id": 706816, "text": "(In reply to alexander :surkov from comment #17)\n> and input is supposed to expose IA2_STATE_INVALID_ENTRY?\n\nCorrect, invalid state should be exposed while the error is present. This allows clients to optimise and not query for the relation unless they need to. It also makes sense semantically.", "raw_text": "(In reply to alexander :surkov from comment #17)\n> and input is supposed to expose IA2_STATE_INVALID_ENTRY?\n\nCorrect, invalid state should be exposed while the error is present. This allows clients to optimise and not query for the relation unless they need to. It also makes sense semantically.", "attachment_id": null, "author": "jteh@mozilla.com", "creation_time": "2018-02-26T00:35:51Z", "time": "2018-02-26T00:35:51Z", "creator": "jteh@mozilla.com", "id": 13067034, "count": 18, "is_private": false}]}}}