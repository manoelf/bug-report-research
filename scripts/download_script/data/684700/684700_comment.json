{"bugs": {"684700": {"comments": [{"id": 5700447, "count": 0, "is_private": false, "time": "2011-09-05T12:40:52Z", "creation_time": "2011-09-05T12:40:52Z", "creator": "jfkthame@gmail.com", "author": "jfkthame@gmail.com", "attachment_id": null, "raw_text": "The StartupCache::GetBuffer() method says that ownership of the returned buffer is passed to the caller:\n\nhttp://mxr.mozilla.org/mozilla-central/source/startupcache/StartupCache.h#134\n\nHowever, it does not specify how the returned buffer was allocated (malloc, NS_Alloc, new[], some-other-allocator?) and therefore the caller doesn't know how to release it.\n\nLooking at the implementation does not help, as it appears that the buffer might have been allocated with C++ new[]:\n\nhttp://mxr.mozilla.org/mozilla-central/source/startupcache/StartupCache.cpp#240\n\nBut alternatively, it might come from nsZipItemPtr::forget():\n\nhttp://mxr.mozilla.org/mozilla-central/source/startupcache/StartupCache.cpp#250\n\n(or line 260 or 270); and checking nsZipItemPtr, it appears that this may be a malloc'ed buffer:\n\nhttp://mxr.mozilla.org/mozilla-central/source/modules/libjar/nsZipArchive.h#368\n\nSo what's a caller to do? delete[] it, or free() it?", "tags": [], "text": "The StartupCache::GetBuffer() method says that ownership of the returned buffer is passed to the caller:\n\nhttp://mxr.mozilla.org/mozilla-central/source/startupcache/StartupCache.h#134\n\nHowever, it does not specify how the returned buffer was allocated (malloc, NS_Alloc, new[], some-other-allocator?) and therefore the caller doesn't know how to release it.\n\nLooking at the implementation does not help, as it appears that the buffer might have been allocated with C++ new[]:\n\nhttp://mxr.mozilla.org/mozilla-central/source/startupcache/StartupCache.cpp#240\n\nBut alternatively, it might come from nsZipItemPtr::forget():\n\nhttp://mxr.mozilla.org/mozilla-central/source/startupcache/StartupCache.cpp#250\n\n(or line 260 or 270); and checking nsZipItemPtr, it appears that this may be a malloc'ed buffer:\n\nhttp://mxr.mozilla.org/mozilla-central/source/modules/libjar/nsZipArchive.h#368\n\nSo what's a caller to do? delete[] it, or free() it?", "bug_id": 684700}, {"attachment_id": null, "raw_text": "", "tags": [], "text": "*** Bug 697449 has been marked as a duplicate of this bug. ***", "bug_id": 684700, "is_private": false, "id": 5808529, "count": 1, "creator": "jfkthame@gmail.com", "creation_time": "2011-10-27T11:21:40Z", "time": "2011-10-27T11:21:40Z", "author": "jfkthame@gmail.com"}, {"id": 5820307, "count": 2, "is_private": false, "author": "mh+mozilla@glandium.org", "creation_time": "2011-11-02T10:23:02Z", "time": "2011-11-02T10:23:02Z", "creator": "mh+mozilla@glandium.org", "raw_text": "How about we just get rid of GetBuffer? Except gfx/thebes/gfxFT2FontList.cpp, all uses take the returned buffer/length pair and feed it to NewObjectInputStreamFromBuffer, which returns an nsIObjectInputStream. We could instead have a GetObjectInputStream function that returns the nsIObjectInputStream directly, and adapt gfxFT2FontList.cpp accordingly.", "attachment_id": null, "tags": [], "text": "How about we just get rid of GetBuffer? Except gfx/thebes/gfxFT2FontList.cpp, all uses take the returned buffer/length pair and feed it to NewObjectInputStreamFromBuffer, which returns an nsIObjectInputStream. We could instead have a GetObjectInputStream function that returns the nsIObjectInputStream directly, and adapt gfxFT2FontList.cpp accordingly.", "bug_id": 684700}, {"is_private": false, "id": 5820327, "count": 3, "creator": "jfkthame@gmail.com", "time": "2011-11-02T10:49:34Z", "creation_time": "2011-11-02T10:49:34Z", "author": "jfkthame@gmail.com", "attachment_id": null, "raw_text": "It looks like this problem goes deeper than just StartupCache::GetBuffer(); the same kind of uncertainty exists for the buffer returned from nsZipItemPtr::Forget() (which is why you can't just say that GetBuffer()'s result is to be deallocated using delete[]).\n\nCan we fix nsZipItemPtr::Forget(), and any other ZipItem code involved here, and then have consistent, documented behavior for GetBuffer()?\n\nSeems like unless we fix that, the problem is still going to exist somewhere, as whoever is dealing with the zipitem's buffer - whether it's within StartupCache or its client code - can't be sure what to do with it.", "tags": [], "text": "It looks like this problem goes deeper than just StartupCache::GetBuffer(); the same kind of uncertainty exists for the buffer returned from nsZipItemPtr::Forget() (which is why you can't just say that GetBuffer()'s result is to be deallocated using delete[]).\n\nCan we fix nsZipItemPtr::Forget(), and any other ZipItem code involved here, and then have consistent, documented behavior for GetBuffer()?\n\nSeems like unless we fix that, the problem is still going to exist somewhere, as whoever is dealing with the zipitem's buffer - whether it's within StartupCache or its client code - can't be sure what to do with it.", "bug_id": 684700}, {"tags": [], "bug_id": 684700, "text": "If we get rid of GetBuffer and return an nsIObjectInputStream instead, we would also get rid of the use of nsZipItemPtr::Forget.", "attachment_id": null, "raw_text": "If we get rid of GetBuffer and return an nsIObjectInputStream instead, we would also get rid of the use of nsZipItemPtr::Forget.", "creator": "mh+mozilla@glandium.org", "time": "2011-11-02T11:35:15Z", "creation_time": "2011-11-02T11:35:15Z", "author": "mh+mozilla@glandium.org", "is_private": false, "count": 4, "id": 5820366}, {"raw_text": "Also note that bug 695843 will change Omnijar::GetReader such that it will return an nsIZipArchive, which could be used to retrieve an nsIInputStream. If mArchive is changed to an nsIZipArchive as well, we can get rid of the use of nsZipItemPtr.", "count": 5, "id": 5820387, "attachment_id": null, "is_private": false, "tags": [], "bug_id": 684700, "text": "Also note that bug 695843 will change Omnijar::GetReader such that it will return an nsIZipArchive, which could be used to retrieve an nsIInputStream. If mArchive is changed to an nsIZipArchive as well, we can get rid of the use of nsZipItemPtr.", "author": "mh+mozilla@glandium.org", "creation_time": "2011-11-02T11:57:45Z", "time": "2011-11-02T11:57:45Z", "creator": "mh+mozilla@glandium.org"}, {"is_private": false, "count": 6, "id": 5820393, "creator": "mh+mozilla@glandium.org", "creation_time": "2011-11-02T12:00:58Z", "time": "2011-11-02T12:00:58Z", "author": "mh+mozilla@glandium.org", "attachment_id": null, "raw_text": "(In reply to Mike Hommey [:glandium] from comment #5)\n> Also note that bug 695843 will change Omnijar::GetReader such that it will\n> return an nsIZipArchive, which could be used to retrieve an nsIInputStream.\n> If mArchive is changed to an nsIZipArchive as well, we can get rid of the\n> use of nsZipItemPtr.\n\nnsIZipReader instead of nsIZipArchive", "tags": [], "bug_id": 684700, "text": "(In reply to Mike Hommey [:glandium] from comment #5)\n> Also note that bug 695843 will change Omnijar::GetReader such that it will\n> return an nsIZipArchive, which could be used to retrieve an nsIInputStream.\n> If mArchive is changed to an nsIZipArchive as well, we can get rid of the\n> use of nsZipItemPtr.\n\nnsIZipReader instead of nsIZipArchive"}]}}, "comments": {}}