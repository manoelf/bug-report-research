{"comments": {}, "bugs": {"625694": {"comments": [{"tags": [], "time": "2011-01-14T10:06:37Z", "author": "mozilla.org@boblet.net", "creation_time": "2011-01-14T10:06:37Z", "count": 0, "id": 5199327, "attachment_id": null, "creator": "mozilla.org@boblet.net", "bug_id": 625694, "is_private": false, "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b8) Gecko/20100101 Firefox/4.0b8\nBuild Identifier: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b8) Gecko/20100101 Firefox/4.0b8\n\nFirefox treats flexible layout boxes with display:box as display:inline-box if the box element doesn\u2019t have a width declared\n\nReproducible: Always\n\nActual Results:  \nthe box element appears as an inline-block box\n\nExpected Results:  \nthe box element should appear as a block-level box\n\nadding a width value changes the display to a block-level box", "text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b8) Gecko/20100101 Firefox/4.0b8\nBuild Identifier: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b8) Gecko/20100101 Firefox/4.0b8\n\nFirefox treats flexible layout boxes with display:box as display:inline-box if the box element doesn\u2019t have a width declared\n\nReproducible: Always\n\nActual Results:  \nthe box element appears as an inline-block box\n\nExpected Results:  \nthe box element should appear as a block-level box\n\nadding a width value changes the display to a block-level box"}, {"tags": [], "creation_time": "2011-01-17T03:53:18Z", "count": 1, "time": "2011-01-17T03:53:18Z", "author": "mozilla.org@boblet.net", "creator": "mozilla.org@boblet.net", "id": 5204324, "attachment_id": null, "text": "I wrote that \u201cadding a width value changes the display to a block-level box\u201d, but this is incorrect. If the viewport is wide enough display:box flexboxes will display side-by-side. I\u2019ve updated the example page with an example to show this:\nhttp://oli.jp/bugs/mozilla/flexbox-display-inline.html", "is_private": false, "bug_id": 625694, "raw_text": "I wrote that \u201cadding a width value changes the display to a block-level box\u201d, but this is incorrect. If the viewport is wide enough display:box flexboxes will display side-by-side. I\u2019ve updated the example page with an example to show this:\nhttp://oli.jp/bugs/mozilla/flexbox-display-inline.html"}, {"raw_text": "I have another example of this, you can see if the display:-moz-box element was a block element like it should be then it would be filling the container\nhttp://jsfiddle.net/GLex5/2/", "is_private": false, "bug_id": 625694, "text": "I have another example of this, you can see if the display:-moz-box element was a block element like it should be then it would be filling the container\nhttp://jsfiddle.net/GLex5/2/", "attachment_id": null, "id": 5310425, "creator": "rjfioravanti@gmail.com", "author": "rjfioravanti@gmail.com", "time": "2011-03-01T01:27:18Z", "count": 2, "creation_time": "2011-03-01T01:27:18Z", "tags": []}, {"time": "2011-08-03T02:23:44Z", "author": "bzbarsky@mit.edu", "creation_time": "2011-08-03T02:23:44Z", "count": 3, "tags": [], "is_private": false, "bug_id": 625694, "raw_text": "-moz-box elements shrink-wrap by default, just like table cells, floats, etc.  Why is this a bug, exactly?", "text": "-moz-box elements shrink-wrap by default, just like table cells, floats, etc.  Why is this a bug, exactly?", "id": 5629498, "attachment_id": null, "creator": "bzbarsky@mit.edu"}, {"creator": "mozilla.org@boblet.net", "attachment_id": null, "text": "@Boris the spec says:\n\n\u201cA box placed in a block is considered a block level element and will be positioned and sized according to the rules for CSS 2.1\u201d\n\u201cAll children of \u2018box\u2019 elements are block-level. If inline-level elements are nested inside boxes, they get wrapped in an anonymous block which then takes part in the box layout.\nIf the width of a child of a flexible box is computed as \u2018auto\u2019, then the used value is the shrink-to-fit width.\u201d\nhttp://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#inlinesAndBlocks\n\nI read this to mean that -moz-box *children* elements with width:auto shrink-wrap by default, but that -moz-box elements should display as block level elements. Currently they display as inline-block level elements unless a width is declared.", "tags": [], "creation_time": "2011-08-03T04:12:56Z", "author": "mozilla.org@boblet.net", "id": 5629643, "raw_text": "@Boris the spec says:\n\n\u201cA box placed in a block is considered a block level element and will be positioned and sized according to the rules for CSS 2.1\u201d\n\u201cAll children of \u2018box\u2019 elements are block-level. If inline-level elements are nested inside boxes, they get wrapped in an anonymous block which then takes part in the box layout.\nIf the width of a child of a flexible box is computed as \u2018auto\u2019, then the used value is the shrink-to-fit width.\u201d\nhttp://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#inlinesAndBlocks\n\nI read this to mean that -moz-box *children* elements with width:auto shrink-wrap by default, but that -moz-box elements should display as block level elements. Currently they display as inline-block level elements unless a width is declared.", "is_private": false, "bug_id": 625694, "count": 4, "time": "2011-08-03T04:12:56Z"}, {"text": "> @Boris the spec says:\n\nQuoting myself from the thread that mentioned this bug:\n\n1)  -moz-box is NOT a prefixed implementation of that draft.  In fact,\n    it and its behavior predates that draft by 10 years or so.  The only\n    definition of -moz-box is \"what Gecko does right now\", and things depend on\n    that behavior.\n2)  That draft is over two years old.  There's a more recent version at\n    http://www.w3.org/TR/2011/WD-css3-flexbox-20110322/ which if you\n    will note no longer defines a \"box\" value for display at all.  It also\n    defines behavior that's generally very different from -moz-box; we will\n    almost certainly be writing a completely separate implementation of this\n    flexbox spec that looks nothing like the current XUL box code.", "attachment_id": null, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "creation_time": "2011-08-03T04:26:16Z", "tags": [], "bug_id": 625694, "is_private": false, "raw_text": "> @Boris the spec says:\n\nQuoting myself from the thread that mentioned this bug:\n\n1)  -moz-box is NOT a prefixed implementation of that draft.  In fact,\n    it and its behavior predates that draft by 10 years or so.  The only\n    definition of -moz-box is \"what Gecko does right now\", and things depend on\n    that behavior.\n2)  That draft is over two years old.  There's a more recent version at\n    http://www.w3.org/TR/2011/WD-css3-flexbox-20110322/ which if you\n    will note no longer defines a \"box\" value for display at all.  It also\n    defines behavior that's generally very different from -moz-box; we will\n    almost certainly be writing a completely separate implementation of this\n    flexbox spec that looks nothing like the current XUL box code.", "id": 5629653, "time": "2011-08-03T04:26:16Z", "count": 5}, {"tags": [], "count": 6, "creation_time": "2011-08-03T07:20:06Z", "author": "mozilla.org@boblet.net", "time": "2011-08-03T07:20:06Z", "creator": "mozilla.org@boblet.net", "attachment_id": null, "id": 5629841, "text": "Yep I\u2019m aware of the history of flexbox, and the new flexbox editor\u2019s draft\n  http://oli.jp/2011/css3-flexbox/\n\nHowever, your emails in that thread\n  http://lists.w3.org/Archives/Public/www-style/2011Jan/0214.html\nand\n  http://lists.w3.org/Archives/Public/www-style/2011Jan/0228.html\ngave me the impression that you *would* be fixing -moz-box.\n\nIs -moz-box to be mothballed? This would certainly make it easy to resolve this bug in addition to:\n* https://bugzilla.mozilla.org/show_bug.cgi?id=529761 and https://bugzilla.mozilla.org/show_bug.cgi?id=394078\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625697\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625700\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625703\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625702", "raw_text": "Yep I\u2019m aware of the history of flexbox, and the new flexbox editor\u2019s draft\n  http://oli.jp/2011/css3-flexbox/\n\nHowever, your emails in that thread\n  http://lists.w3.org/Archives/Public/www-style/2011Jan/0214.html\nand\n  http://lists.w3.org/Archives/Public/www-style/2011Jan/0228.html\ngave me the impression that you *would* be fixing -moz-box.\n\nIs -moz-box to be mothballed? This would certainly make it easy to resolve this bug in addition to:\n* https://bugzilla.mozilla.org/show_bug.cgi?id=529761 and https://bugzilla.mozilla.org/show_bug.cgi?id=394078\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625697\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625700\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625703\n* https://bugzilla.mozilla.org/show_bug.cgi?id=625702", "is_private": false, "bug_id": 625694}, {"raw_text": "> gave me the impression that you *would* be fixing -moz-box.\n\nThe plan, last I checked, is to implement the flexbox draft, then slowly transition XUL to the standard flexbox model.\n\nThis could be done by suddenly redefining -moz-box to mean the same thing as flexbox (somewhat unlikely, imo), or it could be done by changing the styles in xul.css over to the new box model.  We'll see which one breaks fewer things.", "bug_id": 625694, "is_private": false, "text": "> gave me the impression that you *would* be fixing -moz-box.\n\nThe plan, last I checked, is to implement the flexbox draft, then slowly transition XUL to the standard flexbox model.\n\nThis could be done by suddenly redefining -moz-box to mean the same thing as flexbox (somewhat unlikely, imo), or it could be done by changing the styles in xul.css over to the new box model.  We'll see which one breaks fewer things.", "attachment_id": null, "id": 5630444, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "time": "2011-08-03T14:59:10Z", "count": 7, "creation_time": "2011-08-03T14:59:10Z", "tags": []}, {"creator": "thomasbielagk@gmx.de", "id": 5631366, "attachment_id": null, "text": "Okay, yeah, I also saw the new draft, but I still don't understand the current situation.\n\n-moz-box existed before the draft but has nothing to do with it? It's coincidence that the draft features the same display values and other properties?\n\nAnd also, what is the supposed difference between -moz-box and -moz-inline-box if both don't act like block?\n\nI just checked that at least I'm not alone being confused, a lot of articles state that gecko has implemented the draft (e.g. http://hacks.mozilla.org/2010/04/the-css-3-flexible-box-model/).", "is_private": false, "bug_id": 625694, "raw_text": "Okay, yeah, I also saw the new draft, but I still don't understand the current situation.\n\n-moz-box existed before the draft but has nothing to do with it? It's coincidence that the draft features the same display values and other properties?\n\nAnd also, what is the supposed difference between -moz-box and -moz-inline-box if both don't act like block?\n\nI just checked that at least I'm not alone being confused, a lot of articles state that gecko has implemented the draft (e.g. http://hacks.mozilla.org/2010/04/the-css-3-flexible-box-model/).", "tags": [], "creation_time": "2011-08-03T20:22:35Z", "count": 8, "time": "2011-08-03T20:22:35Z", "author": "thomasbielagk@gmx.de"}, {"author": "bzbarsky@mit.edu", "time": "2011-08-03T20:26:23Z", "count": 9, "creation_time": "2011-08-03T20:26:23Z", "tags": [], "raw_text": "> -moz-box existed before the draft but has nothing to do with it?  It's\n> coincidence that the draft features the same display values and other\n> properties?\n\n-moz-box existed before the draft and the draft's text was inspired by (but not really based on) -moz-box.\n\n> And also, what is the supposed difference between -moz-box and -moz-inline-box\n> if both don't act like block?\n\nI have no idea.  Whatever the observable difference is, that's also the supposed difference.\n\n> a lot of articles state that gecko has implemented the draft\n\nYeah, a lot of people are on crack...", "bug_id": 625694, "is_private": false, "text": "> -moz-box existed before the draft but has nothing to do with it?  It's\n> coincidence that the draft features the same display values and other\n> properties?\n\n-moz-box existed before the draft and the draft's text was inspired by (but not really based on) -moz-box.\n\n> And also, what is the supposed difference between -moz-box and -moz-inline-box\n> if both don't act like block?\n\nI have no idea.  Whatever the observable difference is, that's also the supposed difference.\n\n> a lot of articles state that gecko has implemented the draft\n\nYeah, a lot of people are on crack...", "attachment_id": null, "id": 5631378, "creator": "bzbarsky@mit.edu"}, {"text": "Are bugs from the old spec still relevant?", "is_private": false, "bug_id": 625694, "raw_text": "Are bugs from the old spec still relevant?", "creator": "sjw+bugzilla@posteo.net", "id": 8087508, "attachment_id": null, "creation_time": "2013-11-16T15:49:39Z", "count": 10, "time": "2013-11-16T15:49:39Z", "author": "sjw+bugzilla@posteo.net", "tags": []}]}}}