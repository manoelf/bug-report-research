{"comments": {}, "bugs": {"713171": {"comments": [{"creator": "kdevel@vogtner.de", "author": "kdevel@vogtner.de", "raw_text": "User Agent:  \n\nSteps to reproduce:\n\nImplemented exponentially scaling volume slider according to \nhttp://www.dr-lex.be/info-stuff/volumecontrols.html (i.e. the x**4 approximation to the exponential function).", "creation_time": "2011-12-23T03:44:57Z", "text": "Created attachment 583998\nexp-scaling-volume-slider.diff\n\nUser Agent:  \n\nSteps to reproduce:\n\nImplemented exponentially scaling volume slider according to \nhttp://www.dr-lex.be/info-stuff/volumecontrols.html (i.e. the x**4 approximation to the exponential function).", "attachment_id": 583998, "time": "2011-12-23T03:44:57Z", "is_private": false, "count": 0, "tags": [], "id": 5936983, "bug_id": 713171}, {"id": 5938087, "tags": [], "is_private": false, "count": 1, "bug_id": 713171, "creation_time": "2011-12-24T00:42:46Z", "raw_text": "I've got no objection to this, and the spec allows it:\n\n\"The element's effective media volume is volume, interpreted relative to the range 0.0 to 1.0, with 0.0 being silent, and 1.0 being the loudest setting, values in between increasing in loudness. The range need not be linear.\"\n\nBut I think it's a mistake for the spec to leave this up to the UA with no way for the content author to programatically discover which behaviour a given UA has.  I can imagine this causing problems where the content author has adjusted the relative volumes of multiple media elements (e.g. sound effects for a game).\n\nIt's possible that it would make more sense to leave the volume attribute linear, and change the controls to use exponential scaling, but that may be surprising for authors implementing their own controls (as they'd get different behaviour to the builtin controls).", "author": "kinetik@flim.org", "attachment_id": null, "time": "2011-12-24T00:42:46Z", "text": "I've got no objection to this, and the spec allows it:\n\n\"The element's effective media volume is volume, interpreted relative to the range 0.0 to 1.0, with 0.0 being silent, and 1.0 being the loudest setting, values in between increasing in loudness. The range need not be linear.\"\n\nBut I think it's a mistake for the spec to leave this up to the UA with no way for the content author to programatically discover which behaviour a given UA has.  I can imagine this causing problems where the content author has adjusted the relative volumes of multiple media elements (e.g. sound effects for a game).\n\nIt's possible that it would make more sense to leave the volume attribute linear, and change the controls to use exponential scaling, but that may be surprising for authors implementing their own controls (as they'd get different behaviour to the builtin controls).", "creator": "kinetik@flim.org"}, {"creator": "trondsg+bugzilla+mozilla@gmail.com", "author": "trondsg+bugzilla+mozilla@gmail.com", "text": "This really needs to be done. The current behaviour makes no sense at all. Setting the HTML5 volume to 0.5 doesn't set the actual volume (shown in the PulseAudio volume control) to 0.5, instead it makes it something like 0.75.\n\nOS: Ubuntu 14.04.", "attachment_id": null, "time": "2015-11-17T13:35:43Z", "creation_time": "2015-11-17T13:35:43Z", "raw_text": "This really needs to be done. The current behaviour makes no sense at all. Setting the HTML5 volume to 0.5 doesn't set the actual volume (shown in the PulseAudio volume control) to 0.5, instead it makes it something like 0.75.\n\nOS: Ubuntu 14.04.", "bug_id": 713171, "tags": [], "count": 2, "is_private": false, "id": 10939343}]}}}