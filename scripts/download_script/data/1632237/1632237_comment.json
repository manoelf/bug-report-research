{"comments": {}, "bugs": {"1632237": {"comments": [{"is_private": false, "time": "2020-04-22T17:30:26Z", "text": "For those apps that migrate to Glean, it would be nice to be able to take advantage of the deletion-request ping functionality in Glean to have the information to also delete legacy telemetry.  This is especially important for apps that are migrating to Glean since they may not have a way to delete legacy telemetry and it's very possible that Glean and legacy telemetry are running side-by-side.\n\nThis may be as simple as adding a UUID metric to the app's metrics.yaml file with a `sendInPings` of `deletion-request`.", "creation_time": "2020-04-22T17:30:26Z", "raw_text": "For those apps that migrate to Glean, it would be nice to be able to take advantage of the deletion-request ping functionality in Glean to have the information to also delete legacy telemetry.  This is especially important for apps that are migrating to Glean since they may not have a way to delete legacy telemetry and it's very possible that Glean and legacy telemetry are running side-by-side.\n\nThis may be as simple as adding a UUID metric to the app's metrics.yaml file with a `sendInPings` of `deletion-request`.", "count": 0, "id": 14772266, "bug_id": 1632237, "tags": [], "author": "tlong@mozilla.com", "attachment_id": null, "creator": "tlong@mozilla.com"}, {"count": 1, "raw_text": "After looking into this, I don't see anything blocking using a `UuidMetricType` in the `deletion_request` ping.  [It looks like Fenix will be doing something similar](https://github.com/mozilla-mobile/android-components/blob/ec54326b52159802127e675311fc452f121592be/components/support/migration/src/main/java/mozilla/components/support/migration/TelemetryIdentifiers.kt#L44) but it's a little different since the whole application is changing and they appear to be using a file to transfer the id from Fennec to Fenix.  I'm hoping it will be a little easier with legacy telemetry and Glean running side-by-side.", "time": "2020-04-22T20:00:11Z", "is_private": false, "creator": "tlong@mozilla.com", "bug_id": 1632237, "id": 14772556, "text": "After looking into this, I don't see anything blocking using a `UuidMetricType` in the `deletion_request` ping.  [It looks like Fenix will be doing something similar](https://github.com/mozilla-mobile/android-components/blob/ec54326b52159802127e675311fc452f121592be/components/support/migration/src/main/java/mozilla/components/support/migration/TelemetryIdentifiers.kt#L44) but it's a little different since the whole application is changing and they appear to be using a file to transfer the id from Fennec to Fenix.  I'm hoping it will be a little easier with legacy telemetry and Glean running side-by-side.", "creation_time": "2020-04-22T20:00:11Z", "attachment_id": null, "author": "tlong@mozilla.com", "tags": []}, {"creator": "tlong@mozilla.com", "attachment_id": null, "author": "tlong@mozilla.com", "tags": [], "bug_id": 1632237, "id": 14772673, "count": 2, "raw_text": "Looks like legacy [service/telemetry](https://github.com/mozilla-mobile/android-components/tree/ec54326b52159802127e675311fc452f121592be/components/service/telemetry) has [a function for getting the client id](https://github.com/mozilla-mobile/android-components/blob/ec54326b52159802127e675311fc452f121592be/components/service/telemetry/src/main/java/org/mozilla/telemetry/Telemetry.java#L304) which we can take advantage of for Android.\n\nOn the other hand, it looks like the legacy [telemetry-ios library](https://github.com/mozilla-mobile/telemetry-ios) doesn't expose a direct way to get the client id.  Although, after [digging a little deeper](https://github.com/mozilla-mobile/telemetry-ios/blob/aac1e1873134ea69f992e3bbc45b431d6564d64c/Telemetry/TelemetryStorage.swift#L130), it appears that it is using `UserDefaults.standard` as a store which we should be able to pull the client id from (albeit in a rather hackish manner) by directly reading the value associated with the client id key.", "time": "2020-04-22T20:50:57Z", "creation_time": "2020-04-22T20:50:57Z", "text": "Looks like legacy [service/telemetry](https://github.com/mozilla-mobile/android-components/tree/ec54326b52159802127e675311fc452f121592be/components/service/telemetry) has [a function for getting the client id](https://github.com/mozilla-mobile/android-components/blob/ec54326b52159802127e675311fc452f121592be/components/service/telemetry/src/main/java/org/mozilla/telemetry/Telemetry.java#L304) which we can take advantage of for Android.\n\nOn the other hand, it looks like the legacy [telemetry-ios library](https://github.com/mozilla-mobile/telemetry-ios) doesn't expose a direct way to get the client id.  Although, after [digging a little deeper](https://github.com/mozilla-mobile/telemetry-ios/blob/aac1e1873134ea69f992e3bbc45b431d6564d64c/Telemetry/TelemetryStorage.swift#L130), it appears that it is using `UserDefaults.standard` as a store which we should be able to pull the client id from (albeit in a rather hackish manner) by directly reading the value associated with the client id key.", "is_private": false}, {"creation_time": "2020-04-23T07:38:06Z", "text": "(In reply to Travis Long [:travis_] from comment #0)\nHey Travis!\n\nThis is a *great* idea!\n\n> This may be as simple as adding a UUID metric to the app's metrics.yaml file with a `sendInPings` of `deletion-request`.\n\nYes, I think it's that simple on the SDK side. Getting the client id from the legacy store is the app's responsibility. It should be completely doable and not too much of a big deal. Even if that's an hack, I guess it's fine. \n\nHowever, there's two concerns that I have:\n\n1. what's the advantage for pipeline to do that? Is it _much_ more expensive for pipeline to look at the migration table?\n2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n\nRegardless of my concerns, I think it would be beneficial for us to dig into this and think of (1) and (2).", "time": "2020-04-23T07:38:06Z", "raw_text": "(In reply to Travis Long [:travis_] from comment #0)\nHey Travis!\n\nThis is a *great* idea!\n\n> This may be as simple as adding a UUID metric to the app's metrics.yaml file with a `sendInPings` of `deletion-request`.\n\nYes, I think it's that simple on the SDK side. Getting the client id from the legacy store is the app's responsibility. It should be completely doable and not too much of a big deal. Even if that's an hack, I guess it's fine. \n\nHowever, there's two concerns that I have:\n\n1. what's the advantage for pipeline to do that? Is it _much_ more expensive for pipeline to look at the migration table?\n2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n\nRegardless of my concerns, I think it would be beneficial for us to dig into this and think of (1) and (2).", "is_private": false, "count": 3, "bug_id": 1632237, "id": 14773346, "attachment_id": null, "creator": "alessio.placitelli@gmail.com", "tags": [], "author": "alessio.placitelli@gmail.com"}, {"is_private": false, "text": "(In reply to Alessio Placitelli [:Dexter] from comment #3)\n> 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n\nBut this is a problem unrelated to any solution Glean can do anyway.\nIf legacy telemetry goes away, do we delete the data anyway on the server?\nIf so, we're all good already.\nIf not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the requirements? That's a question for project shredder.", "time": "2020-04-23T07:52:06Z", "creation_time": "2020-04-23T07:52:06Z", "raw_text": "(In reply to Alessio Placitelli [:Dexter] from comment #3)\n> 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n\nBut this is a problem unrelated to any solution Glean can do anyway.\nIf legacy telemetry goes away, do we delete the data anyway on the server?\nIf so, we're all good already.\nIf not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the requirements? That's a question for project shredder.", "count": 4, "id": 14773370, "bug_id": 1632237, "tags": [], "author": "jrediger@mozilla.com", "attachment_id": null, "creator": "jrediger@mozilla.com"}, {"bug_id": 1632237, "id": 14773468, "creator": "alessio.placitelli@gmail.com", "attachment_id": null, "author": "alessio.placitelli@gmail.com", "tags": [], "raw_text": "(In reply to Jan-Erik Rediger [:janerik] from comment #4)\n> (In reply to Alessio Placitelli [:Dexter] from comment #3)\n> > 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n> \n> But this is a problem unrelated to any solution Glean can do anyway.\n\nExactly.\n\n> If legacy telemetry goes away, do we delete the data anyway on the server?\n> If so, we're all good already.\n> If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the requirements? That's a question for project shredder.\n\nYup, these are all good questions that need investigation before committing to anything.", "creation_time": "2020-04-23T09:39:08Z", "time": "2020-04-23T09:39:08Z", "text": "(In reply to Jan-Erik Rediger [:janerik] from comment #4)\n> (In reply to Alessio Placitelli [:Dexter] from comment #3)\n> > 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n> \n> But this is a problem unrelated to any solution Glean can do anyway.\n\nExactly.\n\n> If legacy telemetry goes away, do we delete the data anyway on the server?\n> If so, we're all good already.\n> If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the requirements? That's a question for project shredder.\n\nYup, these are all good questions that need investigation before committing to anything.", "is_private": false, "count": 5}, {"creator": "tlong@mozilla.com", "attachment_id": null, "author": "tlong@mozilla.com", "tags": [], "bug_id": 1632237, "id": 14773751, "count": 6, "raw_text": "(In reply to Alessio Placitelli [:Dexter] from comment #3)\n\n> 1. what's the advantage for pipeline to do that? Is it _much_ more expensive for pipeline to look at the migration table?\n\nI asked :relud about this yesterday on Slack, and his response was \"this would be very convenient for me, because then we wouldn't need to reference the migration ping tables to delete previous-product pings.\"\n\nSo while I don't know the numerical advantage, I know it at least makes it more convenient for us further down the chain of handling deletion_request pings and may prevent the need to even create separate \"migration ping tables\" to link to legacy telemetry ids.  I'm happy to try and get more concrete information on this if you like.\n\n> 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n\nIf legacy telemetry is decommissioned, then perhaps they can move the metric to a more permanent store/lifetime if they continue to require it.  I think that this is totally a product decision and nothing about Glean prevents them from achieving this within the integrating application that I can see..\n\n(In reply to Jan-Erik Rediger [:janerik] from comment #4)\n\n> If legacy telemetry goes away, do we delete the data anyway on the server?\n\nI imagined the data on the server could be sunset until the time we normally delete it, which would still sort of give us a picture of the application for the same length of time we would normally have data on it.  Granted, linking two different data sets may not be as useful but I don't think what happens to the data after we ship it in a ping is Glean's concern here.\n\n> If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the > requirements? That's a question for project shredder.\n\nLike I said before, migrating the client id may be as simple as a user-lifetime metric that is set by the application in the version _before_ they turn off legacy telemetry.  But this all feels like product responsibility and not Glean's since we provide many ways that they could solve this if they need to.\n\nAs an action item out of this, maybe we can document this as a specific use-case:  \"Here is a situation that someone migrating to Glean may run into and here's a simple way to solve it by using Glean the same way you record other metrics\"", "time": "2020-04-23T12:27:21Z", "creation_time": "2020-04-23T12:27:21Z", "text": "(In reply to Alessio Placitelli [:Dexter] from comment #3)\n\n> 1. what's the advantage for pipeline to do that? Is it _much_ more expensive for pipeline to look at the migration table?\n\nI asked :relud about this yesterday on Slack, and his response was \"this would be very convenient for me, because then we wouldn't need to reference the migration ping tables to delete previous-product pings.\"\n\nSo while I don't know the numerical advantage, I know it at least makes it more convenient for us further down the chain of handling deletion_request pings and may prevent the need to even create separate \"migration ping tables\" to link to legacy telemetry ids.  I'm happy to try and get more concrete information on this if you like.\n\n> 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n\nIf legacy telemetry is decommissioned, then perhaps they can move the metric to a more permanent store/lifetime if they continue to require it.  I think that this is totally a product decision and nothing about Glean prevents them from achieving this within the integrating application that I can see..\n\n(In reply to Jan-Erik Rediger [:janerik] from comment #4)\n\n> If legacy telemetry goes away, do we delete the data anyway on the server?\n\nI imagined the data on the server could be sunset until the time we normally delete it, which would still sort of give us a picture of the application for the same length of time we would normally have data on it.  Granted, linking two different data sets may not be as useful but I don't think what happens to the data after we ship it in a ping is Glean's concern here.\n\n> If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the > requirements? That's a question for project shredder.\n\nLike I said before, migrating the client id may be as simple as a user-lifetime metric that is set by the application in the version _before_ they turn off legacy telemetry.  But this all feels like product responsibility and not Glean's since we provide many ways that they could solve this if they need to.\n\nAs an action item out of this, maybe we can document this as a specific use-case:  \"Here is a situation that someone migrating to Glean may run into and here's a simple way to solve it by using Glean the same way you record other metrics\"", "is_private": false}, {"author": "alessio.placitelli@gmail.com", "tags": [], "creator": "alessio.placitelli@gmail.com", "attachment_id": null, "id": 14773785, "bug_id": 1632237, "count": 7, "is_private": false, "raw_text": "(In reply to Travis Long [:travis_] from comment #6)\n> (In reply to Alessio Placitelli [:Dexter] from comment #3)\n> So while I don't know the numerical advantage, I know it at least makes it more convenient for us further down the chain of handling deletion_request pings and may prevent the need to even create separate \"migration ping tables\" to link to legacy telemetry ids.  I'm happy to try and get more concrete information on this if you like.\n\nI think it makes sense to get concrete. The other aspect is that the \"migration ping tables\" only really applies to Fenix, while we have other products that do not have that (because they are not really migrating).\n\n> > 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n> \n> If legacy telemetry is decommissioned, then perhaps they can move the metric to a more permanent store/lifetime if they continue to require it.  I think that this is totally a product decision and nothing about Glean prevents them from achieving this within the integrating application that I can see..\n\nIndeed. There's also the question of: is it ok to slap the legacy telemetry id to all the pings with the glean id? I don't think there's a problem, but it's worth checking.\n\n> (In reply to Jan-Erik Rediger [:janerik] from comment #4)\n> \n> > If legacy telemetry goes away, do we delete the data anyway on the server?\n> \n> I imagined the data on the server could be sunset until the time we normally delete it, which would still sort of give us a picture of the application for the same length of time we would normally have data on it.  Granted, linking two different data sets may not be as useful but I don't think what happens to the data after we ship it in a ping is Glean's concern here.\n\nWell, it's not a Glean problem, that's for sure. But it is a problem we need to understand, since we also own service-telemetry. And since you opened this can of worms... :-)\n\n> > If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the > requirements? That's a question for project shredder.\n> \n> Like I said before, migrating the client id may be as simple as a user-lifetime metric that is set by the application in the version _before_ they turn off legacy telemetry.  But this all feels like product responsibility and not Glean's since we provide many ways that they could solve this if they need to.\n\nI think that what Jan-Erik meant is: \"if we are unable to link the new data to the old data on the SERVER side, do we really need to add the legacy id to the glean pings?\". That's a question for Shredder, I agree.\n\n> As an action item out of this, maybe we can document this as a specific use-case:  \"Here is a situation that someone migrating to Glean may run into and here's a simple way to solve it by using Glean the same way you record other metrics\"\n\nMaybe, but I feel this require more due diligence at the moment on our side :) Thanks for doing this!", "text": "(In reply to Travis Long [:travis_] from comment #6)\n> (In reply to Alessio Placitelli [:Dexter] from comment #3)\n> So while I don't know the numerical advantage, I know it at least makes it more convenient for us further down the chain of handling deletion_request pings and may prevent the need to even create separate \"migration ping tables\" to link to legacy telemetry ids.  I'm happy to try and get more concrete information on this if you like.\n\nI think it makes sense to get concrete. The other aspect is that the \"migration ping tables\" only really applies to Fenix, while we have other products that do not have that (because they are not really migrating).\n\n> > 2. this would only cover the case of users toggling telemetry off while both Glean and legacy telemetry are available. When legacy telemetry will be decommissioned, there will be no way to add the id to the ping, unless the client hackishly sticks the code to read the legacy client id around for this specific purpose.\n> \n> If legacy telemetry is decommissioned, then perhaps they can move the metric to a more permanent store/lifetime if they continue to require it.  I think that this is totally a product decision and nothing about Glean prevents them from achieving this within the integrating application that I can see..\n\nIndeed. There's also the question of: is it ok to slap the legacy telemetry id to all the pings with the glean id? I don't think there's a problem, but it's worth checking.\n\n> (In reply to Jan-Erik Rediger [:janerik] from comment #4)\n> \n> > If legacy telemetry goes away, do we delete the data anyway on the server?\n> \n> I imagined the data on the server could be sunset until the time we normally delete it, which would still sort of give us a picture of the application for the same length of time we would normally have data on it.  Granted, linking two different data sets may not be as useful but I don't think what happens to the data after we ship it in a ping is Glean's concern here.\n\nWell, it's not a Glean problem, that's for sure. But it is a problem we need to understand, since we also own service-telemetry. And since you opened this can of worms... :-)\n\n> > If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the > requirements? That's a question for project shredder.\n> \n> Like I said before, migrating the client id may be as simple as a user-lifetime metric that is set by the application in the version _before_ they turn off legacy telemetry.  But this all feels like product responsibility and not Glean's since we provide many ways that they could solve this if they need to.\n\nI think that what Jan-Erik meant is: \"if we are unable to link the new data to the old data on the SERVER side, do we really need to add the legacy id to the glean pings?\". That's a question for Shredder, I agree.\n\n> As an action item out of this, maybe we can document this as a specific use-case:  \"Here is a situation that someone migrating to Glean may run into and here's a simple way to solve it by using Glean the same way you record other metrics\"\n\nMaybe, but I feel this require more due diligence at the moment on our side :) Thanks for doing this!", "time": "2020-04-23T12:45:53Z", "creation_time": "2020-04-23T12:45:53Z"}, {"is_private": false, "raw_text": "(In reply to Alessio Placitelli [:Dexter] from comment #7)\nHad a chat with :chutten and I can answer a few of your questions now, and I'm still waiting on more info on concrete numbers on the benefits of this to the pipeline team.\n\n> There's also the question of: is it ok to slap the legacy telemetry id to all the pings with the glean id? I don't think there's a problem, but it's worth checking.\n\nSounds like this is okay, according to :chutten, he said \"Same sort of data, just older\"\n\n> > (In reply to Jan-Erik Rediger [:janerik] from comment #4)\n> > \n> > > If legacy telemetry goes away, do we delete the data anyway on the server?\n> > \n> > I imagined the data on the server could be sunset until the time we normally delete it, which would still sort of give us a picture of the application for the same length of time we would normally have data on it.  Granted, linking two different data sets may not be as useful but I don't think what happens to the data after we ship it in a ping is Glean's concern here.\n> \n> Well, it's not a Glean problem, that's for sure. But it is a problem we need to understand, since we also own service-telemetry. And since you opened this can of worms... :-)\n\nAlso according to my conversation with :chutten, it sounds like this is an open question with Trust but as it stands today, we need to send the legacy telemetry id in perpetuity so that when a user opts out we can find all the historical data to delete too.\n\n> > > If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the > requirements? That's a question for project shredder.\n> > \n> > Like I said before, migrating the client id may be as simple as a user-lifetime metric that is set by the application in the version _before_ they turn off legacy telemetry.  But this all feels like product responsibility and not Glean's since we provide many ways that they could solve this if they need to.\n> \n> I think that what Jan-Erik meant is: \"if we are unable to link the new data to the old data on the SERVER side, do we really need to add the legacy id to the glean pings?\". That's a question for Shredder, I agree.\n> \n\nThe answer to this question is tied up in the previous one and the current discussion with Trust, but it sounds like we need to send the legacy telemetry id by the current thinking.\n\n> > As an action item out of this, maybe we can document this as a specific use-case:  \"Here is a situation that someone migrating to Glean may run into and here's a simple way to solve it by using Glean the same way you record other metrics\"\n> \n> Maybe, but I feel this require more due diligence at the moment on our side :) Thanks for doing this!\n\nMy pleasure, I do enjoy a good investigation and (as always) you make a good sounding board for questions!", "creation_time": "2020-04-23T16:37:20Z", "time": "2020-04-23T16:37:20Z", "text": "(In reply to Alessio Placitelli [:Dexter] from comment #7)\nHad a chat with :chutten and I can answer a few of your questions now, and I'm still waiting on more info on concrete numbers on the benefits of this to the pipeline team.\n\n> There's also the question of: is it ok to slap the legacy telemetry id to all the pings with the glean id? I don't think there's a problem, but it's worth checking.\n\nSounds like this is okay, according to :chutten, he said \"Same sort of data, just older\"\n\n> > (In reply to Jan-Erik Rediger [:janerik] from comment #4)\n> > \n> > > If legacy telemetry goes away, do we delete the data anyway on the server?\n> > \n> > I imagined the data on the server could be sunset until the time we normally delete it, which would still sort of give us a picture of the application for the same length of time we would normally have data on it.  Granted, linking two different data sets may not be as useful but I don't think what happens to the data after we ship it in a ping is Glean's concern here.\n> \n> Well, it's not a Glean problem, that's for sure. But it is a problem we need to understand, since we also own service-telemetry. And since you opened this can of worms... :-)\n\nAlso according to my conversation with :chutten, it sounds like this is an open question with Trust but as it stands today, we need to send the legacy telemetry id in perpetuity so that when a user opts out we can find all the historical data to delete too.\n\n> > > If not, and we do not migrate client ids, we still loose any way to connect the old data with current clients. Is that enough already to satisfy the > requirements? That's a question for project shredder.\n> > \n> > Like I said before, migrating the client id may be as simple as a user-lifetime metric that is set by the application in the version _before_ they turn off legacy telemetry.  But this all feels like product responsibility and not Glean's since we provide many ways that they could solve this if they need to.\n> \n> I think that what Jan-Erik meant is: \"if we are unable to link the new data to the old data on the SERVER side, do we really need to add the legacy id to the glean pings?\". That's a question for Shredder, I agree.\n> \n\nThe answer to this question is tied up in the previous one and the current discussion with Trust, but it sounds like we need to send the legacy telemetry id by the current thinking.\n\n> > As an action item out of this, maybe we can document this as a specific use-case:  \"Here is a situation that someone migrating to Glean may run into and here's a simple way to solve it by using Glean the same way you record other metrics\"\n> \n> Maybe, but I feel this require more due diligence at the moment on our side :) Thanks for doing this!\n\nMy pleasure, I do enjoy a good investigation and (as always) you make a good sounding board for questions!", "count": 8, "id": 14774293, "bug_id": 1632237, "author": "tlong@mozilla.com", "tags": [], "creator": "tlong@mozilla.com", "attachment_id": null}, {"bug_id": 1632237, "id": 14776835, "creator": "tlong@mozilla.com", "attachment_id": null, "author": "tlong@mozilla.com", "tags": [], "raw_text": "(In reply to Alessio Placitelli [:Dexter] from comment #7)\n\n> I think it makes sense to get concrete. The other aspect is that the \"migration ping tables\" only really applies to Fenix, while we have other products that do not have that (because they are not really migrating).\n\nI heard back from :relud and he says that \"the thing it saves me from is setting up shredder to join on the migration ping table to get the old client ID. not tons of work. a day, maybe two tops.\"\n\nSo, on top of making it possible to comply with CCPA for those apps that are migrating from legacy telemetry like Lockwise/Fx-iOS, it looks like it is saving us some time to set up the join for those instances where we are migrating from one app to another like in Fenix's case.  Which, in the case of Fenix is probably already set up so we wouldn't gain anything there, but it could help minimize effort for migrating apps in this way in the future.", "time": "2020-04-24T17:36:29Z", "text": "(In reply to Alessio Placitelli [:Dexter] from comment #7)\n\n> I think it makes sense to get concrete. The other aspect is that the \"migration ping tables\" only really applies to Fenix, while we have other products that do not have that (because they are not really migrating).\n\nI heard back from :relud and he says that \"the thing it saves me from is setting up shredder to join on the migration ping table to get the old client ID. not tons of work. a day, maybe two tops.\"\n\nSo, on top of making it possible to comply with CCPA for those apps that are migrating from legacy telemetry like Lockwise/Fx-iOS, it looks like it is saving us some time to set up the join for those instances where we are migrating from one app to another like in Fenix's case.  Which, in the case of Fenix is probably already set up so we wouldn't gain anything there, but it could help minimize effort for migrating apps in this way in the future.", "creation_time": "2020-04-24T17:36:29Z", "is_private": false, "count": 9}, {"creator": "pulgasaur@mozilla.bugs", "attachment_id": 9143689, "author": "pulgasaur@mozilla.bugs", "tags": [], "bug_id": 1632237, "id": 14781906, "count": 10, "raw_text": "", "text": "Created attachment 9143689\nLink to GitHub pull-request: https://github.com/mozilla/glean/pull/848", "creation_time": "2020-04-27T15:53:19Z", "time": "2020-04-27T15:53:19Z", "is_private": false}, {"tags": [], "author": "tlong@mozilla.com", "attachment_id": null, "creator": "tlong@mozilla.com", "id": 14782169, "bug_id": 1632237, "count": 11, "is_private": false, "text": "Closing this as FIXED with the following outcome:\n\n1) It is currently possible to add secondary ids to the deletion request ping with the way Glean currently works.  A product may add a metric that represents the secondary id to their `metrics.yaml` file and include `deletion_request` in the `send_in_pings` field.\n2) Data stewards were consulted and linking legacy telemetry with Glean telemetry is fine since it's the same sort of data, just older.\n3) This is beneficial to be able to do this for applications that are migrating to Glean to enable the pipeline to receive the secondary ids without the need for additional tables or metric collection.  This also reduces work in setting up a join to another table if an approach such as the one Fenix used is taken.\n4) As an action item, the [docs for deletion request pings](https://mozilla.github.io/glean/book/user/pings/deletion_request.html) have been updated to indicate how to accomplish sending secondary ids in the deletion-request ping.", "creation_time": "2020-04-27T17:49:40Z", "time": "2020-04-27T17:49:40Z", "raw_text": "Closing this as FIXED with the following outcome:\n\n1) It is currently possible to add secondary ids to the deletion request ping with the way Glean currently works.  A product may add a metric that represents the secondary id to their `metrics.yaml` file and include `deletion_request` in the `send_in_pings` field.\n2) Data stewards were consulted and linking legacy telemetry with Glean telemetry is fine since it's the same sort of data, just older.\n3) This is beneficial to be able to do this for applications that are migrating to Glean to enable the pipeline to receive the secondary ids without the need for additional tables or metric collection.  This also reduces work in setting up a join to another table if an approach such as the one Fenix used is taken.\n4) As an action item, the [docs for deletion request pings](https://mozilla.github.io/glean/book/user/pings/deletion_request.html) have been updated to indicate how to accomplish sending secondary ids in the deletion-request ping."}, {"author": "alessio.placitelli@gmail.com", "tags": [], "creator": "alessio.placitelli@gmail.com", "attachment_id": null, "id": 14783307, "bug_id": 1632237, "count": 12, "is_private": false, "raw_text": "Can you add actionable steps to support legacy telemetry deletion [to this doc](https://docs.google.com/document/d/1k7GabrWCDKp7Ae8mqr-XFnFxIuNlxsJM52D-1uVmgb0/edit?ts=5d8aadbd#)?", "creation_time": "2020-04-28T07:52:52Z", "time": "2020-04-28T07:52:52Z", "text": "Can you add actionable steps to support legacy telemetry deletion [to this doc](https://docs.google.com/document/d/1k7GabrWCDKp7Ae8mqr-XFnFxIuNlxsJM52D-1uVmgb0/edit?ts=5d8aadbd#)?"}, {"creation_time": "2020-04-30T12:07:49Z", "text": "(In reply to Alessio Placitelli [:Dexter] from comment #12)\n> Can you add actionable steps to support legacy telemetry deletion [to this doc](https://docs.google.com/document/d/1k7GabrWCDKp7Ae8mqr-XFnFxIuNlxsJM52D-1uVmgb0/edit?ts=5d8aadbd#)?\n\nSorry, I don't know how I missed this ni?...    absolutely will update the doc!", "author": "tlong@mozilla.com", "tags": [], "attachment_id": null, "is_private": false, "raw_text": "(In reply to Alessio Placitelli [:Dexter] from comment #12)\n> Can you add actionable steps to support legacy telemetry deletion [to this doc](https://docs.google.com/document/d/1k7GabrWCDKp7Ae8mqr-XFnFxIuNlxsJM52D-1uVmgb0/edit?ts=5d8aadbd#)?\n\nSorry, I don't know how I missed this ni?...    absolutely will update the doc!", "time": "2020-04-30T12:07:49Z", "count": 13, "id": 14788441, "bug_id": 1632237, "creator": "tlong@mozilla.com"}]}}}