{"comments": {}, "bugs": {"624167": {"comments": [{"creator": "jag+mozilla@crivens.net", "attachment_id": 502271, "id": 5185089, "text": "Created attachment 502271\nTestcase\n\nTested with Firefox 4.0b8 on Mac and Windows 7.\n\nTrying to place a piece of text in the (vertical) middle of a box by setting context.textBaseline = \"middle\" and then context.fillText(\"piece of text\", 10, box.x + box.height / 2) leaves the text slightly offset on Mac and even more so on Windows.\n\nI'll attach some HTML that, for comparison, also has a <div> with height and line-height set to the same height as the canvas.\n\nIn Chrome 8 on Mac and Windows 7 the text in the <div> and the <canvas> render at the same vertical offset, though on the Mac it renders 1px higher than on Windows 7.\n\nIn Firefox on Mac the text in the canvas renders 2px higher than the text in the div.\n\nIn Firefox on Windows 7 the text in the canvas renders 4px higher than the text in the div.\n\nIt's pretty easy to see the differences in the two images I'll also attach.\n\nIdeally the text in the <canvas> vertically aligns with the text in the <div>.", "raw_text": "Tested with Firefox 4.0b8 on Mac and Windows 7.\n\nTrying to place a piece of text in the (vertical) middle of a box by setting context.textBaseline = \"middle\" and then context.fillText(\"piece of text\", 10, box.x + box.height / 2) leaves the text slightly offset on Mac and even more so on Windows.\n\nI'll attach some HTML that, for comparison, also has a <div> with height and line-height set to the same height as the canvas.\n\nIn Chrome 8 on Mac and Windows 7 the text in the <div> and the <canvas> render at the same vertical offset, though on the Mac it renders 1px higher than on Windows 7.\n\nIn Firefox on Mac the text in the canvas renders 2px higher than the text in the div.\n\nIn Firefox on Windows 7 the text in the canvas renders 4px higher than the text in the div.\n\nIt's pretty easy to see the differences in the two images I'll also attach.\n\nIdeally the text in the <canvas> vertically aligns with the text in the <div>.", "bug_id": 624167, "is_private": false, "tags": [], "count": 0, "creation_time": "2011-01-08T19:08:35Z", "author": "jag+mozilla@crivens.net", "time": "2011-01-08T19:08:35Z"}, {"time": "2011-01-08T19:11:35Z", "author": "jag+mozilla@crivens.net", "creation_time": "2011-01-08T19:11:35Z", "count": 1, "tags": [], "is_private": false, "bug_id": 624167, "raw_text": "", "text": "Created attachment 502273\nScreenshot with guideline drawn, Chrome 8 vs. Fx 4.0b8, Win7", "id": 5185098, "attachment_id": 502273, "creator": "jag+mozilla@crivens.net"}, {"tags": [], "count": 2, "creation_time": "2011-01-08T19:12:14Z", "author": "jag+mozilla@crivens.net", "time": "2011-01-08T19:12:14Z", "creator": "jag+mozilla@crivens.net", "attachment_id": 502274, "id": 5185100, "text": "Created attachment 502274\nScreenshot with guideline drawn, Chrome 8 vs. Fx 4.0b8, Mac", "raw_text": "", "is_private": false, "bug_id": 624167}, {"creation_time": "2011-01-09T07:57:51Z", "author": "jag+mozilla@crivens.net", "tags": [], "text": "Reading the spec again, I think this bug might be invalid and I'm trying to use the wrong tool. What I'm really looking for is an anchor point halfway between the top of the character (not including any accents) and the \"alphabetic\" baseline, which isn't what \"middle\" provides. I was fooled into thinking it did because that's what webkit seems to be doing.\n\n\"Seems\" being the keyword. Both engines use the same math to calculate \"middle\" (-d + (a + d) / 2 == (a - d) / 2). The reason their \"middle\" is positioned differently is the same reason their \"top\" pushes text a bit lower: their \"ascent\" includes accents, while ours doesn't. The height of an accent roughly corresponds to the height of the descent, so effectively they achieve the anchor point I'm looking for.\n\nWith all that said, Webkit's results for \"middle\" are closer to what I would (na\u00efvely) expect than Gecko's.", "creator": "jag+mozilla@crivens.net", "attachment_id": null, "count": 3, "time": "2011-01-09T07:57:51Z", "bug_id": 624167, "is_private": false, "raw_text": "Reading the spec again, I think this bug might be invalid and I'm trying to use the wrong tool. What I'm really looking for is an anchor point halfway between the top of the character (not including any accents) and the \"alphabetic\" baseline, which isn't what \"middle\" provides. I was fooled into thinking it did because that's what webkit seems to be doing.\n\n\"Seems\" being the keyword. Both engines use the same math to calculate \"middle\" (-d + (a + d) / 2 == (a - d) / 2). The reason their \"middle\" is positioned differently is the same reason their \"top\" pushes text a bit lower: their \"ascent\" includes accents, while ours doesn't. The height of an accent roughly corresponds to the height of the descent, so effectively they achieve the anchor point I'm looking for.\n\nWith all that said, Webkit's results for \"middle\" are closer to what I would (na\u00efvely) expect than Gecko's.", "id": 5185512}, {"creation_time": "2011-01-09T08:00:17Z", "count": 4, "time": "2011-01-09T08:00:17Z", "author": "jag+mozilla@crivens.net", "tags": [], "text": "Created attachment 502324\nVarious textBaseline values rendered (webkit)", "bug_id": 624167, "is_private": false, "raw_text": "", "creator": "jag+mozilla@crivens.net", "id": 5185516, "attachment_id": 502324}, {"id": 5185519, "attachment_id": 502326, "creator": "jag+mozilla@crivens.net", "bug_id": 624167, "is_private": false, "raw_text": "These screenshots were made from a slightly modified testcase from bug 438702. Note how webkit's \"middle\" generally goes through the middle of the glyphs.", "text": "Created attachment 502326\nVarious textBaseline values rendered (gecko)\n\nThese screenshots were made from a slightly modified testcase from bug 438702. Note how webkit's \"middle\" generally goes through the middle of the glyphs.", "tags": [], "time": "2011-01-09T08:02:27Z", "author": "jag+mozilla@crivens.net", "creation_time": "2011-01-09T08:02:27Z", "count": 5}, {"attachment_id": null, "id": 5185568, "creator": "jag+mozilla@crivens.net", "raw_text": "Thinking about this some more, the spec does refer to \"top of em square\" and \"bottom of em square\", not ascent and descent. I wonder if there's an easy way to get those values, maybe through maxAscent / maxDescent?", "is_private": false, "bug_id": 624167, "text": "Thinking about this some more, the spec does refer to \"top of em square\" and \"bottom of em square\", not ascent and descent. I wonder if there's an easy way to get those values, maybe through maxAscent / maxDescent?", "tags": [], "author": "jag+mozilla@crivens.net", "time": "2011-01-09T10:11:29Z", "count": 6, "creation_time": "2011-01-09T10:11:29Z"}, {"text": "Ah. And the reason their ascent includes the accents is the following bit of code:\n\nhttps://trac.webkit.org/browser/trunk/WebCore/platform/graphics/mac/SimpleFontDataMac.mm?annotate=blame&rev=74178#L235", "bug_id": 624167, "is_private": false, "raw_text": "Ah. And the reason their ascent includes the accents is the following bit of code:\n\nhttps://trac.webkit.org/browser/trunk/WebCore/platform/graphics/mac/SimpleFontDataMac.mm?annotate=blame&rev=74178#L235", "creator": "jag+mozilla@crivens.net", "id": 5185782, "attachment_id": null, "creation_time": "2011-01-09T16:07:21Z", "count": 7, "time": "2011-01-09T16:07:21Z", "author": "jag+mozilla@crivens.net", "tags": []}, {"text": "Adding that hack gets us a lot closer in rendering to webkit for bug 438702's testcase. If I also use maxAscent and maxDescent instead of their em versions I also get the canvas' text to line up with the div's text in this bug's testcase, except then for \"bottom\" we end up floating a bit above the line. We could limit the max{A,De}scent hack to just the \"middle\" case, but ... And, webkit doesn't need it, so ...", "creator": "jag+mozilla@crivens.net", "attachment_id": null, "creation_time": "2011-01-09T16:44:18Z", "author": "jag+mozilla@crivens.net", "tags": [], "bug_id": 624167, "is_private": false, "raw_text": "Adding that hack gets us a lot closer in rendering to webkit for bug 438702's testcase. If I also use maxAscent and maxDescent instead of their em versions I also get the canvas' text to line up with the div's text in this bug's testcase, except then for \"bottom\" we end up floating a bit above the line. We could limit the max{A,De}scent hack to just the \"middle\" case, but ... And, webkit doesn't need it, so ...", "id": 5185796, "count": 8, "time": "2011-01-09T16:44:18Z"}, {"tags": [], "creation_time": "2011-10-09T12:35:43Z", "author": "Ms2ger@gmail.com", "creator": "Ms2ger@gmail.com", "attachment_id": null, "text": "So, is this invalid?", "count": 9, "time": "2011-10-09T12:35:43Z", "id": 5769918, "raw_text": "So, is this invalid?", "is_private": false, "bug_id": 624167}, {"id": 13716368, "attachment_id": null, "creator": "lsdejonckheere@gmail.com", "bug_id": 624167, "is_private": false, "raw_text": "In the Mozilla documentation for rendering text with baseline middle, this image is provided:\nhttps://html.spec.whatwg.org/images/baselines.png\nWhich can be found on the following page:\nhttps://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_text\n\nHere, the 'middle' baseline is in the middle of the top/bottom of the em square and of the bounding box.\n\nOn the page for baselines, they have a live example:\nhttps://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textBaseline\n\nHere, you can see the baseline isn't drawn where the image has it.\n\nEither the documentation is wrong, or the implementation is wrong.", "text": "In the Mozilla documentation for rendering text with baseline middle, this image is provided:\nhttps://html.spec.whatwg.org/images/baselines.png\nWhich can be found on the following page:\nhttps://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_text\n\nHere, the 'middle' baseline is in the middle of the top/bottom of the em square and of the bounding box.\n\nOn the page for baselines, they have a live example:\nhttps://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textBaseline\n\nHere, you can see the baseline isn't drawn where the image has it.\n\nEither the documentation is wrong, or the implementation is wrong.", "tags": [], "time": "2018-10-27T11:04:08Z", "author": "lsdejonckheere@gmail.com", "creation_time": "2018-10-27T11:04:08Z", "count": 10}]}}}