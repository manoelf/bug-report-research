{"comments": {}, "bugs": {"641179": {"comments": [{"id": 5340903, "count": 0, "author": "jwalden@mit.edu", "time": "2011-03-12T06:10:51Z", "is_private": false, "text": "This came up in bug 608473: global objects should have their slots pre-reserved.\n\nBut looking closer, doesn't this already happen?  JS_NewGlobalObject sets a reserved slot to hold regexp statics and a reserved slot to hold global flags.  That would have to allocate all the reserved slots, right?\n\nAssuming that's the case, we should take advantage of it.  It looks like all the FindClassObject/Prototype stuff can be simplified some to take advantage of this, for example.  And it wouldn't take much in that case to make those functions inline the fast-path case of already-there, and OOL the slow-path init-class stuff.  I'll look and see what else we can do with this reserved-slots-are-always-there guarantee and report back.", "bug_id": 641179, "creator": "jwalden@mit.edu", "raw_text": "This came up in bug 608473: global objects should have their slots pre-reserved.\n\nBut looking closer, doesn't this already happen?  JS_NewGlobalObject sets a reserved slot to hold regexp statics and a reserved slot to hold global flags.  That would have to allocate all the reserved slots, right?\n\nAssuming that's the case, we should take advantage of it.  It looks like all the FindClassObject/Prototype stuff can be simplified some to take advantage of this, for example.  And it wouldn't take much in that case to make those functions inline the fast-path case of already-there, and OOL the slow-path init-class stuff.  I'll look and see what else we can do with this reserved-slots-are-always-there guarantee and report back.", "attachment_id": null, "tags": [], "creation_time": "2011-03-12T06:10:51Z"}]}}}