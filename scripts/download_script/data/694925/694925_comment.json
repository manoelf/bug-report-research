{"comments": {}, "bugs": {"694925": {"comments": [{"creation_time": "2011-10-17T08:46:52Z", "raw_text": "User Agent: Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928221717\n\nSteps to reproduce:\n\nI have contacts with more then one email-address.\n\nWhen I create or edit a contact group/list and click ok, Thunderbird create duplicates contacts for those who has more than two mail addresses. The new contacts has only the mail address, which is listed in the group/list.", "attachment_id": null, "time": "2011-10-17T08:46:52Z", "text": "User Agent: Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928221717\n\nSteps to reproduce:\n\nI have contacts with more then one email-address.\n\nWhen I create or edit a contact group/list and click ok, Thunderbird create duplicates contacts for those who has more than two mail addresses. The new contacts has only the mail address, which is listed in the group/list.", "id": 5785833, "tags": [], "count": 0, "is_private": false, "bug_id": 694925, "author": "thomas.creutz@gmx.de", "creator": "thomas.creutz@gmx.de"}, {"text": "I just verified that this issue still exists in TB 31.1.0.\n\nI believe this issue is due to code in nsAddrDatabase::AddListCardColumnsToRow, namely, this fragment:\n\n    err = GetRowFromAttribute(kPriEmailProperty, NS_ConvertUTF16toUTF8(email),\n                              false /* retain case */, &pCardRow, nullptr);\n    bool cardWasAdded = false;\n    if (NS_FAILED(err) || !pCardRow)\n    {\n\t//New Email, then add a new row with this email\n\terr = GetNewRow(&pCardRow);\n\nThe implementation looks up a card based on the primary email property, and if it does not find a match, it creates a new card. I think that, if the primary email lookup fails, the code should check for a secondary email match before adding a new row... something like this, perhaps?\n\n    err = GetRowFromAttribute(kPriEmailProperty, NS_ConvertUTF16toUTF8(email),\n                              false /* retain case */, &pCardRow, nullptr);\n    bool cardWasAdded = false;\n    if (NS_FAILED(err) || !pCardRow)\n    {\n\n\terr = GetRowFromAttribute(k2ndEmailProperty, NS_ConvertUTF16toUTF8(email),\n\t\tfalse /* retain case */, &pCardRow, nullptr);\n\tcardWasAdded = false;\n\tif (NS_FAILED(err) || !pCardRow)\n\t{\n\t\t//New Email, then add a new row with this email\n\t\terr = GetNewRow(&pCardRow);", "time": "2014-09-05T20:11:27Z", "attachment_id": null, "creation_time": "2014-09-05T20:11:27Z", "raw_text": "I just verified that this issue still exists in TB 31.1.0.\n\nI believe this issue is due to code in nsAddrDatabase::AddListCardColumnsToRow, namely, this fragment:\n\n    err = GetRowFromAttribute(kPriEmailProperty, NS_ConvertUTF16toUTF8(email),\n                              false /* retain case */, &pCardRow, nullptr);\n    bool cardWasAdded = false;\n    if (NS_FAILED(err) || !pCardRow)\n    {\n\t//New Email, then add a new row with this email\n\terr = GetNewRow(&pCardRow);\n\nThe implementation looks up a card based on the primary email property, and if it does not find a match, it creates a new card. I think that, if the primary email lookup fails, the code should check for a secondary email match before adding a new row... something like this, perhaps?\n\n    err = GetRowFromAttribute(kPriEmailProperty, NS_ConvertUTF16toUTF8(email),\n                              false /* retain case */, &pCardRow, nullptr);\n    bool cardWasAdded = false;\n    if (NS_FAILED(err) || !pCardRow)\n    {\n\n\terr = GetRowFromAttribute(k2ndEmailProperty, NS_ConvertUTF16toUTF8(email),\n\t\tfalse /* retain case */, &pCardRow, nullptr);\n\tcardWasAdded = false;\n\tif (NS_FAILED(err) || !pCardRow)\n\t{\n\t\t//New Email, then add a new row with this email\n\t\terr = GetNewRow(&pCardRow);", "bug_id": 694925, "tags": [], "is_private": false, "count": 1, "id": 9277508, "creator": "sschaub@gmail.com", "author": "sschaub@gmail.com"}, {"author": "mconley@mozilla.com", "creator": "mconley@mozilla.com", "attachment_id": null, "time": "2014-09-05T21:53:04Z", "text": "Hey Stephen,\n\nDo you have minimal steps to reproduce for this bug that I can follow? I'm not too, too familiar with this low-down address book code, so I'd like to attach gdb and see what's going on, if I can.\n\nThanks,\n\n-Mike", "creation_time": "2014-09-05T21:53:04Z", "raw_text": "Hey Stephen,\n\nDo you have minimal steps to reproduce for this bug that I can follow? I'm not too, too familiar with this low-down address book code, so I'd like to attach gdb and see what's going on, if I can.\n\nThanks,\n\n-Mike", "bug_id": 694925, "id": 9277998, "tags": [], "count": 2, "is_private": false}, {"creator": "sschaub@gmail.com", "author": "sschaub@gmail.com", "text": "Sure, Mike, here are my repro steps:\n\n1. Create a contact with a primary and secondary email address.\n2. Open the Edit Mail List dialog and add the contact to a mailing list \n   using the *secondary* email address.\n3. Observe that there are now two records for the contact: \n   * The original (with both primary and secondary address)\n   * A new one (with primary email set to the original contact's secondary address)", "time": "2014-09-05T23:19:34Z", "attachment_id": null, "creation_time": "2014-09-05T23:19:34Z", "raw_text": "Sure, Mike, here are my repro steps:\n\n1. Create a contact with a primary and secondary email address.\n2. Open the Edit Mail List dialog and add the contact to a mailing list \n   using the *secondary* email address.\n3. Observe that there are now two records for the contact: \n   * The original (with both primary and secondary address)\n   * A new one (with primary email set to the original contact's secondary address)", "bug_id": 694925, "tags": [], "is_private": false, "count": 3, "id": 9278332}, {"creator": "sschaub@gmail.com", "author": "sschaub@gmail.com", "text": "On further reflection, my proposal is inadequate to solve this bug. It would suppress the (undesirable) creation of a new contact in the scenario described. However, my testing shows that this patch would cause the primary email address of the contact to be added to the mailing list, instead of the (intended) secondary email address.\n\nAccording to my understanding of the Thunderbird mailing list model, a mailing list consists of some subset of cards from the address book containing the mailing list. There doesn't appear to be provision in the model for a secondary address to be added to a mailing list without creating a separate card for that secondary address, which is the way things currently work. If this analysis is correct, then there is probably no reasonable \"fix\" for this bug.", "time": "2014-09-08T15:40:28Z", "attachment_id": null, "creation_time": "2014-09-08T15:40:28Z", "raw_text": "On further reflection, my proposal is inadequate to solve this bug. It would suppress the (undesirable) creation of a new contact in the scenario described. However, my testing shows that this patch would cause the primary email address of the contact to be added to the mailing list, instead of the (intended) secondary email address.\n\nAccording to my understanding of the Thunderbird mailing list model, a mailing list consists of some subset of cards from the address book containing the mailing list. There doesn't appear to be provision in the model for a secondary address to be added to a mailing list without creating a separate card for that secondary address, which is the way things currently work. If this analysis is correct, then there is probably no reasonable \"fix\" for this bug.", "bug_id": 694925, "is_private": false, "count": 4, "tags": [], "id": 9282451}, {"author": "myaddons@gmx.de", "creator": "myaddons@gmx.de", "bug_id": 694925, "id": 12446020, "tags": [], "is_private": false, "count": 5, "time": "2017-07-04T12:04:04Z", "attachment_id": null, "text": "This bug as described in Comment 3 is still present in Thunderbird 52.2.1.", "creation_time": "2017-07-04T12:04:04Z", "raw_text": "This bug as described in Comment 3 is still present in Thunderbird 52.2.1."}]}}}