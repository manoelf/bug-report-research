{"bugs": {"646452": {"comments": [{"creator": "ben.bucksch@beonex.com", "attachment_id": null, "count": 0, "text": "Objective: make fix for bug 521467 available to users\n\nSet:\npref(\"signon.autologin.proxy\", true);\n\nPeople who prefer the old behavior can toggle the pref.\nThe pref was always intended to be true by default.\n\nIt was only temporarily false, because of bug 521467 comment 45.\nI don't see any concrete problem, though.", "author": "ben.bucksch@beonex.com", "tags": [], "raw_text": "Objective: make fix for bug 521467 available to users\n\nSet:\npref(\"signon.autologin.proxy\", true);\n\nPeople who prefer the old behavior can toggle the pref.\nThe pref was always intended to be true by default.\n\nIt was only temporarily false, because of bug 521467 comment 45.\nI don't see any concrete problem, though.", "bug_id": 646452, "creation_time": "2011-03-30T13:53:11Z", "is_private": false, "id": 5380190, "time": "2011-03-30T13:53:11Z"}, {"text": "It may be better to make this a (GUI) preference. (I'll try this out, see Bug 223636 comment 38)", "count": 1, "time": "2013-08-29T07:50:25Z", "author": "manishearth@gmail.com", "id": 7803291, "bug_id": 646452, "creation_time": "2013-08-29T07:50:25Z", "raw_text": "It may be better to make this a (GUI) preference. (I'll try this out, see Bug 223636 comment 38)", "tags": [], "creator": "manishearth@gmail.com", "attachment_id": null, "is_private": false}, {"time": "2013-08-29T11:45:14Z", "id": 7803943, "is_private": false, "raw_text": "Reported Bug 910670 for adding a disabled-by-default preferences option for proxy autologin.\n\nI think it can get confusing if autologin is enabled by default. If the user has not made the conscious choice to bypass the login screen, the lack of a login screen would be disorienting. Also, users won't know that the act of saving a password causes the prompt to not appear anymore.", "bug_id": 646452, "creation_time": "2013-08-29T11:45:14Z", "tags": [], "author": "manishearth@gmail.com", "text": "Reported Bug 910670 for adding a disabled-by-default preferences option for proxy autologin.\n\nI think it can get confusing if autologin is enabled by default. If the user has not made the conscious choice to bypass the login screen, the lack of a login screen would be disorienting. Also, users won't know that the act of saving a password causes the prompt to not appear anymore.", "count": 2, "attachment_id": null, "creator": "manishearth@gmail.com"}, {"is_private": false, "tags": [], "raw_text": "Do other browsers offer similar functionality?", "creation_time": "2013-09-09T04:37:06Z", "bug_id": 646452, "id": 7836208, "time": "2013-09-09T04:37:06Z", "attachment_id": null, "creator": "gavin.sharp@gmail.com", "author": "gavin.sharp@gmail.com", "text": "Do other browsers offer similar functionality?", "count": 3}, {"bug_id": 646452, "creation_time": "2013-09-09T04:41:24Z", "raw_text": "(In reply to :Gavin Sharp (mostly away until Sep 13; use gavin@gavinsharp.com for email) from comment #3)\n> Do other browsers offer similar functionality?\n\nNope. Not Chrome and IE, AFAIK. A lot of us engineer this functionality by setting up a second instance of CCProxy or squid as an non-auth proxy and chain it with the main proxy. But most browsers by default don't autologin to proxies. I'm not sure of this, but I believe that theydon't have a pref for this euther.", "tags": [], "is_private": false, "time": "2013-09-09T04:41:24Z", "id": 7836214, "creator": "manishearth@gmail.com", "attachment_id": null, "count": 4, "text": "(In reply to :Gavin Sharp (mostly away until Sep 13; use gavin@gavinsharp.com for email) from comment #3)\n> Do other browsers offer similar functionality?\n\nNope. Not Chrome and IE, AFAIK. A lot of us engineer this functionality by setting up a second instance of CCProxy or squid as an non-auth proxy and chain it with the main proxy. But most browsers by default don't autologin to proxies. I'm not sure of this, but I believe that theydon't have a pref for this euther.", "author": "manishearth@gmail.com"}, {"bug_id": 646452, "creation_time": "2013-09-09T06:58:27Z", "raw_text": "Gavin, rationale is in bug 521467 comment 0.\n\nIf the user has such a proxy configured, he has to log in *every time* he starts the browser. If the user habitually closes the last window, as many do, that means he has to log in very often and is highly annoying.\n\nI don't see a considerable downside that would outweight this problem. The browser is unusable without logging in to the proxy, so there's no alternative. The password is already stored anyway (the patch and pref doesn't change that), so there's no security problem. (And if you are in an edge case where this behavior is a problem, you can still change the pref back to false, or delete the stored password.)", "tags": [], "is_private": false, "time": "2013-09-09T06:58:27Z", "id": 7836410, "creator": "ben.bucksch@beonex.com", "attachment_id": null, "count": 5, "text": "Gavin, rationale is in bug 521467 comment 0.\n\nIf the user has such a proxy configured, he has to log in *every time* he starts the browser. If the user habitually closes the last window, as many do, that means he has to log in very often and is highly annoying.\n\nI don't see a considerable downside that would outweight this problem. The browser is unusable without logging in to the proxy, so there's no alternative. The password is already stored anyway (the patch and pref doesn't change that), so there's no security problem. (And if you are in an edge case where this behavior is a problem, you can still change the pref back to false, or delete the stored password.)", "author": "ben.bucksch@beonex.com"}, {"is_private": false, "tags": [], "creation_time": "2013-09-09T11:16:39Z", "bug_id": 646452, "raw_text": "That makes sense, though I'm not sure that we can call those other cases as \"edge\" cases. Proxies are used for many, many purposes; one major use is to give the user access to an intranet (in which case login isn't necessary on startup). The other thing is that other browsers don't do this, so, like I said, this can be disorienting.\n\nBut my concerns above aren't too major; I think your reasons are still valid and we should go through with this :)\n\nOne way that should alleviate all remaining concerns with the edge cases is to implement the UI pref I mentioned in comment 2 -- that will be seen by anyone setting up the proxy and ought to be a good enough visual cue indicating that this will happen.", "id": 7837004, "time": "2013-09-09T11:16:39Z", "attachment_id": null, "creator": "manishearth@gmail.com", "author": "manishearth@gmail.com", "text": "That makes sense, though I'm not sure that we can call those other cases as \"edge\" cases. Proxies are used for many, many purposes; one major use is to give the user access to an intranet (in which case login isn't necessary on startup). The other thing is that other browsers don't do this, so, like I said, this can be disorienting.\n\nBut my concerns above aren't too major; I think your reasons are still valid and we should go through with this :)\n\nOne way that should alleviate all remaining concerns with the edge cases is to implement the UI pref I mentioned in comment 2 -- that will be seen by anyone setting up the proxy and ought to be a good enough visual cue indicating that this will happen.", "count": 6}, {"tags": [], "raw_text": "> other browsers don't do this\n\n(So we can have a competitive advantage. If we did everything like the others, we have no reason to exist anymore.)\n\n> I think your reasons are still valid and we should go through with this \n\nThank you.", "bug_id": 646452, "creation_time": "2013-09-09T15:00:06Z", "is_private": false, "id": 7837920, "time": "2013-09-09T15:00:06Z", "creator": "ben.bucksch@beonex.com", "attachment_id": null, "count": 7, "text": "> other browsers don't do this\n\n(So we can have a competitive advantage. If we did everything like the others, we have no reason to exist anymore.)\n\n> I think your reasons are still valid and we should go through with this \n\nThank you.", "author": "ben.bucksch@beonex.com"}, {"time": "2013-09-09T15:03:12Z", "author": "manishearth@gmail.com", "id": 7837936, "text": "(In reply to Ben Bucksch (:BenB) from comment #7)\n> > other browsers don't do this\n> \n> (So we can have a competitive advantage. If we did everything like the\n> others, we have no reason to exist anymore.)\n\nSure, that's another reason why I agree with this[1], but that doesn't stop it from *possibly* being disorienting. Remember, current FF does this too. It's a possible concern, that's all.\n\n\n\n[1]: Until I discovered the hidden pref I was annoyed by the proxy prompt a million times a day. So was everyone else in the institute.", "count": 8, "is_private": false, "attachment_id": null, "bug_id": 646452, "creation_time": "2013-09-09T15:03:12Z", "raw_text": "(In reply to Ben Bucksch (:BenB) from comment #7)\n> > other browsers don't do this\n> \n> (So we can have a competitive advantage. If we did everything like the\n> others, we have no reason to exist anymore.)\n\nSure, that's another reason why I agree with this[1], but that doesn't stop it from *possibly* being disorienting. Remember, current FF does this too. It's a possible concern, that's all.\n\n\n\n[1]: Until I discovered the hidden pref I was annoyed by the proxy prompt a million times a day. So was everyone else in the institute.", "tags": [], "creator": "manishearth@gmail.com"}, {"tags": [], "raw_text": "I quite understand the benefit. I'm trying to understand the downsides. So far it seems like there aren't really any. Presumably a MITM attacker could steal the password, but as I understand it there's no easy way for users to detect a MITM situation, so the incremental risk is minimal (we should perhaps investigate better protection against MITM proxy password stealing, but that seems unlikely to be very common?).", "bug_id": 646452, "creation_time": "2013-09-17T14:56:46Z", "is_private": false, "id": 7869777, "time": "2013-09-17T14:56:46Z", "creator": "gavin.sharp@gmail.com", "attachment_id": null, "text": "I quite understand the benefit. I'm trying to understand the downsides. So far it seems like there aren't really any. Presumably a MITM attacker could steal the password, but as I understand it there's no easy way for users to detect a MITM situation, so the incremental risk is minimal (we should perhaps investigate better protection against MITM proxy password stealing, but that seems unlikely to be very common?).", "count": 9, "author": "gavin.sharp@gmail.com"}, {"is_private": false, "attachment_id": null, "creator": "ben.bucksch@beonex.com", "tags": [], "raw_text": "From what I remember: Without this, the HTTP query goes 403 Forbidden, we show password prompt (Firefox auth dialog UI), with hostname shown password prefilled (because the user had already stored it before, independent of this fix). The user clicks OK, and we resend the original HTTP query.\n\nWith this patch, the user doesn't have to click OK. That's all.\n\nThe user can't do checks. All the dialog shows is the hostname and realm. A real MITM would forge that, so no help. If the proxy is another host (I can't see how that would happen, but that's the only change the a user would actually see in the dialog), we wouldn't pick this password, because it hangs off the host, so we wouldn't send it. So no problem there.\n\nA potential problem is when the password on the proxy server changes. We'd submit the old password, it would fail with 403 Forbidden, which looks the same as no password, and we'd submit again. Loop. But IIRC, we thought of that case in bug 521467 and prevent this with special code. So that shouldn't happen either.\n\nAll of this is \"IIRC\", because this is too long ago (2.5 years) for my small brain.", "bug_id": 646452, "creation_time": "2013-09-17T15:08:11Z", "id": 7869832, "author": "ben.bucksch@beonex.com", "time": "2013-09-17T15:08:11Z", "text": "From what I remember: Without this, the HTTP query goes 403 Forbidden, we show password prompt (Firefox auth dialog UI), with hostname shown password prefilled (because the user had already stored it before, independent of this fix). The user clicks OK, and we resend the original HTTP query.\n\nWith this patch, the user doesn't have to click OK. That's all.\n\nThe user can't do checks. All the dialog shows is the hostname and realm. A real MITM would forge that, so no help. If the proxy is another host (I can't see how that would happen, but that's the only change the a user would actually see in the dialog), we wouldn't pick this password, because it hangs off the host, so we wouldn't send it. So no problem there.\n\nA potential problem is when the password on the proxy server changes. We'd submit the old password, it would fail with 403 Forbidden, which looks the same as no password, and we'd submit again. Loop. But IIRC, we thought of that case in bug 521467 and prevent this with special code. So that shouldn't happen either.\n\nAll of this is \"IIRC\", because this is too long ago (2.5 years) for my small brain.", "count": 10}, {"raw_text": "(In reply to :Gavin Sharp (use gavin@gavinsharp.com for email) from comment #9)\n> I'm trying to understand the downsides.\n\nThe only one I can think of (mentioned this above), is that it's a disorienting change. Users used to the old behavior will be confused. Some users may want to turn it off, but that probably is a teensy minority.\n\n> Presumably a MITM attacker could\n> steal the password,\n\nAs far as proxies go, this vulnerability is always there (has nothing to do with autologin)\n\nThe password is only sent if FF gets a 407 error (Proxy auth required or some such). And it will only get this error for sites which it is configured to use the proxy for.\n\nWithout autologin, the user will be prompted for the password if it has not been provided previously in the session. If he provides it, then the website works. If not, then he will get a 403 or similar error. I haven't heard of any auth proxies that give something particularly useful when you give the wrong password (not providing a username/password gives a 407). Under the assumption that the user *wants* to visit the page, the password will always be sent.\n\nWith autologin, the website loads without any prompt. \n\nThe only case where there is a *new* MITM vulnerability provided by autologin is when the user is made to open a proxied page unwillingly. (I.e, if  the intranet site internal.institute.edu redirects to en.wikipedia.org and the user doesn't want to open an internet site). \n\nThis is a very ... rare case.  I can't imagine any case where I'd want to use ONLY the non proxied network due to fear of MITM, and that I willingly visit a malicious non proxied site that sets me up for an MITM by opening a proxied site.\n\n> but as I understand it there's no easy way for users to\n> detect a MITM situation, so the incremental risk is minimal (we should\n> perhaps investigate better protection against MITM proxy password stealing,\n> but that seems unlikely to be very common?).\n\n\nThere isn't a way to protect from MITM for HTTP proxies. Captive portals, yes, but not HTTP proxies. The protocol is a very standard one, and securing it would require a change in the protocol. There are ways the *infrastructure* can protect itself against MITMs (http://security.stackexchange.com/q/34879/7497, or using an HTTPS proxy http://security.stackexchange.com/q/23561/7497, or just switching to a captive portal), however the end user, when forced to use an HTTP proxy, must resign himself to the MITM vulnerability for the proxy credentials.", "creation_time": "2013-09-17T15:24:53Z", "bug_id": 646452, "creator": "manishearth@gmail.com", "tags": [], "attachment_id": null, "is_private": false, "text": "(In reply to :Gavin Sharp (use gavin@gavinsharp.com for email) from comment #9)\n> I'm trying to understand the downsides.\n\nThe only one I can think of (mentioned this above), is that it's a disorienting change. Users used to the old behavior will be confused. Some users may want to turn it off, but that probably is a teensy minority.\n\n> Presumably a MITM attacker could\n> steal the password,\n\nAs far as proxies go, this vulnerability is always there (has nothing to do with autologin)\n\nThe password is only sent if FF gets a 407 error (Proxy auth required or some such). And it will only get this error for sites which it is configured to use the proxy for.\n\nWithout autologin, the user will be prompted for the password if it has not been provided previously in the session. If he provides it, then the website works. If not, then he will get a 403 or similar error. I haven't heard of any auth proxies that give something particularly useful when you give the wrong password (not providing a username/password gives a 407). Under the assumption that the user *wants* to visit the page, the password will always be sent.\n\nWith autologin, the website loads without any prompt. \n\nThe only case where there is a *new* MITM vulnerability provided by autologin is when the user is made to open a proxied page unwillingly. (I.e, if  the intranet site internal.institute.edu redirects to en.wikipedia.org and the user doesn't want to open an internet site). \n\nThis is a very ... rare case.  I can't imagine any case where I'd want to use ONLY the non proxied network due to fear of MITM, and that I willingly visit a malicious non proxied site that sets me up for an MITM by opening a proxied site.\n\n> but as I understand it there's no easy way for users to\n> detect a MITM situation, so the incremental risk is minimal (we should\n> perhaps investigate better protection against MITM proxy password stealing,\n> but that seems unlikely to be very common?).\n\n\nThere isn't a way to protect from MITM for HTTP proxies. Captive portals, yes, but not HTTP proxies. The protocol is a very standard one, and securing it would require a change in the protocol. There are ways the *infrastructure* can protect itself against MITMs (http://security.stackexchange.com/q/34879/7497, or using an HTTPS proxy http://security.stackexchange.com/q/23561/7497, or just switching to a captive portal), however the end user, when forced to use an HTTP proxy, must resign himself to the MITM vulnerability for the proxy credentials.", "count": 11, "author": "manishearth@gmail.com", "time": "2013-09-17T15:24:53Z", "id": 7869922}, {"text": "(In reply to Ben Bucksch (:BenB) from comment #10)\n> From what I remember: Without this, the HTTP query goes 403 Forbidden, we\n> show password prompt (Firefox auth dialog UI), with hostname shown password\n> prefilled (because the user had already stored it before, independent of\n> this fix). The user clicks OK, and we resend the original HTTP query.\n\n407 usually, for most proxies. Sometimes a 403. A crazy sysadmin may configure the proxy to return 418, but otherwise 407/403 is standard behavior. \n\n> A potential problem is when the password on the proxy server changes. We'd\n> submit the old password, it would fail with 403 Forbidden, which looks the\n> same as no password, and we'd submit again. Loop. But IIRC, we thought of\n> that case in bug 521467 and prevent this with special code. So that\n> shouldn't happen either.\n\nNo loop, I tried that out myself recently, and autologin prompts if it gets a 407. As far as I can see, the logic is as follows:\n\n - Browser requests page behind a proxy from the proxy\n - Server sends back a 407\n - Autologin sends (wrong) password\n - Server sends a 407 again (or is it a 403?)\n - Autologin realises that there's a problem, and shuts itself off for the tab\n - User is prompted. He can now enter the new password (and save it)", "count": 12, "author": "manishearth@gmail.com", "time": "2013-09-17T15:31:48Z", "id": 7869944, "raw_text": "(In reply to Ben Bucksch (:BenB) from comment #10)\n> From what I remember: Without this, the HTTP query goes 403 Forbidden, we\n> show password prompt (Firefox auth dialog UI), with hostname shown password\n> prefilled (because the user had already stored it before, independent of\n> this fix). The user clicks OK, and we resend the original HTTP query.\n\n407 usually, for most proxies. Sometimes a 403. A crazy sysadmin may configure the proxy to return 418, but otherwise 407/403 is standard behavior. \n\n> A potential problem is when the password on the proxy server changes. We'd\n> submit the old password, it would fail with 403 Forbidden, which looks the\n> same as no password, and we'd submit again. Loop. But IIRC, we thought of\n> that case in bug 521467 and prevent this with special code. So that\n> shouldn't happen either.\n\nNo loop, I tried that out myself recently, and autologin prompts if it gets a 407. As far as I can see, the logic is as follows:\n\n - Browser requests page behind a proxy from the proxy\n - Server sends back a 407\n - Autologin sends (wrong) password\n - Server sends a 407 again (or is it a 403?)\n - Autologin realises that there's a problem, and shuts itself off for the tab\n - User is prompted. He can now enter the new password (and save it)", "creation_time": "2013-09-17T15:31:48Z", "bug_id": 646452, "creator": "manishearth@gmail.com", "tags": [], "is_private": false, "attachment_id": null}, {"creator": "sjw+bugzilla@posteo.net", "attachment_id": null, "text": "*** Bug 404228 has been marked as a duplicate of this bug. ***", "count": 13, "author": "sjw+bugzilla@posteo.net", "tags": [], "creation_time": "2013-11-22T15:49:05Z", "bug_id": 646452, "raw_text": "", "is_private": false, "id": 8113572, "time": "2013-11-22T15:49:05Z"}, {"creation_time": "2014-02-17T00:12:02Z", "bug_id": 646452, "raw_text": "Any verdict of this? Should we flag for sec-review?\n\nWe have three options here:\n\n - Implement this with UI (bug 910670): This gives users with concerns an easy way to go back.\n - Implement this, without UI\n - Just implement the UI: No security concerns, but does clutter the UI and it' better if replaced by a default option.\n\nAs far as I can tell, no other browser has this config option, and the behavior is to prompt the user every session. IE is a bit different, since Windows does proxy management on its own side, if you've already logged in to the proxy for the Windows session, you need not login again for IE (IIRC, haven't used IE in a while). I think this behavior can be carried over to firefox by using the \"system proxy\" preference.", "tags": [], "creator": "manishearth@gmail.com", "is_private": false, "attachment_id": null, "count": 14, "text": "Any verdict of this? Should we flag for sec-review?\n\nWe have three options here:\n\n - Implement this with UI (bug 910670): This gives users with concerns an easy way to go back.\n - Implement this, without UI\n - Just implement the UI: No security concerns, but does clutter the UI and it' better if replaced by a default option.\n\nAs far as I can tell, no other browser has this config option, and the behavior is to prompt the user every session. IE is a bit different, since Windows does proxy management on its own side, if you've already logged in to the proxy for the Windows session, you need not login again for IE (IIRC, haven't used IE in a while). I think this behavior can be carried over to firefox by using the \"system proxy\" preference.", "time": "2014-02-17T00:12:02Z", "author": "manishearth@gmail.com", "id": 8426647}, {"raw_text": "Manish, we should just enable it. There is no reason not to.\nThere is a big reason to do it: Avoiding to massively hassle the user.\nIt makes no sense to store a password and then still bother the user on every single browser start (!) with a prompt, asking to confirm a password we already have.\nIf there really is an edge case where this is a problem, the admin can easily disable it with the pref.", "creation_time": "2014-02-17T03:17:32Z", "bug_id": 646452, "creator": "ben.bucksch@beonex.com", "tags": [], "attachment_id": null, "is_private": false, "text": "Manish, we should just enable it. There is no reason not to.\nThere is a big reason to do it: Avoiding to massively hassle the user.\nIt makes no sense to store a password and then still bother the user on every single browser start (!) with a prompt, asking to confirm a password we already have.\nIf there really is an edge case where this is a problem, the admin can easily disable it with the pref.", "count": 15, "author": "ben.bucksch@beonex.com", "time": "2014-02-17T03:17:32Z", "id": 8426935}, {"id": 8456409, "time": "2014-02-24T20:41:56Z", "is_private": false, "tags": [], "raw_text": "(In reply to Manish Goregaokar [:manishearth] from comment #14)\n> We have three options here:\n> \n>  - Implement this with UI (bug 910670): This gives users with concerns an\n> easy way to go back.\n>  - Implement this, without UI\n>  - Just implement the UI: No security concerns, but does clutter the UI and\n> it' better if replaced by a default option.\n\nBug 910670 is already fixed, so we should just flip the default pref value in this bug.", "creation_time": "2014-02-24T20:41:56Z", "bug_id": 646452, "author": "gavin.sharp@gmail.com", "count": 16, "text": "(In reply to Manish Goregaokar [:manishearth] from comment #14)\n> We have three options here:\n> \n>  - Implement this with UI (bug 910670): This gives users with concerns an\n> easy way to go back.\n>  - Implement this, without UI\n>  - Just implement the UI: No security concerns, but does clutter the UI and\n> it' better if replaced by a default option.\n\nBug 910670 is already fixed, so we should just flip the default pref value in this bug.", "attachment_id": null, "creator": "gavin.sharp@gmail.com"}, {"tags": [], "creator": "jduell.mcbugs@gmail.com", "creation_time": "2014-02-25T06:35:48Z", "bug_id": 646452, "raw_text": "Patrick--are you ok with changing the pref here?  AFAICT it's mostly a UI issue, but maybe I'm missing a security angle.", "is_private": false, "attachment_id": null, "count": 17, "text": "Patrick--are you ok with changing the pref here?  AFAICT it's mostly a UI issue, but maybe I'm missing a security angle.", "id": 8458684, "time": "2014-02-25T06:35:48Z", "author": "jduell.mcbugs@gmail.com"}, {"text": "(In reply to Ben Bucksch (:BenB) from comment #0)\n\n> It was only temporarily false, because of bug 521467 comment 45.\n\nI'm still a teeny bit wary of enabling automatic login, but not objectionably so. FTR...\n\nThe only security angle I can think of is if someone is relying on using the auth prompt as a permission prompt (eg to limit access to/from a closed network, or to limit XSS to something behind the proxy). But I think that's still practically ok as the current situation is not robust.\n\nMy rationale keeps coming back to the fact that proxy auth is basically a one-time thing per session. Once you've done it, even with a prompt, it stays active until you either quit the browser or manually do a History --> Clear Recent History --> clear \"Active Logins\". [At least I assume that nukes proxy auth; it certainly does for HTTP auth.] So the only way to rely on using the prompt this way requires the human operator to be extremely fastidious with quitting/clearing once their desired task is done. Realistically this would be terribly error-prone and ineffectual security practice.\n\nAs a more concrete example: In the current world, if you're browsing an evil page that unexpectedly triggers access to an authenticated proxy, the prompt will indeed give a savvy user the opportunity to say \"whoa!\" and deny access. But that seems extremely unlikely -- I'd expect that a user would almost always have authenticated earlier in their session for usual/legitimate reasons, and so browsing an evil page later on wouldn't trigger the prompt again.\n\nThis mostly applies to HTTP auth, as well, although it's much more plausible that the prompt may serve as a speedbump to a site you rarely login to. For proxies, the far more common case is that the proxy is simply required for all external internet access. [Even 15 years ago, when I worked on firewall proxy software, using a proxy to get _into_ an intranet was uncommon. And now everyone uses VPNs for that.]", "count": 18, "author": "jdinbox@gmail.com", "creator": "jdinbox@gmail.com", "attachment_id": null, "time": "2014-02-25T23:15:36Z", "id": 8462947, "bug_id": 646452, "creation_time": "2014-02-25T23:15:36Z", "raw_text": "(In reply to Ben Bucksch (:BenB) from comment #0)\n\n> It was only temporarily false, because of bug 521467 comment 45.\n\nI'm still a teeny bit wary of enabling automatic login, but not objectionably so. FTR...\n\nThe only security angle I can think of is if someone is relying on using the auth prompt as a permission prompt (eg to limit access to/from a closed network, or to limit XSS to something behind the proxy). But I think that's still practically ok as the current situation is not robust.\n\nMy rationale keeps coming back to the fact that proxy auth is basically a one-time thing per session. Once you've done it, even with a prompt, it stays active until you either quit the browser or manually do a History --> Clear Recent History --> clear \"Active Logins\". [At least I assume that nukes proxy auth; it certainly does for HTTP auth.] So the only way to rely on using the prompt this way requires the human operator to be extremely fastidious with quitting/clearing once their desired task is done. Realistically this would be terribly error-prone and ineffectual security practice.\n\nAs a more concrete example: In the current world, if you're browsing an evil page that unexpectedly triggers access to an authenticated proxy, the prompt will indeed give a savvy user the opportunity to say \"whoa!\" and deny access. But that seems extremely unlikely -- I'd expect that a user would almost always have authenticated earlier in their session for usual/legitimate reasons, and so browsing an evil page later on wouldn't trigger the prompt again.\n\nThis mostly applies to HTTP auth, as well, although it's much more plausible that the prompt may serve as a speedbump to a site you rarely login to. For proxies, the far more common case is that the proxy is simply required for all external internet access. [Even 15 years ago, when I worked on firewall proxy software, using a proxy to get _into_ an intranet was uncommon. And now everyone uses VPNs for that.]", "tags": [], "is_private": false}, {"raw_text": "Justin, I think the most common usage of HTTP proxy auth is within corporations, where the proxy is on the perimeter between corporate network and the Internet. All Internet traffic goes through the proxy. I guess the reason why it's authenticated is to attribute traffic to specific users, in a way that doesn't rely on IP address->user mapping. It simply fits in their infrastructure.\n\nIn this setup, the fact that the user has to do some manual action for proxy auth isn't an intentional security feature, but a nuisance.\n\nIf you have setup where you really want that prompt, you can still have it by flipping the pref (possibly hidden). I think that situation is very rare, though.", "creation_time": "2014-02-26T22:04:15Z", "bug_id": 646452, "creator": "ben.bucksch@beonex.com", "tags": [], "is_private": false, "attachment_id": null, "text": "Justin, I think the most common usage of HTTP proxy auth is within corporations, where the proxy is on the perimeter between corporate network and the Internet. All Internet traffic goes through the proxy. I guess the reason why it's authenticated is to attribute traffic to specific users, in a way that doesn't rely on IP address->user mapping. It simply fits in their infrastructure.\n\nIn this setup, the fact that the user has to do some manual action for proxy auth isn't an intentional security feature, but a nuisance.\n\nIf you have setup where you really want that prompt, you can still have it by flipping the pref (possibly hidden). I think that situation is very rare, though.", "count": 19, "author": "ben.bucksch@beonex.com", "time": "2014-02-26T22:04:15Z", "id": 8468461}, {"attachment_id": null, "creator": "ben.bucksch@beonex.com", "author": "ben.bucksch@beonex.com", "text": "> to attribute traffic to specific users\n\n(E.g. the old \"You watched news/youtube/monster.com during work time. You're fired!\")", "count": 20, "is_private": false, "raw_text": "> to attribute traffic to specific users\n\n(E.g. the old \"You watched news/youtube/monster.com during work time. You're fired!\")", "bug_id": 646452, "creation_time": "2014-02-26T22:05:55Z", "tags": [], "time": "2014-02-26T22:05:55Z", "id": 8468470}, {"is_private": false, "tags": [], "raw_text": "(In reply to Jason Duell (:jduell) from comment #17)\n> Patrick--are you ok with changing the pref here?  AFAICT it's mostly a UI\n> issue, but maybe I'm missing a security angle.\n\nI think this is really a front end call - so feel free to ignore my 2 cents. But I wouldn't make the change. It is way too easy to send out credentials unprompted from one network onto another when you switch networks just by moving your laptop or your phone.. and its always plaintext bearer basic auth tokens right now so that's doubly bad if you can easily get them to be emitted.\n\nthat objection would be null if we were connected to the proxy over TLS - bug 378637. I'm actually working on that feature.", "creation_time": "2014-03-04T22:10:24Z", "bug_id": 646452, "id": 8491289, "time": "2014-03-04T22:10:24Z", "attachment_id": null, "creator": "mcmanus@ducksong.com", "author": "mcmanus@ducksong.com", "count": 21, "text": "(In reply to Jason Duell (:jduell) from comment #17)\n> Patrick--are you ok with changing the pref here?  AFAICT it's mostly a UI\n> issue, but maybe I'm missing a security angle.\n\nI think this is really a front end call - so feel free to ignore my 2 cents. But I wouldn't make the change. It is way too easy to send out credentials unprompted from one network onto another when you switch networks just by moving your laptop or your phone.. and its always plaintext bearer basic auth tokens right now so that's doubly bad if you can easily get them to be emitted.\n\nthat objection would be null if we were connected to the proxy over TLS - bug 378637. I'm actually working on that feature."}, {"attachment_id": null, "creator": "jdinbox@gmail.com", "author": "jdinbox@gmail.com", "text": "(In reply to Patrick McManus [:mcmanus] from comment #21)\n\n> It is way too easy to send out credentials\n> unprompted from one network onto another when you switch networks just by\n> moving your laptop or your phone.\n\nThis is basically what I mentioned in comment 18... This is presumably already happening today, because unless a user is extremely careful about quitting the browser / clearing stored logins, switching networks doesn't clear anything. And so loading a web page (or waiting a moment for, say, an already loaded Twitter to make a new XHR) will send out proxy creds.", "count": 22, "is_private": false, "tags": [], "raw_text": "(In reply to Patrick McManus [:mcmanus] from comment #21)\n\n> It is way too easy to send out credentials\n> unprompted from one network onto another when you switch networks just by\n> moving your laptop or your phone.\n\nThis is basically what I mentioned in comment 18... This is presumably already happening today, because unless a user is extremely careful about quitting the browser / clearing stored logins, switching networks doesn't clear anything. And so loading a web page (or waiting a moment for, say, an already loaded Twitter to make a new XHR) will send out proxy creds.", "creation_time": "2014-03-05T21:10:31Z", "bug_id": 646452, "id": 8496488, "time": "2014-03-05T21:10:31Z"}, {"is_private": false, "bug_id": 646452, "creation_time": "2014-03-05T23:06:58Z", "raw_text": "actually daniel and steve are working on a changed network trigger right now for doing this kind of state clearing. This should go on the list of things to observe it.. (open connections, dns, etc are the obvious first things).", "tags": [], "time": "2014-03-05T23:06:58Z", "id": 8497163, "attachment_id": null, "creator": "mcmanus@ducksong.com", "author": "mcmanus@ducksong.com", "count": 23, "text": "actually daniel and steve are working on a changed network trigger right now for doing this kind of state clearing. This should go on the list of things to observe it.. (open connections, dns, etc are the obvious first things)."}, {"tags": [], "raw_text": "Is this going to be landed soon? I need to sign off the feature from bug 910670 for 30 Beta and it will be with no use if I sign off it and then just remove it after this will land.", "creation_time": "2014-04-25T06:00:24Z", "bug_id": 646452, "is_private": false, "id": 8709504, "time": "2014-04-25T06:00:24Z", "creator": "bogdan.maris@softvision.com", "attachment_id": null, "text": "Is this going to be landed soon? I need to sign off the feature from bug 910670 for 30 Beta and it will be with no use if I sign off it and then just remove it after this will land.", "count": 24, "author": "bogdan.maris@softvision.com"}, {"is_private": false, "raw_text": "", "creation_time": "2014-04-25T09:31:40Z", "bug_id": 646452, "tags": [], "time": "2014-04-25T09:31:40Z", "id": 8710151, "attachment_id": 8412458, "creator": "ben.bucksch@beonex.com", "author": "ben.bucksch@beonex.com", "text": "Created attachment 8412458\nChange pref to true", "count": 25}, {"text": "Comment on attachment 8412458\nChange pref to true\n\nAs said in initial description, this was false only as temporary measure. See original bug 521467.", "count": 26, "time": "2014-04-25T09:33:07Z", "author": "ben.bucksch@beonex.com", "id": 8710156, "bug_id": 646452, "creation_time": "2014-04-25T09:33:07Z", "raw_text": "As said in initial description, this was false only as temporary measure. See original bug 521467.", "tags": [], "creator": "ben.bucksch@beonex.com", "attachment_id": 8412458, "is_private": false}, {"bug_id": 646452, "creation_time": "2014-04-25T12:22:25Z", "raw_text": "Review of attachment 8412458:\n-----------------------------------------------------------------\n\nbased on comment 16 r=gavin r=mcmanus", "tags": [], "creator": "mcmanus@ducksong.com", "attachment_id": 8412458, "is_private": false, "text": "Comment on attachment 8412458\nChange pref to true\n\nReview of attachment 8412458:\n-----------------------------------------------------------------\n\nbased on comment 16 r=gavin r=mcmanus", "count": 27, "time": "2014-04-25T12:22:25Z", "author": "mcmanus@ducksong.com", "id": 8710771}, {"creator": "ben.bucksch@beonex.com", "attachment_id": null, "text": "checkin-needed, hg commit message:\n\"\nAutomatically log in to HTTP proxy that needs credentials -- Bug 646452, bug 521467, r=gavin r=mcmanus\n\nSome proxies need a username/password. Some internal corporate networks\nhave such a proxy. In practice it is often merely to account what\nwhich employee does on the Internet.\n\nSuch users need to log in whenever they start the browser, which obviously\nis very often. We already store the password, but we don't use it.\nThis change flips the pref to actually use that password.\nIf some setups/corporations have a problem with this, they can change the\npref back to false for their users.\n\"", "count": 28, "author": "ben.bucksch@beonex.com", "tags": [], "raw_text": "checkin-needed, hg commit message:\n\"\nAutomatically log in to HTTP proxy that needs credentials -- Bug 646452, bug 521467, r=gavin r=mcmanus\n\nSome proxies need a username/password. Some internal corporate networks\nhave such a proxy. In practice it is often merely to account what\nwhich employee does on the Internet.\n\nSuch users need to log in whenever they start the browser, which obviously\nis very often. We already store the password, but we don't use it.\nThis change flips the pref to actually use that password.\nIf some setups/corporations have a problem with this, they can change the\npref back to false for their users.\n\"", "creation_time": "2014-04-26T00:51:34Z", "bug_id": 646452, "is_private": false, "id": 8714843, "time": "2014-04-26T00:51:34Z"}, {"tags": [], "bug_id": 646452, "creation_time": "2014-04-26T22:56:48Z", "raw_text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/426526ce4367\n\nTo make life easier for those landing on your behalf, please make sure future patches include commit information. Thanks!\nhttps://developer.mozilla.org/en-US/docs/Mercurial_FAQ#How_can_I_generate_a_patch_for_somebody_else_to_check-in_for_me.3F", "is_private": false, "id": 8716281, "time": "2014-04-26T22:56:48Z", "creator": "ryanvm@gmail.com", "attachment_id": null, "count": 29, "text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/426526ce4367\n\nTo make life easier for those landing on your behalf, please make sure future patches include commit information. Thanks!\nhttps://developer.mozilla.org/en-US/docs/Mercurial_FAQ#How_can_I_generate_a_patch_for_somebody_else_to_check-in_for_me.3F", "author": "ryanvm@gmail.com"}, {"bug_id": 646452, "creation_time": "2014-04-26T23:49:12Z", "raw_text": "Backed out for mochitest-5 orange.\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/ea77cc4fc2d8\n\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=38567556&tree=Mozilla-Inbound", "tags": [], "creator": "ryanvm@gmail.com", "is_private": false, "attachment_id": null, "count": 30, "text": "Backed out for mochitest-5 orange.\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/ea77cc4fc2d8\n\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=38567556&tree=Mozilla-Inbound", "time": "2014-04-26T23:49:12Z", "author": "ryanvm@gmail.com", "id": 8716449}, {"tags": [], "bug_id": 646452, "creation_time": "2014-06-30T05:07:42Z", "raw_text": "hi all.\ni am pretty new \n how do I apply the patch ?", "is_private": false, "id": 8992288, "time": "2014-06-30T05:07:42Z", "creator": "masterprabin@gmail.com", "attachment_id": null, "text": "hi all.\ni am pretty new \n how do I apply the patch ?", "count": 31, "author": "masterprabin@gmail.com"}, {"is_private": false, "attachment_id": null, "creator": "manishearth@gmail.com", "tags": [], "raw_text": "(In reply to pbugzilla from comment #31)\n> hi all.\n> i am pretty new \n>  how do I apply the patch ?\n\nIf you have the source for Firefox, you can apply this patch with `patch -p1`, and recompile.\n\nThis isn't a patch that can be applied to a normal firefox install.", "bug_id": 646452, "creation_time": "2014-06-30T06:57:32Z", "id": 8992479, "author": "manishearth@gmail.com", "time": "2014-06-30T06:57:32Z", "text": "(In reply to pbugzilla from comment #31)\n> hi all.\n> i am pretty new \n>  how do I apply the patch ?\n\nIf you have the source for Firefox, you can apply this patch with `patch -p1`, and recompile.\n\nThis isn't a patch that can be applied to a normal firefox install.", "count": 32}, {"author": "bug-husbandry-bot@mozilla.bugs", "count": 33, "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "attachment_id": null, "creator": "bug-husbandry-bot@mozilla.bugs", "time": "2017-09-13T18:38:44Z", "id": 12658623, "is_private": false, "creation_time": "2017-09-13T18:38:44Z", "bug_id": 646452, "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "tags": []}]}}, "comments": {}}