{"bugs": {"638966": {"comments": [{"text": "The Sync key should be stored in the operating system keychain (when available) and/or in the NSS keystore/certdb instead of in password manager.  This was suggested by someone in the Sync team but I forgot who already. This would prevent the user's sync from being deleted when the password manager is cleared. (Presumably, they would still have to re-enter their sync username/password to use sync, right?) Potentially this would also be part of the work which would enable Sync to work even when Firefox is in FIPS mode.\n\nThe best place to store the password depends on many factors including: (a) whether the operating system exposes a keychain API accessible to Firefox/Sync, (b) whether the user is (securely) authenticated by the operating system, (c) whether the user uses multiple profiles and/or multiple OS accounts when computers are shared by multiple users, and/or (d) whether the user has a master password set on his Firefox profile.", "count": 0, "author": "brian@briansmith.org", "time": "2011-03-05T00:13:25Z", "id": 5323109, "raw_text": "The Sync key should be stored in the operating system keychain (when available) and/or in the NSS keystore/certdb instead of in password manager.  This was suggested by someone in the Sync team but I forgot who already. This would prevent the user's sync from being deleted when the password manager is cleared. (Presumably, they would still have to re-enter their sync username/password to use sync, right?) Potentially this would also be part of the work which would enable Sync to work even when Firefox is in FIPS mode.\n\nThe best place to store the password depends on many factors including: (a) whether the operating system exposes a keychain API accessible to Firefox/Sync, (b) whether the user is (securely) authenticated by the operating system, (c) whether the user uses multiple profiles and/or multiple OS accounts when computers are shared by multiple users, and/or (d) whether the user has a master password set on his Firefox profile.", "creation_time": "2011-03-05T00:13:25Z", "bug_id": 638966, "creator": "brian@briansmith.org", "tags": [], "attachment_id": null, "is_private": false}, {"author": "brian@briansmith.org", "count": 1, "text": "See also bug 496660.", "attachment_id": null, "creator": "brian@briansmith.org", "time": "2011-03-05T02:40:02Z", "id": 5323456, "is_private": false, "bug_id": 638966, "creation_time": "2011-03-05T02:40:02Z", "raw_text": "See also bug 496660.", "tags": []}, {"bug_id": 638966, "creation_time": "2015-11-24T17:46:50Z", "raw_text": "It's worth considering this at some point given the amount of interference we're seeing with third-party password managers.", "tags": [], "is_private": false, "time": "2015-11-24T17:46:50Z", "id": 10960867, "creator": "ckarlof@mozilla.com", "attachment_id": null, "count": 2, "text": "It's worth considering this at some point given the amount of interference we're seeing with third-party password managers.", "author": "ckarlof@mozilla.com"}, {"creator": "ryan@rfk.id.au", "attachment_id": null, "text": "We could consider taking a fresh look at this when we come to integrate the Logins storage rust component, since that'll be making some changes to the current location at which the key is stored.", "count": 3, "author": "ryan@rfk.id.au", "raw_text": "We could consider taking a fresh look at this when we come to integrate the Logins storage rust component, since that'll be making some changes to the current location at which the key is stored.", "creation_time": "2019-04-16T02:59:00Z", "bug_id": 638966, "tags": [], "is_private": false, "time": "2019-04-16T02:59:00Z", "id": 14057112}]}}, "comments": {}}