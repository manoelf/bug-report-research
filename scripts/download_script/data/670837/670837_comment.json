{"comments": {}, "bugs": {"670837": {"comments": [{"is_private": false, "creator": "VYV03354@nifty.ne.jp", "count": 0, "creation_time": "2011-07-12T04:23:55Z", "author": "VYV03354@nifty.ne.jp", "text": "Steps to reproduce:\n1. Enter data:text/html,<input maxlength=3> into the location bar.\n2. Type (or copy and paste) ", "bug_id": 670837, "tags": [], "time": "2011-07-12T04:23:55Z", "attachment_id": null, "raw_text": "Steps to reproduce:\n1. Enter data:text/html,<input maxlength=3> into the location bar.\n2. Type (or copy and paste) ", "id": 5585992}, {"text": "Oops, Bugzilla didn't accept non-BMP characters...\n\nSteps to reproduce:\n1. Enter data:text/html,<input maxlength=3> into the location bar.\n2. Type (or copy and paste) &#x20BB7;\u91ce\u5bb6 into the text box.\nExpected result:\n&#x20BB7;\u91ce\u5bb6\nActual result:\n&#x20BB7;\u91ce", "tags": [], "time": "2011-07-12T04:25:08Z", "bug_id": 670837, "creation_time": "2011-07-12T04:25:08Z", "author": "VYV03354@nifty.ne.jp", "count": 1, "is_private": false, "creator": "VYV03354@nifty.ne.jp", "id": 5585993, "raw_text": "Oops, Bugzilla didn't accept non-BMP characters...\n\nSteps to reproduce:\n1. Enter data:text/html,<input maxlength=3> into the location bar.\n2. Type (or copy and paste) &#x20BB7;\u91ce\u5bb6 into the text box.\nExpected result:\n&#x20BB7;\u91ce\u5bb6\nActual result:\n&#x20BB7;\u91ce", "attachment_id": null}, {"id": 5585995, "raw_text": "maxlength is a maximum allowed value length in code-point (not UTF-16 code unit) per HTML5 spec.\nChrome works as expected.", "attachment_id": null, "time": "2011-07-12T04:25:41Z", "tags": [], "bug_id": 670837, "text": "maxlength is a maximum allowed value length in code-point (not UTF-16 code unit) per HTML5 spec.\nChrome works as expected.", "author": "VYV03354@nifty.ne.jp", "creation_time": "2011-07-12T04:25:41Z", "count": 2, "creator": "VYV03354@nifty.ne.jp", "is_private": false}, {"creator": "bzbarsky@mit.edu", "is_private": false, "count": 3, "author": "bzbarsky@mit.edu", "creation_time": "2011-07-12T04:36:35Z", "tags": [], "bug_id": 670837, "time": "2011-07-12T04:36:35Z", "text": "For what it's worth, WebKit's maxlength impl counts glyph clusters.  We should do the same, but we don't have good infrastructure for it....  We probably need a bug on said infrastructure, and also some conversation between Mounir and whoever implements it on how it needs to work for performance to not be hosed.", "attachment_id": null, "raw_text": "For what it's worth, WebKit's maxlength impl counts glyph clusters.  We should do the same, but we don't have good infrastructure for it....  We probably need a bug on said infrastructure, and also some conversation between Mounir and whoever implements it on how it needs to work for performance to not be hosed.", "id": 5586003}, {"raw_text": "And I think the HTML5 spec is sort of wrong here.  Maxlength should not count combining marks and the like, imo.", "attachment_id": null, "id": 5586004, "count": 4, "creator": "bzbarsky@mit.edu", "is_private": false, "tags": [], "time": "2011-07-12T04:37:47Z", "bug_id": 670837, "text": "And I think the HTML5 spec is sort of wrong here.  Maxlength should not count combining marks and the like, imo.", "author": "bzbarsky@mit.edu", "creation_time": "2011-07-12T04:37:47Z"}, {"count": 5, "is_private": false, "creator": "smontagu@smontagu.org", "text": "That depends why you want maxlength in the first place. See http://lists.w3.org/Archives/Public/www-international/2011AprJun/0119.html\n\nA more serious case than the STR in comment 1 is entering \u91ce\u5bb6&#x20BB7; -- this leaves an unpaired surrogate in the input field.", "tags": [], "time": "2011-07-12T06:53:27Z", "bug_id": 670837, "creation_time": "2011-07-12T06:53:27Z", "author": "smontagu@smontagu.org", "raw_text": "That depends why you want maxlength in the first place. See http://lists.w3.org/Archives/Public/www-international/2011AprJun/0119.html\n\nA more serious case than the STR in comment 1 is entering \u91ce\u5bb6&#x20BB7; -- this leaves an unpaired surrogate in the input field.", "attachment_id": null, "id": 5586087}, {"attachment_id": null, "raw_text": "The DOM doesn't do anything with maxlength except the attribute reflection, even validation has been disabled before shipping Firefox 4. This should be fixed in the editor.\nFWIW, we might change the behavior with maxlength to not prevent typing but just making the field invalid if the text length is greater than maxlength, see bug 613016.", "id": 5586246, "is_private": false, "creator": "mounir@lamouri.fr", "count": 6, "creation_time": "2011-07-12T09:28:36Z", "author": "mounir@lamouri.fr", "text": "The DOM doesn't do anything with maxlength except the attribute reflection, even validation has been disabled before shipping Firefox 4. This should be fixed in the editor.\nFWIW, we might change the behavior with maxlength to not prevent typing but just making the field invalid if the text length is greater than maxlength, see bug 613016.", "tags": [], "bug_id": 670837, "time": "2011-07-12T09:28:36Z"}, {"id": 5586306, "attachment_id": null, "raw_text": "(In reply to comment #3)\n> For what it's worth, WebKit's maxlength impl counts glyph clusters.  We\n> should do the same....\n\nI don't think I agree with this, in general. For cases like Latin letters with accents, it seems a reasonable interpretation (although as Simon mentions, this depends on the use case); however, for Indic scripts where a \"cluster\" may consist of multiple conjoined consonants, plus a vowel mark, plus additional marks such as nasalization, I don't believe it makes any sense (to users) to count the \"length\" of a string in terms of glyph clusters; they are well aware of the constituent characters within such clusters and would expect to count them separately.\n\nWhether \"length\" (for the purposes of maxlength) is most usefully measured in terms of Unicode characters or UTF16 code units is a tricky question, but given that Javascript and DOMStrings expose the UTF16 encoding form, I think it would be most consistent for maxlength to be expressed as a count of UTF16 units, too.", "author": "jfkthame@gmail.com", "creation_time": "2011-07-12T10:32:13Z", "time": "2011-07-12T10:32:13Z", "tags": [], "text": "(In reply to comment #3)\n> For what it's worth, WebKit's maxlength impl counts glyph clusters.  We\n> should do the same....\n\nI don't think I agree with this, in general. For cases like Latin letters with accents, it seems a reasonable interpretation (although as Simon mentions, this depends on the use case); however, for Indic scripts where a \"cluster\" may consist of multiple conjoined consonants, plus a vowel mark, plus additional marks such as nasalization, I don't believe it makes any sense (to users) to count the \"length\" of a string in terms of glyph clusters; they are well aware of the constituent characters within such clusters and would expect to count them separately.\n\nWhether \"length\" (for the purposes of maxlength) is most usefully measured in terms of Unicode characters or UTF16 code units is a tricky question, but given that Javascript and DOMStrings expose the UTF16 encoding form, I think it would be most consistent for maxlength to be expressed as a count of UTF16 units, too.", "creator": "jfkthame@gmail.com", "is_private": false, "bug_id": 670837, "count": 7}, {"raw_text": "(In reply to comment #7)\n\n> Whether \"length\" (for the purposes of maxlength) is most usefully measured\n> in terms of Unicode characters or UTF16 code units is a tricky question, but\n> given that Javascript and DOMStrings expose the UTF16 encoding form, I think\n> it would be most consistent for maxlength to be expressed as a count of\n> UTF16 units, too.\n\nEither way, we shouldn't truncate in mid-supplementary character. If maxlength is interpreted as UTF-16 code units, \"\u91ce\u5bb6&#x20BB7;\" with a maxlength of 3 should give \"\u91ce\u5bb6\"", "attachment_id": null, "id": 5586348, "is_private": false, "creator": "smontagu@smontagu.org", "text": "(In reply to comment #7)\n\n> Whether \"length\" (for the purposes of maxlength) is most usefully measured\n> in terms of Unicode characters or UTF16 code units is a tricky question, but\n> given that Javascript and DOMStrings expose the UTF16 encoding form, I think\n> it would be most consistent for maxlength to be expressed as a count of\n> UTF16 units, too.\n\nEither way, we shouldn't truncate in mid-supplementary character. If maxlength is interpreted as UTF-16 code units, \"\u91ce\u5bb6&#x20BB7;\" with a maxlength of 3 should give \"\u91ce\u5bb6\"", "tags": [], "time": "2011-07-12T10:55:33Z", "creation_time": "2011-07-12T10:55:33Z", "author": "smontagu@smontagu.org", "count": 8, "bug_id": 670837}, {"count": 9, "bug_id": 670837, "is_private": false, "creator": "jfkthame@gmail.com", "text": "(In reply to comment #8)\n> Either way, we shouldn't truncate in mid-supplementary character. If\n> maxlength is interpreted as UTF-16 code units, \"\u91ce\u5bb6&#x20BB7;\" with a\n> maxlength of 3 should give \"\u91ce\u5bb6\"\n\nDefinitely. We should never allow unpaired surrogates.\n\n(Well, I don't think we can prevent people creating them via JS string-munging. So our code needs to handle them robustly anywhere they occur. But wherever possible, we should prevent them arising.)", "time": "2011-07-12T11:18:00Z", "tags": [], "creation_time": "2011-07-12T11:18:00Z", "author": "jfkthame@gmail.com", "raw_text": "(In reply to comment #8)\n> Either way, we shouldn't truncate in mid-supplementary character. If\n> maxlength is interpreted as UTF-16 code units, \"\u91ce\u5bb6&#x20BB7;\" with a\n> maxlength of 3 should give \"\u91ce\u5bb6\"\n\nDefinitely. We should never allow unpaired surrogates.\n\n(Well, I don't think we can prevent people creating them via JS string-munging. So our code needs to handle them robustly anywhere they occur. But wherever possible, we should prevent them arising.)", "attachment_id": null, "id": 5586373}, {"attachment_id": null, "raw_text": "It really sounds like there are two separate issues here:\n\n1)  Fix editor to not truncate in mid-surrogate-pair.\n2)  Spec discussion that needs to happen (and I'm probably the wrong person to\n    drive it).\n\nWho's willing to take on #2?", "id": 5586490, "creator": "bzbarsky@mit.edu", "is_private": false, "author": "bzbarsky@mit.edu", "creation_time": "2011-07-12T12:48:58Z", "tags": [], "time": "2011-07-12T12:48:58Z", "text": "It really sounds like there are two separate issues here:\n\n1)  Fix editor to not truncate in mid-surrogate-pair.\n2)  Spec discussion that needs to happen (and I'm probably the wrong person to\n    drive it).\n\nWho's willing to take on #2?", "count": 10, "bug_id": 670837}, {"attachment_id": null, "raw_text": "Note that #2 is happening in https://github.com/whatwg/html/issues/1467", "id": 11715375, "creator": "bzbarsky@mit.edu", "is_private": false, "count": 11, "author": "bzbarsky@mit.edu", "creation_time": "2016-09-16T14:30:05Z", "time": "2016-09-16T14:30:05Z", "bug_id": 670837, "tags": [], "text": "Note that #2 is happening in https://github.com/whatwg/html/issues/1467"}, {"raw_text": "I have created a pen that makes it slightly easy to check:\n\nhttps://codepen.io/thany/pen/zmRZKM\n\nMy current findings:\nFirefox 64 has this bug\nChrome 72 has this bug\nEdge 17 does NOT have this bug", "attachment_id": null, "id": 13692896, "count": 12, "is_private": false, "creator": "martijn@thany.nl", "text": "I have created a pen that makes it slightly easy to check:\n\nhttps://codepen.io/thany/pen/zmRZKM\n\nMy current findings:\nFirefox 64 has this bug\nChrome 72 has this bug\nEdge 17 does NOT have this bug", "bug_id": 670837, "tags": [], "time": "2018-10-17T09:58:34Z", "creation_time": "2018-10-17T09:58:34Z", "author": "martijn@thany.nl"}]}}}