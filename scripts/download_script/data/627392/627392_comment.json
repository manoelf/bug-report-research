{"bugs": {"627392": {"comments": [{"is_private": false, "time": "2011-01-20T17:11:55Z", "creation_time": "2011-01-20T17:11:55Z", "id": 5213755, "bug_id": 627392, "tags": [], "text": "User-Agent:       Konqueror\nBuild Identifier: \n\nWhen I was trying to compile trunk the compilation ended with the following error (\"B\u0142\u0105d\" is \"Error\" in Polish):\n\nlibtool: compile:  gcc-4.3.3 -DHAVE_CONFIG_H -I. -I/home/firefox/hg/src/js/src/ctypes/libffi -I. -I/home/firefox/hg/src/js/src/ctypes/libffi/include -Iinclude -I/home/firefox/hg/src/js/src/ctypes/libffi/src -I. -I/home/firefox/hg/src/js/src/ctypes/libffi/include -Iinclude -I/home/firefox/hg/src/js/src/ctypes/libffi/src -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -gstabs+ -fno-strict-aliasing -pthread -pipe -MT src/x86/sysv.lo -MD -MP -MF src/x86/.deps/sysv.Tpo -c /home/firefox/hg/src/js/src/ctypes/libffi/src/x86/sysv.S\n-fPIC -DPIC -o src/x86/sysv.o\n/home/firefox/hg/src/js/src/ctypes/libffi/src/x86/sysv.S:350:2: error: #error missing .ascii/.string\nmake[7]: *** [src/x86/sysv.lo] B\u0142\u0105d 1\n\nI investigated this issue a little bit and wrote a patch.\nThis error occurs when both HAVE_AS_ASCII_PSEUDO_OP and HAVE_AS_STRING_PSEUDO_OP are not defined. This happens on my system, because compilation of test programs to check for these features in libffi's configure fails. The culprit is insufficient backslashing, it seems - here is part of js/src/ctypes/libffi/configure:\n--- js/src/ctypes/libffi/configure ---\n       libffi_cv_as_ascii_pseudo_op=unknown\n       # Check if we have .ascii\n       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nasm (\".ascii \\\"string\\\"\");\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  libffi_cv_as_ascii_pseudo_op=yes\nelse\n  libffi_cv_as_ascii_pseudo_op=no\nfi\n--------------------------------------\n(the similar check is for HAVE_AS_STRING_PSEUDO_OP).\n\nThe problematic line is\n\nasm (\".ascii \\\"string\\\"\");\n\nHere is why:\n$ cat test-ksh.sh \n#!/bin/ksh\ncat - <<_ACEOF\nasm (\".ascii \\\"string\\\"\");\n_ACEOF\n$ ./test-ksh.sh\nasm (\".ascii \"string\"\");\n\n$ cat test-bash.sh \n#!/bin/bash\ncat - <<_ACEOF\nasm (\".ascii \\\"string\\\"\");\n_ACEOF\n$ ./test-bash.sh \nasm (\".ascii \\\"string\\\"\");\n\nAnd on my system:\n$ readlink /bin/sh \nksh\n\nTrying to compile\nasm (\".ascii \"string\"\");\nobviously fails, always, and |.ascii \"string\"| feature is not correctly checked.\n\nThe solution is to add additional \"\\\". After this both shells (ksh and bash) work as expected, ie. produce the line\nasm (\".ascii \\\"string\\\"\");\nand test program may be correctly checked for required feature.\n\nReproducible: Always", "creator": "bartml@wp.pl", "raw_text": "User-Agent:       Konqueror\nBuild Identifier: \n\nWhen I was trying to compile trunk the compilation ended with the following error (\"B\u0142\u0105d\" is \"Error\" in Polish):\n\nlibtool: compile:  gcc-4.3.3 -DHAVE_CONFIG_H -I. -I/home/firefox/hg/src/js/src/ctypes/libffi -I. -I/home/firefox/hg/src/js/src/ctypes/libffi/include -Iinclude -I/home/firefox/hg/src/js/src/ctypes/libffi/src -I. -I/home/firefox/hg/src/js/src/ctypes/libffi/include -Iinclude -I/home/firefox/hg/src/js/src/ctypes/libffi/src -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -gstabs+ -fno-strict-aliasing -pthread -pipe -MT src/x86/sysv.lo -MD -MP -MF src/x86/.deps/sysv.Tpo -c /home/firefox/hg/src/js/src/ctypes/libffi/src/x86/sysv.S\n-fPIC -DPIC -o src/x86/sysv.o\n/home/firefox/hg/src/js/src/ctypes/libffi/src/x86/sysv.S:350:2: error: #error missing .ascii/.string\nmake[7]: *** [src/x86/sysv.lo] B\u0142\u0105d 1\n\nI investigated this issue a little bit and wrote a patch.\nThis error occurs when both HAVE_AS_ASCII_PSEUDO_OP and HAVE_AS_STRING_PSEUDO_OP are not defined. This happens on my system, because compilation of test programs to check for these features in libffi's configure fails. The culprit is insufficient backslashing, it seems - here is part of js/src/ctypes/libffi/configure:\n--- js/src/ctypes/libffi/configure ---\n       libffi_cv_as_ascii_pseudo_op=unknown\n       # Check if we have .ascii\n       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nasm (\".ascii \\\"string\\\"\");\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  libffi_cv_as_ascii_pseudo_op=yes\nelse\n  libffi_cv_as_ascii_pseudo_op=no\nfi\n--------------------------------------\n(the similar check is for HAVE_AS_STRING_PSEUDO_OP).\n\nThe problematic line is\n\nasm (\".ascii \\\"string\\\"\");\n\nHere is why:\n$ cat test-ksh.sh \n#!/bin/ksh\ncat - <<_ACEOF\nasm (\".ascii \\\"string\\\"\");\n_ACEOF\n$ ./test-ksh.sh\nasm (\".ascii \"string\"\");\n\n$ cat test-bash.sh \n#!/bin/bash\ncat - <<_ACEOF\nasm (\".ascii \\\"string\\\"\");\n_ACEOF\n$ ./test-bash.sh \nasm (\".ascii \\\"string\\\"\");\n\nAnd on my system:\n$ readlink /bin/sh \nksh\n\nTrying to compile\nasm (\".ascii \"string\"\");\nobviously fails, always, and |.ascii \"string\"| feature is not correctly checked.\n\nThe solution is to add additional \"\\\". After this both shells (ksh and bash) work as expected, ie. produce the line\nasm (\".ascii \\\"string\\\"\");\nand test program may be correctly checked for required feature.\n\nReproducible: Always", "attachment_id": null, "count": 0, "author": "bartml@wp.pl"}, {"creator": "bartml@wp.pl", "raw_text": "Here is a patch. I guess the fully proper way of fixing this is also patching js/src/ctypes/libffi/configure.ac and contacting upstream (ie. libffi team/maintainer).", "attachment_id": 505431, "count": 1, "author": "bartml@wp.pl", "time": "2011-01-20T17:15:22Z", "is_private": false, "creation_time": "2011-01-20T17:15:22Z", "id": 5213764, "bug_id": 627392, "tags": [], "text": "Created attachment 505431\nfix backslashes in libffi's configure\n\nHere is a patch. I guess the fully proper way of fixing this is also patching js/src/ctypes/libffi/configure.ac and contacting upstream (ie. libffi team/maintainer)."}, {"text": "Adding dwitte@ and ted.mielczarek@ to CC list as it seems you are people working on libffi (eg. bug 538216).", "tags": [], "bug_id": 627392, "id": 5213797, "creation_time": "2011-01-20T17:27:50Z", "is_private": false, "time": "2011-01-20T17:27:50Z", "author": "bartml@wp.pl", "count": 2, "attachment_id": null, "raw_text": "Adding dwitte@ and ted.mielczarek@ to CC list as it seems you are people working on libffi (eg. bug 538216).", "creator": "bartml@wp.pl"}, {"author": "bartml@wp.pl", "count": 3, "is_private": false, "tags": [], "id": 5238006, "attachment_id": null, "creator": "bartml@wp.pl", "raw_text": "It seems this backslash really should be backslashed in these here-documents in configure.\n\nHere is what bash manual says about syntax of here-documents [1]:\n----\nThe format of here-documents is: \n     <<[\u2212]word\n             here-document\n     delimiter\n\nNo parameter expansion, command substitution, arithmetic expansion, or filename expansion is performed on word. If any characters in word are quoted, the delimiter is the result of quote removal on word, and the lines in the here-document are not expanded. If word is unquoted, all lines of the here-document are subjected to parameter expansion, command substitution, and arithmetic expansion. In the latter case, the character sequence \\newline is ignored, and \u2018\\\u2019 must be used to quote the characters \u2018\\\u2019, \u2018$\u2019, and \u2018`\u2019.\n----\n\nAnd here is what POSIX standard says [2]:\n----\nThe format is as follows:\n[n]<<word\n    here-document\ndelimiter\n\nwhere the optional n represents the file descriptor number. If the number is omitted, the here-document refers to standard input (file descriptor 0).\nIf any character in word is quoted, the delimiter shall be formed by performing quote removal on word, and the here-document lines shall not be expanded. Otherwise, the delimiter shall be the word itself.\nIf no characters in word are quoted, all lines of the here-document shall be expanded for parameter expansion, command substitution, and arithmetic expansion. In this case, the <backslash> in the input behaves as the <backslash> inside double-quotes (see Double-Quotes ).\n----\n\nIn \"configure\" script word-delimiter is unquoted, so lines in here-documents are subjected to parameter expansion etc., and \"\\\" should be backslashed if we want it literally in the output (as we do in this case). It seems bash is quite forgiving in this case, but it breaks with more strict (standards-compliant) shells.\n\nOK, so let's try to review and check-in this.\n\n[1] http://www.gnu.org/software/bash/manual/html_node/Redirections.html, section \"3.6.6 Here Documents\"\n[2] http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_07_04", "creation_time": "2011-01-29T23:17:13Z", "time": "2011-01-29T23:17:13Z", "text": "It seems this backslash really should be backslashed in these here-documents in configure.\n\nHere is what bash manual says about syntax of here-documents [1]:\n----\nThe format of here-documents is: \n     <<[\u2212]word\n             here-document\n     delimiter\n\nNo parameter expansion, command substitution, arithmetic expansion, or filename expansion is performed on word. If any characters in word are quoted, the delimiter is the result of quote removal on word, and the lines in the here-document are not expanded. If word is unquoted, all lines of the here-document are subjected to parameter expansion, command substitution, and arithmetic expansion. In the latter case, the character sequence \\newline is ignored, and \u2018\\\u2019 must be used to quote the characters \u2018\\\u2019, \u2018$\u2019, and \u2018`\u2019.\n----\n\nAnd here is what POSIX standard says [2]:\n----\nThe format is as follows:\n[n]<<word\n    here-document\ndelimiter\n\nwhere the optional n represents the file descriptor number. If the number is omitted, the here-document refers to standard input (file descriptor 0).\nIf any character in word is quoted, the delimiter shall be formed by performing quote removal on word, and the here-document lines shall not be expanded. Otherwise, the delimiter shall be the word itself.\nIf no characters in word are quoted, all lines of the here-document shall be expanded for parameter expansion, command substitution, and arithmetic expansion. In this case, the <backslash> in the input behaves as the <backslash> inside double-quotes (see Double-Quotes ).\n----\n\nIn \"configure\" script word-delimiter is unquoted, so lines in here-documents are subjected to parameter expansion etc., and \"\\\" should be backslashed if we want it literally in the output (as we do in this case). It seems bash is quite forgiving in this case, but it breaks with more strict (standards-compliant) shells.\n\nOK, so let's try to review and check-in this.\n\n[1] http://www.gnu.org/software/bash/manual/html_node/Redirections.html, section \"3.6.6 Here Documents\"\n[2] http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_07_04", "bug_id": 627392}, {"bug_id": 627392, "text": "Can this be fixed in configure.ac instead? Patching configure directly means we can't upstream it.", "time": "2011-01-30T20:49:00Z", "creation_time": "2011-01-30T20:49:00Z", "raw_text": "Can this be fixed in configure.ac instead? Patching configure directly means we can't upstream it.", "creator": "dwitte@gmail.com", "attachment_id": null, "id": 5238850, "tags": [], "is_private": false, "count": 4, "author": "dwitte@gmail.com"}, {"author": "bartml@wp.pl", "count": 5, "creator": "bartml@wp.pl", "raw_text": "Sure, I prepared the patch to configure.ac, however AFAICT libffi's configure.ac is not used by Mozilla build system anyway (which is probably desirable, since it requires at least autoconf 2.63 [see http://hg.mozilla.org/mozilla-central/file/3d69803eee34/js/src/ctypes/libffi/configure.ac#l3] and Mozilla build system uses autoconf 2.13 [see bug 104642]).\n\nFrankly, I'm not sure this patch is a proper way... autoconf documentation doesn't say directly whether or not \"\\\" should be backslashed in code passed to AC_TRY_COMPILE... Actually it even says that AC_TRY_COMPILE macro is obsolete (http://www.gnu.org/software/autoconf/manual/html_node/Obsolete-Macros.html)...\n\nAnyway, I tested generating \"configure\" from patched \"configure.ac\" with autoconf 2.68 and with autoconf in ubuntu (2.65 I think) and it seems to work, ie. it generates the shell script with double \"\\\", which should work (I haven't run it, though).", "attachment_id": 508784, "tags": [], "text": "Created attachment 508784\nadd backslashes in libffi's configure.ac\n\nSure, I prepared the patch to configure.ac, however AFAICT libffi's configure.ac is not used by Mozilla build system anyway (which is probably desirable, since it requires at least autoconf 2.63 [see http://hg.mozilla.org/mozilla-central/file/3d69803eee34/js/src/ctypes/libffi/configure.ac#l3] and Mozilla build system uses autoconf 2.13 [see bug 104642]).\n\nFrankly, I'm not sure this patch is a proper way... autoconf documentation doesn't say directly whether or not \"\\\" should be backslashed in code passed to AC_TRY_COMPILE... Actually it even says that AC_TRY_COMPILE macro is obsolete (http://www.gnu.org/software/autoconf/manual/html_node/Obsolete-Macros.html)...\n\nAnyway, I tested generating \"configure\" from patched \"configure.ac\" with autoconf 2.68 and with autoconf in ubuntu (2.65 I think) and it seems to work, ie. it generates the shell script with double \"\\\", which should work (I haven't run it, though).", "id": 5243107, "bug_id": 627392, "creation_time": "2011-02-01T17:12:52Z", "time": "2011-02-01T17:12:52Z", "is_private": false}, {"author": "dwitte@gmail.com", "count": 6, "tags": [], "id": 5243976, "is_private": false, "attachment_id": null, "raw_text": "Yeah, we don't manually run autoconf on libffi, but the maintainer does when changes occur upstream. So on any given libffi pull, configure will be up-to-date with configure.ac.\n\nCan you push your configure.ac patch upstream? You can send it to the libffi list at libffi-discuss@sourceware.org.", "creator": "dwitte@gmail.com", "text": "Yeah, we don't manually run autoconf on libffi, but the maintainer does when changes occur upstream. So on any given libffi pull, configure will be up-to-date with configure.ac.\n\nCan you push your configure.ac patch upstream? You can send it to the libffi list at libffi-discuss@sourceware.org.", "bug_id": 627392, "creation_time": "2011-02-01T20:55:43Z", "time": "2011-02-01T20:55:43Z"}, {"creation_time": "2011-03-14T23:48:21Z", "time": "2011-03-14T23:48:21Z", "text": "I haven't contacted libffi-discuss, but it seems that someone else noticed it and corrected: among changes commited on 8th February 2011 to libffi's git repo there is also the \"Use double backslashes\" fix: https://github.com/atgreen/libffi/commit/0e5843995f46900ef212531281e08b224464f413#diff-23\n\nSo, are there any plans to pull libffi's git repo and put in mozilla's source tree? Or at least fixing this issue alone?", "bug_id": 627392, "attachment_id": null, "raw_text": "I haven't contacted libffi-discuss, but it seems that someone else noticed it and corrected: among changes commited on 8th February 2011 to libffi's git repo there is also the \"Use double backslashes\" fix: https://github.com/atgreen/libffi/commit/0e5843995f46900ef212531281e08b224464f413#diff-23\n\nSo, are there any plans to pull libffi's git repo and put in mozilla's source tree? Or at least fixing this issue alone?", "creator": "bartml@wp.pl", "is_private": false, "tags": [], "id": 5344752, "author": "bartml@wp.pl", "count": 7}, {"attachment_id": 505431, "creator": "dwitte@gmail.com", "raw_text": "Clearing stale request, sorry -- I'm sure there are better qualified people to look at this if you're still interested in pursuing it :)", "count": 8, "author": "dwitte@gmail.com", "time": "2013-11-14T18:00:46Z", "is_private": false, "creation_time": "2013-11-14T18:00:46Z", "bug_id": 627392, "id": 8081244, "text": "Comment on attachment 505431\nfix backslashes in libffi's configure\n\nClearing stale request, sorry -- I'm sure there are better qualified people to look at this if you're still interested in pursuing it :)", "tags": []}]}}, "comments": {}}