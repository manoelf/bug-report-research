{"bugs": {"691242": {"comments": [{"attachment_id": 564119, "raw_text": "STR:\n1. install noscript\n2. visit forums.whirlpool.net.au\n\nFrom the stacktrace, it looks like we:\n* add a script element\n* check the content load policies\n* one of the policies is a script which ends up removing a node (presumably in the same document or something)", "bug_id": 691242, "text": "Created attachment 564119\nBacktrace\n\nSTR:\n1. install noscript\n2. visit forums.whirlpool.net.au\n\nFrom the stacktrace, it looks like we:\n* add a script element\n* check the content load policies\n* one of the policies is a script which ends up removing a node (presumably in the same document or something)", "tags": [], "count": 0, "id": 5753425, "is_private": false, "creation_time": "2011-10-03T04:56:57Z", "time": "2011-10-03T04:56:57Z", "creator": "josh@joshmatthews.net", "author": "josh@joshmatthews.net"}, {"text": "STR addendum:\n3. temporarily allow scripts on the page\n4. assert", "bug_id": 691242, "tags": [], "raw_text": "STR addendum:\n3. temporarily allow scripts on the page\n4. assert", "attachment_id": null, "author": "josh@joshmatthews.net", "creator": "josh@joshmatthews.net", "creation_time": "2011-10-03T05:00:56Z", "time": "2011-10-03T05:00:56Z", "is_private": false, "id": 5753426, "count": 1}, {"id": 5753427, "count": 2, "is_private": false, "author": "bzbarsky@mit.edu", "creation_time": "2011-10-03T05:01:19Z", "time": "2011-10-03T05:01:19Z", "creator": "bzbarsky@mit.edu", "raw_text": "It could be a different document.  Doesn't matter.  As things stand, content policies modifying any DOM is completely unsafe....\n\nWe really need to start calling them async.  :(", "attachment_id": null, "text": "It could be a different document.  Doesn't matter.  As things stand, content policies modifying any DOM is completely unsafe....\n\nWe really need to start calling them async.  :(", "bug_id": 691242, "tags": []}, {"is_private": false, "id": 5753459, "count": 3, "creator": "josh@joshmatthews.net", "time": "2011-10-03T05:46:15Z", "creation_time": "2011-10-03T05:46:15Z", "author": "josh@joshmatthews.net", "attachment_id": null, "raw_text": "https://addons.mozilla.org/en-US/firefox/files/browse/133269/file/chrome/noscript.jar/content/noscript/ScriptSurrogate.js#L225\n\nThis is the function being called by the noscript content load policy (wait what? is that how policies are supposed to work?).", "text": "https://addons.mozilla.org/en-US/firefox/files/browse/133269/file/chrome/noscript.jar/content/noscript/ScriptSurrogate.js#L225\n\nThis is the function being called by the noscript content load policy (wait what? is that how policies are supposed to work?).", "bug_id": 691242, "tags": []}, {"time": "2011-10-03T06:51:32Z", "creation_time": "2011-10-03T06:51:32Z", "creator": "g.maone@informaction.com", "author": "g.maone@informaction.com", "id": 5753498, "count": 4, "is_private": false, "tags": [], "text": "(In reply to Josh Matthews [:jdm] from comment #3)\n> https://addons.mozilla.org/en-US/firefox/files/browse/133269/file/chrome/\n> noscript.jar/content/noscript/ScriptSurrogate.js#L225\n> \n> This is the function being called by the noscript content load policy (wait\n> what? is that how policies are supposed to work?).\n\nUntil there are better hooks (if ever), a content policy callback is the only place for an extension to execute a script instead of a blocked one. \n\nI could use a Sandbox and avoid to touch the DOM (I used to and, in fact, the method is still there) but I settled for the DOM-based approach after being severely bitten by memory/performance issues (maybe related to bug 646575?)\n\nAs a middle-ground, changing https://addons.mozilla.org/en-US/firefox/files/browse/133269/file/chrome/noscript.jar/content/noscript/ScriptSurrogate.js#L176 into\n\n   this.executeSandbox;\n\nswitches back to Sandbox-based execution every surrogate triggered by a content policy call (by default, this happens on any allowed webpage which tries to import blocked Google Analytics scripts, for instance).", "bug_id": 691242, "attachment_id": null, "raw_text": "(In reply to Josh Matthews [:jdm] from comment #3)\n> https://addons.mozilla.org/en-US/firefox/files/browse/133269/file/chrome/\n> noscript.jar/content/noscript/ScriptSurrogate.js#L225\n> \n> This is the function being called by the noscript content load policy (wait\n> what? is that how policies are supposed to work?).\n\nUntil there are better hooks (if ever), a content policy callback is the only place for an extension to execute a script instead of a blocked one. \n\nI could use a Sandbox and avoid to touch the DOM (I used to and, in fact, the method is still there) but I settled for the DOM-based approach after being severely bitten by memory/performance issues (maybe related to bug 646575?)\n\nAs a middle-ground, changing https://addons.mozilla.org/en-US/firefox/files/browse/133269/file/chrome/noscript.jar/content/noscript/ScriptSurrogate.js#L176 into\n\n   this.executeSandbox;\n\nswitches back to Sandbox-based execution every surrogate triggered by a content policy call (by default, this happens on any allowed webpage which tries to import blocked Google Analytics scripts, for instance)."}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "time": "2011-10-03T07:01:48Z", "creation_time": "2011-10-03T07:01:48Z", "is_private": false, "id": 5753516, "count": 5, "bug_id": 691242, "text": "> Until there are better hooks (if ever)\n\nOthers have asked for such callbacks; all that's missing is time to implement, fwiw...", "tags": [], "raw_text": "> Until there are better hooks (if ever)\n\nOthers have asked for such callbacks; all that's missing is time to implement, fwiw...", "attachment_id": null}, {"text": "FYI, NoScript 2.1.5rc1 has changes to never modify the DOM during content policy callbacks.", "bug_id": 691242, "tags": [], "raw_text": "FYI, NoScript 2.1.5rc1 has changes to never modify the DOM during content policy callbacks.", "attachment_id": null, "author": "g.maone@informaction.com", "time": "2011-10-05T20:50:05Z", "creation_time": "2011-10-05T20:50:05Z", "creator": "g.maone@informaction.com", "id": 5761502, "count": 6, "is_private": false}]}}, "comments": {}}