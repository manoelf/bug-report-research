{"bugs": {"646937": {"comments": [{"author": "bugs@m8y.org", "creator": "bugs@m8y.org", "text": "When running compiz, and launching something expensive, like:\nhttp://cjcliffe.github.com/CubicVR.js/cubicvr/tests/gpu_fluid/wavepool_blockers.html\n\nThe cpu usage remains high even if on a completely different desktop.\nmaniac103 of compiz says:\n\"< maniac103> nemo: when firefox gets the ConfigureNotify, it would need to check if its window rect intersects with the screen rect (the latter being 0, 0 - screen width, screen height)\"\n\nMy request is that general paints and mozRequestAnimationFrame both be throttled way back if a window is minimised or not on current desktop.", "id": 5383924, "attachment_id": null, "creation_time": "2011-03-31T18:37:55Z", "tags": [], "is_private": false, "time": "2011-03-31T18:37:55Z", "count": 0, "bug_id": 646937, "raw_text": "When running compiz, and launching something expensive, like:\nhttp://cjcliffe.github.com/CubicVR.js/cubicvr/tests/gpu_fluid/wavepool_blockers.html\n\nThe cpu usage remains high even if on a completely different desktop.\nmaniac103 of compiz says:\n\"< maniac103> nemo: when firefox gets the ConfigureNotify, it would need to check if its window rect intersects with the screen rect (the latter being 0, 0 - screen width, screen height)\"\n\nMy request is that general paints and mozRequestAnimationFrame both be throttled way back if a window is minimised or not on current desktop."}, {"is_private": false, "tags": [], "time": "2011-04-19T00:43:30Z", "count": 1, "raw_text": "Currently, if a toplevel window is unmapped (including minimized) or viewable and completely obscured (as it would be if outside the screen rect) general paints in response to invalidates are not performed at all.\n\nWebGL and canvas are different because we have to have the canvas ready for when the window does become visible, and the canvas may also be used for non-display purposes.\n\nmozRequestAnimationFrame could be throttled back.\nThis is not happening for mapped but completely obscured windows, but could be.\nI don't know whether we throttle for minimized windows.", "bug_id": 646937, "author": "karlt@mozbugz.karlt.net", "id": 5417390, "attachment_id": null, "creator": "karlt@mozbugz.karlt.net", "text": "Currently, if a toplevel window is unmapped (including minimized) or viewable and completely obscured (as it would be if outside the screen rect) general paints in response to invalidates are not performed at all.\n\nWebGL and canvas are different because we have to have the canvas ready for when the window does become visible, and the canvas may also be used for non-display purposes.\n\nmozRequestAnimationFrame could be throttled back.\nThis is not happening for mapped but completely obscured windows, but could be.\nI don't know whether we throttle for minimized windows.", "creation_time": "2011-04-19T00:43:30Z"}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "time": "2011-04-21T03:17:48Z", "count": 2, "bug_id": 646937, "text": "> general paints in response to invalidates are not performed at all.\n\nThat's not what nemo was observing, iirc; he saw CPU usage drop when the canvas was set to visibility:hidden.\n\nRight now we throttle mozRequestAnimationFrame for only background tabs.  There are requests to throttle for minimized windows and whatnot; what's needed there is a way to have the Firefox UI know when things are in an \"invisible\" state so it can mark the relevant tabs as background tabs.", "attachment_id": null, "id": 5423229, "creation_time": "2011-04-21T03:17:48Z", "tags": [], "is_private": false, "raw_text": "> general paints in response to invalidates are not performed at all.\n\nThat's not what nemo was observing, iirc; he saw CPU usage drop when the canvas was set to visibility:hidden.\n\nRight now we throttle mozRequestAnimationFrame for only background tabs.  There are requests to throttle for minimized windows and whatnot; what's needed there is a way to have the Firefox UI know when things are in an \"invisible\" state so it can mark the relevant tabs as background tabs."}, {"text": "Yeah, there were a few different things here.\nOne was about making Firefox aware that it shouldn't be painting when using compositing in metacity/compiz, and what the criteria for that would be.\n\nThe other would be making request animation frame aware of these and other things (like hidden visibility that only reduced the paint part of cpu, not the mozRequestAnimationFrame part) too, so that not only would paints be skipped, but the number crunching as well.", "creator": "bugs@m8y.org", "attachment_id": null, "id": 5423268, "author": "bugs@m8y.org", "creation_time": "2011-04-21T03:57:36Z", "time": "2011-04-21T03:57:36Z", "tags": [], "is_private": false, "bug_id": 646937, "raw_text": "Yeah, there were a few different things here.\nOne was about making Firefox aware that it shouldn't be painting when using compositing in metacity/compiz, and what the criteria for that would be.\n\nThe other would be making request animation frame aware of these and other things (like hidden visibility that only reduced the paint part of cpu, not the mozRequestAnimationFrame part) too, so that not only would paints be skipped, but the number crunching as well.", "count": 3}, {"author": "bugs@m8y.org", "creator": "bugs@m8y.org", "count": 4, "bug_id": 646937, "time": "2011-04-21T15:11:08Z", "creation_time": "2011-04-21T15:11:08Z", "text": "Sorry, to clarify that last comment slightly since I think I was being muddled as usual.\n\nWhen compositing, in metacity or compiz, CPU is still burned in rendering even when firefox is on another desktop.  In metacity without compositing, it is not, but that's due to the gfx card, not Firefox being clever.  And even in the metacity w/o compositing case, Firefox stil called mozRequestAnimationFrame even though the final results ended up not being used.\n\nSince compositing is pretty common now, it'd be nice to not have things suck up CPU when they are obscured.\n\nFor the objection of dimly visible things due to window previews or desktop switchers, I'm pretty sure most people wouldn't mind an approximation of the content for those :)\n\nMy linux experience would not be ruined if the Firefox displayed in Expose mode was not animating No Comply.", "attachment_id": null, "id": 5424044, "raw_text": "Sorry, to clarify that last comment slightly since I think I was being muddled as usual.\n\nWhen compositing, in metacity or compiz, CPU is still burned in rendering even when firefox is on another desktop.  In metacity without compositing, it is not, but that's due to the gfx card, not Firefox being clever.  And even in the metacity w/o compositing case, Firefox stil called mozRequestAnimationFrame even though the final results ended up not being used.\n\nSince compositing is pretty common now, it'd be nice to not have things suck up CPU when they are obscured.\n\nFor the objection of dimly visible things due to window previews or desktop switchers, I'm pretty sure most people wouldn't mind an approximation of the content for those :)\n\nMy linux experience would not be ruined if the Firefox displayed in Expose mode was not animating No Comply.", "tags": [], "is_private": false}, {"creation_time": "2011-04-25T04:22:06Z", "author": "karlt@mozbugz.karlt.net", "attachment_id": null, "id": 5428952, "creator": "karlt@mozbugz.karlt.net", "text": "(In reply to comment #2)\n> > general paints in response to invalidates are not performed at all.\n> \n> That's not what nemo was observing, iirc; he saw CPU usage drop when the canvas\n> was set to visibility:hidden.\n\nWhen reading comment 1, please consider \"general paints\" as not including canvas.  But I misassumed that the canvas testcase was the only reason for the cpu use.\n\nUnder kwin with compositing too, it seems we don't get VisibilityNotify events when the window is moved outside the screen bounds.  (kwin uses a different approach for multiple desktops, which works well with our general paint suppression code.)\n\n(In reply to comment #0)\n> maniac103 of compiz says:\n> \"< maniac103> nemo: when firefox gets the ConfigureNotify, it would need to\n> check if its window rect intersects with the screen rect (the latter being 0, 0\n> - screen width, screen height)\"\n\nIt would be unfortunate to need to modify all client apps to understand which part of the screen is visible in order to deal with changes in window managers.  I wonder why we don't get the VisibilityNotify events in that situation.  Perhaps it is because compiz wants to be able to show up-to-date previews of windows on other desktops, or maybe it is just the way RedirectWindow is implemented.\n\nIt sounds like we need a more general means for testing window visibility (VisibilityNotify or a replacement) than just checking screen bounds.\n\n(In reply to comment #3)\n> One was about making Firefox aware that it shouldn't be painting when using\n> compositing in metacity/compiz, and what the criteria for that would be.\n\nWould you mind checking for me please that you still see sustained cpu use on a different compiz desktop with http://blog.mozilla.com/2008/02/11/capital-n-small-y/\n(That example doesn't use canvas.)\n\n> The other would be making request animation frame aware of these and other\n> things (like hidden visibility that only reduced the paint part of cpu, not the\n> mozRequestAnimationFrame part) too, so that not only would paints be skipped,\n> but the number crunching as well.\n\nYes, there are two issues here.  I guess we can use one bug until we know what the next step will be.\n\n(In reply to comment #4)\n> In metacity without compositing, it is\n> not, but that's due to the gfx card, not Firefox being clever.\n\nWithout compositing, Firefox has VisibilityNotify events.\n\n> And even in the\n> metacity w/o compositing case, Firefox stil called mozRequestAnimationFrame\n> even though the final results ended up not being used.\n\nYes.  It seems plausible that animation frames are not required if the window is not visible.\n\n> For the objection of dimly visible things due to window previews or desktop\n> switchers, I'm pretty sure most people wouldn't mind an approximation of the\n> content for those :)\n\nYes, I assume previews of minimized windows just show old content.\nDoes Firefox's paint suppression code work with the animated images on dolske's blog and minimized windows in compiz?", "count": 5, "raw_text": "(In reply to comment #2)\n> > general paints in response to invalidates are not performed at all.\n> \n> That's not what nemo was observing, iirc; he saw CPU usage drop when the canvas\n> was set to visibility:hidden.\n\nWhen reading comment 1, please consider \"general paints\" as not including canvas.  But I misassumed that the canvas testcase was the only reason for the cpu use.\n\nUnder kwin with compositing too, it seems we don't get VisibilityNotify events when the window is moved outside the screen bounds.  (kwin uses a different approach for multiple desktops, which works well with our general paint suppression code.)\n\n(In reply to comment #0)\n> maniac103 of compiz says:\n> \"< maniac103> nemo: when firefox gets the ConfigureNotify, it would need to\n> check if its window rect intersects with the screen rect (the latter being 0, 0\n> - screen width, screen height)\"\n\nIt would be unfortunate to need to modify all client apps to understand which part of the screen is visible in order to deal with changes in window managers.  I wonder why we don't get the VisibilityNotify events in that situation.  Perhaps it is because compiz wants to be able to show up-to-date previews of windows on other desktops, or maybe it is just the way RedirectWindow is implemented.\n\nIt sounds like we need a more general means for testing window visibility (VisibilityNotify or a replacement) than just checking screen bounds.\n\n(In reply to comment #3)\n> One was about making Firefox aware that it shouldn't be painting when using\n> compositing in metacity/compiz, and what the criteria for that would be.\n\nWould you mind checking for me please that you still see sustained cpu use on a different compiz desktop with http://blog.mozilla.com/2008/02/11/capital-n-small-y/\n(That example doesn't use canvas.)\n\n> The other would be making request animation frame aware of these and other\n> things (like hidden visibility that only reduced the paint part of cpu, not the\n> mozRequestAnimationFrame part) too, so that not only would paints be skipped,\n> but the number crunching as well.\n\nYes, there are two issues here.  I guess we can use one bug until we know what the next step will be.\n\n(In reply to comment #4)\n> In metacity without compositing, it is\n> not, but that's due to the gfx card, not Firefox being clever.\n\nWithout compositing, Firefox has VisibilityNotify events.\n\n> And even in the\n> metacity w/o compositing case, Firefox stil called mozRequestAnimationFrame\n> even though the final results ended up not being used.\n\nYes.  It seems plausible that animation frames are not required if the window is not visible.\n\n> For the objection of dimly visible things due to window previews or desktop\n> switchers, I'm pretty sure most people wouldn't mind an approximation of the\n> content for those :)\n\nYes, I assume previews of minimized windows just show old content.\nDoes Firefox's paint suppression code work with the animated images on dolske's blog and minimized windows in compiz?", "bug_id": 646937, "is_private": false, "tags": [], "time": "2011-04-25T04:22:06Z"}, {"creation_time": "2011-04-25T04:25:44Z", "text": "I think there are two pretty separate bugs here:\n\n1)  Whatever is going on with normal painting under compositing window managers.\n2)  Adding whatever widget-side hooks we need so that our UI can know when we're minimized or obscured or whatever other conditions we want so it can mark its tabs as hidden when that happens.", "attachment_id": null, "id": 5428955, "raw_text": "I think there are two pretty separate bugs here:\n\n1)  Whatever is going on with normal painting under compositing window managers.\n2)  Adding whatever widget-side hooks we need so that our UI can know when we're minimized or obscured or whatever other conditions we want so it can mark its tabs as hidden when that happens.", "tags": [], "is_private": false, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "count": 6, "bug_id": 646937, "time": "2011-04-25T04:25:44Z"}, {"text": "(In reply to comment #6)\nYes.", "id": 5428976, "attachment_id": null, "creation_time": "2011-04-25T05:11:27Z", "tags": [], "is_private": false, "raw_text": "(In reply to comment #6)\nYes.", "creator": "karlt@mozbugz.karlt.net", "author": "karlt@mozbugz.karlt.net", "time": "2011-04-25T05:11:27Z", "bug_id": 646937, "count": 7}, {"raw_text": "I filed bug 675871 on the compositing window manager issue.\n\nWe also already throttle mozRequestAnimationFrame in minimized windows, so this just leaves windows not on the current desktop.", "is_private": false, "tags": [], "creation_time": "2011-08-02T06:49:37Z", "attachment_id": null, "id": 5627143, "text": "I filed bug 675871 on the compositing window manager issue.\n\nWe also already throttle mozRequestAnimationFrame in minimized windows, so this just leaves windows not on the current desktop.", "count": 8, "bug_id": 646937, "time": "2011-08-02T06:49:37Z", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu"}, {"raw_text": "We may need separate per-OS bugs here....", "is_private": false, "tags": [], "creation_time": "2017-04-07T20:18:11Z", "id": 12217173, "attachment_id": null, "text": "We may need separate per-OS bugs here....", "bug_id": 646937, "count": 9, "time": "2017-04-07T20:18:11Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"is_private": false, "tags": [], "time": "2017-04-13T19:00:07Z", "count": 10, "raw_text": "We send gecko events for size mode changes on all platforms [1], which sets an attribute on xul windows. Is this sufficient for detecting changes in window state in front end code?\n\n[1] http://searchfox.org/mozilla-central/search?q=mWidgetListener-%3ESizeModeChanged&path=\n[2] http://searchfox.org/mozilla-central/rev/944f87c575e8a0bcefc1ed8efff10b34cf7a5169/xpfe/appshell/nsXULWindow.cpp#1368", "bug_id": 646937, "author": "jmathies@mozilla.com", "id": 12233764, "attachment_id": null, "creator": "jmathies@mozilla.com", "text": "We send gecko events for size mode changes on all platforms [1], which sets an attribute on xul windows. Is this sufficient for detecting changes in window state in front end code?\n\n[1] http://searchfox.org/mozilla-central/search?q=mWidgetListener-%3ESizeModeChanged&path=\n[2] http://searchfox.org/mozilla-central/rev/944f87c575e8a0bcefc1ed8efff10b34cf7a5169/xpfe/appshell/nsXULWindow.cpp#1368", "creation_time": "2017-04-13T19:00:07Z"}, {"author": "bzbarsky@mit.edu", "attachment_id": null, "id": 12233796, "creator": "bzbarsky@mit.edu", "text": "We already handle this for sizemode changes (e.g. minimizing the window).  See http://searchfox.org/mozilla-central/rev/944f87c575e8a0bcefc1ed8efff10b34cf7a5169/browser/base/content/tabbrowser.xml#4906\n\nThis bug is about windows that are on non-default virtual desktops, obscured by other windows, etc.", "creation_time": "2017-04-13T19:08:29Z", "is_private": false, "tags": [], "time": "2017-04-13T19:08:29Z", "count": 11, "raw_text": "We already handle this for sizemode changes (e.g. minimizing the window).  See http://searchfox.org/mozilla-central/rev/944f87c575e8a0bcefc1ed8efff10b34cf7a5169/browser/base/content/tabbrowser.xml#4906\n\nThis bug is about windows that are on non-default virtual desktops, obscured by other windows, etc.", "bug_id": 646937}, {"author": "jmathies@mozilla.com", "attachment_id": null, "id": 12234200, "creator": "jmathies@mozilla.com", "text": "(In reply to Boris Zbarsky [:bz] (still a bit busy) (if a patch has no decent message, automatic r-) from comment #11)\n> We already handle this for sizemode changes (e.g. minimizing the window). \n> See\n> http://searchfox.org/mozilla-central/rev/\n> 944f87c575e8a0bcefc1ed8efff10b34cf7a5169/browser/base/content/tabbrowser.\n> xml#4906\n> \n> This bug is about windows that are on non-default virtual desktops, obscured\n> by other windows, etc.\n\nOk, so as a general rule we've not prioritized virtual desktop issues, particularly on Windows. Should this bug really be a Photon P1? That seems a bit extreme considering our stance on these types of bugs in the past.", "creation_time": "2017-04-13T20:55:31Z", "is_private": false, "tags": [], "time": "2017-04-13T20:55:31Z", "count": 12, "raw_text": "(In reply to Boris Zbarsky [:bz] (still a bit busy) (if a patch has no decent message, automatic r-) from comment #11)\n> We already handle this for sizemode changes (e.g. minimizing the window). \n> See\n> http://searchfox.org/mozilla-central/rev/\n> 944f87c575e8a0bcefc1ed8efff10b34cf7a5169/browser/base/content/tabbrowser.\n> xml#4906\n> \n> This bug is about windows that are on non-default virtual desktops, obscured\n> by other windows, etc.\n\nOk, so as a general rule we've not prioritized virtual desktop issues, particularly on Windows. Should this bug really be a Photon P1? That seems a bit extreme considering our stance on these types of bugs in the past.", "bug_id": 646937}, {"raw_text": "Yeah, I kinda feel the virtual desktop bit is why this languished for 6 years... But, alt-tab putting the browser behind your MS Outlook or whatnot isn't that uncommon right? In fact it seems like on Windows 10, and maybe due to mobile influence, switching between fullscreen windows is pretty much default.  No one bothers minimising.  So if you guys could detect you weren't foreground, you'd still avoid being a stealth battery suck.  People might not realise that browser 3 apps down the screen stack is what's taking 100% of a core.", "bug_id": 646937, "count": 13, "time": "2017-04-13T21:05:14Z", "is_private": false, "tags": [], "creation_time": "2017-04-13T21:05:14Z", "id": 12234224, "attachment_id": null, "creator": "bugs@m8y.org", "text": "Yeah, I kinda feel the virtual desktop bit is why this languished for 6 years... But, alt-tab putting the browser behind your MS Outlook or whatnot isn't that uncommon right? In fact it seems like on Windows 10, and maybe due to mobile influence, switching between fullscreen windows is pretty much default.  No one bothers minimising.  So if you guys could detect you weren't foreground, you'd still avoid being a stealth battery suck.  People might not realise that browser 3 apps down the screen stack is what's taking 100% of a core.", "author": "bugs@m8y.org"}, {"id": 12234227, "attachment_id": null, "creator": "bzbarsky@mit.edu", "text": "Right, \"virtual desktop\" is not the normal case.  The normal case is the user has three windows, all fullscreen in the usual way, and we shouldn't be painting the two that are not topmost all the time.\n\nIn terms of perception this is the \"why is Firefox sucking up all my CPU when I'm not even using it?\" thing.", "author": "bzbarsky@mit.edu", "creation_time": "2017-04-13T21:09:11Z", "time": "2017-04-13T21:09:11Z", "is_private": false, "tags": [], "raw_text": "Right, \"virtual desktop\" is not the normal case.  The normal case is the user has three windows, all fullscreen in the usual way, and we shouldn't be painting the two that are not topmost all the time.\n\nIn terms of perception this is the \"why is Firefox sucking up all my CPU when I'm not even using it?\" thing.", "bug_id": 646937, "count": 14}, {"creator": "htsai@mozilla.com", "author": "htsai@mozilla.com", "bug_id": 646937, "count": 15, "time": "2017-05-31T03:56:39Z", "creation_time": "2017-05-31T03:56:39Z", "text": "This perhaps could utilize the method introduced in bug 1236512.  Samael is going to investigate first. Thanks!", "attachment_id": null, "id": 12359988, "raw_text": "This perhaps could utilize the method introduced in bug 1236512.  Samael is going to investigate first. Thanks!", "tags": [], "is_private": false}, {"time": "2017-05-31T15:18:24Z", "count": 16, "bug_id": 646937, "author": "freesamael@gmail.com", "creator": "freesamael@gmail.com", "is_private": false, "tags": [], "raw_text": "(In reply to Boris Zbarsky [:bz] (if a patch has no decent message, automatic r-) from comment #14)\n> Right, \"virtual desktop\" is not the normal case.  The normal case is the\n> user has three windows, all fullscreen in the usual way, and we shouldn't be\n> painting the two that are not topmost all the time.\n> \n> In terms of perception this is the \"why is Firefox sucking up all my CPU\n> when I'm not even using it?\" thing.\n\nConsider in bug 1236512 we've concluded that there's not much we can do to detect window occlusion on Windows & GTK, and on macOS we're going to make fully obscured windows to behave as background tabs, do you think there's anything worth further investigation in this bug?", "attachment_id": null, "id": 12361473, "text": "(In reply to Boris Zbarsky [:bz] (if a patch has no decent message, automatic r-) from comment #14)\n> Right, \"virtual desktop\" is not the normal case.  The normal case is the\n> user has three windows, all fullscreen in the usual way, and we shouldn't be\n> painting the two that are not topmost all the time.\n> \n> In terms of perception this is the \"why is Firefox sucking up all my CPU\n> when I'm not even using it?\" thing.\n\nConsider in bug 1236512 we've concluded that there's not much we can do to detect window occlusion on Windows & GTK, and on macOS we're going to make fully obscured windows to behave as background tabs, do you think there's anything worth further investigation in this bug?", "creation_time": "2017-05-31T15:18:24Z"}, {"is_private": false, "tags": [], "raw_text": "It's worth noting that Edge changes page visibility on Windows 10 tablet mode if it's not the active application (but only in tablet mode). We could probably try to do the same thing if we think tablet mode use case is important enough, but maybe that should be a seperate follow-up of bug 1236512.", "attachment_id": null, "id": 12361587, "text": "It's worth noting that Edge changes page visibility on Windows 10 tablet mode if it's not the active application (but only in tablet mode). We could probably try to do the same thing if we think tablet mode use case is important enough, but maybe that should be a seperate follow-up of bug 1236512.", "creation_time": "2017-05-31T15:45:52Z", "time": "2017-05-31T15:45:52Z", "bug_id": 646937, "count": 17, "creator": "freesamael@gmail.com", "author": "freesamael@gmail.com"}, {"text": "> do you think there's anything worth further investigation in this bug?\n\nProbably not.  Making fully obscured windows behave as background tabs is the right call.  Not being able to detect them on non-Mac is really unfortunate, but not much we can do about it.", "id": 12361799, "attachment_id": null, "creation_time": "2017-05-31T17:00:36Z", "tags": [], "is_private": false, "raw_text": "> do you think there's anything worth further investigation in this bug?\n\nProbably not.  Making fully obscured windows behave as background tabs is the right call.  Not being able to detect them on non-Mac is really unfortunate, but not much we can do about it.", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "time": "2017-05-31T17:00:36Z", "count": 18, "bug_id": 646937}, {"count": 19, "bug_id": 646937, "raw_text": "Windows and GTK don't have a window \"occlusionstatechange\" API like macOS, but we could still detect when a fullscreen browser window occludes another browser window on the same display. Admittedly this is probably an uncommon use case. Here is a test case:\n\nSTR:\n1. Load http://daniemon.com/tech/webapps/page-visibility/\n2. Play the video, which mutes/unmutes itself when the page visibility changes.\n3. Open a new browser window. The video will continue playing audio.\n4. Make the new browser window fullscreen (View > Full Screen menu or F11 keyboard shortcut).\n\nRESULT:\nThe video continues to play audio, but Firefox can determine that the two browser windows are on the same display. If the second window is fullscreen, then other browser windows on the same display must be occluded and should have hidden page visibility.", "tags": [], "is_private": false, "time": "2017-07-07T17:17:45Z", "creation_time": "2017-07-07T17:17:45Z", "author": "cpeterson@mozilla.com", "creator": "cpeterson@mozilla.com", "text": "Windows and GTK don't have a window \"occlusionstatechange\" API like macOS, but we could still detect when a fullscreen browser window occludes another browser window on the same display. Admittedly this is probably an uncommon use case. Here is a test case:\n\nSTR:\n1. Load http://daniemon.com/tech/webapps/page-visibility/\n2. Play the video, which mutes/unmutes itself when the page visibility changes.\n3. Open a new browser window. The video will continue playing audio.\n4. Make the new browser window fullscreen (View > Full Screen menu or F11 keyboard shortcut).\n\nRESULT:\nThe video continues to play audio, but Firefox can determine that the two browser windows are on the same display. If the second window is fullscreen, then other browser windows on the same display must be occluded and should have hidden page visibility.", "attachment_id": null, "id": 12454893}, {"count": 20, "raw_text": "> then other browser windows on the same display must be occluded\n\nAssuming that we can never have a partially-translucent fullscreen window... How sure are we that we can't?", "bug_id": 646937, "is_private": false, "tags": [], "time": "2017-07-11T06:10:03Z", "creation_time": "2017-07-11T06:10:03Z", "author": "bzbarsky@mit.edu", "id": 12462374, "attachment_id": null, "text": "> then other browser windows on the same display must be occluded\n\nAssuming that we can never have a partially-translucent fullscreen window... How sure are we that we can't?", "creator": "bzbarsky@mit.edu"}, {"author": "overholt@mozilla.com", "attachment_id": null, "id": 12491656, "text": "Given recent discussion here I think this should be qf:p2 at best.", "creator": "overholt@mozilla.com", "creation_time": "2017-07-20T20:41:38Z", "is_private": false, "tags": [], "time": "2017-07-20T20:41:38Z", "count": 21, "raw_text": "Given recent discussion here I think this should be qf:p2 at best.", "bug_id": 646937}, {"time": "2019-10-11T14:12:26Z", "is_private": false, "tags": [], "raw_text": "This should probably be retriaged by the qf triage group, and categorized.", "bug_id": 646937, "count": 22, "attachment_id": null, "id": 14418779, "creator": "mconley@mozilla.com", "text": "This should probably be retriaged by the qf triage group, and categorized.", "author": "mconley@mozilla.com", "creation_time": "2019-10-11T14:12:26Z"}]}}, "comments": {}}