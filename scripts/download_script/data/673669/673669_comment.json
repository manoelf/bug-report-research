{"comments": {}, "bugs": {"673669": {"comments": [{"tags": [], "attachment_id": 547900, "creation_time": "2011-07-23T07:34:52Z", "is_private": false, "creator": "blog@tessarakt.de", "time": "2011-07-23T07:34:52Z", "raw_text": "XUL should provide an input element for defining an accelerator key. There does not seem to be such a feature, at least I could not find documentation for any such thing.\n\nThis bug is much more narrow than bug 57805. It's a bit like https://bugzilla.mozilla.org/show_bug.cgi?id=57805#c30 - an \"recorder\" element.\n\nI had this idea when looking at the Quicker Filer addon for Thunderbird: https://addons.mozilla.org/en-us/thunderbird/addon/quicker-filer/. It has a whole page in its options dialog to _define_ keyboard shortcuts and save them in preferences. I attach a screenshot. The UI is needlessly complicated - it requires the user to select the key (and the modifiers) from dropdown lists. It would be a lot easier if the user could just _type_ the desired key.\n\nImplementing this functionality would require:\n\n1. Providing an XUL element. Actually, I have no idea what a good name would be.\n\n2. Defining what the values look like. The idea would be to have _one_ value, which you could directly connect to a preference like https://developer.mozilla.org/en/XUL/textbox#a-preference. I guess connecting one input element to _two_ preferences would be kind of weird.\n\nIt should then be possible to directly assign this value to a <key> element in another script (e.g., an onLoad handler), or define a keyboard shortcut in some other way. For example, Quicker Filer has the following in its overlay to Thunderbirds main window:\n\n        <keyset>\n                <key id=\"quickerfiler_key_move\"    oncommand=\"sQuickerFilerMessengerOverlay.openDialog('move');\" modifiers=\"alt\" key=\"q\" />\n                <key id=\"quickerfiler_key_copy\"    oncommand=\"sQuickerFilerMessengerOverlay.openDialog('copy');\" />\n                <key id=\"quickerfiler_key_insmove\" oncommand=\"sQuickerFilerMessengerOverlay.openDialog('insmove');\" />\n                <key id=\"quickerfiler_key_inscopy\" oncommand=\"sQuickerFilerMessengerOverlay.openDialog('inscopy');\" />\n                <key id=\"quickerfiler_key_selfolder\" oncommand=\"sQuickerFilerMessengerOverlay.openDialog('selfolder');\"  modifiers=\"alt\" key=\"r\" />\n        </keyset>\n\nIn an onload handler, it loads the shortcuts from the preferences and sets them like this:\n\nel.setAttribute('key', key);\nel.setAttribute('modifiers', modifiers);\nel.setAttribute('disabled', 'false');\n\nI guess a property should be added to https://developer.mozilla.org/en/XUL/key to directly set the key and modifiers attributes based on the string one gets from the new input element.\n\nAs said, more complex mechanisms to customize key bindings are beyond the scope of this enhancement request.", "id": 5608891, "bug_id": 673669, "author": "blog@tessarakt.de", "count": 0, "text": "Created attachment 547900\nOptions dialog of Quicker Filer 0.5.1 - page for keyboard settings.\n\nXUL should provide an input element for defining an accelerator key. There does not seem to be such a feature, at least I could not find documentation for any such thing.\n\nThis bug is much more narrow than bug 57805. It's a bit like https://bugzilla.mozilla.org/show_bug.cgi?id=57805#c30 - an \"recorder\" element.\n\nI had this idea when looking at the Quicker Filer addon for Thunderbird: https://addons.mozilla.org/en-us/thunderbird/addon/quicker-filer/. It has a whole page in its options dialog to _define_ keyboard shortcuts and save them in preferences. I attach a screenshot. The UI is needlessly complicated - it requires the user to select the key (and the modifiers) from dropdown lists. It would be a lot easier if the user could just _type_ the desired key.\n\nImplementing this functionality would require:\n\n1. Providing an XUL element. Actually, I have no idea what a good name would be.\n\n2. Defining what the values look like. The idea would be to have _one_ value, which you could directly connect to a preference like https://developer.mozilla.org/en/XUL/textbox#a-preference. I guess connecting one input element to _two_ preferences would be kind of weird.\n\nIt should then be possible to directly assign this value to a <key> element in another script (e.g., an onLoad handler), or define a keyboard shortcut in some other way. For example, Quicker Filer has the following in its overlay to Thunderbirds main window:\n\n        <keyset>\n                <key id=\"quickerfiler_key_move\"    oncommand=\"sQuickerFilerMessengerOverlay.openDialog('move');\" modifiers=\"alt\" key=\"q\" />\n                <key id=\"quickerfiler_key_copy\"    oncommand=\"sQuickerFilerMessengerOverlay.openDialog('copy');\" />\n                <key id=\"quickerfiler_key_insmove\" oncommand=\"sQuickerFilerMessengerOverlay.openDialog('insmove');\" />\n                <key id=\"quickerfiler_key_inscopy\" oncommand=\"sQuickerFilerMessengerOverlay.openDialog('inscopy');\" />\n                <key id=\"quickerfiler_key_selfolder\" oncommand=\"sQuickerFilerMessengerOverlay.openDialog('selfolder');\"  modifiers=\"alt\" key=\"r\" />\n        </keyset>\n\nIn an onload handler, it loads the shortcuts from the preferences and sets them like this:\n\nel.setAttribute('key', key);\nel.setAttribute('modifiers', modifiers);\nel.setAttribute('disabled', 'false');\n\nI guess a property should be added to https://developer.mozilla.org/en/XUL/key to directly set the key and modifiers attributes based on the string one gets from the new input element.\n\nAs said, more complex mechanisms to customize key bindings are beyond the scope of this enhancement request."}, {"id": 5609438, "bug_id": 673669, "is_private": false, "creation_time": "2011-07-24T00:48:15Z", "creator": "davemgarrett@gmail.com", "author": "davemgarrett@gmail.com", "text": "For what it's worth, adding this sort of thing to an options dialog doesn't have to be quite as messy as your example. I wrote a simple shortcut detector field which I use in the Flagfox action configuration dialogs. It works just like you'd expect; select the field then press the hotkey combination and it shows it and can be saved. It handles alt, ctrl, shift, and meta (where available) or any combination thereof and clears on backspace.\n\nOne thing it doesn't do is validate the hotkey combo to make sure it's not used as a Firefox shortcut somewhere else. (I just check for ctrl+a/z/x/c/v and setting it automatically checks other actions to remove it if already used in Flagfox) If there was a built-in XUL widget that not only recorded shortcuts easily but also made sure it wasn't declared elsewhere, that would be quite nice to have. Not having to handle the mappings manually either would be a big improvement as well.", "count": 1, "tags": [], "time": "2011-07-24T00:48:15Z", "attachment_id": null, "raw_text": "For what it's worth, adding this sort of thing to an options dialog doesn't have to be quite as messy as your example. I wrote a simple shortcut detector field which I use in the Flagfox action configuration dialogs. It works just like you'd expect; select the field then press the hotkey combination and it shows it and can be saved. It handles alt, ctrl, shift, and meta (where available) or any combination thereof and clears on backspace.\n\nOne thing it doesn't do is validate the hotkey combo to make sure it's not used as a Firefox shortcut somewhere else. (I just check for ctrl+a/z/x/c/v and setting it automatically checks other actions to remove it if already used in Flagfox) If there was a built-in XUL widget that not only recorded shortcuts easily but also made sure it wasn't declared elsewhere, that would be quite nice to have. Not having to handle the mappings manually either would be a big improvement as well."}]}}}