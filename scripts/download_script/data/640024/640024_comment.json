{"bugs": {"640024": {"comments": [{"attachment_id": null, "time": "2011-03-08T23:29:49Z", "is_private": false, "author": "mimecuvalo@gmail.com", "bug_id": 640024, "tags": [], "count": 0, "creator": "mimecuvalo@gmail.com", "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-US) AppleWebKit/534.13 (KHTML, like Gecko) Chrome/9.0.597.107 Safari/534.13\nBuild Identifier: \n\nI've created an SSH client in javascript that interfaces with js-ctypes at times.  The two use cases are:\n  - creating cryptographically strong random numbers on Windows using CryptGenRandom\n  - using NSS to access ciphers (AES, blowfish, etc).\n\nBoth of these functions get called many, many times during the course of a session, especially when transferring files through the SFTP protocol.  I have reverted my code to not use NSS since the overhead in calling this function seems to be about ~250ms on my machine (mac, 2ghz).  Instead of using AES in NSS, which I assumed would be faster I'm using a javascript implementation of blowfish.\n\nFor the random numbers I have no alternative so I have to use it - I've worked around this issue in the meantime by requesting large swaths of random numbers and caching them so as to avoid making the js-ctypes call.  That code is found here: http://www.mozdev.org/source/browse/fireftp/src/content/js/connection/paramikojs/crypto/Random/OSRNG/nt.js?rev=1.7\n\nI'll post a benchmark shortly showing how NSS is much slower than just using JS encryption.\n\nReproducible: Always", "id": 5331737, "text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-US) AppleWebKit/534.13 (KHTML, like Gecko) Chrome/9.0.597.107 Safari/534.13\nBuild Identifier: \n\nI've created an SSH client in javascript that interfaces with js-ctypes at times.  The two use cases are:\n  - creating cryptographically strong random numbers on Windows using CryptGenRandom\n  - using NSS to access ciphers (AES, blowfish, etc).\n\nBoth of these functions get called many, many times during the course of a session, especially when transferring files through the SFTP protocol.  I have reverted my code to not use NSS since the overhead in calling this function seems to be about ~250ms on my machine (mac, 2ghz).  Instead of using AES in NSS, which I assumed would be faster I'm using a javascript implementation of blowfish.\n\nFor the random numbers I have no alternative so I have to use it - I've worked around this issue in the meantime by requesting large swaths of random numbers and caching them so as to avoid making the js-ctypes call.  That code is found here: http://www.mozdev.org/source/browse/fireftp/src/content/js/connection/paramikojs/crypto/Random/OSRNG/nt.js?rev=1.7\n\nI'll post a benchmark shortly showing how NSS is much slower than just using JS encryption.\n\nReproducible: Always", "creation_time": "2011-03-08T23:29:49Z"}, {"attachment_id": 517901, "author": "mimecuvalo@gmail.com", "count": 1, "tags": [], "creator": "mimecuvalo@gmail.com", "time": "2011-03-08T23:31:01Z", "bug_id": 640024, "creation_time": "2011-03-08T23:31:01Z", "is_private": false, "text": "Created attachment 517901\nBenchmark, NSS vs. JS", "id": 5331744, "raw_text": ""}, {"author": "mimecuvalo@gmail.com", "id": 6063342, "raw_text": "The old benchmark bitrotted.", "creation_time": "2012-02-15T12:55:06Z", "text": "Created attachment 597370\nBenchmark, NSS vs. JS\n\nThe old benchmark bitrotted.", "creator": "mimecuvalo@gmail.com", "tags": [], "count": 2, "bug_id": 640024, "attachment_id": 597370, "is_private": false, "time": "2012-02-15T12:55:06Z"}]}}, "comments": {}}