{"bugs": {"631591": {"comments": [{"raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-us) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4\nBuild Identifier: Firefox/4.0b10pre\n\nthe text label exposed via MSAA for a text input  is different depending on how the label is associated with the text input full details :http://www.html5accessibility.com/tests/placeholder-labelling.html\n\nReproducible: Always\n\nSteps to Reproduce:\n1.got to http://www.html5accessibility.com/tests/placeholder-labelling.html\n2. use a tool such as inspect32 to show info exposed via accessibility API\n3. check test cases \"placeholder with label associated using label element and for/id attributes\" and \"placeholder with label associated by wrapping label element around text and input\"\nActual Results:  \nfor \"placeholder with label associated by wrapping label element around text and input\" accessible name =\tlabel text + placeholder text\nfor \"placeholder with label associated using label element and for/id attributes\" accessible namer =\tlabel text\n\nExpected Results:  \nthe two should result in the same accessible name value. which of the text cases is correct is undetermined", "creator": "faulkner.steve@gmail.com", "text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-us) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4\nBuild Identifier: Firefox/4.0b10pre\n\nthe text label exposed via MSAA for a text input  is different depending on how the label is associated with the text input full details :http://www.html5accessibility.com/tests/placeholder-labelling.html\n\nReproducible: Always\n\nSteps to Reproduce:\n1.got to http://www.html5accessibility.com/tests/placeholder-labelling.html\n2. use a tool such as inspect32 to show info exposed via accessibility API\n3. check test cases \"placeholder with label associated using label element and for/id attributes\" and \"placeholder with label associated by wrapping label element around text and input\"\nActual Results:  \nfor \"placeholder with label associated by wrapping label element around text and input\" accessible name =\tlabel text + placeholder text\nfor \"placeholder with label associated using label element and for/id attributes\" accessible namer =\tlabel text\n\nExpected Results:  \nthe two should result in the same accessible name value. which of the text cases is correct is undetermined", "time": "2011-02-04T19:07:37Z", "count": 0, "creation_time": "2011-02-04T19:07:37Z", "tags": [], "attachment_id": null, "bug_id": 631591, "is_private": false, "author": "faulkner.steve@gmail.com", "id": 5255752}, {"time": "2011-02-15T16:17:11Z", "count": 1, "raw_text": "<label for=\"a1\">label</label> <input id=\"a1\" type=\"text\" placeholder=\"pootish\">\n\nDoesn't expose placeholder text because of rule taken in bug 604391: Expose placeholder as name if name is otherwise empty.\n\n<label>label <input type=\"text\" placeholder=\"pooter\"></label>\n\nExposes placeholder name due to the same reason (since it's recursive name calculation). I think this corresponds to ARIA name computation algorithm (perhaps extended to HTML markup). For example, I think you would see the same for:\n\n<span role=\"label\" id=\"a1\">label</span> <input aria-labelledby=\"a1\"type=\"text\" placeholder=\"pootish\">\n\n<span role=\"label\" id=\"a2\">label <input type=\"text\" placeholder=\"pooter\" aria-labelledby=\"a2\"></span>\n\nI'm not sure we need to fix anything here.", "creator": "surkov.alexander@gmail.com", "text": "<label for=\"a1\">label</label> <input id=\"a1\" type=\"text\" placeholder=\"pootish\">\n\nDoesn't expose placeholder text because of rule taken in bug 604391: Expose placeholder as name if name is otherwise empty.\n\n<label>label <input type=\"text\" placeholder=\"pooter\"></label>\n\nExposes placeholder name due to the same reason (since it's recursive name calculation). I think this corresponds to ARIA name computation algorithm (perhaps extended to HTML markup). For example, I think you would see the same for:\n\n<span role=\"label\" id=\"a1\">label</span> <input aria-labelledby=\"a1\"type=\"text\" placeholder=\"pootish\">\n\n<span role=\"label\" id=\"a2\">label <input type=\"text\" placeholder=\"pooter\" aria-labelledby=\"a2\"></span>\n\nI'm not sure we need to fix anything here.", "is_private": false, "author": "surkov.alexander@gmail.com", "id": 5279851, "tags": [], "creation_time": "2011-02-15T16:17:11Z", "attachment_id": null, "bug_id": 631591}, {"bug_id": 631591, "text": "(In reply to comment #1)\n> <label for=\"a1\">label</label> <input id=\"a1\" type=\"text\" placeholder=\"pootish\">\n> \n> Doesn't expose placeholder text because of rule taken in bug 604391: Expose\n> placeholder as name if name is otherwise empty.\n> \n> <label>label <input type=\"text\" placeholder=\"pooter\"></label>\n> \n> Exposes placeholder name due to the same reason (since it's recursive name\n> calculation). I think this corresponds to ARIA name computation algorithm\n> (perhaps extended to HTML markup). For example, I think you would see the same\n> for:\n> \n> <span role=\"label\" id=\"a1\">label</span> <input aria-labelledby=\"a1\"type=\"text\"\n> placeholder=\"pootish\">\n> \n> <span role=\"label\" id=\"a2\">label <input type=\"text\" placeholder=\"pooter\"\n> aria-labelledby=\"a2\"></span>\n> \n> I'm not sure we need to fix anything here.\n\nhi alex, \nthere is no role=label in ARIA.\nthe 2 cases wrapped vs for/id should produce the same result no?", "tags": [], "creation_time": "2011-02-15T17:35:35Z", "attachment_id": null, "raw_text": "(In reply to comment #1)\n> <label for=\"a1\">label</label> <input id=\"a1\" type=\"text\" placeholder=\"pootish\">\n> \n> Doesn't expose placeholder text because of rule taken in bug 604391: Expose\n> placeholder as name if name is otherwise empty.\n> \n> <label>label <input type=\"text\" placeholder=\"pooter\"></label>\n> \n> Exposes placeholder name due to the same reason (since it's recursive name\n> calculation). I think this corresponds to ARIA name computation algorithm\n> (perhaps extended to HTML markup). For example, I think you would see the same\n> for:\n> \n> <span role=\"label\" id=\"a1\">label</span> <input aria-labelledby=\"a1\"type=\"text\"\n> placeholder=\"pootish\">\n> \n> <span role=\"label\" id=\"a2\">label <input type=\"text\" placeholder=\"pooter\"\n> aria-labelledby=\"a2\"></span>\n> \n> I'm not sure we need to fix anything here.\n\nhi alex, \nthere is no role=label in ARIA.\nthe 2 cases wrapped vs for/id should produce the same result no?", "creator": "faulkner.steve@gmail.com", "id": 5280090, "is_private": false, "author": "faulkner.steve@gmail.com", "time": "2011-02-15T17:35:35Z", "count": 2}, {"time": "2011-02-15T17:48:11Z", "count": 3, "raw_text": "(In reply to comment #2)\n\n> hi alex, \n> there is no role=label in ARIA.\n\nWell, not in Gecko ARIA implementation :) David, your call?\n\nBut @role=\"label\" can be replaced on anything else in the example.\n\n> the 2 cases wrapped vs for/id should produce the same result no?\n\nI would say yes, at least from the point of view of page author since these ways to provide a label are equivalent. But I tried to give explanation why it doesn't happen and why it may be considered as correct approach and as a feature. I don't have strong opinion what should we do here.", "creator": "surkov.alexander@gmail.com", "text": "(In reply to comment #2)\n\n> hi alex, \n> there is no role=label in ARIA.\n\nWell, not in Gecko ARIA implementation :) David, your call?\n\nBut @role=\"label\" can be replaced on anything else in the example.\n\n> the 2 cases wrapped vs for/id should produce the same result no?\n\nI would say yes, at least from the point of view of page author since these ways to provide a label are equivalent. But I tried to give explanation why it doesn't happen and why it may be considered as correct approach and as a feature. I don't have strong opinion what should we do here.", "is_private": false, "author": "surkov.alexander@gmail.com", "id": 5280124, "creation_time": "2011-02-15T17:48:11Z", "tags": [], "attachment_id": null, "bug_id": 631591}, {"time": "2011-02-15T18:17:59Z", "count": 4, "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> \n> > hi alex, \n> > there is no role=label in ARIA.\n> \n> Well, not in Gecko ARIA implementation :) David, your call?\n\nOops. Yeah I guess this was removed from the spec. I need to do a proper cross reference again.\n\nI'll need to make sure we don't rely on role=\"label\" in our front-end code (unlikely). Filed bug 634322 for this.", "raw_text": "(In reply to comment #3)\n> (In reply to comment #2)\n> \n> > hi alex, \n> > there is no role=label in ARIA.\n> \n> Well, not in Gecko ARIA implementation :) David, your call?\n\nOops. Yeah I guess this was removed from the spec. I need to do a proper cross reference again.\n\nI'll need to make sure we don't rely on role=\"label\" in our front-end code (unlikely). Filed bug 634322 for this.", "creator": "dbolter@mozilla.com", "id": 5280217, "is_private": false, "author": "dbolter@mozilla.com", "bug_id": 631591, "tags": [], "creation_time": "2011-02-15T18:17:59Z", "attachment_id": null}, {"is_private": false, "author": "dbolter@mozilla.com", "id": 5280241, "creation_time": "2011-02-15T18:22:11Z", "tags": [], "attachment_id": null, "bug_id": 631591, "time": "2011-02-15T18:22:11Z", "count": 5, "raw_text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > the 2 cases wrapped vs for/id should produce the same result no?\n> \n> I would say yes, at least from the point of view of page author since these\n> ways to provide a label are equivalent.\n\nI think this is enough to confirm this bug status.\n\n> But I tried to give explanation why it\n> doesn't happen and why it may be considered as correct approach and as a\n> feature. I don't have strong opinion what should we do here.\n\nI think we need to reach a consensus here. Steve do you think our implementation is fair (comment 1), or do you feel strongly it needs to change?", "creator": "dbolter@mozilla.com", "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > the 2 cases wrapped vs for/id should produce the same result no?\n> \n> I would say yes, at least from the point of view of page author since these\n> ways to provide a label are equivalent.\n\nI think this is enough to confirm this bug status.\n\n> But I tried to give explanation why it\n> doesn't happen and why it may be considered as correct approach and as a\n> feature. I don't have strong opinion what should we do here.\n\nI think we need to reach a consensus here. Steve do you think our implementation is fair (comment 1), or do you feel strongly it needs to change?"}, {"id": 5281190, "author": "faulkner.steve@gmail.com", "time": "2011-02-15T22:07:20Z", "count": 6, "is_private": false, "text": "I think that it will not be expected by authors that the 2 methods will produce different results as they are supposed to be equivalent.\n\nIf I as an author provided a visible text label  would not expect the resulting accessible label to be a concatenation of the 2 sources.\n\nThere is a also question of whether this behaviour will be the same across browsers, I think that is an important consideration and would hazard that it will not be.\n\nWhat I strongly believe is the two methods should produce the same result.", "bug_id": 631591, "raw_text": "I think that it will not be expected by authors that the 2 methods will produce different results as they are supposed to be equivalent.\n\nIf I as an author provided a visible text label  would not expect the resulting accessible label to be a concatenation of the 2 sources.\n\nThere is a also question of whether this behaviour will be the same across browsers, I think that is an important consideration and would hazard that it will not be.\n\nWhat I strongly believe is the two methods should produce the same result.", "creator": "faulkner.steve@gmail.com", "creation_time": "2011-02-15T22:07:20Z", "tags": [], "attachment_id": null}, {"bug_id": 631591, "text": "(In reply to comment #6)\n\n> There is a also question of whether this behaviour will be the same across\n> browsers, I think that is an important consideration and would hazard that it\n> will not be.\n\nTrue, but hard to do while there's no specification how to expose HTML to AT APIs. I know there's some work but never heard it was finished.\n\n> What I strongly believe is the two methods should produce the same result.\n\nWe follow general algorithm of name computations. We need new one to make that happen. I think we should join to that HTML to AT group and clarify this.", "attachment_id": null, "tags": [], "creation_time": "2011-02-17T03:11:49Z", "creator": "surkov.alexander@gmail.com", "raw_text": "(In reply to comment #6)\n\n> There is a also question of whether this behaviour will be the same across\n> browsers, I think that is an important consideration and would hazard that it\n> will not be.\n\nTrue, but hard to do while there's no specification how to expose HTML to AT APIs. I know there's some work but never heard it was finished.\n\n> What I strongly believe is the two methods should produce the same result.\n\nWe follow general algorithm of name computations. We need new one to make that happen. I think we should join to that HTML to AT group and clarify this.", "id": 5285327, "is_private": false, "count": 7, "time": "2011-02-17T03:11:49Z", "author": "surkov.alexander@gmail.com"}, {"count": 8, "time": "2011-02-17T09:52:59Z", "creator": "faulkner.steve@gmail.com", "raw_text": "(In reply to comment #7)\n> (In reply to comment #6)\n> \n> > There is a also question of whether this behaviour will be the same across\n> > browsers, I think that is an important consideration and would hazard that it\n> > will not be.\n> \n> True, but hard to do while there's no specification how to expose HTML to AT\n> APIs. I know there's some work but never heard it was finished.\n> \n> > What I strongly believe is the two methods should produce the same result.\n> \n> We follow general algorithm of name computations. We need new one to make that\n> happen. I think we should join to that HTML to AT group and clarify this.\n\nHi alex,\n\nThe work is definitley not finished, but is being actively developed (by me at least)\n\nhttp://dev.w3.org/html5/html-api-map/overview.html\n\n>I think we should join to that HTML to AT group and clarify this.\n\nplease do!", "text": "(In reply to comment #7)\n> (In reply to comment #6)\n> \n> > There is a also question of whether this behaviour will be the same across\n> > browsers, I think that is an important consideration and would hazard that it\n> > will not be.\n> \n> True, but hard to do while there's no specification how to expose HTML to AT\n> APIs. I know there's some work but never heard it was finished.\n> \n> > What I strongly believe is the two methods should produce the same result.\n> \n> We follow general algorithm of name computations. We need new one to make that\n> happen. I think we should join to that HTML to AT group and clarify this.\n\nHi alex,\n\nThe work is definitley not finished, but is being actively developed (by me at least)\n\nhttp://dev.w3.org/html5/html-api-map/overview.html\n\n>I think we should join to that HTML to AT group and clarify this.\n\nplease do!", "is_private": false, "author": "faulkner.steve@gmail.com", "id": 5285785, "attachment_id": null, "tags": [], "creation_time": "2011-02-17T09:52:59Z", "bug_id": 631591}, {"bug_id": 631591, "attachment_id": null, "tags": [], "creation_time": "2011-02-17T10:30:06Z", "id": 5285820, "author": "surkov.alexander@gmail.com", "is_private": false, "text": "(In reply to comment #8)\n\n> Hi alex,\n> \n> The work is definitley not finished, but is being actively developed (by me at\n> least)\n\nok, great. I didn't know you're on it.\n\n> http://dev.w3.org/html5/html-api-map/overview.html\n\n> >I think we should join to that HTML to AT group and clarify this.\n> \n> please do!\n\nI bet I read early drafts from Cynthia and did comments in the past. I can run thought the spec and check it against Firefox (after fx4 though). How can I help else? Do you have a separate thread where you keep discussions?", "creator": "surkov.alexander@gmail.com", "raw_text": "(In reply to comment #8)\n\n> Hi alex,\n> \n> The work is definitley not finished, but is being actively developed (by me at\n> least)\n\nok, great. I didn't know you're on it.\n\n> http://dev.w3.org/html5/html-api-map/overview.html\n\n> >I think we should join to that HTML to AT group and clarify this.\n> \n> please do!\n\nI bet I read early drafts from Cynthia and did comments in the past. I can run thought the spec and check it against Firefox (after fx4 though). How can I help else? Do you have a separate thread where you keep discussions?", "count": 9, "time": "2011-02-17T10:30:06Z"}, {"creator": "faulkner.steve@gmail.com", "raw_text": "Hi alex, \n\n>I can run thought the spec and check it against Firefox (after fx4 though) \n\nthat would be great.\n\n>How can I help else?\nOne of the aims of the document is to get converging implementaions across browsers(where necessary)so for example the this bug is one where they may well be divergence and therefore need to get agreement on how it shoudl work.\n\n>Do you have a separate thread where you keep discussions?\n\nthere is no dedicated list, you can file bugs against the document using the w3c html wg bugzilla (need an account)\n\nhttp://www.w3.org/Bugs/Public/enter_bug.cgi?product=HTML%20WG&component=HTML%20a11y%20APIs%20(editor:%20Steve%20Faulkner,%20Cynthia Shelley)", "text": "Hi alex, \n\n>I can run thought the spec and check it against Firefox (after fx4 though) \n\nthat would be great.\n\n>How can I help else?\nOne of the aims of the document is to get converging implementaions across browsers(where necessary)so for example the this bug is one where they may well be divergence and therefore need to get agreement on how it shoudl work.\n\n>Do you have a separate thread where you keep discussions?\n\nthere is no dedicated list, you can file bugs against the document using the w3c html wg bugzilla (need an account)\n\nhttp://www.w3.org/Bugs/Public/enter_bug.cgi?product=HTML%20WG&component=HTML%20a11y%20APIs%20(editor:%20Steve%20Faulkner,%20Cynthia Shelley)", "count": 10, "time": "2011-02-23T13:52:30Z", "attachment_id": null, "creation_time": "2011-02-23T13:52:30Z", "tags": [], "bug_id": 631591, "is_private": false, "author": "faulkner.steve@gmail.com", "id": 5298350}, {"attachment_id": null, "creation_time": "2011-03-10T16:31:59Z", "tags": [], "creator": "dbolter@mozilla.com", "raw_text": "Alexander are you owning this one?", "bug_id": 631591, "text": "Alexander are you owning this one?", "is_private": false, "count": 11, "author": "dbolter@mozilla.com", "time": "2011-03-10T16:31:59Z", "id": 5336349}, {"creation_time": "2011-03-11T02:14:15Z", "tags": [], "attachment_id": null, "raw_text": "(In reply to comment #11)\n> Alexander are you owning this one?\n\nI would, do you think it should be targeted to fx5?", "creator": "surkov.alexander@gmail.com", "bug_id": 631591, "text": "(In reply to comment #11)\n> Alexander are you owning this one?\n\nI would, do you think it should be targeted to fx5?", "is_private": false, "time": "2011-03-11T02:14:15Z", "author": "surkov.alexander@gmail.com", "count": 12, "id": 5338131}, {"creator": "faulkner.steve@gmail.com", "raw_text": "(In reply to alexander :surkov from comment #12)\n> (In reply to comment #11)\n> > Alexander are you owning this one?\n> \n> I would, do you think it should be targeted to fx5?\n\nHi Alex any update on this? I recently updated the tests http://www.html5accessibility.com/tests/placeholder-labelling.html and found that firefox is still borked.", "text": "(In reply to alexander :surkov from comment #12)\n> (In reply to comment #11)\n> > Alexander are you owning this one?\n> \n> I would, do you think it should be targeted to fx5?\n\nHi Alex any update on this? I recently updated the tests http://www.html5accessibility.com/tests/placeholder-labelling.html and found that firefox is still borked.", "count": 13, "time": "2013-11-03T18:35:13Z", "attachment_id": null, "creation_time": "2013-11-03T18:35:13Z", "tags": [], "bug_id": 631591, "author": "faulkner.steve@gmail.com", "is_private": false, "id": 8034775}, {"is_private": false, "count": 14, "author": "marco.zehe@gmail.com", "time": "2014-06-04T12:00:10Z", "id": 8882333, "attachment_id": null, "creation_time": "2014-06-04T12:00:10Z", "tags": [], "creator": "marco.zehe@gmail.com", "raw_text": "I think we should get this moving again. I am currently working on bug 670083 and also have a simple idea how to fix this bug too.", "bug_id": 631591, "text": "I think we should get this moving again. I am currently working on bug 670083 and also have a simple idea how to fix this bug too."}, {"creator": "marco.zehe@gmail.com", "raw_text": "This is still a problem in Firefox 61.0a1 nightly. I noticed that placeholder does not even appear in the current name calculation spec any more. Steve, is this bug still valid at all, then?", "text": "This is still a problem in Firefox 61.0a1 nightly. I noticed that placeholder does not even appear in the current name calculation spec any more. Steve, is this bug still valid at all, then?", "count": 15, "time": "2018-04-12T08:05:51Z", "attachment_id": null, "creation_time": "2018-04-12T08:05:51Z", "tags": [], "bug_id": 631591, "author": "marco.zehe@gmail.com", "is_private": false, "id": 13200204}, {"creation_time": "2018-04-17T19:31:10Z", "tags": [], "attachment_id": null, "bug_id": 631591, "author": "surkov.alexander@gmail.com", "is_private": false, "id": 13213447, "raw_text": "(In reply to Marco Zehe (:MarcoZ) from comment #15)\n> This is still a problem in Firefox 61.0a1 nightly. I noticed that\n> placeholder does not even appear in the current name calculation spec any\n> more. Steve, is this bug still valid at all, then?\n\nnot Steve, but some thinking: I think placeholder is exposed via API separately for each platform, for example, 'placeholder' object attribute on IA2, and thus it was removed from name computation. However I'd argue it should be exposed via accessible name as a fallback mechanism. We could expose 'explicit-name:false' object attribute in addition for those who rely on it.", "creator": "surkov.alexander@gmail.com", "text": "(In reply to Marco Zehe (:MarcoZ) from comment #15)\n> This is still a problem in Firefox 61.0a1 nightly. I noticed that\n> placeholder does not even appear in the current name calculation spec any\n> more. Steve, is this bug still valid at all, then?\n\nnot Steve, but some thinking: I think placeholder is exposed via API separately for each platform, for example, 'placeholder' object attribute on IA2, and thus it was removed from name computation. However I'd argue it should be exposed via accessible name as a fallback mechanism. We could expose 'explicit-name:false' object attribute in addition for those who rely on it.", "time": "2018-04-17T19:31:10Z", "count": 16}, {"count": 17, "time": "2018-05-15T08:58:14Z", "creator": "faulkner.steve@gmail.com", "raw_text": "Marco, this issue is still present in Firefox, take the test case\nhttps://s.codepen.io/stevef/debug/PeBroL it is expected that both inputs will have an accessible name of \"label\" the first input does, the second input has an accessible name that include both the label text and the placeholder text \"label pootish\".\nNote that in Chrome and Edge the accessible names are the same \"label\" for both inputs as expected.", "text": "Marco, this issue is still present in Firefox, take the test case\nhttps://s.codepen.io/stevef/debug/PeBroL it is expected that both inputs will have an accessible name of \"label\" the first input does, the second input has an accessible name that include both the label text and the placeholder text \"label pootish\".\nNote that in Chrome and Edge the accessible names are the same \"label\" for both inputs as expected.", "is_private": false, "author": "faulkner.steve@gmail.com", "id": 13278056, "attachment_id": null, "tags": [], "creation_time": "2018-05-15T08:58:14Z", "bug_id": 631591}]}}, "comments": {}}