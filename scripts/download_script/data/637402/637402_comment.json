{"bugs": {"637402": {"comments": [{"bug_id": 637402, "text": "#define MONITOR_BRANCH()                                                      \\\n    JS_BEGIN_MACRO                                                            \\\n        if (TRACING_ENABLED(cx)) {                                            \\\n            if (!TRACE_RECORDER(cx) && !TRACE_PROFILER(cx) && useMethodJIT) { \\\n                MONITOR_BRANCH_METHODJIT();                                   \\\n            } else {                                                          \\\n                MonitorResult r = MonitorLoopEdge(cx, inlineCallCount, interpMode); \\\n                if (r == MONITOR_RECORDING) {                                 \\\n                    JS_ASSERT(TRACE_RECORDER(cx));                            \\\n                    JS_ASSERT(!TRACE_PROFILER(cx));                           \\\n                    MONITOR_BRANCH_TRACEVIS;                                  \\\n                    ENABLE_INTERRUPTS();                                      \\\n                    CLEAR_LEAVE_ON_TRACE_POINT();                             \\\n                }                                                             \\\n                RESTORE_INTERP_VARS();                                        \\\n                JS_ASSERT_IF(cx->isExceptionPending(), r == MONITOR_ERROR);   \\\n                if (r == MONITOR_ERROR)                                       \\\n                    goto error;                                               \\\n            }                                                                 \\\n        } else {                                                              \\\n            MONITOR_BRANCH_METHODJIT();                                       \\\n        }                                                                     \\\n    JS_END_MACRO\n\nThis is hard to debug. In bug 637385 I ended up making a patch to turn these into inline functions so I could step through them in the debugger. Maybe we should land it. I'll have to measure the perf impact.", "tags": [], "creation_time": "2011-02-28T19:46:52Z", "attachment_id": null, "raw_text": "#define MONITOR_BRANCH()                                                      \\\n    JS_BEGIN_MACRO                                                            \\\n        if (TRACING_ENABLED(cx)) {                                            \\\n            if (!TRACE_RECORDER(cx) && !TRACE_PROFILER(cx) && useMethodJIT) { \\\n                MONITOR_BRANCH_METHODJIT();                                   \\\n            } else {                                                          \\\n                MonitorResult r = MonitorLoopEdge(cx, inlineCallCount, interpMode); \\\n                if (r == MONITOR_RECORDING) {                                 \\\n                    JS_ASSERT(TRACE_RECORDER(cx));                            \\\n                    JS_ASSERT(!TRACE_PROFILER(cx));                           \\\n                    MONITOR_BRANCH_TRACEVIS;                                  \\\n                    ENABLE_INTERRUPTS();                                      \\\n                    CLEAR_LEAVE_ON_TRACE_POINT();                             \\\n                }                                                             \\\n                RESTORE_INTERP_VARS();                                        \\\n                JS_ASSERT_IF(cx->isExceptionPending(), r == MONITOR_ERROR);   \\\n                if (r == MONITOR_ERROR)                                       \\\n                    goto error;                                               \\\n            }                                                                 \\\n        } else {                                                              \\\n            MONITOR_BRANCH_METHODJIT();                                       \\\n        }                                                                     \\\n    JS_END_MACRO\n\nThis is hard to debug. In bug 637385 I ended up making a patch to turn these into inline functions so I could step through them in the debugger. Maybe we should land it. I'll have to measure the perf impact.", "creator": "jorendorff@mozilla.com", "id": 5309356, "is_private": false, "time": "2011-02-28T19:46:52Z", "author": "jorendorff@mozilla.com", "count": 0}, {"is_private": false, "count": 1, "time": "2011-02-28T19:47:52Z", "author": "jorendorff@mozilla.com", "id": 5309361, "attachment_id": 515693, "creation_time": "2011-02-28T19:47:52Z", "tags": [], "creator": "jorendorff@mozilla.com", "raw_text": "Doesn't build without the methodjit, probably. Easy to fix, I just haven't gotten to it. Later.", "bug_id": 637402, "text": "Created attachment 515693\nWIP 1\n\nDoesn't build without the methodjit, probably. Easy to fix, I just haven't gotten to it. Later."}]}}, "comments": {}}