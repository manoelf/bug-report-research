{"bugs": {"643918": {"comments": [{"text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b13pre) Gecko/20110316 Firefox/4.0b13pre\nBuild Identifier: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b13pre) Gecko/20110316 Firefox/4.0b13pre\n\nWhen loading the page in the URL field firefox goes into an infinite loop, or at least takes more than a few minutes.  OS X's sample utility seems to implicate the line breaking code which makes sense as this is a testcase that stresses the line breaker pretty hard.\n\nThe page loads up a large amount of text inside a <pre style=\"word-wrap: break-word; white-space: pre-wrap;\"> loaded inside <iframe>s of various width to measure the line breaking behavior (it's actually from a test for an unrelated WebKit bug, for the curious).\n\nThis is a regression from Firefox 3.6.15 which on my box terminates in a reasonable amount of time.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Open the page\n2. Observe it successfully handle the 0px - 30px cases but goes into an infinite loop on 40px.\n\n\n\nHere's the output from OS X's sample tool (excluding non-main threads) from my MacBook pro:\n\nSampling process 245 for 3 seconds with 1 millisecond of run time between samples\nSampling completed, processing symbols...\nAnalysis of sampling firefox-bin (pid 245) every 1 millisecond\nCall graph:\n    1771 Thread_3369   DispatchQueue_1: com.apple.main-thread  (serial)\n      1756 start\n        1756 main\n          1756 XRE_main\n            1756 nsAppStartup::Run()\n              1756 nsAppShell::Run()\n                1756 -[NSApplication run]\n                  1756 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:]\n                    1756 _DPSNextEvent\n                      1756 BlockUntilNextEventMatchingListInMode\n                        1756 ReceiveNextEventCommon\n                          1756 RunCurrentEventLoopInMode\n                            1756 CFRunLoopRunSpecific\n                              1756 __CFRunLoopRun\n                                1756 __CFRunLoopDoSources0\n                                  1756 nsAppShell::ProcessGeckoEvents(void*)\n                                    1756 nsBaseAppShell::NativeEventCallback()\n                                      1756 NS_ProcessPendingEvents_P(nsIThread*, unsigned int)\n                                        1756 nsThread::ProcessNextEvent(int, int*)\n                                          1756 nsRunnableMethodImpl<void (nsDocument::*)(), true>::Run()\n                                            1756 nsDocument::DispatchContentLoadedEvents()\n                                              1756 nsDocument::DoUnblockOnload()\n                                                1756 nsLoadGroup::RemoveRequest(nsIRequest*, nsISupports*, unsigned int)\n                                                  1756 nsDocLoader::OnStopRequest(nsIRequest*, nsISupports*, unsigned int)\n                                                    1756 nsDocLoader::DocLoaderIsEmpty(int)\n                                                      1756 nsDocLoader::FireOnStateChange(nsIWebProgress*, nsIRequest*, int, unsigned int)\n                                                        1756 nsDocShell::OnStateChange(nsIWebProgress*, nsIRequest*, unsigned int, unsigned int)\n                                                          1756 nsDocShell::EndPageLoad(nsIWebProgress*, nsIChannel*, unsigned int)\n                                                            1756 DocumentViewerImpl::LoadComplete(unsigned int)\n                                                              1756 PresShell::FlushPendingNotifications(mozFlushType)\n                                                                1756 PresShell::ProcessReflowCommands(int)\n                                                                  1756 PresShell::DoReflow(nsIFrame*, int)\n                                                                    1756 ViewportFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                      1756 nsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, int, int, unsigned int, unsigned int&, nsOverflowContinuationTracker*)\n                                                                        1756 nsHTMLScrollFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                          1756 nsHTMLScrollFrame::ReflowContents(ScrollReflowState*, nsHTMLReflowMetrics const&)\n                                                                            1756 nsHTMLScrollFrame::ReflowScrolledFrame(ScrollReflowState*, int, int, nsHTMLReflowMetrics*, int)\n                                                                              1756 nsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, int, int, unsigned int, unsigned int&, nsOverflowContinuationTracker*)\n                                                                                1756 nsCanvasFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                  1756 nsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, int, int, unsigned int, unsigned int&, nsOverflowContinuationTracker*)\n                                                                                    1756 nsBlockFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                      1756 nsBlockFrame::ReflowDirtyLines(nsBlockReflowState&)\n                                                                                        1756 nsBlockFrame::ReflowLine(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                          1756 nsBlockFrame::ReflowBlockFrame(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                            1756 nsBlockReflowContext::ReflowBlock(nsRect const&, int, nsCollapsingMargin&, int, int, nsLineBox*, nsHTMLReflowState&, unsigned int&, nsBlockReflowState&)\n                                                                                              1756 nsBlockFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                                1756 nsBlockFrame::ReflowDirtyLines(nsBlockReflowState&)\n                                                                                                  1756 nsBlockFrame::ReflowLine(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                    1756 nsBlockFrame::ReflowBlockFrame(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                      1756 nsBlockReflowContext::ReflowBlock(nsRect const&, int, nsCollapsingMargin&, int, int, nsLineBox*, nsHTMLReflowState&, unsigned int&, nsBlockReflowState&)\n                                                                                                        1756 nsBlockFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                                          1756 nsBlockFrame::ReflowDirtyLines(nsBlockReflowState&)\n                                                                                                            1756 nsBlockFrame::ReflowLine(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                              1756 nsBlockFrame::ReflowInlineFrames(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                                1755 nsBlockFrame::DoReflowInlineFrames(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFlowAreaRect&, int&, nsFloatManager::SavedState*, int*, LineReflowStatus*, int)\n                                                                                                                  1126 nsBlockFrame::ReflowInlineFrame(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsIFrame*, LineReflowStatus*)\n                                                                                                                    1125 nsLineLayout::ReflowFrame(nsIFrame*, unsigned int&, nsHTMLReflowMetrics*, int&)\n                                                                                                                      1121 nsTextFrame::ReflowText(nsLineLayout&, int, nsIRenderingContext*, int, nsHTMLReflowMetrics&, unsigned int&)\n                                                                                                                        1118 nsTextFrame::SetLength(int, nsLineLayout*, unsigned int)\n                                                                                                                          1118 nsBlockFrame::DoRemoveFrame(nsIFrame*, unsigned int)\n                                                                                                                            1081 nsLineBox::IndexOf(nsIFrame*) const\n                                                                                                                            20 nsBlockFrame::DoRemoveFrame(nsIFrame*, unsigned int)\n                                                                                                                            14 nsContinuingTextFrame::DestroyFrom(nsIFrame*)\n                                                                                                                              11 nsTextFrame::ClearTextRun(nsTextFrame*)\n                                                                                                                                11 UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)\n                                                                                                                                  10 UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)\n                                                                                                                                  1 moz_free\n                                                                                                                              2 gfxTextRun::~gfxTextRun()\n                                                                                                                                1 nsTArray_base<nsTArrayDefaultAllocator>::ShrinkCapacity(unsigned int)\n                                                                                                                                1 szone_free_definite_size\n                                                                                                                                  1 small_free_list_add_ptr\n                                                                                                                              1 nsContinuingTextFrame::DestroyFrom(nsIFrame*)\n                                                                                                                            2 nsFrame::DestroyFrom(nsIFrame*)\n                                                                                                                              1 PresShell::NotifyDestroyingFrame(nsIFrame*)\n                                                                                                                                1 mozilla::FramePropertyTable::DeleteAllFor(nsIFrame*)\n                                                                                                                                  1 PL_DHashTableOperate\n                                                                                                                              1 nsSVGEffects::InvalidateDirectRenderingObservers(nsIFrame*)\n                                                                                                                            1 nsLineBox::Destroy(nsIPresShell*)\n                                                                                                                        1 nsINode::GetProperty(unsigned short, nsIAtom*, unsigned int*) const\n                                                                                                                          1 nsPropertyTable::GetPropertyInternal(nsPropertyOwner, nsIAtom*, int, unsigned int*)\n                                                                                                                        1 nsTextFrame::UnionTextDecorationOverflow(nsPresContext*, PropertyProvider&, nsRect*)\n                                                                                                                          1 nsLayoutUtils::GetTextShadowRectsUnion(nsRect const&, nsIFrame*, unsigned int)\n                                                                                                                        1 nsThebesFontMetrics::Release()\n                                                                                                                      4 nsLineLayout::ReflowFrame(nsIFrame*, unsigned int&, nsHTMLReflowMetrics*, int&)\n                                                                                                                    1 nsBlockFrame::ReflowInlineFrame(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsIFrame*, LineReflowStatus*)\n                                                                                                                  627 nsBlockFrame::PlaceLine(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFloatManager::SavedState*, nsRect&, int&, int*)\n                                                                                                                    621 nsLineLayout::TrimTrailingWhiteSpace()\n                                                                                                                      621 nsLineLayout::TrimTrailingWhiteSpaceIn(nsLineLayout::PerSpanData*, int*)\n                                                                                                                        621 nsTextFrame::TrimTrailingWhiteSpace(nsIRenderingContext*)\n                                                                                                                          620 nsTextFrame::EnsureTextRun(gfxContext*, nsIFrame*, nsLineList_iterator const*, unsigned int*)\n                                                                                                                            567 nsBlockInFlowLineIterator::nsBlockInFlowLineIterator(nsBlockFrame*, nsIFrame*, int*)\n                                                                                                                              560 nsLineBox::IndexOf(nsIFrame*) const\n                                                                                                                              6 nsBlockInFlowLineIterator::nsBlockInFlowLineIterator(nsBlockFrame*, nsIFrame*, int*)\n                                                                                                                              1 nsLayoutUtils::FindChildContainingDescendant(nsIFrame*, nsIFrame*)\n                                                                                                                            42 BuildTextRunsScanner::ScanFrame(nsIFrame*)\n                                                                                                                              42 BuildTextRunsScanner::FlushFrames(int, int)\n                                                                                                                                42 BuildTextRunsScanner::BuildTextRunForFrames(void*)\n                                                                                                                                  28 MakeTextRun(unsigned char const*, unsigned int, gfxFontGroup*, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                    28 TextRunWordCache::MakeTextRun(unsigned char const*, unsigned int, gfxFontGroup*, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                      18 gfxFontGroup::MakeTextRun(unsigned char const*, unsigned int, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                        18 gfxFontGroup::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int)\n                                                                                                                                          15 gfxFontGroup::InitScriptRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, unsigned int, int)\n                                                                                                                                            15 gfxFont::SplitAndInitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int)\n                                                                                                                                              15 gfxMacFont::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int, int)\n                                                                                                                                                15 gfxCoreTextShaper::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int)\n                                                                                                                                                  4 CTLineCreateWithAttributedString\n                                                                                                                                                    4 TTypesetterAttrString::Initialize()\n                                                                                                                                                      2 TGlyphEncoder::EncodeChars(CFRange, __CFDictionary const*)\n                                                                                                                                                        1 TRun::TRun(TCFBase<TGlyphStorage>*, CFRange, __CFDictionary const*)\n                                                                                                                                                          1 TAttributes::TAttributes(__CFDictionary const*)\n                                                                                                                                                            1 TAttributes::ParseAttributes(__CFDictionary const*, void const*&)\n                                                                                                                                                              1 CFDictionaryApplyFunction\n                                                                                                                                                        1 _CFRuntimeCreateInstance\n                                                                                                                                                          1 malloc_zone_malloc\n                                                                                                                                                            1 szone_malloc_should_clear\n                                                                                                                                                              1 tiny_malloc_from_free_list\n                                                                                                                                                      2 TTypesetter::FinishEncoding(TLine&, unsigned char) const\n                                                                                                                                                        2 TShapingEngine::ShapeGlyphs(TLine&, TCharStream const&)\n                                                                                                                                                          2 TAATMorphTable::ShapeGlyphs(bool&, bool&)\n                                                                                                                                                            2 TAATMorphSubtableMorx::SetTablePtr(void const*)\n                                                                                                                                                  4 _CFRelease\n                                                                                                                                                    1 TLine::~TLine()\n                                                                                                                                                      1 _CFRelease\n                                                                                                                                                        1 __CFArrayReleaseValues\n                                                                                                                                                          1 _CFRelease\n                                                                                                                                                            1 _CFRelease\n                                                                                                                                                              1 __CFBasicHashDrain\n                                                                                                                                                    1 _CFRelease\n                                                                                                                                                      1 __CFRunArrayDeallocate\n                                                                                                                                                    1 __spin_lock\n                                                                                                                                                    1 object_getClass\n                                                                                                                                                  3 CFAttributedStringCreate\n                                                                                                                                                    3 CFDictionaryCreateMutableCopy\n                                                                                                                                                      2 CFDictionaryCreateMutableCopy\n                                                                                                                                                      1 CFBasicHashCreateCopy\n                                                                                                                                                        1 objc_assign_strongCast\n                                                                                                                                                  2 CFStringCreateWithCharactersNoCopy\n                                                                                                                                                    2 __CFStringCreateImmutableFunnel3\n                                                                                                                                                      1 __CFStringCreateImmutableFunnel3\n                                                                                                                                                      1 pthread_getspecific\n                                                                                                                                                  1 CTLineGetGlyphRuns\n                                                                                                                                                  1 gfxCoreTextShaper::SetGlyphsFromRun(gfxTextRun*, __CTRun const*, int, int, int)\n                                                                                                                                                    1 TLine::GetPositionsForRun(TRun const*) const\n                                                                                                                                                      1 TLine::CachePositions() const\n                                                                                                                                                        1 TRun::CacheGlyphPositions(double&, double&, CGPoint*) const\n                                                                                                                                          3 gfxFontGroup::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int)\n                                                                                                                                      4 TextRunWordCache::MakeTextRun(unsigned char const*, unsigned int, gfxFontGroup*, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                      3 TextRunWordCache::LookupWord(gfxTextRun*, gfxFont*, unsigned int, unsigned int, unsigned int, nsTArray<TextRunWordCache::DeferredWord, nsTArrayDefaultAllocator>*)\n                                                                                                                                        3 gfxTextRun::CopyGlyphDataFrom(gfxTextRun*, unsigned int, unsigned int, unsigned int)\n                                                                                                                                      2 gfxTextRun::Create(gfxTextRunFactory::Parameters const*, void const*, unsigned int, gfxFontGroup*, unsigned int)\n                                                                                                                                        2 gfxTextRun::AllocateStorage(void const*&, unsigned int, unsigned int)\n                                                                                                                                          1 malloc\n                                                                                                                                            1 malloc_zone_malloc\n                                                                                                                                              1 szone_malloc_should_clear\n                                                                                                                                                1 tiny_malloc_from_free_list\n                                                                                                                                          1 memcpy\n                                                                                                                                      1 gfxTextRun::~gfxTextRun()\n                                                                                                                                        1 free\n                                                                                                                                          1 szone_size\n                                                                                                                                  6 BuildTextRunsScanner::SetupBreakSinksForTextRun(gfxTextRun*, int, int)\n                                                                                                                                    5 nsLineBreaker::AppendText(nsIAtom*, unsigned char const*, unsigned int, unsigned int, nsILineBreakSink*)\n                                                                                                                                      3 nsLineBreaker::FlushCurrentWord()\n                                                                                                                                        3 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                          2 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                          1 GetClass(unsigned short)\n                                                                                                                                      2 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned char const*, unsigned int, unsigned char*)\n                                                                                                                                    1 BuildTextRunsScanner::SetupBreakSinksForTextRun(gfxTextRun*, int, int)\n                                                                                                                                  4 NS_Alloc_P\n                                                                                                                                    4 malloc\n                                                                                                                                      4 malloc_zone_malloc\n                                                                                                                                        4 szone_malloc_should_clear\n                                                                                                                                          2 szone_malloc_should_clear\n                                                                                                                                          1 OSSpinLockLock\n                                                                                                                                          1 tiny_malloc_from_free_list\n                                                                                                                                  3 GetFontGroupForFrame(nsIFrame*, nsIFontMetrics**)\n                                                                                                                                    3 nsFontCache::GetMetricsFor(nsFont const&, nsIAtom*, gfxUserFontSet*, nsIFontMetrics*&)\n                                                                                                                                      2 nsThebesFontMetrics::GetLanguage(nsIAtom**)\n                                                                                                                                        1 PermanentAtomImpl::AddRef()\n                                                                                                                                        1 nsThebesFontMetrics::GetLanguage(nsIAtom**)\n                                                                                                                                      1 nsFontCache::GetMetricsFor(nsFont const&, nsIAtom*, gfxUserFontSet*, nsIFontMetrics*&)\n                                                                                                                                  1 nsTArray_base<nsTArrayDefaultAllocator>::EnsureCapacity(unsigned int, unsigned int)\n                                                                                                                                    1 moz_xrealloc\n                                                                                                                                      1 realloc\n                                                                                                                                        1 malloc_zone_realloc\n                                                                                                                                          1 szone_realloc\n                                                                                                                                            1 mag_lock_zine_for_region_trailer\n                                                                                                                            3 BuildTextRunsScanner::FlushLineBreaks(gfxTextRun*)\n                                                                                                                              3 nsLineBreaker::Reset(int*)\n                                                                                                                                3 nsLineBreaker::FlushCurrentWord()\n                                                                                                                                  3 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                    2 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                    1 GetClass(unsigned short)\n                                                                                                                            2 BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)\n                                                                                                                              2 nsTArray_base<nsTArrayDefaultAllocator>::EnsureCapacity(unsigned int, unsigned int)\n                                                                                                                                2 moz_xrealloc\n                                                                                                                                  2 realloc\n                                                                                                                                    2 malloc_zone_realloc\n                                                                                                                                      2 szone_realloc\n                                                                                                                                        1 __memcpy\n                                                                                                                                        1 szone_free\n                                                                                                                            2 nsTextFrame::EnsureTextRun(gfxContext*, nsIFrame*, nsLineList_iterator const*, unsigned int*)\n                                                                                                                            1 BuildTextRunsScanner::ContinueTextRunAcrossFrames(nsTextFrame*, nsTextFrame*)\n                                                                                                                            1 BuildTextRunsScanner::FindBoundaries(nsIFrame*, BuildTextRunsScanner::FindBoundaryState*)\n                                                                                                                            1 nsLayoutUtils::GetAsBlock(nsIFrame*)\n                                                                                                                            1 nsLineBreaker::nsLineBreaker()\n                                                                                                                          1 nsTextFrame::TrimTrailingWhiteSpace(nsIRenderingContext*)\n                                                                                                                    2 nsLineLayout::HorizontalAlignFrames(nsRect&, int)\n                                                                                                                    2 nsLineLayout::RelativePositionFrames(nsLineLayout::PerSpanData*, nsOverflowAreas&)\n                                                                                                                      2 nsIFrame::FinishAndStoreOverflow(nsOverflowAreas&, nsSize)\n                                                                                                                        2 ComputeOutlineAndEffectsRect(nsIFrame*, int*, nsRect const&, nsSize const&, int)\n                                                                                                                    1 nsBlockFrame::PlaceLine(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFloatManager::SavedState*, nsRect&, int&, int*)\n                                                                                                                    1 nsLineLayout::VerticalAlignLine()\n                                                                                                                      1 nsLineLayout::VerticalAlignFrames(nsLineLayout::PerSpanData*)\n                                                                                                                        1 nsRuleNode::GetStyleTextReset(nsStyleContext*, int)\n                                                                                                                  1 nsBlockFrame::DoReflowInlineFrames(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFlowAreaRect&, int&, nsFloatManager::SavedState*, int*, LineReflowStatus*, int)\n                                                                                                                  1 nsLineLayout::BeginLineReflow(int, int, int, int, int, int)\n                                                                                                                1 nsLineLayout::~nsLineLayout()\n                                                                                                                  1 FreeArenaList\n                                                                                                                    1 LockArena\n                                                                                                                      1 PR_Lock\n      4 0x134d37c98\n        4 0x8000000a00000001\n          3 BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)\n          1 nsTextFrame::GetNextContinuation() const\n      4 0x134d5c538\n        4 0x8000000a00000001\n          4 BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)\n      2 0x134d37a70\n        2 0x8000000a00000001\n          1 BuildTextRunsScanner::BuildTextRunForFrames(void*)\n          1 BuildTextRunsScanner::FlushFrames(int, int)\n      1 0x40000000000005a0\n        1 nsLineLayout::VerticalAlignLine()\n      1 0x841f0f\n        1 gfxTextRun::~gfxTextRun()\n          1 0x13668a600\n            1 UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)\n              1 szone_free_definite_size\n      1 0x8b4c187303078b48\n        1 BuildTextRunsScanner::BreakSink::SetCapitalization(unsigned int, unsigned int, unsigned char*)\n          1 0x11a50cdc0\n            1 0x4f00000000\n              1 nsLineBreaker::FlushCurrentWord()\n      1 NS_Alloc_P\n        1 malloc\n      1 TextRunWordCache::LookupWord(gfxTextRun*, gfxFont*, unsigned int, unsigned int, unsigned int, nsTArray<TextRunWordCache::DeferredWord, nsTArrayDefaultAllocator>*)\n        1 gfxMacFont::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int, int)\n\nTotal number in stack (recursive counted multiple, when >=5):\n        16       _pthread_start\n        16       thread_start\n        14       _pt_root\n        13       PR_WaitCondVar\n        13       __semwait_signal\n        13       _pthread_cond_wait\n        12       nsThread::ProcessNextEvent(int, int*)\n        11       NS_ProcessNextEvent_P(nsIThread*, int)\n        10       nsThread::ThreadFunc(void*)\n        7       PR_Wait\n        7       nsEventQueue::GetEvent(int, nsIRunnable**)\n        5       _CFRelease\n\nSort by top of stack, same collapsed (when >= 5):\n        __semwait_signal        23023\n        kevent        3542\n        mach_msg_trap        1771\n        select$DARWIN_EXTSN        1771\n        nsLineBox::IndexOf(nsIFrame*) const        1641\n        nsBlockFrame::DoRemoveFrame(nsIFrame*, unsigned int)        20\n        UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)        10\n        BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)        7\n        nsBlockInFlowLineIterator::nsBlockInFlowLineIterator(nsBlockFrame*, nsIFrame*, int*)        6\nSample analysis of process 245 written to file /dev/stdout", "creation_time": "2011-03-22T21:30:57Z", "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b13pre) Gecko/20110316 Firefox/4.0b13pre\nBuild Identifier: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b13pre) Gecko/20110316 Firefox/4.0b13pre\n\nWhen loading the page in the URL field firefox goes into an infinite loop, or at least takes more than a few minutes.  OS X's sample utility seems to implicate the line breaking code which makes sense as this is a testcase that stresses the line breaker pretty hard.\n\nThe page loads up a large amount of text inside a <pre style=\"word-wrap: break-word; white-space: pre-wrap;\"> loaded inside <iframe>s of various width to measure the line breaking behavior (it's actually from a test for an unrelated WebKit bug, for the curious).\n\nThis is a regression from Firefox 3.6.15 which on my box terminates in a reasonable amount of time.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Open the page\n2. Observe it successfully handle the 0px - 30px cases but goes into an infinite loop on 40px.\n\n\n\nHere's the output from OS X's sample tool (excluding non-main threads) from my MacBook pro:\n\nSampling process 245 for 3 seconds with 1 millisecond of run time between samples\nSampling completed, processing symbols...\nAnalysis of sampling firefox-bin (pid 245) every 1 millisecond\nCall graph:\n    1771 Thread_3369   DispatchQueue_1: com.apple.main-thread  (serial)\n      1756 start\n        1756 main\n          1756 XRE_main\n            1756 nsAppStartup::Run()\n              1756 nsAppShell::Run()\n                1756 -[NSApplication run]\n                  1756 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:]\n                    1756 _DPSNextEvent\n                      1756 BlockUntilNextEventMatchingListInMode\n                        1756 ReceiveNextEventCommon\n                          1756 RunCurrentEventLoopInMode\n                            1756 CFRunLoopRunSpecific\n                              1756 __CFRunLoopRun\n                                1756 __CFRunLoopDoSources0\n                                  1756 nsAppShell::ProcessGeckoEvents(void*)\n                                    1756 nsBaseAppShell::NativeEventCallback()\n                                      1756 NS_ProcessPendingEvents_P(nsIThread*, unsigned int)\n                                        1756 nsThread::ProcessNextEvent(int, int*)\n                                          1756 nsRunnableMethodImpl<void (nsDocument::*)(), true>::Run()\n                                            1756 nsDocument::DispatchContentLoadedEvents()\n                                              1756 nsDocument::DoUnblockOnload()\n                                                1756 nsLoadGroup::RemoveRequest(nsIRequest*, nsISupports*, unsigned int)\n                                                  1756 nsDocLoader::OnStopRequest(nsIRequest*, nsISupports*, unsigned int)\n                                                    1756 nsDocLoader::DocLoaderIsEmpty(int)\n                                                      1756 nsDocLoader::FireOnStateChange(nsIWebProgress*, nsIRequest*, int, unsigned int)\n                                                        1756 nsDocShell::OnStateChange(nsIWebProgress*, nsIRequest*, unsigned int, unsigned int)\n                                                          1756 nsDocShell::EndPageLoad(nsIWebProgress*, nsIChannel*, unsigned int)\n                                                            1756 DocumentViewerImpl::LoadComplete(unsigned int)\n                                                              1756 PresShell::FlushPendingNotifications(mozFlushType)\n                                                                1756 PresShell::ProcessReflowCommands(int)\n                                                                  1756 PresShell::DoReflow(nsIFrame*, int)\n                                                                    1756 ViewportFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                      1756 nsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, int, int, unsigned int, unsigned int&, nsOverflowContinuationTracker*)\n                                                                        1756 nsHTMLScrollFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                          1756 nsHTMLScrollFrame::ReflowContents(ScrollReflowState*, nsHTMLReflowMetrics const&)\n                                                                            1756 nsHTMLScrollFrame::ReflowScrolledFrame(ScrollReflowState*, int, int, nsHTMLReflowMetrics*, int)\n                                                                              1756 nsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, int, int, unsigned int, unsigned int&, nsOverflowContinuationTracker*)\n                                                                                1756 nsCanvasFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                  1756 nsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, int, int, unsigned int, unsigned int&, nsOverflowContinuationTracker*)\n                                                                                    1756 nsBlockFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                      1756 nsBlockFrame::ReflowDirtyLines(nsBlockReflowState&)\n                                                                                        1756 nsBlockFrame::ReflowLine(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                          1756 nsBlockFrame::ReflowBlockFrame(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                            1756 nsBlockReflowContext::ReflowBlock(nsRect const&, int, nsCollapsingMargin&, int, int, nsLineBox*, nsHTMLReflowState&, unsigned int&, nsBlockReflowState&)\n                                                                                              1756 nsBlockFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                                1756 nsBlockFrame::ReflowDirtyLines(nsBlockReflowState&)\n                                                                                                  1756 nsBlockFrame::ReflowLine(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                    1756 nsBlockFrame::ReflowBlockFrame(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                      1756 nsBlockReflowContext::ReflowBlock(nsRect const&, int, nsCollapsingMargin&, int, int, nsLineBox*, nsHTMLReflowState&, unsigned int&, nsBlockReflowState&)\n                                                                                                        1756 nsBlockFrame::Reflow(nsPresContext*, nsHTMLReflowMetrics&, nsHTMLReflowState const&, unsigned int&)\n                                                                                                          1756 nsBlockFrame::ReflowDirtyLines(nsBlockReflowState&)\n                                                                                                            1756 nsBlockFrame::ReflowLine(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                              1756 nsBlockFrame::ReflowInlineFrames(nsBlockReflowState&, nsLineList_iterator, int*)\n                                                                                                                1755 nsBlockFrame::DoReflowInlineFrames(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFlowAreaRect&, int&, nsFloatManager::SavedState*, int*, LineReflowStatus*, int)\n                                                                                                                  1126 nsBlockFrame::ReflowInlineFrame(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsIFrame*, LineReflowStatus*)\n                                                                                                                    1125 nsLineLayout::ReflowFrame(nsIFrame*, unsigned int&, nsHTMLReflowMetrics*, int&)\n                                                                                                                      1121 nsTextFrame::ReflowText(nsLineLayout&, int, nsIRenderingContext*, int, nsHTMLReflowMetrics&, unsigned int&)\n                                                                                                                        1118 nsTextFrame::SetLength(int, nsLineLayout*, unsigned int)\n                                                                                                                          1118 nsBlockFrame::DoRemoveFrame(nsIFrame*, unsigned int)\n                                                                                                                            1081 nsLineBox::IndexOf(nsIFrame*) const\n                                                                                                                            20 nsBlockFrame::DoRemoveFrame(nsIFrame*, unsigned int)\n                                                                                                                            14 nsContinuingTextFrame::DestroyFrom(nsIFrame*)\n                                                                                                                              11 nsTextFrame::ClearTextRun(nsTextFrame*)\n                                                                                                                                11 UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)\n                                                                                                                                  10 UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)\n                                                                                                                                  1 moz_free\n                                                                                                                              2 gfxTextRun::~gfxTextRun()\n                                                                                                                                1 nsTArray_base<nsTArrayDefaultAllocator>::ShrinkCapacity(unsigned int)\n                                                                                                                                1 szone_free_definite_size\n                                                                                                                                  1 small_free_list_add_ptr\n                                                                                                                              1 nsContinuingTextFrame::DestroyFrom(nsIFrame*)\n                                                                                                                            2 nsFrame::DestroyFrom(nsIFrame*)\n                                                                                                                              1 PresShell::NotifyDestroyingFrame(nsIFrame*)\n                                                                                                                                1 mozilla::FramePropertyTable::DeleteAllFor(nsIFrame*)\n                                                                                                                                  1 PL_DHashTableOperate\n                                                                                                                              1 nsSVGEffects::InvalidateDirectRenderingObservers(nsIFrame*)\n                                                                                                                            1 nsLineBox::Destroy(nsIPresShell*)\n                                                                                                                        1 nsINode::GetProperty(unsigned short, nsIAtom*, unsigned int*) const\n                                                                                                                          1 nsPropertyTable::GetPropertyInternal(nsPropertyOwner, nsIAtom*, int, unsigned int*)\n                                                                                                                        1 nsTextFrame::UnionTextDecorationOverflow(nsPresContext*, PropertyProvider&, nsRect*)\n                                                                                                                          1 nsLayoutUtils::GetTextShadowRectsUnion(nsRect const&, nsIFrame*, unsigned int)\n                                                                                                                        1 nsThebesFontMetrics::Release()\n                                                                                                                      4 nsLineLayout::ReflowFrame(nsIFrame*, unsigned int&, nsHTMLReflowMetrics*, int&)\n                                                                                                                    1 nsBlockFrame::ReflowInlineFrame(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsIFrame*, LineReflowStatus*)\n                                                                                                                  627 nsBlockFrame::PlaceLine(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFloatManager::SavedState*, nsRect&, int&, int*)\n                                                                                                                    621 nsLineLayout::TrimTrailingWhiteSpace()\n                                                                                                                      621 nsLineLayout::TrimTrailingWhiteSpaceIn(nsLineLayout::PerSpanData*, int*)\n                                                                                                                        621 nsTextFrame::TrimTrailingWhiteSpace(nsIRenderingContext*)\n                                                                                                                          620 nsTextFrame::EnsureTextRun(gfxContext*, nsIFrame*, nsLineList_iterator const*, unsigned int*)\n                                                                                                                            567 nsBlockInFlowLineIterator::nsBlockInFlowLineIterator(nsBlockFrame*, nsIFrame*, int*)\n                                                                                                                              560 nsLineBox::IndexOf(nsIFrame*) const\n                                                                                                                              6 nsBlockInFlowLineIterator::nsBlockInFlowLineIterator(nsBlockFrame*, nsIFrame*, int*)\n                                                                                                                              1 nsLayoutUtils::FindChildContainingDescendant(nsIFrame*, nsIFrame*)\n                                                                                                                            42 BuildTextRunsScanner::ScanFrame(nsIFrame*)\n                                                                                                                              42 BuildTextRunsScanner::FlushFrames(int, int)\n                                                                                                                                42 BuildTextRunsScanner::BuildTextRunForFrames(void*)\n                                                                                                                                  28 MakeTextRun(unsigned char const*, unsigned int, gfxFontGroup*, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                    28 TextRunWordCache::MakeTextRun(unsigned char const*, unsigned int, gfxFontGroup*, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                      18 gfxFontGroup::MakeTextRun(unsigned char const*, unsigned int, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                        18 gfxFontGroup::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int)\n                                                                                                                                          15 gfxFontGroup::InitScriptRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, unsigned int, int)\n                                                                                                                                            15 gfxFont::SplitAndInitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int)\n                                                                                                                                              15 gfxMacFont::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int, int)\n                                                                                                                                                15 gfxCoreTextShaper::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int)\n                                                                                                                                                  4 CTLineCreateWithAttributedString\n                                                                                                                                                    4 TTypesetterAttrString::Initialize()\n                                                                                                                                                      2 TGlyphEncoder::EncodeChars(CFRange, __CFDictionary const*)\n                                                                                                                                                        1 TRun::TRun(TCFBase<TGlyphStorage>*, CFRange, __CFDictionary const*)\n                                                                                                                                                          1 TAttributes::TAttributes(__CFDictionary const*)\n                                                                                                                                                            1 TAttributes::ParseAttributes(__CFDictionary const*, void const*&)\n                                                                                                                                                              1 CFDictionaryApplyFunction\n                                                                                                                                                        1 _CFRuntimeCreateInstance\n                                                                                                                                                          1 malloc_zone_malloc\n                                                                                                                                                            1 szone_malloc_should_clear\n                                                                                                                                                              1 tiny_malloc_from_free_list\n                                                                                                                                                      2 TTypesetter::FinishEncoding(TLine&, unsigned char) const\n                                                                                                                                                        2 TShapingEngine::ShapeGlyphs(TLine&, TCharStream const&)\n                                                                                                                                                          2 TAATMorphTable::ShapeGlyphs(bool&, bool&)\n                                                                                                                                                            2 TAATMorphSubtableMorx::SetTablePtr(void const*)\n                                                                                                                                                  4 _CFRelease\n                                                                                                                                                    1 TLine::~TLine()\n                                                                                                                                                      1 _CFRelease\n                                                                                                                                                        1 __CFArrayReleaseValues\n                                                                                                                                                          1 _CFRelease\n                                                                                                                                                            1 _CFRelease\n                                                                                                                                                              1 __CFBasicHashDrain\n                                                                                                                                                    1 _CFRelease\n                                                                                                                                                      1 __CFRunArrayDeallocate\n                                                                                                                                                    1 __spin_lock\n                                                                                                                                                    1 object_getClass\n                                                                                                                                                  3 CFAttributedStringCreate\n                                                                                                                                                    3 CFDictionaryCreateMutableCopy\n                                                                                                                                                      2 CFDictionaryCreateMutableCopy\n                                                                                                                                                      1 CFBasicHashCreateCopy\n                                                                                                                                                        1 objc_assign_strongCast\n                                                                                                                                                  2 CFStringCreateWithCharactersNoCopy\n                                                                                                                                                    2 __CFStringCreateImmutableFunnel3\n                                                                                                                                                      1 __CFStringCreateImmutableFunnel3\n                                                                                                                                                      1 pthread_getspecific\n                                                                                                                                                  1 CTLineGetGlyphRuns\n                                                                                                                                                  1 gfxCoreTextShaper::SetGlyphsFromRun(gfxTextRun*, __CTRun const*, int, int, int)\n                                                                                                                                                    1 TLine::GetPositionsForRun(TRun const*) const\n                                                                                                                                                      1 TLine::CachePositions() const\n                                                                                                                                                        1 TRun::CacheGlyphPositions(double&, double&, CGPoint*) const\n                                                                                                                                          3 gfxFontGroup::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int)\n                                                                                                                                      4 TextRunWordCache::MakeTextRun(unsigned char const*, unsigned int, gfxFontGroup*, gfxTextRunFactory::Parameters const*, unsigned int)\n                                                                                                                                      3 TextRunWordCache::LookupWord(gfxTextRun*, gfxFont*, unsigned int, unsigned int, unsigned int, nsTArray<TextRunWordCache::DeferredWord, nsTArrayDefaultAllocator>*)\n                                                                                                                                        3 gfxTextRun::CopyGlyphDataFrom(gfxTextRun*, unsigned int, unsigned int, unsigned int)\n                                                                                                                                      2 gfxTextRun::Create(gfxTextRunFactory::Parameters const*, void const*, unsigned int, gfxFontGroup*, unsigned int)\n                                                                                                                                        2 gfxTextRun::AllocateStorage(void const*&, unsigned int, unsigned int)\n                                                                                                                                          1 malloc\n                                                                                                                                            1 malloc_zone_malloc\n                                                                                                                                              1 szone_malloc_should_clear\n                                                                                                                                                1 tiny_malloc_from_free_list\n                                                                                                                                          1 memcpy\n                                                                                                                                      1 gfxTextRun::~gfxTextRun()\n                                                                                                                                        1 free\n                                                                                                                                          1 szone_size\n                                                                                                                                  6 BuildTextRunsScanner::SetupBreakSinksForTextRun(gfxTextRun*, int, int)\n                                                                                                                                    5 nsLineBreaker::AppendText(nsIAtom*, unsigned char const*, unsigned int, unsigned int, nsILineBreakSink*)\n                                                                                                                                      3 nsLineBreaker::FlushCurrentWord()\n                                                                                                                                        3 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                          2 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                          1 GetClass(unsigned short)\n                                                                                                                                      2 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned char const*, unsigned int, unsigned char*)\n                                                                                                                                    1 BuildTextRunsScanner::SetupBreakSinksForTextRun(gfxTextRun*, int, int)\n                                                                                                                                  4 NS_Alloc_P\n                                                                                                                                    4 malloc\n                                                                                                                                      4 malloc_zone_malloc\n                                                                                                                                        4 szone_malloc_should_clear\n                                                                                                                                          2 szone_malloc_should_clear\n                                                                                                                                          1 OSSpinLockLock\n                                                                                                                                          1 tiny_malloc_from_free_list\n                                                                                                                                  3 GetFontGroupForFrame(nsIFrame*, nsIFontMetrics**)\n                                                                                                                                    3 nsFontCache::GetMetricsFor(nsFont const&, nsIAtom*, gfxUserFontSet*, nsIFontMetrics*&)\n                                                                                                                                      2 nsThebesFontMetrics::GetLanguage(nsIAtom**)\n                                                                                                                                        1 PermanentAtomImpl::AddRef()\n                                                                                                                                        1 nsThebesFontMetrics::GetLanguage(nsIAtom**)\n                                                                                                                                      1 nsFontCache::GetMetricsFor(nsFont const&, nsIAtom*, gfxUserFontSet*, nsIFontMetrics*&)\n                                                                                                                                  1 nsTArray_base<nsTArrayDefaultAllocator>::EnsureCapacity(unsigned int, unsigned int)\n                                                                                                                                    1 moz_xrealloc\n                                                                                                                                      1 realloc\n                                                                                                                                        1 malloc_zone_realloc\n                                                                                                                                          1 szone_realloc\n                                                                                                                                            1 mag_lock_zine_for_region_trailer\n                                                                                                                            3 BuildTextRunsScanner::FlushLineBreaks(gfxTextRun*)\n                                                                                                                              3 nsLineBreaker::Reset(int*)\n                                                                                                                                3 nsLineBreaker::FlushCurrentWord()\n                                                                                                                                  3 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                    2 nsJISx4051LineBreaker::GetJISx4051Breaks(unsigned short const*, unsigned int, unsigned char*)\n                                                                                                                                    1 GetClass(unsigned short)\n                                                                                                                            2 BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)\n                                                                                                                              2 nsTArray_base<nsTArrayDefaultAllocator>::EnsureCapacity(unsigned int, unsigned int)\n                                                                                                                                2 moz_xrealloc\n                                                                                                                                  2 realloc\n                                                                                                                                    2 malloc_zone_realloc\n                                                                                                                                      2 szone_realloc\n                                                                                                                                        1 __memcpy\n                                                                                                                                        1 szone_free\n                                                                                                                            2 nsTextFrame::EnsureTextRun(gfxContext*, nsIFrame*, nsLineList_iterator const*, unsigned int*)\n                                                                                                                            1 BuildTextRunsScanner::ContinueTextRunAcrossFrames(nsTextFrame*, nsTextFrame*)\n                                                                                                                            1 BuildTextRunsScanner::FindBoundaries(nsIFrame*, BuildTextRunsScanner::FindBoundaryState*)\n                                                                                                                            1 nsLayoutUtils::GetAsBlock(nsIFrame*)\n                                                                                                                            1 nsLineBreaker::nsLineBreaker()\n                                                                                                                          1 nsTextFrame::TrimTrailingWhiteSpace(nsIRenderingContext*)\n                                                                                                                    2 nsLineLayout::HorizontalAlignFrames(nsRect&, int)\n                                                                                                                    2 nsLineLayout::RelativePositionFrames(nsLineLayout::PerSpanData*, nsOverflowAreas&)\n                                                                                                                      2 nsIFrame::FinishAndStoreOverflow(nsOverflowAreas&, nsSize)\n                                                                                                                        2 ComputeOutlineAndEffectsRect(nsIFrame*, int*, nsRect const&, nsSize const&, int)\n                                                                                                                    1 nsBlockFrame::PlaceLine(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFloatManager::SavedState*, nsRect&, int&, int*)\n                                                                                                                    1 nsLineLayout::VerticalAlignLine()\n                                                                                                                      1 nsLineLayout::VerticalAlignFrames(nsLineLayout::PerSpanData*)\n                                                                                                                        1 nsRuleNode::GetStyleTextReset(nsStyleContext*, int)\n                                                                                                                  1 nsBlockFrame::DoReflowInlineFrames(nsBlockReflowState&, nsLineLayout&, nsLineList_iterator, nsFlowAreaRect&, int&, nsFloatManager::SavedState*, int*, LineReflowStatus*, int)\n                                                                                                                  1 nsLineLayout::BeginLineReflow(int, int, int, int, int, int)\n                                                                                                                1 nsLineLayout::~nsLineLayout()\n                                                                                                                  1 FreeArenaList\n                                                                                                                    1 LockArena\n                                                                                                                      1 PR_Lock\n      4 0x134d37c98\n        4 0x8000000a00000001\n          3 BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)\n          1 nsTextFrame::GetNextContinuation() const\n      4 0x134d5c538\n        4 0x8000000a00000001\n          4 BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)\n      2 0x134d37a70\n        2 0x8000000a00000001\n          1 BuildTextRunsScanner::BuildTextRunForFrames(void*)\n          1 BuildTextRunsScanner::FlushFrames(int, int)\n      1 0x40000000000005a0\n        1 nsLineLayout::VerticalAlignLine()\n      1 0x841f0f\n        1 gfxTextRun::~gfxTextRun()\n          1 0x13668a600\n            1 UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)\n              1 szone_free_definite_size\n      1 0x8b4c187303078b48\n        1 BuildTextRunsScanner::BreakSink::SetCapitalization(unsigned int, unsigned int, unsigned char*)\n          1 0x11a50cdc0\n            1 0x4f00000000\n              1 nsLineBreaker::FlushCurrentWord()\n      1 NS_Alloc_P\n        1 malloc\n      1 TextRunWordCache::LookupWord(gfxTextRun*, gfxFont*, unsigned int, unsigned int, unsigned int, nsTArray<TextRunWordCache::DeferredWord, nsTArrayDefaultAllocator>*)\n        1 gfxMacFont::InitTextRun(gfxContext*, gfxTextRun*, unsigned short const*, unsigned int, unsigned int, int, int)\n\nTotal number in stack (recursive counted multiple, when >=5):\n        16       _pthread_start\n        16       thread_start\n        14       _pt_root\n        13       PR_WaitCondVar\n        13       __semwait_signal\n        13       _pthread_cond_wait\n        12       nsThread::ProcessNextEvent(int, int*)\n        11       NS_ProcessNextEvent_P(nsIThread*, int)\n        10       nsThread::ThreadFunc(void*)\n        7       PR_Wait\n        7       nsEventQueue::GetEvent(int, nsIRunnable**)\n        5       _CFRelease\n\nSort by top of stack, same collapsed (when >= 5):\n        __semwait_signal        23023\n        kevent        3542\n        mach_msg_trap        1771\n        select$DARWIN_EXTSN        1771\n        nsLineBox::IndexOf(nsIFrame*) const        1641\n        nsBlockFrame::DoRemoveFrame(nsIFrame*, unsigned int)        20\n        UnhookTextRunFromFrames(gfxTextRun*, nsTextFrame*)        10\n        BuildTextRunsScanner::AccumulateRunInfo(nsTextFrame*)        7\n        nsBlockInFlowLineIterator::nsBlockInFlowLineIterator(nsBlockFrame*, nsIFrame*, int*)        6\nSample analysis of process 245 written to file /dev/stdout", "id": 5360955, "bug_id": 643918, "count": 0, "tags": [], "creator": "jamesr@chromium.org", "author": "jamesr@chromium.org", "is_private": false, "time": "2011-03-22T21:30:57Z", "attachment_id": null}, {"attachment_id": null, "time": "2011-03-23T18:00:20Z", "is_private": false, "author": "bzbarsky@mit.edu", "bug_id": 643918, "count": 1, "creator": "bzbarsky@mit.edu", "tags": [], "raw_text": "The 60px width is the one I see take a long time here (order of a minute); everything else is reasonably quick.\n\nThere seem to be two hotspots.  The first is nsLineBox::IndexOf called from nsBlockFrame::DoRemoveFrame called from nsTextFrame::SetLength.  This is code that was added in bug 597627.  But if I comment this new code out, we actually get _slower_, with all the time set in SetLength.\n\nThe second hotspot is nsLineBox::IndexOf called from nsBlockInFlowLineIterator::nsBlockInFlowLineIterator, called from EnsureTextRun, called from TrimTrailingWhiteSpace.\n\nroc, it sounds like we're ending up with at ton of text frames all on one line for some reason.  Is that expected here?", "id": 5363084, "text": "The 60px width is the one I see take a long time here (order of a minute); everything else is reasonably quick.\n\nThere seem to be two hotspots.  The first is nsLineBox::IndexOf called from nsBlockFrame::DoRemoveFrame called from nsTextFrame::SetLength.  This is code that was added in bug 597627.  But if I comment this new code out, we actually get _slower_, with all the time set in SetLength.\n\nThe second hotspot is nsLineBox::IndexOf called from nsBlockInFlowLineIterator::nsBlockInFlowLineIterator, called from EnsureTextRun, called from TrimTrailingWhiteSpace.\n\nroc, it sounds like we're ending up with at ton of text frames all on one line for some reason.  Is that expected here?", "creation_time": "2011-03-23T18:00:20Z"}, {"attachment_id": null, "author": "bzbarsky@mit.edu", "is_private": false, "creation_time": "2011-03-23T18:01:20Z", "text": "Oh, and when I say \"hotspot\", one of those is 45.8% of the time in my profile and the other is 46.7%.", "id": 5363088, "raw_text": "Oh, and when I say \"hotspot\", one of those is 45.8% of the time in my profile and the other is 46.7%.", "creator": "bzbarsky@mit.edu", "time": "2011-03-23T18:01:20Z", "tags": [], "count": 2, "bug_id": 643918}, {"author": "bzbarsky@mit.edu", "tags": [], "count": 3, "creator": "bzbarsky@mit.edu", "bug_id": 643918, "id": 5363098, "raw_text": "", "creation_time": "2011-03-23T18:03:48Z", "text": "Created attachment 521242\nData file", "attachment_id": 521242, "time": "2011-03-23T18:03:48Z", "is_private": false}, {"author": "bzbarsky@mit.edu", "count": 4, "creator": "bzbarsky@mit.edu", "tags": [], "bug_id": 643918, "creation_time": "2011-03-23T18:05:27Z", "text": "Created attachment 521244\nJS for testcase", "id": 5363107, "raw_text": "", "attachment_id": 521244, "time": "2011-03-23T18:05:27Z", "is_private": false}, {"author": "bzbarsky@mit.edu", "raw_text": "", "id": 5363117, "text": "Created attachment 521246\nTestcase", "creation_time": "2011-03-23T18:07:03Z", "bug_id": 643918, "tags": [], "creator": "bzbarsky@mit.edu", "count": 5, "attachment_id": 521246, "is_private": false, "time": "2011-03-23T18:07:03Z"}, {"id": 5363164, "raw_text": "OK, if I back out the entire patch from bug 597627, not just the frame destruction bit, then things are faster.", "creation_time": "2011-03-23T18:19:00Z", "text": "OK, if I back out the entire patch from bug 597627, not just the frame destruction bit, then things are faster.", "count": 6, "tags": [], "creator": "bzbarsky@mit.edu", "bug_id": 643918, "author": "bzbarsky@mit.edu", "is_private": false, "time": "2011-03-23T18:19:00Z", "attachment_id": null}, {"author": "bzbarsky@mit.edu", "bug_id": 643918, "creator": "bzbarsky@mit.edu", "count": 7, "tags": [], "text": "Mats, can you take a look at this?", "creation_time": "2011-03-23T18:20:00Z", "raw_text": "Mats, can you take a look at this?", "id": 5363169, "attachment_id": null, "time": "2011-03-23T18:20:00Z", "is_private": false}, {"author": "jamesr@chromium.org", "attachment_id": null, "bug_id": 643918, "tags": [], "count": 8, "creator": "jamesr@chromium.org", "time": "2011-03-23T18:47:51Z", "text": "It did eventually terminate on my Mac:\n\ntime: 1251 ms width: 0px height: 2911048\ntime: 811 ms width: 10px height: 2911048\ntime: 1688 ms width: 20px height: 2911048\ntime: 1652 ms width: 30px height: 2911048\ntime: 504562 ms width: 40px height: 1016624\ntime: 195099 ms width: 50px height: 777616\ntime: 74397 ms width: 60px height: 640038\ntime: 11977 ms width: 70px height: 545510\ntime: 13294 ms width: 80px height: 418278\ntime: 8989 ms width: 90px height: 375536\ntime: 5912 ms width: 100px height: 343042\ntime: 3265 ms width: 110px height: 291774\ntime: 2406 ms width: 120px height: 271698\ntime: 1957 ms width: 130px height: 253960\ntime: 1563 ms width: 140px height: 238616\ntime: 997 ms width: 150px height: 213780\ntime: 934 ms width: 160px height: 202272\ntime: 746 ms width: 170px height: 193284\ntime: 571 ms width: 180px height: 175980\ntime: 518 ms width: 190px height: 168490\n\nso at 40px it took about 8 minutes 20 seconds.  I suspect that the exact time depends on the line breaking opportunities which depend on the font metrics for the given system.", "creation_time": "2011-03-23T18:47:51Z", "is_private": false, "raw_text": "It did eventually terminate on my Mac:\n\ntime: 1251 ms width: 0px height: 2911048\ntime: 811 ms width: 10px height: 2911048\ntime: 1688 ms width: 20px height: 2911048\ntime: 1652 ms width: 30px height: 2911048\ntime: 504562 ms width: 40px height: 1016624\ntime: 195099 ms width: 50px height: 777616\ntime: 74397 ms width: 60px height: 640038\ntime: 11977 ms width: 70px height: 545510\ntime: 13294 ms width: 80px height: 418278\ntime: 8989 ms width: 90px height: 375536\ntime: 5912 ms width: 100px height: 343042\ntime: 3265 ms width: 110px height: 291774\ntime: 2406 ms width: 120px height: 271698\ntime: 1957 ms width: 130px height: 253960\ntime: 1563 ms width: 140px height: 238616\ntime: 997 ms width: 150px height: 213780\ntime: 934 ms width: 160px height: 202272\ntime: 746 ms width: 170px height: 193284\ntime: 571 ms width: 180px height: 175980\ntime: 518 ms width: 190px height: 168490\n\nso at 40px it took about 8 minutes 20 seconds.  I suspect that the exact time depends on the line breaking opportunities which depend on the font metrics for the given system.", "id": 5363302}, {"attachment_id": null, "author": "rjesup@jesup.org", "creation_time": "2011-06-10T20:51:21Z", "is_private": false, "text": "Results from an Athlon X2 2.8GHz Ubuntu 8.04 over a remote X connection.  Jprof to follow.  Recent Trunk build., --enable-debug, --enable-jprof, --enable-optimize=\"-g -O3 -fno-omit-frame-pointer\"\n\ntime: 4319 ms width: 0px height: 3118980\ntime: 3847 ms width: 10px height: 3118980\ntime: 4145 ms width: 20px height: 3118980\ntime: 94121 ms width: 30px height: 1597200\ntime: 9811 ms width: 40px height: 1089615\ntime: 29663 ms width: 50px height: 833745\ntime: 8120 ms width: 60px height: 585015\ntime: 4295 ms width: 70px height: 507420\ntime: 4216 ms width: 80px height: 402750\ntime: 7181 ms width: 90px height: 368070\ntime: 1998 ms width: 100px height: 313005\ntime: 1832 ms width: 110px height: 291480\ntime: 4508 ms width: 120px height: 272370\ntime: 1060 ms width: 130px height: 241770\ntime: 1390 ms width: 140px height: 229170\ntime: 1281 ms width: 150px height: 207240\ntime: 1292 ms width: 160px height: 197295\ntime: 1417 ms width: 170px height: 180750\ntime: 1622 ms width: 180px height: 173955\ntime: 1253 ms width: 190px height: 167130", "id": 5525864, "raw_text": "Results from an Athlon X2 2.8GHz Ubuntu 8.04 over a remote X connection.  Jprof to follow.  Recent Trunk build., --enable-debug, --enable-jprof, --enable-optimize=\"-g -O3 -fno-omit-frame-pointer\"\n\ntime: 4319 ms width: 0px height: 3118980\ntime: 3847 ms width: 10px height: 3118980\ntime: 4145 ms width: 20px height: 3118980\ntime: 94121 ms width: 30px height: 1597200\ntime: 9811 ms width: 40px height: 1089615\ntime: 29663 ms width: 50px height: 833745\ntime: 8120 ms width: 60px height: 585015\ntime: 4295 ms width: 70px height: 507420\ntime: 4216 ms width: 80px height: 402750\ntime: 7181 ms width: 90px height: 368070\ntime: 1998 ms width: 100px height: 313005\ntime: 1832 ms width: 110px height: 291480\ntime: 4508 ms width: 120px height: 272370\ntime: 1060 ms width: 130px height: 241770\ntime: 1390 ms width: 140px height: 229170\ntime: 1281 ms width: 150px height: 207240\ntime: 1292 ms width: 160px height: 197295\ntime: 1417 ms width: 170px height: 180750\ntime: 1622 ms width: 180px height: 173955\ntime: 1253 ms width: 190px height: 167130", "creator": "rjesup@jesup.org", "tags": [], "count": 9, "time": "2011-06-10T20:51:21Z", "bug_id": 643918}, {"is_private": false, "time": "2011-06-10T22:01:56Z", "attachment_id": 538612, "id": 5526005, "raw_text": "Major hotspot (54.7% direct hits) is consistent with bz's profile (nsLineBox::IndexOf(nsIFrame*) const).\n\n37.4% is in BuildTextRuns(), called via TrimTrailingWhiteSpace() (hmmm) - 20% of the 37.4% ends up in IndexOf() above; the rest comes through SetLength() per bz's results.", "creation_time": "2011-06-10T22:01:56Z", "text": "Created attachment 538612\njprof for my Ubuntu test run\n\nMajor hotspot (54.7% direct hits) is consistent with bz's profile (nsLineBox::IndexOf(nsIFrame*) const).\n\n37.4% is in BuildTextRuns(), called via TrimTrailingWhiteSpace() (hmmm) - 20% of the 37.4% ends up in IndexOf() above; the rest comes through SetLength() per bz's results.", "creator": "rjesup@jesup.org", "tags": [], "count": 10, "bug_id": 643918, "author": "rjesup@jesup.org"}, {"time": "2011-06-11T00:19:01Z", "is_private": false, "attachment_id": null, "creator": "bzbarsky@mit.edu", "tags": [], "count": 11, "bug_id": 643918, "creation_time": "2011-06-11T00:19:01Z", "text": ">  --enable-debug\n\nIt's really pretty pointless to do performance measurements in debug builds... For one thing, various part of layout have different algorithmic complexity in debug and non-debug.  Maybe you'll get the same results as an opt build.  But maybe you won't.", "id": 5526294, "raw_text": ">  --enable-debug\n\nIt's really pretty pointless to do performance measurements in debug builds... For one thing, various part of layout have different algorithmic complexity in debug and non-debug.  Maybe you'll get the same results as an opt build.  But maybe you won't.", "author": "bzbarsky@mit.edu"}, {"attachment_id": null, "time": "2011-06-11T06:02:31Z", "is_private": false, "author": "rjesup@jesup.org", "creator": "rjesup@jesup.org", "count": 12, "tags": [], "bug_id": 643918, "creation_time": "2011-06-11T06:02:31Z", "text": "debug was what I had and I figured it would be a high signal; my opt build is ready now and is getting similar results - uniformly faster, but no real shift in the peaks.  Output (with a more idle system than the last measurement)\n\ntime: 3901 ms width: 0px height: 3118980\ntime: 2990 ms width: 10px height: 3118980\ntime: 2704 ms width: 20px height: 3118980\ntime: 87352 ms width: 30px height: 1597200\ntime: 8564 ms width: 40px height: 1089615\ntime: 22544 ms width: 50px height: 833745\ntime: 2312 ms width: 60px height: 585030\ntime: 3574 ms width: 70px height: 507420\ntime: 2845 ms width: 80px height: 402750\ntime: 1645 ms width: 90px height: 368070\ntime: 2070 ms width: 100px height: 313005\ntime: 1032 ms width: 110px height: 291480\ntime: 1793 ms width: 120px height: 272370\ntime: 1030 ms width: 130px height: 241770\ntime: 906 ms width: 140px height: 229170\ntime: 961 ms width: 150px height: 207240\ntime: 1169 ms width: 160px height: 197280\ntime: 1145 ms width: 170px height: 180750\ntime: 767 ms width: 180px height: 173955\ntime: 1011 ms width: 190px height: 167145", "id": 5526477, "raw_text": "debug was what I had and I figured it would be a high signal; my opt build is ready now and is getting similar results - uniformly faster, but no real shift in the peaks.  Output (with a more idle system than the last measurement)\n\ntime: 3901 ms width: 0px height: 3118980\ntime: 2990 ms width: 10px height: 3118980\ntime: 2704 ms width: 20px height: 3118980\ntime: 87352 ms width: 30px height: 1597200\ntime: 8564 ms width: 40px height: 1089615\ntime: 22544 ms width: 50px height: 833745\ntime: 2312 ms width: 60px height: 585030\ntime: 3574 ms width: 70px height: 507420\ntime: 2845 ms width: 80px height: 402750\ntime: 1645 ms width: 90px height: 368070\ntime: 2070 ms width: 100px height: 313005\ntime: 1032 ms width: 110px height: 291480\ntime: 1793 ms width: 120px height: 272370\ntime: 1030 ms width: 130px height: 241770\ntime: 906 ms width: 140px height: 229170\ntime: 961 ms width: 150px height: 207240\ntime: 1169 ms width: 160px height: 197280\ntime: 1145 ms width: 170px height: 180750\ntime: 767 ms width: 180px height: 173955\ntime: 1011 ms width: 190px height: 167145"}, {"count": 13, "creator": "rjesup@jesup.org", "tags": [], "time": "2011-06-11T06:10:43Z", "bug_id": 643918, "is_private": false, "creation_time": "2011-06-11T06:10:43Z", "text": "Created attachment 538666\njprof (disable-debug)\n\nJprof with --disable-debug (I've tweaked my objdir setup to reduce the cost in time (1hr+) of switching back and forth).\n\nSimilar results, with a higher peak (64% vs 57%) for IndexOf() - but the number of direct hits is almost the same, and the ratios for coming in via SetLength vs nsBlockInFlowLineIterator() are basically the same.  More time is being spent elsewhere in the debug version, but that didn't affect these routines noticably or the number of times these routines are called (or so it appears).", "id": 5526478, "raw_text": "Jprof with --disable-debug (I've tweaked my objdir setup to reduce the cost in time (1hr+) of switching back and forth).\n\nSimilar results, with a higher peak (64% vs 57%) for IndexOf() - but the number of direct hits is almost the same, and the ratios for coming in via SetLength vs nsBlockInFlowLineIterator() are basically the same.  More time is being spent elsewhere in the debug version, but that didn't affect these routines noticably or the number of times these routines are called (or so it appears).", "attachment_id": 538666, "author": "rjesup@jesup.org"}, {"attachment_id": null, "time": "2017-09-20T16:50:42Z", "is_private": false, "author": "rjesup@jesup.org", "bug_id": 643918, "creator": "rjesup@jesup.org", "count": 14, "tags": [], "raw_text": "FYI, the testcase (which depends on google maps API, etc) no longer works.  The issue probably is still valid", "id": 12686471, "text": "FYI, the testcase (which depends on google maps API, etc) no longer works.  The issue probably is still valid", "creation_time": "2017-09-20T16:50:42Z"}]}}, "comments": {}}