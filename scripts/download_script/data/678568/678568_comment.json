{"bugs": {"678568": {"comments": [{"raw_text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:6.0) Gecko/20100101 Firefox/6.0\nBuild ID: 20110804030150\n\nSteps to reproduce:\n\nFor quite some time several frameworks, ExtJS for example, have used the html and body tags as a place to add classes so that they can target specific browsers or browser capabilities in css rules. For example a class \"x-ie6\" will be added in IE6 to the body element. You can see examples in the ext-all.css file[1]. And there are now a bunch of sites using Modernizr (and look at what they do to the html element!)[2].\n\nTaking advantage of these classes on html and body makes it easy to target \"fixes\" or \"features\" for certain browsers. Typical would be using CSS3 to style a button with gradients and rounded borders and drop shadows, or in old versions of IE using image spriting instead.\n\nCompanies that use Sencha's ExtJS, for example, could reap some reward if Sencha changed its CSS to have:\n\nbody.x-ie6 .buttonClsExample {}\n\ninstead of \n\n.x-ie6 .buttonClsExample\n\nAnd the browser could remove all the body.x-ie6 * rules. According to the Mozilla guide on efficient CSS[3], this would be a real gain.\n\n[1] http://dev.sencha.com/deploy/ext-4.0.2a/resources/css/ext-all.css\n[2] http://www.modernizr.com/\n[3] https://developer.mozilla.org/en/Writing_Efficient_CSS", "attachment_id": null, "id": 5650539, "count": 0, "creator": "sroussey@gmail.com", "is_private": false, "bug_id": 678568, "tags": [], "time": "2011-08-12T18:41:06Z", "text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:6.0) Gecko/20100101 Firefox/6.0\nBuild ID: 20110804030150\n\nSteps to reproduce:\n\nFor quite some time several frameworks, ExtJS for example, have used the html and body tags as a place to add classes so that they can target specific browsers or browser capabilities in css rules. For example a class \"x-ie6\" will be added in IE6 to the body element. You can see examples in the ext-all.css file[1]. And there are now a bunch of sites using Modernizr (and look at what they do to the html element!)[2].\n\nTaking advantage of these classes on html and body makes it easy to target \"fixes\" or \"features\" for certain browsers. Typical would be using CSS3 to style a button with gradients and rounded borders and drop shadows, or in old versions of IE using image spriting instead.\n\nCompanies that use Sencha's ExtJS, for example, could reap some reward if Sencha changed its CSS to have:\n\nbody.x-ie6 .buttonClsExample {}\n\ninstead of \n\n.x-ie6 .buttonClsExample\n\nAnd the browser could remove all the body.x-ie6 * rules. According to the Mozilla guide on efficient CSS[3], this would be a real gain.\n\n[1] http://dev.sencha.com/deploy/ext-4.0.2a/resources/css/ext-all.css\n[2] http://www.modernizr.com/\n[3] https://developer.mozilla.org/en/Writing_Efficient_CSS", "author": "sroussey@gmail.com", "creation_time": "2011-08-12T18:41:06Z"}, {"is_private": false, "creator": "MatsPalmgren_bugz@use.startmail.com", "creation_time": "2011-08-13T21:23:36Z", "author": "MatsPalmgren_bugz@use.startmail.com", "text": "It's nor clear to me what problem you see in the Firefox style system.\nWhat is it that you want us to fix?", "tags": [], "time": "2011-08-13T21:23:36Z", "attachment_id": null, "raw_text": "It's nor clear to me what problem you see in the Firefox style system.\nWhat is it that you want us to fix?", "id": 5652105, "count": 1, "bug_id": 678568}, {"id": 5652192, "attachment_id": null, "raw_text": "It's clear enough to me -- basically, to look at the left edge of a selector, see if it's for the body or html element, and if it is, either (a) jump to matching the left edge once we get it out of the rule hash and then proceed with normal matching or (b) do something even stronger so that we won't even get it out of the rule hash.", "author": "dbaron@dbaron.org", "creation_time": "2011-08-13T23:24:46Z", "time": "2011-08-13T23:24:46Z", "bug_id": 678568, "tags": [], "text": "It's clear enough to me -- basically, to look at the left edge of a selector, see if it's for the body or html element, and if it is, either (a) jump to matching the left edge once we get it out of the rule hash and then proceed with normal matching or (b) do something even stronger so that we won't even get it out of the rule hash.", "creator": "dbaron@dbaron.org", "is_private": false, "count": 2}, {"raw_text": "Right... Firefox can use this information to completely disregard CSS rules that start (on the left) with them. That way when processing the rules (which get processed from the right) they don't have to go all the way up the chain and realize that the rule doesn't apply.\n\nIt is a short-circuit for the special cases of html and body since there is always one and only one of each. \n\nWebmasters can then make special rules for that apply to just those (and in fact, they already do as the Modernizr and ExtJS cases prove as examples). There are two optimizations:\n\n1: Firefox need not process a ton of rules that might not ever target it. For example, often times there might be:\n\nbody.x-ie6 .x-btn button { ... } and <body class=\"x-gecko\">...\n\nAnd it all these rules will never be used as the x-ie6 class won't be added to the body for any version of Firefox, so it would be great if Firefox would ignore them altogether. Erase the body.x-ie6 * rules.\n\n2: If it is a match (that is the class exists), then add it to the rule set but prune the lefthand (body and/or html) rule(s):\n\nbody.x-gecko .x-btn button { ... } and <body class=\"x-gecko\">...\n\nIn this case it is always a match, so why bother checking up to the body (unless the body changes classes, in which case reprocess then)? So this case should then end up with rules in the system like:\n\n.x-btn button { ... }\n\n\nNote that body and html are both special cases and might be used together:\n\n<html class=\"x-quirks\"><body class=\"x-ie6\">...\n\nIn which case, both html and body and their combination should be in this short-circuit system.\n\nDavid, is that what you said in a more concise way?", "attachment_id": null, "id": 5658163, "creator": "sroussey@gmail.com", "is_private": false, "tags": [], "time": "2011-08-16T21:47:58Z", "text": "Right... Firefox can use this information to completely disregard CSS rules that start (on the left) with them. That way when processing the rules (which get processed from the right) they don't have to go all the way up the chain and realize that the rule doesn't apply.\n\nIt is a short-circuit for the special cases of html and body since there is always one and only one of each. \n\nWebmasters can then make special rules for that apply to just those (and in fact, they already do as the Modernizr and ExtJS cases prove as examples). There are two optimizations:\n\n1: Firefox need not process a ton of rules that might not ever target it. For example, often times there might be:\n\nbody.x-ie6 .x-btn button { ... } and <body class=\"x-gecko\">...\n\nAnd it all these rules will never be used as the x-ie6 class won't be added to the body for any version of Firefox, so it would be great if Firefox would ignore them altogether. Erase the body.x-ie6 * rules.\n\n2: If it is a match (that is the class exists), then add it to the rule set but prune the lefthand (body and/or html) rule(s):\n\nbody.x-gecko .x-btn button { ... } and <body class=\"x-gecko\">...\n\nIn this case it is always a match, so why bother checking up to the body (unless the body changes classes, in which case reprocess then)? So this case should then end up with rules in the system like:\n\n.x-btn button { ... }\n\n\nNote that body and html are both special cases and might be used together:\n\n<html class=\"x-quirks\"><body class=\"x-ie6\">...\n\nIn which case, both html and body and their combination should be in this short-circuit system.\n\nDavid, is that what you said in a more concise way?", "author": "sroussey@gmail.com", "creation_time": "2011-08-16T21:47:58Z", "count": 3, "bug_id": 678568}, {"is_private": false, "creator": "sroussey@gmail.com", "count": 4, "creation_time": "2011-09-10T03:16:08Z", "author": "sroussey@gmail.com", "text": "Cross-referencing with WebKit issue:\nhttps://bugs.webkit.org/show_bug.cgi?id=67868", "bug_id": 678568, "tags": [], "time": "2011-09-10T03:16:08Z", "attachment_id": null, "raw_text": "Cross-referencing with WebKit issue:\nhttps://bugs.webkit.org/show_bug.cgi?id=67868", "id": 5712159}]}}, "comments": {}}