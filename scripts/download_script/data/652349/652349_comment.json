{"bugs": {"652349": {"comments": [{"count": 0, "text": "+++ This bug was initially created as a clone of Bug #401292 +++\n\nXPInstall attempts to restrict the set of certificates trusted for the update server to certificates that chain to certs in our root program. However, at least in theory, the user could have a set of certificates in his certificate database that our certificate path building logic would always use over the certs in the built-in roots module. For example, the user could have installed a different version of the root certificate (e.g. one with a SHA256 signature instead of a SHA1 signature, as StartCom provides on its website) in his certificate database. And/or, the user may run into a situation in which the expected root certificate is cross-signed by a root that isn't in the root module. Either of these scenerios would result in a false positive identification of the attack that we are trying to prevent, and unnecessarily prevent update checking. I don't know if either of these scenerios is actually possible with the CA that is currently used on these servers; it is possible that the current CA doesn't have alternative versions of its root certificate that would cause these problems to happen.\n\nWith libpkix, we could restrict the set of certificates considered as trust anchors at the time the certificate is built. Doing this would ensure that any path returned would chain to a root in our builtin root module, avoiding these issues.", "author": "brian@briansmith.org", "creator": "brian@briansmith.org", "attachment_id": null, "time": "2011-04-23T19:29:58Z", "id": 5428090, "raw_text": "+++ This bug was initially created as a clone of Bug #401292 +++\n\nXPInstall attempts to restrict the set of certificates trusted for the update server to certificates that chain to certs in our root program. However, at least in theory, the user could have a set of certificates in his certificate database that our certificate path building logic would always use over the certs in the built-in roots module. For example, the user could have installed a different version of the root certificate (e.g. one with a SHA256 signature instead of a SHA1 signature, as StartCom provides on its website) in his certificate database. And/or, the user may run into a situation in which the expected root certificate is cross-signed by a root that isn't in the root module. Either of these scenerios would result in a false positive identification of the attack that we are trying to prevent, and unnecessarily prevent update checking. I don't know if either of these scenerios is actually possible with the CA that is currently used on these servers; it is possible that the current CA doesn't have alternative versions of its root certificate that would cause these problems to happen.\n\nWith libpkix, we could restrict the set of certificates considered as trust anchors at the time the certificate is built. Doing this would ensure that any path returned would chain to a root in our builtin root module, avoiding these issues.", "bug_id": 652349, "creation_time": "2011-04-23T19:29:58Z", "tags": [], "is_private": false}, {"attachment_id": null, "creator": "dtownsend@mozilla.com", "author": "dtownsend@mozilla.com", "count": 1, "text": "Does this need to be security sensitive? This situation would just stop a user receiving add-on updates, wouldn't allow any other server to provide them.\n\nPresumably this would be fixed by switching to cert attribute checking a la bug 643461", "is_private": false, "creation_time": "2011-04-23T23:44:55Z", "bug_id": 652349, "raw_text": "Does this need to be security sensitive? This situation would just stop a user receiving add-on updates, wouldn't allow any other server to provide them.\n\nPresumably this would be fixed by switching to cert attribute checking a la bug 643461", "tags": [], "time": "2011-04-23T23:44:55Z", "id": 5428205}, {"creator": "brian@briansmith.org", "attachment_id": null, "text": "I haven't looked into the details to see if it is just Add-ons updating or whether Firefox updating is also affected.\n\nI marked it as security-sensitive because it might be possible for a site to purposely create this situation (by having its intermediate certs stuffed into the cert cache and/or by having the user add a security exception for a different version of a root certificate) so that updates would stop working.", "count": 2, "author": "brian@briansmith.org", "tags": [], "raw_text": "I haven't looked into the details to see if it is just Add-ons updating or whether Firefox updating is also affected.\n\nI marked it as security-sensitive because it might be possible for a site to purposely create this situation (by having its intermediate certs stuffed into the cert cache and/or by having the user add a security exception for a different version of a root certificate) so that updates would stop working.", "bug_id": 652349, "creation_time": "2011-04-23T23:50:36Z", "is_private": false, "id": 5428207, "time": "2011-04-23T23:50:36Z"}, {"attachment_id": null, "is_private": false, "creator": "dtownsend@mozilla.com", "tags": [], "raw_text": "XPInstall is the old code for installing and updating add-ons, application updates never used it.", "bug_id": 652349, "creation_time": "2011-04-23T23:52:19Z", "id": 5428208, "author": "dtownsend@mozilla.com", "time": "2011-04-23T23:52:19Z", "count": 3, "text": "XPInstall is the old code for installing and updating add-ons, application updates never used it."}, {"id": 5428213, "time": "2011-04-24T00:00:08Z", "tags": [], "raw_text": "I admit I don't know a lot about this part of the application so I don't know what is disused. There are two instances of the check that I found:\n\nmozapps/shared/CertUtils.jsm:137\nxpinstall/src/nsXPInstallManager.cpp:1111", "creation_time": "2011-04-24T00:00:08Z", "bug_id": 652349, "is_private": false, "text": "I admit I don't know a lot about this part of the application so I don't know what is disused. There are two instances of the check that I found:\n\nmozapps/shared/CertUtils.jsm:137\nxpinstall/src/nsXPInstallManager.cpp:1111", "count": 4, "author": "brian@briansmith.org", "creator": "brian@briansmith.org", "attachment_id": null}, {"creator": "dtownsend@mozilla.com", "attachment_id": null, "text": "(In reply to comment #4)\n> I admit I don't know a lot about this part of the application so I don't know\n> what is disused. There are two instances of the check that I found:\n> \n> mozapps/shared/CertUtils.jsm:137\n\nThis is used by add-on update and install, the blocklist request and application update\n\n> xpinstall/src/nsXPInstallManager.cpp:1111\n\nThis is no longer used, I really need to remember to take the time to remove it all soon.", "count": 5, "author": "dtownsend@mozilla.com", "raw_text": "(In reply to comment #4)\n> I admit I don't know a lot about this part of the application so I don't know\n> what is disused. There are two instances of the check that I found:\n> \n> mozapps/shared/CertUtils.jsm:137\n\nThis is used by add-on update and install, the blocklist request and application update\n\n> xpinstall/src/nsXPInstallManager.cpp:1111\n\nThis is no longer used, I really need to remember to take the time to remove it all soon.", "creation_time": "2011-04-24T00:37:48Z", "bug_id": 652349, "tags": [], "is_private": false, "time": "2011-04-24T00:37:48Z", "id": 5428230}, {"text": "If an attacker can get a user to install a different root cert (which would be non-builtin) then the user has problems that go beyond not getting updates. Otherwise the best an attacker could do would be to confuse us about the intermediate chain, but the install cert is either going to validate or not validate just the same.\n\nImproving the current cert check hack with libpkix would be a great idea, but doesn't need to be security sensitive.", "count": 6, "author": "dveditz@mozilla.com", "time": "2011-04-29T21:52:31Z", "id": 5440542, "raw_text": "If an attacker can get a user to install a different root cert (which would be non-builtin) then the user has problems that go beyond not getting updates. Otherwise the best an attacker could do would be to confuse us about the intermediate chain, but the install cert is either going to validate or not validate just the same.\n\nImproving the current cert check hack with libpkix would be a great idea, but doesn't need to be security sensitive.", "bug_id": 652349, "creation_time": "2011-04-29T21:52:31Z", "creator": "dveditz@mozilla.com", "tags": [], "is_private": false, "attachment_id": null}]}}, "comments": {}}