{"bugs": {"625013": {"comments": [{"raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8\nBuild Identifier: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8\n\nWell, create a style element and append it to the head-Node.\nTry using an URL that doesn't exist as its href attribute.\n\nSet an interval and within the interval try accessing the property (e.g. stylesheetNode[0].sheet.cssRules) DOM Exception fires when this property was accessed before the Stylesheet itself is ready.\n\nThe .sheet property is always there, even if the stylesheet isnt loaded successfully. There is actually no other way to check if a stylesheet was loaded than checking the cssRules.length. But there the DOM Exception fires.\n\n\nSample Code below (requires jQuery, but that hasn't something to do with the Bug.):\n\n\n\t\tvar stylesheet = $('<link rel=\"stylesheet\" href=\"'+url+'\" type=\"text/css\" media=\"screen\">').appendTo('head');\n\t\tvar interval = window.setInterval(function() {\n\n\t\t\ttry{\n\t\t\t\tif(stylesheet[0].sheet && stylesheet[0].sheet.cssRules) {\n\t\t\t\t\tcallback && callback(stylesheet);\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\n\t\t\t}catch(e){\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}, 13);\n\nReproducible: Always\n\nSteps to Reproduce:\n1. var xyz=createElement('style');\n2. xyz.setAttribute('href','/url/that/doesnt/exist.css');\n3. document.getElementsByTagName('head')[0].appendChild(xyz);\n4. alert(xyz.sheet.cssRules);\n\neverytime the cssRules property is accessed (well, it's still there, but locked!) the problem occurs.\nActual Results:  \nDOM Exception, which is only avoidable using try/catch.\n\nExpected Results:  \ncssRules property of unloaded Stylesheets should either be not set or accessible as a getter.\n\nWell, contact me at my email address at work: cmartens@zynga.com for more information - if you need a sample page. I think the steps should be quite simple to follow.", "count": 0, "tags": [], "author": "cmartens@zynga.com", "attachment_id": null, "bug_id": 625013, "id": 5193182, "text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8\nBuild Identifier: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8\n\nWell, create a style element and append it to the head-Node.\nTry using an URL that doesn't exist as its href attribute.\n\nSet an interval and within the interval try accessing the property (e.g. stylesheetNode[0].sheet.cssRules) DOM Exception fires when this property was accessed before the Stylesheet itself is ready.\n\nThe .sheet property is always there, even if the stylesheet isnt loaded successfully. There is actually no other way to check if a stylesheet was loaded than checking the cssRules.length. But there the DOM Exception fires.\n\n\nSample Code below (requires jQuery, but that hasn't something to do with the Bug.):\n\n\n\t\tvar stylesheet = $('<link rel=\"stylesheet\" href=\"'+url+'\" type=\"text/css\" media=\"screen\">').appendTo('head');\n\t\tvar interval = window.setInterval(function() {\n\n\t\t\ttry{\n\t\t\t\tif(stylesheet[0].sheet && stylesheet[0].sheet.cssRules) {\n\t\t\t\t\tcallback && callback(stylesheet);\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\n\t\t\t}catch(e){\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}, 13);\n\nReproducible: Always\n\nSteps to Reproduce:\n1. var xyz=createElement('style');\n2. xyz.setAttribute('href','/url/that/doesnt/exist.css');\n3. document.getElementsByTagName('head')[0].appendChild(xyz);\n4. alert(xyz.sheet.cssRules);\n\neverytime the cssRules property is accessed (well, it's still there, but locked!) the problem occurs.\nActual Results:  \nDOM Exception, which is only avoidable using try/catch.\n\nExpected Results:  \ncssRules property of unloaded Stylesheets should either be not set or accessible as a getter.\n\nWell, contact me at my email address at work: cmartens@zynga.com for more information - if you need a sample page. I think the steps should be quite simple to follow.", "time": "2011-01-12T11:47:04Z", "is_private": false, "creator": "cmartens@zynga.com", "creation_time": "2011-01-12T11:47:04Z"}, {"attachment_id": 503125, "bug_id": 625013, "tags": [], "author": "cmartens@zynga.com", "count": 1, "raw_text": "", "creation_time": "2011-01-12T12:36:59Z", "creator": "cmartens@zynga.com", "id": 5193232, "text": "Created attachment 503125\nReduced testcase. The bug only happens for link elements. Not for style elements.", "time": "2011-01-12T12:36:59Z", "is_private": false}, {"author": "cmartens@zynga.com", "tags": [], "bug_id": 625013, "attachment_id": null, "raw_text": "My Steps won't work due to coding typos. I added a reduced testcase that produces the error and works fine. Seems as the bug only happens on link elements.", "count": 2, "creator": "cmartens@zynga.com", "creation_time": "2011-01-12T12:39:00Z", "is_private": false, "time": "2011-01-12T12:39:00Z", "text": "My Steps won't work due to coding typos. I added a reduced testcase that produces the error and works fine. Seems as the bug only happens on link elements.", "id": 5193234}, {"bug_id": 625013, "attachment_id": null, "author": "bzbarsky@mit.edu", "tags": [], "count": 3, "raw_text": "This is by-design.  There is no sane way to return a .cssRules in this situation....  We could return null, I suppose, but is that really any better?  The cssRules of a sheet is not supposed to be a mutable object.\n\nWhat you really want apparently is a way to detect when the sheet is done loading, right?  There's an existing bug on firing a load event on stylesheets.", "creation_time": "2011-03-16T16:12:00Z", "creator": "bzbarsky@mit.edu", "time": "2011-03-16T16:12:00Z", "text": "This is by-design.  There is no sane way to return a .cssRules in this situation....  We could return null, I suppose, but is that really any better?  The cssRules of a sheet is not supposed to be a mutable object.\n\nWhat you really want apparently is a way to detect when the sheet is done loading, right?  There's an existing bug on firing a load event on stylesheets.", "id": 5348444, "is_private": false}, {"is_private": false, "raw_text": "Well, Webkit and Opera both return null without firing a DOM Exception.\n\nI don't know if that is the right way...but that's the difference to Gecko.\nMaybe we should think about firing such an event for handling that cases.", "text": "Well, Webkit and Opera both return null without firing a DOM Exception.\n\nI don't know if that is the right way...but that's the difference to Gecko.\nMaybe we should think about firing such an event for handling that cases.", "id": 5348458, "time": "2011-03-16T16:17:23Z", "count": 4, "creator": "cmartens@zynga.com", "tags": [], "author": "cmartens@zynga.com", "creation_time": "2011-03-16T16:17:23Z", "attachment_id": null, "bug_id": 625013}, {"tags": [], "author": "bzbarsky@mit.edu", "attachment_id": null, "bug_id": 625013, "raw_text": "For what it's worth, it looks like Webkit returns null for the sheet before it's loaded, but in Webkit the sheet is not present in document.styleSheets either, which means the indices in document.styleSheets shift around as network loads happen.  We really don't want that behavior.\n\nOpera seems to hand back an CSSRuleList, but it also has a security bug as a result.", "count": 5, "creator": "bzbarsky@mit.edu", "creation_time": "2011-03-16T16:24:09Z", "id": 5348477, "text": "For what it's worth, it looks like Webkit returns null for the sheet before it's loaded, but in Webkit the sheet is not present in document.styleSheets either, which means the indices in document.styleSheets shift around as network loads happen.  We really don't want that behavior.\n\nOpera seems to hand back an CSSRuleList, but it also has a security bug as a result.", "time": "2011-03-16T16:24:09Z", "is_private": false}, {"creator": "sorvell@google.com", "creation_time": "2014-02-20T18:38:13Z", "is_private": false, "time": "2014-02-20T18:38:13Z", "id": 8443879, "text": "This also occurs in a <style> element when an @import is used. Here's a minimal example:\n\n<script>\n  var s = document.createElement('style');\n  s.textContent = \"@import url('sheet1.css');\";\n  document.head.appendChild(s);\n  console.log(s.sheet.cssRules);\n</script>\n\nThrowing an exception is pretty undesirable. Webkit, Blink, and IE all return a CSSRuleList with a single rule for the @import.", "author": "sorvell@google.com", "tags": [], "bug_id": 625013, "attachment_id": null, "raw_text": "This also occurs in a <style> element when an @import is used. Here's a minimal example:\n\n<script>\n  var s = document.createElement('style');\n  s.textContent = \"@import url('sheet1.css');\";\n  document.head.appendChild(s);\n  console.log(s.sheet.cssRules);\n</script>\n\nThrowing an exception is pretty undesirable. Webkit, Blink, and IE all return a CSSRuleList with a single rule for the @import.", "count": 6}, {"creator": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2018-06-29T04:47:52Z", "time": "2018-06-29T04:47:52Z", "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "id": 13435583, "is_private": false, "author": "bug-husbandry-bot@mozilla.bugs", "tags": [], "bug_id": 625013, "attachment_id": null, "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "count": 7}]}}, "comments": {}}