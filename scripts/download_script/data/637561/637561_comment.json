{"bugs": {"637561": {"comments": [{"count": 0, "text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0b12) Gecko/20100101 Firefox/4.0b12\n\nresulting in an js error:\n\nError: localStorage is null\nSource file: chrome://browser/content/aboutHome.js\nLine: 181\n\nand breaking the page\n\n\nReproducible: Always", "author": "al_9x@yahoo.com", "time": "2011-03-01T04:08:46Z", "id": 5310680, "raw_text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0b12) Gecko/20100101 Firefox/4.0b12\n\nresulting in an js error:\n\nError: localStorage is null\nSource file: chrome://browser/content/aboutHome.js\nLine: 181\n\nand breaking the page\n\n\nReproducible: Always", "creation_time": "2011-03-01T04:08:46Z", "bug_id": 637561, "creator": "al_9x@yahoo.com", "tags": [], "attachment_id": null, "is_private": false}, {"author": "alex.lakatos.qa@gmail.com", "count": 1, "text": "Reporter, can you please provide some clear Steps to Reproduce?\nThanks.", "attachment_id": null, "creator": "alex.lakatos.qa@gmail.com", "id": 5311093, "time": "2011-03-01T10:04:36Z", "is_private": false, "tags": [], "creation_time": "2011-03-01T10:04:36Z", "bug_id": 637561, "raw_text": "Reporter, can you please provide some clear Steps to Reproduce?\nThanks."}, {"is_private": false, "raw_text": "Disable dom storage (dom.storage.enabled=false) then load about:home", "bug_id": 637561, "creation_time": "2011-03-01T13:37:31Z", "tags": [], "time": "2011-03-01T13:37:31Z", "id": 5311356, "attachment_id": null, "creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com", "text": "Disable dom storage (dom.storage.enabled=false) then load about:home", "count": 2}, {"id": 5311368, "time": "2011-03-01T13:43:30Z", "is_private": false, "tags": [], "raw_text": "iirc was discussed that the case of users disabling dom storage was pretty small and uninteresting", "bug_id": 637561, "creation_time": "2011-03-01T13:43:30Z", "author": "mak@mozilla.com", "text": "iirc was discussed that the case of users disabling dom storage was pretty small and uninteresting", "count": 3, "attachment_id": null, "creator": "mak@mozilla.com"}, {"attachment_id": null, "creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com", "count": 4, "text": "Related Bug 637639: if dom storage was disabled at the time of the profile upgrade, about:home remains broken even after it is re-enabled", "is_private": false, "bug_id": 637561, "creation_time": "2011-03-01T13:58:27Z", "raw_text": "Related Bug 637639: if dom storage was disabled at the time of the profile upgrade, about:home remains broken even after it is re-enabled", "tags": [], "time": "2011-03-01T13:58:27Z", "id": 5311389}, {"count": 5, "text": "(In reply to comment #3)\n> iirc was discussed that the case of users disabling dom storage was pretty\n> small and uninteresting\n\nDisabling dom storage is supported in Fx, so you can't just assume it's on and fail so ungracefully when it's off", "author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "attachment_id": null, "time": "2011-03-01T14:01:23Z", "id": 5311394, "raw_text": "(In reply to comment #3)\n> iirc was discussed that the case of users disabling dom storage was pretty\n> small and uninteresting\n\nDisabling dom storage is supported in Fx, so you can't just assume it's on and fail so ungracefully when it's off", "bug_id": 637561, "creation_time": "2011-03-01T14:01:23Z", "tags": [], "is_private": false}, {"time": "2011-03-01T14:02:19Z", "author": "mak@mozilla.com", "id": 5311398, "count": 6, "text": "if you disable a feature you should expect pages using that feature to break, we don't ship with dom storage disabled", "attachment_id": null, "is_private": false, "creation_time": "2011-03-01T14:02:19Z", "bug_id": 637561, "raw_text": "if you disable a feature you should expect pages using that feature to break, we don't ship with dom storage disabled", "tags": [], "creator": "mak@mozilla.com"}, {"attachment_id": null, "creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com", "text": "(In reply to comment #6)\n> if you disable a feature you should expect pages using that feature to break,\n> we don't ship with dom storage disabled\n\nMost pages on the internet that use dom storage degrade gracefully, checking for null.  But this is not even an internet page, internal Fx code should especially be expected to behave sanely.  You are making lame excuses for bad coding.", "count": 7, "is_private": false, "tags": [], "raw_text": "(In reply to comment #6)\n> if you disable a feature you should expect pages using that feature to break,\n> we don't ship with dom storage disabled\n\nMost pages on the internet that use dom storage degrade gracefully, checking for null.  But this is not even an internet page, internal Fx code should especially be expected to behave sanely.  You are making lame excuses for bad coding.", "bug_id": 637561, "creation_time": "2011-03-01T14:09:18Z", "id": 5311410, "time": "2011-03-01T14:09:18Z"}, {"time": "2011-03-01T14:22:17Z", "id": 5311422, "is_private": false, "raw_text": "Advanced users that touch about:config are aware of problems they can hit by changing unexposed configurations and more than able to workaround those problems. A clear warning is shown when you open about:config.\n\nThe implementation could change for a future version when there will be more time to handle the security implication of the other implementations, this was the best choice to handle security implications in the original evaluated time range for the project.\nEven if we'd handle null case there is no good fallback road we could take, apart showing a blank page, so would be an absolutely useless check.\n\nIf you don't like the code you're welcome to submit good coded patches rather than flame-spamming bugs.", "creation_time": "2011-03-01T14:22:17Z", "bug_id": 637561, "tags": [], "author": "mak@mozilla.com", "count": 8, "text": "Advanced users that touch about:config are aware of problems they can hit by changing unexposed configurations and more than able to workaround those problems. A clear warning is shown when you open about:config.\n\nThe implementation could change for a future version when there will be more time to handle the security implication of the other implementations, this was the best choice to handle security implications in the original evaluated time range for the project.\nEven if we'd handle null case there is no good fallback road we could take, apart showing a blank page, so would be an absolutely useless check.\n\nIf you don't like the code you're welcome to submit good coded patches rather than flame-spamming bugs.", "attachment_id": null, "creator": "mak@mozilla.com"}, {"tags": [], "raw_text": "(In reply to comment #8)\n> Even if we'd handle null case there is no good fallback road we could take,\n> apart showing a blank page, so would be an absolutely useless check.\n>\n\nSure there is a fallback, just show a google search without any snippets.  The page can work work without dom storage.\n\nBuilding core internal functionality (built-in home page) around a feature that can be disabled is unwise.  Failing to gracefully handle the disabled case is doubly so.\n\n> If you don't like the code you're welcome to submit good coded patches rather\n> than flame-spamming bugs.\n\nflame-spamming?  I submitted this bug, and have a right to address your inane excuses.", "bug_id": 637561, "creation_time": "2011-03-01T14:36:51Z", "is_private": false, "id": 5311445, "time": "2011-03-01T14:36:51Z", "creator": "al_9x@yahoo.com", "attachment_id": null, "count": 9, "text": "(In reply to comment #8)\n> Even if we'd handle null case there is no good fallback road we could take,\n> apart showing a blank page, so would be an absolutely useless check.\n>\n\nSure there is a fallback, just show a google search without any snippets.  The page can work work without dom storage.\n\nBuilding core internal functionality (built-in home page) around a feature that can be disabled is unwise.  Failing to gracefully handle the disabled case is doubly so.\n\n> If you don't like the code you're welcome to submit good coded patches rather\n> than flame-spamming bugs.\n\nflame-spamming?  I submitted this bug, and have a right to address your inane excuses.", "author": "al_9x@yahoo.com"}, {"author": "mak@mozilla.com", "time": "2011-03-01T14:45:26Z", "id": 5311461, "text": "(In reply to comment #9)\n> Sure there is a fallback, just show a google search without any snippets.  The\n> page can work work without dom storage.\n\nThat's an absolutely bad fallback, if dom storage is disabled we don't even know if google is the default search engine, so we'd be showing a random page? Plus the user didn't ask to visit google, and we should not try to be smart when that could hurt the user's privacy.", "count": 10, "attachment_id": null, "is_private": false, "raw_text": "(In reply to comment #9)\n> Sure there is a fallback, just show a google search without any snippets.  The\n> page can work work without dom storage.\n\nThat's an absolutely bad fallback, if dom storage is disabled we don't even know if google is the default search engine, so we'd be showing a random page? Plus the user didn't ask to visit google, and we should not try to be smart when that could hurt the user's privacy.", "creation_time": "2011-03-01T14:45:26Z", "bug_id": 637561, "creator": "mak@mozilla.com", "tags": []}, {"id": 5311480, "time": "2011-03-01T14:54:45Z", "author": "al_9x@yahoo.com", "text": "(In reply to comment #10)\n> (In reply to comment #9)\n> > Sure there is a fallback, just show a google search without any snippets.  The\n> > page can work work without dom storage.\n> \n> That's an absolutely bad fallback\n\nNo, showing a broken page is what qualifies for an \"absolutely bad fallback\"  A Google search-box (which doesn't actually visit google, about:home is local) is an obvious improvement over a broken page.", "count": 11, "attachment_id": null, "is_private": false, "tags": [], "creator": "al_9x@yahoo.com", "bug_id": 637561, "creation_time": "2011-03-01T14:54:45Z", "raw_text": "(In reply to comment #10)\n> (In reply to comment #9)\n> > Sure there is a fallback, just show a google search without any snippets.  The\n> > page can work work without dom storage.\n> \n> That's an absolutely bad fallback\n\nNo, showing a broken page is what qualifies for an \"absolutely bad fallback\"  A Google search-box (which doesn't actually visit google, about:home is local) is an obvious improvement over a broken page."}, {"count": 12, "text": "even hiding the search box is better than showing a broken one", "author": "al_9x@yahoo.com", "creator": "al_9x@yahoo.com", "attachment_id": null, "id": 5311495, "time": "2011-03-01T15:02:06Z", "tags": [], "creation_time": "2011-03-01T15:02:06Z", "bug_id": 637561, "raw_text": "even hiding the search box is better than showing a broken one", "is_private": false}, {"id": 5312654, "time": "2011-03-01T20:27:23Z", "author": "al_9x@yahoo.com", "count": 13, "text": "Why is this unconfirmed?\n\nIt's not looking like this will be addressed for 4.0, but there is no excuse for not doing proper error handling and at least hiding the broken parts.", "attachment_id": null, "is_private": false, "tags": [], "creator": "al_9x@yahoo.com", "creation_time": "2011-03-01T20:27:23Z", "bug_id": 637561, "raw_text": "Why is this unconfirmed?\n\nIt's not looking like this will be addressed for 4.0, but there is no excuse for not doing proper error handling and at least hiding the broken parts."}, {"creation_time": "2013-04-16T18:38:04Z", "bug_id": 637561, "raw_text": "Do we have a bug marking the general inability to see DOM storage from chrome when this preference is false?  Previously set storage items continue to exist whatever the value of the preference, but the API pretends they don't.  Then they magically reappear later when the preference is changed.", "tags": [], "creator": "mozilla@virginmedia.com", "attachment_id": null, "is_private": false, "count": 14, "text": "Do we have a bug marking the general inability to see DOM storage from chrome when this preference is false?  Previously set storage items continue to exist whatever the value of the preference, but the API pretends they don't.  Then they magically reappear later when the preference is changed.", "time": "2013-04-16T18:38:04Z", "author": "mozilla@virginmedia.com", "id": 7321817}, {"time": "2013-07-17T21:08:39Z", "id": 7647465, "is_private": false, "raw_text": "Did the patch in bug 789348 fix this?", "bug_id": 637561, "creation_time": "2013-07-17T21:08:39Z", "tags": [], "author": "jruderman@gmail.com", "count": 15, "text": "Did the patch in bug 789348 fix this?", "attachment_id": null, "creator": "jruderman@gmail.com"}, {"raw_text": "well, it may probably now complain about disabled indexedDB.\nSo, the bug as filed is fixed, but the concept is still valid, we should still handle a null indexedDB object if dom.indexedDB.enabled is false.", "creation_time": "2013-07-17T21:24:48Z", "bug_id": 637561, "creator": "mak@mozilla.com", "tags": [], "attachment_id": null, "is_private": false, "count": 16, "text": "well, it may probably now complain about disabled indexedDB.\nSo, the bug as filed is fixed, but the concept is still valid, we should still handle a null indexedDB object if dom.indexedDB.enabled is false.", "author": "mak@mozilla.com", "time": "2013-07-17T21:24:48Z", "id": 7647565}]}}, "comments": {}}