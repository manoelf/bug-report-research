{"comments": {}, "bugs": {"675552": {"comments": [{"tags": [], "time": "2011-08-01T02:13:39Z", "raw_text": "###!!! ASSERTION: unexpected block frame: '!nsLayoutUtils::GetAsBlock(aFrame) || !aFrame->GetStyleDisplay()->IsBlockOutside()', file layout/generic/TextOverflow.cpp", "attachment_id": 549710, "bug_id": 675552, "id": 5624618, "creation_time": "2011-08-01T02:13:39Z", "is_private": false, "creator": "jruderman@gmail.com", "count": 0, "text": "Created attachment 549710\ntestcase\n\n###!!! ASSERTION: unexpected block frame: '!nsLayoutUtils::GetAsBlock(aFrame) || !aFrame->GetStyleDisplay()->IsBlockOutside()', file layout/generic/TextOverflow.cpp", "author": "jruderman@gmail.com"}, {"creator": "MatsPalmgren_bugz@use.startmail.com", "author": "MatsPalmgren_bugz@use.startmail.com", "text": "There's a couple of assertions leading up to that:\n\n###!!! ASSERTION: How'd we get a floated inline frame? The frame ctor should've dealt with this.: 'aReflowState.mStyleDisplay->mFloats == NS_STYLE_FLOAT_NONE', file layout/generic/nsLineLayout.cpp, line 1092\n###!!! ASSERTION: How'd we get a floated inline frame? The frame ctor should've dealt with this.: 'isText || reflowStateHolder.ref().mStyleDisplay->mFloats == NS_STYLE_FLOAT_NONE', file layout/generic/nsLineLayout.cpp, line 1019", "count": 1, "bug_id": 675552, "id": 5625310, "creation_time": "2011-08-01T15:28:50Z", "is_private": false, "time": "2011-08-01T15:28:50Z", "attachment_id": null, "raw_text": "There's a couple of assertions leading up to that:\n\n###!!! ASSERTION: How'd we get a floated inline frame? The frame ctor should've dealt with this.: 'aReflowState.mStyleDisplay->mFloats == NS_STYLE_FLOAT_NONE', file layout/generic/nsLineLayout.cpp, line 1092\n###!!! ASSERTION: How'd we get a floated inline frame? The frame ctor should've dealt with this.: 'isText || reflowStateHolder.ref().mStyleDisplay->mFloats == NS_STYLE_FLOAT_NONE', file layout/generic/nsLineLayout.cpp, line 1019", "tags": []}, {"time": "2011-08-01T15:33:47Z", "attachment_id": 549807, "raw_text": "<math><div/></math> triggers just the \"unexpected block frame\" assertion and not the float related ones in comment 1.", "tags": [], "creator": "MatsPalmgren_bugz@use.startmail.com", "author": "MatsPalmgren_bugz@use.startmail.com", "count": 2, "text": "Created attachment 549807\nTestcase #2\n\n<math><div/></math> triggers just the \"unexpected block frame\" assertion and not the float related ones in comment 1.", "id": 5625321, "bug_id": 675552, "creation_time": "2011-08-01T15:33:47Z", "is_private": false}, {"tags": [], "attachment_id": null, "creation_time": "2011-08-01T15:38:22Z", "is_private": false, "creator": "bzbarsky@mit.edu", "raw_text": "The float assertions there are bogus when MathML is involved, as things stand....", "time": "2011-08-01T15:38:22Z", "bug_id": 675552, "id": 5625335, "count": 3, "text": "The float assertions there are bogus when MathML is involved, as things stand....", "author": "bzbarsky@mit.edu"}, {"creator": "MatsPalmgren_bugz@use.startmail.com", "creation_time": "2011-08-01T15:42:34Z", "is_private": false, "attachment_id": 549814, "tags": [], "author": "MatsPalmgren_bugz@use.startmail.com", "count": 4, "text": "Created attachment 549814\nFrame tree for Testcase #2\n\nHmm, this frame tree looks weird to me, why does the line have \"state=inline\"\nand why is there no -moz-mathml-anonymous-block frame?", "bug_id": 675552, "id": 5625349, "raw_text": "Hmm, this frame tree looks weird to me, why does the line have \"state=inline\"\nand why is there no -moz-mathml-anonymous-block frame?", "time": "2011-08-01T15:42:34Z"}, {"time": "2011-08-01T15:44:43Z", "raw_text": "", "count": 5, "text": "Created attachment 549816\nTestcase #3", "author": "MatsPalmgren_bugz@use.startmail.com", "id": 5625355, "bug_id": 675552, "attachment_id": 549816, "tags": [], "creator": "MatsPalmgren_bugz@use.startmail.com", "is_private": false, "creation_time": "2011-08-01T15:44:43Z"}, {"creator": "MatsPalmgren_bugz@use.startmail.com", "author": "MatsPalmgren_bugz@use.startmail.com", "count": 6, "text": "Created attachment 549817\nFrame tree for Testcase #3", "id": 5625367, "bug_id": 675552, "is_private": false, "creation_time": "2011-08-01T15:48:11Z", "time": "2011-08-01T15:48:11Z", "attachment_id": 549817, "raw_text": "", "tags": []}, {"time": "2011-08-01T17:34:53Z", "raw_text": "Is the attached frame trees what we want them to be?\nIf so, then we need to ignore block child frames.", "bug_id": 675552, "id": 5625651, "count": 7, "text": "Created attachment 549849\nfix\n\nIs the attached frame trees what we want them to be?\nIf so, then we need to ignore block child frames.", "author": "MatsPalmgren_bugz@use.startmail.com", "tags": [], "attachment_id": 549849, "creation_time": "2011-08-01T17:34:53Z", "is_private": false, "creator": "MatsPalmgren_bugz@use.startmail.com"}, {"time": "2011-08-01T23:02:52Z", "raw_text": "The inline math frames containing blocks look wrong to me. Why aren't they being converted to anonymous blocks?", "text": "The inline math frames containing blocks look wrong to me. Why aren't they being converted to anonymous blocks?", "count": 8, "author": "roc@ocallahan.org", "id": 5626552, "bug_id": 675552, "attachment_id": null, "tags": [], "creator": "roc@ocallahan.org", "is_private": false, "creation_time": "2011-08-01T23:02:52Z"}, {"time": "2011-08-02T02:00:52Z", "raw_text": "Because 'wrapFrame' is false for the block, so it's added as is to 'newItems':\nhttp://mxr.mozilla.org/mozilla-central/source/layout/base/nsCSSFrameConstructor.cpp#3779", "attachment_id": null, "tags": [], "creator": "MatsPalmgren_bugz@use.startmail.com", "text": "Because 'wrapFrame' is false for the block, so it's added as is to 'newItems':\nhttp://mxr.mozilla.org/mozilla-central/source/layout/base/nsCSSFrameConstructor.cpp#3779", "count": 9, "author": "MatsPalmgren_bugz@use.startmail.com", "id": 5626885, "bug_id": 675552, "creation_time": "2011-08-02T02:00:52Z", "is_private": false}, {"tags": [], "time": "2011-08-02T03:17:45Z", "raw_text": "Yeah, but it seems to me that it would make more sense for inline <math> elements to participate in IB-splitting like other inline elements do.", "attachment_id": null, "id": 5626969, "bug_id": 675552, "is_private": false, "creation_time": "2011-08-02T03:17:45Z", "creator": "roc@ocallahan.org", "text": "Yeah, but it seems to me that it would make more sense for inline <math> elements to participate in IB-splitting like other inline elements do.", "count": 10, "author": "roc@ocallahan.org"}, {"time": "2011-08-02T03:53:44Z", "raw_text": "We could try to do that; would the math frame be able to deal?", "attachment_id": null, "tags": [], "creator": "bzbarsky@mit.edu", "text": "We could try to do that; would the math frame be able to deal?", "count": 11, "author": "bzbarsky@mit.edu", "id": 5626993, "bug_id": 675552, "creation_time": "2011-08-02T03:53:44Z", "is_private": false}, {"creator": "ryanvm@gmail.com", "is_private": false, "creation_time": "2015-10-31T17:29:12Z", "attachment_id": null, "tags": [], "author": "ryanvm@gmail.com", "count": 12, "text": "Testcases #1 & #2 still assert on trunk. Testcase #3 no longer does (at least on linux64).", "id": 10891730, "bug_id": 675552, "time": "2015-10-31T17:29:12Z", "raw_text": "Testcases #1 & #2 still assert on trunk. Testcase #3 no longer does (at least on linux64)."}]}}}