{"bugs": {"684192": {"comments": [{"id": 5695874, "bug_id": 684192, "creation_time": "2011-09-02T10:27:14Z", "is_private": false, "creator": "mounir@lamouri.fr", "count": 0, "text": "The work that is being done in bug 669578 for reflectInt() is more complet than what was done for reflectUnsignedInt(). As soon as the patch is landed. we should update the later method to match the former.", "author": "mounir@lamouri.fr", "tags": [], "time": "2011-09-02T10:27:14Z", "raw_text": "The work that is being done in bug 669578 for reflectInt() is more complet than what was done for reflectUnsignedInt(). As soon as the patch is landed. we should update the later method to match the former.", "attachment_id": null}, {"id": 5701227, "bug_id": 684192, "is_private": false, "creation_time": "2011-09-06T01:39:58Z", "creator": "Ainsley.Chong@gmail.com", "author": "Ainsley.Chong@gmail.com", "text": "I'd like to work on this, should be faster to port over the changes than the the first go-around :)", "count": 1, "tags": [], "time": "2011-09-06T01:39:58Z", "attachment_id": null, "raw_text": "I'd like to work on this, should be faster to port over the changes than the the first go-around :)"}, {"creation_time": "2011-12-01T19:48:26Z", "is_private": false, "bug_id": 684192, "id": 5886039, "text": "Created attachment 578345\nAn attempt to update", "count": 2, "author": "jonahpan1012@gmail.com", "creator": "jonahpan1012@gmail.com", "tags": [], "raw_text": "", "attachment_id": 578345, "time": "2011-12-01T19:48:26Z"}, {"time": "2011-12-01T19:53:55Z", "attachment_id": 578348, "raw_text": "", "tags": [], "creator": "jonahpan1012@gmail.com", "author": "jonahpan1012@gmail.com", "count": 3, "text": "Created attachment 578348\nA naive attempt to update.", "bug_id": 684192, "id": 5886067, "creation_time": "2011-12-01T19:53:55Z", "is_private": false}, {"creator": "jonahpan1012@gmail.com", "is_private": false, "creation_time": "2011-12-01T20:11:39Z", "attachment_id": null, "tags": [], "author": "jonahpan1012@gmail.com", "text": "It is far from a complete patch. All I did was trim out some code and added in a bit of code. Just wanted to see what making a patch is like in this great community! Please by all means judge and criticize!", "count": 4, "bug_id": 684192, "id": 5886135, "time": "2011-12-01T20:11:39Z", "raw_text": "It is far from a complete patch. All I did was trim out some code and added in a bit of code. Just wanted to see what making a patch is like in this great community! Please by all means judge and criticize!"}, {"text": "Comment on attachment 578348\nA naive attempt to update.\n\nMs2ger, could you review that by any chance? :)", "count": 5, "author": "mounir@lamouri.fr", "creator": "mounir@lamouri.fr", "is_private": false, "creation_time": "2011-12-01T20:14:25Z", "id": 5886145, "bug_id": 684192, "raw_text": "Ms2ger, could you review that by any chance? :)", "attachment_id": 578348, "time": "2011-12-01T20:14:25Z", "tags": []}, {"raw_text": ">diff -r 259d1556c221 content/html/content/test/reflect.js\n>--- a/content/html/content/test/reflect.js\tFri Sep 23 01:12:40 2011 +0100\n>+++ b/content/html/content/test/reflect.js\tThu Dec 01 11:45:55 2011 -0800\n>+\tis(element.getAttribute(attr), expectedGetAttributeResult(v), \n>+           element.localName + \".setAttribute(\" + attr + \", \" + v + \"), \" + \n>+           element.localName + \".getAttribute(\" + attr + \") \");\n>+\n>+\tif(testExponential(v)){\n>+\t    //TBD: Bug 673820: .setAttribute(exponential) -> incorrect reflection for element[attr]\n>+\t    todo_is(element[attr], intValue, \"Bug 673820: \" + element.localName +\n>+                    \".setAttribute(\" + attr + \", \" + v + \"), \" + \n>+                    element.localName + \"[\" + attr + \"] \");\n>+\t} else if (v == \"why 567 what\") {\n>+      //TBD: Bug 679672: .setAttribute() is somehow able to parse \"why 567 what\" into \"567\"\n>+      todo_is(element[attr], intValue, \"Bug 679672: \" + element.localName +\n>+              \".setAttribute(\" + attr + \", \" + v + \"), \" +\n>+              element.localName + \"[\" + attr + \"] \");\n>+    } else if (v == \"+42foo\") {\n>+      //TBD: Bug: Unable to correctly parse \"+\" character in front of string\n>+      todo_is(element[attr], intValue, \"Bug: \" + element.localName +\n>+              \".setAttribute(\" + attr + \", \" + v + \"), \" +\n>+              element.localName + \"[\" + attr + \"] \");\n>+    } else if (v == \"0x10FFFF\" && defaultValue != 0) {\n>+      //TBD: Bug: Integer attributes should parse \"0x10FFFF\" as 0, but instead incorrectly return defaultValue\n>+      todo_is(element[attr], intValue, \"Bug: \" + element.localName +\n>+              \".setAttribute(\" + attr + \", \" + v + \"), \" + element.localName +\n>+              \"[\" + attr + \"] \");\n>+    } else if ((v == \"++2\") && element[attr] != defaultValue)  {\n>+      //TBD: Bug: Should not be able to parse strings with multiple sign characters, should return defaultValue\n>+      todo_is(element[attr], intValue, \"Bug: \" + element.localName +\n>+        \".setAttribute(\" + attr + \", \" + v + \"), \" + element.localName + \"[\" + attr + \"] \");\n\nThese should all be fixed by now.\n\nPlease also remove literal tab characters and ask me for review again when those things are fixed.", "time": "2011-12-07T15:44:08Z", "id": 5897380, "bug_id": 684192, "count": 6, "text": "Comment on attachment 578348\nA naive attempt to update.\n\n>diff -r 259d1556c221 content/html/content/test/reflect.js\n>--- a/content/html/content/test/reflect.js\tFri Sep 23 01:12:40 2011 +0100\n>+++ b/content/html/content/test/reflect.js\tThu Dec 01 11:45:55 2011 -0800\n>+\tis(element.getAttribute(attr), expectedGetAttributeResult(v), \n>+           element.localName + \".setAttribute(\" + attr + \", \" + v + \"), \" + \n>+           element.localName + \".getAttribute(\" + attr + \") \");\n>+\n>+\tif(testExponential(v)){\n>+\t    //TBD: Bug 673820: .setAttribute(exponential) -> incorrect reflection for element[attr]\n>+\t    todo_is(element[attr], intValue, \"Bug 673820: \" + element.localName +\n>+                    \".setAttribute(\" + attr + \", \" + v + \"), \" + \n>+                    element.localName + \"[\" + attr + \"] \");\n>+\t} else if (v == \"why 567 what\") {\n>+      //TBD: Bug 679672: .setAttribute() is somehow able to parse \"why 567 what\" into \"567\"\n>+      todo_is(element[attr], intValue, \"Bug 679672: \" + element.localName +\n>+              \".setAttribute(\" + attr + \", \" + v + \"), \" +\n>+              element.localName + \"[\" + attr + \"] \");\n>+    } else if (v == \"+42foo\") {\n>+      //TBD: Bug: Unable to correctly parse \"+\" character in front of string\n>+      todo_is(element[attr], intValue, \"Bug: \" + element.localName +\n>+              \".setAttribute(\" + attr + \", \" + v + \"), \" +\n>+              element.localName + \"[\" + attr + \"] \");\n>+    } else if (v == \"0x10FFFF\" && defaultValue != 0) {\n>+      //TBD: Bug: Integer attributes should parse \"0x10FFFF\" as 0, but instead incorrectly return defaultValue\n>+      todo_is(element[attr], intValue, \"Bug: \" + element.localName +\n>+              \".setAttribute(\" + attr + \", \" + v + \"), \" + element.localName +\n>+              \"[\" + attr + \"] \");\n>+    } else if ((v == \"++2\") && element[attr] != defaultValue)  {\n>+      //TBD: Bug: Should not be able to parse strings with multiple sign characters, should return defaultValue\n>+      todo_is(element[attr], intValue, \"Bug: \" + element.localName +\n>+        \".setAttribute(\" + attr + \", \" + v + \"), \" + element.localName + \"[\" + attr + \"] \");\n\nThese should all be fixed by now.\n\nPlease also remove literal tab characters and ask me for review again when those things are fixed.", "author": "Ms2ger@gmail.com", "tags": [], "attachment_id": 578348, "is_private": false, "creation_time": "2011-12-07T15:44:08Z", "creator": "Ms2ger@gmail.com"}, {"raw_text": "If no one is working on this, I would like to take the bug forward. Please let me know what steps shall I undertake. Thanks !!", "attachment_id": null, "time": "2013-09-30T05:09:00Z", "tags": [], "text": "If no one is working on this, I would like to take the bug forward. Please let me know what steps shall I undertake. Thanks !!", "count": 7, "author": "amod.narvekar@gmail.com", "creator": "amod.narvekar@gmail.com", "is_private": false, "creation_time": "2013-09-30T05:09:00Z", "id": 7915450, "bug_id": 684192}, {"creator": "bug-husbandry-bot@mozilla.bugs", "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven't been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "count": 8, "author": "bug-husbandry-bot@mozilla.bugs", "bug_id": 684192, "id": 13435407, "creation_time": "2018-06-29T04:40:24Z", "is_private": false, "time": "2018-06-29T04:40:24Z", "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven't been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "attachment_id": null, "tags": []}]}}, "comments": {}}