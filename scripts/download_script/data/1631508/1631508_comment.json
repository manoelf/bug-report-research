{"comments": {}, "bugs": {"1631508": {"comments": [{"author": "tcampbell@mozilla.com", "id": 14766976, "is_private": false, "text": "+++ This bug was initially created as a clone of Bug #1630607 +++\n\nMaking new bug to track the fixes for exposed bug since they will require uplifts.\n\nThe `MEffectiveAddress` code-gen in IonMonkey for ARM64 mixes up 32-bit and 64-bit modes leading to type-confusion (and then worse).", "raw_text": "+++ This bug was initially created as a clone of Bug #1630607 +++\n\nMaking new bug to track the fixes for exposed bug since they will require uplifts.\n\nThe `MEffectiveAddress` code-gen in IonMonkey for ARM64 mixes up 32-bit and 64-bit modes leading to type-confusion (and then worse).", "attachment_id": null, "bug_id": 1631508, "creation_time": "2020-04-20T17:05:13Z", "creator": "tcampbell@mozilla.com", "time": "2020-04-20T17:05:13Z", "tags": [], "count": 0}, {"creation_time": "2020-04-20T17:06:44Z", "creator": "tcampbell@mozilla.com", "time": "2020-04-20T17:06:44Z", "tags": [], "count": 1, "author": "tcampbell@mozilla.com", "id": 14766982, "is_private": false, "text": "Created attachment 9141767\nBug 1631508 - Fix LEffectiveAddress on ARM64", "raw_text": "", "attachment_id": 9141767, "bug_id": 1631508}, {"creation_time": "2020-04-20T17:23:24Z", "creator": "tcampbell@mozilla.com", "time": "2020-04-20T17:23:24Z", "tags": [], "count": 2, "id": 14767031, "author": "tcampbell@mozilla.com", "is_private": false, "text": "Note that the analysis that uncovered the root cause here was landed a few days ago, backed out, and the bug was hidden. https://bugzilla.mozilla.org/show_bug.cgi?id=1630607#c4\n\nI consider this to be a very low regression risk. The change is only at the instruction selection level between a 32-bit and 64-bit `add`. The `MEffectiveAddress` is only used for 32-bit inputs and outputs.", "raw_text": "Note that the analysis that uncovered the root cause here was landed a few days ago, backed out, and the bug was hidden. https://bugzilla.mozilla.org/show_bug.cgi?id=1630607#c4\n\nI consider this to be a very low regression risk. The change is only at the instruction selection level between a 32-bit and 64-bit `add`. The `MEffectiveAddress` is only used for 32-bit inputs and outputs.", "attachment_id": null, "bug_id": 1631508}, {"tags": [], "count": 3, "time": "2020-04-20T17:32:24Z", "creation_time": "2020-04-20T17:32:24Z", "creator": "tcampbell@mozilla.com", "bug_id": 1631508, "attachment_id": null, "is_private": false, "text": "One concern here is if the patch makes it straightforward to guess how this might be abused. It is relatively straightforward (though not trivial) for folks who understand typical JIT attacks. The patch as-is is the lowest risk to perf and stability which is nice.", "raw_text": "One concern here is if the patch makes it straightforward to guess how this might be abused. It is relatively straightforward (though not trivial) for folks who understand typical JIT attacks. The patch as-is is the lowest risk to perf and stability which is nice.", "author": "tcampbell@mozilla.com", "id": 14767062}, {"creation_time": "2020-04-21T12:45:12Z", "author": "tcampbell@mozilla.com", "id": 14768885, "creator": "tcampbell@mozilla.com", "is_private": false, "raw_text": "### Security Approval Request\n* **How easily could an exploit be constructed based on the patch?**: The patch unfortunately highlights the incorrect code-gen instruction, but it does not point in any way on if/how this could be abused. A sophisticated JIT attacker may have already noticed Bug 1630607 bouncing and being marked hidden, which exposes the first hint of a test case.\n* **Do comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?**: No\n* **Which older supported branches are affected by this flaw?**: all\n* **If not all supported branches, which bug introduced the flaw?**: Bug 1536220\n* **Do you have backports for the affected branches?**: Yes\n* **If not, how different, hard to create, and risky will they be?**: Patch applies as-is to all supported branches (esr-68+).\n* **How likely is this patch to cause regressions; how much testing does it need?**: Very low risk. This patch generates a 32-bit add instruction instead of the erroneous 64-bit and actually brings the code closer to all the sibling methods which have been stable.", "text": "Comment on attachment 9141767\nBug 1631508 - Fix LEffectiveAddress on ARM64\n\n### Security Approval Request\n* **How easily could an exploit be constructed based on the patch?**: The patch unfortunately highlights the incorrect code-gen instruction, but it does not point in any way on if/how this could be abused. A sophisticated JIT attacker may have already noticed Bug 1630607 bouncing and being marked hidden, which exposes the first hint of a test case.\n* **Do comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?**: No\n* **Which older supported branches are affected by this flaw?**: all\n* **If not all supported branches, which bug introduced the flaw?**: Bug 1536220\n* **Do you have backports for the affected branches?**: Yes\n* **If not, how different, hard to create, and risky will they be?**: Patch applies as-is to all supported branches (esr-68+).\n* **How likely is this patch to cause regressions; how much testing does it need?**: Very low risk. This patch generates a 32-bit add instruction instead of the erroneous 64-bit and actually brings the code closer to all the sibling methods which have been stable.", "attachment_id": 9141767, "time": "2020-04-21T12:45:12Z", "tags": [], "count": 4, "bug_id": 1631508}, {"count": 5, "tags": [], "time": "2020-04-22T01:00:46Z", "creator": "dveditz@mozilla.com", "creation_time": "2020-04-22T01:00:46Z", "bug_id": 1631508, "attachment_id": 9141767, "raw_text": "sec-approval+ and beta uplift approval, a=dveditz--though if you add \"a=\" to the check-in comment please blame a=ryanvm instead :-)", "text": "Comment on attachment 9141767\nBug 1631508 - Fix LEffectiveAddress on ARM64\n\nsec-approval+ and beta uplift approval, a=dveditz--though if you add \"a=\" to the check-in comment please blame a=ryanvm instead :-)", "is_private": false, "id": 14770611, "author": "dveditz@mozilla.com"}, {"time": "2020-04-22T01:20:26Z", "attachment_id": null, "tags": [], "bug_id": 1631508, "count": 6, "creation_time": "2020-04-22T01:20:26Z", "id": 14770638, "author": "ryanvm@gmail.com", "creator": "ryanvm@gmail.com", "is_private": false, "raw_text": "Oh, I see how it is!\n\nhttps://hg.mozilla.org/integration/autoland/rev/7df73d03369154cbd999cde650e63870b83accde", "text": "Oh, I see how it is!\n\nhttps://hg.mozilla.org/integration/autoland/rev/7df73d03369154cbd999cde650e63870b83accde"}, {"attachment_id": null, "bug_id": 1631508, "id": 14771262, "author": "aryx.bugmail@gmx-topmail.de", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/7df73d033691", "text": "https://hg.mozilla.org/mozilla-central/rev/7df73d033691", "is_private": false, "time": "2020-04-22T09:50:12Z", "count": 7, "tags": [], "creator": "aryx.bugmail@gmx-topmail.de", "creation_time": "2020-04-22T09:50:12Z"}, {"is_private": false, "text": "https://hg.mozilla.org/releases/mozilla-beta/rev/9eaa47baf725", "raw_text": "https://hg.mozilla.org/releases/mozilla-beta/rev/9eaa47baf725", "author": "aryx.bugmail@gmx-topmail.de", "id": 14771572, "bug_id": 1631508, "attachment_id": null, "creation_time": "2020-04-22T13:20:09Z", "creator": "aryx.bugmail@gmx-topmail.de", "tags": ["uplift"], "count": 8, "time": "2020-04-22T13:20:09Z"}, {"attachment_id": 9141767, "bug_id": 1631508, "author": "ryanvm@gmail.com", "id": 14772278, "text": "Comment on attachment 9141767\nBug 1631508 - Fix LEffectiveAddress on ARM64\n\nApproved for 68.8esr also.", "raw_text": "Approved for 68.8esr also.", "is_private": false, "time": "2020-04-22T17:34:47Z", "count": 9, "tags": [], "creator": "ryanvm@gmail.com", "creation_time": "2020-04-22T17:34:47Z"}, {"attachment_id": null, "bug_id": 1631508, "id": 14772461, "author": "ryanvm@gmail.com", "is_private": false, "text": "https://hg.mozilla.org/releases/mozilla-esr68/rev/4a624d942e37", "raw_text": "https://hg.mozilla.org/releases/mozilla-esr68/rev/4a624d942e37", "time": "2020-04-22T19:18:31Z", "tags": [], "count": 10, "creation_time": "2020-04-22T19:18:31Z", "creator": "ryanvm@gmail.com"}]}}}