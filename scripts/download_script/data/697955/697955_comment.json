{"comments": {}, "bugs": {"697955": {"comments": [{"author": "gkrizsanits@mozilla.com", "creator": "gkrizsanits@mozilla.com", "creation_time": "2011-10-28T09:38:30Z", "time": "2011-10-28T09:38:30Z", "is_private": false, "id": 5810975, "count": 0, "tags": [], "text": "So after I implemented document-element-inserted event for MediaDocuments and created jetpack tests for it I also realised this issue. \n\nIf I understand it correctly the reason behind this issue is that in nsDocumentViewer.cpp here:\n\n  // XXXbz imagelib kills off the document load for a full-page image with\n  // NS_ERROR_PARSED_DATA_CACHED if it's in the cache.  So we want to treat\n  // that one as a success code; otherwise whether we fire onload for the image\n  // will depend on whether it's cached!\n  if(window &&\n     (NS_SUCCEEDED(aStatus) || aStatus == NS_ERROR_PARSED_DATA_CACHED)) {\n\nthe aStatus is NS_BINDING_ABORTED for video documents that come from:\n\nMediaDocument.cpp MediaDocumentStreamListener::OnStartRequest\n\nIf I understand onload event correctly we could simply solve this by enable aStatus == NS_BINDING_ABORTED, however I have no clue yet what side effect might that cause...", "bug_id": 697955, "raw_text": "So after I implemented document-element-inserted event for MediaDocuments and created jetpack tests for it I also realised this issue. \n\nIf I understand it correctly the reason behind this issue is that in nsDocumentViewer.cpp here:\n\n  // XXXbz imagelib kills off the document load for a full-page image with\n  // NS_ERROR_PARSED_DATA_CACHED if it's in the cache.  So we want to treat\n  // that one as a success code; otherwise whether we fire onload for the image\n  // will depend on whether it's cached!\n  if(window &&\n     (NS_SUCCEEDED(aStatus) || aStatus == NS_ERROR_PARSED_DATA_CACHED)) {\n\nthe aStatus is NS_BINDING_ABORTED for video documents that come from:\n\nMediaDocument.cpp MediaDocumentStreamListener::OnStartRequest\n\nIf I understand onload event correctly we could simply solve this by enable aStatus == NS_BINDING_ABORTED, however I have no clue yet what side effect might that cause...", "attachment_id": null}, {"time": "2011-10-28T14:55:56Z", "creation_time": "2011-10-28T14:55:56Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "count": 1, "id": 5811362, "is_private": false, "text": "Enabling onload for NS_BINDING_ABORTED would be totally wrong.\n\nWe should change the cancel code used by MediaDocumentStreamListener::OnStartRequest.  Why is it canceling the channel at that point anyway, exactly?", "bug_id": 697955, "tags": [], "attachment_id": null, "raw_text": "Enabling onload for NS_BINDING_ABORTED would be totally wrong.\n\nWe should change the cancel code used by MediaDocumentStreamListener::OnStartRequest.  Why is it canceling the channel at that point anyway, exactly?"}, {"tags": [], "bug_id": 697955, "text": "I only found this: bug 466384", "raw_text": "I only found this: bug 466384", "attachment_id": null, "author": "gkrizsanits@mozilla.com", "creator": "gkrizsanits@mozilla.com", "creation_time": "2011-10-28T14:59:00Z", "time": "2011-10-28T14:59:00Z", "is_private": false, "count": 2, "id": 5811366}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "creation_time": "2011-10-28T15:11:29Z", "time": "2011-10-28T15:11:29Z", "is_private": false, "id": 5811400, "count": 3, "bug_id": 697955, "text": "Ah. Yeah, that should be returning NS_ERROR_PARSED_DATA_CACHED then.", "tags": [], "raw_text": "Ah. Yeah, that should be returning NS_ERROR_PARSED_DATA_CACHED then.", "attachment_id": null}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-10-28T15:11:51Z", "time": "2011-10-28T15:11:51Z", "creator": "bzbarsky@mit.edu", "count": 4, "id": 5811403, "is_private": false, "bug_id": 697955, "text": "And note that this behavior is claimed to be specific to file://, yes?", "tags": [], "raw_text": "And note that this behavior is claimed to be specific to file://, yes?", "attachment_id": null}, {"text": "(In reply to Boris Zbarsky (:bz) from comment #4)\n> And note that this behavior is claimed to be specific to file://, yes?\n\nActually I have the same behaviour for any online ogv video as well, not only local files. Also, I'm still debugging where is that NS_BINDING_ABORTED coming from. I assumed that it must come from the MediaDocumentStreamListener::OnStartRequest but I'm not sure. It originates from the nsDocLoader::DocLoaderIsEmpty, from a mLoadGroup->GetStatus(&loadGroupStatus) call. Currently I'm trying to catch that moment where it is set, and understand more about this whole area...", "bug_id": 697955, "tags": [], "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #4)\n> And note that this behavior is claimed to be specific to file://, yes?\n\nActually I have the same behaviour for any online ogv video as well, not only local files. Also, I'm still debugging where is that NS_BINDING_ABORTED coming from. I assumed that it must come from the MediaDocumentStreamListener::OnStartRequest but I'm not sure. It originates from the nsDocLoader::DocLoaderIsEmpty, from a mLoadGroup->GetStatus(&loadGroupStatus) call. Currently I'm trying to catch that moment where it is set, and understand more about this whole area...", "attachment_id": null, "author": "gkrizsanits@mozilla.com", "time": "2011-10-31T10:32:00Z", "creation_time": "2011-10-31T10:32:00Z", "creator": "gkrizsanits@mozilla.com", "id": 5814772, "count": 5, "is_private": false}, {"is_private": false, "id": 5815083, "count": 6, "creator": "bzbarsky@mit.edu", "time": "2011-10-31T14:43:38Z", "creation_time": "2011-10-31T14:43:38Z", "author": "bzbarsky@mit.edu", "attachment_id": null, "raw_text": "> I assumed that it must come from the MediaDocumentStreamListener::OnStartRequest\n\nThat seems like the most likely place to me, yes.  Does changing that not fix the bug?", "tags": [], "text": "> I assumed that it must come from the MediaDocumentStreamListener::OnStartRequest\n\nThat seems like the most likely place to me, yes.  Does changing that not fix the bug?", "bug_id": 697955}, {"text": "Created attachment 570703\nproposed fix\n\nIt does fix it. I just wanted to be sure that it fixes it in every cases, since there are tons of places in the code where NS_BINDING_ABORTED is used. But I could not reproduce the bug after the fix. I would love to run all tests to be sure that it does not cause any side effects though. Shall I ask for an L1 password for this?", "bug_id": 697955, "tags": [], "raw_text": "It does fix it. I just wanted to be sure that it fixes it in every cases, since there are tons of places in the code where NS_BINDING_ABORTED is used. But I could not reproduce the bug after the fix. I would love to run all tests to be sure that it does not cause any side effects though. Shall I ask for an L1 password for this?", "attachment_id": 570703, "author": "gkrizsanits@mozilla.com", "creation_time": "2011-10-31T15:06:14Z", "time": "2011-10-31T15:06:14Z", "creator": "gkrizsanits@mozilla.com", "id": 5815116, "count": 7, "is_private": false}, {"bug_id": 697955, "text": "Comment on attachment 570703\nproposed fix\n\nPlease add a test for this?  If you put a media document in an iframe, does the onload on the iframe fire without this patch, for example?", "tags": [], "raw_text": "Please add a test for this?  If you put a media document in an iframe, does the onload on the iframe fire without this patch, for example?", "attachment_id": 570703, "author": "bzbarsky@mit.edu", "time": "2011-11-01T02:05:39Z", "creation_time": "2011-11-01T02:05:39Z", "creator": "bzbarsky@mit.edu", "count": 8, "id": 5817035, "is_private": false}, {"id": 5820447, "count": 9, "is_private": false, "author": "gkrizsanits@mozilla.com", "creation_time": "2011-11-02T13:05:25Z", "time": "2011-11-02T13:05:25Z", "creator": "gkrizsanits@mozilla.com", "raw_text": "Sure, I will. I'm having some serious dev. env. issues right now, but will get back to this soon after I have my system stable and reliable again.", "attachment_id": null, "tags": [], "text": "Sure, I will. I'm having some serious dev. env. issues right now, but will get back to this soon after I have my system stable and reliable again.", "bug_id": 697955}, {"is_private": false, "id": 5834009, "count": 10, "creator": "gkrizsanits@mozilla.com", "creation_time": "2011-11-08T15:09:48Z", "time": "2011-11-08T15:09:48Z", "author": "gkrizsanits@mozilla.com", "attachment_id": 572804, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #8)\n> Please add a test for this?  If you put a media document in an iframe, does\n> the onload on the iframe fire without this patch, for example?\n\nThe same thing for in an iframe. Without the patch the event is not fired with the patch it is fired.", "tags": [], "text": "Created attachment 572804\nproposed fix with test\n\n(In reply to Boris Zbarsky (:bz) from comment #8)\n> Please add a test for this?  If you put a media document in an iframe, does\n> the onload on the iframe fire without this patch, for example?\n\nThe same thing for in an iframe. Without the patch the event is not fired with the patch it is fired.", "bug_id": 697955}, {"creator": "bzbarsky@mit.edu", "time": "2011-11-09T03:20:59Z", "creation_time": "2011-11-09T03:20:59Z", "author": "bzbarsky@mit.edu", "is_private": false, "count": 11, "id": 5836084, "tags": [], "text": "Comment on attachment 572804\nproposed fix with test\n\nThe timeout thing is no good; it'll trigger random orange.\n\nWhy not just do this:\n\n  <script>\n    SimpleTest.waitForExplicitFinish();\n  </script>\n  <iframe src=\"short-video.ogv\" onload=\"SimpleTest.finish()\"></iframe>\n\nwhich should be non-racy and all?  The failure behavior if the event doesn't fire will be the test timing out, but that's fine.", "bug_id": 697955, "attachment_id": 572804, "raw_text": "The timeout thing is no good; it'll trigger random orange.\n\nWhy not just do this:\n\n  <script>\n    SimpleTest.waitForExplicitFinish();\n  </script>\n  <iframe src=\"short-video.ogv\" onload=\"SimpleTest.finish()\"></iframe>\n\nwhich should be non-racy and all?  The failure behavior if the event doesn't fire will be the test timing out, but that's fine."}, {"text": "Created attachment 573179\nfixed test\n\n(In reply to Boris Zbarsky (:bz) from comment #11)\n> Comment on attachment 572804 [diff] [details] [review]\n> Why not just do this:\n\nI wanted the test to guard against double event too. I think I just overcomplicated it...", "bug_id": 697955, "tags": [], "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #11)\n> Comment on attachment 572804 [diff] [details] [review]\n> Why not just do this:\n\nI wanted the test to guard against double event too. I think I just overcomplicated it...", "attachment_id": 573179, "author": "gkrizsanits@mozilla.com", "creation_time": "2011-11-09T14:30:12Z", "time": "2011-11-09T14:30:12Z", "creator": "gkrizsanits@mozilla.com", "id": 5836896, "count": 12, "is_private": false}, {"time": "2011-12-13T14:41:19Z", "creation_time": "2011-12-13T14:41:19Z", "creator": "gkrizsanits@mozilla.com", "author": "gkrizsanits@mozilla.com", "id": 5912012, "count": 13, "is_private": false, "text": "bz: Is this test good as it is or shall I change something on it?", "bug_id": 697955, "tags": [], "attachment_id": null, "raw_text": "bz: Is this test good as it is or shall I change something on it?"}, {"count": 14, "id": 5912759, "is_private": false, "author": "bzbarsky@mit.edu", "time": "2011-12-13T18:56:10Z", "creation_time": "2011-12-13T18:56:10Z", "creator": "bzbarsky@mit.edu", "raw_text": "r=me", "attachment_id": 573179, "tags": [], "text": "Comment on attachment 573179\nfixed test\n\nr=me", "bug_id": 697955}, {"bug_id": 697955, "text": "Created attachment 581575\nfinal version\n\nI found some CR's in the previous patch so I fixed it. Other than that it's the same. Ed, could you check this in for me?", "tags": [], "raw_text": "I found some CR's in the previous patch so I fixed it. Other than that it's the same. Ed, could you check this in for me?", "attachment_id": 581575, "author": "gkrizsanits@mozilla.com", "creation_time": "2011-12-14T11:09:32Z", "time": "2011-12-14T11:09:32Z", "creator": "gkrizsanits@mozilla.com", "id": 5915064, "count": 15, "is_private": false}, {"is_private": false, "count": 16, "id": 5915117, "creator": "emorley@mozilla.com", "time": "2011-12-14T11:56:12Z", "creation_time": "2011-12-14T11:56:12Z", "author": "emorley@mozilla.com", "attachment_id": null, "raw_text": "This is waiting on bug 709193. Also, has this been past try? :-)", "tags": [], "text": "This is waiting on bug 709193. Also, has this been past try? :-)", "bug_id": 697955}, {"bug_id": 697955, "text": "(In reply to Ed Morley [:edmorley] from comment #16)\n> This is waiting on bug 709193. Also, has this been past try? :-)\n\nThis looks like a pass to me: https://tbpl.mozilla.org/?tree=Try&rev=4a33ea8a7a0a\nThe jetpack tests had some oranges but I checked with Alex and it's a none issue ( bug 705011 )", "tags": [], "raw_text": "(In reply to Ed Morley [:edmorley] from comment #16)\n> This is waiting on bug 709193. Also, has this been past try? :-)\n\nThis looks like a pass to me: https://tbpl.mozilla.org/?tree=Try&rev=4a33ea8a7a0a\nThe jetpack tests had some oranges but I checked with Alex and it's a none issue ( bug 705011 )", "attachment_id": null, "author": "gkrizsanits@mozilla.com", "creator": "gkrizsanits@mozilla.com", "time": "2011-12-14T16:00:38Z", "creation_time": "2011-12-14T16:00:38Z", "is_private": false, "count": 17, "id": 5915689}, {"creation_time": "2011-12-14T16:33:20Z", "time": "2011-12-14T16:33:20Z", "creator": "gkrizsanits@mozilla.com", "author": "gkrizsanits@mozilla.com", "id": 5915814, "count": 18, "is_private": false, "tags": [], "text": "So I misinterpreted the output of the try server, ignore my previous comment.", "bug_id": 697955, "attachment_id": null, "raw_text": "So I misinterpreted the output of the try server, ignore my previous comment."}, {"count": 19, "id": 5916062, "is_private": false, "creation_time": "2011-12-14T17:38:40Z", "time": "2011-12-14T17:38:40Z", "creator": "gkrizsanits@mozilla.com", "author": "gkrizsanits@mozilla.com", "attachment_id": null, "raw_text": "So I found the reason why is the test failing: Bug 521359\nI need to rethink without this how can we use the document-element-inserted in jetpack page-mods.", "bug_id": 697955, "text": "So I found the reason why is the test failing: Bug 521359\nI need to rethink without this how can we use the document-element-inserted in jetpack page-mods.", "tags": []}, {"attachment_id": null, "raw_text": "Since this onload event for MediaDocuments (videos and audios) is going against the specs, this is a won't fix...", "tags": [], "bug_id": 697955, "text": "Since this onload event for MediaDocuments (videos and audios) is going against the specs, this is a won't fix...", "id": 5918412, "count": 20, "is_private": false, "time": "2011-12-15T10:55:21Z", "creation_time": "2011-12-15T10:55:21Z", "creator": "gkrizsanits@mozilla.com", "author": "gkrizsanits@mozilla.com"}, {"tags": [], "bug_id": 697955, "text": "(In reply to Gabor Krizsanits [:krizsa :gabor] from comment #20)\n> Since this onload event for MediaDocuments (videos and audios) is going\n> against the specs, this is a won't fix...\n\nIs it? Link?", "attachment_id": null, "raw_text": "(In reply to Gabor Krizsanits [:krizsa :gabor] from comment #20)\n> Since this onload event for MediaDocuments (videos and audios) is going\n> against the specs, this is a won't fix...\n\nIs it? Link?", "time": "2011-12-15T18:00:16Z", "creation_time": "2011-12-15T18:00:16Z", "creator": "Ms2ger@gmail.com", "author": "Ms2ger@gmail.com", "count": 21, "id": 5919352, "is_private": false}, {"is_private": false, "count": 22, "id": 5919919, "creator": "gkrizsanits@mozilla.com", "creation_time": "2011-12-15T20:18:56Z", "time": "2011-12-15T20:18:56Z", "author": "gkrizsanits@mozilla.com", "attachment_id": null, "raw_text": "(In reply to Ms2ger from comment #21)\n> Is it? Link?\n\nI'll be honest, I've never seen that spec... According to the old fashioned definition of onload event I even thought that we should fire this event. But I've just seen Bug 521359 and then read Robert's blog about it: http://robert.ocallahan.org/2009/10/removing-media-element-event_16.html and it was convincing enough for me. Shall I CC-him? Also, if I'm overlooking something here let me know.", "tags": [], "bug_id": 697955, "text": "(In reply to Ms2ger from comment #21)\n> Is it? Link?\n\nI'll be honest, I've never seen that spec... According to the old fashioned definition of onload event I even thought that we should fire this event. But I've just seen Bug 521359 and then read Robert's blog about it: http://robert.ocallahan.org/2009/10/removing-media-element-event_16.html and it was convincing enough for me. Shall I CC-him? Also, if I'm overlooking something here let me know."}, {"attachment_id": null, "raw_text": "That's something else entirely afaict.", "tags": [], "bug_id": 697955, "text": "That's something else entirely afaict.", "is_private": false, "count": 23, "id": 5919948, "creator": "Ms2ger@gmail.com", "time": "2011-12-15T20:42:49Z", "creation_time": "2011-12-15T20:42:49Z", "author": "Ms2ger@gmail.com"}, {"raw_text": "Ms2ger is correct. That blog post says that we no longer fire a \"load\" event targeted at <video> and <audio> elements when they complete loading.\n\nDocuments containing media elements should still fire a \"load\" event targeted at the document, but note that media elements in a document delay the \"load\" event of the document until all contained media elements have either reached HAVE_CURRENT_DATA readyState or they've decided they can't load any resource.\n\nFor more info see:\n\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#delaying-the-load-event-flag\n\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#concept-media-load-resource", "id": 5920209, "count": 24, "is_private": false, "attachment_id": null, "tags": [], "text": "Ms2ger is correct. That blog post says that we no longer fire a \"load\" event targeted at <video> and <audio> elements when they complete loading.\n\nDocuments containing media elements should still fire a \"load\" event targeted at the document, but note that media elements in a document delay the \"load\" event of the document until all contained media elements have either reached HAVE_CURRENT_DATA readyState or they've decided they can't load any resource.\n\nFor more info see:\n\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#delaying-the-load-event-flag\n\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#concept-media-load-resource", "bug_id": 697955, "author": "chris@pearce.org.nz", "time": "2011-12-15T21:58:23Z", "creation_time": "2011-12-15T21:58:23Z", "creator": "chris@pearce.org.nz"}, {"author": "gkrizsanits@mozilla.com", "creation_time": "2012-01-03T16:53:46Z", "time": "2012-01-03T16:53:46Z", "creator": "gkrizsanits@mozilla.com", "id": 5951141, "count": 25, "is_private": false, "text": "I've got back to this bug and I'm a bit stuck on this one. Now it is clear what we should do but I don't get how to do it and why does my patch has this side effect. So my patch allowed to fired exactly the document load event (http://mxr.mozilla.org/mozilla-central/source/layout/base/nsDocumentViewer.cpp#1048) and I don't get how does the load event for the media element fired because of this (this event is fired as a side effect: http://mxr.mozilla.org/mozilla-central/source/content/media/test/test_playback.html?force=1#66)\n\nAnyone could give me a hint how to progress with this bug? I cannot find the place where the load event related to the media element is fired...", "bug_id": 697955, "tags": [], "raw_text": "I've got back to this bug and I'm a bit stuck on this one. Now it is clear what we should do but I don't get how to do it and why does my patch has this side effect. So my patch allowed to fired exactly the document load event (http://mxr.mozilla.org/mozilla-central/source/layout/base/nsDocumentViewer.cpp#1048) and I don't get how does the load event for the media element fired because of this (this event is fired as a side effect: http://mxr.mozilla.org/mozilla-central/source/content/media/test/test_playback.html?force=1#66)\n\nAnyone could give me a hint how to progress with this bug? I cannot find the place where the load event related to the media element is fired...", "attachment_id": null}, {"creator": "roc@ocallahan.org", "creation_time": "2012-01-04T01:28:01Z", "time": "2012-01-04T01:28:01Z", "author": "roc@ocallahan.org", "is_private": false, "id": 5952920, "count": 26, "bug_id": 697955, "text": "The test looks valid to me. This entire bug is unrelated to whether elements fire a \"load\" event. Can you explain why the test fails?", "tags": [], "attachment_id": null, "raw_text": "The test looks valid to me. This entire bug is unrelated to whether elements fire a \"load\" event. Can you explain why the test fails?"}, {"raw_text": "No, I don't understand it. The reason why I was mixed up the two events because this test is failing if I apply my patch. So I played with it a little and it turns out that even without my patch running only the test_playback.html test in standalone mode, it fails. But if I run all the tests then it's passing (still without my patch), and fails every now and then with my patch. So it looks like the load event for media elements are fired without my patch just because some timing issue the test fails to detect it, and my patch is enough change to make the test work all of a sudden (not in every case though...). Then again, I have no clue where is the media element related load even fired... But running the test_playback.html standalone fails 100% of the time, unrelated to my patch so I guess we should open a new bug for that and when it is fixed I could land this patch (after updating it...).", "attachment_id": null, "bug_id": 697955, "text": "No, I don't understand it. The reason why I was mixed up the two events because this test is failing if I apply my patch. So I played with it a little and it turns out that even without my patch running only the test_playback.html test in standalone mode, it fails. But if I run all the tests then it's passing (still without my patch), and fails every now and then with my patch. So it looks like the load event for media elements are fired without my patch just because some timing issue the test fails to detect it, and my patch is enough change to make the test work all of a sudden (not in every case though...). Then again, I have no clue where is the media element related load even fired... But running the test_playback.html standalone fails 100% of the time, unrelated to my patch so I guess we should open a new bug for that and when it is fixed I could land this patch (after updating it...).", "tags": [], "count": 27, "id": 5954288, "is_private": false, "author": "gkrizsanits@mozilla.com", "time": "2012-01-04T16:59:00Z", "creation_time": "2012-01-04T16:59:00Z", "creator": "gkrizsanits@mozilla.com"}, {"is_private": false, "count": 28, "id": 5955370, "creator": "roc@ocallahan.org", "creation_time": "2012-01-04T21:55:10Z", "time": "2012-01-04T21:55:10Z", "author": "roc@ocallahan.org", "attachment_id": null, "raw_text": "You're saying test_playback sees a load event fire on the element for you?", "text": "You're saying test_playback sees a load event fire on the element for you?", "bug_id": 697955, "tags": []}, {"tags": [], "text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #28)\n> You're saying test_playback sees a load event fire on the element for you?\n\nYes. Let me be very explicit. Clean checkout, Win 7, 32 bit debug build (no opt) command: \nTEST_PATH=content/media/test/test_playback.html make -C obj-debug mochitest-plain fails with: \n\nPassed: 1299\nFailed: 70\nTodo: 0\nfailed | r11025_u8_c1_trunc.wav should not fire 'load' event\nfailed | r11025_u8_c1.wav should not fire 'load' event\nfailed | r11025_s16_c1_trailing.wav should not fire 'load' event\nfailed | r11025_s16_c1_trailing.wav should not fire 'load' event\nfailed | r16000_u8_c1_list.wav should not fire 'load' event\nfailed | r16000_u8_c1_list.wav should not fire 'load' event\nfailed | bug461281.ogg should not fire 'load' event\nfailed | bug461281.ogg should not fire 'load' event\nfailed | bug482461.ogv should not fire 'load' event\nfailed | bug482461.ogv should not fire 'load' event\nfailed | bug482461-theora.ogv should not fire 'load' event\nfailed | bug482461-theora.ogv should not fire 'load' event\nfailed | bug500311.ogv should not fire 'load' event\nfailed | bug500311.ogv should not fire 'load' event\nfailed | small-shot.ogg should not fire 'load' event\nfailed | small-shot.ogg should not fire 'load' event\nfailed | short-video.ogv should not fire 'load' event\nfailed | short-video.ogv should not fire 'load' event\nfailed | bug504613.ogv should not fire 'load' event\nfailed | bug504613.ogv should not fire 'load' event\nfailed | bug516323.ogv should not fire 'load' event\nfailed | bug516323.ogv should not fire 'load' event\nfailed | bug556821.ogv should not fire 'load' event\nfailed | bug556821.ogv should not fire 'load' event\nfailed | beta-phrasebook.ogg should not fire 'load' event\nfailed | beta-phrasebook.ogg should not fire 'load' event\nfailed | bug520493.ogg should not fire 'load' event\nfailed | bug520493.ogg should not fire 'load' event\nfailed | bug520500.ogg should not fire 'load' event\nfailed | bug520500.ogg should not fire 'load' event\nfailed | bug499519.ogv should not fire 'load' event\nfailed | bug499519.ogv should not fire 'load' event\nfailed | bug506094.ogv should not fire 'load' event\nfailed | bug506094.ogv should not fire 'load' event\nfailed | bug498855-1.ogv should not fire 'load' event\nfailed | bug498855-1.ogv should not fire 'load' event\nfailed | bug498855-2.ogv should not fire 'load' event\nfailed | bug498855-2.ogv should not fire 'load' event\nfailed | bug498855-3.ogv should not fire 'load' event\nfailed | bug498855-3.ogv should not fire 'load' event\nfailed | bug504644.ogv should not fire 'load' event\nfailed | bug504644.ogv should not fire 'load' event\nfailed | chain.ogv should not fire 'load' event\nfailed | chain.ogv should not fire 'load' event\nfailed | bug523816.ogv should not fire 'load' event\nfailed | bug523816.ogv should not fire 'load' event\nfailed | bug495129.ogv should not fire 'load' event\nfailed | bug495129.ogv should not fire 'load' event\nfailed | bug498380.ogv should not fire 'load' event\nfailed | bug498380.ogv should not fire 'load' event\nfailed | bug495794.ogg should not fire 'load' event\nfailed | bug495794.ogg should not fire 'load' event\nfailed | bug557094.ogv should not fire 'load' event\nfailed | bug557094.ogv should not fire 'load' event\nfailed | multiple-bos.ogg should not fire 'load' event\nfailed | multiple-bos.ogg should not fire 'load' event\nfailed | audio-overhang.ogg should not fire 'load' event\nfailed | audio-overhang.ogg should not fire 'load' event\nfailed | video-overhang.ogg should not fire 'load' event\nfailed | video-overhang.ogg should not fire 'load' event\nfailed | audio-gaps.ogg should not fire 'load' event\nfailed | audio-gaps.ogg should not fire 'load' event\nfailed | redirect.sjs?domain=mochi.test:8888&file=320x240.ogv should not fire 'load' event\nfailed | redirect.sjs?domain=mochi.test:8888&file=320x240.ogv should not fire 'load' event\nfailed | seek.webm should not fire 'load' event\nfailed | seek.webm should not fire 'load' event\nfailed | split.webm should not fire 'load' event\nfailed | split.webm should not fire 'load' event\nfailed | spacestorm-1000Hz-100ms.ogg should not fire 'load' event\nfailed | spacestorm-1000Hz-100ms.ogg should not fire 'load' event\n\n\n\nhowever when running command: TEST_PATH=content/media make -C obj-debug mochitest-plain the very same test (and every other media test) passes nicely.\n\nSince I cannot find the place where this load even is fired in the source code I could not really debug it. I suggest to file a new bug about this and make this one dependent on that new bug.", "bug_id": 697955, "attachment_id": null, "raw_text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #28)\n> You're saying test_playback sees a load event fire on the element for you?\n\nYes. Let me be very explicit. Clean checkout, Win 7, 32 bit debug build (no opt) command: \nTEST_PATH=content/media/test/test_playback.html make -C obj-debug mochitest-plain fails with: \n\nPassed: 1299\nFailed: 70\nTodo: 0\nfailed | r11025_u8_c1_trunc.wav should not fire 'load' event\nfailed | r11025_u8_c1.wav should not fire 'load' event\nfailed | r11025_s16_c1_trailing.wav should not fire 'load' event\nfailed | r11025_s16_c1_trailing.wav should not fire 'load' event\nfailed | r16000_u8_c1_list.wav should not fire 'load' event\nfailed | r16000_u8_c1_list.wav should not fire 'load' event\nfailed | bug461281.ogg should not fire 'load' event\nfailed | bug461281.ogg should not fire 'load' event\nfailed | bug482461.ogv should not fire 'load' event\nfailed | bug482461.ogv should not fire 'load' event\nfailed | bug482461-theora.ogv should not fire 'load' event\nfailed | bug482461-theora.ogv should not fire 'load' event\nfailed | bug500311.ogv should not fire 'load' event\nfailed | bug500311.ogv should not fire 'load' event\nfailed | small-shot.ogg should not fire 'load' event\nfailed | small-shot.ogg should not fire 'load' event\nfailed | short-video.ogv should not fire 'load' event\nfailed | short-video.ogv should not fire 'load' event\nfailed | bug504613.ogv should not fire 'load' event\nfailed | bug504613.ogv should not fire 'load' event\nfailed | bug516323.ogv should not fire 'load' event\nfailed | bug516323.ogv should not fire 'load' event\nfailed | bug556821.ogv should not fire 'load' event\nfailed | bug556821.ogv should not fire 'load' event\nfailed | beta-phrasebook.ogg should not fire 'load' event\nfailed | beta-phrasebook.ogg should not fire 'load' event\nfailed | bug520493.ogg should not fire 'load' event\nfailed | bug520493.ogg should not fire 'load' event\nfailed | bug520500.ogg should not fire 'load' event\nfailed | bug520500.ogg should not fire 'load' event\nfailed | bug499519.ogv should not fire 'load' event\nfailed | bug499519.ogv should not fire 'load' event\nfailed | bug506094.ogv should not fire 'load' event\nfailed | bug506094.ogv should not fire 'load' event\nfailed | bug498855-1.ogv should not fire 'load' event\nfailed | bug498855-1.ogv should not fire 'load' event\nfailed | bug498855-2.ogv should not fire 'load' event\nfailed | bug498855-2.ogv should not fire 'load' event\nfailed | bug498855-3.ogv should not fire 'load' event\nfailed | bug498855-3.ogv should not fire 'load' event\nfailed | bug504644.ogv should not fire 'load' event\nfailed | bug504644.ogv should not fire 'load' event\nfailed | chain.ogv should not fire 'load' event\nfailed | chain.ogv should not fire 'load' event\nfailed | bug523816.ogv should not fire 'load' event\nfailed | bug523816.ogv should not fire 'load' event\nfailed | bug495129.ogv should not fire 'load' event\nfailed | bug495129.ogv should not fire 'load' event\nfailed | bug498380.ogv should not fire 'load' event\nfailed | bug498380.ogv should not fire 'load' event\nfailed | bug495794.ogg should not fire 'load' event\nfailed | bug495794.ogg should not fire 'load' event\nfailed | bug557094.ogv should not fire 'load' event\nfailed | bug557094.ogv should not fire 'load' event\nfailed | multiple-bos.ogg should not fire 'load' event\nfailed | multiple-bos.ogg should not fire 'load' event\nfailed | audio-overhang.ogg should not fire 'load' event\nfailed | audio-overhang.ogg should not fire 'load' event\nfailed | video-overhang.ogg should not fire 'load' event\nfailed | video-overhang.ogg should not fire 'load' event\nfailed | audio-gaps.ogg should not fire 'load' event\nfailed | audio-gaps.ogg should not fire 'load' event\nfailed | redirect.sjs?domain=mochi.test:8888&file=320x240.ogv should not fire 'load' event\nfailed | redirect.sjs?domain=mochi.test:8888&file=320x240.ogv should not fire 'load' event\nfailed | seek.webm should not fire 'load' event\nfailed | seek.webm should not fire 'load' event\nfailed | split.webm should not fire 'load' event\nfailed | split.webm should not fire 'load' event\nfailed | spacestorm-1000Hz-100ms.ogg should not fire 'load' event\nfailed | spacestorm-1000Hz-100ms.ogg should not fire 'load' event\n\n\n\nhowever when running command: TEST_PATH=content/media make -C obj-debug mochitest-plain the very same test (and every other media test) passes nicely.\n\nSince I cannot find the place where this load even is fired in the source code I could not really debug it. I suggest to file a new bug about this and make this one dependent on that new bug.", "time": "2012-01-05T09:48:57Z", "creation_time": "2012-01-05T09:48:57Z", "creator": "gkrizsanits@mozilla.com", "author": "gkrizsanits@mozilla.com", "count": 29, "id": 5956571, "is_private": false}, {"time": "2012-01-05T12:11:24Z", "creation_time": "2012-01-05T12:11:24Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "count": 30, "id": 5956757, "is_private": false, "bug_id": 697955, "text": "I filed bug 715469 for that with some debugging info.", "tags": [], "attachment_id": null, "raw_text": "I filed bug 715469 for that with some debugging info."}, {"raw_text": "So I tested the patch after the fix of bug 715469 and the previous issue was fixed but the test_playback.html is still failing randomly.\n\nhttps://tbpl.mozilla.org/?tree=Try&rev=192141ee8a5e\n\n77818 ERROR TEST-UNEXPECTED-FAIL | /tests/content/media/test/test_playback.html | short-video.ogv duration (Infinity) should be around 1.081\n\nBased on the text, the error comes from a previous test: http://mxr.mozilla.org/mozilla-central/source/content/media/test/test_replay_metadata.html?force=1#60\n\nHow can the currentTime be Infinity? Other times the test works just fine (locally at least). roc: do you have any clue how can this happen?", "is_private": false, "attachment_id": null, "id": 6037658, "count": 31, "author": "gkrizsanits@mozilla.com", "bug_id": 697955, "text": "So I tested the patch after the fix of bug 715469 and the previous issue was fixed but the test_playback.html is still failing randomly.\n\nhttps://tbpl.mozilla.org/?tree=Try&rev=192141ee8a5e\n\n77818 ERROR TEST-UNEXPECTED-FAIL | /tests/content/media/test/test_playback.html | short-video.ogv duration (Infinity) should be around 1.081\n\nBased on the text, the error comes from a previous test: http://mxr.mozilla.org/mozilla-central/source/content/media/test/test_replay_metadata.html?force=1#60\n\nHow can the currentTime be Infinity? Other times the test works just fine (locally at least). roc: do you have any clue how can this happen?", "tags": [], "creator": "gkrizsanits@mozilla.com", "creation_time": "2012-02-06T17:54:36Z", "time": "2012-02-06T17:54:36Z"}, {"author": "roc@ocallahan.org", "time": "2012-02-07T00:57:03Z", "creation_time": "2012-02-07T00:57:03Z", "creator": "roc@ocallahan.org", "count": 32, "id": 6039181, "is_private": false, "text": "(In reply to Gabor Krizsanits [:krizsa :gabor] from comment #31)\n> 77818 ERROR TEST-UNEXPECTED-FAIL |\n> /tests/content/media/test/test_playback.html | short-video.ogv duration\n> (Infinity) should be around 1.081\n> \n> Based on the text, the error comes from a previous test:\n> http://mxr.mozilla.org/mozilla-central/source/content/media/test/\n> test_replay_metadata.html?force=1#60\n\nWhy do you think it's not test_playback?\n\n> How can the currentTime be Infinity? Other times the test works just fine\n> (locally at least). roc: do you have any clue how can this happen?\n\nThat means we couldn't find a duration or we thought the resource was a live stream. Odd... Are you sure this isn't a known orange?", "bug_id": 697955, "tags": [], "raw_text": "(In reply to Gabor Krizsanits [:krizsa :gabor] from comment #31)\n> 77818 ERROR TEST-UNEXPECTED-FAIL |\n> /tests/content/media/test/test_playback.html | short-video.ogv duration\n> (Infinity) should be around 1.081\n> \n> Based on the text, the error comes from a previous test:\n> http://mxr.mozilla.org/mozilla-central/source/content/media/test/\n> test_replay_metadata.html?force=1#60\n\nWhy do you think it's not test_playback?\n\n> How can the currentTime be Infinity? Other times the test works just fine\n> (locally at least). roc: do you have any clue how can this happen?\n\nThat means we couldn't find a duration or we thought the resource was a live stream. Odd... Are you sure this isn't a known orange?", "attachment_id": null}, {"tags": [], "bug_id": 697955, "text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #32)\nThanks for the quick response, and sorry for the late answer but it looks like I don't get bugzilla email notifications sometimes so I found your response just now... \n\n> (In reply to Gabor Krizsanits [:krizsa :gabor] from comment #31)\n> \n> Why do you think it's not test_playback?\n\nSo I double checked this it's more likely from http://mxr.mozilla.org/mozilla-central/source/content/media/test/manifest.js#279 which I don't know much about. \n\n> That means we couldn't find a duration or we thought the resource was a live\n> stream. Odd... Are you sure this isn't a known orange?\n\nNo, I'm not, actually my hope that it is a known orange, since it does not really seem to be related to my patch at first glance... So if someone could validate me that this is a good enough result: https://tbpl.mozilla.org/?tree=Try&rev=192141ee8a5e that would be great... Do you know a person I could ping about this?", "attachment_id": null, "raw_text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #32)\nThanks for the quick response, and sorry for the late answer but it looks like I don't get bugzilla email notifications sometimes so I found your response just now... \n\n> (In reply to Gabor Krizsanits [:krizsa :gabor] from comment #31)\n> \n> Why do you think it's not test_playback?\n\nSo I double checked this it's more likely from http://mxr.mozilla.org/mozilla-central/source/content/media/test/manifest.js#279 which I don't know much about. \n\n> That means we couldn't find a duration or we thought the resource was a live\n> stream. Odd... Are you sure this isn't a known orange?\n\nNo, I'm not, actually my hope that it is a known orange, since it does not really seem to be related to my patch at first glance... So if someone could validate me that this is a good enough result: https://tbpl.mozilla.org/?tree=Try&rev=192141ee8a5e that would be great... Do you know a person I could ping about this?", "time": "2012-02-14T08:38:50Z", "creation_time": "2012-02-14T08:38:50Z", "creator": "gkrizsanits@mozilla.com", "author": "gkrizsanits@mozilla.com", "id": 6059049, "count": 33, "is_private": false}, {"raw_text": "(In reply to Gabor Krizsanits [:krizsa :gabor] from comment #33)\n> So if someone could\n> validate me that this is a good enough result:\n> https://tbpl.mozilla.org/?tree=Try&rev=192141ee8a5e that would be great...\n\nThat's orange on every mochitest-1 box; the boxes which run media tests. So I it's a pretty safe bet that's not a known random orange, its a new perma-orange introduced by your patch.", "attachment_id": null, "tags": [], "bug_id": 697955, "text": "(In reply to Gabor Krizsanits [:krizsa :gabor] from comment #33)\n> So if someone could\n> validate me that this is a good enough result:\n> https://tbpl.mozilla.org/?tree=Try&rev=192141ee8a5e that would be great...\n\nThat's orange on every mochitest-1 box; the boxes which run media tests. So I it's a pretty safe bet that's not a known random orange, its a new perma-orange introduced by your patch.", "is_private": false, "count": 34, "id": 6059053, "author": "chris@pearce.org.nz", "creator": "chris@pearce.org.nz", "time": "2012-02-14T08:42:45Z", "creation_time": "2012-02-14T08:42:45Z"}]}}}