{"comments": {}, "bugs": {"668315": {"comments": [{"raw_text": "SMILIntegerType::Interpolate has some manual round-to-nearest int code that I think can be replaced with a call to NS_lround().", "attachment_id": null, "tags": [], "text": "SMILIntegerType::Interpolate has some manual round-to-nearest int code that I think can be replaced with a call to NS_lround().", "bug_id": 668315, "count": 0, "id": 5565314, "is_private": false, "author": "dholbert@mozilla.com", "creation_time": "2011-06-29T19:42:38Z", "time": "2011-06-29T19:42:38Z", "creator": "dholbert@mozilla.com"}, {"author": "dholbert@mozilla.com", "creator": "dholbert@mozilla.com", "creation_time": "2013-10-17T17:52:29Z", "time": "2013-10-17T17:52:29Z", "is_private": false, "count": 1, "id": 7973752, "text": "Specifically:\n86   // When currentVal is exactly midway between its two nearest integers, we\n87   // jump to the \"next\" integer to provide simple, easy to remember and\n88   // consistent behaviour (from the SMIL author's point of view).\n89 \n90   if (startVal < endVal) {\n91     aResult.mU.mInt = int64_t(floor(currentVal + 0.5)); // round mid up\n92   } else {\n93     aResult.mU.mInt = int64_t(ceil(currentVal - 0.5)); // round mid down\n94   }\nhttp://mxr.mozilla.org/mozilla-central/source/content/smil/SMILIntegerType.cpp#86\n\nThough note that NS_lround returns a 32-bit int, not a 64-bit int, so it may not be appropriate here after all.", "bug_id": 668315, "tags": [], "raw_text": "Specifically:\n86   // When currentVal is exactly midway between its two nearest integers, we\n87   // jump to the \"next\" integer to provide simple, easy to remember and\n88   // consistent behaviour (from the SMIL author's point of view).\n89 \n90   if (startVal < endVal) {\n91     aResult.mU.mInt = int64_t(floor(currentVal + 0.5)); // round mid up\n92   } else {\n93     aResult.mU.mInt = int64_t(ceil(currentVal - 0.5)); // round mid down\n94   }\nhttp://mxr.mozilla.org/mozilla-central/source/content/smil/SMILIntegerType.cpp#86\n\nThough note that NS_lround returns a 32-bit int, not a 64-bit int, so it may not be appropriate here after all.", "attachment_id": null}]}}}