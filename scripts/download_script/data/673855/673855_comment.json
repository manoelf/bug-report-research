{"comments": {}, "bugs": {"673855": {"comments": [{"tags": [], "time": "2011-07-25T06:40:11Z", "attachment_id": null, "raw_text": "When I use content search for tiderbox log, it is bad performance to clear search text for long contents.\n\n0:027> ~0k\nChild-SP          RetAddr           Call Site\n00000000`0034aed8 000007fe`e2f9d2ea xul!nsTypedSelection::FindRangeData+0x1c\n00000000`0034aee0 000007fe`e2f9d101 xul!nsTypedSelection::LookUpSelection+0x1be\n00000000`0034af80 000007fe`e2f517a4 xul!nsFrameSelection::LookUpSelection+0x85\n00000000`0034afe0 000007fe`e35ba4f8 xul!nsTextFrame::GetSelectionDetails+0x48\n00000000`0034b020 000007fe`e30dc8a3 xul!nsTextFrame::SetSelectedRange+0x498314\n00000000`0034b090 000007fe`e3101037 xul!nsTypedSelection::selectFrames+0x263\n00000000`0034b120 000007fe`e3002ba9 xul!nsTypedSelection::Clear+0xb7\n00000000`0034b150 000007fe`e32dd7c2 xul!nsTypedSelection::RemoveAllRanges+0x39\n00000000`0034b180 000007fe`e30a4f3f xul!XPTC__InvokebyIndex+0x72\n00000000`0034b1b0 000007fe`e342a411 xul!XPC_WN_CallMethod+0x8af\n00000000`0034b820 000007fe`e342b2b2 xul!CallCompiler::generateNativeStub+0x1c1\n00000000`0034be40 00000000`06fa7918 xul!js::mjit::ic::NativeCall+0x32\n\nnsTypedSelection::FindRangeData is called a lot of times, but this function uses simple for-loop...\n\n 4628 RangeData*\n 4629 nsTypedSelection::FindRangeData(nsIDOMRange* aRange)\n 4630 {\n 4631   NS_ENSURE_TRUE(aRange, nsnull);\n 4632   for (PRUint32 i = 0; i < mRanges.Length(); i++) {\n 4633     if (mRanges[i].mRange == aRange)\n 4634       return &mRanges[i];\n 4635   }\n 4636   return nsnull;\n 4637 }", "id": 5610386, "bug_id": 673855, "is_private": false, "creation_time": "2011-07-25T06:40:11Z", "creator": "m_kato@ga2.so-net.ne.jp", "author": "m_kato@ga2.so-net.ne.jp", "count": 0, "text": "When I use content search for tiderbox log, it is bad performance to clear search text for long contents.\n\n0:027> ~0k\nChild-SP          RetAddr           Call Site\n00000000`0034aed8 000007fe`e2f9d2ea xul!nsTypedSelection::FindRangeData+0x1c\n00000000`0034aee0 000007fe`e2f9d101 xul!nsTypedSelection::LookUpSelection+0x1be\n00000000`0034af80 000007fe`e2f517a4 xul!nsFrameSelection::LookUpSelection+0x85\n00000000`0034afe0 000007fe`e35ba4f8 xul!nsTextFrame::GetSelectionDetails+0x48\n00000000`0034b020 000007fe`e30dc8a3 xul!nsTextFrame::SetSelectedRange+0x498314\n00000000`0034b090 000007fe`e3101037 xul!nsTypedSelection::selectFrames+0x263\n00000000`0034b120 000007fe`e3002ba9 xul!nsTypedSelection::Clear+0xb7\n00000000`0034b150 000007fe`e32dd7c2 xul!nsTypedSelection::RemoveAllRanges+0x39\n00000000`0034b180 000007fe`e30a4f3f xul!XPTC__InvokebyIndex+0x72\n00000000`0034b1b0 000007fe`e342a411 xul!XPC_WN_CallMethod+0x8af\n00000000`0034b820 000007fe`e342b2b2 xul!CallCompiler::generateNativeStub+0x1c1\n00000000`0034be40 00000000`06fa7918 xul!js::mjit::ic::NativeCall+0x32\n\nnsTypedSelection::FindRangeData is called a lot of times, but this function uses simple for-loop...\n\n 4628 RangeData*\n 4629 nsTypedSelection::FindRangeData(nsIDOMRange* aRange)\n 4630 {\n 4631   NS_ENSURE_TRUE(aRange, nsnull);\n 4632   for (PRUint32 i = 0; i < mRanges.Length(); i++) {\n 4633     if (mRanges[i].mRange == aRange)\n 4634       return &mRanges[i];\n 4635   }\n 4636   return nsnull;\n 4637 }"}, {"is_private": false, "creation_time": "2011-07-25T14:35:07Z", "creator": "bzbarsky@mit.edu", "tags": [], "attachment_id": null, "bug_id": 673855, "id": 5610981, "author": "bzbarsky@mit.edu", "count": 1, "text": "I thought we did binary search on mRanges precisely to avoid this sort of problem....", "raw_text": "I thought we did binary search on mRanges precisely to avoid this sort of problem....", "time": "2011-07-25T14:35:07Z"}]}}}