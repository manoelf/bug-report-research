{"bugs": {"1637682": {"comments": [{"creation_time": "2020-05-13T17:40:05Z", "creator": "bugzilla@benj.me", "time": "2020-05-13T17:40:05Z", "tags": [], "count": 0, "author": "bugzilla@benj.me", "id": 14817301, "is_private": false, "raw_text": "Thanks to dmajor who asked about this on slack.\n\nA few fields in Metadata may not be serialized or deserialized: for instance, `bigIntEnabled` isn't serialized and deserialized [here](https://searchfox.org/mozilla-central/source/js/src/wasm/WasmCode.cpp#938,956), leading to undefined behavior [here](https://searchfox.org/mozilla-central/source/js/src/jit/MCallOptimize.cpp#4003).\n\nClassifying as sec bug for now (I'm probably being paranoid), but I'd like that we take time thinking about what the consequences might be. `v128enabled` suffers from the same issue, as far as i can tell.", "text": "Thanks to dmajor who asked about this on slack.\n\nA few fields in Metadata may not be serialized or deserialized: for instance, `bigIntEnabled` isn't serialized and deserialized [here](https://searchfox.org/mozilla-central/source/js/src/wasm/WasmCode.cpp#938,956), leading to undefined behavior [here](https://searchfox.org/mozilla-central/source/js/src/jit/MCallOptimize.cpp#4003).\n\nClassifying as sec bug for now (I'm probably being paranoid), but I'd like that we take time thinking about what the consequences might be. `v128enabled` suffers from the same issue, as far as i can tell.", "attachment_id": null, "bug_id": 1637682}, {"is_private": false, "text": "OK, good find.  It's problematic that we don't have a system that catches these mistakes for us.  We need to fix the problem for BigInt soonish because that rides the FF78 train.", "raw_text": "OK, good find.  It's problematic that we don't have a system that catches these mistakes for us.  We need to fix the problem for BigInt soonish because that rides the FF78 train.", "id": 14817322, "author": "lhansen@mozilla.com", "bug_id": 1637682, "attachment_id": null, "creation_time": "2020-05-13T17:46:26Z", "creator": "lhansen@mozilla.com", "tags": [], "count": 1, "time": "2020-05-13T17:46:26Z"}, {"creator": "away@bugmail.cc", "creation_time": "2020-05-13T17:55:50Z", "time": "2020-05-13T17:55:50Z", "count": 2, "tags": [], "id": 14817393, "author": "away@bugmail.cc", "raw_text": "The clang-10 landing (bug 1616692) bounced because of a ubsan complaint about this (I'm not sure why clang-9's sanitizers don't catch it). I'm very eager to re-land clang-10, since compiler updates bitrot really fast and I'm always catching up with new test failures. I had been planning on adding a suppression for this error while it's investigated, but, seeing that this is potentially a security bug... is that an ok thing to do?", "text": "The clang-10 landing (bug 1616692) bounced because of a ubsan complaint about this (I'm not sure why clang-9's sanitizers don't catch it). I'm very eager to re-land clang-10, since compiler updates bitrot really fast and I'm always catching up with new test failures. I had been planning on adding a suppression for this error while it's investigated, but, seeing that this is potentially a security bug... is that an ok thing to do?", "is_private": false, "attachment_id": null, "bug_id": 1637682}, {"raw_text": "This is at most a nightly-only concern since bigint and simd are nightly-only at the moment.  Simd is even off by default.  As for bigint, it's a new feature no content uses, and it's a boolean flag, so if it should have been false but is read as true we're just enabling code that isn't exercised, and if it should have been true but is read as false then we're at most throwing errors some places we shouldn't be, and we'll see those bug reports.  So suppressing it should be just fine.", "text": "This is at most a nightly-only concern since bigint and simd are nightly-only at the moment.  Simd is even off by default.  As for bigint, it's a new feature no content uses, and it's a boolean flag, so if it should have been false but is read as true we're just enabling code that isn't exercised, and if it should have been true but is read as false then we're at most throwing errors some places we shouldn't be, and we'll see those bug reports.  So suppressing it should be just fine.", "is_private": false, "creator": "lhansen@mozilla.com", "creation_time": "2020-05-13T18:13:28Z", "id": 14817434, "author": "lhansen@mozilla.com", "bug_id": 1637682, "count": 3, "tags": [], "attachment_id": null, "time": "2020-05-13T18:13:28Z"}, {"bug_id": 1637682, "attachment_id": null, "raw_text": ">  It's problematic that we don't have a system that catches these mistakes for us.\n\nThe right way is to put these raw fields in the `MetadataCacheablePod`, which are serialized and deserialized for free.\n\n> we're at most throwing errors some places we shouldn't be\n\nAre we sure it might not cause MOZ_CRASHes? Even so, we could unhide this bug and suppress it then, because mozcrashes are safe.", "text": ">  It's problematic that we don't have a system that catches these mistakes for us.\n\nThe right way is to put these raw fields in the `MetadataCacheablePod`, which are serialized and deserialized for free.\n\n> we're at most throwing errors some places we shouldn't be\n\nAre we sure it might not cause MOZ_CRASHes? Even so, we could unhide this bug and suppress it then, because mozcrashes are safe.", "is_private": false, "id": 14817493, "author": "bugzilla@benj.me", "count": 4, "tags": [], "time": "2020-05-13T18:30:57Z", "creator": "bugzilla@benj.me", "creation_time": "2020-05-13T18:30:57Z"}, {"id": 14817597, "author": "lhansen@mozilla.com", "raw_text": "Yeah, I can look into preparing a patch to move the fields tomorrow.\n\nIn general, the values of these switches that are exposed to about:config must be assumed to change at any moment, so if there's a MOZ_CRASH or other crash then that's a latent bug I think.  I think we've generally been careful about this, we read switches once when compilation starts and then propagate those values, and we try to gate things at high levels (instructions that validate) but not low (specific code generation strategies), though of course bugs happen.\n\nWith that logic in mind, it sort of doesn't make a difference whether the fields are serialized, so long as we don't deserialize them but instead get current values...", "text": "Yeah, I can look into preparing a patch to move the fields tomorrow.\n\nIn general, the values of these switches that are exposed to about:config must be assumed to change at any moment, so if there's a MOZ_CRASH or other crash then that's a latent bug I think.  I think we've generally been careful about this, we read switches once when compilation starts and then propagate those values, and we try to gate things at high levels (instructions that validate) but not low (specific code generation strategies), though of course bugs happen.\n\nWith that logic in mind, it sort of doesn't make a difference whether the fields are serialized, so long as we don't deserialize them but instead get current values...", "is_private": false, "attachment_id": null, "bug_id": 1637682, "creator": "lhansen@mozilla.com", "creation_time": "2020-05-13T19:04:56Z", "time": "2020-05-13T19:04:56Z", "count": 5, "tags": []}, {"id": 14818655, "author": "lhansen@mozilla.com", "is_private": false, "text": "omitsBoundsChecks falls into this category too.  It was already properly serialized/deserialized but can be moved to the POD.", "raw_text": "omitsBoundsChecks falls into this category too.  It was already properly serialized/deserialized but can be moved to the POD.", "attachment_id": null, "bug_id": 1637682, "creation_time": "2020-05-14T06:44:02Z", "creator": "lhansen@mozilla.com", "time": "2020-05-14T06:44:02Z", "tags": [], "count": 6}, {"attachment_id": 9148254, "bug_id": 1637682, "id": 14818660, "author": "lhansen@mozilla.com", "raw_text": "\nSerialized/deserialized properties that are POD should be in the\nCacheablePod structure so that we don't have to worry about adding\nextra code to serialize/deserialize them; it's so easy to forget.", "text": "Created attachment 9148254\nBug 1637682 - Make sure to serialize/deserialize all code properties.  r=bbouvier\n\n\nSerialized/deserialized properties that are POD should be in the\nCacheablePod structure so that we don't have to worry about adding\nextra code to serialize/deserialize them; it's so easy to forget.", "is_private": false, "time": "2020-05-14T06:50:55Z", "count": 7, "tags": [], "creator": "lhansen@mozilla.com", "creation_time": "2020-05-14T06:50:55Z"}, {"is_private": false, "text": "Nightly-only and probably without any real user impact => sec-low", "raw_text": "Nightly-only and probably without any real user impact => sec-low", "author": "lhansen@mozilla.com", "id": 14818797, "bug_id": 1637682, "attachment_id": null, "creation_time": "2020-05-14T08:37:53Z", "creator": "lhansen@mozilla.com", "tags": [], "count": 8, "time": "2020-05-14T08:37:53Z"}, {"time": "2020-05-14T09:26:32Z", "tags": [], "count": 9, "creation_time": "2020-05-14T09:26:32Z", "creator": "bugzilla@benj.me", "attachment_id": null, "bug_id": 1637682, "author": "bugzilla@benj.me", "id": 14818879, "is_private": false, "raw_text": "This has been backed out for failures: https://treeherder.mozilla.org/#/jobs?repo=autoland&searchStr=spidermonkey&revision=bc5e947dda0abeb48f46417f596a079fbc53817e", "text": "This has been backed out for failures: https://treeherder.mozilla.org/#/jobs?repo=autoland&searchStr=spidermonkey&revision=bc5e947dda0abeb48f46417f596a079fbc53817e"}, {"creation_time": "2020-05-14T09:43:50Z", "creator": "sledru@mozilla.com", "tags": [], "count": 10, "time": "2020-05-14T09:43:50Z", "is_private": false, "raw_text": "On Benjamin's request", "text": "On Benjamin's request", "id": 14818919, "author": "sledru@mozilla.com", "bug_id": 1637682, "attachment_id": null}, {"text": "Oops, forgot to update serializedSize() too.", "raw_text": "Oops, forgot to update serializedSize() too.", "is_private": false, "creator": "lhansen@mozilla.com", "id": 14818928, "creation_time": "2020-05-14T09:50:23Z", "author": "lhansen@mozilla.com", "bug_id": 1637682, "count": 11, "tags": [], "time": "2020-05-14T09:50:23Z", "attachment_id": null}, {"creation_time": "2020-05-14T09:52:10Z", "author": "pulsebot@bots.tld", "id": 14818934, "creator": "pulsebot@bots.tld", "is_private": false, "text": "Pushed by lhansen@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/99ddf2c70b4f\nMake sure to serialize/deserialize all code properties.  r=bbouvier", "raw_text": "Pushed by lhansen@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/99ddf2c70b4f\nMake sure to serialize/deserialize all code properties.  r=bbouvier", "time": "2020-05-14T09:52:10Z", "attachment_id": null, "tags": [], "bug_id": 1637682, "count": 12}, {"raw_text": "https://hg.mozilla.org/mozilla-central/rev/99ddf2c70b4f", "text": "https://hg.mozilla.org/mozilla-central/rev/99ddf2c70b4f", "is_private": false, "id": 14820147, "author": "csabou@mozilla.com", "bug_id": 1637682, "attachment_id": null, "creator": "csabou@mozilla.com", "creation_time": "2020-05-14T16:23:22Z", "count": 13, "tags": ["bugherder"], "time": "2020-05-14T16:23:22Z"}, {"tags": [], "count": 14, "time": "2020-05-14T16:25:57Z", "creation_time": "2020-05-14T16:25:57Z", "creator": "pulsebot@bots.tld", "bug_id": 1637682, "attachment_id": null, "is_private": false, "text": "Backout by csabou@mozilla.com:\nhttps://hg.mozilla.org/mozilla-central/rev/db5f5d127e24\nBacked out changeset bc5e947dda0a for wasm related bustage CLOSED TREE", "raw_text": "Backout by csabou@mozilla.com:\nhttps://hg.mozilla.org/mozilla-central/rev/db5f5d127e24\nBacked out changeset bc5e947dda0a for wasm related bustage CLOSED TREE", "author": "pulsebot@bots.tld", "id": 14820168}, {"tags": [], "count": 15, "time": "2020-05-14T16:35:06Z", "creation_time": "2020-05-14T16:35:06Z", "creator": "away@bugmail.cc", "bug_id": 1637682, "attachment_id": null, "is_private": false, "raw_text": "(In reply to Pulsebot from comment #14)\n> Backout by csabou@mozilla.com:\n> https://hg.mozilla.org/mozilla-central/rev/db5f5d127e24\n> Backed out changeset bc5e947dda0a for wasm related bustage CLOSED TREE\n\nNote that this is a delayed reporting of the first backout; the second landing is still present.", "text": "(In reply to Pulsebot from comment #14)\n> Backout by csabou@mozilla.com:\n> https://hg.mozilla.org/mozilla-central/rev/db5f5d127e24\n> Backed out changeset bc5e947dda0a for wasm related bustage CLOSED TREE\n\nNote that this is a delayed reporting of the first backout; the second landing is still present.", "author": "away@bugmail.cc", "id": 14820217}, {"time": "2020-05-14T21:16:30Z", "count": 16, "tags": [], "creator": "away@bugmail.cc", "creation_time": "2020-05-14T21:16:30Z", "attachment_id": null, "bug_id": 1637682, "author": "away@bugmail.cc", "id": 14821428, "text": "Thanks a lot for the quick response on this, Benjamin and Lars!", "raw_text": "Thanks a lot for the quick response on this, Benjamin and Lars!", "is_private": false}]}}, "comments": {}}