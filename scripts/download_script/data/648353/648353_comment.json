{"bugs": {"648353": {"comments": [{"creator": "gal@uci.edu", "text": "", "id": 5395043, "attachment_id": null, "author": "gal@uci.edu", "creation_time": "2011-04-07T20:44:41Z", "time": "2011-04-07T20:44:41Z", "tags": [], "is_private": false, "bug_id": 648353, "raw_text": "", "count": 0}, {"author": "gal@uci.edu", "creator": "gal@uci.edu", "time": "2011-04-07T20:45:06Z", "count": 1, "bug_id": 648353, "text": "Created attachment 524476\ntest case", "id": 5395044, "attachment_id": 524476, "creation_time": "2011-04-07T20:45:06Z", "tags": [], "is_private": false, "raw_text": ""}, {"tags": [], "is_private": false, "time": "2011-04-07T21:05:45Z", "count": 2, "bug_id": 648353, "raw_text": "", "author": "bugs@pettay.fi", "text": "Created attachment 524483\ntestcase without shark start/stop", "creator": "bugs@pettay.fi", "id": 5395079, "attachment_id": 524483, "creation_time": "2011-04-07T21:05:45Z"}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "count": 3, "bug_id": 648353, "time": "2011-04-07T21:13:02Z", "creation_time": "2011-04-07T21:13:02Z", "text": "This is something I see all the time with the mac event loop...  I _think_ we do it to prevent starvation of user events.  But yes, it really hurts us perf-wise.", "attachment_id": null, "id": 5395106, "raw_text": "This is something I see all the time with the mac event loop...  I _think_ we do it to prevent starvation of user events.  But yes, it really hurts us perf-wise.", "tags": [], "is_private": false}, {"tags": [], "is_private": false, "raw_text": "Based on sysprof, the situation is a bit less bad on linux.\n\"Only\" 25% is under DoProcessNextNativeEvent, not 50% like on OSX.", "text": "Based on sysprof, the situation is a bit less bad on linux.\n\"Only\" 25% is under DoProcessNextNativeEvent, not 50% like on OSX.", "id": 5395303, "attachment_id": null, "creation_time": "2011-04-07T22:47:28Z", "time": "2011-04-07T22:47:28Z", "count": 4, "bug_id": 648353, "author": "bugs@pettay.fi", "creator": "bugs@pettay.fi"}, {"creation_time": "2011-04-07T23:00:52Z", "attachment_id": null, "id": 5395336, "text": "Still very lousy if you ask me.", "raw_text": "Still very lousy if you ask me.", "is_private": false, "tags": [], "author": "gal@uci.edu", "creator": "gal@uci.edu", "count": 5, "bug_id": 648353, "time": "2011-04-07T23:00:52Z"}, {"raw_text": "Can we use a timer to control the rate at which we check for native events?", "is_private": false, "tags": [], "creation_time": "2011-04-08T03:08:24Z", "id": 5395792, "attachment_id": null, "text": "Can we use a timer to control the rate at which we check for native events?", "count": 6, "bug_id": 648353, "time": "2011-04-08T03:08:24Z", "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org"}, {"creation_time": "2011-04-08T03:10:40Z", "creator": "gal@uci.edu", "text": "#6 would also help with the couple percent we spend in polling the timer in AppShellBase.", "id": 5395795, "attachment_id": null, "author": "gal@uci.edu", "bug_id": 648353, "raw_text": "#6 would also help with the couple percent we spend in polling the timer in AppShellBase.", "count": 7, "time": "2011-04-08T03:10:40Z", "tags": [], "is_private": false}, {"author": "bugs@pettay.fi", "attachment_id": null, "id": 5395823, "creator": "bugs@pettay.fi", "text": "Or could we just change nsBaseAppShell::OnProcessNextEvent a bit\nmore, like remove the performance hint.\nI have a patch which seems to work well with the testcase on my linux laptop\n(it cuts 33% of the processing time and UI stays responsive).\nI need to run it through tryserver to see if it regress tp badly.\nI have no idea how well it works on other platforms.", "creation_time": "2011-04-08T03:26:21Z", "is_private": false, "tags": [], "time": "2011-04-08T03:26:21Z", "count": 8, "raw_text": "Or could we just change nsBaseAppShell::OnProcessNextEvent a bit\nmore, like remove the performance hint.\nI have a patch which seems to work well with the testcase on my linux laptop\n(it cuts 33% of the processing time and UI stays responsive).\nI need to run it through tryserver to see if it regress tp badly.\nI have no idea how well it works on other platforms.", "bug_id": 648353}, {"creation_time": "2011-04-08T03:28:39Z", "author": "gal@uci.edu", "text": "Can you post the patch? I am curious what it looks like.", "creator": "gal@uci.edu", "attachment_id": null, "id": 5395826, "count": 9, "bug_id": 648353, "raw_text": "Can you post the patch? I am curious what it looks like.", "tags": [], "is_private": false, "time": "2011-04-08T03:28:39Z"}, {"text": "Created attachment 524569\nwip\n\nSo the idea is to process native events a bit less often, but when\nprocess them, try to process them as many as possible.\n\nThe current else{} block in nsBaseAppShell::OnProcessNextEvent where \nDoProcessNextNativeEvent(PR_FALSE); is called just once doesn't seem to\nbehave too well.\n\nThis is all very experimental.", "id": 5395888, "attachment_id": 524569, "creation_time": "2011-04-08T04:20:50Z", "tags": [], "is_private": false, "raw_text": "So the idea is to process native events a bit less often, but when\nprocess them, try to process them as many as possible.\n\nThe current else{} block in nsBaseAppShell::OnProcessNextEvent where \nDoProcessNextNativeEvent(PR_FALSE); is called just once doesn't seem to\nbehave too well.\n\nThis is all very experimental.", "author": "bugs@pettay.fi", "creator": "bugs@pettay.fi", "time": "2011-04-08T04:20:50Z", "count": 10, "bug_id": 648353}, {"attachment_id": null, "id": 5395897, "text": "To prevent starving either user events or web events, don't we want to process both in small chunks as opposed to big batches?", "creation_time": "2011-04-08T04:24:40Z", "is_private": false, "tags": [], "raw_text": "To prevent starving either user events or web events, don't we want to process both in small chunks as opposed to big batches?", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "time": "2011-04-08T04:24:40Z", "count": 11, "bug_id": 648353}, {"creation_time": "2011-04-08T04:26:32Z", "attachment_id": null, "id": 5395903, "text": "If we can't keep up with native events, I think we are kinda screwed anyway. No point in delaying them. No?", "raw_text": "If we can't keep up with native events, I think we are kinda screwed anyway. No point in delaying them. No?", "is_private": false, "tags": [], "creator": "gal@uci.edu", "author": "gal@uci.edu", "bug_id": 648353, "count": 12, "time": "2011-04-08T04:26:32Z"}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "time": "2011-04-08T04:39:06Z", "count": 13, "bug_id": 648353, "text": "I seem to recall there being cases (on Windows?) where we can get as many native events as we ask for...   Maybe during resize event loops?  But I might be misremembering.  It's been a while, and I was watching from the sidelines.", "attachment_id": null, "id": 5395919, "creation_time": "2011-04-08T04:39:06Z", "tags": [], "is_private": false, "raw_text": "I seem to recall there being cases (on Windows?) where we can get as many native events as we ask for...   Maybe during resize event loops?  But I might be misremembering.  It's been a while, and I was watching from the sidelines."}, {"is_private": false, "tags": [], "raw_text": "Resizes and native modal dialogs spin their own event loops. (I don't know how Gecko events get processed in that model.)", "attachment_id": null, "id": 5396150, "text": "Resizes and native modal dialogs spin their own event loops. (I don't know how Gecko events get processed in that model.)", "creation_time": "2011-04-08T08:04:07Z", "time": "2011-04-08T08:04:07Z", "count": 14, "bug_id": 648353, "author": "neil@httl.net", "creator": "neil@httl.net"}, {"creator": "jmathies@mozilla.com", "text": "(In reply to comment #13)\n> I seem to recall there being cases (on Windows?) where we can get as many\n> native events as we ask for...   Maybe during resize event loops?  But I might\n> be misremembering.  It's been a while, and I was watching from the sidelines.\n\nThat was a bit different - in that case Windows internal modal dispatch loops were prioritizing the native msg we post that triggers gecko event processing, starving input events. (Windows and mozilla prioritize differently.) The result was locked up native ui actions like window resize.\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/windows/nsAppShell.cpp#275", "id": 5396435, "attachment_id": null, "author": "jmathies@mozilla.com", "creation_time": "2011-04-08T14:38:05Z", "time": "2011-04-08T14:38:05Z", "tags": [], "is_private": false, "bug_id": 648353, "raw_text": "(In reply to comment #13)\n> I seem to recall there being cases (on Windows?) where we can get as many\n> native events as we ask for...   Maybe during resize event loops?  But I might\n> be misremembering.  It's been a while, and I was watching from the sidelines.\n\nThat was a bit different - in that case Windows internal modal dispatch loops were prioritizing the native msg we post that triggers gecko event processing, starving input events. (Windows and mozilla prioritize differently.) The result was locked up native ui actions like window resize.\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/windows/nsAppShell.cpp#275", "count": 15}, {"author": "bugs@pettay.fi", "attachment_id": null, "id": 5396529, "text": "(In reply to comment #11)\n> To prevent starving either user events or web events, don't we want to process\n> both in small chunks as opposed to big batches?\nWell, the wip patch makes us process user events in smaller chunks, yet allow\ngecko events to get processes too.", "creator": "bugs@pettay.fi", "creation_time": "2011-04-08T15:44:12Z", "is_private": false, "tags": [], "time": "2011-04-08T15:44:12Z", "count": 16, "raw_text": "(In reply to comment #11)\n> To prevent starving either user events or web events, don't we want to process\n> both in small chunks as opposed to big batches?\nWell, the wip patch makes us process user events in smaller chunks, yet allow\ngecko events to get processes too.", "bug_id": 648353}, {"author": "bugs@pettay.fi", "creator": "bugs@pettay.fi", "count": 17, "bug_id": 648353, "time": "2011-04-08T15:49:17Z", "creation_time": "2011-04-08T15:49:17Z", "id": 5396536, "attachment_id": null, "text": "The patch seems to work on tryserver, but it does trigger random oranges quite \noften.\nI mean such oranges which have been reported already before.\nI would assume in many cases the tests are buggy, or some other code\nhas wrong assumptions.", "raw_text": "The patch seems to work on tryserver, but it does trigger random oranges quite \noften.\nI mean such oranges which have been reported already before.\nI would assume in many cases the tests are buggy, or some other code\nhas wrong assumptions.", "is_private": false, "tags": []}, {"creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "time": "2011-04-08T15:57:46Z", "bug_id": 648353, "count": 18, "id": 5396549, "attachment_id": null, "text": "Tryserver builds http://ftp.mozilla.org/pub/mozilla.org/firefox/tryserver-builds/opettay@mozilla.com-2358236b71a7/", "creation_time": "2011-04-08T15:57:46Z", "is_private": false, "tags": [], "raw_text": "Tryserver builds http://ftp.mozilla.org/pub/mozilla.org/firefox/tryserver-builds/opettay@mozilla.com-2358236b71a7/"}, {"creation_time": "2011-04-08T21:55:23Z", "author": "jmathies@mozilla.com", "attachment_id": null, "id": 5397611, "creator": "jmathies@mozilla.com", "text": "For windows builds- a little bit of general testing shows everything working as expected. The test case returns 375->450 both in the try build and the latest nightly.", "count": 19, "raw_text": "For windows builds- a little bit of general testing shows everything working as expected. The test case returns 375->450 both in the try build and the latest nightly.", "bug_id": 648353, "is_private": false, "tags": [], "time": "2011-04-08T21:55:23Z"}, {"id": 5404674, "attachment_id": 525490, "creator": "bugs@pettay.fi", "text": "Created attachment 525490\nsimpler\n\nDon't remove perfmode, since I suspect the removal caused some twin regression.\nUploaded to tryserver.", "author": "bugs@pettay.fi", "creation_time": "2011-04-12T20:32:28Z", "time": "2011-04-12T20:32:28Z", "is_private": false, "tags": [], "raw_text": "Don't remove perfmode, since I suspect the removal caused some twin regression.\nUploaded to tryserver.", "bug_id": 648353, "count": 20}, {"creation_time": "2011-04-13T00:56:49Z", "text": "(In reply to comment #17)\n> The patch seems to work on tryserver, but it does trigger random oranges quite \n> often.\n> I mean such oranges which have been reported already before.\n> I would assume in many cases the tests are buggy, or some other code\n> has wrong assumptions.\n\nI'd be very cautious with this patch then...", "attachment_id": null, "id": 5405403, "raw_text": "(In reply to comment #17)\n> The patch seems to work on tryserver, but it does trigger random oranges quite \n> often.\n> I mean such oranges which have been reported already before.\n> I would assume in many cases the tests are buggy, or some other code\n> has wrong assumptions.\n\nI'd be very cautious with this patch then...", "tags": [], "is_private": false, "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com", "bug_id": 648353, "count": 21, "time": "2011-04-13T00:56:49Z"}, {"id": 5405536, "attachment_id": null, "text": "Yeah, need to probably fix those tests before landing this kind of change.", "creation_time": "2011-04-13T02:32:27Z", "is_private": false, "tags": [], "raw_text": "Yeah, need to probably fix those tests before landing this kind of change.", "creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "time": "2011-04-13T02:32:27Z", "bug_id": 648353, "count": 22}, {"raw_text": "(In reply to comment #22)\n> Yeah, need to probably fix those tests before landing this kind of change.\n\nI meant, do we know that it only affects tests in a negative way?  Could it also affect web content in a negative way, without us realizing?", "tags": [], "is_private": false, "creation_time": "2011-04-13T04:18:32Z", "text": "(In reply to comment #22)\n> Yeah, need to probably fix those tests before landing this kind of change.\n\nI meant, do we know that it only affects tests in a negative way?  Could it also affect web content in a negative way, without us realizing?", "attachment_id": null, "id": 5405672, "count": 23, "bug_id": 648353, "time": "2011-04-13T04:18:32Z", "author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com"}, {"bug_id": 648353, "raw_text": "My *guess* is that those (already without the patch randomly failing) tests\nhave some bad assumptions about when timers and runnables run.", "count": 24, "time": "2011-04-13T04:23:31Z", "tags": [], "is_private": false, "creation_time": "2011-04-13T04:23:31Z", "creator": "bugs@pettay.fi", "text": "My *guess* is that those (already without the patch randomly failing) tests\nhave some bad assumptions about when timers and runnables run.", "id": 5405682, "attachment_id": null, "author": "bugs@pettay.fi"}, {"creation_time": "2011-04-16T00:37:24Z", "attachment_id": null, "id": 5413298, "text": "(In reply to comment #24)\n> My *guess* is that those (already without the patch randomly failing) tests\n> have some bad assumptions about when timers and runnables run.\n\nThat's interesting.  Do you have a set of those tests?  They may be among our flaky tests which fail intermittently...", "raw_text": "(In reply to comment #24)\n> My *guess* is that those (already without the patch randomly failing) tests\n> have some bad assumptions about when timers and runnables run.\n\nThat's interesting.  Do you have a set of those tests?  They may be among our flaky tests which fail intermittently...", "is_private": false, "tags": [], "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com", "bug_id": 648353, "count": 25, "time": "2011-04-16T00:37:24Z"}, {"creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "time": "2011-04-22T13:05:12Z", "bug_id": 648353, "count": 26, "text": "I posted the patch to tryserver and this time I got the following failures. No new random failures.\nBug 608206 - Intermittent timeout in test_prompt.html | Test timed out.\n* uses nsITimer\n\nBug 632102 - Intermittent test_bug629838.html | Got MozAfterPaint event 25 time(s).\n* has bogus assumptions about how often events fire. There is a patch to fix the test.\n\nBug 645267 - Intermittent failure in layout/reftests/svg/as-image/img-and-image-1.html, svg-image-recursive-1a.svg, svg-image-recursive-1b.svg, svg-image-recursive-2a.svg and svg-image-recursive-2b.svg | image comparison (==)\n* not sure about this. Happens quite often anyway.\n\nBug 637806 - Intermittent failures in test_titlebar.xul\n * this one uses setTimeout\n\nBug 542928 - [Linux] browser_bug511456.js | application timed out after 330 seconds with no output\n* common one\n\nBug 626998 - Intermittent failure in browser_bug553455.js | Test timed out\n* There are patches for this\n\nBug 620721 - Intermittent test_timeupdate_small_files.html | Test timed out. followed by shutdown timeout\n* relies on setTimeout", "attachment_id": null, "id": 5426118, "creation_time": "2011-04-22T13:05:12Z", "tags": [], "is_private": false, "raw_text": "I posted the patch to tryserver and this time I got the following failures. No new random failures.\nBug 608206 - Intermittent timeout in test_prompt.html | Test timed out.\n* uses nsITimer\n\nBug 632102 - Intermittent test_bug629838.html | Got MozAfterPaint event 25 time(s).\n* has bogus assumptions about how often events fire. There is a patch to fix the test.\n\nBug 645267 - Intermittent failure in layout/reftests/svg/as-image/img-and-image-1.html, svg-image-recursive-1a.svg, svg-image-recursive-1b.svg, svg-image-recursive-2a.svg and svg-image-recursive-2b.svg | image comparison (==)\n* not sure about this. Happens quite often anyway.\n\nBug 637806 - Intermittent failures in test_titlebar.xul\n * this one uses setTimeout\n\nBug 542928 - [Linux] browser_bug511456.js | application timed out after 330 seconds with no output\n* common one\n\nBug 626998 - Intermittent failure in browser_bug553455.js | Test timed out\n* There are patches for this\n\nBug 620721 - Intermittent test_timeupdate_small_files.html | Test timed out. followed by shutdown timeout\n* relies on setTimeout"}, {"is_private": false, "tags": [], "time": "2011-04-22T22:57:52Z", "count": 27, "raw_text": "Patch looks great. I would say land it. If this patch does alter the behavior of some test, thats most likely due to a brittle test and should be fixed anyway.", "bug_id": 648353, "author": "gal@uci.edu", "id": 5427266, "attachment_id": null, "creator": "gal@uci.edu", "text": "Patch looks great. I would say land it. If this patch does alter the behavior of some test, thats most likely due to a brittle test and should be fixed anyway.", "creation_time": "2011-04-22T22:57:52Z"}, {"count": 28, "bug_id": 648353, "time": "2011-04-26T22:05:21Z", "author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com", "raw_text": "(In reply to comment #27)\n> Patch looks great. I would say land it. If this patch does alter the behavior\n> of some test, thats most likely due to a brittle test and should be fixed\n> anyway.\n\nI don't agree, we shouldn't just land stuff which can cause tests to fail more frequently without fixing the issues before landng.  Let's take a look at these:\n\n(In reply to comment #26)\n> I posted the patch to tryserver and this time I got the following failures. No\n> new random failures.\n> Bug 608206 - Intermittent timeout in test_prompt.html | Test timed out.\n> * uses nsITimer\n\nCan you please trigger this test multiple times and see how frequently does it fail?  The frequency should be ~0.05 times per test run (which is pretty low) <http://brasstacks.mozilla.com/orangefactor/?display=Bug&endday=2011-04-26&startday=2011-02-25&bugid=608206>.\n\n> Bug 632102 - Intermittent test_bug629838.html | Got MozAfterPaint event 25\n> time(s).\n> * has bogus assumptions about how often events fire. There is a patch to fix\n> the test.\n\nThen this bug should depend on bug 632102.  Can you try pushing this patch with the patch on bug 632102 to see if that helps the situation?\n\n> Bug 645267 - Intermittent failure in\n> layout/reftests/svg/as-image/img-and-image-1.html, svg-image-recursive-1a.svg,\n> svg-image-recursive-1b.svg, svg-image-recursive-2a.svg and\n> svg-image-recursive-2b.svg | image comparison (==)\n> * not sure about this. Happens quite often anyway.\n\nYeah, this one is really flaky, and I don't think your patch here can affect this in any way.\n\n> Bug 637806 - Intermittent failures in test_titlebar.xul\n>  * this one uses setTimeout\n\nI think we need to fix this bug before this can land.\n\n> Bug 542928 - [Linux] browser_bug511456.js | application timed out after 330\n> seconds with no output\n> * common one\n\nActually it's not that common: <http://brasstacks.mozilla.com/orangefactor/?display=Bug&endday=2011-04-26&startday=2011-02-25&bugid=542928&tree=all>\n\nHow often does this happen for you on the try server?\n\n> Bug 626998 - Intermittent failure in browser_bug553455.js | Test timed out\n> * There are patches for this\n\nIt seems to have been fixed.  If you update to tip and reapply the patch and push it to try, this shouldn't happen again.\n\n> Bug 620721 - Intermittent test_timeupdate_small_files.html | Test timed out.\n> followed by shutdown timeout\n> * relies on setTimeout\n\nThis one also seems to be close to getting fixed.", "tags": [], "is_private": false, "creation_time": "2011-04-26T22:05:21Z", "text": "(In reply to comment #27)\n> Patch looks great. I would say land it. If this patch does alter the behavior\n> of some test, thats most likely due to a brittle test and should be fixed\n> anyway.\n\nI don't agree, we shouldn't just land stuff which can cause tests to fail more frequently without fixing the issues before landng.  Let's take a look at these:\n\n(In reply to comment #26)\n> I posted the patch to tryserver and this time I got the following failures. No\n> new random failures.\n> Bug 608206 - Intermittent timeout in test_prompt.html | Test timed out.\n> * uses nsITimer\n\nCan you please trigger this test multiple times and see how frequently does it fail?  The frequency should be ~0.05 times per test run (which is pretty low) <http://brasstacks.mozilla.com/orangefactor/?display=Bug&endday=2011-04-26&startday=2011-02-25&bugid=608206>.\n\n> Bug 632102 - Intermittent test_bug629838.html | Got MozAfterPaint event 25\n> time(s).\n> * has bogus assumptions about how often events fire. There is a patch to fix\n> the test.\n\nThen this bug should depend on bug 632102.  Can you try pushing this patch with the patch on bug 632102 to see if that helps the situation?\n\n> Bug 645267 - Intermittent failure in\n> layout/reftests/svg/as-image/img-and-image-1.html, svg-image-recursive-1a.svg,\n> svg-image-recursive-1b.svg, svg-image-recursive-2a.svg and\n> svg-image-recursive-2b.svg | image comparison (==)\n> * not sure about this. Happens quite often anyway.\n\nYeah, this one is really flaky, and I don't think your patch here can affect this in any way.\n\n> Bug 637806 - Intermittent failures in test_titlebar.xul\n>  * this one uses setTimeout\n\nI think we need to fix this bug before this can land.\n\n> Bug 542928 - [Linux] browser_bug511456.js | application timed out after 330\n> seconds with no output\n> * common one\n\nActually it's not that common: <http://brasstacks.mozilla.com/orangefactor/?display=Bug&endday=2011-04-26&startday=2011-02-25&bugid=542928&tree=all>\n\nHow often does this happen for you on the try server?\n\n> Bug 626998 - Intermittent failure in browser_bug553455.js | Test timed out\n> * There are patches for this\n\nIt seems to have been fixed.  If you update to tip and reapply the patch and push it to try, this shouldn't happen again.\n\n> Bug 620721 - Intermittent test_timeupdate_small_files.html | Test timed out.\n> followed by shutdown timeout\n> * relies on setTimeout\n\nThis one also seems to be close to getting fixed.", "id": 5433198, "attachment_id": null}, {"creation_time": "2011-04-26T22:25:43Z", "author": "gal@uci.edu", "creator": "gal@uci.edu", "text": "I don't see how it makes sense to gate patches on shitty tests. If a test is clearly flaky and the patch is unrelated and merely causes the alignment of the sun and the moon to change enough for a test to fail more often, we don't win anything from not landing it. Such tests should be disabled until they are fixed.", "attachment_id": null, "id": 5433294, "count": 29, "bug_id": 648353, "raw_text": "I don't see how it makes sense to gate patches on shitty tests. If a test is clearly flaky and the patch is unrelated and merely causes the alignment of the sun and the moon to change enough for a test to fail more often, we don't win anything from not landing it. Such tests should be disabled until they are fixed.", "tags": [], "is_private": false, "time": "2011-04-26T22:25:43Z"}, {"is_private": false, "tags": [], "time": "2011-04-29T02:11:43Z", "count": 30, "raw_text": "(In reply to comment #29)\n> I don't see how it makes sense to gate patches on shitty tests. If a test is\n> clearly flaky and the patch is unrelated and merely causes the alignment of the\n> sun and the moon to change enough for a test to fail more often, we don't win\n> anything from not landing it. Such tests should be disabled until they are\n> fixed.\n\nLanding something which increases the frequency of intermittent failures is going to make the lives of everyone harder.  There is a cost to landing such patches.  Like I said in comment 28, a lot of these issues have a fix at hand, and for those which don't, we should advocate on the respective bugs for more attention.  None of these bugs seem like big issues to me, but if for some reason we can't find anybody to work on some of them, we should disable the test with the blessing of the respective module owner.", "bug_id": 648353, "author": "ehsan.akhgari@gmail.com", "id": 5438769, "attachment_id": null, "text": "(In reply to comment #29)\n> I don't see how it makes sense to gate patches on shitty tests. If a test is\n> clearly flaky and the patch is unrelated and merely causes the alignment of the\n> sun and the moon to change enough for a test to fail more often, we don't win\n> anything from not landing it. Such tests should be disabled until they are\n> fixed.\n\nLanding something which increases the frequency of intermittent failures is going to make the lives of everyone harder.  There is a cost to landing such patches.  Like I said in comment 28, a lot of these issues have a fix at hand, and for those which don't, we should advocate on the respective bugs for more attention.  None of these bugs seem like big issues to me, but if for some reason we can't find anybody to work on some of them, we should disable the test with the blessing of the respective module owner.", "creator": "ehsan.akhgari@gmail.com", "creation_time": "2011-04-29T02:11:43Z"}, {"bug_id": 648353, "count": 31, "time": "2011-04-29T02:14:20Z", "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com", "raw_text": "Also, Olli, can you please do another try server test run from the tip so that we have more data on the frequency of the failures?  Thanks!", "is_private": false, "tags": [], "creation_time": "2011-04-29T02:14:20Z", "id": 5438774, "attachment_id": null, "text": "Also, Olli, can you please do another try server test run from the tip so that we have more data on the frequency of the failures?  Thanks!"}, {"tags": [], "is_private": false, "raw_text": "Sorry, forgot to push to try.\nA new build is coming\nhttp://tbpl.mozilla.org/?tree=Try&rev=81bb5e879230", "text": "Sorry, forgot to push to try.\nA new build is coming\nhttp://tbpl.mozilla.org/?tree=Try&rev=81bb5e879230", "attachment_id": null, "id": 5529457, "creation_time": "2011-06-13T19:26:33Z", "time": "2011-06-13T19:26:33Z", "bug_id": 648353, "count": 32, "creator": "bugs@pettay.fi", "author": "bugs@pettay.fi"}, {"count": 33, "bug_id": 648353, "time": "2011-06-13T23:53:26Z", "author": "bugs@pettay.fi", "creator": "bugs@pettay.fi", "raw_text": "This time failures were Bug 662800, Bug 636379, Bug 632117 and \nREFTEST TEST-UNEXPECTED-FAIL | file:///home/cltbld/talos-slave/test/build/reftest/tests/layout/reftests/bugs/491323-1.xul | image comparison (==)", "tags": [], "is_private": false, "creation_time": "2011-06-13T23:53:26Z", "text": "This time failures were Bug 662800, Bug 636379, Bug 632117 and \nREFTEST TEST-UNEXPECTED-FAIL | file:///home/cltbld/talos-slave/test/build/reftest/tests/layout/reftests/bugs/491323-1.xul | image comparison (==)", "attachment_id": null, "id": 5530277}, {"creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "time": "2011-06-13T23:57:46Z", "bug_id": 648353, "count": 34, "text": "Comment on attachment 525490\nsimpler\n\ngal, bz, what you think of landing this.\nIf this causes any problem it would be easy just back this out.", "id": 5530297, "attachment_id": 525490, "creation_time": "2011-06-13T23:57:46Z", "tags": [], "is_private": false, "raw_text": "gal, bz, what you think of landing this.\nIf this causes any problem it would be easy just back this out."}, {"tags": [], "is_private": false, "raw_text": "There were three unrecognized test failures too:\n\nhttp://tinderbox.mozilla.org/showlog.cgi?log=Try/1308006459.1308007548.21785.gz\nhttp://tinderbox.mozilla.org/showlog.cgi?log=Try/1308018232.1308020306.7995.gz\nhttp://tinderbox.mozilla.org/showlog.cgi?log=Try/1308018243.1308019688.5836.gz\n\nI triggered the jobs to see if they were intermittent.", "text": "There were three unrecognized test failures too:\n\nhttp://tinderbox.mozilla.org/showlog.cgi?log=Try/1308006459.1308007548.21785.gz\nhttp://tinderbox.mozilla.org/showlog.cgi?log=Try/1308018232.1308020306.7995.gz\nhttp://tinderbox.mozilla.org/showlog.cgi?log=Try/1308018243.1308019688.5836.gz\n\nI triggered the jobs to see if they were intermittent.", "id": 5532525, "attachment_id": null, "creation_time": "2011-06-14T21:51:26Z", "time": "2011-06-14T21:51:26Z", "bug_id": 648353, "count": 35, "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"raw_text": "Thanks!", "bug_id": 648353, "count": 36, "time": "2011-06-14T22:41:18Z", "is_private": false, "tags": [], "creation_time": "2011-06-14T22:41:18Z", "attachment_id": null, "id": 5532672, "text": "Thanks!", "creator": "bugs@pettay.fi", "author": "bugs@pettay.fi"}, {"creator": "bzbarsky@mit.edu", "text": "So I'm trying to understand this patch.\n\nIf we get into nsBaseAppShell::OnProcessNextEvent and we recently processed a native event so we skip native event processing per this patch... what will make sure we process those native events eventually?", "attachment_id": null, "id": 5536027, "author": "bzbarsky@mit.edu", "creation_time": "2011-06-16T05:51:25Z", "time": "2011-06-16T05:51:25Z", "tags": [], "is_private": false, "bug_id": 648353, "raw_text": "So I'm trying to understand this patch.\n\nIf we get into nsBaseAppShell::OnProcessNextEvent and we recently processed a native event so we skip native event processing per this patch... what will make sure we process those native events eventually?", "count": 37}, {"creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "time": "2011-06-16T09:13:11Z", "bug_id": 648353, "count": 38, "attachment_id": 525490, "id": 5536181, "text": "Comment on attachment 525490\nsimpler\n\nI uploaded this once again to tryserver.\nSeems like this is causing still too many random (usually known)\nfailures.", "creation_time": "2011-06-16T09:13:11Z", "is_private": false, "tags": [], "raw_text": "I uploaded this once again to tryserver.\nSeems like this is causing still too many random (usually known)\nfailures."}, {"time": "2011-06-16T13:30:09Z", "count": 39, "bug_id": 648353, "author": "bugs@pettay.fi", "creator": "bugs@pettay.fi", "tags": [], "is_private": false, "raw_text": "(In reply to comment #37) w\n> So I'm trying to understand this patch.\n> \n> If we get into nsBaseAppShell::OnProcessNextEvent and we recently processed\n> a native event so we skip native event processing per this patch... what\n> will make sure we process those native events eventually?\nHmm, good question. But if there is a problem with the patch, it is there\nalso without the patch. If we're in perfmode, we can easily not process\nnative events, and even in non-perfmode we may not process all the native events.\n/me reads some more code...", "text": "(In reply to comment #37) w\n> So I'm trying to understand this patch.\n> \n> If we get into nsBaseAppShell::OnProcessNextEvent and we recently processed\n> a native event so we skip native event processing per this patch... what\n> will make sure we process those native events eventually?\nHmm, good question. But if there is a problem with the patch, it is there\nalso without the patch. If we're in perfmode, we can easily not process\nnative events, and even in non-perfmode we may not process all the native events.\n/me reads some more code...", "attachment_id": null, "id": 5536492, "creation_time": "2011-06-16T13:30:09Z"}, {"creation_time": "2011-06-16T19:18:36Z", "text": "Ah, fair.\n\nI sort of wonder what determines whether we're in perf mode or not...", "id": 5537370, "attachment_id": null, "raw_text": "Ah, fair.\n\nI sort of wonder what determines whether we're in perf mode or not...", "tags": [], "is_private": false, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "count": 40, "bug_id": 648353, "time": "2011-06-16T19:18:36Z"}, {"author": "bugs@pettay.fi", "creator": "bugs@pettay.fi", "text": "Created attachment 542523\nsafer?\n\nUploaded this, perhaps a tiny bit safer patch to tryserver.", "id": 5562242, "attachment_id": 542523, "creation_time": "2011-06-28T18:09:41Z", "tags": [], "is_private": false, "time": "2011-06-28T18:09:41Z", "count": 41, "bug_id": 648353, "raw_text": "Uploaded this, perhaps a tiny bit safer patch to tryserver."}]}}, "comments": {}}