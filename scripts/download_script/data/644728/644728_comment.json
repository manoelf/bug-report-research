{"bugs": {"644728": {"comments": [{"id": 5366999, "is_private": false, "author": "sspitzer@postbox-inc.com", "bug_id": 644728, "creation_time": "2011-03-24T19:47:39Z", "tags": [], "attachment_id": null, "time": "2011-03-24T19:47:39Z", "count": 0, "text": "nsGenericHTMLElement::SetInnerHTML() will silently fail if target node's owner doc has no document URI\n\ncc'ing Henri as he touched this code in bug #599588 and jonas because he reviewed it and may have thoughts.\n\nNote that before Henri changed this code we could have silently failed before, but what I am doing used to work with the old parser.\n\nsome links to code:\n\nhttp://mxr.mozilla.org/mozilla-central/source/content/html/content/src/nsGenericHTMLElement.cpp#766\n\n766     asFragmentParser->ParseHtml5Fragment(aInnerHTML,\n767                                          this,\n768                                          Tag(),\n769                                          GetNameSpaceID(),\n770                                          doc->GetCompatibilityMode() ==\n771                                              eCompatibility_NavQuirks,\n772                                          PR_TRUE);\n\n\nhttp://mxr.mozilla.org/mozilla-central/source/parser/html/nsHtml5Parser.cpp#485\n\n485 nsHtml5Parser::ParseHtml5Fragment(const nsAString& aSourceBuffer,\n486                                   nsIContent* aTargetNode,\n487                                   nsIAtom* aContextLocalName,\n488                                   PRInt32 aContextNamespace,\n489                                   PRBool aQuirks,\n490                                   PRBool aPreventScriptExecution)\n491 {\n492   nsIDocument* doc = aTargetNode->GetOwnerDoc();\n493   NS_ENSURE_TRUE(doc, NS_ERROR_NOT_AVAILABLE);\n494   \n495   nsIURI* uri = doc->GetDocumentURI();\n496   NS_ENSURE_TRUE(uri, NS_ERROR_NOT_AVAILABLE);\n\nMy abridged call stack:\n\n#0  nsHtml5Parser::ParseHtml5Fragment (this=0x132894ee0,\naSourceBuffer=@0x7fff5fbf93c0, aTargetNode=0x132fd0750,\naContextLocalName=0x100c44480, aContextNamespace=3, aQuirks=1,\naPreventScriptExecution=1) at\n/Users/sspitzerpostbox/fp/pb3/src/mozilla/parser/html/nsHtml5Parser.cpp:496\n#1  0x000000011404a134 in nsGenericHTMLElement::SetInnerHTML (this=0x132fd0750,\naInnerHTML=@0x7fff5fbf93c0) at\n/Users/sspitzerpostbox/fp/pb3/src/mozilla/content/html/content/src/nsGenericHTMLElement.cpp:772\n#2  0x000000011404ccf0 in nsGenericHTMLElementTearoff::SetInnerHTML\n(this=0x132fd07c0, aInnerHTML=@0x7fff5fbf93c0) at\n/Users/sspitzerpostbox/fp/pb3/src/mozilla/content/html/content/src/nsGenericHTMLElement.cpp:251\n\n<snip>\n\nShould nsGenericHTMLElement::SetInnerHTML() return the error (NS_ERROR_NOT_AVAILABLE) to the caller in this scenario?", "raw_text": "nsGenericHTMLElement::SetInnerHTML() will silently fail if target node's owner doc has no document URI\n\ncc'ing Henri as he touched this code in bug #599588 and jonas because he reviewed it and may have thoughts.\n\nNote that before Henri changed this code we could have silently failed before, but what I am doing used to work with the old parser.\n\nsome links to code:\n\nhttp://mxr.mozilla.org/mozilla-central/source/content/html/content/src/nsGenericHTMLElement.cpp#766\n\n766     asFragmentParser->ParseHtml5Fragment(aInnerHTML,\n767                                          this,\n768                                          Tag(),\n769                                          GetNameSpaceID(),\n770                                          doc->GetCompatibilityMode() ==\n771                                              eCompatibility_NavQuirks,\n772                                          PR_TRUE);\n\n\nhttp://mxr.mozilla.org/mozilla-central/source/parser/html/nsHtml5Parser.cpp#485\n\n485 nsHtml5Parser::ParseHtml5Fragment(const nsAString& aSourceBuffer,\n486                                   nsIContent* aTargetNode,\n487                                   nsIAtom* aContextLocalName,\n488                                   PRInt32 aContextNamespace,\n489                                   PRBool aQuirks,\n490                                   PRBool aPreventScriptExecution)\n491 {\n492   nsIDocument* doc = aTargetNode->GetOwnerDoc();\n493   NS_ENSURE_TRUE(doc, NS_ERROR_NOT_AVAILABLE);\n494   \n495   nsIURI* uri = doc->GetDocumentURI();\n496   NS_ENSURE_TRUE(uri, NS_ERROR_NOT_AVAILABLE);\n\nMy abridged call stack:\n\n#0  nsHtml5Parser::ParseHtml5Fragment (this=0x132894ee0,\naSourceBuffer=@0x7fff5fbf93c0, aTargetNode=0x132fd0750,\naContextLocalName=0x100c44480, aContextNamespace=3, aQuirks=1,\naPreventScriptExecution=1) at\n/Users/sspitzerpostbox/fp/pb3/src/mozilla/parser/html/nsHtml5Parser.cpp:496\n#1  0x000000011404a134 in nsGenericHTMLElement::SetInnerHTML (this=0x132fd0750,\naInnerHTML=@0x7fff5fbf93c0) at\n/Users/sspitzerpostbox/fp/pb3/src/mozilla/content/html/content/src/nsGenericHTMLElement.cpp:772\n#2  0x000000011404ccf0 in nsGenericHTMLElementTearoff::SetInnerHTML\n(this=0x132fd07c0, aInnerHTML=@0x7fff5fbf93c0) at\n/Users/sspitzerpostbox/fp/pb3/src/mozilla/content/html/content/src/nsGenericHTMLElement.cpp:251\n\n<snip>\n\nShould nsGenericHTMLElement::SetInnerHTML() return the error (NS_ERROR_NOT_AVAILABLE) to the caller in this scenario?", "creator": "sspitzer@postbox-inc.com"}, {"attachment_id": null, "creation_time": "2011-03-24T19:49:48Z", "tags": [], "creator": "sspitzer@postbox-inc.com", "raw_text": "To fix the problem I'm having, I did this in my code:\n\n             nsCOMPtr<nsIDOMDocument> ownerDocument;\n             rv = outNode->GetOwnerDocument(getter_AddRefs(ownerDocument));\n             NS_ENSURE_SUCCESS(rv, rv);\n \n+            // set the document uri\n+            nsCOMPtr<nsIDocument> doc = do_QueryInterface(ownerDocument, &rv);\n+            NS_ENSURE_SUCCESS(rv, rv);\n+\n+            nsCOMPtr<nsIURI> uri;\n+            NS_NewURI(getter_AddRefs(uri), NS_LITERAL_CSTRING(\"about:blank\"));\n+            NS_ENSURE_TRUE(uri, NS_ERROR_UNEXPECTED);\n+            doc->SetDocumentURI(uri);\n\n             nsCOMPtr<nsIDOMElement> divElement;\n             rv = ownerDocument->CreateElement(NS_LITERAL_STRING(\"div\"), getter_AddRefs(divElement));\n             NS_ENSURE_SUCCESS(rv, rv);\n\n             nsCOMPtr<nsIDOMNSHTMLElement> divNSElement = do_QueryInterface(divElement, &rv);\n             NS_ENSURE_SUCCESS(rv, rv);\n              \n             rv = divNSElement->SetInnerHTML(innerHTML);\n             NS_ENSURE_SUCCESS(rv, rv);", "bug_id": 644728, "text": "To fix the problem I'm having, I did this in my code:\n\n             nsCOMPtr<nsIDOMDocument> ownerDocument;\n             rv = outNode->GetOwnerDocument(getter_AddRefs(ownerDocument));\n             NS_ENSURE_SUCCESS(rv, rv);\n \n+            // set the document uri\n+            nsCOMPtr<nsIDocument> doc = do_QueryInterface(ownerDocument, &rv);\n+            NS_ENSURE_SUCCESS(rv, rv);\n+\n+            nsCOMPtr<nsIURI> uri;\n+            NS_NewURI(getter_AddRefs(uri), NS_LITERAL_CSTRING(\"about:blank\"));\n+            NS_ENSURE_TRUE(uri, NS_ERROR_UNEXPECTED);\n+            doc->SetDocumentURI(uri);\n\n             nsCOMPtr<nsIDOMElement> divElement;\n             rv = ownerDocument->CreateElement(NS_LITERAL_STRING(\"div\"), getter_AddRefs(divElement));\n             NS_ENSURE_SUCCESS(rv, rv);\n\n             nsCOMPtr<nsIDOMNSHTMLElement> divNSElement = do_QueryInterface(divElement, &rv);\n             NS_ENSURE_SUCCESS(rv, rv);\n              \n             rv = divNSElement->SetInnerHTML(innerHTML);\n             NS_ENSURE_SUCCESS(rv, rv);", "is_private": false, "count": 1, "author": "sspitzer@postbox-inc.com", "time": "2011-03-24T19:49:48Z", "id": 5367010}, {"text": "Henri, why does the parser care about a URI at all here?", "creator": "jonas@sicking.cc", "raw_text": "Henri, why does the parser care about a URI at all here?", "count": 2, "time": "2011-03-24T21:32:20Z", "bug_id": 644728, "attachment_id": null, "tags": [], "creation_time": "2011-03-24T21:32:20Z", "id": 5367362, "is_private": false, "author": "jonas@sicking.cc"}, {"text": "(In reply to comment #2)\n> Henri, why does the parser care about a URI at all here?\n\nIt cares because nsContentSink::Init wants a URI.", "bug_id": 644728, "creator": "hsivonen@mozilla.com", "raw_text": "(In reply to comment #2)\n> Henri, why does the parser care about a URI at all here?\n\nIt cares because nsContentSink::Init wants a URI.", "attachment_id": null, "creation_time": "2011-03-25T10:00:45Z", "tags": [], "id": 5368800, "count": 3, "time": "2011-03-25T10:00:45Z", "author": "hsivonen@mozilla.com", "is_private": false}, {"raw_text": "Can we change that? Or make it possible to use null as URI?", "creator": "jonas@sicking.cc", "text": "Can we change that? Or make it possible to use null as URI?", "time": "2011-03-25T21:49:26Z", "count": 4, "tags": [], "creation_time": "2011-03-25T21:49:26Z", "attachment_id": null, "bug_id": 644728, "is_private": false, "author": "jonas@sicking.cc", "id": 5370749}, {"id": 15178194, "count": 5, "author": "jstutte@mozilla.com", "time": "2020-12-16T11:07:45Z", "is_private": false, "text": "Bulk-downgrade of unassigned, >=5 years untouched DOM/Storage bugs' priority.\n\nIf you have reason to believe this is wrong (especially for the severity), please write a comment and ni :jstutte.", "bug_id": 644728, "creator": "jstutte@mozilla.com", "raw_text": "Bulk-downgrade of unassigned, >=5 years untouched DOM/Storage bugs' priority.\n\nIf you have reason to believe this is wrong (especially for the severity), please write a comment and ni :jstutte.", "attachment_id": null, "tags": [], "creation_time": "2020-12-16T11:07:45Z"}]}}, "comments": {}}