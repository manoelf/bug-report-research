{"comments": {}, "bugs": {"655645": {"comments": [{"bug_id": 655645, "tags": [], "creation_time": "2011-05-09T03:23:42Z", "attachment_id": null, "id": 5456408, "is_private": false, "author": "bzbarsky@mit.edu", "text": "BUILD: Current trunk\n\nSTEPS TO REPRODUCE:\n1)  Load http://www.google.com/events/io/2011/\n2)  Reset zoom (Cmd-0) and observe the painting speed and CPU usage\n3)  Zoom in one notch (Cmd-+) and observer painting and CPU\n\nEXPECTED RESULTS: Not much slower\n\nACTUAL RESULTS: CPU usage goes from 60% to 100%.  Painting goes from pretty fast to crawling.\n\nA profile shows that of the time under PresShell::Paint, 19% is taken by display list construction when zoom is default but _2%_ is taken by the same when zoomed while painting.  So the painting itself seems to be 10x slower or so...\n\nI dug into that a bit, and looks like in the zoomed case the PaintBackground stuff ends up going through ripc_AcquireImage and argb32_image_mark, with the latter calling argb32_sample_ARGB32 and such, and that the CGContextDrawTiledImage path from cairo_quartz_draw_image ends up doing some sort of ripc_TilePattern stuff, some malloc-happy ripl_Create thing, etc (this is all called via ripc_DrawRects from CGContextFillRects).\n\nIn the non-zoomed case, the CGContextDrawTiledImage is very very fast (at least 20x faster), and the CGContextDrawImage part is also faster than the zoomed case, and uses sseCGSBlendXXXX8888 for almost all of its work.\n\nThis all applies to both \"normal\" CSS backgrounds and ones painted via nsDisplayCanvasBackground.  The nsDisplayImage part doesn't seem to get that much slower in the zoomed case....\n\nI have no idea whether there's anything we can do here short of decent 2d acceleration of image painting, but I was just surprised by how big an effect that one zoom setting (which I had even forgotten about; took me some time to isolate the problem) had on rendering performance...", "raw_text": "BUILD: Current trunk\n\nSTEPS TO REPRODUCE:\n1)  Load http://www.google.com/events/io/2011/\n2)  Reset zoom (Cmd-0) and observe the painting speed and CPU usage\n3)  Zoom in one notch (Cmd-+) and observer painting and CPU\n\nEXPECTED RESULTS: Not much slower\n\nACTUAL RESULTS: CPU usage goes from 60% to 100%.  Painting goes from pretty fast to crawling.\n\nA profile shows that of the time under PresShell::Paint, 19% is taken by display list construction when zoom is default but _2%_ is taken by the same when zoomed while painting.  So the painting itself seems to be 10x slower or so...\n\nI dug into that a bit, and looks like in the zoomed case the PaintBackground stuff ends up going through ripc_AcquireImage and argb32_image_mark, with the latter calling argb32_sample_ARGB32 and such, and that the CGContextDrawTiledImage path from cairo_quartz_draw_image ends up doing some sort of ripc_TilePattern stuff, some malloc-happy ripl_Create thing, etc (this is all called via ripc_DrawRects from CGContextFillRects).\n\nIn the non-zoomed case, the CGContextDrawTiledImage is very very fast (at least 20x faster), and the CGContextDrawImage part is also faster than the zoomed case, and uses sseCGSBlendXXXX8888 for almost all of its work.\n\nThis all applies to both \"normal\" CSS backgrounds and ones painted via nsDisplayCanvasBackground.  The nsDisplayImage part doesn't seem to get that much slower in the zoomed case....\n\nI have no idea whether there's anything we can do here short of decent 2d acceleration of image painting, but I was just surprised by how big an effect that one zoom setting (which I had even forgotten about; took me some time to isolate the problem) had on rendering performance...", "creator": "bzbarsky@mit.edu", "time": "2011-05-09T03:23:42Z", "count": 0}, {"raw_text": "I tried saving the page locally, but it doesn't want to run then.... in any case I sort of doubt there's anything special here other than image backgrounds and stuff being animated on top of them.", "creator": "bzbarsky@mit.edu", "text": "I tried saving the page locally, but it doesn't want to run then.... in any case I sort of doubt there's anything special here other than image backgrounds and stuff being animated on top of them.", "time": "2011-05-09T03:24:49Z", "count": 1, "creation_time": "2011-05-09T03:24:49Z", "tags": [], "attachment_id": null, "bug_id": 655645, "author": "bzbarsky@mit.edu", "is_private": false, "id": 5456409}, {"time": "2011-05-09T04:44:36Z", "count": 2, "raw_text": "Interestingly, this -also- happens with D2D (well, D2D does cope, it's still pretty smooth, but CPU goes from 4% (8 core) to 14% so from +/- 30% to over 100%. It also happens with GDI, so I have a feeling we're just hitting some drawing code a lot more in the zoomed case. Blending more shouldn't really matter for D2D. (This is on an HD6970 on full clock speed.. It will not be limited by fillrate :))", "creator": "bas@basschouten.com", "text": "Interestingly, this -also- happens with D2D (well, D2D does cope, it's still pretty smooth, but CPU goes from 4% (8 core) to 14% so from +/- 30% to over 100%. It also happens with GDI, so I have a feeling we're just hitting some drawing code a lot more in the zoomed case. Blending more shouldn't really matter for D2D. (This is on an HD6970 on full clock speed.. It will not be limited by fillrate :))", "is_private": false, "author": "bas@basschouten.com", "id": 5456458, "tags": [], "creation_time": "2011-05-09T04:44:36Z", "attachment_id": null, "bug_id": 655645}, {"creation_time": "2011-05-09T14:00:48Z", "tags": [], "attachment_id": null, "bug_id": 655645, "is_private": false, "author": "bzbarsky@mit.edu", "id": 5456949, "raw_text": "Oh, I should have been clear.  The percentages given in comment 0 are of a single core (on Mac, so CPU percentages are 100% == one core full).\n\nSo it does sound like you're seeing something very similar with d2d.  I wonder what's going on here....", "creator": "bzbarsky@mit.edu", "text": "Oh, I should have been clear.  The percentages given in comment 0 are of a single core (on Mac, so CPU percentages are 100% == one core full).\n\nSo it does sound like you're seeing something very similar with d2d.  I wonder what's going on here....", "time": "2011-05-09T14:00:48Z", "count": 3}, {"bug_id": 655645, "text": "And maybe now we do want to create a testcase, if we think this might not hit every page with backgrounds.", "tags": [], "creation_time": "2011-05-09T14:01:20Z", "attachment_id": null, "raw_text": "And maybe now we do want to create a testcase, if we think this might not hit every page with backgrounds.", "creator": "bzbarsky@mit.edu", "id": 5456952, "is_private": false, "time": "2011-05-09T14:01:20Z", "author": "bzbarsky@mit.edu", "count": 4}, {"count": 5, "time": "2011-05-09T17:13:30Z", "creator": "tnikkel@gmail.com", "raw_text": "(In reply to comment #0)\n> A profile shows that of the time under PresShell::Paint, 19% is taken by\n> display list construction when zoom is default but _2%_ is taken by the same\n> when zoomed while painting.  So the painting itself seems to be 10x slower\n> or so...\n\nDisplay list construction went up 10x in the zoomed case? Or painting?", "text": "(In reply to comment #0)\n> A profile shows that of the time under PresShell::Paint, 19% is taken by\n> display list construction when zoom is default but _2%_ is taken by the same\n> when zoomed while painting.  So the painting itself seems to be 10x slower\n> or so...\n\nDisplay list construction went up 10x in the zoomed case? Or painting?", "author": "tnikkel@gmail.com", "is_private": false, "id": 5457371, "attachment_id": null, "tags": [], "creation_time": "2011-05-09T17:13:30Z", "bug_id": 655645}, {"bug_id": 655645, "text": "The time taken by display list construction (which I assume is constant in wall-clock units no matter what zoom is) was 19% of the non-zoomed case and 2% of the zoomed case.  That suggests that the painting time of the zoomed case was 49x the display list construction time, while the painting time of the non-zoomed case is only 4x display list construction time.  Hence the painting got over 10x slower.", "tags": [], "creation_time": "2011-05-09T17:17:48Z", "attachment_id": null, "raw_text": "The time taken by display list construction (which I assume is constant in wall-clock units no matter what zoom is) was 19% of the non-zoomed case and 2% of the zoomed case.  That suggests that the painting time of the zoomed case was 49x the display list construction time, while the painting time of the non-zoomed case is only 4x display list construction time.  Hence the painting got over 10x slower.", "creator": "bzbarsky@mit.edu", "id": 5457387, "is_private": false, "time": "2011-05-09T17:17:48Z", "author": "bzbarsky@mit.edu", "count": 6}, {"bug_id": 655645, "text": "Created attachment 531082\ntestcase?\n\nHere is a testcase that measures the time it takes to paint a page with a large image 100 times. On my Linux machine (no hardware acceleration) at default zoom it takes about 1300 ms. One zoom step smaller takes about 1500 ms. One zoom step above default takes about 5000 ms. Performance really dropped off a cliff when enlarging the image. How do other platforms and different accelerations do on this?", "attachment_id": 531082, "tags": [], "creation_time": "2011-05-09T17:39:41Z", "creator": "tnikkel@gmail.com", "raw_text": "Here is a testcase that measures the time it takes to paint a page with a large image 100 times. On my Linux machine (no hardware acceleration) at default zoom it takes about 1300 ms. One zoom step smaller takes about 1500 ms. One zoom step above default takes about 5000 ms. Performance really dropped off a cliff when enlarging the image. How do other platforms and different accelerations do on this?", "id": 5457456, "is_private": false, "count": 7, "time": "2011-05-09T17:39:41Z", "author": "tnikkel@gmail.com"}, {"is_private": false, "count": 8, "author": "bzbarsky@mit.edu", "time": "2011-05-09T17:45:41Z", "id": 5457474, "attachment_id": null, "creation_time": "2011-05-09T17:45:41Z", "tags": [], "creator": "bzbarsky@mit.edu", "raw_text": "On my Mac, on that last testcase, I see \"1ms\" at all zoom levels.  Same thing if I disable layer acceleration.  So whatever measurement method that page is using doesn't work here.\n\nAlso note that the fact that it was _background_ images being painted (and possibly tiled background images) seemed pretty key in the slowdown on the google page.", "bug_id": 655645, "text": "On my Mac, on that last testcase, I see \"1ms\" at all zoom levels.  Same thing if I disable layer acceleration.  So whatever measurement method that page is using doesn't work here.\n\nAlso note that the fact that it was _background_ images being painted (and possibly tiled background images) seemed pretty key in the slowdown on the google page."}, {"attachment_id": null, "creation_time": "2011-05-09T17:47:58Z", "tags": [], "creator": "tnikkel@gmail.com", "raw_text": "Oh yeah, that's right, Mac doesn't do anything with the method that testcases uses to repaint the page.", "bug_id": 655645, "text": "Oh yeah, that's right, Mac doesn't do anything with the method that testcases uses to repaint the page.", "is_private": false, "count": 9, "author": "tnikkel@gmail.com", "time": "2011-05-09T17:47:58Z", "id": 5457487}]}}}