{"bugs": {"689368": {"comments": [{"raw_text": "There are some performance improvement possibilities mentioned in bug 684039: \n\n- Keeping a single large primary chunk with exponential increases in secondary chunk sizes. The idea here is to make a highly predictable and small icount allocation path.\n- Keeping the bump pointers rounded to the 8B alignment as an invariant. This would necessitate ripping out the Unaligned API consumers (especially reallocUnaligned), which ties into bug 688891.", "attachment_id": null, "bug_id": 689368, "text": "There are some performance improvement possibilities mentioned in bug 684039: \n\n- Keeping a single large primary chunk with exponential increases in secondary chunk sizes. The idea here is to make a highly predictable and small icount allocation path.\n- Keeping the bump pointers rounded to the 8B alignment as an invariant. This would necessitate ripping out the Unaligned API consumers (especially reallocUnaligned), which ties into bug 688891.", "tags": [], "is_private": false, "id": 5738578, "count": 0, "author": "cdleary@acm.org", "creator": "cdleary@acm.org", "creation_time": "2011-09-26T23:39:22Z", "time": "2011-09-26T23:39:22Z"}, {"attachment_id": null, "raw_text": "Hi,\n\nMy name is Patrick and I am very interested in helping on this project and learning more about working with firefox. My email is pswetz89@gmail.com and I look forward to hearing from you.", "tags": [], "text": "Hi,\n\nMy name is Patrick and I am very interested in helping on this project and learning more about working with firefox. My email is pswetz89@gmail.com and I look forward to hearing from you.", "bug_id": 689368, "count": 1, "id": 5775822, "is_private": false, "time": "2011-10-11T21:21:57Z", "creation_time": "2011-10-11T21:21:57Z", "creator": "pswetz89@gmail.com", "author": "pswetz89@gmail.com"}, {"is_private": false, "count": 2, "id": 5776183, "author": "cdleary@acm.org", "creator": "cdleary@acm.org", "time": "2011-10-11T23:27:33Z", "creation_time": "2011-10-11T23:27:33Z", "raw_text": "Hi Patrick, we typically communicate via bug comments or IRC (irc.mozilla.org channel #jsapi username cdleary). Do you have experience writing/debugging C++?", "attachment_id": null, "tags": [], "bug_id": 689368, "text": "Hi Patrick, we typically communicate via bug comments or IRC (irc.mozilla.org channel #jsapi username cdleary). Do you have experience writing/debugging C++?"}, {"text": "yes i do, I am a cs major at Texas A&M, and c++ is my best language.", "bug_id": 689368, "tags": [], "attachment_id": null, "raw_text": "yes i do, I am a cs major at Texas A&M, and c++ is my best language.", "creator": "pswetz89@gmail.com", "time": "2011-10-13T15:48:33Z", "creation_time": "2011-10-13T15:48:33Z", "author": "pswetz89@gmail.com", "is_private": false, "count": 3, "id": 5780232}, {"is_private": false, "count": 4, "id": 5780973, "creator": "cdleary@acm.org", "creation_time": "2011-10-13T19:48:08Z", "time": "2011-10-13T19:48:08Z", "author": "cdleary@acm.org", "attachment_id": null, "raw_text": "Excellent! The instructions for building the JavaScript engine standalone (which is a much better workflow than developing whole-browser) are here: https://developer.mozilla.org/en/Building_only_SpiderMonkey\n\nCan you let me know when you get that build up and running, or tell me what issues you run into? Also, it would be helpful to know what platform you're developing on (win32, os x, linux).\n\nAlso note that you can find me in IRC at irc.mozilla.org #jsapi username cdleary.", "tags": [], "bug_id": 689368, "text": "Excellent! The instructions for building the JavaScript engine standalone (which is a much better workflow than developing whole-browser) are here: https://developer.mozilla.org/en/Building_only_SpiderMonkey\n\nCan you let me know when you get that build up and running, or tell me what issues you run into? Also, it would be helpful to know what platform you're developing on (win32, os x, linux).\n\nAlso note that you can find me in IRC at irc.mozilla.org #jsapi username cdleary."}, {"attachment_id": null, "raw_text": "i am using win64 but i do have access to a unix server if need be but I prefer not to program over the server", "bug_id": 689368, "text": "i am using win64 but i do have access to a unix server if need be but I prefer not to program over the server", "tags": [], "is_private": false, "count": 5, "id": 5781177, "creator": "pswetz89@gmail.com", "creation_time": "2011-10-13T20:47:54Z", "time": "2011-10-13T20:47:54Z", "author": "pswetz89@gmail.com"}, {"author": "pswetz89@gmail.com", "creator": "pswetz89@gmail.com", "creation_time": "2011-10-13T21:13:32Z", "time": "2011-10-13T21:13:32Z", "is_private": false, "count": 6, "id": 5781257, "tags": [], "bug_id": 689368, "text": "Also, I got the build up and running", "raw_text": "Also, I got the build up and running", "attachment_id": null}, {"creator": "cdleary@acm.org", "creation_time": "2011-10-13T22:32:57Z", "time": "2011-10-13T22:32:57Z", "author": "cdleary@acm.org", "is_private": false, "count": 7, "id": 5781480, "bug_id": 689368, "text": "Great!\n\nSo now that you have the JS shell, can you download https://bugzilla.mozilla.org/attachment.cgi?id=429916 , unzip it (it should have gmail_combined.js inside, and then run:\n\n./js -e 'start = new Date(); compile(snarf(\"/path/to/gmail_combined.js\")); end = new Date(); print(end - start)'\n\nThis does a parse-and-emit-bytecode-but-don't-run on the contents of gmail_combined.js. On my machine I get ~100ms. Make sure you're running an optimized build!", "tags": [], "attachment_id": null, "raw_text": "Great!\n\nSo now that you have the JS shell, can you download https://bugzilla.mozilla.org/attachment.cgi?id=429916 , unzip it (it should have gmail_combined.js inside, and then run:\n\n./js -e 'start = new Date(); compile(snarf(\"/path/to/gmail_combined.js\")); end = new Date(); print(end - start)'\n\nThis does a parse-and-emit-bytecode-but-don't-run on the contents of gmail_combined.js. On my machine I get ~100ms. Make sure you're running an optimized build!"}, {"tags": [], "bug_id": 689368, "text": "Somebody pinged me on IRC with a link to their patch -- if you have one, please attach it to this bug and feedback? cdleary!", "attachment_id": null, "raw_text": "Somebody pinged me on IRC with a link to their patch -- if you have one, please attach it to this bug and feedback? cdleary!", "creator": "cdleary@acm.org", "creation_time": "2012-01-04T18:49:21Z", "time": "2012-01-04T18:49:21Z", "author": "cdleary@acm.org", "is_private": false, "count": 8, "id": 5954670}, {"count": 9, "id": 7245069, "attachment_id": null, "is_private": false, "raw_text": "Hi, is anyone working on this bug?", "creation_time": "2013-03-26T15:55:57Z", "time": "2013-03-26T15:55:57Z", "creator": "mrordinaire@gmail.com", "tags": [], "bug_id": 689368, "text": "Hi, is anyone working on this bug?", "author": "mrordinaire@gmail.com"}, {"id": 7246929, "count": 10, "is_private": false, "time": "2013-03-26T21:58:55Z", "creation_time": "2013-03-26T21:58:55Z", "creator": "terrence.d.cole@gmail.com", "author": "terrence.d.cole@gmail.com", "attachment_id": null, "raw_text": "(In reply to Do Nhat Minh from comment #9)\n> Hi, is anyone working on this bug?\n\nIt looks abandoned to me, feel free to take it! Chris isn't with Mozilla anymore, however, so there's currently no mentor.", "tags": [], "text": "(In reply to Do Nhat Minh from comment #9)\n> Hi, is anyone working on this bug?\n\nIt looks abandoned to me, feel free to take it! Chris isn't with Mozilla anymore, however, so there's currently no mentor.", "bug_id": 689368}, {"author": "mrordinaire@gmail.com", "creator": "mrordinaire@gmail.com", "time": "2013-03-27T01:25:49Z", "creation_time": "2013-03-27T01:25:49Z", "is_private": false, "id": 7247705, "count": 11, "tags": [], "bug_id": 689368, "text": "can I get assigned to this bug?\n\nalso, can you please provide more information on how to get started with it? I'm a little fuzzy.", "raw_text": "can I get assigned to this bug?\n\nalso, can you please provide more information on how to get started with it? I'm a little fuzzy.", "attachment_id": null}, {"id": 7248737, "count": 12, "is_private": false, "author": "till@tillschneidereit.net", "creation_time": "2013-03-27T10:55:07Z", "time": "2013-03-27T10:55:07Z", "creator": "till@tillschneidereit.net", "raw_text": "AFAICT, the idea is to revive a more complex implementation of LifoAlloc that uses a large primary chunk that should be a able to satisfy most requests quickly and only fall back to smaller secondary chunks in the unusual case of exceeding the primary chunk's capacity.\nSee https://bugzilla.mozilla.org/attachment.cgi?id=558011&action=diff#a/js/src/jsarena.h_sec3, especially the comment and implementation for class BumpArena, for an explanation of this.\n\nI'm not an expert on this part of the code at all, so requesting feedback from someone who is on the question whether this change makes more sense now than it did back then (see https://bugzilla.mozilla.org/show_bug.cgi?id=684039#c6, https://bugzilla.mozilla.org/show_bug.cgi?id=684039#c15 and the next few comments for a discussion).", "attachment_id": null, "tags": [], "text": "AFAICT, the idea is to revive a more complex implementation of LifoAlloc that uses a large primary chunk that should be a able to satisfy most requests quickly and only fall back to smaller secondary chunks in the unusual case of exceeding the primary chunk's capacity.\nSee https://bugzilla.mozilla.org/attachment.cgi?id=558011&action=diff#a/js/src/jsarena.h_sec3, especially the comment and implementation for class BumpArena, for an explanation of this.\n\nI'm not an expert on this part of the code at all, so requesting feedback from someone who is on the question whether this change makes more sense now than it did back then (see https://bugzilla.mozilla.org/show_bug.cgi?id=684039#c6, https://bugzilla.mozilla.org/show_bug.cgi?id=684039#c15 and the next few comments for a discussion).", "bug_id": 689368}, {"tags": [], "text": "I'm unassigning myself from this bug as I don't have time to work on it in the near future and I don't want to reserve it to myself. Please have a swing at this bug if it's making you itch.", "bug_id": 689368, "attachment_id": null, "raw_text": "I'm unassigning myself from this bug as I don't have time to work on it in the near future and I don't want to reserve it to myself. Please have a swing at this bug if it's making you itch.", "creation_time": "2013-04-16T15:22:34Z", "time": "2013-04-16T15:22:34Z", "creator": "mrordinaire@gmail.com", "author": "mrordinaire@gmail.com", "id": 7320722, "count": 13, "is_private": false}, {"count": 14, "id": 9755104, "is_private": false, "author": "clauber.halic@gmail.com", "time": "2015-01-06T00:23:53Z", "creation_time": "2015-01-06T00:23:53Z", "creator": "clauber.halic@gmail.com", "raw_text": "Hey everybody!\n\nI'm following this bug for indication of Brian Hackett.\n\nThis bug still working or relevant?\n\nBest!", "attachment_id": null, "tags": [], "text": "Hey everybody!\n\nI'm following this bug for indication of Brian Hackett.\n\nThis bug still working or relevant?\n\nBest!", "bug_id": 689368}, {"bug_id": 689368, "text": "That's a good question, Clauber. Till, is this still a thing?", "tags": [], "raw_text": "That's a good question, Clauber. Till, is this still a thing?", "attachment_id": null, "author": "mhoye@mozilla.com", "time": "2015-02-03T18:53:38Z", "creation_time": "2015-02-03T18:53:38Z", "creator": "mhoye@mozilla.com", "id": 9875857, "count": 15, "is_private": false}, {"author": "till@tillschneidereit.net", "creation_time": "2015-02-04T14:23:02Z", "time": "2015-02-04T14:23:02Z", "creator": "till@tillschneidereit.net", "count": 16, "id": 9879675, "is_private": false, "tags": [], "text": "I honestly don't know. Needinfo'ing terrence, who probably does.", "bug_id": 689368, "raw_text": "I honestly don't know. Needinfo'ing terrence, who probably does.", "attachment_id": null}, {"is_private": false, "id": 9880507, "count": 17, "creator": "terrence.d.cole@gmail.com", "creation_time": "2015-02-04T17:24:53Z", "time": "2015-02-04T17:24:53Z", "author": "terrence.d.cole@gmail.com", "attachment_id": null, "raw_text": "I also have no idea: as with any performance bug, it is impossible to say without (1) profiling and (2) measuring or estimating the downstream effects.\n\nThe first question is easy enough to answer with perf or instruments and a few bencharmarks. I'd think no, but then Ion uses a less costly allocator for a reason, so maybe there is some lingering overhead here?\n\nThe second question is harder to answer, but has a larger potential payoff; there are a number of aspects here, as eluded to in comment 1. Will a larger first chunk improve locality? Enough to be worth deploying on mobile? Will using word alignment result in faster accesses for all usage downstream? How much more memory will it use? Does it actually pay off with all the new pages in play? This is /much/ harder to answer, although a tool like vtune could probably help here by showing cache misses and unaligned accesses over time.\n\nWhether this is a good first bug, however, is going to depend on our good first contributor and how comfortable they are with making complicated, Frankenstein-like experiments on a complex and unfamiliar code base. Actually, now that I think about it, I'd go so far as to say that this is a fairly terrible first bug and I have no idea what Chris was thinking.\n\nThus, I'd think that if this is an issue, it's because it has become an issue since we deployed lifo-alloc: it certinaly wasn't a perf issue at the time or we wouldn't have deployed it. In any case, it may be worth profiling, but I wouldn't spend more than an hour or so looking at it. Specifically, I'd grab a compilation heavy benchmark (maybe codegen with --ion-eager), run it through perf and cachegrind and see if anything stands out. I'd be willing to bet solid money that LifoAlloc isn't going to be in the top ten. Then I'd close this bug. If LifoAlloc performance does become a bottleneck at some point in the future, the ideas in this bug aren't going to make or break our hypothetical future attempt at fixing it.", "bug_id": 689368, "text": "I also have no idea: as with any performance bug, it is impossible to say without (1) profiling and (2) measuring or estimating the downstream effects.\n\nThe first question is easy enough to answer with perf or instruments and a few bencharmarks. I'd think no, but then Ion uses a less costly allocator for a reason, so maybe there is some lingering overhead here?\n\nThe second question is harder to answer, but has a larger potential payoff; there are a number of aspects here, as eluded to in comment 1. Will a larger first chunk improve locality? Enough to be worth deploying on mobile? Will using word alignment result in faster accesses for all usage downstream? How much more memory will it use? Does it actually pay off with all the new pages in play? This is /much/ harder to answer, although a tool like vtune could probably help here by showing cache misses and unaligned accesses over time.\n\nWhether this is a good first bug, however, is going to depend on our good first contributor and how comfortable they are with making complicated, Frankenstein-like experiments on a complex and unfamiliar code base. Actually, now that I think about it, I'd go so far as to say that this is a fairly terrible first bug and I have no idea what Chris was thinking.\n\nThus, I'd think that if this is an issue, it's because it has become an issue since we deployed lifo-alloc: it certinaly wasn't a perf issue at the time or we wouldn't have deployed it. In any case, it may be worth profiling, but I wouldn't spend more than an hour or so looking at it. Specifically, I'd grab a compilation heavy benchmark (maybe codegen with --ion-eager), run it through perf and cachegrind and see if anything stands out. I'd be willing to bet solid money that LifoAlloc isn't going to be in the top ten. Then I'd close this bug. If LifoAlloc performance does become a bottleneck at some point in the future, the ideas in this bug aren't going to make or break our hypothetical future attempt at fixing it.", "tags": []}, {"author": "mhoye@mozilla.com", "creation_time": "2015-02-04T20:42:57Z", "time": "2015-02-04T20:42:57Z", "creator": "mhoye@mozilla.com", "id": 9881547, "count": 18, "is_private": false, "text": "\"Whether this is a good first bug, however, is going to depend on our good first contributor and how comfortable they are with making complicated, Frankenstein-like experiments on a complex and unfamiliar code base.\"\n\nYeah, I'd say that's prima-facie evidence against. If somebody would like to take this up as a mentored bug I'd be happy to recirculate it, but I'm dropping its good-first status.", "bug_id": 689368, "tags": [], "raw_text": "\"Whether this is a good first bug, however, is going to depend on our good first contributor and how comfortable they are with making complicated, Frankenstein-like experiments on a complex and unfamiliar code base.\"\n\nYeah, I'd say that's prima-facie evidence against. If somebody would like to take this up as a mentored bug I'd be happy to recirculate it, but I'm dropping its good-first status.", "attachment_id": null}, {"id": 10183399, "count": 19, "is_private": false, "time": "2015-04-22T00:07:43Z", "creation_time": "2015-04-22T00:07:43Z", "creator": "clauber.halic@gmail.com", "author": "clauber.halic@gmail.com", "attachment_id": null, "raw_text": "As I'm a noob at SpiderMonkey, good-first would be cool, but no problem!\n\nI'll try another good-first for SpiderMonkey!\n\nThank you [:terrence] and [:mhoye] :)", "bug_id": 689368, "text": "As I'm a noob at SpiderMonkey, good-first would be cool, but no problem!\n\nI'll try another good-first for SpiderMonkey!\n\nThank you [:terrence] and [:mhoye] :)", "tags": []}]}}, "comments": {}}