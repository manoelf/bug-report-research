{"bugs": {"637264": {"comments": [{"count": 0, "text": "Steps to reproduce:\n 1) Open Web Console.\n 2) Load http://hsivonen.iki.fi/test/moz/premature-script-execution/test-external-log.html\n 3) Now load http://hsivonen.iki.fi/test/moz/premature-script-execution/test-external-alert.html for comparison.\n 4) For comparison, load http://hsivonen.iki.fi/test/moz/premature-script-execution/test-external-alert.html in other browsers.\n\nActual results:\nWhen console.log() is used, the logged messages appear in the order that is correct according to HTML5 and the run-to-completion JavaScript execution semantics. That is, the message from the inserter script appears first and the the message from the external script appears second.\n\nWhen alert() is used in any other browser (IE9, Safari 5, Opera 11, Chrome 9 and 10), the messages appear in the same order as console.log() messages appear in Minefield. However, when alert() is used in Minefield, the messages appear in the wrong order.\n\nExpected results:\nExpected alert() messages in Firefox to show in the same order as console.log() in Firefox and alert() in every other browser.", "author": "hsivonen@mozilla.com", "creator": "hsivonen@mozilla.com", "attachment_id": null, "time": "2011-02-28T10:04:01Z", "id": 5308149, "raw_text": "Steps to reproduce:\n 1) Open Web Console.\n 2) Load http://hsivonen.iki.fi/test/moz/premature-script-execution/test-external-log.html\n 3) Now load http://hsivonen.iki.fi/test/moz/premature-script-execution/test-external-alert.html for comparison.\n 4) For comparison, load http://hsivonen.iki.fi/test/moz/premature-script-execution/test-external-alert.html in other browsers.\n\nActual results:\nWhen console.log() is used, the logged messages appear in the order that is correct according to HTML5 and the run-to-completion JavaScript execution semantics. That is, the message from the inserter script appears first and the the message from the external script appears second.\n\nWhen alert() is used in any other browser (IE9, Safari 5, Opera 11, Chrome 9 and 10), the messages appear in the same order as console.log() messages appear in Minefield. However, when alert() is used in Minefield, the messages appear in the wrong order.\n\nExpected results:\nExpected alert() messages in Firefox to show in the same order as console.log() in Firefox and alert() in every other browser.", "bug_id": 637264, "creation_time": "2011-02-28T10:04:01Z", "tags": [], "is_private": false}, {"creation_time": "2011-03-01T03:37:32Z", "bug_id": 637264, "raw_text": "More verbose testcase:\n\nhttp://dolske.net/mozilla/tests/prompt/script_load_order.html\n\nWith both tab-modal and window-modal prompts, both scripts begin execution, as you can see from the console.log() output. The difference in behavior is because we (currently) don't block multiple concurrent alerts, but just place the most recent one on top. I suppose we could place it on the bottom, in which case you'd get the same behavior as window-modal prompts... That is, the main page's alert() would be on top, but that script's execution wouldn't resume immediately upon clicking OK because the 2nd event loop on top (for the subscript's prompt) is still spinning.\n\nIs this actually spec'd?", "tags": [], "creator": "jdinbox@gmail.com", "attachment_id": null, "is_private": false, "text": "More verbose testcase:\n\nhttp://dolske.net/mozilla/tests/prompt/script_load_order.html\n\nWith both tab-modal and window-modal prompts, both scripts begin execution, as you can see from the console.log() output. The difference in behavior is because we (currently) don't block multiple concurrent alerts, but just place the most recent one on top. I suppose we could place it on the bottom, in which case you'd get the same behavior as window-modal prompts... That is, the main page's alert() would be on top, but that script's execution wouldn't resume immediately upon clicking OK because the 2nd event loop on top (for the subscript's prompt) is still spinning.\n\nIs this actually spec'd?", "count": 1, "time": "2011-03-01T03:37:32Z", "author": "jdinbox@gmail.com", "id": 5310628}, {"count": 2, "text": "(Note: you can test the window-modal behavior flavor in Firefox by toggling the prompts.tab_modal.enabled pref)", "author": "jdinbox@gmail.com", "creator": "jdinbox@gmail.com", "attachment_id": null, "id": 5310629, "time": "2011-03-01T03:38:16Z", "tags": [], "raw_text": "(Note: you can test the window-modal behavior flavor in Firefox by toggling the prompts.tab_modal.enabled pref)", "creation_time": "2011-03-01T03:38:16Z", "bug_id": 637264, "is_private": false}, {"creator": "hsivonen@mozilla.com", "attachment_id": null, "text": "(In reply to comment #1)\n> Is this actually spec'd?\n\nYes:\nhttp://www.whatwg.org/specs/web-apps/current-work/#dom-alert\nhttp://www.whatwg.org/specs/web-apps/current-work/#prepare-a-script\nhttp://www.whatwg.org/specs/web-apps/current-work/#pause\n\nI guess the conclusion is that to get the right behavior, we'd need per-window (or per constellation of window objects that are reachable from each other, rather) task queues instead of a global task queue for most non-user events (including network tasks and continuation tasks posted by the script loader).", "count": 3, "author": "hsivonen@mozilla.com", "raw_text": "(In reply to comment #1)\n> Is this actually spec'd?\n\nYes:\nhttp://www.whatwg.org/specs/web-apps/current-work/#dom-alert\nhttp://www.whatwg.org/specs/web-apps/current-work/#prepare-a-script\nhttp://www.whatwg.org/specs/web-apps/current-work/#pause\n\nI guess the conclusion is that to get the right behavior, we'd need per-window (or per constellation of window objects that are reachable from each other, rather) task queues instead of a global task queue for most non-user events (including network tasks and continuation tasks posted by the script loader).", "bug_id": 637264, "creation_time": "2011-03-01T11:50:49Z", "tags": [], "is_private": false, "time": "2011-03-01T11:50:49Z", "id": 5311216}, {"author": "hsivonen@mozilla.com", "text": "Maybe this should be treated as a script loader bug instead.\n\nWhat's the right way to ask a window object if it has been paused due to a modal dialog? nsGlobalWindow::IsFrozen?\n\nDo timers get suspended in window objects reachable (via .parent, .opener, etc.) from the window that has an alert open?", "count": 4, "attachment_id": null, "creator": "hsivonen@mozilla.com", "id": 5314431, "time": "2011-03-02T07:09:01Z", "is_private": false, "tags": [], "bug_id": 637264, "creation_time": "2011-03-02T07:09:01Z", "raw_text": "Maybe this should be treated as a script loader bug instead.\n\nWhat's the right way to ask a window object if it has been paused due to a modal dialog? nsGlobalWindow::IsFrozen?\n\nDo timers get suspended in window objects reachable (via .parent, .opener, etc.) from the window that has an alert open?"}, {"is_private": false, "tags": [], "raw_text": "I think that to get this right in general, we do need to implement the HTML5 event model, which does have lots and lots of separate task queues.", "creation_time": "2011-03-02T17:47:37Z", "bug_id": 637264, "id": 5315608, "time": "2011-03-02T17:47:37Z", "attachment_id": null, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "text": "I think that to get this right in general, we do need to implement the HTML5 event model, which does have lots and lots of separate task queues.", "count": 5}, {"author": "khuey@kylehuey.com", "count": 6, "text": "(In reply to comment #5)\n> I think that to get this right in general, we do need to implement the HTML5\n> event model, which does have lots and lots of separate task queues.\n\nDo we have a bug for that?  I couldn't find one.", "attachment_id": null, "creator": "khuey@kylehuey.com", "time": "2011-03-05T12:16:39Z", "id": 5323901, "is_private": false, "bug_id": 637264, "creation_time": "2011-03-05T12:16:39Z", "raw_text": "(In reply to comment #5)\n> I think that to get this right in general, we do need to implement the HTML5\n> event model, which does have lots and lots of separate task queues.\n\nDo we have a bug for that?  I couldn't find one.", "tags": []}, {"id": 5323973, "time": "2011-03-05T14:19:07Z", "tags": [], "creation_time": "2011-03-05T14:19:07Z", "bug_id": 637264, "raw_text": "We don't yet.  Of course a first step is auditing the model (and all events it dispatches) to make sure it makes sense...", "is_private": false, "count": 7, "text": "We don't yet.  Of course a first step is auditing the model (and all events it dispatches) to make sure it makes sense...", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "attachment_id": null}, {"text": "*** Bug 669926 has been marked as a duplicate of this bug. ***", "count": 8, "author": "khuey@kylehuey.com", "creator": "khuey@kylehuey.com", "attachment_id": null, "id": 5579453, "time": "2011-07-07T20:31:15Z", "tags": [], "raw_text": "", "creation_time": "2011-07-07T20:31:15Z", "bug_id": 637264, "is_private": false}, {"attachment_id": null, "creator": "cork@box.qzdev.se", "author": "cork@box.qzdev.se", "count": 9, "text": "*** Bug 675182 has been marked as a duplicate of this bug. ***", "is_private": false, "raw_text": "", "creation_time": "2011-07-29T17:42:20Z", "bug_id": 637264, "tags": [], "time": "2011-07-29T17:42:20Z", "id": 5622320}, {"author": "mozilla+bmo@noorenberghe.ca", "text": "Bulk move to Toolkit::Notifications and Alerts\n\nFilter on notifications-and-alerts-component.", "count": 10, "attachment_id": null, "creator": "mozilla+bmo@noorenberghe.ca", "time": "2014-05-21T06:41:30Z", "id": 8819995, "is_private": false, "creation_time": "2014-05-21T06:41:30Z", "bug_id": 637264, "raw_text": "Bulk move to Toolkit::Notifications and Alerts\n\nFilter on notifications-and-alerts-component.", "tags": []}]}}, "comments": {}}