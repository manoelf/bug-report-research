{"comments": {}, "bugs": {"659930": {"comments": [{"creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com", "bug_id": 659930, "is_private": false, "count": 0, "tags": [], "id": 5494891, "text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nIf all history for a bookmarked url is cleared and then the bookmark is deleted, the expectation is that Fx would forget about it, but moz_places and moz_favicons records remain.\n\nWhen a bookmark is deleted, if the corresponding moz_paces record has no visits, it should be deleted.  Then if the last moz_places entry for a site is removed the corresponding favicon should be removed.\n\nThe idea here (as in Bug 659916) is that Fx should not be keeping an inadvertent stealth history.  Only what is needed to should be remembered and when no longer needed, should be forgotten.\n\n\n\nReproducible: Always", "attachment_id": null, "time": "2011-05-26T14:36:33Z", "creation_time": "2011-05-26T14:36:33Z", "raw_text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nIf all history for a bookmarked url is cleared and then the bookmark is deleted, the expectation is that Fx would forget about it, but moz_places and moz_favicons records remain.\n\nWhen a bookmark is deleted, if the corresponding moz_paces record has no visits, it should be deleted.  Then if the last moz_places entry for a site is removed the corresponding favicon should be removed.\n\nThe idea here (as in Bug 659916) is that Fx should not be keeping an inadvertent stealth history.  Only what is needed to should be remembered and when no longer needed, should be forgotten.\n\n\n\nReproducible: Always"}, {"raw_text": "Expiration is async, they don't disappear immediately, they disappear at the first expiration run (some minute later).", "creation_time": "2011-05-26T14:54:48Z", "attachment_id": null, "time": "2011-05-26T14:54:48Z", "text": "Expiration is async, they don't disappear immediately, they disappear at the first expiration run (some minute later).", "id": 5494942, "count": 1, "is_private": false, "tags": [], "bug_id": 659930, "author": "mak@mozilla.com", "creator": "mak@mozilla.com"}, {"count": 2, "is_private": false, "tags": [], "id": 5496949, "bug_id": 659930, "raw_text": "(In reply to comment #1)\n> Expiration is async, they don't disappear immediately, they disappear at the\n> first expiration run (some minute later).\n\nThe async cleanup is not occurring in this case.  Please try to repro:\n\nxp sp3, Fx 4.0.1, new profile\n\n1. start with a single about:home tab\n2. delete all bookmarks\n3. clear everything\n4. open http://www.google.com/\n5. bookmark it, return to about:home\n6. clear all browsing history\n7. delete the Google bookmark\n8. let Fx idle for 15 minutes\n9. moz_places and moz_favicons records for Google remain", "creation_time": "2011-05-27T04:25:12Z", "text": "(In reply to comment #1)\n> Expiration is async, they don't disappear immediately, they disappear at the\n> first expiration run (some minute later).\n\nThe async cleanup is not occurring in this case.  Please try to repro:\n\nxp sp3, Fx 4.0.1, new profile\n\n1. start with a single about:home tab\n2. delete all bookmarks\n3. clear everything\n4. open http://www.google.com/\n5. bookmark it, return to about:home\n6. clear all browsing history\n7. delete the Google bookmark\n8. let Fx idle for 15 minutes\n9. moz_places and moz_favicons records for Google remain", "attachment_id": null, "time": "2011-05-27T04:25:12Z", "creator": "al_9x@yahoo.com", "author": "al_9x@yahoo.com"}, {"text": "yeah, I know what happens here, practically expiration does never expire the last url added to history, for a simple reason. The old synchronous visit addition adds the page and later the visit, if expiration runs in the middle it may removed the page before its first visit is added.\nConsidering that the old path is practically only used in tests and performances are less important, we may instead notify expiration before adding a certain page and after adding the visit, so that it can correctly ignore it only for that timeframe.", "attachment_id": null, "time": "2011-05-27T14:21:50Z", "creation_time": "2011-05-27T14:21:50Z", "raw_text": "yeah, I know what happens here, practically expiration does never expire the last url added to history, for a simple reason. The old synchronous visit addition adds the page and later the visit, if expiration runs in the middle it may removed the page before its first visit is added.\nConsidering that the old path is practically only used in tests and performances are less important, we may instead notify expiration before adding a certain page and after adding the visit, so that it can correctly ignore it only for that timeframe.", "bug_id": 659930, "tags": [], "is_private": false, "count": 3, "id": 5497725, "creator": "mak@mozilla.com", "author": "mak@mozilla.com"}, {"creation_time": "2018-05-24T11:21:52Z", "raw_text": "Per policy at https://wiki.mozilla.org/Bug_Triage/Projects/Bug_Handling/Bug_Husbandry#Inactive_Bugs. If this bug is not an enhancement request or a bug not present in a supported release of Firefox, then it may be reopened.", "text": "Per policy at https://wiki.mozilla.org/Bug_Triage/Projects/Bug_Handling/Bug_Husbandry#Inactive_Bugs. If this bug is not an enhancement request or a bug not present in a supported release of Firefox, then it may be reopened.", "attachment_id": null, "time": "2018-05-24T11:21:52Z", "is_private": false, "count": 4, "tags": [], "id": 13339455, "bug_id": 659930, "creator": "automation@bmo.tld", "author": "automation@bmo.tld"}]}}}