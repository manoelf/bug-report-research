{"bugs": {"1632057": {"comments": [{"bug_id": 1632057, "attachment_id": null, "text": "I don't expect this to catch anything, but we could poison the original content nursery cells as soon as they are copied to the tenured heap, as nothing should be using their contents after this point.\n\n(It turned out after I tried this that the GC does write forwarding pointers into inline buffers in objects, so the memory itself can still be used just not the original contents).", "raw_text": "I don't expect this to catch anything, but we could poison the original content nursery cells as soon as they are copied to the tenured heap, as nothing should be using their contents after this point.\n\n(It turned out after I tried this that the GC does write forwarding pointers into inline buffers in objects, so the memory itself can still be used just not the original contents).", "is_private": false, "id": 14771085, "author": "jcoppeard@mozilla.com", "count": 0, "tags": [], "time": "2020-04-22T08:07:32Z", "creator": "jcoppeard@mozilla.com", "creation_time": "2020-04-22T08:07:32Z"}, {"tags": [], "count": 1, "time": "2020-04-22T19:29:46Z", "creation_time": "2020-04-22T19:29:46Z", "creator": "sphink@gmail.com", "bug_id": 1632057, "attachment_id": null, "is_private": false, "text": "This will collide with deduplicating nursery strings, though it wouldn't be hard to fix up to skip the part we need. Nursery strings need to store some data in the nursery area until all strings have been processed. (An additional word beyond the forwarding pointer and ref chain, I mean.)", "raw_text": "This will collide with deduplicating nursery strings, though it wouldn't be hard to fix up to skip the part we need. Nursery strings need to store some data in the nursery area until all strings have been processed. (An additional word beyond the forwarding pointer and ref chain, I mean.)", "id": 14772495, "author": "sphink@gmail.com"}, {"is_private": false, "raw_text": "(In reply to Steve Fink [:sfink] [:s:] from comment #1)\nOh that's interesting.  We could make this poisoning optional or make it a zeal mode if that's easier.", "text": "(In reply to Steve Fink [:sfink] [:s:] from comment #1)\nOh that's interesting.  We could make this poisoning optional or make it a zeal mode if that's easier.", "author": "jcoppeard@mozilla.com", "id": 14773342, "bug_id": 1632057, "attachment_id": null, "creation_time": "2020-04-23T07:36:47Z", "creator": "jcoppeard@mozilla.com", "tags": [], "count": 2, "time": "2020-04-23T07:36:47Z"}, {"is_private": false, "text": "Just to be sure I'm understanding what you're proposing: we already can't poison the first two words of nursery cells immediately after copying to the tenured heap, because we need the forwarding pointer and the linked list link in RelocationOverlay. String deduplication makes a StringRelocationOverlay that extends RelocationOverlay to include an additional 3rd word (guaranteed to fit because all strings are big enough, even though not all Cells are). So it's probably fine to do this now, and then when landing string deduplication we'll just need to poison strings starting at offset 3 instead of offset 2.", "raw_text": "Just to be sure I'm understanding what you're proposing: we already can't poison the first two words of nursery cells immediately after copying to the tenured heap, because we need the forwarding pointer and the linked list link in RelocationOverlay. String deduplication makes a StringRelocationOverlay that extends RelocationOverlay to include an additional 3rd word (guaranteed to fit because all strings are big enough, even though not all Cells are). So it's probably fine to do this now, and then when landing string deduplication we'll just need to poison strings starting at offset 3 instead of offset 2.", "author": "sphink@gmail.com", "id": 14774275, "bug_id": 1632057, "attachment_id": null, "creation_time": "2020-04-23T16:31:59Z", "creator": "sphink@gmail.com", "tags": [], "count": 3, "time": "2020-04-23T16:31:59Z"}, {"text": "(In reply to Steve Fink [:sfink] [:s:] from comment #3)\nYes, this would be poisoning the rest of the cell after the second word.  I can hold off for now though.", "raw_text": "(In reply to Steve Fink [:sfink] [:s:] from comment #3)\nYes, this would be poisoning the rest of the cell after the second word.  I can hold off for now though.", "is_private": false, "creator": "jcoppeard@mozilla.com", "creation_time": "2020-04-24T16:10:10Z", "author": "jcoppeard@mozilla.com", "id": 14776620, "bug_id": 1632057, "count": 4, "tags": [], "time": "2020-04-24T16:10:10Z", "attachment_id": null}, {"count": 5, "tags": [], "time": "2020-04-27T08:06:33Z", "creator": "jcoppeard@mozilla.com", "creation_time": "2020-04-27T08:06:33Z", "bug_id": 1632057, "attachment_id": null, "text": "As Ted discovered, this can't work because of writing forwarding pointers into the cell.  This happens in the object moved hook, and these hooks make use of the original content of the object.", "raw_text": "As Ted discovered, this can't work because of writing forwarding pointers into the cell.  This happens in the object moved hook, and these hooks make use of the original content of the object.", "is_private": false, "author": "jcoppeard@mozilla.com", "id": 14780988}]}}, "comments": {}}