{"bugs": {"628315": {"comments": [{"bug_id": 628315, "attachment_id": null, "author": "philipp@weitershausen.de", "tags": [], "count": 0, "raw_text": "We can bypass a lot of synchronous read operations in nsINavBookmarkService by directly using SQL. These will be async where available and often even simpler to use than Places' query API. (Maybe not on 3.5/3.6 where we need to make JOINs to get GUIDs.)", "creation_time": "2011-01-24T17:58:51Z", "creator": "philipp@weitershausen.de", "time": "2011-01-24T17:58:51Z", "id": 5222258, "text": "We can bypass a lot of synchronous read operations in nsINavBookmarkService by directly using SQL. These will be async where available and often even simpler to use than Places' query API. (Maybe not on 3.5/3.6 where we need to make JOINs to get GUIDs.)", "is_private": false}, {"time": "2011-01-24T18:14:37Z", "text": "\\o/", "id": 5222312, "is_private": false, "creator": "bugzilla@twinql.com", "creation_time": "2011-01-24T18:14:37Z", "raw_text": "\\o/", "count": 1, "author": "bugzilla@twinql.com", "tags": [], "bug_id": 628315, "attachment_id": null}, {"tags": [], "creator": "mconnor@mozilla.com", "author": "mconnor@mozilla.com", "attachment_id": null, "bug_id": 628315, "creation_time": "2011-01-24T19:44:58Z", "id": 5222656, "raw_text": "This is likely true, but makes me sad.  Monkeypatching ftl!", "text": "This is likely true, but makes me sad.  Monkeypatching ftl!", "time": "2011-01-24T19:44:58Z", "is_private": false, "count": 2}, {"tags": [], "author": "philipp@weitershausen.de", "attachment_id": null, "bug_id": 628315, "raw_text": "(In reply to comment #2)\n> This is likely true, but makes me sad.  Monkeypatching ftl!\n\nNo monkey patching needed... Just stop using the APIs in nsINavBookmarkService and run queries against its DBConnection instead. We already do that in *some* parts of the bookmark engine (cf bug 615410, bug 623418), just not in all.\n\nGoing fwd we could even use a separate read-only db connection to avoid lock contention with simultaneous write operations.", "count": 3, "creator": "philipp@weitershausen.de", "creation_time": "2011-01-24T19:50:30Z", "is_private": false, "text": "(In reply to comment #2)\n> This is likely true, but makes me sad.  Monkeypatching ftl!\n\nNo monkey patching needed... Just stop using the APIs in nsINavBookmarkService and run queries against its DBConnection instead. We already do that in *some* parts of the bookmark engine (cf bug 615410, bug 623418), just not in all.\n\nGoing fwd we could even use a separate read-only db connection to avoid lock contention with simultaneous write operations.", "id": 5222676, "time": "2011-01-24T19:50:30Z"}, {"count": 4, "raw_text": "Marco, assigning it to you to reprioritize this for snappy purposes or wontfix.", "bug_id": 628315, "attachment_id": null, "author": "taras.mozilla@glek.net", "tags": [], "time": "2011-12-01T20:48:09Z", "id": 5886266, "text": "Marco, assigning it to you to reprioritize this for snappy purposes or wontfix.", "is_private": false, "creation_time": "2011-12-01T20:48:09Z", "creator": "taras.mozilla@glek.net"}, {"is_private": false, "id": 5886280, "text": "Marco says P2 is correct.\n< mak> taras: I discussed that with rnewman already, I think Sync team may have resources in January\nrnewman can reassign this in his team", "raw_text": "Marco says P2 is correct.\n< mak> taras: I discussed that with rnewman already, I think Sync team may have resources in January\nrnewman can reassign this in his team", "time": "2011-12-01T20:52:15Z", "count": 5, "tags": [], "creator": "taras.mozilla@glek.net", "author": "taras.mozilla@glek.net", "creation_time": "2011-12-01T20:52:15Z", "attachment_id": null, "bug_id": 628315}, {"is_private": false, "id": 6913404, "text": "See also Bug 519514, which might be a better approach.", "time": "2012-12-14T02:13:46Z", "creator": "bugzilla@twinql.com", "creation_time": "2012-12-14T02:13:46Z", "raw_text": "See also Bug 519514, which might be a better approach.", "count": 6, "tags": [], "author": "bugzilla@twinql.com", "attachment_id": null, "bug_id": 628315}]}}, "comments": {}}