{"bugs": {"691176": {"comments": [{"bug_id": 691176, "count": 0, "id": 5752917, "raw_text": "My preliminary analysis from bug 688979 indicates that about 4% of mallocs in the browser are due to hunspell.  This places hunspell just after nsTArray and ns{C,}String as the third-heaviest user of malloc in the browser.\n\nWe should figure out if all this malloc'ing is necessary, and whether it's contributing to fragmentation.\n\n57880 malloc's ( 2%):\n  malloc at memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::add_word(char const*, int, int, unsigned short*, int, char const*, bool) at extensions/spellcheck/hunspell/src/hashmgr.cpp:176\n\n44553 malloc's ( 2%):\n  malloc at src/memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::decode_flags(unsigned short**, char*, FileMgr*) at extensions/spellcheck/hunspell/src/hashmgr.cpp:606", "attachment_id": null, "time": "2011-10-02T18:22:33Z", "tags": [], "text": "My preliminary analysis from bug 688979 indicates that about 4% of mallocs in the browser are due to hunspell.  This places hunspell just after nsTArray and ns{C,}String as the third-heaviest user of malloc in the browser.\n\nWe should figure out if all this malloc'ing is necessary, and whether it's contributing to fragmentation.\n\n57880 malloc's ( 2%):\n  malloc at memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::add_word(char const*, int, int, unsigned short*, int, char const*, bool) at extensions/spellcheck/hunspell/src/hashmgr.cpp:176\n\n44553 malloc's ( 2%):\n  malloc at src/memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::decode_flags(unsigned short**, char*, FileMgr*) at extensions/spellcheck/hunspell/src/hashmgr.cpp:606", "author": "justin.lebar+bug@gmail.com", "creation_time": "2011-10-02T18:22:33Z", "creator": "justin.lebar+bug@gmail.com", "is_private": false}, {"id": 5754038, "attachment_id": null, "raw_text": "Here are the same stats but with allocation sizes:\n\n57880 malloc's ( 2%, cuml 24%) size (min 41, max 63, median 47, mean 47.6):\n  malloc at src/memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at src/extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::add_word(char const*, int, int, unsigned short*, int, char const*, bool) at src/extensions/spellcheck/hunspell/src/hashmgr.cpp:176\n\n44553 malloc's ( 2%, cuml 28%) size (min 2, max 22, median 2, mean 3.7):\n  malloc at src/memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at src/extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::decode_flags(unsigned short**, char*, FileMgr*) at src/extensions/spellcheck/hunspell/src/hashmgr.cpp:606\n\nNote that the decode_flags mallocs are all very small.  AIUI, hunspell's affix flags are not used heavily in simpler languages like English.  So in another language, we might see larger malloc sizes in decode_flags.\n\nBut maybe we can hack hunspell to avoid malloc'ing unless it has a very large flags array.", "creation_time": "2011-10-03T14:53:28Z", "author": "justin.lebar+bug@gmail.com", "text": "Here are the same stats but with allocation sizes:\n\n57880 malloc's ( 2%, cuml 24%) size (min 41, max 63, median 47, mean 47.6):\n  malloc at src/memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at src/extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::add_word(char const*, int, int, unsigned short*, int, char const*, bool) at src/extensions/spellcheck/hunspell/src/hashmgr.cpp:176\n\n44553 malloc's ( 2%, cuml 28%) size (min 2, max 22, median 2, mean 3.7):\n  malloc at src/memory/jemalloc/jemalloc.c:6075\n  hunspell_malloc(unsigned long) at src/extensions/spellcheck/hunspell/src/hunspell_alloc_hooks.h:61\n  HashMgr::decode_flags(unsigned short**, char*, FileMgr*) at src/extensions/spellcheck/hunspell/src/hashmgr.cpp:606\n\nNote that the decode_flags mallocs are all very small.  AIUI, hunspell's affix flags are not used heavily in simpler languages like English.  So in another language, we might see larger malloc sizes in decode_flags.\n\nBut maybe we can hack hunspell to avoid malloc'ing unless it has a very large flags array.", "bug_id": 691176, "time": "2011-10-03T14:53:28Z", "tags": [], "is_private": false, "creator": "justin.lebar+bug@gmail.com", "count": 1}, {"count": 2, "is_private": false, "creator": "justin.lebar+bug@gmail.com", "text": "Thankfully both these hotspots occur during HashMgr::load_tables, which I presume happens only once.  So I'd guess that the fragmentation affects of these allocations are small.", "tags": [], "time": "2011-10-03T15:07:22Z", "bug_id": 691176, "creation_time": "2011-10-03T15:07:22Z", "author": "justin.lebar+bug@gmail.com", "raw_text": "Thankfully both these hotspots occur during HashMgr::load_tables, which I presume happens only once.  So I'd guess that the fragmentation affects of these allocations are small.", "attachment_id": null, "id": 5754097}, {"attachment_id": null, "raw_text": "Caolan, Nemeth: do you know of anybody familiar with the hunspell code who can help us determine how best to improve the situation here?  Thanks!", "id": 5755144, "creator": "ehsan.akhgari@gmail.com", "is_private": false, "count": 3, "author": "ehsan.akhgari@gmail.com", "creation_time": "2011-10-03T20:22:54Z", "time": "2011-10-03T20:22:54Z", "tags": [], "bug_id": 691176, "text": "Caolan, Nemeth: do you know of anybody familiar with the hunspell code who can help us determine how best to improve the situation here?  Thanks!"}, {"id": 5758375, "raw_text": "Over to Justin to investigate whether we need to worry about this etc.", "attachment_id": null, "tags": [], "bug_id": 691176, "time": "2011-10-04T20:12:39Z", "text": "Over to Justin to investigate whether we need to worry about this etc.", "author": "jstenback+bmo@gmail.com", "creation_time": "2011-10-04T20:12:39Z", "count": 4, "creator": "jstenback+bmo@gmail.com", "is_private": false}, {"id": 5964967, "raw_text": "jlebar, do we still care about this?", "attachment_id": null, "tags": [], "bug_id": 691176, "time": "2012-01-09T11:09:23Z", "text": "jlebar, do we still care about this?", "author": "n.nethercote@gmail.com", "creation_time": "2012-01-09T11:09:23Z", "count": 5, "creator": "n.nethercote@gmail.com", "is_private": false}, {"raw_text": "Maybe?  It really is a lot of malloc() calls.  But I haven't had time to do malloc() hunting lately.", "attachment_id": null, "id": 5965151, "count": 6, "is_private": false, "creator": "justin.lebar+bug@gmail.com", "text": "Maybe?  It really is a lot of malloc() calls.  But I haven't had time to do malloc() hunting lately.", "bug_id": 691176, "tags": [], "time": "2012-01-09T13:37:48Z", "creation_time": "2012-01-09T13:37:48Z", "author": "justin.lebar+bug@gmail.com"}, {"bug_id": 691176, "count": 7, "id": 5966837, "raw_text": "So what is the concern?  Fragmentation?  The time taken for all those calls?  If it's the latter, this doesn't need to be a MemShrink bug.", "attachment_id": null, "text": "So what is the concern?  Fragmentation?  The time taken for all those calls?  If it's the latter, this doesn't need to be a MemShrink bug.", "tags": [], "time": "2012-01-09T22:50:51Z", "creation_time": "2012-01-09T22:50:51Z", "author": "n.nethercote@gmail.com", "is_private": false, "creator": "n.nethercote@gmail.com"}, {"creator": "justin.lebar+bug@gmail.com", "is_private": false, "time": "2012-01-09T23:00:05Z", "tags": [], "text": "Fragmentation, yes.\n\nIt seems unlikely that this is actually a major cause of fragmentation, because most (all?) of the calls happen all at once.  But my previous instincts about what would and wouldn't be a large cause of fragmentation have been off the mark, so I don't attach a lot of weight to that speculation.\n\nI'd be OK downgrading this to a P3.", "author": "justin.lebar+bug@gmail.com", "creation_time": "2012-01-09T23:00:05Z", "raw_text": "Fragmentation, yes.\n\nIt seems unlikely that this is actually a major cause of fragmentation, because most (all?) of the calls happen all at once.  But my previous instincts about what would and wouldn't be a large cause of fragmentation have been off the mark, so I don't attach a lot of weight to that speculation.\n\nI'd be OK downgrading this to a P3.", "attachment_id": null, "id": 5966883, "count": 8, "bug_id": 691176}]}}, "comments": {}}