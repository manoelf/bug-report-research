{"bugs": {"710273": {"comments": [{"author": "brandon@hackmill.com", "time": "2011-12-13T18:16:45Z", "creation_time": "2011-12-13T18:16:45Z", "creator": "brandon@hackmill.com", "count": 0, "id": 5912618, "is_private": false, "tags": [], "bug_id": 710273, "text": "", "raw_text": "", "attachment_id": null}, {"id": 5912627, "count": 1, "is_private": false, "time": "2011-12-13T18:21:28Z", "creation_time": "2011-12-13T18:21:28Z", "creator": "brandon@hackmill.com", "author": "brandon@hackmill.com", "attachment_id": null, "raw_text": "(premature submission there...)\n\nWe want to let sites opt-out of the dev tool features that allow users to run JavaScript in the context of the page.  The goal is to thwart the \"self-XSS\" attacks we are seeing on various social networking sites.  To that end, let's add a Content Security Policy directive that indicates this preference, and the relevant dev tools implementations can check for this preference before executing script.", "text": "(premature submission there...)\n\nWe want to let sites opt-out of the dev tool features that allow users to run JavaScript in the context of the page.  The goal is to thwart the \"self-XSS\" attacks we are seeing on various social networking sites.  To that end, let's add a Content Security Policy directive that indicates this preference, and the relevant dev tools implementations can check for this preference before executing script.", "bug_id": 710273, "tags": []}, {"creator": "khuey@kylehuey.com", "creation_time": "2011-12-13T18:23:51Z", "time": "2011-12-13T18:23:51Z", "author": "khuey@kylehuey.com", "is_private": false, "id": 5912640, "count": 2, "tags": [], "text": "Will it be possible to override this (somehow, perhaps not in the default configuration)?", "bug_id": 710273, "attachment_id": null, "raw_text": "Will it be possible to override this (somehow, perhaps not in the default configuration)?"}, {"author": "dangoor@gmail.com", "tags": [], "text": "(In reply to Kyle Huey [:khuey] (khuey@mozilla.com) from comment #2)\n> Will it be possible to override this (somehow, perhaps not in the default\n> configuration)?\n\nYes. See bug 664589 comment 34.", "bug_id": 710273, "creator": "dangoor@gmail.com", "creation_time": "2011-12-13T18:41:40Z", "time": "2011-12-13T18:41:40Z", "raw_text": "(In reply to Kyle Huey [:khuey] (khuey@mozilla.com) from comment #2)\n> Will it be possible to override this (somehow, perhaps not in the default\n> configuration)?\n\nYes. See bug 664589 comment 34.", "is_private": false, "attachment_id": null, "id": 5912697, "count": 3}, {"author": "brandon@hackmill.com", "creation_time": "2011-12-13T21:02:52Z", "time": "2011-12-13T21:02:52Z", "creator": "brandon@hackmill.com", "count": 4, "id": 5913295, "is_private": false, "bug_id": 710273, "text": "(In reply to Kyle Huey [:khuey] (khuey@mozilla.com) from comment #2)\n\nKevin already covered this, but yes, this will be overridable via (most likely) a hidden pref for users who want to turn off the safety catch.  I should have included this in the original summary.", "tags": [], "raw_text": "(In reply to Kyle Huey [:khuey] (khuey@mozilla.com) from comment #2)\n\nKevin already covered this, but yes, this will be overridable via (most likely) a hidden pref for users who want to turn off the safety catch.  I should have included this in the original summary.", "attachment_id": null}, {"is_private": false, "count": 5, "id": 8509135, "creator": "feichinger@vad-systems.de", "time": "2014-03-08T11:13:58Z", "creation_time": "2014-03-08T11:13:58Z", "author": "feichinger@vad-systems.de", "attachment_id": null, "raw_text": "Are we sure we really want to add this to the protocol?\n\nFundamentally, what we have here is consumers using a tool intended for developers, and messing up with that because they don't know what they're doing. So, the problem is really just that users do stuff they shouldn't do. So why even give them access to these tools?\nHide the console and other dev tools behind an \"I am a developer!\" switch in the settings - it should be a global setting anyway and not just per-site - but don't put this into the protocol. A protocol should define transfer and content, not the behaviour at the end point.", "tags": [], "bug_id": 710273, "text": "Are we sure we really want to add this to the protocol?\n\nFundamentally, what we have here is consumers using a tool intended for developers, and messing up with that because they don't know what they're doing. So, the problem is really just that users do stuff they shouldn't do. So why even give them access to these tools?\nHide the console and other dev tools behind an \"I am a developer!\" switch in the settings - it should be a global setting anyway and not just per-site - but don't put this into the protocol. A protocol should define transfer and content, not the behaviour at the end point."}, {"raw_text": "(In reply to Frederic Eichinger from comment #5)\n> Are we sure we really want to add this to the protocol?\n> \n> Fundamentally, what we have here is consumers using a tool intended for\n> developers, and messing up with that because they don't know what they're\n> doing. So, the problem is really just that users do stuff they shouldn't do.\n> So why even give them access to these tools?\n> Hide the console and other dev tools behind an \"I am a developer!\" switch in\n> the settings - it should be a global setting anyway and not just per-site -\n> but don't put this into the protocol. A protocol should define transfer and\n> content, not the behaviour at the end point.\n\nA global \"I am a developer!\" switch has been discussed at length on many bugs. We're not going to do that because we care about teaching people how to develop for the web.", "attachment_id": null, "tags": [], "text": "(In reply to Frederic Eichinger from comment #5)\n> Are we sure we really want to add this to the protocol?\n> \n> Fundamentally, what we have here is consumers using a tool intended for\n> developers, and messing up with that because they don't know what they're\n> doing. So, the problem is really just that users do stuff they shouldn't do.\n> So why even give them access to these tools?\n> Hide the console and other dev tools behind an \"I am a developer!\" switch in\n> the settings - it should be a global setting anyway and not just per-site -\n> but don't put this into the protocol. A protocol should define transfer and\n> content, not the behaviour at the end point.\n\nA global \"I am a developer!\" switch has been discussed at length on many bugs. We're not going to do that because we care about teaching people how to develop for the web.", "bug_id": 710273, "is_private": false, "count": 6, "id": 8511925, "author": "jwalker@mozilla.com", "creator": "jwalker@mozilla.com", "creation_time": "2014-03-10T10:22:53Z", "time": "2014-03-10T10:22:53Z"}, {"time": "2014-03-12T14:55:54Z", "creation_time": "2014-03-12T14:55:54Z", "creator": "feichinger@vad-systems.de", "author": "feichinger@vad-systems.de", "count": 7, "id": 8523782, "is_private": false, "text": "(In reply to Joe Walker [:jwalker] from comment #6)\n> A global \"I am a developer!\" switch has been discussed at length on many\n> bugs. We're not going to do that because we care about teaching people how\n> to develop for the web.\n\nI'm well aware of that. It doesn't, however, change the fact that the problem at hand is not primarily relevant to the site or the protocol, so fixing it there is simply the wrong approach. I get that we want to teach people to use the tools properly, but a per-site (or, in fact, per-request) trigger doesn't help with that. This is a universal problem, it just has more \"potential\" on certain sites.\n\nWe can't on the one hand say \"We want to educate people.\" and then with the next step go \"But people are too inept to do figure out what they're doing, so we need to prevent their errors on the protocol level.\"", "bug_id": 710273, "tags": [], "attachment_id": null, "raw_text": "(In reply to Joe Walker [:jwalker] from comment #6)\n> A global \"I am a developer!\" switch has been discussed at length on many\n> bugs. We're not going to do that because we care about teaching people how\n> to develop for the web.\n\nI'm well aware of that. It doesn't, however, change the fact that the problem at hand is not primarily relevant to the site or the protocol, so fixing it there is simply the wrong approach. I get that we want to teach people to use the tools properly, but a per-site (or, in fact, per-request) trigger doesn't help with that. This is a universal problem, it just has more \"potential\" on certain sites.\n\nWe can't on the one hand say \"We want to educate people.\" and then with the next step go \"But people are too inept to do figure out what they're doing, so we need to prevent their errors on the protocol level.\""}, {"attachment_id": null, "raw_text": "(In reply to Frederic Eichinger from comment #7)\n> (In reply to Joe Walker [:jwalker] from comment #6)\n> > A global \"I am a developer!\" switch has been discussed at length on many\n> > bugs. We're not going to do that because we care about teaching people how\n> > to develop for the web.\n> \n> I'm well aware of that. It doesn't, however, change the fact that the\n> problem at hand is not primarily relevant to the site or the protocol\n\nI don't have evidence that this is more than a theoretical problem for sites other than Facebook. So the primary problem is relevant to the site.\n\n> so\n> fixing it there is simply the wrong approach. I get that we want to teach\n> people to use the tools properly, but a per-site (or, in fact, per-request)\n> trigger doesn't help with that. This is a universal problem, it just has\n> more \"potential\" on certain sites.\n\nThere are 2 forms of this attack. The short form that we've seen evidence of (which is limited to Facebook) and the long form which we have no solution for, nor is a solution possible.\n\nViability of the self-xss script is inversely proportional to length of the script. It seems that the Facebook 3-step script is at the limit of viability for widespread infection. Lack of attacks to WIN+R seem to back this up.\n\nI'd like to see examples where people have followed longer scripts. But if people are willing and able to follow a 10-step script then none solutions proposed so far comes close to protecting us.\n\nA 3-step script requires a pre-loaded clipboard, which means hosting of flash content.\n\nA 3-step script also means you can't have a navigation step, so this is only a problem for sites that accept user generated content.\n\nA site can stop attack by deleting the script (given the no-nav rule). So clearly this is a bigger problem with user-reposting, greatly hampering script deletion.\n\nThat fairly much explains why this is only a problem for Facebook. As far as I know they're the only site on the web that fits all these criteria.\n\nSo your assertion that this is a universal problem is true, but only if you're thinking of greater than 3-step scripts. But if you're doing that, then none of the proposed solutions works either.\n\n> We can't on the one hand say \"We want to educate people.\" and then with the\n> next step go \"But people are too inept to do figure out what they're doing,\n> so we need to prevent their errors on the protocol level.\"\n\nYou're missing the landing page part of the solution, which pushes the 3-step script to being a 4/5-step script (depending on how you count), also making cross-browser scripts impossible.\n\nThe CSP solution allows particularly vulnerable sites to opt into a system which makes things a 7+step script. Given that some sites are more vulnerable than others this seems reasonable.", "text": "(In reply to Frederic Eichinger from comment #7)\n> (In reply to Joe Walker [:jwalker] from comment #6)\n> > A global \"I am a developer!\" switch has been discussed at length on many\n> > bugs. We're not going to do that because we care about teaching people how\n> > to develop for the web.\n> \n> I'm well aware of that. It doesn't, however, change the fact that the\n> problem at hand is not primarily relevant to the site or the protocol\n\nI don't have evidence that this is more than a theoretical problem for sites other than Facebook. So the primary problem is relevant to the site.\n\n> so\n> fixing it there is simply the wrong approach. I get that we want to teach\n> people to use the tools properly, but a per-site (or, in fact, per-request)\n> trigger doesn't help with that. This is a universal problem, it just has\n> more \"potential\" on certain sites.\n\nThere are 2 forms of this attack. The short form that we've seen evidence of (which is limited to Facebook) and the long form which we have no solution for, nor is a solution possible.\n\nViability of the self-xss script is inversely proportional to length of the script. It seems that the Facebook 3-step script is at the limit of viability for widespread infection. Lack of attacks to WIN+R seem to back this up.\n\nI'd like to see examples where people have followed longer scripts. But if people are willing and able to follow a 10-step script then none solutions proposed so far comes close to protecting us.\n\nA 3-step script requires a pre-loaded clipboard, which means hosting of flash content.\n\nA 3-step script also means you can't have a navigation step, so this is only a problem for sites that accept user generated content.\n\nA site can stop attack by deleting the script (given the no-nav rule). So clearly this is a bigger problem with user-reposting, greatly hampering script deletion.\n\nThat fairly much explains why this is only a problem for Facebook. As far as I know they're the only site on the web that fits all these criteria.\n\nSo your assertion that this is a universal problem is true, but only if you're thinking of greater than 3-step scripts. But if you're doing that, then none of the proposed solutions works either.\n\n> We can't on the one hand say \"We want to educate people.\" and then with the\n> next step go \"But people are too inept to do figure out what they're doing,\n> so we need to prevent their errors on the protocol level.\"\n\nYou're missing the landing page part of the solution, which pushes the 3-step script to being a 4/5-step script (depending on how you count), also making cross-browser scripts impossible.\n\nThe CSP solution allows particularly vulnerable sites to opt into a system which makes things a 7+step script. Given that some sites are more vulnerable than others this seems reasonable.", "bug_id": 710273, "tags": [], "is_private": false, "count": 8, "id": 8524251, "creator": "jwalker@mozilla.com", "creation_time": "2014-03-12T16:15:48Z", "time": "2014-03-12T16:15:48Z", "author": "jwalker@mozilla.com"}, {"creator": "bug-husbandry-bot@mozilla.bugs", "time": "2018-06-29T04:48:54Z", "creation_time": "2018-06-29T04:48:54Z", "author": "bug-husbandry-bot@mozilla.bugs", "is_private": false, "id": 13435996, "count": 9, "bug_id": 710273, "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "tags": [], "attachment_id": null, "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly."}]}}, "comments": {}}