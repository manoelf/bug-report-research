{"bugs": {"1635963": {"comments": [{"time": "2020-05-06T22:20:18Z", "raw_text": "The Pioneer analysis environment requires a locked-down environment to mitigate data egress. This is done through several layers, include multi-factor authentication and VPC controls.\n\nThis is bug scoped to setting up a GCP AI Notebook with BigQuery in such a way where the service is not acessible outside of the VPC.", "count": 0, "is_private": false, "bug_id": 1635963, "tags": [], "author": "amiyaguchi@mozilla.com", "attachment_id": null, "creator": "amiyaguchi@mozilla.com", "creation_time": "2020-05-06T22:20:18Z", "text": "The Pioneer analysis environment requires a locked-down environment to mitigate data egress. This is done through several layers, include multi-factor authentication and VPC controls.\n\nThis is bug scoped to setting up a GCP AI Notebook with BigQuery in such a way where the service is not acessible outside of the VPC.", "id": 14801489}, {"author": "amiyaguchi@mozilla.com", "count": 1, "is_private": false, "tags": [], "bug_id": 1635963, "raw_text": "The POC environment has been set up, which will now be passed along to :whd for configuration to the debug study.\n\n# Pioneer Analysis Environment: Configuration\n\nSee the [Pioneer Analysis Proposal document](https://docs.google.com/document/d/1vgr0mHyIOUZocHVQyxJhl6-arkw-ah5RJ4pQj6HY53E/edit?usp=sharing) for context.\n\nThe testing project is located in the developer folder as `amiyaguchi-pioneer-dev`.\nThis project is expected to be self-contained without access to outside resources.\nSome values are omitted, put inside of angled brackets e.g. `<...>`.\n\n## Setting up BigQuery\n\n```bash\nbq mk test_dataset\n\n# small table for testing notebook visualization via cell magic and matplotlib\nbq cp bigquery-public-data:covid19_nyt.us_states test_dataset.covid19_nyt_us_states\n\n# medium table for testing data exfiltration\nbq cp bigquery-public-data:samples.github_timeline test_dataset.github_timeline\n```\n\n## Enabling APIs\n\n- Enabled [cloudresourcemanager.googleapis.com]\n- Enabled [accesscontextmanager.googleapis.com]\n- Enabled [notebooks.googleapis.com]\n\nThere may be a few more APIs to be enabled, do so as required.\n\n### Creating a Service Perimeter\n\nFirst [create a service\nperimeter](https://cloud.google.com/vpc-service-controls/docs/create-service-perimeters).\nWe put BigQuery and AI Notebooks within the perimeter. The [Container\nRegistry](https://cloud.google.com/ai-platform/notebooks/docs/ssh-access#settings_are_blocking_access_to)\nmust be added to the perimeter for the https proxy to work.\n\n```bash\n#!/bin/bash\n# https://cloud.google.com/vpc-service-controls/docs/create-service-perimeters\n\nexport NAME=\"TestPioneerPerimeter\"\nexport TITLE=\"Test Perimeter for Pioneer v2\"\n\n# PROJECT_ID=\"amiyaguchi-pioneer-dev\"\n# gcloud projects describe --format=json $PROJECT_ID | jq -r '.projectNumber'\nexport PROJECT_NUMBER=\"627708240701\"\nexport PROJECTS=\"projects/${PROJECT_NUMBER?}\"\nexport RESTRICTED_SERVICES=\"bigquery.googleapis.com,notebooks.googleapis.com,containerregistry.googleapis.com\"\nexport POLICY_NAME=<...>\n\n# This may be run using dry-run using `gcloud beta`\ngcloud access-context-manager perimeters create $NAME \\\n  --title=$TITLE \\\n  --resources=$PROJECTS \\\n  --restricted-services=$RESTRICTED_SERVICES \\\n  --policy=$POLICY_NAME\n```\n\nThen create an access level.\n\n```bash\n# https://cloud.google.com/vpc-service-controls/docs/use-access-levels\n# https://cloud.google.com/access-context-manager/docs/create-basic-access-level#members-example\n# https://cloud.google.com/vpc-service-controls/docs/manage-service-perimeters#add-access-level\n\nexport PERIMETER_NAME=TestPioneerPerimeter\nexport LEVEL_NAME=TestAccessLevel\nexport POLICY_NAME=<...>\n\ncat << EOF > spec.yaml\n- members:\n    - user:amiyaguchi@mozilla.com\n    - serviceAccount:627708240701-compute@developer.gserviceaccount.com\n- ipSubnetworks:\n    - <IP Address in CIDR notation>\nEOF\n\ngcloud access-context-manager levels create $LEVEL_NAME \\\n    --basic-level-spec=spec.yaml \\\n    --title=\"Pioneer Test Access Level\" \\\n    --policy=$POLICY_NAME\n\ngcloud access-context-manager perimeters update $PERIMETER_NAME \\\n  --add-access-levels=$LEVEL_NAME \\\n  --policy=$POLICY_NAME\n```\n\n## Configuring the VPC and Firewall\n\nThen follow the guide for [configuring the DNS entries using Cloud DNS](https://cloud.google.com/ai-platform/notebooks/docs/service-perimeter#configure-dns). This documentation may be out of date, since the environment works without having to configure DNS entries manually.\n\n```bash\n# https://cloud.google.com/vpc/docs/using-vpc\n\nexport PROJECT_ID=\"amiyaguchi-pioneer-dev\"\nexport NETWORK_NAME=\"amiyaguchi-test-pioneer-vpc-final\"\nexport SUBNET_NAME=\"notebook-test\"\n# chosen based on the range created by auto mode, for us-west1\nexport PRIMARY_RANGE=\"10.138.0.0/20\"\nexport REGION=\"us-west1\"\n\ngcloud compute networks create $NETWORK_NAME \\\n  --subnet-mode=custom \\\n  --bgp-routing-mode=regional \\\n  --description=\"testing vpc for pioneer v2\"\n\n# create a subnet for notebooks, vpc flow log interval of 30 seconds is used for testing\n# private ip google access is configured so\ngcloud compute networks subnets create $SUBNET_NAME \\\n  --network=$NETWORK_NAME \\\n  --range=$PRIMARY_RANGE \\\n  --region=$REGION \\\n  --enable-private-ip-google-access \\\n  --enable-flow-logs \\\n  --logging-aggregation-interval=interval-30-sec\n\n# Firewall rule necessary to SSH into the instance, this is not necessary in the typical production use-case\n# gcloud compute firewall-rules create \"$NETWORK_NAME-allow-ssh\" \\\n#   --network $NETWORK_NAME \\\n#   --allow tcp:22\n```\n\n## Setting Up AI Platform Notebook\n\nFollow the instructions to [create a new notebook instance](https://cloud.google.com/ai-platform/notebooks/docs/create-new).\n\n- Navigate to `AI Platform > Notebooks`\n- Create a new instance OR launch an existing instance e.g. `intel-20200513-145242`\n  - Set environment to \"Python 2 or 3\" aka \"Intel optimized Base (with Intel MKL)\"\n  - Set the network to NOTEBOOK_NAME and subnetwork to SUBNETWORK_NAME.\n  - Set External IP to None.\n  - Ensure \"Allow proxy access when it's available\" is checked\n  - Set \"Single user only\"\n  - Disable sudo access to the instance\n\nAlternatively:\n\nCreate a service account associated to a single user.\n\n```bash\nexport INSTANCE_NAME=\"instance-$RANDOM\"\nexport MACHINE_TYPE=\"n1-standard-4\"\nexport LOCATION=\"us-west1-b\"\nexport VM_IMAGE_PROJECT=\"deeplearning-platform-release\"\nexport VM_IMAGE_FAMILY=\"common-cpu\"\nexport SERVICE_ACCOUNT=\"627708240701-compute@developer.gserviceaccount.com\"\nexport NETWORK_NAME=\"amiyaguchi-test-pioneer-vpc-final\"\nexport SUBNET_NAME=\"notebook-test\"\n\n# this is broken: https://issuetracker.google.com/issues/158694813\ngcloud beta notebooks instances create $INSTANCE_NAME \\\n  --location=$LOCATION \\\n  --machine-type=$MACHINE_TYPE \\\n  --vm-image-project=$VM_IMAGE_PROJECT \\\n  --vm-image-family=$VM_IMAGE_FAMILY \\\n  --service-account=$SERVICE_ACCOUNT \\\n  --network=$NETWORK_NAME \\\n  --subnet=$SUBNET_NAME \\\n  --no-public-ip\n```\n\n## Testing\n* Enter the BigQuery console. Access should be denied by policy.\n* Open a cloud shell and run `bq --project_id amiyaguchi-pioneer-dev query 'select * from test_dataset.covid19_nyt_us_states limit 10'`. This should be denied by policy\n* In a notebook, run the following two cells to test BigQuery access.\n\n```sql\n%%bigquery df\nSELECT *\nFROM test_dataset.covid19_nyt_us_states\n```\n\n```python\nimport matplotlib.pyplot as plt\ndf[df.state_name == \"California\"].plot(x=\"date\")\nplt.xticks(rotation=30)\nplt.show()\n```\n* In a notebook, run the following two cells to test VPC flow logs for data egress. Then in the JupyterLab interface, download the file. Check the VPC flow logs for traffic leaving the VPC.\n\n```sql\n%%bigquery df\nselect repository_url, repository_created_at, repository_description\nfrom `bigquery-public-data`.samples.github_timeline\n```\n\n```python\ndf.to_csv(\"export.csv\")\n```", "time": "2020-06-11T18:46:17Z", "text": "The POC environment has been set up, which will now be passed along to :whd for configuration to the debug study.\n\n# Pioneer Analysis Environment: Configuration\n\nSee the [Pioneer Analysis Proposal document](https://docs.google.com/document/d/1vgr0mHyIOUZocHVQyxJhl6-arkw-ah5RJ4pQj6HY53E/edit?usp=sharing) for context.\n\nThe testing project is located in the developer folder as `amiyaguchi-pioneer-dev`.\nThis project is expected to be self-contained without access to outside resources.\nSome values are omitted, put inside of angled brackets e.g. `<...>`.\n\n## Setting up BigQuery\n\n```bash\nbq mk test_dataset\n\n# small table for testing notebook visualization via cell magic and matplotlib\nbq cp bigquery-public-data:covid19_nyt.us_states test_dataset.covid19_nyt_us_states\n\n# medium table for testing data exfiltration\nbq cp bigquery-public-data:samples.github_timeline test_dataset.github_timeline\n```\n\n## Enabling APIs\n\n- Enabled [cloudresourcemanager.googleapis.com]\n- Enabled [accesscontextmanager.googleapis.com]\n- Enabled [notebooks.googleapis.com]\n\nThere may be a few more APIs to be enabled, do so as required.\n\n### Creating a Service Perimeter\n\nFirst [create a service\nperimeter](https://cloud.google.com/vpc-service-controls/docs/create-service-perimeters).\nWe put BigQuery and AI Notebooks within the perimeter. The [Container\nRegistry](https://cloud.google.com/ai-platform/notebooks/docs/ssh-access#settings_are_blocking_access_to)\nmust be added to the perimeter for the https proxy to work.\n\n```bash\n#!/bin/bash\n# https://cloud.google.com/vpc-service-controls/docs/create-service-perimeters\n\nexport NAME=\"TestPioneerPerimeter\"\nexport TITLE=\"Test Perimeter for Pioneer v2\"\n\n# PROJECT_ID=\"amiyaguchi-pioneer-dev\"\n# gcloud projects describe --format=json $PROJECT_ID | jq -r '.projectNumber'\nexport PROJECT_NUMBER=\"627708240701\"\nexport PROJECTS=\"projects/${PROJECT_NUMBER?}\"\nexport RESTRICTED_SERVICES=\"bigquery.googleapis.com,notebooks.googleapis.com,containerregistry.googleapis.com\"\nexport POLICY_NAME=<...>\n\n# This may be run using dry-run using `gcloud beta`\ngcloud access-context-manager perimeters create $NAME \\\n  --title=$TITLE \\\n  --resources=$PROJECTS \\\n  --restricted-services=$RESTRICTED_SERVICES \\\n  --policy=$POLICY_NAME\n```\n\nThen create an access level.\n\n```bash\n# https://cloud.google.com/vpc-service-controls/docs/use-access-levels\n# https://cloud.google.com/access-context-manager/docs/create-basic-access-level#members-example\n# https://cloud.google.com/vpc-service-controls/docs/manage-service-perimeters#add-access-level\n\nexport PERIMETER_NAME=TestPioneerPerimeter\nexport LEVEL_NAME=TestAccessLevel\nexport POLICY_NAME=<...>\n\ncat << EOF > spec.yaml\n- members:\n    - user:amiyaguchi@mozilla.com\n    - serviceAccount:627708240701-compute@developer.gserviceaccount.com\n- ipSubnetworks:\n    - <IP Address in CIDR notation>\nEOF\n\ngcloud access-context-manager levels create $LEVEL_NAME \\\n    --basic-level-spec=spec.yaml \\\n    --title=\"Pioneer Test Access Level\" \\\n    --policy=$POLICY_NAME\n\ngcloud access-context-manager perimeters update $PERIMETER_NAME \\\n  --add-access-levels=$LEVEL_NAME \\\n  --policy=$POLICY_NAME\n```\n\n## Configuring the VPC and Firewall\n\nThen follow the guide for [configuring the DNS entries using Cloud DNS](https://cloud.google.com/ai-platform/notebooks/docs/service-perimeter#configure-dns). This documentation may be out of date, since the environment works without having to configure DNS entries manually.\n\n```bash\n# https://cloud.google.com/vpc/docs/using-vpc\n\nexport PROJECT_ID=\"amiyaguchi-pioneer-dev\"\nexport NETWORK_NAME=\"amiyaguchi-test-pioneer-vpc-final\"\nexport SUBNET_NAME=\"notebook-test\"\n# chosen based on the range created by auto mode, for us-west1\nexport PRIMARY_RANGE=\"10.138.0.0/20\"\nexport REGION=\"us-west1\"\n\ngcloud compute networks create $NETWORK_NAME \\\n  --subnet-mode=custom \\\n  --bgp-routing-mode=regional \\\n  --description=\"testing vpc for pioneer v2\"\n\n# create a subnet for notebooks, vpc flow log interval of 30 seconds is used for testing\n# private ip google access is configured so\ngcloud compute networks subnets create $SUBNET_NAME \\\n  --network=$NETWORK_NAME \\\n  --range=$PRIMARY_RANGE \\\n  --region=$REGION \\\n  --enable-private-ip-google-access \\\n  --enable-flow-logs \\\n  --logging-aggregation-interval=interval-30-sec\n\n# Firewall rule necessary to SSH into the instance, this is not necessary in the typical production use-case\n# gcloud compute firewall-rules create \"$NETWORK_NAME-allow-ssh\" \\\n#   --network $NETWORK_NAME \\\n#   --allow tcp:22\n```\n\n## Setting Up AI Platform Notebook\n\nFollow the instructions to [create a new notebook instance](https://cloud.google.com/ai-platform/notebooks/docs/create-new).\n\n- Navigate to `AI Platform > Notebooks`\n- Create a new instance OR launch an existing instance e.g. `intel-20200513-145242`\n  - Set environment to \"Python 2 or 3\" aka \"Intel optimized Base (with Intel MKL)\"\n  - Set the network to NOTEBOOK_NAME and subnetwork to SUBNETWORK_NAME.\n  - Set External IP to None.\n  - Ensure \"Allow proxy access when it's available\" is checked\n  - Set \"Single user only\"\n  - Disable sudo access to the instance\n\nAlternatively:\n\nCreate a service account associated to a single user.\n\n```bash\nexport INSTANCE_NAME=\"instance-$RANDOM\"\nexport MACHINE_TYPE=\"n1-standard-4\"\nexport LOCATION=\"us-west1-b\"\nexport VM_IMAGE_PROJECT=\"deeplearning-platform-release\"\nexport VM_IMAGE_FAMILY=\"common-cpu\"\nexport SERVICE_ACCOUNT=\"627708240701-compute@developer.gserviceaccount.com\"\nexport NETWORK_NAME=\"amiyaguchi-test-pioneer-vpc-final\"\nexport SUBNET_NAME=\"notebook-test\"\n\n# this is broken: https://issuetracker.google.com/issues/158694813\ngcloud beta notebooks instances create $INSTANCE_NAME \\\n  --location=$LOCATION \\\n  --machine-type=$MACHINE_TYPE \\\n  --vm-image-project=$VM_IMAGE_PROJECT \\\n  --vm-image-family=$VM_IMAGE_FAMILY \\\n  --service-account=$SERVICE_ACCOUNT \\\n  --network=$NETWORK_NAME \\\n  --subnet=$SUBNET_NAME \\\n  --no-public-ip\n```\n\n## Testing\n* Enter the BigQuery console. Access should be denied by policy.\n* Open a cloud shell and run `bq --project_id amiyaguchi-pioneer-dev query 'select * from test_dataset.covid19_nyt_us_states limit 10'`. This should be denied by policy\n* In a notebook, run the following two cells to test BigQuery access.\n\n```sql\n%%bigquery df\nSELECT *\nFROM test_dataset.covid19_nyt_us_states\n```\n\n```python\nimport matplotlib.pyplot as plt\ndf[df.state_name == \"California\"].plot(x=\"date\")\nplt.xticks(rotation=30)\nplt.show()\n```\n* In a notebook, run the following two cells to test VPC flow logs for data egress. Then in the JupyterLab interface, download the file. Check the VPC flow logs for traffic leaving the VPC.\n\n```sql\n%%bigquery df\nselect repository_url, repository_created_at, repository_description\nfrom `bigquery-public-data`.samples.github_timeline\n```\n\n```python\ndf.to_csv(\"export.csv\")\n```", "id": 14876849, "creation_time": "2020-06-11T18:46:17Z", "creator": "amiyaguchi@mozilla.com", "attachment_id": null}]}}, "comments": {}}