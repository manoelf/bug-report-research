{"comments": {}, "bugs": {"706691": {"comments": [{"raw_text": "+++ This bug was initially created as a clone of Bug #703508 +++\n\nIn bug 703508 comment 10, Kai noticed that the character encoding of nsNSSSocketInfo::mHostName is unclear. When we store hostnames in strings in Necko and PSM, we should make the type of encoding we are expecting unambiguous--e.g. we should have a \"punycode\" string type.\n\nIs it the case that all the non-UTF8 8-bit strings used for hostnames in Necko are considered punycode? It seems like we shouldn't have *any* code that is ASCII-but-not-to-be-interpreted-as-punycode, because such code wouldn't support IDNs at all.", "creation_time": "2011-11-30T23:21:54Z", "text": "+++ This bug was initially created as a clone of Bug #703508 +++\n\nIn bug 703508 comment 10, Kai noticed that the character encoding of nsNSSSocketInfo::mHostName is unclear. When we store hostnames in strings in Necko and PSM, we should make the type of encoding we are expecting unambiguous--e.g. we should have a \"punycode\" string type.\n\nIs it the case that all the non-UTF8 8-bit strings used for hostnames in Necko are considered punycode? It seems like we shouldn't have *any* code that is ASCII-but-not-to-be-interpreted-as-punycode, because such code wouldn't support IDNs at all.", "creator": "brian@briansmith.org", "time": "2011-11-30T23:21:54Z", "attachment_id": null, "author": "brian@briansmith.org", "is_private": false, "count": 0, "tags": [], "id": 5883761, "bug_id": 706691}, {"creation_time": "2011-11-30T23:37:44Z", "raw_text": "Necko itself always stores hostnames as punycode or as the original UTF-8 strings (which generally are normalized to UTF-8 even when input as punycode originally). Where would any other encodings come from?", "time": "2011-11-30T23:37:44Z", "attachment_id": null, "text": "Necko itself always stores hostnames as punycode or as the original UTF-8 strings (which generally are normalized to UTF-8 even when input as punycode originally). Where would any other encodings come from?", "id": 5883804, "tags": [], "count": 1, "is_private": false, "bug_id": 706691, "author": "cbiesinger@gmail.com", "creator": "cbiesinger@gmail.com"}, {"raw_text": "(In reply to Christian :Biesinger (don't email me, ping me on IRC) from comment #1)\n> Necko itself always stores hostnames as punycode or as the original UTF-8\n> strings (which generally are normalized to UTF-8 even when input as punycode\n> originally). \n\nGood to hear.\n\n> Where would any other encodings come from?\n\nI don't know. My main point is that \"ns[A]CString & hostname\" doesn't scream \"punycode,\" which leads to confusion and doubt like in Kai's review of my patches in bug 703508 and bug 674147.", "creation_time": "2011-11-30T23:46:37Z", "creator": "brian@briansmith.org", "text": "(In reply to Christian :Biesinger (don't email me, ping me on IRC) from comment #1)\n> Necko itself always stores hostnames as punycode or as the original UTF-8\n> strings (which generally are normalized to UTF-8 even when input as punycode\n> originally). \n\nGood to hear.\n\n> Where would any other encodings come from?\n\nI don't know. My main point is that \"ns[A]CString & hostname\" doesn't scream \"punycode,\" which leads to confusion and doubt like in Kai's review of my patches in bug 703508 and bug 674147.", "author": "brian@briansmith.org", "time": "2011-11-30T23:46:37Z", "attachment_id": null, "tags": [], "is_private": false, "count": 2, "id": 5883825, "bug_id": 706691}, {"author": "bug-husbandry-bot@mozilla.bugs", "creator": "bug-husbandry-bot@mozilla.bugs", "attachment_id": null, "time": "2017-09-13T18:38:03Z", "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "creation_time": "2017-09-13T18:38:03Z", "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "bug_id": 706691, "id": 12658395, "is_private": false, "count": 3, "tags": []}]}}}