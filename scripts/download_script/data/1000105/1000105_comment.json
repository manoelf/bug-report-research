{"comments": {}, "bugs": {"1000105": {"comments": [{"time": "2014-04-23T12:25:15Z", "tags": [], "creation_time": "2014-04-23T12:25:15Z", "text": "Created attachment 8410968\nnsCxPusher.h\n\nUser Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; Trident/7.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E; MALC; rv:11.0) like Gecko\n\nSteps to reproduce:\n\nAttempt to use AutoPushJSContext in a C++ based binary add-on to setup the current JSContext for a call into JS_CallFunctionName.\n\nThis is required when making a call into Firefox (e.g. to navigate to a URL) from C++ code when a UI element is selected.\n\nIn earlier versions of Firefox this did not cause a problem because the current JSContext on the context stack was not checked or as heavily used. Binary components could call into JavaScript without pushing the JSContext.\n\n\nActual results:\n\nIt's not possible to link the binary add-on as the linker cannot find mozilla::AutoPushJSContext::AutoPushJSContext in xul.lib .\n\nWithout the JSContext being pushed on the JSContextStack the call is not setup correctly and asserts in XPCCallContext::XPCCallContext on:\n\nMOZ_ASSERT(cx == XPCJSRuntime::Get()->GetJSContextStack()->Peek());\n\nAlso, the security principal is not correctly available for permissions checks (e.g. when adding a new tab).\n\n\nExpected results:\n\nIf the constructor of AutoPushJSContext  were exported then the binary add-on can be linked and correctly call into JavaScript using JS_CallFunctionName.\n\nThe change would require NS_EXPORT to be added to the AutoPushJSContext constructor in /js/xpconnect/src/nsCxPusher.cpp /js/xpconnect/src/nsCxPusher.h.\n\nI have attached modified files to show the proposed changes.", "count": 0, "attachment_id": 8410968, "id": 8698240, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; Trident/7.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E; MALC; rv:11.0) like Gecko\n\nSteps to reproduce:\n\nAttempt to use AutoPushJSContext in a C++ based binary add-on to setup the current JSContext for a call into JS_CallFunctionName.\n\nThis is required when making a call into Firefox (e.g. to navigate to a URL) from C++ code when a UI element is selected.\n\nIn earlier versions of Firefox this did not cause a problem because the current JSContext on the context stack was not checked or as heavily used. Binary components could call into JavaScript without pushing the JSContext.\n\n\nActual results:\n\nIt's not possible to link the binary add-on as the linker cannot find mozilla::AutoPushJSContext::AutoPushJSContext in xul.lib .\n\nWithout the JSContext being pushed on the JSContextStack the call is not setup correctly and asserts in XPCCallContext::XPCCallContext on:\n\nMOZ_ASSERT(cx == XPCJSRuntime::Get()->GetJSContextStack()->Peek());\n\nAlso, the security principal is not correctly available for permissions checks (e.g. when adding a new tab).\n\n\nExpected results:\n\nIf the constructor of AutoPushJSContext  were exported then the binary add-on can be linked and correctly call into JavaScript using JS_CallFunctionName.\n\nThe change would require NS_EXPORT to be added to the AutoPushJSContext constructor in /js/xpconnect/src/nsCxPusher.cpp /js/xpconnect/src/nsCxPusher.h.\n\nI have attached modified files to show the proposed changes.", "author": "support@simtec.ltd.uk", "creator": "support@simtec.ltd.uk", "bug_id": 1000105, "is_private": false}, {"count": 1, "attachment_id": 8410974, "id": 8698259, "raw_text": "", "author": "support@simtec.ltd.uk", "creator": "support@simtec.ltd.uk", "bug_id": 1000105, "is_private": false, "time": "2014-04-23T12:29:20Z", "tags": [], "creation_time": "2014-04-23T12:29:20Z", "text": "Created attachment 8410974\nnsCxPusher.cpp"}, {"count": 2, "id": 8698270, "bug_id": 1000105, "raw_text": "BTW, another possible way to provide this functionality would be push/popmethods on nsIXPConnect . There is already a getSafeJSContext property that returns the JSContext at the top of the stack but no means of pushing or popping", "creator": "support@simtec.ltd.uk", "creation_time": "2014-04-23T12:33:05Z", "attachment_id": null, "is_private": false, "author": "support@simtec.ltd.uk", "time": "2014-04-23T12:33:05Z", "tags": [], "text": "BTW, another possible way to provide this functionality would be push/popmethods on nsIXPConnect . There is already a getSafeJSContext property that returns the JSContext at the top of the stack but no means of pushing or popping"}, {"text": "On re-examining nsCxPusher.h it became clear that nsCxPusher can be used instead of AutoPushJSContext. \n\nI was initially put off using this as it is described as a \"legacy class\" and it doesn't appear to export enough members.\n\nSorry, for misreporting this bug initially. It would be nice if AutoPushJSContext could be exported so that binary components could use similar constructs to the rest of Firefox when calling into JavaScript. For our purposes nsCXPusher will work fine so long as it is not removed in a future release.", "tags": [], "time": "2014-04-23T13:31:27Z", "is_private": false, "author": "support@simtec.ltd.uk", "attachment_id": null, "creation_time": "2014-04-23T13:31:27Z", "bug_id": 1000105, "creator": "support@simtec.ltd.uk", "raw_text": "On re-examining nsCxPusher.h it became clear that nsCxPusher can be used instead of AutoPushJSContext. \n\nI was initially put off using this as it is described as a \"legacy class\" and it doesn't appear to export enough members.\n\nSorry, for misreporting this bug initially. It would be nice if AutoPushJSContext could be exported so that binary components could use similar constructs to the rest of Firefox when calling into JavaScript. For our purposes nsCXPusher will work fine so long as it is not removed in a future release.", "id": 8698544, "count": 3}]}}}