{"comments": {}, "bugs": {"674556": {"comments": [{"count": 0, "bug_id": 674556, "raw_text": "Websites seem to make lots of windows and lots of instances of the standard classes.  Each time a standard class is initialized we call DefineFunctions for its builtin function properties, which allocates a Shape, a JSFunction, and (if TI is enabled) another Shape for each function.\n\nIt would be good to measure how many of these functions are ever accessed, and how often they get overwritten or reconfigured/deleted.\n\nIf the latter is very rare and the former infrequent, we should be able to allocate a single boilerplate shape for the standard class which points to the JSFunctionSpec array, and fill in the JSFunctions only as they are accessed.  This boilerplate shape would be, conceptually, a chain of method shapes, and if any of the properties gets overwritten, reconfigured or deleted then the boilerplate is replaced with the Shapes and JSFunctions it represents.\n\nAnother neat thing would be to treat the lazily instantiated functions as weak references, so they could be reverted on GC.  This could slowify the object mark path though, so would need to be done carefully.\n\nA few preliminary numbers, not enough to justify this bug:\n\nIn a light GMail session I measured 111 instances of Object.prototype live during a GC (thinking these are vaguely 1:1 with windows), and 429 instances of some variant of the toSource method.  Probably around zero of these toSource instances were ever actually used.  By my count, on x86 a Shape is 10 words and a JSFunction is 20 words.  Across the 429 instances, this is an unnecessary 51KB of allocation, 68KB with TI.  This session had about 19000 native functions allocated, so the total allocation here was 2.3MB, 3MB with TI.", "attachment_id": null, "id": 5616772, "creator": "bhackett1024@gmail.com", "is_private": false, "time": "2011-07-27T15:57:41Z", "tags": [], "text": "Websites seem to make lots of windows and lots of instances of the standard classes.  Each time a standard class is initialized we call DefineFunctions for its builtin function properties, which allocates a Shape, a JSFunction, and (if TI is enabled) another Shape for each function.\n\nIt would be good to measure how many of these functions are ever accessed, and how often they get overwritten or reconfigured/deleted.\n\nIf the latter is very rare and the former infrequent, we should be able to allocate a single boilerplate shape for the standard class which points to the JSFunctionSpec array, and fill in the JSFunctions only as they are accessed.  This boilerplate shape would be, conceptually, a chain of method shapes, and if any of the properties gets overwritten, reconfigured or deleted then the boilerplate is replaced with the Shapes and JSFunctions it represents.\n\nAnother neat thing would be to treat the lazily instantiated functions as weak references, so they could be reverted on GC.  This could slowify the object mark path though, so would need to be done carefully.\n\nA few preliminary numbers, not enough to justify this bug:\n\nIn a light GMail session I measured 111 instances of Object.prototype live during a GC (thinking these are vaguely 1:1 with windows), and 429 instances of some variant of the toSource method.  Probably around zero of these toSource instances were ever actually used.  By my count, on x86 a Shape is 10 words and a JSFunction is 20 words.  Across the 429 instances, this is an unnecessary 51KB of allocation, 68KB with TI.  This session had about 19000 native functions allocated, so the total allocation here was 2.3MB, 3MB with TI.", "author": "bhackett1024@gmail.com", "creation_time": "2011-07-27T15:57:41Z"}, {"is_private": false, "creator": "bhackett1024@gmail.com", "creation_time": "2011-08-25T14:31:29Z", "author": "bhackett1024@gmail.com", "text": "Note: the TI specific stuff above is now stale, no extra shape is allocated for standard class (or any other) functions.", "tags": [], "time": "2011-08-25T14:31:29Z", "attachment_id": null, "raw_text": "Note: the TI specific stuff above is now stale, no extra shape is allocated for standard class (or any other) functions.", "id": 5677668, "count": 1, "bug_id": 674556}]}}}