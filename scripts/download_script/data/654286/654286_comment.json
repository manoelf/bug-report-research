{"bugs": {"654286": {"comments": [{"time": "2011-05-02T22:03:22Z", "id": 5444268, "is_private": false, "bug_id": 654286, "creation_time": "2011-05-02T22:03:22Z", "raw_text": "User-Agent:       Mozilla/5.0 (X11; Linux i686 on x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\nBuild Identifier: Mozilla/5.0 (X11; Linux i686 on x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nStarting from a content window, wrapped by default when the extension code accesses it, Greasemonkey will unwrap a copy and place it in the \"unsafeWindow\" property, for script authors to use when e.g. expando properties must be accessed.\n\nIn Firefox 4, the window's properties are re-wrapped, where they are not in Firefox 3.  The following code:\n\n\n\nvar contentWin = gBrowser.contentWindow;\nvar sandbox = Components.utils.Sandbox(contentWin);\nsandbox.window = contentWin;\nsandbox.unsafeWindow = contentWin.wrappedJSObject;\nComponents.utils.evalInSandbox(\n  \"dump(window+'\\\\n');\"\n  +\"dump(unsafeWindow+'\\\\n');\"\n  +\"dump(unsafeWindow.document+'\\\\n');\",\n  sandbox);\ndump(contentWin.wrappedJSObject.document+'\\n');\n\n\n\nProduces, in Firefox 3:\n\n[object XPCNativeWrapper [object Window]]\n[object Window]\n[object HTMLDocument]\n[object HTMLDocument]\n\nBut in Firefox 4:\n\n[object XrayWrapper [object Window]]\n[object Window]\n[object XrayWrapper [object HTMLDocument]]\n[object HTMLDocument]\n\n\nThat third line is the access to the un-wrapped window's document property.  The fourth line is chrome code making the same access, and still getting the property unwrapped (as expected).  Just the code in the sandbox is broken.\nIn Firefox 4 it is re-wrapped, and you lose access to any of its properties' expandos.\n\nThis has been reported to us as:\nhttps://github.com/greasemonkey/greasemonkey/issues/1320\nhttps://github.com/greasemonkey/greasemonkey/issues/1326\n\n\nReproducible: Always", "tags": [], "author": "arantius@gmail.com", "text": "User-Agent:       Mozilla/5.0 (X11; Linux i686 on x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\nBuild Identifier: Mozilla/5.0 (X11; Linux i686 on x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nStarting from a content window, wrapped by default when the extension code accesses it, Greasemonkey will unwrap a copy and place it in the \"unsafeWindow\" property, for script authors to use when e.g. expando properties must be accessed.\n\nIn Firefox 4, the window's properties are re-wrapped, where they are not in Firefox 3.  The following code:\n\n\n\nvar contentWin = gBrowser.contentWindow;\nvar sandbox = Components.utils.Sandbox(contentWin);\nsandbox.window = contentWin;\nsandbox.unsafeWindow = contentWin.wrappedJSObject;\nComponents.utils.evalInSandbox(\n  \"dump(window+'\\\\n');\"\n  +\"dump(unsafeWindow+'\\\\n');\"\n  +\"dump(unsafeWindow.document+'\\\\n');\",\n  sandbox);\ndump(contentWin.wrappedJSObject.document+'\\n');\n\n\n\nProduces, in Firefox 3:\n\n[object XPCNativeWrapper [object Window]]\n[object Window]\n[object HTMLDocument]\n[object HTMLDocument]\n\nBut in Firefox 4:\n\n[object XrayWrapper [object Window]]\n[object Window]\n[object XrayWrapper [object HTMLDocument]]\n[object HTMLDocument]\n\n\nThat third line is the access to the un-wrapped window's document property.  The fourth line is chrome code making the same access, and still getting the property unwrapped (as expected).  Just the code in the sandbox is broken.\nIn Firefox 4 it is re-wrapped, and you lose access to any of its properties' expandos.\n\nThis has been reported to us as:\nhttps://github.com/greasemonkey/greasemonkey/issues/1320\nhttps://github.com/greasemonkey/greasemonkey/issues/1326\n\n\nReproducible: Always", "count": 0, "attachment_id": null, "creator": "arantius@gmail.com"}, {"is_private": false, "tags": [], "creation_time": "2012-09-28T01:00:12Z", "bug_id": 654286, "raw_text": "I am pretty sure that we fixed this bug sometime in the last year and a half. Please reopen if that isn't the case.", "id": 6674516, "time": "2012-09-28T01:00:12Z", "attachment_id": null, "creator": "mrbkap@gmail.com", "author": "mrbkap@gmail.com", "text": "I am pretty sure that we fixed this bug sometime in the last year and a half. Please reopen if that isn't the case.", "count": 1}, {"attachment_id": null, "is_private": false, "tags": [], "creator": "arantius@gmail.com", "creation_time": "2012-09-28T02:27:38Z", "bug_id": 654286, "raw_text": "The specific test case above does work as expected now; at least the string representation is the same.  But a more careful test case:\n\n\nvar contentWin = gBrowser.contentWindow;\nvar sandbox = new Components.utils.Sandbox(\n    contentWin,\n    {\n      'sandboxPrototype': contentWin,\n      'wantXrays': true,\n    });\nsandbox.unsafeWindow = contentWin.wrappedJSObject;\n// This works.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.wrappedJSObject.prototype.test1 = function(){alert('Hello1')};\"\n    +\"unsafeWindow.document.body.wrappedJSObject.test1();\",\n    sandbox);\n// This fails but should work.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.prototype.test2 = function(){alert('Hello2')};\"\n    +\"unsafeWindow.document.body.test2();\",\n    sandbox);\n    \n\nThe HTMLElement (in this case) doesn't have a prototype unless it's  un-wrapped again.\n\nIn Firefox 15, the failing version gives: \"unsafeWindow.HTMLElement.prototype is undefined\" in the error console.", "id": 6674638, "time": "2012-09-28T02:27:38Z", "author": "arantius@gmail.com", "text": "The specific test case above does work as expected now; at least the string representation is the same.  But a more careful test case:\n\n\nvar contentWin = gBrowser.contentWindow;\nvar sandbox = new Components.utils.Sandbox(\n    contentWin,\n    {\n      'sandboxPrototype': contentWin,\n      'wantXrays': true,\n    });\nsandbox.unsafeWindow = contentWin.wrappedJSObject;\n// This works.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.wrappedJSObject.prototype.test1 = function(){alert('Hello1')};\"\n    +\"unsafeWindow.document.body.wrappedJSObject.test1();\",\n    sandbox);\n// This fails but should work.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.prototype.test2 = function(){alert('Hello2')};\"\n    +\"unsafeWindow.document.body.test2();\",\n    sandbox);\n    \n\nThe HTMLElement (in this case) doesn't have a prototype unless it's  un-wrapped again.\n\nIn Firefox 15, the failing version gives: \"unsafeWindow.HTMLElement.prototype is undefined\" in the error console.", "count": 2}, {"count": 3, "text": "(In reply to Anthony Lieuallen from comment #2)\n> sandbox.unsafeWindow = contentWin.wrappedJSObject;\n\nThis doesn't do what you want. The fact that you get .wrappedJSObject and then stick the resulting object on the sandbox actually re-wraps it in an Xray wrapper (because the sandbox has wantXrays: true). You need to set unsafeWindow inside the sandbox (Cu.evalInsandbox(\"unsafeWindow = unsafeWindow.wrappedJSObject\", sandbox)) to make that work.\n\n> In Firefox 15, the failing version gives:\n> \"unsafeWindow.HTMLElement.prototype is undefined\" in the error console.\n\nI *think* we have another bug filed on this. bholley, do you happen to have the # handy?", "id": 6691016, "author": "mrbkap@gmail.com", "time": "2012-10-02T22:12:45Z", "creator": "mrbkap@gmail.com", "tags": [], "raw_text": "(In reply to Anthony Lieuallen from comment #2)\n> sandbox.unsafeWindow = contentWin.wrappedJSObject;\n\nThis doesn't do what you want. The fact that you get .wrappedJSObject and then stick the resulting object on the sandbox actually re-wraps it in an Xray wrapper (because the sandbox has wantXrays: true). You need to set unsafeWindow inside the sandbox (Cu.evalInsandbox(\"unsafeWindow = unsafeWindow.wrappedJSObject\", sandbox)) to make that work.\n\n> In Firefox 15, the failing version gives:\n> \"unsafeWindow.HTMLElement.prototype is undefined\" in the error console.\n\nI *think* we have another bug filed on this. bholley, do you happen to have the # handy?", "bug_id": 654286, "creation_time": "2012-10-02T22:12:45Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "creator": "bholley@mozilla.com", "author": "bholley@mozilla.com", "count": 4, "text": "(In reply to Blake Kaplan (:mrbkap) from comment #3)\n> > In Firefox 15, the failing version gives:\n> > \"unsafeWindow.HTMLElement.prototype is undefined\" in the error console.\n> \n> I *think* we have another bug filed on this. bholley, do you happen to have\n> the # handy?\n\nI don't. Maybe gabor or Ms2er do.", "is_private": false, "creation_time": "2012-10-02T22:15:29Z", "bug_id": 654286, "raw_text": "(In reply to Blake Kaplan (:mrbkap) from comment #3)\n> > In Firefox 15, the failing version gives:\n> > \"unsafeWindow.HTMLElement.prototype is undefined\" in the error console.\n> \n> I *think* we have another bug filed on this. bholley, do you happen to have\n> the # handy?\n\nI don't. Maybe gabor or Ms2er do.", "tags": [], "time": "2012-10-02T22:15:29Z", "id": 6691026}, {"creation_time": "2012-10-03T08:16:51Z", "bug_id": 654286, "raw_text": "I only know about bug 787070 but there you don't have an unsafeWindow, but as you pointed it out in Comment 3 here you don't have it here either. So Bobby's explanation at bug 787070 comment 5 should hold here. Except I still don't quite get why .prototype on a CCW gives undefined, or is there some kind of xray mode on top of the CCW here (there)? Why the expandos on it ignored from xray is clear.", "tags": [], "is_private": false, "time": "2012-10-03T08:16:51Z", "id": 6692443, "creator": "gkrizsanits@mozilla.com", "attachment_id": null, "text": "I only know about bug 787070 but there you don't have an unsafeWindow, but as you pointed it out in Comment 3 here you don't have it here either. So Bobby's explanation at bug 787070 comment 5 should hold here. Except I still don't quite get why .prototype on a CCW gives undefined, or is there some kind of xray mode on top of the CCW here (there)? Why the expandos on it ignored from xray is clear.", "count": 5, "author": "gkrizsanits@mozilla.com"}, {"time": "2012-10-04T14:13:35Z", "id": 6697229, "bug_id": 654286, "creation_time": "2012-10-04T14:13:35Z", "raw_text": "Unwrapping inside the sandbox sounded like the solution, but:\n\nvar contentWin = gBrowser.contentWindow;\nvar sandbox = new Components.utils.Sandbox(\n    contentWin,\n    {\n      'sandboxPrototype': contentWin,\n      'wantXrays': true,\n    });\nComponents.utils.evalInSandbox(\n    \"const unsafeWindow = window.wrappedJSObject;\", sandbox);\n// Re-un-wrapping still works.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.wrappedJSObject.prototype.test3 = function(){alert('Hello3')};\"\n    +\"unsafeWindow.document.body.wrappedJSObject.test3();\",\n    sandbox);\n// This also fails but should work.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.prototype.test4 = function(){alert('Hello4')};\"\n    +\"unsafeWindow.document.body.test4();\",\n    sandbox);\n    \nProduces an alert of \"Hello3\" then the same \"Error: unsafeWindow.HTMLElement.prototype is undefined\".", "tags": [], "is_private": false, "count": 6, "text": "Unwrapping inside the sandbox sounded like the solution, but:\n\nvar contentWin = gBrowser.contentWindow;\nvar sandbox = new Components.utils.Sandbox(\n    contentWin,\n    {\n      'sandboxPrototype': contentWin,\n      'wantXrays': true,\n    });\nComponents.utils.evalInSandbox(\n    \"const unsafeWindow = window.wrappedJSObject;\", sandbox);\n// Re-un-wrapping still works.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.wrappedJSObject.prototype.test3 = function(){alert('Hello3')};\"\n    +\"unsafeWindow.document.body.wrappedJSObject.test3();\",\n    sandbox);\n// This also fails but should work.\nComponents.utils.evalInSandbox(\n    \"unsafeWindow.HTMLElement.prototype.test4 = function(){alert('Hello4')};\"\n    +\"unsafeWindow.document.body.test4();\",\n    sandbox);\n    \nProduces an alert of \"Hello3\" then the same \"Error: unsafeWindow.HTMLElement.prototype is undefined\".", "author": "arantius@gmail.com", "creator": "arantius@gmail.com", "attachment_id": null}, {"is_private": false, "bug_id": 654286, "creation_time": "2013-04-05T19:02:50Z", "raw_text": "", "tags": [], "time": "2013-04-05T19:02:50Z", "id": 7283042, "attachment_id": 733984, "creator": "janekptacijarabaci@seznam.cz", "author": "janekptacijarabaci@seznam.cz", "text": "Created attachment 733984\nAlert OK", "count": 7}, {"time": "2013-04-05T19:03:34Z", "id": 7283045, "is_private": false, "creation_time": "2013-04-05T19:03:34Z", "bug_id": 654286, "raw_text": "", "tags": [], "author": "janekptacijarabaci@seznam.cz", "text": "Created attachment 733986\nAlert ERROR (broken)", "count": 8, "attachment_id": 733986, "creator": "janekptacijarabaci@seznam.cz"}]}}, "comments": {}}