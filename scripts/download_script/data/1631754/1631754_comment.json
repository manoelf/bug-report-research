{"bugs": {"1631754": {"comments": [{"text": "For websites which have their own event handlers GV still returns `INPUT_RESULT_HANDLED` in between the first returns for how an event was handled.\n\nI don't know if this is because of the async evaluation or how the events are queued but seems to be happening with all such websites (like Twitter, Google Maps, etc).\n\nA video of a swipe down gesture on Twitter which shows Fenix's pull down to refresh erroneously appearing - https://drive.google.com/file/d/1TgecheYMDoZ-nGlgInhwnp6BDwXs-28E/view?usp=sharing\nin response to GV which returns\n> 2020-04-21 14:13:56.277 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.324 17990-17990/org.mozilla.fenix.debug E/InputResult: `INPUT_RESULT_HANDLED`\n2020-04-21 14:13:56.341 17990-17990/org.mozilla.fenix.debug E/InputResult: `INPUT_RESULT_HANDLED`\n2020-04-21 14:13:56.357 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.389 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.406 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.472 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.488 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.592 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n\nThe above logs are the result of using\n```\n// Execute event handler from parent class in all cases\ninputResult = handleEvent(event)\nLog.e(\"InputResult\", when(inputResult) {\n    1 -> \"INPUT_RESULT_HANDLED\"\n    2 -> \"INPUT_RESULT_HANDLED_CONTENT\"\n    else -> \"INPUT_RESULT_UNHANDLED\"\n})\n```\nhere - https://github.com/mozilla-mobile/android-components/blob/cd134a34c94a4419167aa55b7c09babc9b6f60d8/components/browser/engine-gecko-beta/src/main/java/mozilla/components/browser/engine/gecko/NestedGeckoView.kt#L67\nand so logging the return of GV's `onTouchEventForResult(event)`", "author": "petru.lingurar@softvision.ro", "id": 14768786, "attachment_id": null, "bug_id": 1631754, "is_private": false, "count": 0, "creation_time": "2020-04-21T11:49:04Z", "raw_text": "For websites which have their own event handlers GV still returns `INPUT_RESULT_HANDLED` in between the first returns for how an event was handled.\n\nI don't know if this is because of the async evaluation or how the events are queued but seems to be happening with all such websites (like Twitter, Google Maps, etc).\n\nA video of a swipe down gesture on Twitter which shows Fenix's pull down to refresh erroneously appearing - https://drive.google.com/file/d/1TgecheYMDoZ-nGlgInhwnp6BDwXs-28E/view?usp=sharing\nin response to GV which returns\n> 2020-04-21 14:13:56.277 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.324 17990-17990/org.mozilla.fenix.debug E/InputResult: `INPUT_RESULT_HANDLED`\n2020-04-21 14:13:56.341 17990-17990/org.mozilla.fenix.debug E/InputResult: `INPUT_RESULT_HANDLED`\n2020-04-21 14:13:56.357 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.389 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.406 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.472 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.488 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n2020-04-21 14:13:56.592 17990-17990/org.mozilla.fenix.debug E/InputResult: INPUT_RESULT_HANDLED_CONTENT\n\nThe above logs are the result of using\n```\n// Execute event handler from parent class in all cases\ninputResult = handleEvent(event)\nLog.e(\"InputResult\", when(inputResult) {\n    1 -> \"INPUT_RESULT_HANDLED\"\n    2 -> \"INPUT_RESULT_HANDLED_CONTENT\"\n    else -> \"INPUT_RESULT_UNHANDLED\"\n})\n```\nhere - https://github.com/mozilla-mobile/android-components/blob/cd134a34c94a4419167aa55b7c09babc9b6f60d8/components/browser/engine-gecko-beta/src/main/java/mozilla/components/browser/engine/gecko/NestedGeckoView.kt#L67\nand so logging the return of GV's `onTouchEventForResult(event)`", "time": "2020-04-21T11:49:04Z", "creator": "petru.lingurar@softvision.ro", "tags": []}, {"raw_text": "The same can be seen in geckoview-example when scrolling - https://treeherder.mozilla.org/#/jobs?repo=try&revision=669015980b228bcf3d0603bf55710d3eba6231d0", "count": 1, "creation_time": "2020-04-21T13:31:00Z", "tags": [], "creator": "petru.lingurar@softvision.ro", "time": "2020-04-21T13:31:00Z", "id": 14768987, "author": "petru.lingurar@softvision.ro", "attachment_id": null, "text": "The same can be seen in geckoview-example when scrolling - https://treeherder.mozilla.org/#/jobs?repo=try&revision=669015980b228bcf3d0603bf55710d3eba6231d0", "bug_id": 1631754, "is_private": false}, {"is_private": false, "bug_id": 1631754, "attachment_id": null, "author": "snorp@snorp.net", "id": 14769272, "text": "Petru, for the dynamic toolbar they're making the decision to move based only on the result of the first `ACTION_DOWN` event. I think you'll probably have better results if you try the same.\n\nStill, this kind of behavior seems wrong. Botond, can you take a look?", "tags": ["thankyou"], "creator": "snorp@snorp.net", "time": "2020-04-21T14:41:57Z", "raw_text": "Petru, for the dynamic toolbar they're making the decision to move based only on the result of the first `ACTION_DOWN` event. I think you'll probably have better results if you try the same.\n\nStill, this kind of behavior seems wrong. Botond, can you take a look?", "creation_time": "2020-04-21T14:41:57Z", "count": 2}, {"raw_text": "Based on the log pasted above I would imagine that we're hitting [this exit condition](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#169) and that is triggering [this code](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/widget/android/nsWindow.cpp#526) which is missing the `result.mTargetIsRoot` check that we do [later](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/widget/android/nsWindow.cpp#542). The `eConsumeNoDefault` codepath can be coming from either content or chrome, so we should be checking `mTargetIsRoot` there.\n\nYou can verify if you run with `MOZ_LOG=apz.inputqueue:4` and see if you get the log about slop from [here](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#168) turning up for those two events.", "attachment_id": null, "id": 14769297, "author": "kats@bugmash.staktrace.com", "creation_time": "2020-04-21T14:57:34Z", "text": "Based on the log pasted above I would imagine that we're hitting [this exit condition](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#169) and that is triggering [this code](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/widget/android/nsWindow.cpp#526) which is missing the `result.mTargetIsRoot` check that we do [later](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/widget/android/nsWindow.cpp#542). The `eConsumeNoDefault` codepath can be coming from either content or chrome, so we should be checking `mTargetIsRoot` there.\n\nYou can verify if you run with `MOZ_LOG=apz.inputqueue:4` and see if you get the log about slop from [here](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#168) turning up for those two events.", "count": 3, "tags": [], "is_private": false, "bug_id": 1631754, "creator": "kats@bugmash.staktrace.com", "time": "2020-04-21T14:57:34Z"}, {"bug_id": 1631754, "is_private": false, "text": "Might also be [this exit condition](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#175) which is equivalent to the other one I linked to.", "attachment_id": null, "author": "kats@bugmash.staktrace.com", "id": 14769300, "time": "2020-04-21T14:58:24Z", "creator": "kats@bugmash.staktrace.com", "tags": [], "creation_time": "2020-04-21T14:58:24Z", "count": 4, "raw_text": "Might also be [this exit condition](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#175) which is equivalent to the other one I linked to."}, {"is_private": false, "bug_id": 1631754, "text": "If you quickly scroll the embedded playlist on this site, you'll get what I believe is the the same issue: https://newsroom.spotify.com/2018-09-04/how-to-embed-spotifys-play-button/\n\nThe same happens on github projects like: https://github.com/mozilla-mobile/fenix/projects", "author": "sblatz@mozilla.com", "id": 14774016, "attachment_id": null, "time": "2020-04-23T14:50:17Z", "creator": "sblatz@mozilla.com", "tags": [], "count": 5, "creation_time": "2020-04-23T14:50:17Z", "raw_text": "If you quickly scroll the embedded playlist on this site, you'll get what I believe is the the same issue: https://newsroom.spotify.com/2018-09-04/how-to-embed-spotifys-play-button/\n\nThe same happens on github projects like: https://github.com/mozilla-mobile/fenix/projects"}, {"time": "2020-04-23T15:44:10Z", "creator": "sblatz@mozilla.com", "tags": [], "bug_id": 1631754, "is_private": false, "creation_time": "2020-04-23T15:44:10Z", "count": 6, "text": "Here's a demo & some logs of this happening on the Spotify embedded playlist. Note this is *all* on ACTION_DOWN press. Seems like *fast* movement seems to make it more reproducible.\n\nhttps://drive.google.com/file/d/1yjgY9vZK26i2lpw0VIjlAMVeY0x5CZFQ/view?usp=sharing", "raw_text": "Here's a demo & some logs of this happening on the Spotify embedded playlist. Note this is *all* on ACTION_DOWN press. Seems like *fast* movement seems to make it more reproducible.\n\nhttps://drive.google.com/file/d/1yjgY9vZK26i2lpw0VIjlAMVeY0x5CZFQ/view?usp=sharing", "attachment_id": null, "author": "sblatz@mozilla.com", "id": 14774169}, {"text": "`apz.inputqueue:4` logs show my issue does indeed follow the steps @kats described in comment 3!\n\nBut for the scenario Sawyer described \n(quick scroll in an iframe like [this]([https://newsroom.spotify.com/2020-04-24/uncover-the-best-artists-of-the-nordics-on-oyster-spotifys-new-playlist-and-studio-program/](https://newsroom.spotify.com/2020-04-24/uncover-the-best-artists-of-the-nordics-on-oyster-spotifys-new-playlist-and-studio-program/))) I saw that we are actually returning `nsEventStatus_eConsumeDoDefault` from [here](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#171) but then we get to [here](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/widget/android/nsWindow.cpp#797) where based on `result.mTargetIsRoot` we erroneously return  `INPUT_RESULT_HANDLED`.", "id": 14779086, "author": "petru.lingurar@softvision.ro", "attachment_id": null, "is_private": false, "bug_id": 1631754, "count": 7, "creation_time": "2020-04-27T05:56:44Z", "raw_text": "`apz.inputqueue:4` logs show my issue does indeed follow the steps @kats described in comment 3!\n\nBut for the scenario Sawyer described \n(quick scroll in an iframe like [this]([https://newsroom.spotify.com/2020-04-24/uncover-the-best-artists-of-the-nordics-on-oyster-spotifys-new-playlist-and-studio-program/](https://newsroom.spotify.com/2020-04-24/uncover-the-best-artists-of-the-nordics-on-oyster-spotifys-new-playlist-and-studio-program/))) I saw that we are actually returning `nsEventStatus_eConsumeDoDefault` from [here](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/gfx/layers/apz/src/InputQueue.cpp#171) but then we get to [here](https://searchfox.org/mozilla-central/rev/d2cec90777d573585f8477d5170892e5dcdfb0ab/widget/android/nsWindow.cpp#797) where based on `result.mTargetIsRoot` we erroneously return  `INPUT_RESULT_HANDLED`.", "time": "2020-04-27T05:56:44Z", "creator": "petru.lingurar@softvision.ro", "tags": []}, {"attachment_id": null, "author": "kats@bugmash.staktrace.com", "id": 14784906, "text": "@petru: the links in your previous comment are kinda broken, the markdown has nested brackets.\n\nI'm also not totally clear on what you said - it sounds like there are two problems? The first being what I described earlier, and the second being a different issue producing the scenario Sawyer described. The second one seems like maybe `mTargetIsRoot` is true when you're expecting it to be false. Can you confirm my interpretation is correct?", "bug_id": 1631754, "is_private": false, "raw_text": "@petru: the links in your previous comment are kinda broken, the markdown has nested brackets.\n\nI'm also not totally clear on what you said - it sounds like there are two problems? The first being what I described earlier, and the second being a different issue producing the scenario Sawyer described. The second one seems like maybe `mTargetIsRoot` is true when you're expecting it to be false. Can you confirm my interpretation is correct?", "creation_time": "2020-04-28T20:22:21Z", "count": 8, "tags": [], "creator": "kats@bugmash.staktrace.com", "time": "2020-04-28T20:22:21Z"}, {"creation_time": "2020-04-28T21:15:38Z", "text": "We're looking at doing a major Fennec/Fenix comparison experiment in mid-May - would this change get in? I'm sure we'll see lots of complaints from users that bottom toolbar isn't auto-hiding, taking up browsing space, etc. but we can't ship with this if the toolbar isn't going to show, bc that would be a security risk.\n\nAt the same time, I don't have a good view of what other priorities or tradeoffs are, so happy to let Emily/Jeff chime in here.", "count": 9, "raw_text": "We're looking at doing a major Fennec/Fenix comparison experiment in mid-May - would this change get in? I'm sure we'll see lots of complaints from users that bottom toolbar isn't auto-hiding, taking up browsing space, etc. but we can't ship with this if the toolbar isn't going to show, bc that would be a security risk.\n\nAt the same time, I don't have a good view of what other priorities or tradeoffs are, so happy to let Emily/Jeff chime in here.", "attachment_id": null, "id": 14785008, "author": "liucheia+bugzilla@gmail.com", "time": "2020-04-28T21:15:38Z", "creator": "liucheia+bugzilla@gmail.com", "tags": [], "is_private": false, "bug_id": 1631754}, {"tags": [], "creator": "vzare@mozilla.com", "time": "2020-04-29T00:01:15Z", "raw_text": "+1 prioritizing this bug. Assuming this will address the major pain points with the bottom toolbar/scroll behaviour, this is a high priority issue for Fenix.", "creation_time": "2020-04-29T00:01:15Z", "count": 10, "bug_id": 1631754, "is_private": false, "attachment_id": null, "id": 14785314, "author": "vzare@mozilla.com", "text": "+1 prioritizing this bug. Assuming this will address the major pain points with the bottom toolbar/scroll behaviour, this is a high priority issue for Fenix."}, {"raw_text": "Consult with snorp about whether to move this to graphics", "creation_time": "2020-04-29T08:18:11Z", "count": 11, "tags": [], "time": "2020-04-29T08:18:11Z", "creator": "etoop@mozilla.com", "attachment_id": null, "author": "etoop@mozilla.com", "id": 14785708, "text": "Consult with snorp about whether to move this to graphics", "bug_id": 1631754, "is_private": false}, {"text": "*** Bug 1633322 has been marked as a duplicate of this bug. ***", "count": 12, "creation_time": "2020-04-29T08:35:21Z", "id": 14785732, "author": "etoop@mozilla.com", "attachment_id": null, "raw_text": "", "time": "2020-04-29T08:35:21Z", "creator": "etoop@mozilla.com", "bug_id": 1631754, "is_private": false, "tags": []}, {"tags": [], "creator": "botond@mozilla.com", "time": "2020-04-29T17:52:02Z", "raw_text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #8)\n> I'm also not totally clear on what you said - it sounds like there are two problems? The first being what I described earlier, and the second being a different issue producing the scenario Sawyer described. The second one seems like maybe `mTargetIsRoot` is true when you're expecting it to be false. Can you confirm my interpretation is correct?\n\nAssuming this is the case, one potential issue here may be that we are setting `mTargetIsRoot` based on the tentative target, before any main-thread confirmation. If we're hitting a DTC region, we may report `mTargetIsRoot=true` but end up scrolling a subframe that gets activated.\n\nIf GV would like us to only report `mTargetIsRoot=true` if we know for sure we're going to be scrolling the root element, we should adjust our computation to be \"(target apzc is the root) AND (did not hit a DTC region)\".", "creation_time": "2020-04-29T17:52:02Z", "count": 13, "bug_id": 1631754, "is_private": false, "attachment_id": null, "author": "botond@mozilla.com", "id": 14786760, "text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #8)\n> I'm also not totally clear on what you said - it sounds like there are two problems? The first being what I described earlier, and the second being a different issue producing the scenario Sawyer described. The second one seems like maybe `mTargetIsRoot` is true when you're expecting it to be false. Can you confirm my interpretation is correct?\n\nAssuming this is the case, one potential issue here may be that we are setting `mTargetIsRoot` based on the tentative target, before any main-thread confirmation. If we're hitting a DTC region, we may report `mTargetIsRoot=true` but end up scrolling a subframe that gets activated.\n\nIf GV would like us to only report `mTargetIsRoot=true` if we know for sure we're going to be scrolling the root element, we should adjust our computation to be \"(target apzc is the root) AND (did not hit a DTC region)\"."}, {"is_private": false, "bug_id": 1631754, "text": "(In reply to Botond Ballo [:botond] from comment #13)\n> If GV would like us to only report `mTargetIsRoot=true` if we know for sure we're going to be scrolling the root element, we should adjust our computation to be \"(target apzc is the root) AND (did not hit a DTC region)\".\n\n(Technically, only two of the DTC reasons (\"irregular area\" and \"inactive scrollframe\") mean the target is ambiguous. However, observing that GV already checks for the third reason, \"APZ-aware listeners\", via the sister flag [`mHitRegionWithApzAwareListeners`](https://searchfox.org/mozilla-central/rev/7fd1c1c34923ece7ad8c822bee062dd0491d64dc/gfx/layers/apz/public/APZInputBridge.h#78), and uses it for the same purpose ([returning `INPUT_RESULT_HANDLED_CONTENT`](https://searchfox.org/mozilla-central/rev/7fd1c1c34923ece7ad8c822bee062dd0491d64dc/widget/android/nsWindow.cpp#535)), we may as well just combine the two flags and check for any DTC reason.)", "author": "botond@mozilla.com", "id": 14786777, "attachment_id": null, "time": "2020-04-29T17:59:25Z", "creator": "botond@mozilla.com", "tags": [], "count": 14, "creation_time": "2020-04-29T17:59:25Z", "raw_text": "(In reply to Botond Ballo [:botond] from comment #13)\n> If GV would like us to only report `mTargetIsRoot=true` if we know for sure we're going to be scrolling the root element, we should adjust our computation to be \"(target apzc is the root) AND (did not hit a DTC region)\".\n\n(Technically, only two of the DTC reasons (\"irregular area\" and \"inactive scrollframe\") mean the target is ambiguous. However, observing that GV already checks for the third reason, \"APZ-aware listeners\", via the sister flag [`mHitRegionWithApzAwareListeners`](https://searchfox.org/mozilla-central/rev/7fd1c1c34923ece7ad8c822bee062dd0491d64dc/gfx/layers/apz/public/APZInputBridge.h#78), and uses it for the same purpose ([returning `INPUT_RESULT_HANDLED_CONTENT`](https://searchfox.org/mozilla-central/rev/7fd1c1c34923ece7ad8c822bee062dd0491d64dc/widget/android/nsWindow.cpp#535)), we may as well just combine the two flags and check for any DTC reason.)"}, {"count": 15, "creation_time": "2020-05-04T09:03:29Z", "raw_text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #8)\n> @petru: the links in your previous comment are kinda broken, the markdown has nested brackets.\n> \n> I'm also not totally clear on what you said - it sounds like there are two problems? The first being what I described earlier, and the second being a different issue producing the scenario Sawyer described. The second one seems like maybe `mTargetIsRoot` is true when you're expecting it to be false. Can you confirm my interpretation is correct?\n\nIndeed, to me it seems like there are two situations in which PZC returns INPUT_RESULT_HANDLED instead of INPUT_RESULT_HANDLED_CONTENT:\n- first, the one for which I opened this ticket which was explained by you in https://bugzilla.mozilla.org/show_bug.cgi?id=1631754#c3\n- second, based on Sawyers report, which I tried to follow in https://bugzilla.mozilla.org/show_bug.cgi?id=1631754#c7 shows `mTargetIsRoot` being true when it actually should be false. If needed I can open a new ticket for this.\n\nAnd, importantly there is another issue which shows the opposite, INPUT_RESULT_HANDLED_CONTENT being returned instead of the expected INPUT_RESULT_HANDLED on some specific sites - bug 1633322", "time": "2020-05-04T09:03:29Z", "creator": "petru.lingurar@softvision.ro", "tags": [], "text": "(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #8)\n> @petru: the links in your previous comment are kinda broken, the markdown has nested brackets.\n> \n> I'm also not totally clear on what you said - it sounds like there are two problems? The first being what I described earlier, and the second being a different issue producing the scenario Sawyer described. The second one seems like maybe `mTargetIsRoot` is true when you're expecting it to be false. Can you confirm my interpretation is correct?\n\nIndeed, to me it seems like there are two situations in which PZC returns INPUT_RESULT_HANDLED instead of INPUT_RESULT_HANDLED_CONTENT:\n- first, the one for which I opened this ticket which was explained by you in https://bugzilla.mozilla.org/show_bug.cgi?id=1631754#c3\n- second, based on Sawyers report, which I tried to follow in https://bugzilla.mozilla.org/show_bug.cgi?id=1631754#c7 shows `mTargetIsRoot` being true when it actually should be false. If needed I can open a new ticket for this.\n\nAnd, importantly there is another issue which shows the opposite, INPUT_RESULT_HANDLED_CONTENT being returned instead of the expected INPUT_RESULT_HANDLED on some specific sites - bug 1633322", "id": 14795250, "author": "petru.lingurar@softvision.ro", "attachment_id": null, "bug_id": 1631754, "is_private": false}, {"is_private": false, "bug_id": 1631754, "attachment_id": null, "id": 14795840, "author": "kats@bugmash.staktrace.com", "text": "Ok, thanks for explaining. The patch for the first issue here is pretty simple, as I described already in comment 3. The second one (based on Sawyers report) might be explained by what Botond said, although we should verify that. If it's not explained by that we would need to investigate a bit more. It seems suspicious to me that the speed of the panning action affects the output; the only reason I can think that might be the case would be the [fast fling](https://searchfox.org/mozilla-central/rev/3262e013550a0db7c1840a78a3878a929801fe40/gfx/layers/apz/src/InputQueue.cpp#168) detection code and that would also be handled by the first patch.\n\nAt any rate, the last issue (bug 1633322) seems like a different problem and needs investigation.", "tags": [], "time": "2020-05-04T14:19:51Z", "creator": "kats@bugmash.staktrace.com", "raw_text": "Ok, thanks for explaining. The patch for the first issue here is pretty simple, as I described already in comment 3. The second one (based on Sawyers report) might be explained by what Botond said, although we should verify that. If it's not explained by that we would need to investigate a bit more. It seems suspicious to me that the speed of the panning action affects the output; the only reason I can think that might be the case would be the [fast fling](https://searchfox.org/mozilla-central/rev/3262e013550a0db7c1840a78a3878a929801fe40/gfx/layers/apz/src/InputQueue.cpp#168) detection code and that would also be handled by the first patch.\n\nAt any rate, the last issue (bug 1633322) seems like a different problem and needs investigation.", "creation_time": "2020-05-04T14:19:51Z", "count": 16}, {"tags": [], "time": "2020-05-14T13:21:08Z", "creator": "kats@bugmash.staktrace.com", "raw_text": "\nIn particular, the eConsumeNoDefault case also needs to check for mTargetIsRoot\nand the apz aware listeners flag.", "count": 17, "creation_time": "2020-05-14T13:21:08Z", "bug_id": 1631754, "is_private": false, "id": 14819322, "author": "kats@bugmash.staktrace.com", "attachment_id": 9148344, "text": "Created attachment 9148344\nBug 1631754 - Improve code to distinguish between root and content handling of events. r?snorp\n\n\nIn particular, the eConsumeNoDefault case also needs to check for mTargetIsRoot\nand the apz aware listeners flag."}, {"time": "2020-05-14T13:21:51Z", "creator": "kats@bugmash.staktrace.com", "tags": [], "count": 18, "creation_time": "2020-05-14T13:21:51Z", "raw_text": "Patch seems to fix both the issue in comment 0 (tested on twitter.com) and Sawyer's issue (tested on the spotify playlist). I tested using GVE.", "is_private": false, "bug_id": 1631754, "text": "Patch seems to fix both the issue in comment 0 (tested on twitter.com) and Sawyer's issue (tested on the spotify playlist). I tested using GVE.", "id": 14819325, "author": "kats@bugmash.staktrace.com", "attachment_id": null}, {"bug_id": 1631754, "is_private": false, "tags": [], "creator": "pulsebot@bots.tld", "time": "2020-05-14T14:03:47Z", "id": 14819412, "author": "pulsebot@bots.tld", "attachment_id": null, "raw_text": "Pushed by kgupta@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/f049c6635dc2\nImprove code to distinguish between root and content handling of events. r=snorp,geckoview-reviewers", "count": 19, "text": "Pushed by kgupta@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/f049c6635dc2\nImprove code to distinguish between root and content handling of events. r=snorp,geckoview-reviewers", "creation_time": "2020-05-14T14:03:47Z"}, {"is_private": false, "bug_id": 1631754, "text": "https://hg.mozilla.org/mozilla-central/rev/f049c6635dc2", "author": "dluca@mozilla.com", "id": 14821415, "attachment_id": null, "time": "2020-05-14T21:13:51Z", "creator": "dluca@mozilla.com", "tags": ["bugherder"], "count": 20, "creation_time": "2020-05-14T21:13:51Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/f049c6635dc2"}]}}, "comments": {}}