{"comments": {}, "bugs": {"1633712": {"comments": [{"creation_time": "2020-04-28T12:04:39Z", "creator": "poirot.alex@gmail.com", "tags": [], "count": 0, "time": "2020-04-28T12:04:39Z", "is_private": false, "text": "Similarly to bug 1593937 and bug 1620248, which will help creating the BrowsingContextTargetActor before the process or document starts loading, we should do the same with WorkerTargetActor.\n\nWe should introduce a \"worker target helper\" over here:\nhttps://searchfox.org/mozilla-central/source/devtools/server/actors/descriptors/watcher/target-helpers/\nWhich exposes 4 methods:\n* createTargets\n* destroyTargets\n* watchResources\n* unwatchResources\nThe `createTargets` and `destroyTargets` should create and destroy the Worker Targets for the worker that already exists.\n`watchResources` and `unwatchResources` should communicate the new watched/unwatched resources for all existing worker targets.\n\nIn parallel to that, we should have some code, which would watch all:\n* new worker being created and call [WatcherActor.notifyTargetCreated](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/actors/descriptors/watcher/watcher.js#138)\n* workers that have been destroyed and call [WatcherActor.notifyTargetDestroyed](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/actors/descriptors/watcher/watcher.js#142-147)\nWe might have to hook up into [WatcherRegistry](https://searchfox.org/mozilla-central/source/devtools/server/actors/descriptors/watcher/WatcherRegistry.jsm) in order to register/unregister this \"worker watching\" code. Similarly to how we register/unregister the DevToolsFrame JSWindow Actor. (Or see my other approach for content process target, `maybeRegisterMessageListeners` in [this patch](https://phabricator.services.mozilla.com/D65529?vs=on&id=290273#toc))\n\nThe goal here would be to start by only supporting Tab Target. So only when `WatcherActor._browser`/`WatcherActor.browsingContextID` are set. And so only when we focus on just one BrowsingContext. Supporting the browser toolbox means having to inspect all the processes, while for one tab, we can focus on just one process at a time. (We may support navigation to another process in a followup)\n\nCompared to the current implementation, using legacy listeners and `TabTarget.listWorkers`, here, we should avoid involving TabTarget/BrowsingContextTargetActor. We might have to introduce a new JS Window Actor, or reuse DevToolsFrame JS Window Actor (if relevant).\n\nYou might want to contribute to the existing TargetList test specific to Worker targets:\nhttps://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/shared/resources/tests/browser_target_list_workers.js#190-234\nIn order to support more usecases:\n* destruction\n* workers created after the call to watchTargets\n* may be have two distinct test files? One for BrowserToolbox codepath and another one for Tabs?\n\nLast but not list, a quick note about the existing codebase.\nThe code watching for new workers and workers being destroyed should be inspired from [WorkerTargetActorList](https://searchfox.org/mozilla-central/source/devtools/server/actors/worker/worker-target-actor-list.js).\n* `matchWorkerDebugger` should be tweaked to check WatcherActor's BrowsingContextID instead of window.\n* WorkerPauser should be kept until we address bug 1573327\nWorkerPauser is actually including a very important bit that is a bit convoluted and not very well known.\n[Right here](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/actors/worker/worker-target-actor-list.js#87-89), on every Worker instantiation, we pause the worker immediately, from the main thread, preventing it to run anything. And much later on, [there](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/connectors/worker-connector.js#40), we resume it, still from the main thread. But the path between these two callsites is convoluted!\n1) the worker just get created and we immediately call worker.setDebuggerReady(false), this is done by WorkerPauser\n2) Completely independently of that, we start creating the WorkerTargetActor, on demand, via listWorkers and WorkerTargetActorList\n3) We use WorkerConnector to create the WorkerTargetActor from the Worker thread\n4) The frontend receive the worker target\n5) The frontend attach the ThreadActor\n6) [Some magic code](https://searchfox.org/mozilla-central/source/devtools/server/startup/worker.js#105) from the worker thread notify the main thread that the Thread Actor is attached\n7) [Some other magic code](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/connectors/worker-connector.js#37-41) in the main thread receive this message and resume the worker\n\nAll this \"magic\" (complexity) relates to bug 1573327 as it will allow to pass the breakpoint to the Watcher Actor, and stop having to freeze the worker untils ThreadActor.attach is called. Today, we pass the breakpoint via this thread actor method. We will pass the breakpoints as we pass the \"watched resource types\" to all processes and threads.", "raw_text": "Similarly to bug 1593937 and bug 1620248, which will help creating the BrowsingContextTargetActor before the process or document starts loading, we should do the same with WorkerTargetActor.\n\nWe should introduce a \"worker target helper\" over here:\nhttps://searchfox.org/mozilla-central/source/devtools/server/actors/descriptors/watcher/target-helpers/\nWhich exposes 4 methods:\n* createTargets\n* destroyTargets\n* watchResources\n* unwatchResources\nThe `createTargets` and `destroyTargets` should create and destroy the Worker Targets for the worker that already exists.\n`watchResources` and `unwatchResources` should communicate the new watched/unwatched resources for all existing worker targets.\n\nIn parallel to that, we should have some code, which would watch all:\n* new worker being created and call [WatcherActor.notifyTargetCreated](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/actors/descriptors/watcher/watcher.js#138)\n* workers that have been destroyed and call [WatcherActor.notifyTargetDestroyed](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/actors/descriptors/watcher/watcher.js#142-147)\nWe might have to hook up into [WatcherRegistry](https://searchfox.org/mozilla-central/source/devtools/server/actors/descriptors/watcher/WatcherRegistry.jsm) in order to register/unregister this \"worker watching\" code. Similarly to how we register/unregister the DevToolsFrame JSWindow Actor. (Or see my other approach for content process target, `maybeRegisterMessageListeners` in [this patch](https://phabricator.services.mozilla.com/D65529?vs=on&id=290273#toc))\n\nThe goal here would be to start by only supporting Tab Target. So only when `WatcherActor._browser`/`WatcherActor.browsingContextID` are set. And so only when we focus on just one BrowsingContext. Supporting the browser toolbox means having to inspect all the processes, while for one tab, we can focus on just one process at a time. (We may support navigation to another process in a followup)\n\nCompared to the current implementation, using legacy listeners and `TabTarget.listWorkers`, here, we should avoid involving TabTarget/BrowsingContextTargetActor. We might have to introduce a new JS Window Actor, or reuse DevToolsFrame JS Window Actor (if relevant).\n\nYou might want to contribute to the existing TargetList test specific to Worker targets:\nhttps://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/shared/resources/tests/browser_target_list_workers.js#190-234\nIn order to support more usecases:\n* destruction\n* workers created after the call to watchTargets\n* may be have two distinct test files? One for BrowserToolbox codepath and another one for Tabs?\n\nLast but not list, a quick note about the existing codebase.\nThe code watching for new workers and workers being destroyed should be inspired from [WorkerTargetActorList](https://searchfox.org/mozilla-central/source/devtools/server/actors/worker/worker-target-actor-list.js).\n* `matchWorkerDebugger` should be tweaked to check WatcherActor's BrowsingContextID instead of window.\n* WorkerPauser should be kept until we address bug 1573327\nWorkerPauser is actually including a very important bit that is a bit convoluted and not very well known.\n[Right here](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/actors/worker/worker-target-actor-list.js#87-89), on every Worker instantiation, we pause the worker immediately, from the main thread, preventing it to run anything. And much later on, [there](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/connectors/worker-connector.js#40), we resume it, still from the main thread. But the path between these two callsites is convoluted!\n1) the worker just get created and we immediately call worker.setDebuggerReady(false), this is done by WorkerPauser\n2) Completely independently of that, we start creating the WorkerTargetActor, on demand, via listWorkers and WorkerTargetActorList\n3) We use WorkerConnector to create the WorkerTargetActor from the Worker thread\n4) The frontend receive the worker target\n5) The frontend attach the ThreadActor\n6) [Some magic code](https://searchfox.org/mozilla-central/source/devtools/server/startup/worker.js#105) from the worker thread notify the main thread that the Thread Actor is attached\n7) [Some other magic code](https://searchfox.org/mozilla-central/rev/21f2b48e01f2e14a94e8d39a665b56fcc08ecbdb/devtools/server/connectors/worker-connector.js#37-41) in the main thread receive this message and resume the worker\n\nAll this \"magic\" (complexity) relates to bug 1573327 as it will allow to pass the breakpoint to the Watcher Actor, and stop having to freeze the worker untils ThreadActor.attach is called. Today, we pass the breakpoint via this thread actor method. We will pass the breakpoints as we pass the \"watched resource types\" to all processes and threads.", "author": "poirot.alex@gmail.com", "id": 14783628, "bug_id": 1633712, "attachment_id": null}, {"time": "2020-06-08T16:00:51Z", "count": 1, "tags": [], "creator": "poirot.alex@gmail.com", "creation_time": "2020-06-08T16:00:51Z", "attachment_id": null, "bug_id": 1633712, "id": 14869740, "author": "poirot.alex@gmail.com", "text": "*** Bug 1593940 has been marked as a duplicate of this bug. ***", "raw_text": "", "is_private": false}, {"attachment_id": null, "bug_id": 1633712, "id": 14875645, "author": "cpeterson@mozilla.com", "raw_text": "Tracking dt-fission-m2 bugs for Fission Nightly (M6c)", "text": "Tracking dt-fission-m2 bugs for Fission Nightly (M6c)", "is_private": false, "time": "2020-06-11T06:22:52Z", "count": 2, "tags": [], "creator": "cpeterson@mozilla.com", "creation_time": "2020-06-11T06:22:52Z"}, {"time": "2020-07-08T22:35:31Z", "count": 3, "tags": [], "creator": "poirot.alex@gmail.com", "creation_time": "2020-07-08T22:35:31Z", "attachment_id": null, "bug_id": 1633712, "id": 14926453, "author": "poirot.alex@gmail.com", "text": "I opened some followups upfront.\nBug 1651518 in order to expose workers from the parent process.\nBug 1651522 in order to expose service workers.\n\nI'm not 100% confident about the execution plan, so feel free to reorganise the bugs as you make progress!\nAt least, bug 1651522 should help track when we will address the performance issues of service worker debugging from the debugger.", "raw_text": "I opened some followups upfront.\nBug 1651518 in order to expose workers from the parent process.\nBug 1651522 in order to expose service workers.\n\nI'm not 100% confident about the execution plan, so feel free to reorganise the bugs as you make progress!\nAt least, bug 1651522 should help track when we will address the performance issues of service worker debugging from the debugger.", "is_private": false}, {"creation_time": "2020-07-30T12:45:20Z", "creator": "nchevobbe@mozilla.com", "tags": [], "count": 4, "time": "2020-07-30T12:45:20Z", "is_private": false, "raw_text": "\n\nDepends on D85398", "text": "Created attachment 9167025\nBug 1633712 - [devtools] Create WorkerTargets as soon as possible. r=ochameau.\n\n\n\nDepends on D85398", "id": 14963845, "author": "nchevobbe@mozilla.com", "bug_id": 1633712, "attachment_id": 9167025}, {"creator": "nchevobbe@mozilla.com", "creation_time": "2020-08-31T09:08:49Z", "count": 5, "tags": [], "time": "2020-08-31T09:08:49Z", "text": "Created attachment 9172983\nBug 1633712 - [devtools] Add test cases to browser_target_list_tab_workers and remove the fission fail-if. r=jdescottes.\n\n\nCheck that when removing iframes, we're notified about the worker unregistration,\nand check that the target list works as expected when we have multiple iframes\non same origin (both remote and same-origin as main document).\n\nDepends on D85399", "raw_text": "\nCheck that when removing iframes, we're notified about the worker unregistration,\nand check that the target list works as expected when we have multiple iframes\non same origin (both remote and same-origin as main document).\n\nDepends on D85399", "is_private": false, "id": 15013982, "author": "nchevobbe@mozilla.com", "bug_id": 1633712, "attachment_id": 9172983}, {"creation_time": "2020-08-31T09:11:04Z", "creator": "nchevobbe@mozilla.com", "time": "2020-08-31T09:11:04Z", "tags": [], "count": 6, "author": "nchevobbe@mozilla.com", "id": 15013984, "is_private": false, "text": "Created attachment 9172984\nBug 1633712 - [devtools] Add a console message resource test for worker targets. r=jdescottes.\n\n\n\nDepends on D88769", "raw_text": "\n\nDepends on D88769", "attachment_id": 9172984, "bug_id": 1633712}, {"raw_text": "Bulk move of all m2-mvp devtools bugs to Fission M7.", "text": "Bulk move of all m2-mvp devtools bugs to Fission M7.", "is_private": false, "author": "nkochar@mozilla.com", "id": 15063754, "bug_id": 1633712, "attachment_id": null, "creator": "nkochar@mozilla.com", "creation_time": "2020-10-01T19:26:29Z", "count": 7, "tags": [], "time": "2020-10-01T19:26:29Z"}, {"creator": "nchevobbe@mozilla.com", "creation_time": "2020-10-07T11:54:01Z", "time": "2020-10-07T11:54:01Z", "count": 8, "tags": [], "author": "nchevobbe@mozilla.com", "id": 15072498, "raw_text": "\nThis function will be used by the worker-helper.js file.", "text": "Created attachment 9180138\nBug 1633712 - [devtools] Move shouldNotifyWindowGlobal and getAllRemoteBrowsingContexts to a util file. r=ochameau.\n\n\nThis function will be used by the worker-helper.js file.", "is_private": false, "attachment_id": 9180138, "bug_id": 1633712}, {"id": 15084838, "author": "pulsebot@bots.tld", "is_private": false, "text": "Pushed by nchevobbe@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/10f97f47c883\n[devtools] Move shouldNotifyWindowGlobal and getAllRemoteBrowsingContexts to a util file. r=ochameau.\nhttps://hg.mozilla.org/integration/autoland/rev/6eaa4d12b58c\n[devtools] Create WorkerTargets as soon as possible. r=ochameau,devtools-backward-compat-reviewers.\nhttps://hg.mozilla.org/integration/autoland/rev/19c8ea0b43df\n[devtools] Add test cases to browser_target_list_tab_workers and remove the fission fail-if. r=jdescottes.\nhttps://hg.mozilla.org/integration/autoland/rev/03553b300b86\n[devtools] Add a console message resource test for worker targets. r=jdescottes.", "raw_text": "Pushed by nchevobbe@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/10f97f47c883\n[devtools] Move shouldNotifyWindowGlobal and getAllRemoteBrowsingContexts to a util file. r=ochameau.\nhttps://hg.mozilla.org/integration/autoland/rev/6eaa4d12b58c\n[devtools] Create WorkerTargets as soon as possible. r=ochameau,devtools-backward-compat-reviewers.\nhttps://hg.mozilla.org/integration/autoland/rev/19c8ea0b43df\n[devtools] Add test cases to browser_target_list_tab_workers and remove the fission fail-if. r=jdescottes.\nhttps://hg.mozilla.org/integration/autoland/rev/03553b300b86\n[devtools] Add a console message resource test for worker targets. r=jdescottes.", "attachment_id": null, "bug_id": 1633712, "creation_time": "2020-10-15T05:22:49Z", "creator": "pulsebot@bots.tld", "time": "2020-10-15T05:22:49Z", "tags": [], "count": 9}, {"bug_id": 1633712, "attachment_id": null, "text": "Backed out for leaks on leak at mozilla::net::WebSocketEventService::GetOrCreate, mozilla::dom::WebSocketImpl::Init, mozilla::dom::WebSocket::ConstructorCommon, mozilla::dom::WebSocket::Constructor\n\n*backout:* https://hg.mozilla.org/integration/autoland/rev/a6aaf0c8e183f7eff7a668f9b4c6c52c39958c9b\n\n*push:* https://treeherder.mozilla.org/#/jobs?repo=autoland&selectedTaskRun=P_an57mbRAmBNnJvy0Ed_A.0&revision=03553b300b8629a56f5b5cf5620a8105e8376f22&group_state=expanded\n\n*failure log:* https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=318695738&repo=autoland&lineNumber=13556\n\n>[task 2020-10-15T06:26:32.428Z] 06:26:32     INFO - TEST-START | devtools/shared/resources/tests/browser_target_list_preffedoff.js\n[task 2020-10-15T06:26:32.923Z] 06:26:32     INFO - GECKO(3389) | =================================================================\n[task 2020-10-15T06:26:32.924Z] 06:26:32    ERROR - GECKO(3389) | ==3548==ERROR: LeakSanitizer: detected memory leaks\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) | Direct leak of 192 byte(s) in 2 object(s) allocated from:\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) |     #0 0x55b68589bb3d in malloc /builds/worker/fetches/llvm-project/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) |     #1 0x55b6858e076d in moz_xmalloc /builds/worker/checkouts/gecko/memory/mozalloc/mozalloc.cpp:52:15\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) |     #2 0x7f9a9aaae6ad in operator new /builds/worker/workspace/obj-build/dist/include/mozilla/cxxalloc.h:33:10\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #3 0x7f9a9aaae6ad in XPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCWrappedNative.cpp:425:15\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #4 0x7f9a9aa242d0 in XPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle<JS::Value>, xpcObjectHelper&, nsID const*, bool, nsresult*) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCConvert.cpp:937:17\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #5 0x7f9a9aa219c3 in XPCConvert::NativeData2JS(JSContext*, JS::MutableHandle<JS::Value>, void const*, nsXPTType const&, nsID const*, unsigned int, nsresult*) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCConvert.cpp:355:14\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #6 0x7f9a9aaa6bd1 in nsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCWrappedJSClass.cpp:922:12\n[task 2020-10-15T06:26:32.926Z] 06:26:32     INFO - GECKO(3389) |     #7 0x7f9a98fe59b0 in PrepareAndDispatch /builds/worker/checkouts/gecko/xpcom/reflect/xptcall/md/unix/xptcstubs_x86_64_linux.cpp:115:37\n[task 2020-10-15T06:26:32.927Z] 06:26:32     INFO - GECKO(3389) |     #8 0x7f9a98fe474a in SharedStub (/builds/worker/workspace/build/application/firefox/libxul.so+0x2d3c74a)\n[task 2020-10-15T06:26:32.928Z] 06:26:32     INFO - GECKO(3389) |     #9 0x7f9a9fdba357 in mozilla::dom::WorkerDebuggerManager::RegisterDebuggerMainThread(mozilla::dom::WorkerPrivate*, bool) /builds/worker/checkouts/gecko/dom/workers/WorkerDebuggerManager.cpp:282:17\n[task 2020-10-15T06:26:32.929Z] 06:26:32     INFO - GECKO(3389) |     #10 0x7f9a9fdfd4fe in RegisterWorkerDebugger /builds/worker/checkouts/gecko/dom/workers/WorkerDebuggerManager.h:93:12\n[task 2020-10-15T06:26:32.930Z] 06:26:32     INFO - GECKO(3389) |     #11 0x7f9a9fdfd4fe in EnableDebugger /builds/worker/checkouts/gecko/dom/workers/WorkerPrivate.cpp:1479:7\n[...][task 2020-10-15T06:27:16.367Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at mozilla::net::WebSocketEventService::GetOrCreate, mozilla::dom::WebSocketImpl::Init, mozilla::dom::WebSocket::ConstructorCommon, mozilla::dom::WebSocket::Constructor\n[task 2020-10-15T06:27:16.368Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at mozilla::dom::WorkerDebuggerManager::RegisterDebuggerMainThread, RegisterWorkerDebugger, EnableDebugger, mozilla::dom::WorkerPrivate::Constructor\n[task 2020-10-15T06:27:16.369Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeSet::NewInstance, XPCNativeSet::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject\n[task 2020-10-15T06:27:16.370Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, GetService, xpc::Services_Resolve\n[task 2020-10-15T06:27:16.370Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeSet::NewInstanceMutate, XPCNativeSet::GetNewOrUsed, XPCWrappedNative::ExtendSet, XPCWrappedNative::InitTearOff\n[task 2020-10-15T06:27:16.371Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNativeProto::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, GetService\n[task 2020-10-15T06:27:16.372Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, XPCConvert::NativeData2JS, nsXPCWrappedJS::CallMethod\n[task 2020-10-15T06:27:16.373Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCWrappedNative::FindTearOff, GetService\n[task 2020-10-15T06:27:16.374Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, XPCConvert::NativeData2JS\n[task 2020-10-15T06:27:16.374Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at MakeUnique, XPCWrappedNativeTearOff::AddTearOff, XPCWrappedNative::FindTearOff, XPCWrappedNative::GetNewOrUsed\n[task 2020-10-15T06:27:16.375Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCNativeSet::GetNewOrUsed, XPCWrappedNativeProto::GetNewOrUsed\n[task 2020-10-15T06:27:16.376Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNativeProto::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, XPCConvert::NativeData2JS\n[task 2020-10-15T06:27:16.376Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, GetService\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at nsSupportsWeakReference::GetWeakReference, NS_GetWeakReference, do_GetWeakReference, nsMaybeWeakPtrArray\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at MakeUnique, XPCWrappedNativeTearOff::AddTearOff, XPCWrappedNative::FindTearOff, XPCWrappedNative::FindTearOff\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at PLDHashTable::Add, PutEntry, nsBaseHashtable, nsBaseHashtable\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeSet::NewInstance, XPCNativeSet::GetNewOrUsed, XPCWrappedNativeProto::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed\n[task 2020-10-15T06:27:16.378Z] 06:27:16     INFO - runtests.py | Application ran for: 0:01:45.878651", "raw_text": "Backed out for leaks on leak at mozilla::net::WebSocketEventService::GetOrCreate, mozilla::dom::WebSocketImpl::Init, mozilla::dom::WebSocket::ConstructorCommon, mozilla::dom::WebSocket::Constructor\n\n*backout:* https://hg.mozilla.org/integration/autoland/rev/a6aaf0c8e183f7eff7a668f9b4c6c52c39958c9b\n\n*push:* https://treeherder.mozilla.org/#/jobs?repo=autoland&selectedTaskRun=P_an57mbRAmBNnJvy0Ed_A.0&revision=03553b300b8629a56f5b5cf5620a8105e8376f22&group_state=expanded\n\n*failure log:* https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=318695738&repo=autoland&lineNumber=13556\n\n>[task 2020-10-15T06:26:32.428Z] 06:26:32     INFO - TEST-START | devtools/shared/resources/tests/browser_target_list_preffedoff.js\n[task 2020-10-15T06:26:32.923Z] 06:26:32     INFO - GECKO(3389) | =================================================================\n[task 2020-10-15T06:26:32.924Z] 06:26:32    ERROR - GECKO(3389) | ==3548==ERROR: LeakSanitizer: detected memory leaks\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) | Direct leak of 192 byte(s) in 2 object(s) allocated from:\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) |     #0 0x55b68589bb3d in malloc /builds/worker/fetches/llvm-project/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) |     #1 0x55b6858e076d in moz_xmalloc /builds/worker/checkouts/gecko/memory/mozalloc/mozalloc.cpp:52:15\n[task 2020-10-15T06:26:32.924Z] 06:26:32     INFO - GECKO(3389) |     #2 0x7f9a9aaae6ad in operator new /builds/worker/workspace/obj-build/dist/include/mozilla/cxxalloc.h:33:10\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #3 0x7f9a9aaae6ad in XPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCWrappedNative.cpp:425:15\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #4 0x7f9a9aa242d0 in XPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle<JS::Value>, xpcObjectHelper&, nsID const*, bool, nsresult*) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCConvert.cpp:937:17\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #5 0x7f9a9aa219c3 in XPCConvert::NativeData2JS(JSContext*, JS::MutableHandle<JS::Value>, void const*, nsXPTType const&, nsID const*, unsigned int, nsresult*) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCConvert.cpp:355:14\n[task 2020-10-15T06:26:32.925Z] 06:26:32     INFO - GECKO(3389) |     #6 0x7f9a9aaa6bd1 in nsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*) /builds/worker/checkouts/gecko/js/xpconnect/src/XPCWrappedJSClass.cpp:922:12\n[task 2020-10-15T06:26:32.926Z] 06:26:32     INFO - GECKO(3389) |     #7 0x7f9a98fe59b0 in PrepareAndDispatch /builds/worker/checkouts/gecko/xpcom/reflect/xptcall/md/unix/xptcstubs_x86_64_linux.cpp:115:37\n[task 2020-10-15T06:26:32.927Z] 06:26:32     INFO - GECKO(3389) |     #8 0x7f9a98fe474a in SharedStub (/builds/worker/workspace/build/application/firefox/libxul.so+0x2d3c74a)\n[task 2020-10-15T06:26:32.928Z] 06:26:32     INFO - GECKO(3389) |     #9 0x7f9a9fdba357 in mozilla::dom::WorkerDebuggerManager::RegisterDebuggerMainThread(mozilla::dom::WorkerPrivate*, bool) /builds/worker/checkouts/gecko/dom/workers/WorkerDebuggerManager.cpp:282:17\n[task 2020-10-15T06:26:32.929Z] 06:26:32     INFO - GECKO(3389) |     #10 0x7f9a9fdfd4fe in RegisterWorkerDebugger /builds/worker/checkouts/gecko/dom/workers/WorkerDebuggerManager.h:93:12\n[task 2020-10-15T06:26:32.930Z] 06:26:32     INFO - GECKO(3389) |     #11 0x7f9a9fdfd4fe in EnableDebugger /builds/worker/checkouts/gecko/dom/workers/WorkerPrivate.cpp:1479:7\n[...][task 2020-10-15T06:27:16.367Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at mozilla::net::WebSocketEventService::GetOrCreate, mozilla::dom::WebSocketImpl::Init, mozilla::dom::WebSocket::ConstructorCommon, mozilla::dom::WebSocket::Constructor\n[task 2020-10-15T06:27:16.368Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at mozilla::dom::WorkerDebuggerManager::RegisterDebuggerMainThread, RegisterWorkerDebugger, EnableDebugger, mozilla::dom::WorkerPrivate::Constructor\n[task 2020-10-15T06:27:16.369Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeSet::NewInstance, XPCNativeSet::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject\n[task 2020-10-15T06:27:16.370Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, GetService, xpc::Services_Resolve\n[task 2020-10-15T06:27:16.370Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeSet::NewInstanceMutate, XPCNativeSet::GetNewOrUsed, XPCWrappedNative::ExtendSet, XPCWrappedNative::InitTearOff\n[task 2020-10-15T06:27:16.371Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNativeProto::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, GetService\n[task 2020-10-15T06:27:16.372Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, XPCConvert::NativeData2JS, nsXPCWrappedJS::CallMethod\n[task 2020-10-15T06:27:16.373Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCWrappedNative::FindTearOff, GetService\n[task 2020-10-15T06:27:16.374Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, XPCConvert::NativeData2JS\n[task 2020-10-15T06:27:16.374Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at MakeUnique, XPCWrappedNativeTearOff::AddTearOff, XPCWrappedNative::FindTearOff, XPCWrappedNative::GetNewOrUsed\n[task 2020-10-15T06:27:16.375Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCNativeSet::GetNewOrUsed, XPCWrappedNativeProto::GetNewOrUsed\n[task 2020-10-15T06:27:16.376Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCWrappedNativeProto::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, XPCConvert::NativeData2JS\n[task 2020-10-15T06:27:16.376Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeInterface::NewInstance, XPCNativeInterface::GetNewOrUsed, XPCConvert::NativeInterface2JSObject, GetService\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at nsSupportsWeakReference::GetWeakReference, NS_GetWeakReference, do_GetWeakReference, nsMaybeWeakPtrArray\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at MakeUnique, XPCWrappedNativeTearOff::AddTearOff, XPCWrappedNative::FindTearOff, XPCWrappedNative::FindTearOff\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at PLDHashTable::Add, PutEntry, nsBaseHashtable, nsBaseHashtable\n[task 2020-10-15T06:27:16.377Z] 06:27:16    ERROR - TEST-UNEXPECTED-FAIL | LeakSanitizer | leak at XPCNativeSet::NewInstance, XPCNativeSet::GetNewOrUsed, XPCWrappedNativeProto::GetNewOrUsed, XPCWrappedNative::GetNewOrUsed\n[task 2020-10-15T06:27:16.378Z] 06:27:16     INFO - runtests.py | Application ran for: 0:01:45.878651", "is_private": false, "author": "ncsoregi@mozilla.com", "id": 15084886, "count": 10, "tags": [], "time": "2020-10-15T06:41:05Z", "creator": "ncsoregi@mozilla.com", "creation_time": "2020-10-15T06:41:05Z"}, {"bug_id": 1633712, "attachment_id": null, "text": "I'm investigating those leaks", "raw_text": "I'm investigating those leaks", "is_private": false, "author": "nchevobbe@mozilla.com", "id": 15086702, "count": 11, "tags": [], "time": "2020-10-16T12:49:48Z", "creator": "nchevobbe@mozilla.com", "creation_time": "2020-10-16T12:49:48Z"}, {"creation_time": "2020-10-26T17:16:47Z", "creator": "pulsebot@bots.tld", "tags": [], "count": 12, "time": "2020-10-26T17:16:47Z", "is_private": false, "raw_text": "Pushed by nchevobbe@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/2ce79a9ed2d5\n[devtools] Move shouldNotifyWindowGlobal and getAllRemoteBrowsingContexts to a util file. r=ochameau.\nhttps://hg.mozilla.org/integration/autoland/rev/895cf08432c4\n[devtools] Create WorkerTargets as soon as possible. r=ochameau,devtools-backward-compat-reviewers.\nhttps://hg.mozilla.org/integration/autoland/rev/12e7595a7a94\n[devtools] Add test cases to browser_target_list_tab_workers and remove the fission fail-if. r=jdescottes.\nhttps://hg.mozilla.org/integration/autoland/rev/7b94fd81e68b\n[devtools] Add a console message resource test for worker targets. r=jdescottes.", "text": "Pushed by nchevobbe@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/2ce79a9ed2d5\n[devtools] Move shouldNotifyWindowGlobal and getAllRemoteBrowsingContexts to a util file. r=ochameau.\nhttps://hg.mozilla.org/integration/autoland/rev/895cf08432c4\n[devtools] Create WorkerTargets as soon as possible. r=ochameau,devtools-backward-compat-reviewers.\nhttps://hg.mozilla.org/integration/autoland/rev/12e7595a7a94\n[devtools] Add test cases to browser_target_list_tab_workers and remove the fission fail-if. r=jdescottes.\nhttps://hg.mozilla.org/integration/autoland/rev/7b94fd81e68b\n[devtools] Add a console message resource test for worker targets. r=jdescottes.", "author": "pulsebot@bots.tld", "id": 15101334, "bug_id": 1633712, "attachment_id": null}, {"creator": "dluca@mozilla.com", "creation_time": "2020-10-27T04:44:09Z", "count": 13, "tags": ["bugherder"], "time": "2020-10-27T04:44:09Z", "text": "https://hg.mozilla.org/mozilla-central/rev/2ce79a9ed2d5\nhttps://hg.mozilla.org/mozilla-central/rev/895cf08432c4\nhttps://hg.mozilla.org/mozilla-central/rev/12e7595a7a94\nhttps://hg.mozilla.org/mozilla-central/rev/7b94fd81e68b", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/2ce79a9ed2d5\nhttps://hg.mozilla.org/mozilla-central/rev/895cf08432c4\nhttps://hg.mozilla.org/mozilla-central/rev/12e7595a7a94\nhttps://hg.mozilla.org/mozilla-central/rev/7b94fd81e68b", "is_private": false, "id": 15102020, "author": "dluca@mozilla.com", "bug_id": 1633712, "attachment_id": null}]}}}