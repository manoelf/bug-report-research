{"bugs": {"638390": {"comments": [{"attachment_id": null, "id": 5317953, "creator": "m-wada@usa.com", "text": "Old draft mail saved in IMAP Drafts folder is not deleted, if \"save by auto-save\" and \"save by Save As Drat\" happens at same time.\n\nThis is a result of intentional tests for many reports of \"draft is not deleted\" which are perhaps contention between \"draft save by auto-save, or  delete of old draft by auto-save\" and \"delete of old draft after mail send\" which can happen when;\n(a) Mail send occurs during auto-save. \n(b) Auto-save is invoke even after mail send is requested.\nThis bug is to provide \"Steps to reproduce problem\" in order that developers can see phenomenon of this kind of \"draft is not deleted\" easily.\nBecause this bug is probably phenomenon of \"contention of Draft folder between auto-save and Save As Draft\", this bug is perhaps different from problem due to above (a) an (b). \n\n[Buil Identifier]\n> Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.14) Gecko/20110221 Thunderbird/3.1.8\n\n[Steps to re-produce problem]\n(1) Setups.\n    - Yahoo! Mail IMAP account (\\Deleted flag is kept normally).\n      If Gmail IMAP, auto-expunging=off of Gmail IMAP is recommended.\n    - offline-use=on or off of Drafts folder was irrelevant.\n    - To observe phenomenon easily, use \"Just mark it as delete\" model.\n    - Enable new mail check to make it worse.\n    - Enable IDLE command use to kake it worse.\n    - Use \"All Folders\" view at folder pane to avoid confusion.\n      Don't use \"Unified Folders\" view to avoid confusion.\n    - Enable next option for ease of observation.\n      [ X ] Show  confirmation dialog when messages are saved\n    - Interval of auto-save : 1 minutes\n(2) Open Drafts folder\n(3) Compose a mail of big attachment(s). (4MB mail is used for test) \n    Change Subject: to subject-1, Save As Draft.\n(4) Change ubject: to subject-2, wait for start of auto-save.\n    When auto-save starts(progress bar is shown),\n    immediately change Subject: to subject-3 and execute Save As Draft.\n(5) After a while, dialog of \"save to Draft fail, Retry? OK/Cancel\" appears.\n    Reply \"OK\"\n    => draft save is retried(but no feed back like progress bar)\n(6) After a while, new mails in Drafts is detected.\n(7) Before next auto-save, go to step (4).\n(8) Repeat step (4) to step (7) multiple times.\n    => Several \"not-deleted draft mails\" are seen in Drafts folder.", "author": "m-wada@usa.com", "creation_time": "2011-03-03T09:31:17Z", "time": "2011-03-03T09:31:17Z", "is_private": false, "tags": [], "raw_text": "Old draft mail saved in IMAP Drafts folder is not deleted, if \"save by auto-save\" and \"save by Save As Drat\" happens at same time.\n\nThis is a result of intentional tests for many reports of \"draft is not deleted\" which are perhaps contention between \"draft save by auto-save, or  delete of old draft by auto-save\" and \"delete of old draft after mail send\" which can happen when;\n(a) Mail send occurs during auto-save. \n(b) Auto-save is invoke even after mail send is requested.\nThis bug is to provide \"Steps to reproduce problem\" in order that developers can see phenomenon of this kind of \"draft is not deleted\" easily.\nBecause this bug is probably phenomenon of \"contention of Draft folder between auto-save and Save As Draft\", this bug is perhaps different from problem due to above (a) an (b). \n\n[Buil Identifier]\n> Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.14) Gecko/20110221 Thunderbird/3.1.8\n\n[Steps to re-produce problem]\n(1) Setups.\n    - Yahoo! Mail IMAP account (\\Deleted flag is kept normally).\n      If Gmail IMAP, auto-expunging=off of Gmail IMAP is recommended.\n    - offline-use=on or off of Drafts folder was irrelevant.\n    - To observe phenomenon easily, use \"Just mark it as delete\" model.\n    - Enable new mail check to make it worse.\n    - Enable IDLE command use to kake it worse.\n    - Use \"All Folders\" view at folder pane to avoid confusion.\n      Don't use \"Unified Folders\" view to avoid confusion.\n    - Enable next option for ease of observation.\n      [ X ] Show  confirmation dialog when messages are saved\n    - Interval of auto-save : 1 minutes\n(2) Open Drafts folder\n(3) Compose a mail of big attachment(s). (4MB mail is used for test) \n    Change Subject: to subject-1, Save As Draft.\n(4) Change ubject: to subject-2, wait for start of auto-save.\n    When auto-save starts(progress bar is shown),\n    immediately change Subject: to subject-3 and execute Save As Draft.\n(5) After a while, dialog of \"save to Draft fail, Retry? OK/Cancel\" appears.\n    Reply \"OK\"\n    => draft save is retried(but no feed back like progress bar)\n(6) After a while, new mails in Drafts is detected.\n(7) Before next auto-save, go to step (4).\n(8) Repeat step (4) to step (7) multiple times.\n    => Several \"not-deleted draft mails\" are seen in Drafts folder.", "bug_id": 638390, "count": 0}, {"tags": [], "is_private": false, "raw_text": "For any auto-save related problem, I think next is a good and effective solution.\n\nIf auto-save is already started, don't invoke \"Save As Draft\", \"Mail send\".\nIf \"Mail send\" is already requested, don't invoke auto-save.", "text": "For any auto-save related problem, I think next is a good and effective solution.\n\nIf auto-save is already started, don't invoke \"Save As Draft\", \"Mail send\".\nIf \"Mail send\" is already requested, don't invoke auto-save.", "attachment_id": null, "id": 5317998, "creation_time": "2011-03-03T10:01:35Z", "time": "2011-03-03T10:01:35Z", "count": 1, "bug_id": 638390, "author": "m-wada@usa.com", "creator": "m-wada@usa.com"}, {"tags": [], "is_private": false, "raw_text": "nice wada!\n\nI bet this will solve many problems. Note: many users mention large message or many attachments (which increase autosave and send time) when they report this problem.\n\nAdditionally, problem may be more severe if multiple draft messages are open.\n(I may have mentioned this in another bug.)", "text": "nice wada!\n\nI bet this will solve many problems. Note: many users mention large message or many attachments (which increase autosave and send time) when they report this problem.\n\nAdditionally, problem may be more severe if multiple draft messages are open.\n(I may have mentioned this in another bug.)", "attachment_id": null, "id": 5326234, "creation_time": "2011-03-06T23:40:37Z", "time": "2011-03-06T23:40:37Z", "bug_id": 638390, "count": 2, "creator": "vseerror@lehigh.edu", "author": "vseerror@lehigh.edu"}, {"creation_time": "2011-03-07T00:16:40Z", "text": "(In reply to comment #2)\n> Additionally, problem may be more severe if multiple draft messages are open.\n\nI think so too.\nMultiple \"draft save\" processes to same Drafts folder, or multiple accesses to an IMAP Drafts folder, should be serialized, in order to avoid Drafts folder contention and/or interfering each other. I'll perhaps lower probability of interlocking.\n\nFor auto-save relevant issues, change like next may be a solution.\n  Auto-save always saves in local mail folder.\nBecause main purpose of auto-save is protection from draft data loss due to crash, there is no need to save huge draft mail data to IMAP folder. IIRC, this kind of enhancement is already requested.", "creator": "m-wada@usa.com", "id": 5326268, "attachment_id": null, "author": "m-wada@usa.com", "bug_id": 638390, "raw_text": "(In reply to comment #2)\n> Additionally, problem may be more severe if multiple draft messages are open.\n\nI think so too.\nMultiple \"draft save\" processes to same Drafts folder, or multiple accesses to an IMAP Drafts folder, should be serialized, in order to avoid Drafts folder contention and/or interfering each other. I'll perhaps lower probability of interlocking.\n\nFor auto-save relevant issues, change like next may be a solution.\n  Auto-save always saves in local mail folder.\nBecause main purpose of auto-save is protection from draft data loss due to crash, there is no need to save huge draft mail data to IMAP folder. IIRC, this kind of enhancement is already requested.", "count": 3, "time": "2011-03-07T00:16:40Z", "tags": [], "is_private": false}, {"text": "FYI.\nFollowing is copy of bug 476074 comment #20 by David.\n> deletes are done in two steps - we do the initial delete as an offline operations, \n> and delete the headers from the UI. Then, half a second later, we\n> playback the offline operation, which sends the command to the server.\n> It sounds like the second phase is blocking the UI, for some reason.\nThis may be relevant to \"freeze after mail send\" seen in other bugs and \"UI freeze\" which could be observed during test for this bug.", "creator": "m-wada@usa.com", "attachment_id": null, "id": 5326342, "author": "m-wada@usa.com", "creation_time": "2011-03-07T02:19:10Z", "time": "2011-03-07T02:19:10Z", "tags": [], "is_private": false, "bug_id": 638390, "raw_text": "FYI.\nFollowing is copy of bug 476074 comment #20 by David.\n> deletes are done in two steps - we do the initial delete as an offline operations, \n> and delete the headers from the UI. Then, half a second later, we\n> playback the offline operation, which sends the command to the server.\n> It sounds like the second phase is blocking the UI, for some reason.\nThis may be relevant to \"freeze after mail send\" seen in other bugs and \"UI freeze\" which could be observed during test for this bug.", "count": 4}, {"author": "m-wada@usa.com", "text": "Auto-Save is scheduled by following code.\n> http://mxr.mozilla.org/comm-central/source/mail/components/compose/content/MsgComposeCommands.js#4504\n> function AutoSave()\n> {\n>   if (gMsgCompose.editor && (gContentChanged || gMsgCompose.bodyModified) &&\n>       !gSendOperationInProgress && !gSaveOperationInProgress)\n>   {\n>     GenericSendMessage(nsIMsgCompDeliverMode.AutoSaveAsDraft);\n>     gAutoSaveKickedIn = true;\n>   }\n>   gAutoSaveTimeout = setTimeout(AutoSave, gAutoSaveInterval);\n> }\n\ngSendOperationInProgress and gSaveOperationInProgress is used at :\nhttp://mxr.mozilla.org/comm-central/search?string=gSaveOperationInProgress\nhttp://mxr.mozilla.org/comm-central/search?string=gSendOperationInProgress\n\ngSendOperationInProgress=true or gSaveOperationInProgress=true is set here only(in GenericSendMessage).\n> http://mxr.mozilla.org/comm-central/source/mail/components/compose/content/MsgComposeCommands.js#2712\n>     var progress = Components.classes[\"@mozilla.org/messenger/progress;1\"]\n>                              .createInstance(Components.interfaces.nsIMsgProgress);\n>     if (progress)\n>     {\n>       progress.registerListener(progressListener);\n>       if (msgType == nsIMsgCompDeliverMode.Save ||\n>           msgType == nsIMsgCompDeliverMode.SaveAsDraft ||\n>           msgType == nsIMsgCompDeliverMode.AutoSaveAsDraft ||\n>           msgType == nsIMsgCompDeliverMode.SaveAsTemplate)\n>         gSaveOperationInProgress = true;\n>       else\n>         gSendOperationInProgress = true;\n>     }\n\nAfter GenericSendMessage is started, g????OperationInProgress=true is set when progress meter for Send, Manual-Save, Auto-Save, etc. is initiated...\nHow can \"Auto-Save after Send is requested and Send operation is started\" be avoided by this logic/mechanism?\nTime lag between \"GenericSendMessage call for Send or Save\" and \"gSendOperationInProgress=true or gSaveOperationInProgress=true by GenericSendMessage logic\" surely exists.\nSo, auto-Save and Send surely can be executed at same time.\n\ngSendOperationInProgress and gSaveOperationInProgress is designed for Send request and Save request via UI which locks UI.\nAt least locking like next is needed.\n    function AutoSave() { \n        if (     !gAutoSaveProhibited &&\n                 gMsgCompose.editor && (gContentChanged || gMsgCompose.bodyModified) &&\n                 !gSendOperationInProgress && !gSaveOperationInProgress )\n                 gAutoSaveProhibited=true, and Call GenericSendMessage() for Auto-Save;\n    function GenericSendMessage() .\n        gAutoSaveProhibited=true, as first statement of  GenericSendMessage.\n    At appropriate place, gAutoSaveProhibited=false after normal end Save, \n    or gAutoSaveProhibited=false when Cancel etc. occurred during Send, Save etc.\n\nIIRC, \"stop invoking Auto-Save when Send is started\" was tried by \"gMsgCompose.bodyModified=false or gContentChanged=false upon send request\", but it maybe was not \"set true to both\", and, I think \"Time Lag\" exists too.\nI don't know about \"Send is executed while Auto-Save is in progress\" case. \n    draftID=#1,\n    Auto-Save is invoked,         While Auto-Save is running, Send is requested.\n    and saves as #2, \n    delete draftID=#1, \n              <= Send completes at here -> try to delete draftID=1, but not found. save to Sent, close window -> #2 is not deleted.. \n    set draftID=#2\n              <= Send comletes at here -> delete draftID=2. save to Sent, close window ->#2 is normally deleted.\nSend usually takes longer than Save, so #2 is usually deleted, but if IMAP Drafts, Save to Drafts may be slower than SMTP send.", "creator": "m-wada@usa.com", "attachment_id": null, "id": 9662595, "creation_time": "2014-12-05T04:05:16Z", "tags": [], "is_private": false, "time": "2014-12-05T04:05:16Z", "count": 5, "bug_id": 638390, "raw_text": "Auto-Save is scheduled by following code.\n> http://mxr.mozilla.org/comm-central/source/mail/components/compose/content/MsgComposeCommands.js#4504\n> function AutoSave()\n> {\n>   if (gMsgCompose.editor && (gContentChanged || gMsgCompose.bodyModified) &&\n>       !gSendOperationInProgress && !gSaveOperationInProgress)\n>   {\n>     GenericSendMessage(nsIMsgCompDeliverMode.AutoSaveAsDraft);\n>     gAutoSaveKickedIn = true;\n>   }\n>   gAutoSaveTimeout = setTimeout(AutoSave, gAutoSaveInterval);\n> }\n\ngSendOperationInProgress and gSaveOperationInProgress is used at :\nhttp://mxr.mozilla.org/comm-central/search?string=gSaveOperationInProgress\nhttp://mxr.mozilla.org/comm-central/search?string=gSendOperationInProgress\n\ngSendOperationInProgress=true or gSaveOperationInProgress=true is set here only(in GenericSendMessage).\n> http://mxr.mozilla.org/comm-central/source/mail/components/compose/content/MsgComposeCommands.js#2712\n>     var progress = Components.classes[\"@mozilla.org/messenger/progress;1\"]\n>                              .createInstance(Components.interfaces.nsIMsgProgress);\n>     if (progress)\n>     {\n>       progress.registerListener(progressListener);\n>       if (msgType == nsIMsgCompDeliverMode.Save ||\n>           msgType == nsIMsgCompDeliverMode.SaveAsDraft ||\n>           msgType == nsIMsgCompDeliverMode.AutoSaveAsDraft ||\n>           msgType == nsIMsgCompDeliverMode.SaveAsTemplate)\n>         gSaveOperationInProgress = true;\n>       else\n>         gSendOperationInProgress = true;\n>     }\n\nAfter GenericSendMessage is started, g????OperationInProgress=true is set when progress meter for Send, Manual-Save, Auto-Save, etc. is initiated...\nHow can \"Auto-Save after Send is requested and Send operation is started\" be avoided by this logic/mechanism?\nTime lag between \"GenericSendMessage call for Send or Save\" and \"gSendOperationInProgress=true or gSaveOperationInProgress=true by GenericSendMessage logic\" surely exists.\nSo, auto-Save and Send surely can be executed at same time.\n\ngSendOperationInProgress and gSaveOperationInProgress is designed for Send request and Save request via UI which locks UI.\nAt least locking like next is needed.\n    function AutoSave() { \n        if (     !gAutoSaveProhibited &&\n                 gMsgCompose.editor && (gContentChanged || gMsgCompose.bodyModified) &&\n                 !gSendOperationInProgress && !gSaveOperationInProgress )\n                 gAutoSaveProhibited=true, and Call GenericSendMessage() for Auto-Save;\n    function GenericSendMessage() .\n        gAutoSaveProhibited=true, as first statement of  GenericSendMessage.\n    At appropriate place, gAutoSaveProhibited=false after normal end Save, \n    or gAutoSaveProhibited=false when Cancel etc. occurred during Send, Save etc.\n\nIIRC, \"stop invoking Auto-Save when Send is started\" was tried by \"gMsgCompose.bodyModified=false or gContentChanged=false upon send request\", but it maybe was not \"set true to both\", and, I think \"Time Lag\" exists too.\nI don't know about \"Send is executed while Auto-Save is in progress\" case. \n    draftID=#1,\n    Auto-Save is invoked,         While Auto-Save is running, Send is requested.\n    and saves as #2, \n    delete draftID=#1, \n              <= Send completes at here -> try to delete draftID=1, but not found. save to Sent, close window -> #2 is not deleted.. \n    set draftID=#2\n              <= Send comletes at here -> delete draftID=2. save to Sent, close window ->#2 is normally deleted.\nSend usually takes longer than Save, so #2 is usually deleted, but if IMAP Drafts, Save to Drafts may be slower than SMTP send."}, {"author": "m-wada@usa.com", "creator": "m-wada@usa.com", "text": "When Send/Save(manual) is normally executed, gAutoSaveProhibited can be reset at here.\nIf Send, reset shouldn't be executed at here. It should be reset upon initiation of Auto-Save by next mail composition start.\n> http://mxr.mozilla.org/comm-central/source/mail/components/compose/content/MsgComposeCommands.js#420\n> 420       if (aStateFlags & Components.interfaces.nsIWebProgressListener.STATE_STOP)\n> 421       {\n> 422         gSendOperationInProgress = false;\n> 423         gSaveOperationInProgress = false;\n>        +     If Send-Type==Not-Send(==Save/AutoSave) gAutoSaveProhibited=false;\nWhen Send/Save(manual) is canceled, where is appropriate place to reset gAutoSaveProhibited?", "id": 9665949, "attachment_id": null, "creation_time": "2014-12-06T10:25:45Z", "tags": [], "is_private": false, "time": "2014-12-06T10:25:45Z", "count": 6, "bug_id": 638390, "raw_text": "When Send/Save(manual) is normally executed, gAutoSaveProhibited can be reset at here.\nIf Send, reset shouldn't be executed at here. It should be reset upon initiation of Auto-Save by next mail composition start.\n> http://mxr.mozilla.org/comm-central/source/mail/components/compose/content/MsgComposeCommands.js#420\n> 420       if (aStateFlags & Components.interfaces.nsIWebProgressListener.STATE_STOP)\n> 421       {\n> 422         gSendOperationInProgress = false;\n> 423         gSaveOperationInProgress = false;\n>        +     If Send-Type==Not-Send(==Save/AutoSave) gAutoSaveProhibited=false;\nWhen Send/Save(manual) is canceled, where is appropriate place to reset gAutoSaveProhibited?"}, {"time": "2014-12-06T10:49:37Z", "is_private": false, "tags": [], "raw_text": "> When Send/Save(manual) is canceled, where is appropriate place to reset gAutoSaveProhibited?\n\nAll send/save request looks processed by GenericSendMessage().\nSo, when GenericSendMessage() returns without setting gSaveOperationInProgress = true or gSendOperationInProgress = true at any place in GenericSendMessage(), gAutoSaveProhibited=false should be set...", "bug_id": 638390, "count": 7, "attachment_id": null, "id": 9665962, "creator": "m-wada@usa.com", "text": "> When Send/Save(manual) is canceled, where is appropriate place to reset gAutoSaveProhibited?\n\nAll send/save request looks processed by GenericSendMessage().\nSo, when GenericSendMessage() returns without setting gSaveOperationInProgress = true or gSendOperationInProgress = true at any place in GenericSendMessage(), gAutoSaveProhibited=false should be set...", "author": "m-wada@usa.com", "creation_time": "2014-12-06T10:49:37Z"}, {"author": "m-wada@usa.com", "id": 9665964, "attachment_id": null, "text": "If so, wrapper of GenericSendMessage() may be needed.\n   function GenericSendMessage(...) {\n      gAutoSaveProhibited=true;\n      GenericSendMessage_Actual(...); // Copy of current GenericSendMessage()\n      if( gSaveOperationInProgress != true && gSendOperationInProgress !=true ) gAutoSaveProhibited=false;\n   }", "creator": "m-wada@usa.com", "creation_time": "2014-12-06T10:58:06Z", "is_private": false, "tags": [], "time": "2014-12-06T10:58:06Z", "count": 8, "raw_text": "If so, wrapper of GenericSendMessage() may be needed.\n   function GenericSendMessage(...) {\n      gAutoSaveProhibited=true;\n      GenericSendMessage_Actual(...); // Copy of current GenericSendMessage()\n      if( gSaveOperationInProgress != true && gSendOperationInProgress !=true ) gAutoSaveProhibited=false;\n   }", "bug_id": 638390}, {"raw_text": "", "tags": [], "is_private": false, "creation_time": "2014-12-08T01:55:37Z", "text": "Created attachment 8532976\nWhat is needed to serialize AutoSave and Send/Save from UI - v1", "id": 9667130, "attachment_id": 8532976, "count": 9, "bug_id": 638390, "time": "2014-12-08T01:55:37Z", "author": "m-wada@usa.com", "creator": "m-wada@usa.com"}]}}, "comments": {}}