{"comments": {}, "bugs": {"637607": {"comments": [{"is_private": false, "attachment_id": null, "creator": "dholbert@mozilla.com", "tags": [], "raw_text": "Filing bug on this build warning in g++ 4.5:\n=========\nnsHTMLFormElement.cpp\nIn file included from ../../../../dist/include/nsDataHashtable.h:42:0,\n                 from ../../../../dist/include/nsContentUtils.h:62,\n                 from ../../../../../mozilla/content/html/content/src/../../../b\nase/src/nsGenericElement.h:58,\n                 from ../../../../../mozilla/content/html/content/src/../../../b\nase/src/nsStyledElement.h:50,\n                 from ../../../../../mozilla/content/html/content/src/../../../b\nase/src/nsMappedAttributeElement.h:48,\n                 from ../../../../../mozilla/content/html/content/src/nsGenericH\nTMLElement.h:41,\n                 from ../../../../../mozilla/content/html/content/src/nsHTMLForm\nElement.h:45,\n                 from ../../../../../mozilla/content/html/content/src/nsHTMLForm\nElement.cpp:37:\n../../../../dist/include/nsBaseHashtable.h: In member function \u2018UserDataType nsBaseHashtable<KeyClass, DataType, UserDataType>::Get(nsBaseHashtable<KeyClass, DataType, UserDataType>::KeyType) const [with KeyClass = nsStringCaseInsensitiveHashKey, DataType = unsigned int, UserDataType = unsigned int, nsBaseHashtable<KeyClass, DataType, UserDataType>::KeyType = const nsAString_internal&]\u2019:\n../../../../../mozilla/content/html/content/src/nsHTMLFormElement.cpp:2135:72:   instantiated from here\n../../../../dist/include/nsBaseHashtable.h:150:14: warning: converting to non-pointer type \u2018unsigned int\u2019 from NULL\n=========\n\nThe code in question is:\n\n> 146   UserDataType Get(KeyType aKey) const\n> 147   {\n> 148     EntryType* ent = this->GetEntry(aKey);\n> 149     if (!ent)\n> 150       return NULL;\n\nAnd the documentation higher up in the file says that it's perfectly fine for UserDataType to be a non-pointer type like an integer:\n> 79  * @param UserDataType the user sees, for example PRUint32 or nsISupports*\n\nSource file: http://mxr.mozilla.org/mozilla-central/source/xpcom/glue/nsBaseHashtable.h\n\nI think we should be able to just add an explicit \"(UserDataType)\" cast to the NULL value at nsBaseHashtable.h:150.", "creation_time": "2011-03-01T10:30:22Z", "bug_id": 637607, "id": 5311123, "author": "dholbert@mozilla.com", "time": "2011-03-01T10:30:22Z", "count": 0, "text": "Filing bug on this build warning in g++ 4.5:\n=========\nnsHTMLFormElement.cpp\nIn file included from ../../../../dist/include/nsDataHashtable.h:42:0,\n                 from ../../../../dist/include/nsContentUtils.h:62,\n                 from ../../../../../mozilla/content/html/content/src/../../../b\nase/src/nsGenericElement.h:58,\n                 from ../../../../../mozilla/content/html/content/src/../../../b\nase/src/nsStyledElement.h:50,\n                 from ../../../../../mozilla/content/html/content/src/../../../b\nase/src/nsMappedAttributeElement.h:48,\n                 from ../../../../../mozilla/content/html/content/src/nsGenericH\nTMLElement.h:41,\n                 from ../../../../../mozilla/content/html/content/src/nsHTMLForm\nElement.h:45,\n                 from ../../../../../mozilla/content/html/content/src/nsHTMLForm\nElement.cpp:37:\n../../../../dist/include/nsBaseHashtable.h: In member function \u2018UserDataType nsBaseHashtable<KeyClass, DataType, UserDataType>::Get(nsBaseHashtable<KeyClass, DataType, UserDataType>::KeyType) const [with KeyClass = nsStringCaseInsensitiveHashKey, DataType = unsigned int, UserDataType = unsigned int, nsBaseHashtable<KeyClass, DataType, UserDataType>::KeyType = const nsAString_internal&]\u2019:\n../../../../../mozilla/content/html/content/src/nsHTMLFormElement.cpp:2135:72:   instantiated from here\n../../../../dist/include/nsBaseHashtable.h:150:14: warning: converting to non-pointer type \u2018unsigned int\u2019 from NULL\n=========\n\nThe code in question is:\n\n> 146   UserDataType Get(KeyType aKey) const\n> 147   {\n> 148     EntryType* ent = this->GetEntry(aKey);\n> 149     if (!ent)\n> 150       return NULL;\n\nAnd the documentation higher up in the file says that it's perfectly fine for UserDataType to be a non-pointer type like an integer:\n> 79  * @param UserDataType the user sees, for example PRUint32 or nsISupports*\n\nSource file: http://mxr.mozilla.org/mozilla-central/source/xpcom/glue/nsBaseHashtable.h\n\nI think we should be able to just add an explicit \"(UserDataType)\" cast to the NULL value at nsBaseHashtable.h:150."}, {"id": 5311129, "time": "2011-03-01T10:33:54Z", "is_private": false, "tags": [], "raw_text": "Just to be clear -- in this particular case, UserDataType is indeed an integer -- the hash table in question is...\n> 422   nsDataHashtable<nsStringCaseInsensitiveHashKey,PRUint32> mRequiredRadioButtonCounts;\nhttp://mxr.mozilla.org/mozilla-central/source/content/html/content/src/nsHTMLFormElement.h#422\n\n...and its \"Get\" method triggers this warning in the code below:\n> 2134     mRequiredRadioButtonCounts.Put(aName,\n> 2135                                    mRequiredRadioButtonCounts.Get(aName)+1);\nhttp://mxr.mozilla.org/mozilla-central/source/content/html/content/src/nsHTMLFormElement.cpp#2134", "bug_id": 637607, "creation_time": "2011-03-01T10:33:54Z", "author": "dholbert@mozilla.com", "count": 1, "text": "Just to be clear -- in this particular case, UserDataType is indeed an integer -- the hash table in question is...\n> 422   nsDataHashtable<nsStringCaseInsensitiveHashKey,PRUint32> mRequiredRadioButtonCounts;\nhttp://mxr.mozilla.org/mozilla-central/source/content/html/content/src/nsHTMLFormElement.h#422\n\n...and its \"Get\" method triggers this warning in the code below:\n> 2134     mRequiredRadioButtonCounts.Put(aName,\n> 2135                                    mRequiredRadioButtonCounts.Get(aName)+1);\nhttp://mxr.mozilla.org/mozilla-central/source/content/html/content/src/nsHTMLFormElement.cpp#2134", "attachment_id": null, "creator": "dholbert@mozilla.com"}, {"creator": "dholbert@mozilla.com", "attachment_id": null, "count": 2, "text": "(er s/an integer/a PRUint32/ -- the point is, UserDataType is a non-pointer in this case)", "author": "dholbert@mozilla.com", "tags": [], "creation_time": "2011-03-01T10:35:04Z", "bug_id": 637607, "raw_text": "(er s/an integer/a PRUint32/ -- the point is, UserDataType is a non-pointer in this case)", "is_private": false, "id": 5311131, "time": "2011-03-01T10:35:04Z"}, {"count": 3, "text": "This form of \"Get\" was only ever intended for use with pointers (where values would typically never be null, and so null is a safe sentinel value). I really don't think I want to cast over this warning.\n\nIn this case, I think we should have an alternate form of Get which has an explicit default value, such as:\n\nUserDataType Get(KeyType aKey, UserDataType default) const;", "author": "benjamin@smedbergs.us", "creator": "benjamin@smedbergs.us", "attachment_id": null, "id": 5311591, "time": "2011-03-01T15:45:24Z", "tags": [], "creation_time": "2011-03-01T15:45:24Z", "bug_id": 637607, "raw_text": "This form of \"Get\" was only ever intended for use with pointers (where values would typically never be null, and so null is a safe sentinel value). I really don't think I want to cast over this warning.\n\nIn this case, I think we should have an alternate form of Get which has an explicit default value, such as:\n\nUserDataType Get(KeyType aKey, UserDataType default) const;", "is_private": false}]}}}