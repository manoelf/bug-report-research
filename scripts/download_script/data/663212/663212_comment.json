{"bugs": {"663212": {"comments": [{"id": 5523235, "raw_text": "User-Agent:       Mozilla/5.0 (X11; Linux x86_64; rv:2.0.2pre) Gecko/20110607 Firefox/4.0.2pre\nBuild Identifier: Mozilla/5.0 (X11; Linux x86_64; rv:2.0.2pre) Gecko/20110607 Firefox/4.0.2pre\n\nI tracked down what I think may be a bug in gfx/qcms/iccread.c where the ICC profile sanity checker qcms_profile_is_bogus() decides that a valid profile is invalid. The check stumbles on the part where tolerances are checked.\n\nAs a result the profile is discarded and a generic built in sRGB profile is used by Firefox. The same Argyll genrated ICC profile works fine with other color managed applications, both on the Windows 7 and OSX platforms.\n\nThe profile in question was generated using Argyll 1.3.3.\nThe qcms_profile_is_bogus() function seems to have come about due to bug report 450923, but may not be doing the correct calculations when trying to verify the ICC profile.\n\nChris Murphy gave some initial advice for the bogus check function, and pointed to a possible reason for this issue:\n\n\"I'm going to guess that the bogus profile check is only checking the XYZs of the RGB tags, and not computing actual XYZ of the RGB's based on both the matrix as well as the TRC.\"\n\nThe author of Argyll, Graeme Gill, emailed the following information:\n\n\"As far as I can tell, the Argyll profile is perfectly valid according\nto the ICC V2 specification. The XYZ values and the curves combine\nto form a model of the device behavior, and for device white in (1,1,1),\nthe output is the PCS D50 white within tight tolerances (< 0.02 delta E).\n\nThere is no constraint that the curves have to map 0 to 0 or 1 to 1.\n\nThe ICC spec. is somewhat archaic and misleading in referring to the matrix\ncomponents as \"colorant tristimulus values\". This is evident in particular for\nthe case of the input matrix profiles, since input devices simply don't\nhave colorants. Way back when it was probably not so practical\nto optimize all of the model parameters together, and the assumption\nthat it would have to be built a separate linearization and colorant\nmeasurements crept into the terminology and tag arrangement (matrix models\nwere the first and only ones in ColorSync 1.0), but the display matrix profile\ndescription is clear that the colorant and TRC tags are there to form\nthe mathematical shaper + matrix model.\n\nA profile which characterized the phosphor values and the curve values\nindependently would give a worse result in general than one that optimizes\nthe whole model for the best fit. But doing so means that the xxxColorantTag\nvalues do not accurately represent the colorant chromaticities.\n\nThe bottom line is that the correct thing to do to check what the\ndevice model maps white to, is to feed device white into the whole\ndevice model, not just part of it! \"\n\n\"It should simply be changes [changed] to lookup the value through the whole model.\"\n----\n\nI do not know how difficult it would be to rewrite the \"bogus checker\" to work correctly, but if it is a substantial task I would suggest that it would be better not to discard any profiles based on tolerances, and instead make it much easier for users to turn on and off color management (see Picasa's easily accessible \"Color management\" menu choice), for cases similar to the one that led to the introduction of the \"bogus checker\".\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Install the specific ICC/ICM that FF doesn't like.\n2.Specify that FF use it as its color profile.\n3.Verify that FF ignores it (easiest done in the debugger)\n\nActual Results:  \nColor management doesn't work\n\nExpected Results:  \nColor management should work\n\nI will make accessible the Argyll profile that triggers this bug.", "attachment_id": null, "text": "User-Agent:       Mozilla/5.0 (X11; Linux x86_64; rv:2.0.2pre) Gecko/20110607 Firefox/4.0.2pre\nBuild Identifier: Mozilla/5.0 (X11; Linux x86_64; rv:2.0.2pre) Gecko/20110607 Firefox/4.0.2pre\n\nI tracked down what I think may be a bug in gfx/qcms/iccread.c where the ICC profile sanity checker qcms_profile_is_bogus() decides that a valid profile is invalid. The check stumbles on the part where tolerances are checked.\n\nAs a result the profile is discarded and a generic built in sRGB profile is used by Firefox. The same Argyll genrated ICC profile works fine with other color managed applications, both on the Windows 7 and OSX platforms.\n\nThe profile in question was generated using Argyll 1.3.3.\nThe qcms_profile_is_bogus() function seems to have come about due to bug report 450923, but may not be doing the correct calculations when trying to verify the ICC profile.\n\nChris Murphy gave some initial advice for the bogus check function, and pointed to a possible reason for this issue:\n\n\"I'm going to guess that the bogus profile check is only checking the XYZs of the RGB tags, and not computing actual XYZ of the RGB's based on both the matrix as well as the TRC.\"\n\nThe author of Argyll, Graeme Gill, emailed the following information:\n\n\"As far as I can tell, the Argyll profile is perfectly valid according\nto the ICC V2 specification. The XYZ values and the curves combine\nto form a model of the device behavior, and for device white in (1,1,1),\nthe output is the PCS D50 white within tight tolerances (< 0.02 delta E).\n\nThere is no constraint that the curves have to map 0 to 0 or 1 to 1.\n\nThe ICC spec. is somewhat archaic and misleading in referring to the matrix\ncomponents as \"colorant tristimulus values\". This is evident in particular for\nthe case of the input matrix profiles, since input devices simply don't\nhave colorants. Way back when it was probably not so practical\nto optimize all of the model parameters together, and the assumption\nthat it would have to be built a separate linearization and colorant\nmeasurements crept into the terminology and tag arrangement (matrix models\nwere the first and only ones in ColorSync 1.0), but the display matrix profile\ndescription is clear that the colorant and TRC tags are there to form\nthe mathematical shaper + matrix model.\n\nA profile which characterized the phosphor values and the curve values\nindependently would give a worse result in general than one that optimizes\nthe whole model for the best fit. But doing so means that the xxxColorantTag\nvalues do not accurately represent the colorant chromaticities.\n\nThe bottom line is that the correct thing to do to check what the\ndevice model maps white to, is to feed device white into the whole\ndevice model, not just part of it! \"\n\n\"It should simply be changes [changed] to lookup the value through the whole model.\"\n----\n\nI do not know how difficult it would be to rewrite the \"bogus checker\" to work correctly, but if it is a substantial task I would suggest that it would be better not to discard any profiles based on tolerances, and instead make it much easier for users to turn on and off color management (see Picasa's easily accessible \"Color management\" menu choice), for cases similar to the one that led to the introduction of the \"bogus checker\".\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Install the specific ICC/ICM that FF doesn't like.\n2.Specify that FF use it as its color profile.\n3.Verify that FF ignores it (easiest done in the debugger)\n\nActual Results:  \nColor management doesn't work\n\nExpected Results:  \nColor management should work\n\nI will make accessible the Argyll profile that triggers this bug.", "tags": [], "time": "2011-06-09T20:34:59Z", "bug_id": 663212, "creation_time": "2011-06-09T20:34:59Z", "author": "patrik@floding.com", "count": 0, "is_private": false, "creator": "patrik@floding.com"}, {"attachment_id": 538337, "raw_text": "", "id": 5523242, "creator": "patrik@floding.com", "is_private": false, "count": 1, "author": "patrik@floding.com", "creation_time": "2011-06-09T20:37:05Z", "time": "2011-06-09T20:37:05Z", "bug_id": 663212, "tags": [], "text": "Created attachment 538337\nAn example, presumably correct, profile that Firefox rejects"}, {"id": 5523280, "attachment_id": null, "raw_text": "Basically all that the bogus profile check should do is pass RGB 1.0, 1.0, 1.0 through the CMS with this display profile, to L*a*b*. The result should be 100, 0, 0. There is a tolerance built in, but I'm not sure how it's computed. The tolerance can be done with \u2206Eab with the Lab(1) values being 100,0,0 and the Lab(2) values being the result from passing 1,1,1 through the display profile (asking qcms or lcms to convert those RGB values to L*a*b*) and then applying the difference equation. If the number is 3 or larger, fail the profile. If the number is less than 3, pass it. This is a pretty wide yet reasonable tolerance, but another tolerance could be suggested.\n\nI *think* that what must be going on is the current check is looking directly at the display profile rXYZ, gXYZ, bXYZ tags themselves. Rather than the actual XYZ of the primaries (which includes the TRC).", "creation_time": "2011-06-09T20:47:32Z", "author": "bugzilla@colorremedies.com", "text": "Basically all that the bogus profile check should do is pass RGB 1.0, 1.0, 1.0 through the CMS with this display profile, to L*a*b*. The result should be 100, 0, 0. There is a tolerance built in, but I'm not sure how it's computed. The tolerance can be done with \u2206Eab with the Lab(1) values being 100,0,0 and the Lab(2) values being the result from passing 1,1,1 through the display profile (asking qcms or lcms to convert those RGB values to L*a*b*) and then applying the difference equation. If the number is 3 or larger, fail the profile. If the number is less than 3, pass it. This is a pretty wide yet reasonable tolerance, but another tolerance could be suggested.\n\nI *think* that what must be going on is the current check is looking directly at the display profile rXYZ, gXYZ, bXYZ tags themselves. Rather than the actual XYZ of the primaries (which includes the TRC).", "time": "2011-06-09T20:47:32Z", "bug_id": 663212, "tags": [], "is_private": false, "creator": "bugzilla@colorremedies.com", "count": 2}, {"author": "b56girard@gmail.com", "creation_time": "2011-06-09T22:00:55Z", "bug_id": 663212, "time": "2011-06-09T22:00:55Z", "tags": [], "text": "Thanks for the detailed report. The assessment is accurate, just adding the qcms specific values.\n\nThe failure occurs here:\nhttp://mxr.mozilla.org/mozilla-central/source/gfx/qcms/iccread.c#267\n\nsum_X = 0.988037109\nrTRC maps 1 to ~0.98\nGiving a value close to 0.96 (sum_X*rTRC), within the tolerance anyways.", "creator": "b56girard@gmail.com", "is_private": false, "count": 3, "id": 5523538, "attachment_id": null, "raw_text": "Thanks for the detailed report. The assessment is accurate, just adding the qcms specific values.\n\nThe failure occurs here:\nhttp://mxr.mozilla.org/mozilla-central/source/gfx/qcms/iccread.c#267\n\nsum_X = 0.988037109\nrTRC maps 1 to ~0.98\nGiving a value close to 0.96 (sum_X*rTRC), within the tolerance anyways."}, {"attachment_id": null, "raw_text": "Well I think the way to handle this is to not test individual parts of the profile, but rather than net effect of the transform that's defined by the profile. The CMS's job is to do conversions. So just have it convert Display RGB 1, 1, 1 into L*a*b* and compare that with 100, 0, 0 using \u2206E.\n\nWhile it doesn't seem like a good idea to have a TRC that starts at 0.5, it does not appear to be invalid. Therefore the only real way to ascertain if the profile is actual bogus or not is to take its defined transform as a whole, not separate pieces.", "id": 5523548, "creator": "bugzilla@colorremedies.com", "is_private": false, "count": 4, "author": "bugzilla@colorremedies.com", "creation_time": "2011-06-09T22:03:24Z", "time": "2011-06-09T22:03:24Z", "bug_id": 663212, "tags": [], "text": "Well I think the way to handle this is to not test individual parts of the profile, but rather than net effect of the transform that's defined by the profile. The CMS's job is to do conversions. So just have it convert Display RGB 1, 1, 1 into L*a*b* and compare that with 100, 0, 0 using \u2206E.\n\nWhile it doesn't seem like a good idea to have a TRC that starts at 0.5, it does not appear to be invalid. Therefore the only real way to ascertain if the profile is actual bogus or not is to take its defined transform as a whole, not separate pieces."}, {"count": 5, "bug_id": 663212, "is_private": false, "creator": "joosa.riekkinen@gmail.com", "creation_time": "2012-12-10T11:00:08Z", "author": "joosa.riekkinen@gmail.com", "text": "Created attachment 690332\nAnother \"bogus\" profile created with Argyll\n\nI profile my display with dispcalGUI/Argyll. The profiles work fine in other programs such as Photoshop, so I'm assuming they are not \"bogus\". Firefox won't load and use them. I attached one.", "time": "2012-12-10T11:00:08Z", "tags": [], "attachment_id": 690332, "raw_text": "I profile my display with dispcalGUI/Argyll. The profiles work fine in other programs such as Photoshop, so I'm assuming they are not \"bogus\". Firefox won't load and use them. I attached one.", "id": 6897021}, {"id": 8369152, "raw_text": "I have the same issue. dispcalGUI/Argyll. For other profiles it works but not for the right one.", "attachment_id": null, "text": "I have the same issue. dispcalGUI/Argyll. For other profiles it works but not for the right one.", "tags": [], "time": "2014-02-04T09:18:21Z", "bug_id": 663212, "creation_time": "2014-02-04T09:18:21Z", "author": "anton@katsarov.org", "count": 6, "is_private": false, "creator": "anton@katsarov.org"}, {"raw_text": "", "attachment_id": 8369919, "id": 8369153, "count": 7, "creator": "anton@katsarov.org", "is_private": false, "tags": [], "time": "2014-02-04T09:19:32Z", "bug_id": 663212, "text": "Created attachment 8369919\nHP LP2475w 2014-02-03 D6500 2.2 F-S 3xCurve+MTX.icc", "author": "anton@katsarov.org", "creation_time": "2014-02-04T09:19:32Z"}]}}, "comments": {}}