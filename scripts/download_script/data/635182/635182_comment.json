{"bugs": {"635182": {"comments": [{"author": "simon@simonheckmann.de", "creator": "simon@simonheckmann.de", "time": "2011-02-18T10:14:31Z", "count": 0, "bug_id": 635182, "text": "User-Agent:       Mozilla/5.0 (Windows NT 5.1; rv:2.0b11) Gecko/20100101 Firefox/4.0b11\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0b11) Gecko/20100101 Firefox/4.0b11\n\nWhen working with \"Display: -moz-box\" some strange behavior occurs. The problem is self-explaining. See the attached files.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Run the test file or watch the screenshots\n2. Compare the right box to the left box\nActual Results:  \nThe left demo shows some improper top margin above the second inner box. The right demo displays it perfectly. The only difference is, that the left demo contains an empty div (<div></div>) where as the right demo contains a text node in its second inner div (<div>&nbsp;</div>).\n\nExpected Results:  \nNo matter if the second inner div-element is empty or not, the results should look the same and no improper margin should be added.\n\nBug present in FF 3.6.x and 4.0bX.\nWorks perfectly in Chrome 9+.", "id": 5289062, "attachment_id": null, "creation_time": "2011-02-18T10:14:31Z", "tags": [], "is_private": false, "raw_text": "User-Agent:       Mozilla/5.0 (Windows NT 5.1; rv:2.0b11) Gecko/20100101 Firefox/4.0b11\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0b11) Gecko/20100101 Firefox/4.0b11\n\nWhen working with \"Display: -moz-box\" some strange behavior occurs. The problem is self-explaining. See the attached files.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Run the test file or watch the screenshots\n2. Compare the right box to the left box\nActual Results:  \nThe left demo shows some improper top margin above the second inner box. The right demo displays it perfectly. The only difference is, that the left demo contains an empty div (<div></div>) where as the right demo contains a text node in its second inner div (<div>&nbsp;</div>).\n\nExpected Results:  \nNo matter if the second inner div-element is empty or not, the results should look the same and no improper margin should be added.\n\nBug present in FF 3.6.x and 4.0bX.\nWorks perfectly in Chrome 9+."}, {"creation_time": "2011-02-18T10:15:19Z", "id": 5289063, "attachment_id": 513411, "text": "Created attachment 513411\nPicture of the error in Firefox 4b11", "creator": "simon@simonheckmann.de", "author": "simon@simonheckmann.de", "raw_text": "", "bug_id": 635182, "count": 1, "time": "2011-02-18T10:15:19Z", "is_private": false, "tags": []}, {"id": 5289066, "attachment_id": 513414, "text": "Created attachment 513414\nPicture how it works perfectly in Google Chrome", "creator": "simon@simonheckmann.de", "author": "simon@simonheckmann.de", "creation_time": "2011-02-18T10:16:01Z", "time": "2011-02-18T10:16:01Z", "is_private": false, "tags": [], "raw_text": "", "bug_id": 635182, "count": 2}, {"tags": [], "is_private": false, "raw_text": "", "text": "Created attachment 513415\nTest case to demonstrate the bug", "attachment_id": 513415, "id": 5289067, "creation_time": "2011-02-18T10:16:51Z", "time": "2011-02-18T10:16:51Z", "bug_id": 635182, "count": 3, "creator": "simon@simonheckmann.de", "author": "simon@simonheckmann.de"}, {"is_private": false, "tags": [], "time": "2011-02-18T14:28:24Z", "count": 4, "raw_text": "Confirmed using Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b12pre) Gecko/20110217 Firefox/4.0b12pre ID:20110217123853", "bug_id": 635182, "author": "emorley@mozilla.com", "attachment_id": null, "id": 5289380, "creator": "emorley@mozilla.com", "text": "Confirmed using Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b12pre) Gecko/20110217 Firefox/4.0b12pre ID:20110217123853", "creation_time": "2011-02-18T14:28:24Z"}, {"attachment_id": null, "id": 5289785, "text": "This is expected behavior if the baseline of an empty box is at the top edge of the box (which it is in Gecko), given the rest of the styling and markup in the testcase.  Note that the current flexbox draft does not define where the baseline of a box falls, by the way, so both behaviors are correct per the draft.", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "creation_time": "2011-02-18T17:04:59Z", "time": "2011-02-18T17:04:59Z", "is_private": false, "tags": [], "raw_text": "This is expected behavior if the baseline of an empty box is at the top edge of the box (which it is in Gecko), given the rest of the styling and markup in the testcase.  Note that the current flexbox draft does not define where the baseline of a box falls, by the way, so both behaviors are correct per the draft.", "bug_id": 635182, "count": 5}, {"creation_time": "2011-02-18T17:21:54Z", "author": "bzbarsky@mit.edu", "attachment_id": null, "id": 5289859, "text": "Tab, once you recall what it was you guys decided at the face-to-face, please do let me know, ok?", "creator": "bzbarsky@mit.edu", "count": 6, "raw_text": "Tab, once you recall what it was you guys decided at the face-to-face, please do let me know, ok?", "bug_id": 635182, "is_private": false, "tags": [], "time": "2011-02-18T17:21:54Z"}, {"creation_time": "2011-02-18T17:55:59Z", "author": "simon@simonheckmann.de", "attachment_id": null, "id": 5289962, "text": "Well, although this might be the correct behavior, from my point of view as a developer I really prefere they way Chrome does it! It is not nice if a box jumps around when I use javascript to add content.\nSo, the question I have is: Will this be fixed or will it say they way it is now?", "creator": "simon@simonheckmann.de", "count": 7, "raw_text": "Well, although this might be the correct behavior, from my point of view as a developer I really prefere they way Chrome does it! It is not nice if a box jumps around when I use javascript to add content.\nSo, the question I have is: Will this be fixed or will it say they way it is now?", "bug_id": 635182, "is_private": false, "tags": [], "time": "2011-02-18T17:55:59Z"}, {"raw_text": "Found it.  We resolved in Oslo that the baseline of a flexbox is the baseline of its first child, just like an inline-table.\n\nDo we need some additional wording to handle empty flexbox children, or is the baseline of empty boxes already sufficiently defined?", "bug_id": 635182, "count": 8, "time": "2011-02-18T18:00:07Z", "is_private": false, "tags": [], "creation_time": "2011-02-18T18:00:07Z", "id": 5289971, "attachment_id": null, "text": "Found it.  We resolved in Oslo that the baseline of a flexbox is the baseline of its first child, just like an inline-table.\n\nDo we need some additional wording to handle empty flexbox children, or is the baseline of empty boxes already sufficiently defined?", "creator": "jackalmage@gmail.com", "author": "jackalmage@gmail.com"}, {"creator": "bzbarsky@mit.edu", "text": "> It is not nice if a box jumps around when I use javascript to add content.\n\nWell, you can change the styling to avoid that (e.g. setting vertical-align on the box).\n\nYou want that anyway, because otherwise it might \"jump around\" depending on how the baseline and ascent of the content you add compares to the default baseline and ascent of the block the box is in.\n\n> We resolved in Oslo that the baseline of a flexbox is the baseline of its\n> first child\n\nWell, sure.  That's not the issue here.\n\n> is the baseline of empty boxes already sufficiently defined?\n\nIt's defined on a case-by-case basis.  For example, the baseline of an empty inline-block is different from the baseline of an empty table-cell, and both are explicitly specified in CSS2.1 (sections 10.8.1 and 17.5.3 respectively).", "attachment_id": null, "id": 5290072, "author": "bzbarsky@mit.edu", "creation_time": "2011-02-18T18:29:30Z", "time": "2011-02-18T18:29:30Z", "tags": [], "is_private": false, "bug_id": 635182, "raw_text": "> It is not nice if a box jumps around when I use javascript to add content.\n\nWell, you can change the styling to avoid that (e.g. setting vertical-align on the box).\n\nYou want that anyway, because otherwise it might \"jump around\" depending on how the baseline and ascent of the content you add compares to the default baseline and ascent of the block the box is in.\n\n> We resolved in Oslo that the baseline of a flexbox is the baseline of its\n> first child\n\nWell, sure.  That's not the issue here.\n\n> is the baseline of empty boxes already sufficiently defined?\n\nIt's defined on a case-by-case basis.  For example, the baseline of an empty inline-block is different from the baseline of an empty table-cell, and both are explicitly specified in CSS2.1 (sections 10.8.1 and 17.5.3 respectively).", "count": 9}, {"text": "There's a separate issue here, btw, which is that we do baseline-alignment of non-inline boxes at all.  Webkit does not do that.  We should be treating them as block-level in blockframe, perhaps.", "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 5290075, "author": "bzbarsky@mit.edu", "creation_time": "2011-02-18T18:33:51Z", "time": "2011-02-18T18:33:51Z", "tags": [], "is_private": false, "bug_id": 635182, "raw_text": "There's a separate issue here, btw, which is that we do baseline-alignment of non-inline boxes at all.  Webkit does not do that.  We should be treating them as block-level in blockframe, perhaps.", "count": 10}, {"creation_time": "2011-02-18T18:34:31Z", "text": "Created attachment 513514\nTestcase showing inline boxes (note webkit is still doing weird stuff with the empty box)", "id": 5290077, "attachment_id": 513514, "raw_text": "", "tags": [], "is_private": false, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "count": 11, "bug_id": 635182, "time": "2011-02-18T18:34:31Z"}, {"creation_time": "2011-02-18T18:53:44Z", "author": "jackalmage@gmail.com", "attachment_id": null, "id": 5290129, "text": "(In reply to comment #9)\n> > is the baseline of empty boxes already sufficiently defined?\n> \n> It's defined on a case-by-case basis.  For example, the baseline of an empty\n> inline-block is different from the baseline of an empty table-cell, and both\n> are explicitly specified in CSS2.1 (sections 10.8.1 and 17.5.3 respectively).\n\nFlexbox children aren't special in any way - the only requirement is that they're block-level.  The baseline, then, should be defined by the layout mode of the child.\n\n(I just noticed that a flexbox with no children doesn't have a defined baseline - that does indeed need to be defined.)", "creator": "jackalmage@gmail.com", "count": 12, "raw_text": "(In reply to comment #9)\n> > is the baseline of empty boxes already sufficiently defined?\n> \n> It's defined on a case-by-case basis.  For example, the baseline of an empty\n> inline-block is different from the baseline of an empty table-cell, and both\n> are explicitly specified in CSS2.1 (sections 10.8.1 and 17.5.3 respectively).\n\nFlexbox children aren't special in any way - the only requirement is that they're block-level.  The baseline, then, should be defined by the layout mode of the child.\n\n(I just noticed that a flexbox with no children doesn't have a defined baseline - that does indeed need to be defined.)", "bug_id": 635182, "is_private": false, "tags": [], "time": "2011-02-18T18:53:44Z"}, {"creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "bug_id": 635182, "count": 13, "time": "2011-02-18T19:26:14Z", "creation_time": "2011-02-18T19:26:14Z", "text": "> (I just noticed that a flexbox with no children doesn't have a defined baseline\n\nYes, that's the case I was talking about, and the case that the testcases are about.  What were _you_ talking about? ;)", "id": 5290219, "attachment_id": null, "raw_text": "> (I just noticed that a flexbox with no children doesn't have a defined baseline\n\nYes, that's the case I was talking about, and the case that the testcases are about.  What were _you_ talking about? ;)", "tags": [], "is_private": false}, {"creator": "jackalmage@gmail.com", "text": "I didn't pay sufficient attention to the testcases!\n\nI now understand what is actually being asked, and have put a query up on the CSSWG list.  I've poked AlexMog to weigh in on the issue.", "attachment_id": null, "id": 5290560, "author": "jackalmage@gmail.com", "creation_time": "2011-02-18T21:05:19Z", "time": "2011-02-18T21:05:19Z", "tags": [], "is_private": false, "bug_id": 635182, "raw_text": "I didn't pay sufficient attention to the testcases!\n\nI now understand what is actually being asked, and have put a query up on the CSSWG list.  I've poked AlexMog to weigh in on the issue.", "count": 14}, {"text": "Just another thing I would like to add: When I use a fixed number for \"height\" of the inner div and drop the flex box stuff, Firefox aligns the inner div properly at the top, without any margin on top of it. This works in both scenarios. I would argue that \"display: -moz-box\" should behave similar. Not having a child IN the box should not affect its OUTer position. I would suggest to specify any default behavior to reflect this. However I am not an expert on the flex-box model so there might be good reasons why it behaves the way it does, but from a developer's point of view it just looks more like a bug than a feature.", "creator": "simon@simonheckmann.de", "id": 5290949, "attachment_id": null, "author": "simon@simonheckmann.de", "creation_time": "2011-02-18T22:54:34Z", "time": "2011-02-18T22:54:34Z", "tags": [], "is_private": false, "bug_id": 635182, "raw_text": "Just another thing I would like to add: When I use a fixed number for \"height\" of the inner div and drop the flex box stuff, Firefox aligns the inner div properly at the top, without any margin on top of it. This works in both scenarios. I would argue that \"display: -moz-box\" should behave similar. Not having a child IN the box should not affect its OUTer position. I would suggest to specify any default behavior to reflect this. However I am not an expert on the flex-box model so there might be good reasons why it behaves the way it does, but from a developer's point of view it just looks more like a bug than a feature.", "count": 15}, {"raw_text": "", "is_private": false, "tags": [], "creation_time": "2011-02-18T23:03:06Z", "attachment_id": 513609, "id": 5290965, "text": "Created attachment 513609\nThe solution that was proposed Boris Zbarsky in action", "bug_id": 635182, "count": 16, "time": "2011-02-18T23:03:06Z", "creator": "simon@simonheckmann.de", "author": "simon@simonheckmann.de"}, {"bug_id": 635182, "raw_text": "Simon, fox -moz-box, I agree; see comment 10.  But for inline-box, kids absolutely would affect the \"outer\" position, just like the do for inline-block...  If there are no kids you can't put the baseline at the kids' baseline, because the concept doesn't make sense.", "count": 17, "time": "2011-02-19T01:17:33Z", "tags": [], "is_private": false, "creation_time": "2011-02-19T01:17:33Z", "creator": "bzbarsky@mit.edu", "text": "Simon, fox -moz-box, I agree; see comment 10.  But for inline-box, kids absolutely would affect the \"outer\" position, just like the do for inline-block...  If there are no kids you can't put the baseline at the kids' baseline, because the concept doesn't make sense.", "id": 5291290, "attachment_id": null, "author": "bzbarsky@mit.edu"}, {"raw_text": "I see what your saying: for inline-boxes this behavior is wanted, but for regular block-boxes, like in my case, the bahavior will be changed/fixed, right?", "bug_id": 635182, "count": 18, "time": "2011-02-19T07:31:14Z", "is_private": false, "tags": [], "creation_time": "2011-02-19T07:31:14Z", "attachment_id": null, "id": 5291674, "creator": "simon@simonheckmann.de", "text": "I see what your saying: for inline-boxes this behavior is wanted, but for regular block-boxes, like in my case, the bahavior will be changed/fixed, right?", "author": "simon@simonheckmann.de"}, {"raw_text": "Yes.", "bug_id": 635182, "count": 19, "time": "2011-02-19T17:29:04Z", "is_private": false, "tags": [], "creation_time": "2011-02-19T17:29:04Z", "attachment_id": null, "id": 5292148, "creator": "bzbarsky@mit.edu", "text": "Yes.", "author": "bzbarsky@mit.edu"}]}}, "comments": {}}