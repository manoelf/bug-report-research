{"comments": {}, "bugs": {"673370": {"comments": [{"count": 0, "bug_id": 673370, "creator": "jonathan.protzenko@gmail.com", "is_private": false, "tags": [], "time": "2011-07-22T08:34:44Z", "text": "This is for IMAP folders which are not stored offline.\n\nRight now, I'm pretty sure Gloda only uses the information stored in the nsIMsgDBHdr to perform its indexing. Now the JS Mime Emitter has gained the ability to use BODYSTRUCTURE, I think we could take advantage of that to index the message using the results of BODYSTRUCTURE, and not just use the msf information.\n\nOne big win is that Gloda would now be aware of attachments for messages that are not stored offline (right, it isn't aware of them).\n\n:bienvenu, do you see any objection to this?", "author": "jonathan.protzenko@gmail.com", "creation_time": "2011-07-22T08:34:44Z", "raw_text": "This is for IMAP folders which are not stored offline.\n\nRight now, I'm pretty sure Gloda only uses the information stored in the nsIMsgDBHdr to perform its indexing. Now the JS Mime Emitter has gained the ability to use BODYSTRUCTURE, I think we could take advantage of that to index the message using the results of BODYSTRUCTURE, and not just use the msf information.\n\nOne big win is that Gloda would now be aware of attachments for messages that are not stored offline (right, it isn't aware of them).\n\n:bienvenu, do you see any objection to this?", "attachment_id": null, "id": 5606594}, {"id": 5607101, "attachment_id": null, "raw_text": "No objection per se, but I'd really like to see it combined with an attempt to get messages from the necko cache first (either the memory or disk cache). This would avoid unneeded network traffic. Doing a normal message fetch will use the necko cache first, and avoid any network traffic, but asking for body structure will require talking to the imap server, even if we have the message in the necko cache.\n\nnsImapService::IsMsgInMemCache will tell you if a message is in the necko cache (memory or disk; the cache used to be memory only, but has been changed to include disk, w/o changing the method names - this is distinct from the offline store).\n\nNewly downloaded messages, either by the junk filter, or the user reading them, will very likely be in the necko cache. Older messages are much less likely to be in the disk cache.", "author": "mozilla@davidbienvenu.org", "creation_time": "2011-07-22T15:22:08Z", "tags": [], "time": "2011-07-22T15:22:08Z", "text": "No objection per se, but I'd really like to see it combined with an attempt to get messages from the necko cache first (either the memory or disk cache). This would avoid unneeded network traffic. Doing a normal message fetch will use the necko cache first, and avoid any network traffic, but asking for body structure will require talking to the imap server, even if we have the message in the necko cache.\n\nnsImapService::IsMsgInMemCache will tell you if a message is in the necko cache (memory or disk; the cache used to be memory only, but has been changed to include disk, w/o changing the method names - this is distinct from the offline store).\n\nNewly downloaded messages, either by the junk filter, or the user reading them, will very likely be in the necko cache. Older messages are much less likely to be in the disk cache.", "creator": "mozilla@davidbienvenu.org", "is_private": false, "bug_id": 673370, "count": 1}, {"attachment_id": null, "raw_text": "Noting that gloda should honor our rule that \"don't store offline\" === \"don't fulltext index the body\" if we do end up streaming the message because it's fully available.\n\nGood simplifying news is that because gloda listens for msgsClassified events and therefore strictly happen after the junk filter, the cache should already have the message (as long as it's big enough to hold on).", "id": 5607194, "is_private": false, "creator": "bugmail@asutherland.org", "creation_time": "2011-07-22T16:11:36Z", "author": "bugmail@asutherland.org", "text": "Noting that gloda should honor our rule that \"don't store offline\" === \"don't fulltext index the body\" if we do end up streaming the message because it's fully available.\n\nGood simplifying news is that because gloda listens for msgsClassified events and therefore strictly happen after the junk filter, the cache should already have the message (as long as it's big enough to hold on).", "tags": [], "time": "2011-07-22T16:11:36Z", "count": 2, "bug_id": 673370}]}}}