{"bugs": {"629308": {"comments": [{"tags": [], "author": "chalx@xen.gd", "attachment_id": null, "bug_id": 629308, "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.13) Gecko/20101209 Fedora/3.6.13-1.fc13 Firefox/3.6.13\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.13) Gecko/20101209 Fedora/3.1.7-0.35.b3pre.fc13 Thunderbird/3.1.7\n\nI have a Message filter rule for my IMAP account Inbox:\n\ncondition=\"AND (to,is,user-list@myhost.com)\"\n\nThis filter triggers on messages containing multiple recipients in the \"To:\" field:\n\nTo: Users <user-list@myhost.com>, Developers <devel-list@myhost.com>\n\nI can't filter messages containing exactly one recipient email. Tried to use \\\"to\\\" as an additional custom field but didn't success.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Place two messages into Inbox with \"To: email1\" and \"To: email1, email2\" recipients.\n2. Add a filter with the rule: field = \"To:\", condition = \"is\", value = \"email1\", action = any.\n3. Run the filter.\n\nActual Results:  \nAction performed over both messages.\n\nExpected Results:  \nAction performed over one message with \"To: email1\" header.\n\nMaybe there should be different filter fields for parsed and raw input data (e.g. for struct \"(1=>(email=>user-list@myhost.com, name=>Users), 2=>(email=>devel-list@myhost.com, name=>Developers))\" and string \"Users <user-list@myhost.com>, Developers <devel-list@myhost.com>\").\n\nIs there a workaround for excluding all other values from the rule? Something like \"...AND (to,doesn't contain,NOT user-list@myhost.com)\".", "count": 0, "creator": "chalx@xen.gd", "creation_time": "2011-01-27T09:37:16Z", "id": 5231511, "text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.13) Gecko/20101209 Fedora/3.6.13-1.fc13 Firefox/3.6.13\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.13) Gecko/20101209 Fedora/3.1.7-0.35.b3pre.fc13 Thunderbird/3.1.7\n\nI have a Message filter rule for my IMAP account Inbox:\n\ncondition=\"AND (to,is,user-list@myhost.com)\"\n\nThis filter triggers on messages containing multiple recipients in the \"To:\" field:\n\nTo: Users <user-list@myhost.com>, Developers <devel-list@myhost.com>\n\nI can't filter messages containing exactly one recipient email. Tried to use \\\"to\\\" as an additional custom field but didn't success.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Place two messages into Inbox with \"To: email1\" and \"To: email1, email2\" recipients.\n2. Add a filter with the rule: field = \"To:\", condition = \"is\", value = \"email1\", action = any.\n3. Run the filter.\n\nActual Results:  \nAction performed over both messages.\n\nExpected Results:  \nAction performed over one message with \"To: email1\" header.\n\nMaybe there should be different filter fields for parsed and raw input data (e.g. for struct \"(1=>(email=>user-list@myhost.com, name=>Users), 2=>(email=>devel-list@myhost.com, name=>Developers))\" and string \"Users <user-list@myhost.com>, Developers <devel-list@myhost.com>\").\n\nIs there a workaround for excluding all other values from the rule? Something like \"...AND (to,doesn't contain,NOT user-list@myhost.com)\".", "time": "2011-01-27T09:37:16Z", "is_private": false}, {"text": "I think many users wish the filters to operate this way. \nDoes adding a second rule AND(To,doesn't dontain,\",\") work?", "id": 5796675, "time": "2011-10-21T13:39:09Z", "is_private": false, "creator": "acelists@atlas.sk", "creation_time": "2011-10-21T13:39:09Z", "raw_text": "I think many users wish the filters to operate this way. \nDoes adding a second rule AND(To,doesn't dontain,\",\") work?", "count": 1, "tags": [], "author": "acelists@atlas.sk", "attachment_id": null, "bug_id": 629308}, {"author": "acelists@atlas.sk", "creator": "acelists@atlas.sk", "tags": [], "creation_time": "2011-10-21T13:40:12Z", "bug_id": 629308, "attachment_id": null, "is_private": false, "time": "2011-10-21T13:40:12Z", "id": 5796678, "raw_text": "Maybe not, if the filter engine is interpreting the header and is stripping the separators. Then bug 413355 may help you.", "text": "Maybe not, if the filter engine is interpreting the header and is stripping the separators. Then bug 413355 may help you.", "count": 2}, {"attachment_id": null, "bug_id": 629308, "tags": [], "author": "chalx@xen.gd", "count": 3, "raw_text": "> Does adding a second rule AND(To,doesn't dontain,\",\") work?\n\nNo; the reason is same (I believe): comas, secondary emails etc are not contained in the data being actually filtered.\n\n> Then bug 413355 may help you.\n\nGood bug but not the same: having \"parse raw data\" checkbox can't help in general with checking NOT-values. For my multiemail example the \"Doesn't contain coma\" workaround is not universal because of \"Vaultec, Inc\" usernames. Maybe RegExp raw data parsing is the best \"external\" solution... Thereby the dependence is invalid.\n\nBTW all these \"is/isn't\", \"contains/doesn't contain\", \"empty/not empty\" pairs are redundant and should be replaced with additional \"Yes/Not\" condition param (or \"Not\" checkbox) for all rules (including \"starting with\" etc). And adding the same Not option for the matching value is the solution for this bug.", "creation_time": "2011-10-21T15:10:49Z", "creator": "chalx@xen.gd", "is_private": false, "text": "> Does adding a second rule AND(To,doesn't dontain,\",\") work?\n\nNo; the reason is same (I believe): comas, secondary emails etc are not contained in the data being actually filtered.\n\n> Then bug 413355 may help you.\n\nGood bug but not the same: having \"parse raw data\" checkbox can't help in general with checking NOT-values. For my multiemail example the \"Doesn't contain coma\" workaround is not universal because of \"Vaultec, Inc\" usernames. Maybe RegExp raw data parsing is the best \"external\" solution... Thereby the dependence is invalid.\n\nBTW all these \"is/isn't\", \"contains/doesn't contain\", \"empty/not empty\" pairs are redundant and should be replaced with additional \"Yes/Not\" condition param (or \"Not\" checkbox) for all rules (including \"starting with\" etc). And adding the same Not option for the matching value is the solution for this bug.", "id": 5796835, "time": "2011-10-21T15:10:49Z"}, {"time": "2011-10-21T15:21:40Z", "raw_text": "PS: Now this bug looks like enhancement but my suggestions are targeted to resolve the buggy \"is=contains\" behavior.", "text": "PS: Now this bug looks like enhancement but my suggestions are targeted to resolve the buggy \"is=contains\" behavior.", "id": 5796862, "is_private": false, "count": 4, "author": "chalx@xen.gd", "tags": [], "creator": "chalx@xen.gd", "bug_id": 629308, "attachment_id": null, "creation_time": "2011-10-21T15:21:40Z"}, {"raw_text": "So if for To-filter, |is| essentially just filters for entire addresses contained in To-header of message, how can we filter for messages having exactly and only one known recipient?? I guess we can't. Bad.", "count": 5, "tags": [], "author": "bugzilla2007@duellmann24.net", "attachment_id": null, "bug_id": 629308, "is_private": false, "id": 13370810, "text": "So if for To-filter, |is| essentially just filters for entire addresses contained in To-header of message, how can we filter for messages having exactly and only one known recipient?? I guess we can't. Bad.", "time": "2018-05-29T12:06:18Z", "creator": "bugzilla2007@duellmann24.net", "creation_time": "2018-05-29T12:06:18Z"}]}}, "comments": {}}