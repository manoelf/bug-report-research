{"comments": {}, "bugs": {"661803": {"comments": [{"tags": [], "time": "2011-06-03T13:28:45Z", "text": "export targets are using a blind cp to install exported headers.  Real deps should be used to avoid avoid later shells/running nsinstall.\n\nIs there any reason these headers could not be used in place from their checkin directory within the source tree and avoid the installation overhead altogether ?\n\n\n% gmake -f client.mk configure\ncd /mozilla/mozilla-central/obj-ff-dbg\n/mozilla/mozilla-central/configure\nAdding configure options from /home/joey/.mozconfig:\n[snip]\n\n% gmake -C obj-ff-dbg/db/mdb export\ngmake: Entering directory `/mozilla/mozilla-central/obj-ff-dbg/db/mdb'\ngmake[1]: Entering directory `/mozilla/mozilla-central/obj-ff-dbg/db/mdb/public'\n/mozilla/mozilla-central/obj-ff-dbg/config/nsinstall -R -m 644 /mozilla/mozilla-central/db/mdb/public/mdb.h ../../../dist/include\n\n% cd obj-ff-dbg/db/mdb\n\n##\n# mdb.h header installed correctly under dist/include\n##\n% ls -l ../../../dist/include/mdb.h /mozilla/mozilla-central/db/mdb/public/mdb.h\nlrwxrwxrwx 1 joey joey     44 2011-06-03 08:57 ../../../dist/include/mdb.h -> /mozilla/mozilla-central/db/mdb/public/mdb.h\n-rw-r--r-- 1 joey joey 124939 2011-06-01 14:16 /mozilla/mozilla-central/db/mdb/public/mdb.h\n\n##\n# subsequent calls should be a nop but nsinstall mdb.h will be\n# invoked on each subsequent attempt.\n##\n% gmake export | grep nsinstall\n/mozilla/mozilla-central/obj-ff-dbg/config/nsinstall -R -m 644 /mozilla/mozilla-central/db/mdb/public/mdb.h ../../../dist/include\n\n% gmake export | grep nsinstall\n/mozilla/mozilla-central/obj-ff-dbg/config/nsinstall -R -m 644 /mozilla/mozilla-central/db/mdb/public/mdb.h ../../../dist/include\n\n\n##\n# Header and symlink still exist, timestamps have not changed\n##\ncd public; ls -l ../../../dist/include/mdb.h /mozilla/mozilla-central/db/mdb/public/mdb.h\nlrwxrwxrwx 1 joey joey     44 2011-06-03 08:57 ../../../dist/include/mdb.h -> /mozilla/mozilla-central/db/mdb/public/mdb.h\n-rw-r--r-- 1 joey joey 124939 2011-06-01 14:16 /mozilla/mozilla-central/db/mdb/public/mdb.h", "author": "joey@mozilla.com", "creation_time": "2011-06-03T13:28:45Z", "creator": "joey@mozilla.com", "is_private": false, "id": 5510838, "raw_text": "export targets are using a blind cp to install exported headers.  Real deps should be used to avoid avoid later shells/running nsinstall.\n\nIs there any reason these headers could not be used in place from their checkin directory within the source tree and avoid the installation overhead altogether ?\n\n\n% gmake -f client.mk configure\ncd /mozilla/mozilla-central/obj-ff-dbg\n/mozilla/mozilla-central/configure\nAdding configure options from /home/joey/.mozconfig:\n[snip]\n\n% gmake -C obj-ff-dbg/db/mdb export\ngmake: Entering directory `/mozilla/mozilla-central/obj-ff-dbg/db/mdb'\ngmake[1]: Entering directory `/mozilla/mozilla-central/obj-ff-dbg/db/mdb/public'\n/mozilla/mozilla-central/obj-ff-dbg/config/nsinstall -R -m 644 /mozilla/mozilla-central/db/mdb/public/mdb.h ../../../dist/include\n\n% cd obj-ff-dbg/db/mdb\n\n##\n# mdb.h header installed correctly under dist/include\n##\n% ls -l ../../../dist/include/mdb.h /mozilla/mozilla-central/db/mdb/public/mdb.h\nlrwxrwxrwx 1 joey joey     44 2011-06-03 08:57 ../../../dist/include/mdb.h -> /mozilla/mozilla-central/db/mdb/public/mdb.h\n-rw-r--r-- 1 joey joey 124939 2011-06-01 14:16 /mozilla/mozilla-central/db/mdb/public/mdb.h\n\n##\n# subsequent calls should be a nop but nsinstall mdb.h will be\n# invoked on each subsequent attempt.\n##\n% gmake export | grep nsinstall\n/mozilla/mozilla-central/obj-ff-dbg/config/nsinstall -R -m 644 /mozilla/mozilla-central/db/mdb/public/mdb.h ../../../dist/include\n\n% gmake export | grep nsinstall\n/mozilla/mozilla-central/obj-ff-dbg/config/nsinstall -R -m 644 /mozilla/mozilla-central/db/mdb/public/mdb.h ../../../dist/include\n\n\n##\n# Header and symlink still exist, timestamps have not changed\n##\ncd public; ls -l ../../../dist/include/mdb.h /mozilla/mozilla-central/db/mdb/public/mdb.h\nlrwxrwxrwx 1 joey joey     44 2011-06-03 08:57 ../../../dist/include/mdb.h -> /mozilla/mozilla-central/db/mdb/public/mdb.h\n-rw-r--r-- 1 joey joey 124939 2011-06-01 14:16 /mozilla/mozilla-central/db/mdb/public/mdb.h", "attachment_id": null, "bug_id": 661803, "count": 0}, {"creator": "benjamin@smedbergs.us", "is_private": false, "author": "benjamin@smedbergs.us", "creation_time": "2011-06-03T14:05:17Z", "tags": [], "time": "2011-06-03T14:05:17Z", "text": "Note that nsinstall does its own dependency checking (only installing the file if it is newer).\n\nIn general, what we do is:\n\nnsinstall many.h header.h files.h listed.h here.h <directory>\n\nIn which case it is actually faster for nsinstall to do the dep checking than to have make do it, because then make has to run a separate nsinstall command for each header. At least for clobber builds... there might be a depend/clobber tradeoff here somewhere.", "attachment_id": null, "raw_text": "Note that nsinstall does its own dependency checking (only installing the file if it is newer).\n\nIn general, what we do is:\n\nnsinstall many.h header.h files.h listed.h here.h <directory>\n\nIn which case it is actually faster for nsinstall to do the dep checking than to have make do it, because then make has to run a separate nsinstall command for each header. At least for clobber builds... there might be a depend/clobber tradeoff here somewhere.", "id": 5510914, "count": 1, "bug_id": 661803}, {"raw_text": "For a full toplevel depend build we blow away dist/include anyways.  http://mxr.mozilla.org/mozilla-central/source/Makefile.in#91", "attachment_id": null, "id": 5510926, "count": 2, "creator": "khuey@kylehuey.com", "is_private": false, "time": "2011-06-03T14:16:17Z", "bug_id": 661803, "tags": [], "text": "For a full toplevel depend build we blow away dist/include anyways.  http://mxr.mozilla.org/mozilla-central/source/Makefile.in#91", "author": "khuey@kylehuey.com", "creation_time": "2011-06-03T14:16:17Z"}, {"creator": "ted@mielczarek.org", "is_private": false, "author": "ted@mielczarek.org", "creation_time": "2011-06-03T14:26:46Z", "tags": [], "time": "2011-06-03T14:26:46Z", "text": "(In reply to comment #0)\n> Is there any reason these headers could not be used in place from their\n> checkin directory within the source tree and avoid the installation overhead\n> altogether ?\n\nkhuey and I have talked about this, there are a few snags:\n1) Currently we have a concept of public and private headers, public headers get exported to dist/include, private headers don't. Maybe this distinction is silly and we should just force everyone to include things from srcdir-relative paths? (And only SDK headers would be \"externally public\"?)\n2) We've started moving to EXPORTS_namespaces to put public headers into namespaces, and the headers get installed to dist/include/<namespace> so they can be #included as \"<namespace>/header.h\". Making that work without installing files seems difficult or impossible.\n3) We still have to install some headers because we use a lot of headers that are generated from .idl files via xpidl. This is less of a problem since we already have deps to generate them.", "attachment_id": null, "raw_text": "(In reply to comment #0)\n> Is there any reason these headers could not be used in place from their\n> checkin directory within the source tree and avoid the installation overhead\n> altogether ?\n\nkhuey and I have talked about this, there are a few snags:\n1) Currently we have a concept of public and private headers, public headers get exported to dist/include, private headers don't. Maybe this distinction is silly and we should just force everyone to include things from srcdir-relative paths? (And only SDK headers would be \"externally public\"?)\n2) We've started moving to EXPORTS_namespaces to put public headers into namespaces, and the headers get installed to dist/include/<namespace> so they can be #included as \"<namespace>/header.h\". Making that work without installing files seems difficult or impossible.\n3) We still have to install some headers because we use a lot of headers that are generated from .idl files via xpidl. This is less of a problem since we already have deps to generate them.", "id": 5510936, "count": 3, "bug_id": 661803}, {"bug_id": 661803, "count": 4, "time": "2011-06-03T15:21:57Z", "tags": [], "text": "Ignore if this is a dup, not sure what happened to my last reply.\n\n(In reply to comment #1)\n> Note that nsinstall does its own dependency checking (only installing the\n> file if it is newer).\n> \n> In general, what we do is:\n> \n> nsinstall many.h header.h files.h listed.h here.h <directory>\n> \n> In which case it is actually faster for nsinstall to do the dep checking\n> than to have make do it, because then make has to run a separate nsinstall\n> command for each header. At least for clobber builds... there might be a\n> depend/clobber tradeoff here somewhere.\n\nIt should be possible to add rules that will accumulate a list of modified headers and pass them in bulk to nsinstall rather than forking off a b'zillion individual calls [ yes that would be silly ].\n\nIf the makefiles are not allowed to make stale timestamp decisions there is no way to avoid random shell overhead during a nop / dependency builds.", "author": "joey@mozilla.com", "creation_time": "2011-06-03T15:21:57Z", "creator": "joey@mozilla.com", "is_private": false, "id": 5511026, "raw_text": "Ignore if this is a dup, not sure what happened to my last reply.\n\n(In reply to comment #1)\n> Note that nsinstall does its own dependency checking (only installing the\n> file if it is newer).\n> \n> In general, what we do is:\n> \n> nsinstall many.h header.h files.h listed.h here.h <directory>\n> \n> In which case it is actually faster for nsinstall to do the dep checking\n> than to have make do it, because then make has to run a separate nsinstall\n> command for each header. At least for clobber builds... there might be a\n> depend/clobber tradeoff here somewhere.\n\nIt should be possible to add rules that will accumulate a list of modified headers and pass them in bulk to nsinstall rather than forking off a b'zillion individual calls [ yes that would be silly ].\n\nIf the makefiles are not allowed to make stale timestamp decisions there is no way to avoid random shell overhead during a nop / dependency builds.", "attachment_id": null}]}}}