{"bugs": {"662157": {"comments": [{"attachment_id": null, "raw_text": "User-Agent:       Mozilla/5.0 (X11; Linux i686; rv:7.0a1) Gecko/20110605 Firefox/7.0a1\nBuild Identifier: Mozilla/5.0 (X11; Linux i686; rv:7.0a1) Gecko/20110605 Firefox/7.0a1\n\nGecko/Firefox does not allow to reduce the opacity values with additive animation using out of range values. This applies for all *opacity properties,\nespecially fill-opacity, stroke-opacity and opacity.\n\n\nAbout the example:\nSeveral shapes in a group are referenced with a use element. \nThis changes its fill-opacity with out of range values and fill-opacity with additive animations on the left.\nThis is compared with a use on the right using simpler animations to get the\nsame effect.\n\nIf required I can provide examples for the other opacity properties as well.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Try given example\n2. Compare with description and recommendations\n3. Compare with behaviour of Opera, adobe plugin, Batik/Squiggle, WebKit\n\nActual Results:  \nOn the left the sample gets only darker, not lighter as intended.\n\nExpected Results:  \nLeft and right part of the image should animate the same way to indicate proper\nbehaviour for out of range values for animation.\n\nRelevant recommendation parts:\nhttp://www.w3.org/TR/SVG11/painting.html#FillOpacityProperty\nhttp://www.w3.org/TR/SVG11/implnote.html#RangeClamping\n\n'Opacity values out-of-range are not in error and should be clamped to the range 0 to 1 at the time which opacity values have to be processed (e.g., at presentation time or when it is necessary to perform intermediate filter effect calculations).'\n\nFor animations this means, intermediate results can be still out of range, only\nthe the final preeentation value is clamped.\n\nSMIL animation sandwich model:\n\n\"Some attributes that support additive animation have a defined legal range for values (e.g., an opacity attribute may allow values between 0 and 1). In some cases, an animation function may yield out of range values. It is recommended that implementations clamp the results to the legal range as late as possible, before applying them to the presentation value. Ideally, the effect of all the animations active or frozen at a given point should be combined, before any clamping is performed. Although individual animation functions may yield out of range values, the combination of additive animations may still be legal. Clamping only the final result and not the effect of the individual animation functions provides support for these cases. \"\n\nhttp://www.w3.org/TR/smil-animation/#AnimationSandwichModel", "tags": [], "bug_id": 662157, "text": "User-Agent:       Mozilla/5.0 (X11; Linux i686; rv:7.0a1) Gecko/20110605 Firefox/7.0a1\nBuild Identifier: Mozilla/5.0 (X11; Linux i686; rv:7.0a1) Gecko/20110605 Firefox/7.0a1\n\nGecko/Firefox does not allow to reduce the opacity values with additive animation using out of range values. This applies for all *opacity properties,\nespecially fill-opacity, stroke-opacity and opacity.\n\n\nAbout the example:\nSeveral shapes in a group are referenced with a use element. \nThis changes its fill-opacity with out of range values and fill-opacity with additive animations on the left.\nThis is compared with a use on the right using simpler animations to get the\nsame effect.\n\nIf required I can provide examples for the other opacity properties as well.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Try given example\n2. Compare with description and recommendations\n3. Compare with behaviour of Opera, adobe plugin, Batik/Squiggle, WebKit\n\nActual Results:  \nOn the left the sample gets only darker, not lighter as intended.\n\nExpected Results:  \nLeft and right part of the image should animate the same way to indicate proper\nbehaviour for out of range values for animation.\n\nRelevant recommendation parts:\nhttp://www.w3.org/TR/SVG11/painting.html#FillOpacityProperty\nhttp://www.w3.org/TR/SVG11/implnote.html#RangeClamping\n\n'Opacity values out-of-range are not in error and should be clamped to the range 0 to 1 at the time which opacity values have to be processed (e.g., at presentation time or when it is necessary to perform intermediate filter effect calculations).'\n\nFor animations this means, intermediate results can be still out of range, only\nthe the final preeentation value is clamped.\n\nSMIL animation sandwich model:\n\n\"Some attributes that support additive animation have a defined legal range for values (e.g., an opacity attribute may allow values between 0 and 1). In some cases, an animation function may yield out of range values. It is recommended that implementations clamp the results to the legal range as late as possible, before applying them to the presentation value. Ideally, the effect of all the animations active or frozen at a given point should be combined, before any clamping is performed. Although individual animation functions may yield out of range values, the combination of additive animations may still be legal. Clamping only the final result and not the effect of the individual animation functions provides support for these cases. \"\n\nhttp://www.w3.org/TR/smil-animation/#AnimationSandwichModel", "count": 0, "id": 5514083, "is_private": false, "creation_time": "2011-06-05T15:36:36Z", "time": "2011-06-05T15:36:36Z", "creator": "dr.o.hoffmann@gmx.de", "author": "dr.o.hoffmann@gmx.de"}, {"attachment_id": null, "raw_text": "Confirmed against Mozilla/5.0 (Windows NT 5.1; rv:7.0a1) Gecko/20110605 Firefox/7.0a1 ID:20110605030701", "tags": [], "text": "Confirmed against Mozilla/5.0 (Windows NT 5.1; rv:7.0a1) Gecko/20110605 Firefox/7.0a1 ID:20110605030701", "bug_id": 662157, "count": 1, "id": 5514293, "is_private": false, "creation_time": "2011-06-05T20:59:20Z", "time": "2011-06-05T20:59:20Z", "creator": "xtc4uall@gmail.com", "author": "xtc4uall@gmail.com"}, {"is_private": false, "id": 5514321, "count": 2, "author": "longsonr@gmail.com", "creator": "longsonr@gmail.com", "creation_time": "2011-06-05T21:19:48Z", "time": "2011-06-05T21:19:48Z", "raw_text": "The CSS specification says that opacity values are clamped: http://www.w3.org/TR/css3-color/#transparency", "attachment_id": null, "bug_id": 662157, "text": "The CSS specification says that opacity values are clamped: http://www.w3.org/TR/css3-color/#transparency", "tags": []}, {"id": 5514634, "count": 3, "is_private": false, "attachment_id": null, "raw_text": "Well, SVG and SMIL indicates this as well, but of course only for presentation,\nelse additive animation of such properties is often not useful and authors have\nto work around such bugs of viewers without additive animation, what can be quite annoying to do, just because one viewer has such a bug.\nIn general similar applies for additive animations of colours, but for this more\nviewers have problems and it is for some notations of colours not obvious, how to note a negative colour value - well, one can use the percentage notation, that\nallows arbitrary numbers.", "creation_time": "2011-06-06T07:52:31Z", "time": "2011-06-06T07:52:31Z", "creator": "dr.o.hoffmann@gmx.de", "text": "Well, SVG and SMIL indicates this as well, but of course only for presentation,\nelse additive animation of such properties is often not useful and authors have\nto work around such bugs of viewers without additive animation, what can be quite annoying to do, just because one viewer has such a bug.\nIn general similar applies for additive animations of colours, but for this more\nviewers have problems and it is for some notations of colours not obvious, how to note a negative colour value - well, one can use the percentage notation, that\nallows arbitrary numbers.", "bug_id": 662157, "tags": [], "author": "dr.o.hoffmann@gmx.de"}, {"tags": [], "text": "(In reply to comment #2)\n> The CSS specification says that opacity values are clamped:\n> http://www.w3.org/TR/css3-color/#transparency\n\nFrom comparing that to...\n  http://www.w3.org/TR/SVG11/masking.html#OpacityProperty\n...it looks like the SVG spec text is very similar to the CSS spec text, with the exception that the SVG spec includes a link to describe the deferred clamping.", "bug_id": 662157, "raw_text": "(In reply to comment #2)\n> The CSS specification says that opacity values are clamped:\n> http://www.w3.org/TR/css3-color/#transparency\n\nFrom comparing that to...\n  http://www.w3.org/TR/SVG11/masking.html#OpacityProperty\n...it looks like the SVG spec text is very similar to the CSS spec text, with the exception that the SVG spec includes a link to describe the deferred clamping.", "attachment_id": null, "author": "dholbert@mozilla.com", "time": "2011-06-06T17:41:46Z", "creation_time": "2011-06-06T17:41:46Z", "creator": "dholbert@mozilla.com", "id": 5515442, "count": 4, "is_private": false}]}}, "comments": {}}