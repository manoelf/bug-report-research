{"bugs": {"1634133": {"comments": [{"is_private": false, "bug_id": 1634133, "attachment_id": null, "id": 14786798, "author": "mhowell@mozilla.com", "text": "The update agent needs an implementation of what I think of as the update state machine, which begins with running an update check and evaluating its result to determine what patch and download URL to begin using, and then continues shepherding that update through the rest of the process, including implementing a lot of our fallbacks and error handling. \n\nThe current implementation of this logic in the Firefox update manager is somewhat scattered and ad hoc, and I'd like for this version to be more centralized and formal to the extent possible, in the hope of making it easier to understand and less daunting. I'm not planning any major changes to the existing logic itself, just how it's organized, except for changes that are mandated by the nature of the background agent and how it is executed. There will need to be some pretty serious test coverage to protect against regressions.\n\nThat said, I do also intend to take the opportunity to at least investigate a couple of enhancements to this logic, namely bug 353804, adding the ability to obsolete and not continue applying updates that are in progress when a newer one is found, and bug 1468549, using HTTPS for update checks (relevant here because it may require the ability to fall back to unencrypted HTTP if there are too many problems).", "tags": [], "creator": "mhowell@mozilla.com", "time": "2020-04-29T18:10:05Z", "raw_text": "The update agent needs an implementation of what I think of as the update state machine, which begins with running an update check and evaluating its result to determine what patch and download URL to begin using, and then continues shepherding that update through the rest of the process, including implementing a lot of our fallbacks and error handling. \n\nThe current implementation of this logic in the Firefox update manager is somewhat scattered and ad hoc, and I'd like for this version to be more centralized and formal to the extent possible, in the hope of making it easier to understand and less daunting. I'm not planning any major changes to the existing logic itself, just how it's organized, except for changes that are mandated by the nature of the background agent and how it is executed. There will need to be some pretty serious test coverage to protect against regressions.\n\nThat said, I do also intend to take the opportunity to at least investigate a couple of enhancements to this logic, namely bug 353804, adding the ability to obsolete and not continue applying updates that are in progress when a newer one is found, and bug 1468549, using HTTPS for update checks (relevant here because it may require the ability to fall back to unencrypted HTTP if there are too many problems).", "creation_time": "2020-04-29T18:10:05Z", "count": 0}]}}, "comments": {}}