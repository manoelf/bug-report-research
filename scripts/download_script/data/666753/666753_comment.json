{"bugs": {"666753": {"comments": [{"id": 5552362, "raw_text": "I need to add a new progress listener to the frame script of the browser. But doing so is causing two docshell tests that involves nested iframes to fail, due to extra pagehide and unload events being dispatched, which those tests are not expecting to receive. They seem to be generated by about:blank loads\n\nThe attached patch is a minimal listener that triggers the problem.\n\ntest_bug301397.xul and test_bug364461.xul   (both mochitest-chrome)", "attachment_id": 541502, "text": "Created attachment 541502\nPatch\n\nI need to add a new progress listener to the frame script of the browser. But doing so is causing two docshell tests that involves nested iframes to fail, due to extra pagehide and unload events being dispatched, which those tests are not expecting to receive. They seem to be generated by about:blank loads\n\nThe attached patch is a minimal listener that triggers the problem.\n\ntest_bug301397.xul and test_bug364461.xul   (both mochitest-chrome)", "bug_id": 666753, "tags": [], "time": "2011-06-23T21:31:43Z", "creation_time": "2011-06-23T21:31:43Z", "author": "felipc@gmail.com", "count": 0, "is_private": false, "creator": "felipc@gmail.com"}, {"creation_time": "2011-06-23T21:35:57Z", "author": "felipc@gmail.com", "text": "Created attachment 541504\nTest fix?\n\nForgot to mention that the problem is triggered by the access of aWebProgress.DOMWindow.\n\nIf this is indeed the current expected behavior, this patch fixes the tests by adding the new events to the list of expected events on those tests", "tags": [], "bug_id": 666753, "time": "2011-06-23T21:35:57Z", "is_private": false, "creator": "felipc@gmail.com", "count": 1, "id": 5552380, "attachment_id": 541504, "raw_text": "Forgot to mention that the problem is triggered by the access of aWebProgress.DOMWindow.\n\nIf this is indeed the current expected behavior, this patch fixes the tests by adding the new events to the list of expected events on those tests"}, {"attachment_id": 541504, "raw_text": "Seems to fix the failures with by about:blank patch, so r+!", "id": 5553625, "is_private": false, "creator": "hsivonen@mozilla.com", "count": 2, "creation_time": "2011-06-24T09:58:34Z", "author": "hsivonen@mozilla.com", "text": "Comment on attachment 541504\nTest fix?\n\nSeems to fix the failures with by about:blank patch, so r+!", "time": "2011-06-24T09:58:34Z", "bug_id": 666753, "tags": []}, {"time": "2011-06-24T10:00:44Z", "bug_id": 666753, "tags": [], "text": "Comment on attachment 541504\nTest fix?\n\nHmm. Actually, this patch fixes only the first test for me, but the patch seems reasonable anyway.\n\nIs e10s explicitly changing how about:blank works, by any chance?", "author": "hsivonen@mozilla.com", "creation_time": "2011-06-24T10:00:44Z", "count": 3, "creator": "hsivonen@mozilla.com", "is_private": false, "id": 5553631, "raw_text": "Hmm. Actually, this patch fixes only the first test for me, but the patch seems reasonable anyway.\n\nIs e10s explicitly changing how about:blank works, by any chance?", "attachment_id": 541504}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-06-24T14:30:24Z", "time": "2011-06-24T14:30:24Z", "bug_id": 666753, "tags": [], "text": "Comment on attachment 541504\nTest fix?\n\nCould you please add comments for the new entries explaining what they're coming from?\n\nAlso, note that these tests are not Firefox-specific.  Will the code you're adding run in all Gecko-based browsers that run these tests?  Or just Firefox?", "creator": "bzbarsky@mit.edu", "is_private": false, "count": 4, "id": 5553944, "attachment_id": 541504, "raw_text": "Could you please add comments for the new entries explaining what they're coming from?\n\nAlso, note that these tests are not Firefox-specific.  Will the code you're adding run in all Gecko-based browsers that run these tests?  Or just Firefox?"}, {"id": 5554845, "raw_text": "(In reply to comment #3)\n> Comment on attachment 541504 [details] [review]\n>\n> Is e10s explicitly changing how about:blank works, by any chance?\n\nNope, no changes there. The difference in the test seems to happen because the newly added listener touch DOMWindows during that test that wouldn't be touched before, and due to lazily creation they're now created and dispatch these events.\n\n(In reply to comment #4)\n> Could you please add comments for the new entries explaining what they're\n> coming from?\n\nSure, I'll add a small comment and reference this bug #\n\n> \n> Also, note that these tests are not Firefox-specific.  Will the code you're\n> adding run in all Gecko-based browsers that run these tests?  Or just\n> Firefox?\n\nIt will run everywhere, the code is being added to toolkit/content/widgets/browser.xml", "attachment_id": 541504, "tags": [], "time": "2011-06-24T20:13:08Z", "bug_id": 666753, "text": "Comment on attachment 541504\nTest fix?\n\n(In reply to comment #3)\n> Comment on attachment 541504 [details] [review]\n>\n> Is e10s explicitly changing how about:blank works, by any chance?\n\nNope, no changes there. The difference in the test seems to happen because the newly added listener touch DOMWindows during that test that wouldn't be touched before, and due to lazily creation they're now created and dispatch these events.\n\n(In reply to comment #4)\n> Could you please add comments for the new entries explaining what they're\n> coming from?\n\nSure, I'll add a small comment and reference this bug #\n\n> \n> Also, note that these tests are not Firefox-specific.  Will the code you're\n> adding run in all Gecko-based browsers that run these tests?  Or just\n> Firefox?\n\nIt will run everywhere, the code is being added to toolkit/content/widgets/browser.xml", "author": "felipc@gmail.com", "creation_time": "2011-06-24T20:13:08Z", "count": 5, "creator": "felipc@gmail.com", "is_private": false}, {"attachment_id": null, "raw_text": "> It will run everywhere\n\nIn that case, I would prefer that we also change the test to always trigger those initial about:blank creations explicitly, so that it passes whether your other patch is applied or not.", "id": 5554882, "creator": "bzbarsky@mit.edu", "is_private": false, "count": 6, "author": "bzbarsky@mit.edu", "creation_time": "2011-06-24T20:25:38Z", "tags": [], "time": "2011-06-24T20:25:38Z", "bug_id": 666753, "text": "> It will run everywhere\n\nIn that case, I would prefer that we also change the test to always trigger those initial about:blank creations explicitly, so that it passes whether your other patch is applied or not."}, {"is_private": false, "creator": "felipc@gmail.com", "count": 7, "creation_time": "2011-06-25T01:18:42Z", "author": "felipc@gmail.com", "text": "Created attachment 541878\nTest fix\n\nAdded a comment and bug # to the added events\n\nIf possible I'd like to make the test changes in a follow-up because the test itself only issue commands written in docshell-helpers.js, so making modifications will possibly also change other tests that I don't need to handle now..", "bug_id": 666753, "time": "2011-06-25T01:18:42Z", "tags": [], "attachment_id": 541878, "raw_text": "Added a comment and bug # to the added events\n\nIf possible I'd like to make the test changes in a follow-up because the test itself only issue commands written in docshell-helpers.js, so making modifications will possibly also change other tests that I don't need to handle now..", "id": 5555569}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-06-25T01:47:58Z", "tags": [], "time": "2011-06-25T01:47:58Z", "text": "> If possible I'd like to make the test changes in a follow-up.\n\nThe problem is that the moment you land this patch you will send non-Firefox trees orange.\n\n> because the test itself only issue commands written in docshell-helpers.js\n\nI'm suggesting you modify the pages the test loads, not the commands it issues...\n\nFor example, have the \"iframe content #1\" page touch the window inside the iframe right after the <iframe> is parsed and so forth.  Basically, make it so this test passes on Firefox without your other change.", "creator": "bzbarsky@mit.edu", "is_private": false, "id": 5555580, "attachment_id": null, "raw_text": "> If possible I'd like to make the test changes in a follow-up.\n\nThe problem is that the moment you land this patch you will send non-Firefox trees orange.\n\n> because the test itself only issue commands written in docshell-helpers.js\n\nI'm suggesting you modify the pages the test loads, not the commands it issues...\n\nFor example, have the \"iframe content #1\" page touch the window inside the iframe right after the <iframe> is parsed and so forth.  Basically, make it so this test passes on Firefox without your other change.", "bug_id": 666753, "count": 8}, {"count": 9, "bug_id": 666753, "creator": "felipc@gmail.com", "is_private": false, "tags": [], "time": "2011-06-25T01:52:15Z", "text": "(In reply to comment #8)\n> > If possible I'd like to make the test changes in a follow-up.\n> \n> The problem is that the moment you land this patch you will send non-Firefox\n> trees orange.\n\nI don't understand how. Every tree will get both the code and test change, because the change is not Firefox specific.\n\n> \n> > because the test itself only issue commands written in docshell-helpers.js\n> \n> I'm suggesting you modify the pages the test loads, not the commands it\n> issues...\n> \n> For example, have the \"iframe content #1\" page touch the window inside the\n> iframe right after the <iframe> is parsed and so forth.  Basically, make it\n> so this test passes on Firefox without your other change.\n\nok let me try this..", "author": "felipc@gmail.com", "creation_time": "2011-06-25T01:52:15Z", "raw_text": "(In reply to comment #8)\n> > If possible I'd like to make the test changes in a follow-up.\n> \n> The problem is that the moment you land this patch you will send non-Firefox\n> trees orange.\n\nI don't understand how. Every tree will get both the code and test change, because the change is not Firefox specific.\n\n> \n> > because the test itself only issue commands written in docshell-helpers.js\n> \n> I'm suggesting you modify the pages the test loads, not the commands it\n> issues...\n> \n> For example, have the \"iframe content #1\" page touch the window inside the\n> iframe right after the <iframe> is parsed and so forth.  Basically, make it\n> so this test passes on Firefox without your other change.\n\nok let me try this..", "attachment_id": null, "id": 5555584}, {"raw_text": "> Every tree will get both the code and test change\n\nOh, I see.  I misunderstood what you were saying earlier.\n\nI'd still prefer we fix this test to not depend on the browser UI....", "attachment_id": null, "id": 5555597, "count": 10, "creator": "bzbarsky@mit.edu", "is_private": false, "bug_id": 666753, "time": "2011-06-25T02:06:34Z", "tags": [], "text": "> Every tree will get both the code and test change\n\nOh, I see.  I misunderstood what you were saying earlier.\n\nI'd still prefer we fix this test to not depend on the browser UI....", "author": "bzbarsky@mit.edu", "creation_time": "2011-06-25T02:06:34Z"}, {"raw_text": "Ok, made the tests pass by themselves. I couldn't get it to work by waiting for load or DOMContentLoaded into the internal pages.. I never received the events that would cause new windows to be created. But it worked by adding the progress listeners to the test and waiting for the OnStateChange notifications", "attachment_id": 541890, "id": 5555646, "is_private": false, "creator": "felipc@gmail.com", "text": "Created attachment 541890\nTest fix\n\nOk, made the tests pass by themselves. I couldn't get it to work by waiting for load or DOMContentLoaded into the internal pages.. I never received the events that would cause new windows to be created. But it worked by adding the progress listeners to the test and waiting for the OnStateChange notifications", "tags": [], "time": "2011-06-25T03:36:28Z", "creation_time": "2011-06-25T03:36:28Z", "author": "felipc@gmail.com", "count": 11, "bug_id": 666753}, {"id": 5555691, "attachment_id": 541890, "raw_text": "I was thinking something much simpler, but this works too.  ;)\n\nPlease put the comments _before_ the lines they're documenting, though.  So for that first comment:\n\n  // The following pagehide event is for the about:blank synthesized when the\n  // sub-subframe's window is accessed at load start.\n\nand similar for the others.  r=me with that.", "author": "bzbarsky@mit.edu", "creation_time": "2011-06-25T04:58:07Z", "bug_id": 666753, "tags": [], "time": "2011-06-25T04:58:07Z", "text": "Comment on attachment 541890\nTest fix\n\nI was thinking something much simpler, but this works too.  ;)\n\nPlease put the comments _before_ the lines they're documenting, though.  So for that first comment:\n\n  // The following pagehide event is for the about:blank synthesized when the\n  // sub-subframe's window is accessed at load start.\n\nand similar for the others.  r=me with that.", "creator": "bzbarsky@mit.edu", "is_private": false, "count": 12}]}}, "comments": {}}