{"comments": {}, "bugs": {"1631504": {"comments": [{"bug_id": 1631504, "is_private": false, "tags": [], "creator": "iireland@mozilla.com", "time": "2020-04-20T16:54:30Z", "id": 14766951, "author": "iireland@mozilla.com", "attachment_id": null, "raw_text": "For testing purposes, we want to be able to control when/whether we tier up from interpreted to compiled regexps.\n\nAlso, irregexp relies on a bunch of global `FLAG_*` variables for the equivalent of JitOptions. Many of them should just be hardcoded to a specific value, but some of them (particularly the tracing options) are worth hooking up.", "count": 0, "text": "For testing purposes, we want to be able to control when/whether we tier up from interpreted to compiled regexps.\n\nAlso, irregexp relies on a bunch of global `FLAG_*` variables for the equivalent of JitOptions. Many of them should just be hardcoded to a specific value, but some of them (particularly the tracing options) are worth hooking up.", "creation_time": "2020-04-20T16:54:30Z"}, {"creation_time": "2020-04-20T19:09:27Z", "count": 1, "text": "Created attachment 9141822\nBug 1631504: Add a jit option to control the regexp warmup threshold r=mgaudet\n\n\nTo ensure that we get adequate test coverage of compiled regexps without having to add a new testing configuration, I've set it up so that `--baseline-eager` and `--ion-eager` imply `--regexp-warmup-threshold=0`.\n\nThe threshold of 10 continues to be arbitrary. We can do performance tuning later.", "raw_text": "\nTo ensure that we get adequate test coverage of compiled regexps without having to add a new testing configuration, I've set it up so that `--baseline-eager` and `--ion-eager` imply `--regexp-warmup-threshold=0`.\n\nThe threshold of 10 continues to be arbitrary. We can do performance tuning later.", "attachment_id": 9141822, "id": 14767341, "author": "iireland@mozilla.com", "time": "2020-04-20T19:09:27Z", "creator": "iireland@mozilla.com", "tags": [], "is_private": false, "bug_id": 1631504}, {"is_private": false, "bug_id": 1631504, "text": "Created attachment 9141823\nBug 1631504: Implement CanReadUnaligned r=mgaudet\n\n\nIf unaligned loads are allowed, then we can load multiple characters at once and speed up some comparisons.\n\nThe implementation of CanReadUnaligned is taken from the old import (NativeRegExpMacroAssembler::CanReadUnaligned).\n\nDepends on D71634", "attachment_id": 9141823, "id": 14767343, "author": "iireland@mozilla.com", "creator": "iireland@mozilla.com", "time": "2020-04-20T19:09:51Z", "tags": [], "creation_time": "2020-04-20T19:09:51Z", "count": 2, "raw_text": "\nIf unaligned loads are allowed, then we can load multiple characters at once and speed up some comparisons.\n\nThe implementation of CanReadUnaligned is taken from the old import (NativeRegExpMacroAssembler::CanReadUnaligned).\n\nDepends on D71634"}, {"author": "iireland@mozilla.com", "id": 14767344, "attachment_id": 9141824, "text": "Created attachment 9141824\nBug 1631504: Improve over-recursion in more-deterministic builds r=mgaudet\n\n\nV8 has a `correctness_fuzzer_suppressions` flag that it uses for differential fuzzing. Our equivalent is JS_MORE_DETERMINISTIC.\n\nThe code being added to HasOverflowed is taken from RegExpCompiler::CheckOverRecursed in the old import. See bug 1455954.\n\nDepends on D71635", "is_private": false, "bug_id": 1631504, "raw_text": "\nV8 has a `correctness_fuzzer_suppressions` flag that it uses for differential fuzzing. Our equivalent is JS_MORE_DETERMINISTIC.\n\nThe code being added to HasOverflowed is taken from RegExpCompiler::CheckOverRecursed in the old import. See bug 1455954.\n\nDepends on D71635", "count": 3, "creation_time": "2020-04-20T19:10:10Z", "tags": [], "time": "2020-04-20T19:10:10Z", "creator": "iireland@mozilla.com"}, {"raw_text": "\nV8's equivalent to JitOptions is a macro for defining global variables. The shim defines the subset of those variables that are used inside irregexp. We don't have any good reason to modify most of them, so this patch turns them into constants and documents the reasons we aren't exposing them.\n\nThe tracing flags will be hooked up in the next patch.\n\nDepends on D71636", "count": 4, "creation_time": "2020-04-20T19:10:23Z", "tags": [], "creator": "iireland@mozilla.com", "time": "2020-04-20T19:10:23Z", "id": 14767345, "author": "iireland@mozilla.com", "attachment_id": 9141825, "text": "Created attachment 9141825\nBug 1631504: Hard-code and document some flag values r=mgaudet\n\n\nV8's equivalent to JitOptions is a macro for defining global variables. The shim defines the subset of those variables that are used inside irregexp. We don't have any good reason to modify most of them, so this patch turns them into constants and documents the reasons we aren't exposing them.\n\nThe tracing flags will be hooked up in the next patch.\n\nDepends on D71636", "bug_id": 1631504, "is_private": false}, {"creator": "iireland@mozilla.com", "time": "2020-04-20T19:11:24Z", "bug_id": 1631504, "is_private": false, "tags": [], "text": "Created attachment 9141826\nBug 1631504: Add tracing options r=mgaudet\n\n\nV8 comes with a number of tracing options built-in. We might as well make them available for debugging in the shell.\n\n`--regexp-trace-assembler` doesn't do anything yet. Support will be added in the next patch.\n\nDepends on D71637", "count": 5, "creation_time": "2020-04-20T19:11:24Z", "id": 14767347, "author": "iireland@mozilla.com", "raw_text": "\nV8 comes with a number of tracing options built-in. We might as well make them available for debugging in the shell.\n\n`--regexp-trace-assembler` doesn't do anything yet. Support will be added in the next patch.\n\nDepends on D71637", "attachment_id": 9141826}, {"time": "2020-04-20T19:11:27Z", "creator": "iireland@mozilla.com", "tags": [], "count": 6, "creation_time": "2020-04-20T19:11:27Z", "raw_text": "\nRegexp assembler tracing is done using a wrapper that logs the macroassembler API calls.\n\nDepends on D71638", "bug_id": 1631504, "is_private": false, "text": "Created attachment 9141827\nBug 1631504: Implement trace-regexp-assembler r=mgaudet\n\n\nRegexp assembler tracing is done using a wrapper that logs the macroassembler API calls.\n\nDepends on D71638", "author": "iireland@mozilla.com", "id": 14767348, "attachment_id": 9141827}, {"bug_id": 1631504, "is_private": false, "id": 14767862, "author": "pulsebot@bots.tld", "attachment_id": null, "text": "Pushed by iireland@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/f2e2d758a0ed\nAdd a jit option to control the regexp warmup threshold r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/0a1e9d5bef6d\nImplement CanReadUnaligned r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/1e3e2417a0a2\nImprove over-recursion in more-deterministic builds r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/1db8625a629c\nHard-code and document some flag values r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/9d77534b5152\nAdd tracing options r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/342710b2598d\nImplement trace-regexp-assembler r=mgaudet", "tags": [], "time": "2020-04-20T22:20:17Z", "creator": "pulsebot@bots.tld", "raw_text": "Pushed by iireland@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/f2e2d758a0ed\nAdd a jit option to control the regexp warmup threshold r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/0a1e9d5bef6d\nImplement CanReadUnaligned r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/1e3e2417a0a2\nImprove over-recursion in more-deterministic builds r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/1db8625a629c\nHard-code and document some flag values r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/9d77534b5152\nAdd tracing options r=mgaudet\nhttps://hg.mozilla.org/integration/autoland/rev/342710b2598d\nImplement trace-regexp-assembler r=mgaudet", "count": 7, "creation_time": "2020-04-20T22:20:17Z"}, {"bug_id": 1631504, "is_private": false, "text": "https://hg.mozilla.org/mozilla-central/rev/f2e2d758a0ed\nhttps://hg.mozilla.org/mozilla-central/rev/0a1e9d5bef6d\nhttps://hg.mozilla.org/mozilla-central/rev/1e3e2417a0a2\nhttps://hg.mozilla.org/mozilla-central/rev/1db8625a629c\nhttps://hg.mozilla.org/mozilla-central/rev/9d77534b5152\nhttps://hg.mozilla.org/mozilla-central/rev/342710b2598d", "author": "ncsoregi@mozilla.com", "id": 14768164, "attachment_id": null, "time": "2020-04-21T02:12:36Z", "creator": "ncsoregi@mozilla.com", "tags": ["bugherder"], "count": 8, "creation_time": "2020-04-21T02:12:36Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/f2e2d758a0ed\nhttps://hg.mozilla.org/mozilla-central/rev/0a1e9d5bef6d\nhttps://hg.mozilla.org/mozilla-central/rev/1e3e2417a0a2\nhttps://hg.mozilla.org/mozilla-central/rev/1db8625a629c\nhttps://hg.mozilla.org/mozilla-central/rev/9d77534b5152\nhttps://hg.mozilla.org/mozilla-central/rev/342710b2598d"}]}}}