{"comments": {}, "bugs": {"1633935": {"comments": [{"id": 14785284, "author": "CuveeHsu@gmail.com", "raw_text": "", "attachment_id": null, "text": "", "count": 0, "creation_time": "2020-04-28T23:34:34Z", "is_private": false, "bug_id": 1633935, "tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-04-28T23:34:34Z"}, {"bug_id": 1633935, "is_private": false, "id": 14792551, "author": "CuveeHsu@gmail.com", "attachment_id": 9145173, "text": "Created attachment 9145173\nBug 1633935 - P1 allow OnStartRequest go thru pBg IPC, r=mayhemer", "tags": [], "time": "2020-05-02T03:35:57Z", "creator": "CuveeHsu@gmail.com", "raw_text": "", "count": 1, "creation_time": "2020-05-02T03:35:57Z"}, {"tags": [], "time": "2020-05-02T03:36:33Z", "creator": "CuveeHsu@gmail.com", "raw_text": "Upload a WIP to see if we suffer from buzy pContent\nWe dispatch the OnStartRequest to background thread, thru pBackground and dispatch back to main thread content child", "creation_time": "2020-05-02T03:36:33Z", "count": 2, "bug_id": 1633935, "is_private": false, "attachment_id": null, "author": "CuveeHsu@gmail.com", "id": 14792552, "text": "Upload a WIP to see if we suffer from buzy pContent\nWe dispatch the OnStartRequest to background thread, thru pBackground and dispatch back to main thread content child"}, {"attachment_id": null, "raw_text": "[Talos](https://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=try&newRevision=601859b3bcaf11ec80004a4da0f5db28ff3bc245&framework=1&selectedTimeRange=172800): not significantly better or worse. Let's fix the [oranges](https://treeherder.mozilla.org/#/jobs?repo=try&fromchange=54cd20930c28b22e9d5fd561a4aea85acd63d0f1) and have more samples on that patch.", "id": 14793047, "author": "CuveeHsu@gmail.com", "creation_time": "2020-05-03T01:17:38Z", "count": 3, "text": "[Talos](https://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=try&newRevision=601859b3bcaf11ec80004a4da0f5db28ff3bc245&framework=1&selectedTimeRange=172800): not significantly better or worse. Let's fix the [oranges](https://treeherder.mozilla.org/#/jobs?repo=try&fromchange=54cd20930c28b22e9d5fd561a4aea85acd63d0f1) and have more samples on that patch.", "tags": [], "bug_id": 1633935, "is_private": false, "creator": "CuveeHsu@gmail.com", "time": "2020-05-03T01:17:38Z"}, {"time": "2020-05-07T05:26:39Z", "creator": "CuveeHsu@gmail.com", "tags": [], "count": 4, "creation_time": "2020-05-07T05:26:39Z", "raw_text": "", "bug_id": 1633935, "is_private": false, "text": "Created attachment 9146400\nBug 1633935 - P2 retargeted ODA should be queued by delay mStartReceived", "id": 14801887, "author": "CuveeHsu@gmail.com", "attachment_id": 9146400}, {"tags": ["obsolete"], "is_private": false, "bug_id": 1633935, "creator": "CuveeHsu@gmail.com", "time": "2020-05-07T05:42:42Z", "attachment_id": null, "raw_text": "P2 still needs some investigation (at least more comment) but I'd like to leave some note here:\n\nhttps://searchfox.org/mozilla-central/rev/dc4560dcaafd79375b9411fdbbaaebb0a59a93ac/netwerk/protocol/http/HttpChannelChild.cpp#432-436\n```\n    // Child's mEventQ is to control the execution order of the IPC messages\n    // from both main thread IPDL and PBackground IPDL.\n    // To guarantee the ordering, PBackground IPC messages that are sent after\n    // OnStartRequest will be throttled until OnStartRequest hits the Child's\n    // mEventQ.\n```\nThis is not true if OnStartRequest is sent thru pBG if RetargetDeliveryTo is called in OnStartRequest\n(1) [socket thread] HttpBgChannelChild::RecvOnStartRequest ==> OnStartRequest hits mEventQ\n(2) [main thread] HttpChannelChild::OnStartRequest\n(2-1) [main thread]   HttpChannelChild::RetargetDeliveryTo\n(3) [socket thread] HttpBgChannelChild::RecvOnTransportAndData\n(3-1) [socket thread] HttpChannelChild::ProcessOnTransportAndData\n\nHowever, (3) could happen before (2-1) and  we might put the wrong ODAEvent to mQueue\nhttps://searchfox.org/mozilla-central/rev/dc4560dcaafd79375b9411fdbbaaebb0a59a93ac/netwerk/protocol/http/HttpChannelChild.cpp#769-779\n\nI know that the event target is getter lambda, but it seems that we do not guarantee to get the event target right as we dispatch the event.\n\nEdit: the lambda works well. Please ignore this comment.", "id": 14801902, "author": "CuveeHsu@gmail.com", "creation_time": "2020-05-07T05:42:42Z", "text": "P2 still needs some investigation (at least more comment) but I'd like to leave some note here:\n\nhttps://searchfox.org/mozilla-central/rev/dc4560dcaafd79375b9411fdbbaaebb0a59a93ac/netwerk/protocol/http/HttpChannelChild.cpp#432-436\n```\n    // Child's mEventQ is to control the execution order of the IPC messages\n    // from both main thread IPDL and PBackground IPDL.\n    // To guarantee the ordering, PBackground IPC messages that are sent after\n    // OnStartRequest will be throttled until OnStartRequest hits the Child's\n    // mEventQ.\n```\nThis is not true if OnStartRequest is sent thru pBG if RetargetDeliveryTo is called in OnStartRequest\n(1) [socket thread] HttpBgChannelChild::RecvOnStartRequest ==> OnStartRequest hits mEventQ\n(2) [main thread] HttpChannelChild::OnStartRequest\n(2-1) [main thread]   HttpChannelChild::RetargetDeliveryTo\n(3) [socket thread] HttpBgChannelChild::RecvOnTransportAndData\n(3-1) [socket thread] HttpChannelChild::ProcessOnTransportAndData\n\nHowever, (3) could happen before (2-1) and  we might put the wrong ODAEvent to mQueue\nhttps://searchfox.org/mozilla-central/rev/dc4560dcaafd79375b9411fdbbaaebb0a59a93ac/netwerk/protocol/http/HttpChannelChild.cpp#769-779\n\nI know that the event target is getter lambda, but it seems that we do not guarantee to get the event target right as we dispatch the event.\n\nEdit: the lambda works well. Please ignore this comment.", "count": 5}, {"bug_id": 1633935, "is_private": false, "attachment_id": null, "id": 14805889, "author": "CuveeHsu@gmail.com", "text": "Now OnStartRequest is way faster than other sink events which is thru pHttpChannel.\nI'm cooking a patch to handle this.", "tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-05-09T01:51:55Z", "raw_text": "Now OnStartRequest is way faster than other sink events which is thru pHttpChannel.\nI'm cooking a patch to handle this.", "creation_time": "2020-05-09T01:51:55Z", "count": 6}, {"raw_text": "\nOnProgress/OnStatus are allowed to be sent before OnStartRequest. However, when we send\nOnStartRequest through pHttpBackgroundChannel, the order won't reserve since OnProgress/OnStatus\nare sent via pHttpChannel.\n\nFor performance, `HttpChannelChild::ProgressOnStartRequest` will call the OnProgress/OnStatus if\nthose events haven't received, indicated by `PHttpBackgroundChannel::OnStartRequest`.", "count": 7, "creation_time": "2020-05-14T02:29:14Z", "tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-05-14T02:29:14Z", "author": "CuveeHsu@gmail.com", "id": 14818434, "attachment_id": 9148228, "text": "Created attachment 9148228\nBug 1633935 - P2 let HttpChannelBackgroundChild know the sink events before OnStartRequest\n\n\nOnProgress/OnStatus are allowed to be sent before OnStartRequest. However, when we send\nOnStartRequest through pHttpBackgroundChannel, the order won't reserve since OnProgress/OnStatus\nare sent via pHttpChannel.\n\nFor performance, `HttpChannelChild::ProgressOnStartRequest` will call the OnProgress/OnStatus if\nthose events haven't received, indicated by `PHttpBackgroundChannel::OnStartRequest`.", "is_private": false, "bug_id": 1633935}, {"text": "Created attachment 9148234\nIllustration of Patch 1\n\nThe yellow circle is where the patch tried to change sending OnStartRequest from `PHttpChannel` to `PHttpBackgroundChannel`\nThe white arrow shows we have performance gain since the ODA/OnStop is not bound by `PHttpChannel` (except AsyncOpen) anymore.", "id": 14818505, "author": "CuveeHsu@gmail.com", "attachment_id": 9148234, "bug_id": 1633935, "is_private": false, "count": 8, "creation_time": "2020-05-14T03:14:37Z", "raw_text": "The yellow circle is where the patch tried to change sending OnStartRequest from `PHttpChannel` to `PHttpBackgroundChannel`\nThe white arrow shows we have performance gain since the ODA/OnStop is not bound by `PHttpChannel` (except AsyncOpen) anymore.", "time": "2020-05-14T03:14:37Z", "creator": "CuveeHsu@gmail.com", "tags": []}, {"time": "2020-05-14T03:36:03Z", "creator": "CuveeHsu@gmail.com", "tags": [], "creation_time": "2020-05-14T03:36:03Z", "count": 9, "raw_text": "Now OnStartRequest is sent thru pBg (behind a pref)\nTherefore, OnStartRequest could be faster than OnProgress/OnStatus for upload.\n\nPer this graph, we can see we can let our consumer receive OnProgress/OnStatus earlier and keep the order as well.", "is_private": false, "bug_id": 1633935, "text": "Created attachment 9148235\nIllustration of Patch 2\n\nNow OnStartRequest is sent thru pBg (behind a pref)\nTherefore, OnStartRequest could be faster than OnProgress/OnStatus for upload.\n\nPer this graph, we can see we can let our consumer receive OnProgress/OnStatus earlier and keep the order as well.", "attachment_id": 9148235, "id": 14818516, "author": "CuveeHsu@gmail.com"}, {"text": "Comment on attachment 9148235\nIllustration of Patch 2\n\nAfter discussion with :mayhemer, we'd like to disaptch `OnProgree`/`OnStatus` through pBackground.", "author": "CuveeHsu@gmail.com", "id": 14829194, "attachment_id": 9148235, "bug_id": 1633935, "is_private": false, "count": 10, "creation_time": "2020-05-18T19:15:14Z", "raw_text": "After discussion with :mayhemer, we'd like to disaptch `OnProgree`/`OnStatus` through pBackground.", "time": "2020-05-18T19:15:14Z", "creator": "CuveeHsu@gmail.com", "tags": []}, {"bug_id": 1633935, "is_private": false, "text": "For the OnProgress/OnStatus through pHttpBackgroundChannel, \nneed  another patch to let marti-part channel send all IPC(OnS*R, ODA) through pHttpBackgroundChannel as well (now  pHttpChannel.)", "attachment_id": null, "author": "CuveeHsu@gmail.com", "id": 14829764, "time": "2020-05-19T00:45:02Z", "creator": "CuveeHsu@gmail.com", "tags": [], "creation_time": "2020-05-19T00:45:02Z", "count": 11, "raw_text": "For the OnProgress/OnStatus through pHttpBackgroundChannel, \nneed  another patch to let marti-part channel send all IPC(OnS*R, ODA) through pHttpBackgroundChannel as well (now  pHttpChannel.)"}, {"is_private": false, "bug_id": 1633935, "text": "Created attachment 9151946\nBug 1633935 - P2 remove OnStartRequestSent since OnStartRequest is passed thru pBg, r=mayhemer\n\n\n\nDepends on D73529", "author": "CuveeHsu@gmail.com", "id": 14845434, "attachment_id": 9151946, "time": "2020-05-27T01:31:33Z", "creator": "CuveeHsu@gmail.com", "tags": [], "count": 12, "creation_time": "2020-05-27T01:31:33Z", "raw_text": "\n\nDepends on D73529"}, {"is_private": false, "bug_id": 1633935, "text": "Created attachment 9151947\nBug 1633935 - P3 send OS*R and ODA via pHttpChannel for multipart channel, r=mayhemer,mattwoodrow\n\n\n\nDepends on D76969", "attachment_id": 9151947, "id": 14845435, "author": "CuveeHsu@gmail.com", "creator": "CuveeHsu@gmail.com", "time": "2020-05-27T01:32:06Z", "tags": [], "creation_time": "2020-05-27T01:32:06Z", "count": 13, "raw_text": "\n\nDepends on D76969"}, {"tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-05-27T01:32:53Z", "raw_text": "\nWe move OnStartRequest from PHttpChannel to PHttpBackgroundChannel, thus adjusting\nmessage-metadata.ini\n\nDepends on D76970", "creation_time": "2020-05-27T01:32:53Z", "count": 14, "is_private": false, "bug_id": 1633935, "attachment_id": 9151948, "author": "CuveeHsu@gmail.com", "id": 14845436, "text": "Created attachment 9151948\nBug 1633935 - P4 Remove On[Start|Stop]Request/OnTransportAndData in PHttpChannel, r=mayhemer,nika\n\n\nWe move OnStartRequest from PHttpChannel to PHttpBackgroundChannel, thus adjusting\nmessage-metadata.ini\n\nDepends on D76970"}, {"time": "2020-05-27T01:34:05Z", "creator": "CuveeHsu@gmail.com", "bug_id": 1633935, "is_private": false, "tags": [], "text": "Created attachment 9151949\nBug 1633935 - P5 allow OnProgress/OnStatus going thru pBg IPC, r=mayhemer\n\n\n\nDepends on D76971", "count": 15, "creation_time": "2020-05-27T01:34:05Z", "author": "CuveeHsu@gmail.com", "id": 14845438, "attachment_id": 9151949, "raw_text": "\n\nDepends on D76971"}, {"time": "2020-05-27T01:34:47Z", "creator": "CuveeHsu@gmail.com", "tags": [], "count": 16, "creation_time": "2020-05-27T01:34:47Z", "raw_text": "\n\nDepends on D76972", "bug_id": 1633935, "is_private": false, "text": "Created attachment 9151950\nBug 1633935 - P6 Skip one media track failure caused by performance gain, r=alwu\n\n\n\nDepends on D76972", "id": 14845439, "author": "CuveeHsu@gmail.com", "attachment_id": 9151950}, {"bug_id": 1633935, "is_private": false, "author": "CuveeHsu@gmail.com", "id": 14845440, "attachment_id": 9151951, "text": "Created attachment 9151951\nBug 1633935 - P7 handle redundant hint for IPC ODA, r=kershaw,mayhemer\n\n\n\nDepends on D76973", "tags": [], "time": "2020-05-27T01:35:35Z", "creator": "CuveeHsu@gmail.com", "raw_text": "\n\nDepends on D76973", "count": 17, "creation_time": "2020-05-27T01:35:35Z"}, {"creator": "CuveeHsu@gmail.com", "time": "2020-05-27T01:36:19Z", "tags": [], "count": 18, "creation_time": "2020-05-27T01:36:19Z", "raw_text": "\n\nDepends on D76974", "is_private": false, "bug_id": 1633935, "text": "Created attachment 9151952\nBug 1633935 - P8 remove the synchronizing in HttpBackgroundChannelChild, r=mayhemer\n\n\n\nDepends on D76974", "id": 14845441, "author": "CuveeHsu@gmail.com", "attachment_id": 9151952}, {"is_private": false, "bug_id": 1633935, "tags": [], "time": "2020-05-27T02:59:28Z", "creator": "CuveeHsu@gmail.com", "id": 14845512, "author": "CuveeHsu@gmail.com", "raw_text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=e0a56a68d72b542717f026072794b2a5f02def0a\n\nOrange tests/dom/canvas/test/webgl-conf/generated/test_2_conformance__textures__image_bitmap_from_video*", "attachment_id": null, "text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=e0a56a68d72b542717f026072794b2a5f02def0a\n\nOrange tests/dom/canvas/test/webgl-conf/generated/test_2_conformance__textures__image_bitmap_from_video*", "count": 19, "creation_time": "2020-05-27T02:59:28Z"}, {"creation_time": "2020-05-28T03:37:19Z", "text": "(In reply to Junior from comment #19)\n> https://treeherder.mozilla.org/#/jobs?repo=try&revision=e0a56a68d72b542717f026072794b2a5f02def0a\n> \n> Orange tests/dom/canvas/test/webgl-conf/generated/test_2_conformance__textures__image_bitmap_from_video*\n\nThis patches works well\nhttps://hg.mozilla.org/try/rev/637d0f99e475c4305a2847600eda1a8ee25cf5d9\nin treeherder\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=b5d593ad3518f8bd1d338f449c6a0e89828cba74\ngiven we don\u2019t support options in createBitMap, we\u2019re having the same test coverage.", "count": 20, "attachment_id": null, "raw_text": "(In reply to Junior from comment #19)\n> https://treeherder.mozilla.org/#/jobs?repo=try&revision=e0a56a68d72b542717f026072794b2a5f02def0a\n> \n> Orange tests/dom/canvas/test/webgl-conf/generated/test_2_conformance__textures__image_bitmap_from_video*\n\nThis patches works well\nhttps://hg.mozilla.org/try/rev/637d0f99e475c4305a2847600eda1a8ee25cf5d9\nin treeherder\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=b5d593ad3518f8bd1d338f449c6a0e89828cba74\ngiven we don\u2019t support options in createBitMap, we\u2019re having the same test coverage.", "author": "CuveeHsu@gmail.com", "id": 14848626, "creator": "CuveeHsu@gmail.com", "time": "2020-05-28T03:37:19Z", "tags": [], "is_private": false, "bug_id": 1633935}, {"is_private": false, "bug_id": 1633935, "attachment_id": null, "id": 14848629, "author": "CuveeHsu@gmail.com", "text": "Hello Ehsan,\nThis bug is to sending OnStartRequest via PHttpBackgroundChannel instead of PHttpChannel.\nHence, the child process will receive OnStartRequest way earlier than before.\n\nI have a question about permission:\n\nWe're hitting this assertion after rebasing from May 22 to May 26.\nhttps://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#2207\n\nHere is an example.\nhttps://treeherder.mozilla.org/logviewer.html#/jobs?job_id=304017626&repo=try&lineNumber=18856\n\nMy question is, should we wait for anything in child process like [this](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#1632) to avoid this assertion?", "tags": [], "time": "2020-05-28T03:46:18Z", "creator": "CuveeHsu@gmail.com", "raw_text": "Hello Ehsan,\nThis bug is to sending OnStartRequest via PHttpBackgroundChannel instead of PHttpChannel.\nHence, the child process will receive OnStartRequest way earlier than before.\n\nI have a question about permission:\n\nWe're hitting this assertion after rebasing from May 22 to May 26.\nhttps://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#2207\n\nHere is an example.\nhttps://treeherder.mozilla.org/logviewer.html#/jobs?job_id=304017626&repo=try&lineNumber=18856\n\nMy question is, should we wait for anything in child process like [this](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#1632) to avoid this assertion?", "creation_time": "2020-05-28T03:46:18Z", "count": 21}, {"raw_text": "Hello Matt,\nI'm hitting [this assertion](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/protocol/http/HttpChannelChild.cpp#677) for RecvRedirectToRealChannel case.\nI believe it's a switch process redirect instead of 301/302/... HTTP redirect, right?\n\nLooks like OnStartRequest happens before [CompleteRedirectSetup]( \nhttps://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/ipc/DocumentChannelChild.cpp#279\n)\nFor document channel case, should we wait for CompleteRedirectSetup once HttpChannelChild::ConnectParent is called?\nIs it possible that there's a cancel from DocumentChannel between the two?", "creation_time": "2020-05-28T05:05:50Z", "count": 22, "tags": [], "time": "2020-05-28T05:05:50Z", "creator": "CuveeHsu@gmail.com", "attachment_id": null, "author": "CuveeHsu@gmail.com", "id": 14848658, "text": "Hello Matt,\nI'm hitting [this assertion](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/protocol/http/HttpChannelChild.cpp#677) for RecvRedirectToRealChannel case.\nI believe it's a switch process redirect instead of 301/302/... HTTP redirect, right?\n\nLooks like OnStartRequest happens before [CompleteRedirectSetup]( \nhttps://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/ipc/DocumentChannelChild.cpp#279\n)\nFor document channel case, should we wait for CompleteRedirectSetup once HttpChannelChild::ConnectParent is called?\nIs it possible that there's a cancel from DocumentChannel between the two?", "is_private": false, "bug_id": 1633935}, {"time": "2020-05-28T22:50:52Z", "creator": "CuveeHsu@gmail.com", "tags": [], "creation_time": "2020-05-28T22:50:52Z", "count": 23, "raw_text": "(In reply to Junior from comment #21)\n> Hello Ehsan,\n> This bug is to sending OnStartRequest via PHttpBackgroundChannel instead of PHttpChannel.\n> Hence, the child process will receive OnStartRequest way earlier than before.\n> \n> I have a question about permission:\n> \n> We're hitting this assertion after rebasing from May 22 to May 26.\n> https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#2207\n> \n> Here is an example.\n> https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=304017626&repo=try&lineNumber=18856\n> \n> My question is, should we wait for anything in child process like [this](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#1632) to avoid this assertion?\n\nHere's the pernosco link\n https://pernos.co/debug/AjAdWj5veN999C48yQXyLQ/index.html", "is_private": false, "bug_id": 1633935, "text": "(In reply to Junior from comment #21)\n> Hello Ehsan,\n> This bug is to sending OnStartRequest via PHttpBackgroundChannel instead of PHttpChannel.\n> Hence, the child process will receive OnStartRequest way earlier than before.\n> \n> I have a question about permission:\n> \n> We're hitting this assertion after rebasing from May 22 to May 26.\n> https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#2207\n> \n> Here is an example.\n> https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=304017626&repo=try&lineNumber=18856\n> \n> My question is, should we wait for anything in child process like [this](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#1632) to avoid this assertion?\n\nHere's the pernosco link\n https://pernos.co/debug/AjAdWj5veN999C48yQXyLQ/index.html", "attachment_id": null, "id": 14850638, "author": "CuveeHsu@gmail.com"}, {"tags": [], "time": "2020-05-29T02:48:11Z", "creator": "CuveeHsu@gmail.com", "raw_text": "(In reply to Junior from comment #22)\n> Hello Matt,\n> I'm hitting [this assertion](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/protocol/http/HttpChannelChild.cpp#677) for RecvRedirectToRealChannel case.\n> I believe it's a switch process redirect instead of 301/302/... HTTP redirect, right?\n> \n> Looks like OnStartRequest happens before [CompleteRedirectSetup]( \n> https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/ipc/DocumentChannelChild.cpp#279\n> )\n> For document channel case, should we wait for CompleteRedirectSetup once HttpChannelChild::ConnectParent is called?\n> Is it possible that there's a cancel from DocumentChannel between the two?\n\nIt works to suspend EventQ in `HttpChannelChild::ConnectParent` and resume in HttpChannelChild::CompleteRedirectSetup`\nSHould be fine even there's a cancel between them. Aborter would generate the OnStart/OnStop.", "creation_time": "2020-05-29T02:48:11Z", "count": 24, "is_private": false, "bug_id": 1633935, "attachment_id": null, "author": "CuveeHsu@gmail.com", "id": 14850838, "text": "(In reply to Junior from comment #22)\n> Hello Matt,\n> I'm hitting [this assertion](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/protocol/http/HttpChannelChild.cpp#677) for RecvRedirectToRealChannel case.\n> I believe it's a switch process redirect instead of 301/302/... HTTP redirect, right?\n> \n> Looks like OnStartRequest happens before [CompleteRedirectSetup]( \n> https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/netwerk/ipc/DocumentChannelChild.cpp#279\n> )\n> For document channel case, should we wait for CompleteRedirectSetup once HttpChannelChild::ConnectParent is called?\n> Is it possible that there's a cancel from DocumentChannel between the two?\n\nIt works to suspend EventQ in `HttpChannelChild::ConnectParent` and resume in HttpChannelChild::CompleteRedirectSetup`\nSHould be fine even there's a cancel between them. Aborter would generate the OnStart/OnStop."}, {"creator": "CuveeHsu@gmail.com", "time": "2020-05-29T03:35:23Z", "tags": [], "creation_time": "2020-05-29T03:35:23Z", "count": 25, "raw_text": "(In reply to Junior from comment #23)\n> (In reply to Junior from comment #21)\n> > Hello Ehsan,\n> > This bug is to sending OnStartRequest via PHttpBackgroundChannel instead of PHttpChannel.\n> > Hence, the child process will receive OnStartRequest way earlier than before.\n> > \n> > I have a question about permission:\n> > \n> > We're hitting this assertion after rebasing from May 22 to May 26.\n> > https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#2207\n> > \n> > Here is an example.\n> > https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=304017626&repo=try&lineNumber=18856\n> > \n> > My question is, should we wait for anything in child process like [this](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#1632) to avoid this assertion?\n> \n> Here's the pernosco link\n>  https://pernos.co/debug/AjAdWj5veN999C48yQXyLQ/index.html\n\nHere's my theory:\nhttps://searchfox.org/mozilla-central/source/netwerk/protocol/http/HttpChannelParent.cpp#1404-1413\n\nPer comment, \"Send down any permissions which are relevant to this URL if we are performing a document load. \" which is just happen before SendOnStartRequest. \nThe permission update sequence is \n\n```\nHttpChannelParent::OnStartRequest\nContentParent::AboutToLoadHttpFtpDocumentForChild\nContentParent::TransmitPermissionsForPrincipal\nContentParent::EnsurePermissionsByKey\nPContentParent::SendSetPermissionsWithKey\n```\nHowever, SendSetPermissionsWithKey is pContent, which could be later than SendOnStartRequest via PHttpChannelBackgroud.\nI don't have a good solution at this moment. Ideally we should bring the permission information through SendOnStartRequest to update the Permission manager in content process.\n\nKeep ni? to see if Ehsan has some idea.", "is_private": false, "bug_id": 1633935, "text": "(In reply to Junior from comment #23)\n> (In reply to Junior from comment #21)\n> > Hello Ehsan,\n> > This bug is to sending OnStartRequest via PHttpBackgroundChannel instead of PHttpChannel.\n> > Hence, the child process will receive OnStartRequest way earlier than before.\n> > \n> > I have a question about permission:\n> > \n> > We're hitting this assertion after rebasing from May 22 to May 26.\n> > https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#2207\n> > \n> > Here is an example.\n> > https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=304017626&repo=try&lineNumber=18856\n> > \n> > My question is, should we wait for anything in child process like [this](https://searchfox.org/mozilla-central/rev/bc3600def806859c31b2c7ac06e3d69271052a89/extensions/permissions/PermissionManager.cpp#1632) to avoid this assertion?\n> \n> Here's the pernosco link\n>  https://pernos.co/debug/AjAdWj5veN999C48yQXyLQ/index.html\n\nHere's my theory:\nhttps://searchfox.org/mozilla-central/source/netwerk/protocol/http/HttpChannelParent.cpp#1404-1413\n\nPer comment, \"Send down any permissions which are relevant to this URL if we are performing a document load. \" which is just happen before SendOnStartRequest. \nThe permission update sequence is \n\n```\nHttpChannelParent::OnStartRequest\nContentParent::AboutToLoadHttpFtpDocumentForChild\nContentParent::TransmitPermissionsForPrincipal\nContentParent::EnsurePermissionsByKey\nPContentParent::SendSetPermissionsWithKey\n```\nHowever, SendSetPermissionsWithKey is pContent, which could be later than SendOnStartRequest via PHttpChannelBackgroud.\nI don't have a good solution at this moment. Ideally we should bring the permission information through SendOnStartRequest to update the Permission manager in content process.\n\nKeep ni? to see if Ehsan has some idea.", "attachment_id": null, "author": "CuveeHsu@gmail.com", "id": 14850851}, {"bug_id": 1633935, "is_private": false, "attachment_id": null, "id": 14852884, "author": "CuveeHsu@gmail.com", "text": "Let's wait for the PContent::SendSetPermissionsWithKey given lots of orange are still there and do the optimization later. \n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=6a275586f4e5258e255d7081149ed4d14a2a3e02", "tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-05-30T04:54:33Z", "raw_text": "Let's wait for the PContent::SendSetPermissionsWithKey given lots of orange are still there and do the optimization later. \n\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=6a275586f4e5258e255d7081149ed4d14a2a3e02", "creation_time": "2020-05-30T04:54:33Z", "count": 26}, {"time": "2020-06-02T02:30:10Z", "creator": "CuveeHsu@gmail.com", "tags": [], "bug_id": 1633935, "is_private": false, "creation_time": "2020-06-02T02:30:10Z", "text": "> ```\n> HttpChannelParent::OnStartRequest\n> ContentParent::AboutToLoadHttpFtpDocumentForChild\n> ContentParent::TransmitPermissionsForPrincipal\n> ContentParent::EnsurePermissionsByKey\n> PContentParent::SendSetPermissionsWithKey\n> ```\n> However, SendSetPermissionsWithKey is pContent, which could be later than SendOnStartRequest via PHttpChannelBackgroud.\n> I don't have a good solution at this moment. Ideally we should bring the permission information through SendOnStartRequest to update the Permission manager in content process.\n> \n\nSimiliar situation with cookie\n```\nContentParent::AboutToLoadHttpFtpDocumentForChild\nContentParent::UpdateCookieStatus\nCookieServiceParent::TrackCookieLoad\nPCookieServiceParent::SendTrackCookiesLoad\n```\n\nTherefore, let's wait for another main thread event for a document load. \n\nHowever, what's worse is `Set-Cookie` response header is another PContent IPC\n```\nnsHttpChannel::ContinueProcessResponse1\nHttpBaseChannel::SetCookie\nHttpBaseChannel::NotifySetCookie\nCookieStorage::AddCookie\nCookieStorage::NotifyChange(\"cookie-changed\")\nContentParent::Observe\nCookieServiceParent::AddCookie\nPCookieServiceParent::SendAddCookie\n```\n\nWould need a decent amount of work to OMT `Set-Cookie`", "count": 27, "attachment_id": null, "raw_text": "> ```\n> HttpChannelParent::OnStartRequest\n> ContentParent::AboutToLoadHttpFtpDocumentForChild\n> ContentParent::TransmitPermissionsForPrincipal\n> ContentParent::EnsurePermissionsByKey\n> PContentParent::SendSetPermissionsWithKey\n> ```\n> However, SendSetPermissionsWithKey is pContent, which could be later than SendOnStartRequest via PHttpChannelBackgroud.\n> I don't have a good solution at this moment. Ideally we should bring the permission information through SendOnStartRequest to update the Permission manager in content process.\n> \n\nSimiliar situation with cookie\n```\nContentParent::AboutToLoadHttpFtpDocumentForChild\nContentParent::UpdateCookieStatus\nCookieServiceParent::TrackCookieLoad\nPCookieServiceParent::SendTrackCookiesLoad\n```\n\nTherefore, let's wait for another main thread event for a document load. \n\nHowever, what's worse is `Set-Cookie` response header is another PContent IPC\n```\nnsHttpChannel::ContinueProcessResponse1\nHttpBaseChannel::SetCookie\nHttpBaseChannel::NotifySetCookie\nCookieStorage::AddCookie\nCookieStorage::NotifyChange(\"cookie-changed\")\nContentParent::Observe\nCookieServiceParent::AddCookie\nPCookieServiceParent::SendAddCookie\n```\n\nWould need a decent amount of work to OMT `Set-Cookie`", "author": "CuveeHsu@gmail.com", "id": 14857188}, {"tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-06-02T03:19:33Z", "raw_text": "\nGiven options in createImageBitmap is not supported, the test coverage is the same.\n\nDepends on D76973", "count": 28, "creation_time": "2020-06-02T03:19:33Z", "bug_id": 1633935, "is_private": false, "id": 14857209, "author": "CuveeHsu@gmail.com", "attachment_id": 9153314, "text": "Created attachment 9153314\nBug 1633935 - P7 refactor bitmap test, r=jgilbert\n\n\nGiven options in createImageBitmap is not supported, the test coverage is the same.\n\nDepends on D76973"}, {"count": 29, "creation_time": "2020-06-02T03:20:08Z", "raw_text": "\n\nDepends on D77749", "time": "2020-06-02T03:20:08Z", "creator": "CuveeHsu@gmail.com", "tags": [], "text": "Created attachment 9153315\nBug 1633935 - P8 suspend event queue in HttpChannelChild which needs listener for redirection, r=mayhemer\n\n\n\nDepends on D77749", "id": 14857211, "author": "CuveeHsu@gmail.com", "attachment_id": 9153315, "is_private": false, "bug_id": 1633935}, {"raw_text": "\n\nDepends on D77750", "count": 30, "creation_time": "2020-06-02T03:21:29Z", "tags": [], "time": "2020-06-02T03:21:29Z", "creator": "CuveeHsu@gmail.com", "id": 14857214, "author": "CuveeHsu@gmail.com", "attachment_id": 9153316, "text": "Created attachment 9153316\nBug 1633935 - P9 send OnAfterLastPart via pBg IPC to avoid race between OS*R, r=mayhemer\n\n\n\nDepends on D77750", "is_private": false, "bug_id": 1633935}, {"creator": "CuveeHsu@gmail.com", "time": "2020-06-02T03:28:19Z", "tags": [], "bug_id": 1633935, "is_private": false, "creation_time": "2020-06-02T03:28:19Z", "count": 31, "text": "Created attachment 9153317\nBug 1633935 - P10 wait PHttpChannel::OnStartRequestSent for permission/cookie update from parent, r=mayhemer\n\n\n\nDepends on D77751", "raw_text": "\n\nDepends on D77751", "attachment_id": 9153317, "id": 14857250, "author": "CuveeHsu@gmail.com"}, {"time": "2020-06-10T16:26:16Z", "creator": "CuveeHsu@gmail.com", "tags": [], "count": 32, "creation_time": "2020-06-10T16:26:16Z", "raw_text": "ni? for asking review in comment 28", "bug_id": 1633935, "is_private": false, "text": "ni? for asking review in comment 28", "author": "CuveeHsu@gmail.com", "id": 14874473, "attachment_id": null}, {"creation_time": "2020-06-13T02:25:49Z", "count": 33, "text": "Created attachment 9156470\nBug 1633935 - P11 Move classification IPC methods back to PHttpChannel. r=mayhemer\n\n\nBug 1015466 move them from PContent to Pbg since it believes those events are fine\nto received before OnStopRequest. Bug 1588241 move it back to PContent since those\nevents are before OnStartRequest.\n\nNow we're moving OnStartRequest to pBg, so here's another ping-pong time :)\n\nDepends on D77752", "raw_text": "\nBug 1015466 move them from PContent to Pbg since it believes those events are fine\nto received before OnStopRequest. Bug 1588241 move it back to PContent since those\nevents are before OnStartRequest.\n\nNow we're moving OnStartRequest to pBg, so here's another ping-pong time :)\n\nDepends on D77752", "attachment_id": 9156470, "author": "CuveeHsu@gmail.com", "id": 14879665, "creator": "CuveeHsu@gmail.com", "time": "2020-06-13T02:25:49Z", "tags": [], "bug_id": 1633935, "is_private": false}, {"id": 14883962, "author": "CuveeHsu@gmail.com", "attachment_id": 9156871, "text": "Created attachment 9156871\nBug 1633935 - P12 top-level IPC stream filter should happen before OnStartRequest, r=mayhemer\n\n\nThe WebRequest will suspend the channel in nsHttpChannel::PrepareToConnect(), apply the stream filter, send the main thread IPC  and resume.\nThat is, PHttpChannel::AttachStreamFilter should be handled in Child before OnStartRequest goes to listener.\n\nDepends on D79587", "is_private": false, "bug_id": 1633935, "raw_text": "\nThe WebRequest will suspend the channel in nsHttpChannel::PrepareToConnect(), apply the stream filter, send the main thread IPC  and resume.\nThat is, PHttpChannel::AttachStreamFilter should be handled in Child before OnStartRequest goes to listener.\n\nDepends on D79587", "count": 34, "creation_time": "2020-06-16T01:45:25Z", "tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-06-16T01:45:25Z"}, {"count": 35, "creation_time": "2020-06-16T01:45:39Z", "raw_text": "\nOne line fix with a bunch of explanation.\n\nWhen we perform networking on the socket process, OnDataAvailable could be sent directly from socket process to child process.\nTherefore, it could be racy with OnStartRequest which is from parent process to child process by nature.\n\nThis patch is to resolve the failure (cancel) by parent process.\nFor example, https://searchfox.org/mozilla-central/rev/027893497316897b8f292bde48dbb6da2391a331/netwerk/protocol/http/nsHttpChannel.cpp#2713\n\nBug 1641496 introduce a status check to avoid ODA message being process\n[2] https://searchfox.org/mozilla-central/rev/027893497316897b8f292bde48dbb6da2391a331/netwerk/protocol/http/HttpBackgroundChannelChild.cpp#163-171\n\nIt prevents putting ODA to the channel event queue in child process.\n\nHowever, this is based on that `OnStartRequest` already finished excution, which is usually true if OnStartRequest is sent via PHttpChannel.\nhttps://searchfox.org/mozilla-central/rev/027893497316897b8f292bde48dbb6da2391a331/netwerk/protocol/http/HttpChannelChild.cpp#417-422\nChannelEventQueue::RunOrEnque simply runs the OnStartRequest given there on the same thread and the queue is empty, since no blocking events from different thread are before OnStartRequest.\n\nNow we are moving the next chapter. OnStartRequest is queued given we want to switch thread.\nThe failure status, which is initiated in parent process, is set in HttpChannelChild::OnStartRequest which could be later than the status check [2]\n\nTherefore, we need another check to prevent ODA, which is already in the event queue, being processed.\nWe intentionally keep [2] for performance.\n\nDepends on D79770", "time": "2020-06-16T01:45:39Z", "creator": "CuveeHsu@gmail.com", "tags": [], "text": "Created attachment 9156872\nBug 1633935 - P13 Avoid ODA message being processed when the channel is already failed, r=mayhemer,kershaw\n\n\nOne line fix with a bunch of explanation.\n\nWhen we perform networking on the socket process, OnDataAvailable could be sent directly from socket process to child process.\nTherefore, it could be racy with OnStartRequest which is from parent process to child process by nature.\n\nThis patch is to resolve the failure (cancel) by parent process.\nFor example, https://searchfox.org/mozilla-central/rev/027893497316897b8f292bde48dbb6da2391a331/netwerk/protocol/http/nsHttpChannel.cpp#2713\n\nBug 1641496 introduce a status check to avoid ODA message being process\n[2] https://searchfox.org/mozilla-central/rev/027893497316897b8f292bde48dbb6da2391a331/netwerk/protocol/http/HttpBackgroundChannelChild.cpp#163-171\n\nIt prevents putting ODA to the channel event queue in child process.\n\nHowever, this is based on that `OnStartRequest` already finished excution, which is usually true if OnStartRequest is sent via PHttpChannel.\nhttps://searchfox.org/mozilla-central/rev/027893497316897b8f292bde48dbb6da2391a331/netwerk/protocol/http/HttpChannelChild.cpp#417-422\nChannelEventQueue::RunOrEnque simply runs the OnStartRequest given there on the same thread and the queue is empty, since no blocking events from different thread are before OnStartRequest.\n\nNow we are moving the next chapter. OnStartRequest is queued given we want to switch thread.\nThe failure status, which is initiated in parent process, is set in HttpChannelChild::OnStartRequest which could be later than the status check [2]\n\nTherefore, we need another check to prevent ODA, which is already in the event queue, being processed.\nWe intentionally keep [2] for performance.\n\nDepends on D79770", "author": "CuveeHsu@gmail.com", "id": 14883963, "attachment_id": 9156872, "bug_id": 1633935, "is_private": false}, {"tags": [], "time": "2020-06-16T14:58:01Z", "creator": "CuveeHsu@gmail.com", "raw_text": "Treeherder looks happy now!\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=9feec37011a095abf1080f5921a44b9d0088001a&selectedTaskRun=CZ1cPHP5SoignUDuV5kpHQ.0", "creation_time": "2020-06-16T14:58:01Z", "count": 36, "bug_id": 1633935, "is_private": false, "attachment_id": null, "id": 14884991, "author": "CuveeHsu@gmail.com", "text": "Treeherder looks happy now!\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=9feec37011a095abf1080f5921a44b9d0088001a&selectedTaskRun=CZ1cPHP5SoignUDuV5kpHQ.0"}, {"creation_time": "2020-06-16T19:20:09Z", "count": 37, "raw_text": "Unfortunately, we force the main thread IPC for responses with Set-Cookie, so we won't have a good impact on talos.\nBug 1645901 is the key follow-up to lift the restriction.", "time": "2020-06-16T19:20:09Z", "creator": "CuveeHsu@gmail.com", "tags": [], "text": "Unfortunately, we force the main thread IPC for responses with Set-Cookie, so we won't have a good impact on talos.\nBug 1645901 is the key follow-up to lift the restriction.", "attachment_id": null, "id": 14885692, "author": "CuveeHsu@gmail.com", "is_private": false, "bug_id": 1633935}, {"is_private": false, "bug_id": 1633935, "text": "Pushed by juhsu@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/19dcca77a1cf\nP1 allow OnStartRequest go thru pBg IPC, r=mayhemer\nhttps://hg.mozilla.org/integration/autoland/rev/df5abc2c0734\nP2 remove OnStartRequestSent since OnStartRequest is passed thru pBg, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/be03e0e7b645\nP3 send OS*R and ODA via pHttpChannel for multipart channel, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/2a9873ad6856\nP4 Remove On[Start|Stop]Request/OnTransportAndData in PHttpChannel, r=mayhemer,nika,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/73b51a139c91\nP5 allow OnProgress/OnStatus going thru pBg IPC, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/6251c22cc8f1\nP6 Skip one media track failure caused by performance gain, r=alwu\nhttps://hg.mozilla.org/integration/autoland/rev/292a5b34e9f7\nP7 refactor bitmap test, r=jgilbert\nhttps://hg.mozilla.org/integration/autoland/rev/ac9c5c1e5162\nP8 suspend event queue in HttpChannelChild which needs listener for redirection, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/3b268ac50692\nP9 send OnAfterLastPart via pBg IPC to avoid race between OS*R, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/709f8d50aa33\nP10 wait PHttpChannel::OnStartRequestSent for permission/cookie update from parent, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/e87b11c172b9\nP11 Move classification IPC methods back to PHttpChannel. r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/25822279ba5b\nP12 top-level IPC stream filter should happen before OnStartRequest, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/398fc19f5f6a\nP13 Avoid ODA message being processed when the channel is already failed, r=mayhemer,kershaw,necko-reviewers", "attachment_id": null, "author": "pulsebot@bots.tld", "id": 14897958, "creator": "pulsebot@bots.tld", "time": "2020-06-23T22:16:16Z", "tags": [], "creation_time": "2020-06-23T22:16:16Z", "count": 38, "raw_text": "Pushed by juhsu@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/19dcca77a1cf\nP1 allow OnStartRequest go thru pBg IPC, r=mayhemer\nhttps://hg.mozilla.org/integration/autoland/rev/df5abc2c0734\nP2 remove OnStartRequestSent since OnStartRequest is passed thru pBg, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/be03e0e7b645\nP3 send OS*R and ODA via pHttpChannel for multipart channel, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/2a9873ad6856\nP4 Remove On[Start|Stop]Request/OnTransportAndData in PHttpChannel, r=mayhemer,nika,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/73b51a139c91\nP5 allow OnProgress/OnStatus going thru pBg IPC, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/6251c22cc8f1\nP6 Skip one media track failure caused by performance gain, r=alwu\nhttps://hg.mozilla.org/integration/autoland/rev/292a5b34e9f7\nP7 refactor bitmap test, r=jgilbert\nhttps://hg.mozilla.org/integration/autoland/rev/ac9c5c1e5162\nP8 suspend event queue in HttpChannelChild which needs listener for redirection, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/3b268ac50692\nP9 send OnAfterLastPart via pBg IPC to avoid race between OS*R, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/709f8d50aa33\nP10 wait PHttpChannel::OnStartRequestSent for permission/cookie update from parent, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/e87b11c172b9\nP11 Move classification IPC methods back to PHttpChannel. r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/25822279ba5b\nP12 top-level IPC stream filter should happen before OnStartRequest, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/398fc19f5f6a\nP13 Avoid ODA message being processed when the channel is already failed, r=mayhemer,kershaw,necko-reviewers"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/19dcca77a1cf\nhttps://hg.mozilla.org/mozilla-central/rev/df5abc2c0734\nhttps://hg.mozilla.org/mozilla-central/rev/be03e0e7b645\nhttps://hg.mozilla.org/mozilla-central/rev/2a9873ad6856\nhttps://hg.mozilla.org/mozilla-central/rev/73b51a139c91\nhttps://hg.mozilla.org/mozilla-central/rev/6251c22cc8f1\nhttps://hg.mozilla.org/mozilla-central/rev/292a5b34e9f7\nhttps://hg.mozilla.org/mozilla-central/rev/ac9c5c1e5162\nhttps://hg.mozilla.org/mozilla-central/rev/3b268ac50692\nhttps://hg.mozilla.org/mozilla-central/rev/709f8d50aa33\nhttps://hg.mozilla.org/mozilla-central/rev/e87b11c172b9\nhttps://hg.mozilla.org/mozilla-central/rev/25822279ba5b\nhttps://hg.mozilla.org/mozilla-central/rev/398fc19f5f6a", "attachment_id": null, "author": "malexandru@mozilla.com", "id": 14898574, "is_private": false, "bug_id": 1633935, "creation_time": "2020-06-24T09:34:24Z", "count": 39, "raw_text": "https://hg.mozilla.org/mozilla-central/rev/19dcca77a1cf\nhttps://hg.mozilla.org/mozilla-central/rev/df5abc2c0734\nhttps://hg.mozilla.org/mozilla-central/rev/be03e0e7b645\nhttps://hg.mozilla.org/mozilla-central/rev/2a9873ad6856\nhttps://hg.mozilla.org/mozilla-central/rev/73b51a139c91\nhttps://hg.mozilla.org/mozilla-central/rev/6251c22cc8f1\nhttps://hg.mozilla.org/mozilla-central/rev/292a5b34e9f7\nhttps://hg.mozilla.org/mozilla-central/rev/ac9c5c1e5162\nhttps://hg.mozilla.org/mozilla-central/rev/3b268ac50692\nhttps://hg.mozilla.org/mozilla-central/rev/709f8d50aa33\nhttps://hg.mozilla.org/mozilla-central/rev/e87b11c172b9\nhttps://hg.mozilla.org/mozilla-central/rev/25822279ba5b\nhttps://hg.mozilla.org/mozilla-central/rev/398fc19f5f6a", "time": "2020-06-24T09:34:24Z", "creator": "malexandru@mozilla.com", "tags": ["bugherder"]}, {"tags": [], "time": "2020-06-25T17:28:50Z", "creator": "abutkovits@mozilla.com", "raw_text": "Backed out as requested.\n\nBackout link: https://hg.mozilla.org/integration/autoland/rev/9d89fc475692b20011929c1dc8bb8f5ff8fe8809", "creation_time": "2020-06-25T17:28:50Z", "count": 40, "is_private": false, "bug_id": 1633935, "attachment_id": null, "id": 14902092, "author": "abutkovits@mozilla.com", "text": "Backed out as requested.\n\nBackout link: https://hg.mozilla.org/integration/autoland/rev/9d89fc475692b20011929c1dc8bb8f5ff8fe8809"}, {"bug_id": 1633935, "is_private": false, "tags": [], "creator": "CuveeHsu@gmail.com", "time": "2020-06-25T18:00:41Z", "author": "CuveeHsu@gmail.com", "id": 14902166, "attachment_id": null, "raw_text": "We decide to backout and land it back in the beginning of next cycle.\n\nFor the performance impact:\nthis is a comparison without cookie and stream filter constraint, i.e., the best case after solving Bug 1645901 and Bug 1646592\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=try&newRevision=f6c83e4b25dc29a1ded4cc10ab895c81c3dc9c0d&framework=1&selectedTimeRange=172800\n\nthis is comparison with autoland in comment 38. The result should come up hours later.\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=autoland&newRevision=398fc19f5f6adf0a58ddb43e2efbaac571db320b&framework=1&selectedTimeRange=172800", "count": 41, "text": "We decide to backout and land it back in the beginning of next cycle.\n\nFor the performance impact:\nthis is a comparison without cookie and stream filter constraint, i.e., the best case after solving Bug 1645901 and Bug 1646592\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=try&newRevision=f6c83e4b25dc29a1ded4cc10ab895c81c3dc9c0d&framework=1&selectedTimeRange=172800\n\nthis is comparison with autoland in comment 38. The result should come up hours later.\nhttps://treeherder.mozilla.org/perf.html#/compare?originalProject=mozilla-central&newProject=autoland&newRevision=398fc19f5f6adf0a58ddb43e2efbaac571db320b&framework=1&selectedTimeRange=172800", "creation_time": "2020-06-25T18:00:41Z"}, {"bug_id": 1633935, "is_private": false, "attachment_id": null, "id": 14902201, "author": "CuveeHsu@gmail.com", "text": "Here's the reason I don't put this behind a pref even it could be a risky patch.\n(a)  it's not blocked by anything\n(b) code complexity. Before the patch:\n- normal channels send OnStart via PHttpChannel and ODA/OnStop via PHttpBackgroundChannel\nmultipart channels send everything (OS*R, ODA) thru PHttpChannel.\n\nIf we add a pref, we will have another code path for sending everything via PBg.\n\n- What worse, lots of dependent IPC should happen before OnStart and the order is very important.\nThat includes\n1. OnProgress/OnStatus\n2. OnAfterLastPart for multipart channel\n3. These notification for uri classifier\nhttps://searchfox.org/mozilla-central/rev/cfaa250d14e344834932de4c2eed0061701654da/netwerk/protocol/http/PHttpBackgroundChannel.ipdl#63-74\n\nIf we have a pref, we should send them in both PHttpChannel and PBg, depending on the pref.\n\n- What's even worse, we would maintain two types of OnStartRequestSent to synchronized another part of IPC sequences.", "tags": [], "time": "2020-06-25T18:20:25Z", "creator": "CuveeHsu@gmail.com", "raw_text": "Here's the reason I don't put this behind a pref even it could be a risky patch.\n(a)  it's not blocked by anything\n(b) code complexity. Before the patch:\n- normal channels send OnStart via PHttpChannel and ODA/OnStop via PHttpBackgroundChannel\nmultipart channels send everything (OS*R, ODA) thru PHttpChannel.\n\nIf we add a pref, we will have another code path for sending everything via PBg.\n\n- What worse, lots of dependent IPC should happen before OnStart and the order is very important.\nThat includes\n1. OnProgress/OnStatus\n2. OnAfterLastPart for multipart channel\n3. These notification for uri classifier\nhttps://searchfox.org/mozilla-central/rev/cfaa250d14e344834932de4c2eed0061701654da/netwerk/protocol/http/PHttpBackgroundChannel.ipdl#63-74\n\nIf we have a pref, we should send them in both PHttpChannel and PBg, depending on the pref.\n\n- What's even worse, we would maintain two types of OnStartRequestSent to synchronized another part of IPC sequences.", "creation_time": "2020-06-25T18:20:25Z", "count": 42}, {"raw_text": "Backout merged: https://hg.mozilla.org/mozilla-central/rev/9d89fc475692", "count": 43, "creation_time": "2020-06-25T21:57:10Z", "tags": [], "time": "2020-06-25T21:57:10Z", "creator": "aryx.bugmail@gmx-topmail.de", "author": "aryx.bugmail@gmx-topmail.de", "id": 14902734, "attachment_id": null, "text": "Backout merged: https://hg.mozilla.org/mozilla-central/rev/9d89fc475692", "bug_id": 1633935, "is_private": false}, {"raw_text": "Pushed by juhsu@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/b8f55064bfeb\nP1 allow OnStartRequest go thru pBg IPC, r=mayhemer\nhttps://hg.mozilla.org/integration/autoland/rev/cbcd3ee87d28\nP2 remove OnStartRequestSent since OnStartRequest is passed thru pBg, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/d59b42f58f86\nP3 send OS*R and ODA via pHttpChannel for multipart channel, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/e6c12eec1cef\nP4 Remove On[Start|Stop]Request/OnTransportAndData in PHttpChannel, r=mayhemer,nika,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/4214217c588c\nP5 allow OnProgress/OnStatus going thru pBg IPC, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/10382bbd8c8f\nP6 Skip one media track failure caused by performance gain, r=alwu\nhttps://hg.mozilla.org/integration/autoland/rev/b1cdccfb383d\nP7 refactor bitmap test, r=jgilbert\nhttps://hg.mozilla.org/integration/autoland/rev/045271cd2ca6\nP8 suspend event queue in HttpChannelChild which needs listener for redirection, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/673030046319\nP9 send OnAfterLastPart via pBg IPC to avoid race between OS*R, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/2289e685031e\nP10 wait PHttpChannel::OnStartRequestSent for permission/cookie update from parent, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/f75cc7d5f40e\nP11 Move classification IPC methods back to PHttpChannel. r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/cad764eb15a4\nP12 top-level IPC stream filter should happen before OnStartRequest, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/d529ccb6638b\nP13 Avoid ODA message being processed when the channel is already failed, r=mayhemer,kershaw,necko-reviewers", "creation_time": "2020-06-30T00:40:18Z", "count": 44, "tags": [], "creator": "pulsebot@bots.tld", "time": "2020-06-30T00:40:18Z", "attachment_id": null, "author": "pulsebot@bots.tld", "id": 14909388, "text": "Pushed by juhsu@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/b8f55064bfeb\nP1 allow OnStartRequest go thru pBg IPC, r=mayhemer\nhttps://hg.mozilla.org/integration/autoland/rev/cbcd3ee87d28\nP2 remove OnStartRequestSent since OnStartRequest is passed thru pBg, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/d59b42f58f86\nP3 send OS*R and ODA via pHttpChannel for multipart channel, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/e6c12eec1cef\nP4 Remove On[Start|Stop]Request/OnTransportAndData in PHttpChannel, r=mayhemer,nika,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/4214217c588c\nP5 allow OnProgress/OnStatus going thru pBg IPC, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/10382bbd8c8f\nP6 Skip one media track failure caused by performance gain, r=alwu\nhttps://hg.mozilla.org/integration/autoland/rev/b1cdccfb383d\nP7 refactor bitmap test, r=jgilbert\nhttps://hg.mozilla.org/integration/autoland/rev/045271cd2ca6\nP8 suspend event queue in HttpChannelChild which needs listener for redirection, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/673030046319\nP9 send OnAfterLastPart via pBg IPC to avoid race between OS*R, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/2289e685031e\nP10 wait PHttpChannel::OnStartRequestSent for permission/cookie update from parent, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/f75cc7d5f40e\nP11 Move classification IPC methods back to PHttpChannel. r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/cad764eb15a4\nP12 top-level IPC stream filter should happen before OnStartRequest, r=mayhemer,necko-reviewers\nhttps://hg.mozilla.org/integration/autoland/rev/d529ccb6638b\nP13 Avoid ODA message being processed when the channel is already failed, r=mayhemer,kershaw,necko-reviewers", "bug_id": 1633935, "is_private": false}, {"bug_id": 1633935, "is_private": false, "attachment_id": null, "author": "nbeleuzu@mozilla.com", "id": 14909976, "text": "https://hg.mozilla.org/mozilla-central/rev/b8f55064bfeb\nhttps://hg.mozilla.org/mozilla-central/rev/cbcd3ee87d28\nhttps://hg.mozilla.org/mozilla-central/rev/d59b42f58f86\nhttps://hg.mozilla.org/mozilla-central/rev/e6c12eec1cef\nhttps://hg.mozilla.org/mozilla-central/rev/4214217c588c\nhttps://hg.mozilla.org/mozilla-central/rev/10382bbd8c8f\nhttps://hg.mozilla.org/mozilla-central/rev/b1cdccfb383d\nhttps://hg.mozilla.org/mozilla-central/rev/045271cd2ca6\nhttps://hg.mozilla.org/mozilla-central/rev/673030046319\nhttps://hg.mozilla.org/mozilla-central/rev/2289e685031e\nhttps://hg.mozilla.org/mozilla-central/rev/f75cc7d5f40e\nhttps://hg.mozilla.org/mozilla-central/rev/cad764eb15a4\nhttps://hg.mozilla.org/mozilla-central/rev/d529ccb6638b", "tags": ["bugherder"], "creator": "nbeleuzu@mozilla.com", "time": "2020-06-30T10:01:48Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/b8f55064bfeb\nhttps://hg.mozilla.org/mozilla-central/rev/cbcd3ee87d28\nhttps://hg.mozilla.org/mozilla-central/rev/d59b42f58f86\nhttps://hg.mozilla.org/mozilla-central/rev/e6c12eec1cef\nhttps://hg.mozilla.org/mozilla-central/rev/4214217c588c\nhttps://hg.mozilla.org/mozilla-central/rev/10382bbd8c8f\nhttps://hg.mozilla.org/mozilla-central/rev/b1cdccfb383d\nhttps://hg.mozilla.org/mozilla-central/rev/045271cd2ca6\nhttps://hg.mozilla.org/mozilla-central/rev/673030046319\nhttps://hg.mozilla.org/mozilla-central/rev/2289e685031e\nhttps://hg.mozilla.org/mozilla-central/rev/f75cc7d5f40e\nhttps://hg.mozilla.org/mozilla-central/rev/cad764eb15a4\nhttps://hg.mozilla.org/mozilla-central/rev/d529ccb6638b", "creation_time": "2020-06-30T10:01:48Z", "count": 45}, {"is_private": false, "bug_id": 1633935, "tags": [], "creator": "bebe@mozilla.ro", "time": "2020-07-02T08:22:18Z", "author": "bebe@mozilla.ro", "id": 14914065, "raw_text": "== Change summary for alert #26387 (as of Tue, 30 Jun 2020 17:06:31 GMT) ==\n\nImprovements:\n\n   3%  Heap Unclassified macosx1014-64-shippable opt tp6     126,126,554.64 -> 121,879,789.89\n\nFor up to date results, see: https://treeherder.mozilla.org/perf.html#/alerts?id=26387", "attachment_id": null, "count": 46, "text": "== Change summary for alert #26387 (as of Tue, 30 Jun 2020 17:06:31 GMT) ==\n\nImprovements:\n\n   3%  Heap Unclassified macosx1014-64-shippable opt tp6     126,126,554.64 -> 121,879,789.89\n\nFor up to date results, see: https://treeherder.mozilla.org/perf.html#/alerts?id=26387", "creation_time": "2020-07-02T08:22:18Z"}, {"is_private": false, "bug_id": 1633935, "text": "== Change summary for alert #26397 (as of Wed, 01 Jul 2020 11:30:14 GMT) ==\n\nImprovements:\n\n  21%  espn fcp android-hw-g5-7-0-arm7-api-16-shippable opt cold                      7,059.58 -> 5,592.17\n   7%  espn PerceptualSpeedIndex android-hw-g5-7-0-arm7-api-16-shippable opt cold     6,941.92 -> 6,422.58\n   7%  espn android-hw-g5-7-0-arm7-api-16-shippable opt cold                          3,309.02 -> 3,081.74\n   7%  espn SpeedIndex android-hw-g5-7-0-arm7-api-16-shippable opt cold               6,875.46 -> 6,411.25\n\nFor up to date results, see: https://treeherder.mozilla.org/perf.html#/alerts?id=26397", "attachment_id": null, "author": "bebe@mozilla.ro", "id": 14924626, "time": "2020-07-08T07:04:17Z", "creator": "bebe@mozilla.ro", "tags": [], "creation_time": "2020-07-08T07:04:17Z", "count": 47, "raw_text": "== Change summary for alert #26397 (as of Wed, 01 Jul 2020 11:30:14 GMT) ==\n\nImprovements:\n\n  21%  espn fcp android-hw-g5-7-0-arm7-api-16-shippable opt cold                      7,059.58 -> 5,592.17\n   7%  espn PerceptualSpeedIndex android-hw-g5-7-0-arm7-api-16-shippable opt cold     6,941.92 -> 6,422.58\n   7%  espn android-hw-g5-7-0-arm7-api-16-shippable opt cold                          3,309.02 -> 3,081.74\n   7%  espn SpeedIndex android-hw-g5-7-0-arm7-api-16-shippable opt cold               6,875.46 -> 6,411.25\n\nFor up to date results, see: https://treeherder.mozilla.org/perf.html#/alerts?id=26397"}]}}}