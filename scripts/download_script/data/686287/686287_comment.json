{"comments": {}, "bugs": {"686287": {"comments": [{"count": 0, "text": "Created attachment 559845\nTwo examples with reproduction steps\n\nIf you place the caret (cursor) in front of an underlined (i.e. misspelled) word, then press [Enter], then [Backspace], underlining is gone.\n\nIf you place the caret (cursor) in front of an underlined (i.e. misspelled) word at the beginning of a line, then press [Backspace] and the underlining is gone.\n\nThis happens very often when you delete blank lines in a textarea.\n\nBug seems to be triggered by deletion of a new line character.\n\nSee attachment for examples.\n\nMay be connected to Bug 520382.", "author": "gnothi.seauton@gmx.de", "id": 5713949, "bug_id": 686287, "raw_text": "If you place the caret (cursor) in front of an underlined (i.e. misspelled) word, then press [Enter], then [Backspace], underlining is gone.\n\nIf you place the caret (cursor) in front of an underlined (i.e. misspelled) word at the beginning of a line, then press [Backspace] and the underlining is gone.\n\nThis happens very often when you delete blank lines in a textarea.\n\nBug seems to be triggered by deletion of a new line character.\n\nSee attachment for examples.\n\nMay be connected to Bug 520382.", "time": "2011-09-12T11:47:53Z", "creator": "gnothi.seauton@gmx.de", "creation_time": "2011-09-12T11:47:53Z", "is_private": false, "attachment_id": 559845, "tags": []}, {"time": "2011-09-12T12:33:23Z", "raw_text": "Does the spell-check underline reappear as soon as you move the cursor away from the incorrect word?\n\nI think what's happening is that the backspace is seen as initiating an editing action that may involve the misspelled word (because it's modifying the text exactly at the word edge), and as long as that word is actively being edited, spell-checking isn't applied to it. As soon as you move the cursor away (e.g. with arrow keys, or click elsewhere), the editing of that word is finalized and it is again spell-checked.\n\nNot sure if this should be considered a bug, or expected behavior. In general we don't want to mark \"misspellings\" of words while they're in the process of being typed/edited; this would be very distracting.", "attachment_id": null, "tags": [], "creator": "jfkthame@gmail.com", "text": "Does the spell-check underline reappear as soon as you move the cursor away from the incorrect word?\n\nI think what's happening is that the backspace is seen as initiating an editing action that may involve the misspelled word (because it's modifying the text exactly at the word edge), and as long as that word is actively being edited, spell-checking isn't applied to it. As soon as you move the cursor away (e.g. with arrow keys, or click elsewhere), the editing of that word is finalized and it is again spell-checked.\n\nNot sure if this should be considered a bug, or expected behavior. In general we don't want to mark \"misspellings\" of words while they're in the process of being typed/edited; this would be very distracting.", "count": 1, "author": "jfkthame@gmail.com", "id": 5713980, "bug_id": 686287, "creation_time": "2011-09-12T12:33:23Z", "is_private": false}, {"is_private": false, "creation_time": "2011-09-12T13:58:43Z", "creator": "ehsan.akhgari@gmail.com", "tags": [], "attachment_id": null, "id": 5714051, "bug_id": 686287, "text": "Yes, this is the expected behavior.  In general, we never show the misspelling underline on words which are being edited.", "count": 2, "author": "ehsan.akhgari@gmail.com", "raw_text": "Yes, this is the expected behavior.  In general, we never show the misspelling underline on words which are being edited.", "time": "2011-09-12T13:58:43Z"}, {"tags": [], "time": "2011-09-12T14:39:56Z", "raw_text": "Right, that's what I assumed. However, I did wonder whether we should try to be \"smarter\" about what it means to be editing a word..... it'd be nice if just modifying the whitespace adjacent to a word (as in the examples here) did not actually cause the spell-check status of the word to change, as the actual range of the word itself is not being extended or modified at all.\n\nAlso, in experimenting with the testcase here, I noticed an inconsistency in behavior that I think does qualify as a bug, regardless of the above. Load the testcase, and place the cursor immediately before the last word (\"erorr\") in the first text area. Then, instead of pressing Enter (which will remove the underline), try typing an extra space (or several). What I see (in a Nightly build) is that the underlining remains, and the newly-entered space(s) get included in the \"misspelled\" range!\n\nBut then pressing Backspace to remove the newly-typed space _does_ remove the underline from the entire word. So I think the behavior w.r.t. whitespace changes adjacent to the word is not as straightforward or consistent as it ideally should be.", "attachment_id": null, "id": 5714093, "bug_id": 686287, "creation_time": "2011-09-12T14:39:56Z", "is_private": false, "creator": "jfkthame@gmail.com", "text": "Right, that's what I assumed. However, I did wonder whether we should try to be \"smarter\" about what it means to be editing a word..... it'd be nice if just modifying the whitespace adjacent to a word (as in the examples here) did not actually cause the spell-check status of the word to change, as the actual range of the word itself is not being extended or modified at all.\n\nAlso, in experimenting with the testcase here, I noticed an inconsistency in behavior that I think does qualify as a bug, regardless of the above. Load the testcase, and place the cursor immediately before the last word (\"erorr\") in the first text area. Then, instead of pressing Enter (which will remove the underline), try typing an extra space (or several). What I see (in a Nightly build) is that the underlining remains, and the newly-entered space(s) get included in the \"misspelled\" range!\n\nBut then pressing Backspace to remove the newly-typed space _does_ remove the underline from the entire word. So I think the behavior w.r.t. whitespace changes adjacent to the word is not as straightforward or consistent as it ideally should be.", "count": 3, "author": "jfkthame@gmail.com"}, {"time": "2011-09-12T17:46:48Z", "raw_text": "(In reply to Jonathan Kew from comment #3)\n> Right, that's what I assumed. However, I did wonder whether we should try to\n> be \"smarter\" about what it means to be editing a word..... it'd be nice if\n> just modifying the whitespace adjacent to a word (as in the examples here)\n> did not actually cause the spell-check status of the word to change, as the\n> actual range of the word itself is not being extended or modified at all.\n\nSure, I'm reopening this bug for that...\n\n> Also, in experimenting with the testcase here, I noticed an inconsistency in\n> behavior that I think does qualify as a bug, regardless of the above. Load\n> the testcase, and place the cursor immediately before the last word\n> (\"erorr\") in the first text area. Then, instead of pressing Enter (which\n> will remove the underline), try typing an extra space (or several). What I\n> see (in a Nightly build) is that the underlining remains, and the\n> newly-entered space(s) get included in the \"misspelled\" range!\n\nYes, that's bad.  Please file another bug for it?\n\n> But then pressing Backspace to remove the newly-typed space _does_ remove\n> the underline from the entire word. So I think the behavior w.r.t.\n> whitespace changes adjacent to the word is not as straightforward or\n> consistent as it ideally should be.\n\nWell, the code is really complex.  We don't handle whitespace around the insertion point correctly all the time, and sometimes this whitespace can fall into the \"don't check\" range, which causes the misspelling underlines to not be changed.", "id": 5714334, "bug_id": 686287, "author": "ehsan.akhgari@gmail.com", "count": 4, "text": "(In reply to Jonathan Kew from comment #3)\n> Right, that's what I assumed. However, I did wonder whether we should try to\n> be \"smarter\" about what it means to be editing a word..... it'd be nice if\n> just modifying the whitespace adjacent to a word (as in the examples here)\n> did not actually cause the spell-check status of the word to change, as the\n> actual range of the word itself is not being extended or modified at all.\n\nSure, I'm reopening this bug for that...\n\n> Also, in experimenting with the testcase here, I noticed an inconsistency in\n> behavior that I think does qualify as a bug, regardless of the above. Load\n> the testcase, and place the cursor immediately before the last word\n> (\"erorr\") in the first text area. Then, instead of pressing Enter (which\n> will remove the underline), try typing an extra space (or several). What I\n> see (in a Nightly build) is that the underlining remains, and the\n> newly-entered space(s) get included in the \"misspelled\" range!\n\nYes, that's bad.  Please file another bug for it?\n\n> But then pressing Backspace to remove the newly-typed space _does_ remove\n> the underline from the entire word. So I think the behavior w.r.t.\n> whitespace changes adjacent to the word is not as straightforward or\n> consistent as it ideally should be.\n\nWell, the code is really complex.  We don't handle whitespace around the insertion point correctly all the time, and sometimes this whitespace can fall into the \"don't check\" range, which causes the misspelling underlines to not be changed.", "tags": [], "attachment_id": null, "creation_time": "2011-09-12T17:46:48Z", "is_private": false, "creator": "ehsan.akhgari@gmail.com"}, {"author": "jorgk-bmo@jorgk.com", "text": "I'm taking the liberty to lower the importance and change the summary. The bug I can reproduce in FF 43 is that in <textarea>hello errorr erorr</textarea> white-space is underlined if typed in front of the second error \"erorr\".\n\nThere are other aspects of the bug, like cancelling check marks when white-space adjacent to the misspelled word is modified, but that's less of an issue.", "count": 5, "creator": "jorgk-bmo@jorgk.com", "is_private": false, "creation_time": "2015-12-26T23:11:07Z", "bug_id": 686287, "id": 11031650, "attachment_id": null, "raw_text": "I'm taking the liberty to lower the importance and change the summary. The bug I can reproduce in FF 43 is that in <textarea>hello errorr erorr</textarea> white-space is underlined if typed in front of the second error \"erorr\".\n\nThere are other aspects of the bug, like cancelling check marks when white-space adjacent to the misspelled word is modified, but that's less of an issue.", "time": "2015-12-26T23:11:07Z", "tags": []}]}}}