{"bugs": {"681499": {"comments": [{"text": "User Agent: Mozilla/5.0 (Windows NT 5.1; rv:6.0) Gecko/20100101 Firefox/6.0\nBuild ID: 20110811165603\n\nSteps to reproduce:\n\nOpen a website with a big image,\nfor example open the following URL:\nhttp://www.seidl-e.de/wk/gpic.shtml?num=2&flg=0\n(Contains 5 MPix image)\n\n\nActual results:\n\nImage disappears, because it is upscaled instead of downscaled.\n(You will see it when zooming down to lowest scale.)\n\n\nExpected results:\n\nImage should have been rescaled to fill window height.\nCommand:\n<img src=\"2.jpg\" align=\"right\" height=\"100%\" hspace=\"0\" alt=\"Bild: Blick vom Watt aus\">\nShould rescale image from 2.560px \u00d7 1.920px to about 623px \u00d7 467px,\ndoes rescale to 2.801px \u00d7 2.101px (makes it bigger!).\n(Previous versions (dont know until which) did it right.)\n(Microsoft IE 8 does it right.)", "bug_id": 681499, "tags": [], "raw_text": "User Agent: Mozilla/5.0 (Windows NT 5.1; rv:6.0) Gecko/20100101 Firefox/6.0\nBuild ID: 20110811165603\n\nSteps to reproduce:\n\nOpen a website with a big image,\nfor example open the following URL:\nhttp://www.seidl-e.de/wk/gpic.shtml?num=2&flg=0\n(Contains 5 MPix image)\n\n\nActual results:\n\nImage disappears, because it is upscaled instead of downscaled.\n(You will see it when zooming down to lowest scale.)\n\n\nExpected results:\n\nImage should have been rescaled to fill window height.\nCommand:\n<img src=\"2.jpg\" align=\"right\" height=\"100%\" hspace=\"0\" alt=\"Bild: Blick vom Watt aus\">\nShould rescale image from 2.560px \u00d7 1.920px to about 623px \u00d7 467px,\ndoes rescale to 2.801px \u00d7 2.101px (makes it bigger!).\n(Previous versions (dont know until which) did it right.)\n(Microsoft IE 8 does it right.)", "attachment_id": null, "author": "mail@seidl-e.de", "creator": "mail@seidl-e.de", "time": "2011-08-23T22:38:39Z", "creation_time": "2011-08-23T22:38:39Z", "is_private": false, "count": 0, "id": 5673320}, {"tags": [], "bug_id": 681499, "text": "the testcase doesn't load for me", "attachment_id": null, "raw_text": "the testcase doesn't load for me", "creation_time": "2011-08-24T08:05:26Z", "time": "2011-08-24T08:05:26Z", "creator": "bugzilla@mversen.de", "author": "bugzilla@mversen.de", "id": 5674234, "count": 1, "is_private": false}, {"raw_text": "Mozilla/5.0 (Windows NT 5.1; rv:8.0a1) Gecko/20110813 Firefox/8.0a1\n\nhttp://www.seidl-e.de/wk/gpic.shtml?num=2&flg=0\nConfirming\n\n> the testcase doesn't load for me\nI assume that's the bug? Zoom out!", "attachment_id": null, "tags": [], "text": "Mozilla/5.0 (Windows NT 5.1; rv:8.0a1) Gecko/20110813 Firefox/8.0a1\n\nhttp://www.seidl-e.de/wk/gpic.shtml?num=2&flg=0\nConfirming\n\n> the testcase doesn't load for me\nI assume that's the bug? Zoom out!", "bug_id": 681499, "is_private": false, "id": 5674361, "count": 2, "author": "moz@jeka.info", "creator": "moz@jeka.info", "creation_time": "2011-08-24T09:12:17Z", "time": "2011-08-24T09:12:17Z"}, {"id": 5674412, "count": 3, "is_private": false, "creation_time": "2011-08-24T09:49:33Z", "time": "2011-08-24T09:49:33Z", "creator": "bugzilla@mversen.de", "author": "bugzilla@mversen.de", "attachment_id": null, "raw_text": ">I assume that's the bug? Zoom out!\nof course not. Doesn't load != doesn't see anything\nI found the reason: there is something wrong with IPV6 on that server\n\nconfirming with Seamonkey trunk on win32", "text": ">I assume that's the bug? Zoom out!\nof course not. Doesn't load != doesn't see anything\nI found the reason: there is something wrong with IPV6 on that server\n\nconfirming with Seamonkey trunk on win32", "bug_id": 681499, "tags": []}, {"author": "moz@jeka.info", "creator": "moz@jeka.info", "time": "2011-08-24T11:27:40Z", "creation_time": "2011-08-24T11:27:40Z", "is_private": false, "id": 5674538, "count": 4, "tags": [], "text": "Created attachment 555358\nbig image", "bug_id": 681499, "raw_text": "", "attachment_id": 555358}, {"id": 5674542, "count": 5, "is_private": false, "creation_time": "2011-08-24T11:28:46Z", "time": "2011-08-24T11:28:46Z", "creator": "moz@jeka.info", "author": "moz@jeka.info", "attachment_id": 555359, "raw_text": "", "tags": [], "bug_id": 681499, "text": "Created attachment 555359\ntestcase"}, {"tags": [], "bug_id": 681499, "text": "This is quirksmode only\n\nReporter:\nYour site is in quirksmode, thats bad. You should use a standards mode triggering doctype, e.g. just <!DOCTYPE html> \n\nTo get the 100% thing working in standards mode, you need to add styling like this:\n\n<style>\nhtml { height: 100% }\nbody { height: 95% }\n</style>", "raw_text": "This is quirksmode only\n\nReporter:\nYour site is in quirksmode, thats bad. You should use a standards mode triggering doctype, e.g. just <!DOCTYPE html> \n\nTo get the 100% thing working in standards mode, you need to add styling like this:\n\n<style>\nhtml { height: 100% }\nbody { height: 95% }\n</style>", "attachment_id": null, "author": "moz@jeka.info", "creator": "moz@jeka.info", "creation_time": "2011-08-24T11:37:18Z", "time": "2011-08-24T11:37:18Z", "is_private": false, "count": 6, "id": 5674550}, {"author": "bzbarsky@mit.edu", "time": "2011-08-24T17:42:21Z", "creation_time": "2011-08-24T17:42:21Z", "creator": "bzbarsky@mit.edu", "count": 7, "id": 5675298, "is_private": false, "tags": [], "bug_id": 681499, "text": "What's happening here is that the floated image is sized correctly but positioned way off the left side of the page.  In particular, for my small window testcase I see it ending up 488px wide by 366px tall but placed 1958px off the left side of the viewport.  In my case the viewport is 610px wide.  1958+610 = 2568.  The body has an 8px right margin and the image's intrinsic width is 2560px, so we're placing the image's left edge so that its right edge will line up with the right edge of the body if the image has its intrinsic width.  But then it ends up with a much smaller width, of course.\n\nOddly, giving the body a 100% height fixes the problem....", "raw_text": "What's happening here is that the floated image is sized correctly but positioned way off the left side of the page.  In particular, for my small window testcase I see it ending up 488px wide by 366px tall but placed 1958px off the left side of the viewport.  In my case the viewport is 610px wide.  1958+610 = 2568.  The body has an 8px right margin and the image's intrinsic width is 2560px, so we're placing the image's left edge so that its right edge will line up with the right edge of the body if the image has its intrinsic width.  But then it ends up with a much smaller width, of course.\n\nOddly, giving the body a 100% height fixes the problem....", "attachment_id": null}, {"attachment_id": null, "raw_text": "This regressed between fx3.6 and fx4.", "text": "This regressed between fx3.6 and fx4.", "bug_id": 681499, "tags": [], "count": 8, "id": 5675305, "is_private": false, "creation_time": "2011-08-24T17:43:44Z", "time": "2011-08-24T17:43:44Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"attachment_id": null, "raw_text": "This issue seems to be that FloatMarginWidth() uses the computed height of the block as the containing block height to pass to ComputeSize().  And the computed height in this case is auto, so we end up with the intrinsic height in this case.  And then we do this:\n\n  floatX = floatAvailableSpace.mRect.XMost() - floatMarginWidth;\n\nand lose.\n\nIdeally, we'd pass the correct containing block height (the same one that reflow will use) to FloatMarginWidth...\n\nI assume this is a regression from dbaron's float changes in fx4?", "bug_id": 681499, "text": "This issue seems to be that FloatMarginWidth() uses the computed height of the block as the containing block height to pass to ComputeSize().  And the computed height in this case is auto, so we end up with the intrinsic height in this case.  And then we do this:\n\n  floatX = floatAvailableSpace.mRect.XMost() - floatMarginWidth;\n\nand lose.\n\nIdeally, we'd pass the correct containing block height (the same one that reflow will use) to FloatMarginWidth...\n\nI assume this is a regression from dbaron's float changes in fx4?", "tags": [], "count": 9, "id": 5675359, "is_private": false, "creation_time": "2011-08-24T17:58:04Z", "time": "2011-08-24T17:58:04Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"text": "Regression winodw(cached m-c hourly)\nWorks:\nhttp://hg.mozilla.org/mozilla-central/rev/373d1b393f28\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b4pre) Gecko/20100805 Minefield/4.0b4pre ID:20100805200154\nFails:\nhttp://hg.mozilla.org/mozilla-central/rev/8ab7ef79b673\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b4pre) Gecko/20100805 Minefield/4.0b4pre ID:20100805224228\nPushlog:\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=373d1b393f28&tochange=8ab7ef79b673\n\nSuspected bug:\nBug 563584 - ###!!! ASSERTION: float manager state should match saved state", "bug_id": 681499, "tags": [], "raw_text": "Regression winodw(cached m-c hourly)\nWorks:\nhttp://hg.mozilla.org/mozilla-central/rev/373d1b393f28\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b4pre) Gecko/20100805 Minefield/4.0b4pre ID:20100805200154\nFails:\nhttp://hg.mozilla.org/mozilla-central/rev/8ab7ef79b673\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b4pre) Gecko/20100805 Minefield/4.0b4pre ID:20100805224228\nPushlog:\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=373d1b393f28&tochange=8ab7ef79b673\n\nSuspected bug:\nBug 563584 - ###!!! ASSERTION: float manager state should match saved state", "attachment_id": null, "author": "alice0775@gmail.com", "creation_time": "2011-08-24T17:59:07Z", "time": "2011-08-24T17:59:07Z", "creator": "alice0775@gmail.com", "count": 10, "id": 5675370, "is_private": false}, {"bug_id": 681499, "text": "Incidentally this will also cause problems when we have anonymous blocks wrapping inlines if the float is reflowed by the anonymous block, since the anonymous block will NOT be the containing block.", "tags": [], "raw_text": "Incidentally this will also cause problems when we have anonymous blocks wrapping inlines if the float is reflowed by the anonymous block, since the anonymous block will NOT be the containing block.", "attachment_id": null, "author": "bzbarsky@mit.edu", "time": "2011-08-24T18:00:12Z", "creation_time": "2011-08-24T18:00:12Z", "creator": "bzbarsky@mit.edu", "count": 11, "id": 5675373, "is_private": false}, {"attachment_id": null, "raw_text": "And in fact it's already a problem when the containing block is not the block frame; e.g. table cells.  Standards-mode testcase showing that coming up.", "text": "And in fact it's already a problem when the containing block is not the block frame; e.g. table cells.  Standards-mode testcase showing that coming up.", "bug_id": 681499, "tags": [], "count": 12, "id": 5675376, "is_private": false, "time": "2011-08-24T18:01:16Z", "creation_time": "2011-08-24T18:01:16Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-08-24T18:03:05Z", "time": "2011-08-24T18:03:05Z", "creator": "bzbarsky@mit.edu", "id": 5675379, "count": 13, "is_private": false, "tags": [], "bug_id": 681499, "text": "Created attachment 555455\nStandards-mode testcase: the two table cells should look identical", "raw_text": "", "attachment_id": 555455}, {"attachment_id": null, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #9)\n> This issue seems to be that FloatMarginWidth() uses the computed height of\n> the block as the containing block height to pass to ComputeSize().  And the\n> computed height in this case is auto, so we end up with the intrinsic height\n> in this case.  And then we do this:\n> \n>   floatX = floatAvailableSpace.mRect.XMost() - floatMarginWidth;\n> \n> and lose.\n\nSorry, how did you get from heights to widths here?", "bug_id": 681499, "text": "(In reply to Boris Zbarsky (:bz) from comment #9)\n> This issue seems to be that FloatMarginWidth() uses the computed height of\n> the block as the containing block height to pass to ComputeSize().  And the\n> computed height in this case is auto, so we end up with the intrinsic height\n> in this case.  And then we do this:\n> \n>   floatX = floatAvailableSpace.mRect.XMost() - floatMarginWidth;\n> \n> and lose.\n\nSorry, how did you get from heights to widths here?", "tags": [], "is_private": false, "id": 5675426, "count": 14, "creator": "dbaron@dbaron.org", "time": "2011-08-24T18:17:19Z", "creation_time": "2011-08-24T18:17:19Z", "author": "dbaron@dbaron.org"}, {"is_private": false, "id": 5675527, "count": 15, "creator": "bzbarsky@mit.edu", "time": "2011-08-24T18:41:21Z", "creation_time": "2011-08-24T18:41:21Z", "author": "bzbarsky@mit.edu", "attachment_id": null, "raw_text": "Oh, the point is that floatMarginWidth is set to the width returned by ComputeSize() on the float (plus margin/padding/border).  And for an image the width returned by ComputeSize() depends on the height of the image if the computed width is auto.  And in this case the height the image actually ends up with and the height that's used to detemined the width returned from FloatMarginWidth() are different, because the image has a percentage height and different containing block heights are used for the two computations.", "tags": [], "text": "Oh, the point is that floatMarginWidth is set to the width returned by ComputeSize() on the float (plus margin/padding/border).  And for an image the width returned by ComputeSize() depends on the height of the image if the computed width is auto.  And in this case the height the image actually ends up with and the height that's used to detemined the width returned from FloatMarginWidth() are different, because the image has a percentage height and different containing block heights are used for the two computations.", "bug_id": 681499}, {"count": 16, "id": 5675530, "is_private": false, "author": "mail@seidl-e.de", "time": "2011-08-24T18:42:00Z", "creation_time": "2011-08-24T18:42:00Z", "creator": "mail@seidl-e.de", "raw_text": "Well that looks fine, You are after it.\nThanks for Your work, folks!", "attachment_id": null, "tags": [], "bug_id": 681499, "text": "Well that looks fine, You are after it.\nThanks for Your work, folks!"}]}}, "comments": {}}