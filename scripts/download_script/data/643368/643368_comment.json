{"comments": {}, "bugs": {"643368": {"comments": [{"is_private": false, "author": "tellrob@gmail.com", "time": "2011-03-21T06:20:53Z", "count": 0, "id": 5356721, "tags": [], "creation_time": "2011-03-21T06:20:53Z", "attachment_id": null, "raw_text": "To implement v8::Object::Clone, I think we need to include the non-enumerable properties of an object. Currently there is no API to get us these. JS_NewPropertyIterator and JS_Enumerate claim to only show properties with the JSPROP_ENUMERATE bit.", "creator": "tellrob@gmail.com", "bug_id": 643368, "text": "To implement v8::Object::Clone, I think we need to include the non-enumerable properties of an object. Currently there is no API to get us these. JS_NewPropertyIterator and JS_Enumerate claim to only show properties with the JSPROP_ENUMERATE bit."}, {"text": "I have a patch for that. Search for JS_Enumerate2 in the title.", "bug_id": 643368, "raw_text": "I have a patch for that. Search for JS_Enumerate2 in the title.", "creator": "gal@uci.edu", "tags": [], "creation_time": "2011-03-21T06:22:05Z", "attachment_id": null, "id": 5356722, "author": "gal@uci.edu", "time": "2011-03-21T06:22:05Z", "count": 1, "is_private": false}, {"is_private": false, "count": 2, "author": "jwalden@mit.edu", "time": "2011-03-21T08:36:49Z", "id": 5356795, "attachment_id": null, "tags": [], "creation_time": "2011-03-21T08:36:49Z", "creator": "jwalden@mit.edu", "raw_text": "(In reply to comment #0)\n> Currently there is no API to get us these. JS_NewPropertyIterator and\n> JS_Enumerate claim to only show properties with the JSPROP_ENUMERATE bit.\n\nLies!  Call JS_Enumerate with JSENUMERATE_INIT_ALL.\n\nOne caveat: enumeration hooks don't uniformly implement all the correct stuff for this to work fully.  Global objects in the browser are one case where things fall apart.  There might be others, but that's the biggest instance I'm aware of.\n\n(...and not to say I'm opposed to JS_Enumerate2 or anything, just to say that it's not needed to serve the particular use case in this bug.)", "bug_id": 643368, "text": "(In reply to comment #0)\n> Currently there is no API to get us these. JS_NewPropertyIterator and\n> JS_Enumerate claim to only show properties with the JSPROP_ENUMERATE bit.\n\nLies!  Call JS_Enumerate with JSENUMERATE_INIT_ALL.\n\nOne caveat: enumeration hooks don't uniformly implement all the correct stuff for this to work fully.  Global objects in the browser are one case where things fall apart.  There might be others, but that's the biggest instance I'm aware of.\n\n(...and not to say I'm opposed to JS_Enumerate2 or anything, just to say that it's not needed to serve the particular use case in this bug.)"}, {"count": 3, "time": "2011-03-21T15:57:15Z", "creator": "sdwilsh@forerunnerdesigns.com", "raw_text": "(In reply to comment #2)\n> Lies!  Call JS_Enumerate with JSENUMERATE_INIT_ALL.\nCould someone possibly add some docs for that then, by chance?", "text": "(In reply to comment #2)\n> Lies!  Call JS_Enumerate with JSENUMERATE_INIT_ALL.\nCould someone possibly add some docs for that then, by chance?", "author": "sdwilsh@forerunnerdesigns.com", "is_private": false, "id": 5357261, "attachment_id": null, "creation_time": "2011-03-21T15:57:15Z", "tags": [], "bug_id": 643368}, {"raw_text": "(In reply to comment #2)\n> (In reply to comment #0)\n> > Currently there is no API to get us these. JS_NewPropertyIterator and\n> > JS_Enumerate claim to only show properties with the JSPROP_ENUMERATE bit.\n> \n> Lies!  Call JS_Enumerate with JSENUMERATE_INIT_ALL.\n\nI still do not see how this is exposed via the API. JS_Enumerate takes a JSContext* and a JSObject* but not a JSIterateOp.", "creator": "tellrob@gmail.com", "creation_time": "2011-03-21T17:16:52Z", "tags": [], "attachment_id": null, "text": "(In reply to comment #2)\n> (In reply to comment #0)\n> > Currently there is no API to get us these. JS_NewPropertyIterator and\n> > JS_Enumerate claim to only show properties with the JSPROP_ENUMERATE bit.\n> \n> Lies!  Call JS_Enumerate with JSENUMERATE_INIT_ALL.\n\nI still do not see how this is exposed via the API. JS_Enumerate takes a JSContext* and a JSObject* but not a JSIterateOp.", "bug_id": 643368, "time": "2011-03-21T17:16:52Z", "author": "tellrob@gmail.com", "count": 4, "is_private": false, "id": 5357498}, {"id": 5357567, "author": "brendan@mozilla.org", "is_private": false, "bug_id": 643368, "attachment_id": null, "creation_time": "2011-03-21T17:31:14Z", "tags": [], "count": 5, "time": "2011-03-21T17:31:14Z", "text": "Andreas is referring to bug 638347 in encouraging you to search for JS_Enumerate2.\n\n/be", "creator": "brendan@mozilla.org", "raw_text": "Andreas is referring to bug 638347 in encouraging you to search for JS_Enumerate2.\n\n/be"}, {"text": "(In reply to comment #4)\n> I still do not see how this is exposed via the API.\n\nHum, you're right.  Yes, we should fix that.  (And are, it seems.)\n\nAnd what's this yolky-colored stuff on my face right now?", "creator": "jwalden@mit.edu", "raw_text": "(In reply to comment #4)\n> I still do not see how this is exposed via the API.\n\nHum, you're right.  Yes, we should fix that.  (And are, it seems.)\n\nAnd what's this yolky-colored stuff on my face right now?", "count": 6, "time": "2011-03-21T19:41:16Z", "bug_id": 643368, "attachment_id": null, "tags": [], "creation_time": "2011-03-21T19:41:16Z", "id": 5357969, "author": "jwalden@mit.edu", "is_private": false}, {"count": 7, "time": "2011-03-21T19:49:53Z", "creator": "gal@uci.edu", "raw_text": "Waldo, feel free to steal 638347, in particular if you have a better idea for naming then JS_Enumerate2.", "text": "Waldo, feel free to steal 638347, in particular if you have a better idea for naming then JS_Enumerate2.", "author": "gal@uci.edu", "is_private": false, "id": 5357997, "attachment_id": null, "creation_time": "2011-03-21T19:49:53Z", "tags": [], "bug_id": 643368}]}}}