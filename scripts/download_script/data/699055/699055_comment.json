{"bugs": {"699055": {"comments": [{"attachment_id": 571344, "tags": [], "creator": "rs@bugzilla.mozilla.pu.futz.org", "creation_time": "2011-11-02T15:51:24Z", "is_private": false, "raw_text": "On my Linux box prnetdb.c was not correctly detecting that getaddrinfo was available and was always using pr_GetAddrInfoByNameFB. I did a bit of digging and found that the ifdefs (and comments about _PR_HAVE_GETADDRINFO) were out of sync with reality. Also, the use of _pr_ipv6_is_present() was used when what really needed to be tested was whether or not getaddrinfo was available.\n\n\nThe attached patch fixes the ifdefs used to determine whether or not to include the _pr_find_getaddrinfo() probe. They now match (though not in the same order), the ifdefs around the _pr_find_getipnodebyname() probe.\n\nIt also adds a static boolean, _pr_use_fallback, which is independent of whether or not ipv6 is enabled/available.\n\nFinally, the code/ifdefs which determine whether or not to use the fallback code in various support routines is updated to use _pr_use_fallback, and simplified to reduce duplicated code.\n\nThis patch is against mozilla-central as of today.", "time": "2011-11-02T15:51:24Z", "author": "rs@bugzilla.mozilla.pu.futz.org", "text": "Created attachment 571344\npatch against moziall-central\n\nOn my Linux box prnetdb.c was not correctly detecting that getaddrinfo was available and was always using pr_GetAddrInfoByNameFB. I did a bit of digging and found that the ifdefs (and comments about _PR_HAVE_GETADDRINFO) were out of sync with reality. Also, the use of _pr_ipv6_is_present() was used when what really needed to be tested was whether or not getaddrinfo was available.\n\n\nThe attached patch fixes the ifdefs used to determine whether or not to include the _pr_find_getaddrinfo() probe. They now match (though not in the same order), the ifdefs around the _pr_find_getipnodebyname() probe.\n\nIt also adds a static boolean, _pr_use_fallback, which is independent of whether or not ipv6 is enabled/available.\n\nFinally, the code/ifdefs which determine whether or not to use the fallback code in various support routines is updated to use _pr_use_fallback, and simplified to reduce duplicated code.\n\nThis patch is against mozilla-central as of today.", "count": 0, "bug_id": 699055, "id": 5820861}, {"creator": "rs@bugzilla.mozilla.pu.futz.org", "count": 1, "text": "Created attachment 603249\nreworked patch\n\nupdated patch after testing on mingw32 and OS X.\n\n- simplify ifdefs around getaddrinfo detection.\n- only define/check _pr_use_fallback if we might need it\n- add _pr_netdb_init for one-time probe of ipv6/getaddrinfo", "author": "rs@bugzilla.mozilla.pu.futz.org", "bug_id": 699055, "id": 6117460, "is_private": false, "creation_time": "2012-03-06T14:25:54Z", "time": "2012-03-06T14:25:54Z", "raw_text": "updated patch after testing on mingw32 and OS X.\n\n- simplify ifdefs around getaddrinfo detection.\n- only define/check _pr_use_fallback if we might need it\n- add _pr_netdb_init for one-time probe of ipv6/getaddrinfo", "attachment_id": 603249, "tags": []}, {"tags": [], "time": "2012-03-29T03:30:37Z", "attachment_id": null, "raw_text": "Hi Robert! Thanks for contributing your first patch!\n\nI took a look at this today since I've been working on cleaning up some DNS bugs, and I have some comments:\n\n-- As you say, the code comment for _PR_HAVE_GETADDRINFO doesn't seem to be in sync with the code - from what I see, it is defined if getaddrinfo IS or MIGHT BE available, i.e. it should not be defined if it is known at build time that a probe will fail. Thus, it makes sense to that this code comment should be updated, and the rest of the code verified based on that.\n\n-- Just to make sure the basic case is covered ... Can you confirm if this was a prebuilt binary from Mozilla or your Linux distro, or did you build it yourself?  If it was a prebuilt binary, can you try building it locally and determine what prnetdb.c does, please? It may be that the prebuilt binary uses the fallback option as a catch-all default (though I'd need to confirm that).\n\n-- Re the patch, I am concerned that the complexity of variables is increased by adding #define PRNETDB_CHECK_FALLBACK and _pr_use_fallback. Have you tried just replacing the calls to _pr_ipv6_is_present() with a call to a new function for getaddrinfo, for example?  Something like:\n\nint _pr_getaddrinfo_present = PR_FALSE;\nint _pr_getaddrinfo_probed = PR_FALSE;\n\nint _pr_is_getaddrinfo_present()\n{\n  if (!_pr_getaddrinfo_probed)\n    _pr_getaddrinfo_present = ... // carry out probe\n  \n  return _pr_getaddrinfo_present\n}\n\nIt's also possible that there may have been reasons in the past to include all the checks in _pr_ipv6_is_present(), but I'm not sure about those.\n\n-- Finally, apart from not calling a function that is already there, do you observe any missing functionality or performance issues using the fallback? Since this is older, relatively stable code, which could affect all platforms, we would need to confirm the patch on all supported platforms.\n\nThanks again for contributing!", "bug_id": 699055, "id": 6180713, "creation_time": "2012-03-29T03:30:37Z", "is_private": false, "creator": "sjhworkman@gmail.com", "author": "sjhworkman@gmail.com", "text": "Hi Robert! Thanks for contributing your first patch!\n\nI took a look at this today since I've been working on cleaning up some DNS bugs, and I have some comments:\n\n-- As you say, the code comment for _PR_HAVE_GETADDRINFO doesn't seem to be in sync with the code - from what I see, it is defined if getaddrinfo IS or MIGHT BE available, i.e. it should not be defined if it is known at build time that a probe will fail. Thus, it makes sense to that this code comment should be updated, and the rest of the code verified based on that.\n\n-- Just to make sure the basic case is covered ... Can you confirm if this was a prebuilt binary from Mozilla or your Linux distro, or did you build it yourself?  If it was a prebuilt binary, can you try building it locally and determine what prnetdb.c does, please? It may be that the prebuilt binary uses the fallback option as a catch-all default (though I'd need to confirm that).\n\n-- Re the patch, I am concerned that the complexity of variables is increased by adding #define PRNETDB_CHECK_FALLBACK and _pr_use_fallback. Have you tried just replacing the calls to _pr_ipv6_is_present() with a call to a new function for getaddrinfo, for example?  Something like:\n\nint _pr_getaddrinfo_present = PR_FALSE;\nint _pr_getaddrinfo_probed = PR_FALSE;\n\nint _pr_is_getaddrinfo_present()\n{\n  if (!_pr_getaddrinfo_probed)\n    _pr_getaddrinfo_present = ... // carry out probe\n  \n  return _pr_getaddrinfo_present\n}\n\nIt's also possible that there may have been reasons in the past to include all the checks in _pr_ipv6_is_present(), but I'm not sure about those.\n\n-- Finally, apart from not calling a function that is already there, do you observe any missing functionality or performance issues using the fallback? Since this is older, relatively stable code, which could affect all platforms, we would need to confirm the patch on all supported platforms.\n\nThanks again for contributing!", "count": 2}, {"creator": "rs@bugzilla.mozilla.pu.futz.org", "text": "Hi Steve, thanks for looking at my patch.\n\n-- This was/is based on mozilla-central.  I will work on a small tweak to add a self-test and print the results. I can test on Linux (F16), Mac OS X (10.umm, 8, i think), cygwin and mingw.\n\n> -- Just to make sure the basic case is covered ... Can you confirm if this was a prebuilt binary from Mozilla or your Linux distro, or did you build it yourself?  If it was a prebuilt binary, can you try building it locally and determine what prnetdb.c does, please? It may be that the prebuilt binary uses the fallback option as a catch-all default (though I'd need to confirm that).\n\n Obviously I'll do what you guys want, but there are a few reasons I added PRNETDB_CHECK_FALLBACK and _pr_use_fallback.\n\n* The macro lets us completely exclude the code for plaforms that don't need it, and IMHO it is much easier to look at the code and understand what is going on. When I started looking at it, I had no idea why fallback was related to _pr_ipv6_is_present(). It wasn't until I checked the code carefully that I could reassure myself that it was just because _pr_ipv6_is_present() is the code that initiates the probe. So I think that the macro actually *reduces* complexity.\n\n* The static bool has two benefits.. \n\n  ** it serves as a marker/documentation in the code for what we expect to be the case wrt probing. Trying to follow all the ifdefs is a major headache, and it helped me remember what was going on when I had to look at the code again after I'd not been working with it for a while.\n\n  ** it just doesn't make sense to me to continually have the overhead of a function call for a check that we essentially only need to perform once.  This is the same is _pr_netdb_initialized for _pr_netdb_init().\n\n> It's also possible that there may have been reasons in the past to include all the checks in _pr_ipv6_is_present()\n\nI'm not sure what your concern is here. At any rate, _pr_ipv6_is_present uses PR_CallOnce to ensure it is only called once, so clearly we shouldn't need to call it more than once either.\n\n> -- Finally, apart from not calling a function that is already there, do you observe any missing functionality or performance issues using the fallback?\n\nNo, but I wasn't looking at performance. The browser seemed to function normaly in my simple tests (visit a few web sites).\n\n> Since this is older, relatively stable code, which could affect all platforms, we would need to confirm the patch on all supported platforms.\n\nYep. I'll test it on the 4 platforms I mentioned earlier. I'm glad to help with any issues that arise on other platforms.", "count": 3, "author": "rs@bugzilla.mozilla.pu.futz.org", "bug_id": 699055, "id": 6182694, "is_private": false, "creation_time": "2012-03-29T19:07:55Z", "time": "2012-03-29T19:07:55Z", "raw_text": "Hi Steve, thanks for looking at my patch.\n\n-- This was/is based on mozilla-central.  I will work on a small tweak to add a self-test and print the results. I can test on Linux (F16), Mac OS X (10.umm, 8, i think), cygwin and mingw.\n\n> -- Just to make sure the basic case is covered ... Can you confirm if this was a prebuilt binary from Mozilla or your Linux distro, or did you build it yourself?  If it was a prebuilt binary, can you try building it locally and determine what prnetdb.c does, please? It may be that the prebuilt binary uses the fallback option as a catch-all default (though I'd need to confirm that).\n\n Obviously I'll do what you guys want, but there are a few reasons I added PRNETDB_CHECK_FALLBACK and _pr_use_fallback.\n\n* The macro lets us completely exclude the code for plaforms that don't need it, and IMHO it is much easier to look at the code and understand what is going on. When I started looking at it, I had no idea why fallback was related to _pr_ipv6_is_present(). It wasn't until I checked the code carefully that I could reassure myself that it was just because _pr_ipv6_is_present() is the code that initiates the probe. So I think that the macro actually *reduces* complexity.\n\n* The static bool has two benefits.. \n\n  ** it serves as a marker/documentation in the code for what we expect to be the case wrt probing. Trying to follow all the ifdefs is a major headache, and it helped me remember what was going on when I had to look at the code again after I'd not been working with it for a while.\n\n  ** it just doesn't make sense to me to continually have the overhead of a function call for a check that we essentially only need to perform once.  This is the same is _pr_netdb_initialized for _pr_netdb_init().\n\n> It's also possible that there may have been reasons in the past to include all the checks in _pr_ipv6_is_present()\n\nI'm not sure what your concern is here. At any rate, _pr_ipv6_is_present uses PR_CallOnce to ensure it is only called once, so clearly we shouldn't need to call it more than once either.\n\n> -- Finally, apart from not calling a function that is already there, do you observe any missing functionality or performance issues using the fallback?\n\nNo, but I wasn't looking at performance. The browser seemed to function normaly in my simple tests (visit a few web sites).\n\n> Since this is older, relatively stable code, which could affect all platforms, we would need to confirm the patch on all supported platforms.\n\nYep. I'll test it on the 4 platforms I mentioned earlier. I'm glad to help with any issues that arise on other platforms.", "attachment_id": null, "tags": []}, {"id": 6205770, "bug_id": 699055, "author": "rs@bugzilla.mozilla.pu.futz.org", "text": "> Yep. I'll test it on the 4 platforms I mentioned earlier. I'm glad to help with any issues that arise on other platforms.\n\nI added this simple patch to log results:\n\ndiff --git a/nsprpub/pr/src/misc/prnetdb.c b/nsprpub/pr/src/misc/prnetdb.c\nindex 2a22ec9..66fd26f 100644\n--- a/nsprpub/pr/src/misc/prnetdb.c\n+++ b/nsprpub/pr/src/misc/prnetdb.c\n@@ -2423,5 +2423,11 @@ static void _pr_netdb_init()\n     /* make sure we've had a chance to probe for ipv6/getaddrinfo */\n     _pr_ipv6_is_present(); /* this will call _pr_find_getaddrinfo() */\n     _pr_use_fallback = (!_pr_getaddrinfo);\n+    PR_LOG(_pr_io_lm, PR_LOG_DEBUG,\n+           (\"_pr_netdb_initialized, _pr_use_fallback=%d, _pr_ipv6_is_present=%d\",\n+            _pr_use_fallback, _pr_ipv6_is_present()));\n+#else\n+    PR_LOG(_pr_io_lm, PR_LOG_DEBUG,\n+           (\"_pr_netdb_initialized, no fallback probes\"));\n #endif\n }\n\nThen ran on a few platforms:\n\n* Linux F16 64bit:\n$ uname -a\nLinux f16 3.2.7-1.fc16.x86_64 #1 SMP Tue Feb 21 01:40:47 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n\n$ NSPR_LOG_MODULES=io:5 ./pr/tests/getai www.mozilla.org\n-144095552[9a2f548]: _pr_netdb_initialized, no fallback probes\n\n* OS X:\n$ uname -a\nDarwin osx 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\n\n$ NSPR_LOG_MODULES=io:5 ./getai www.mozilla.org\n-1597311680[104680]: _pr_netdb_initialized, no fallback probes\n\n* Fedora 16 mingw32 cross-compile, copied to XP box and run under cygwin\n$ uname -a\nCYGWIN_NT-5.1 xp 1.7.11(0.260/5/3) 2012-02-24 14:05 i686 Cygwin\n\n$ NSPR_LOG_MODULES=io:5 ./getai.exe www.cnn.com\n0[3e4008]: _pr_netdb_initialized, _pr_use_fallback=0, _pr_ipv6_is_present=0\n\n\n* MozBuild environment:\n$ uname -a\nMINGW32_NT-5.1 XP 1.0.11(0.46/3/2) 2009-05-23 19:33 i686 Msys\n\n$ NSPR_LOG_MODULES=io:5 ./getai.exe www.cnn.com\n0[3b3668]: _pr_netdb_initialized, _pr_use_fallback=0, _pr_ipv6_is_present=0", "count": 4, "time": "2012-04-07T20:54:01Z", "raw_text": "> Yep. I'll test it on the 4 platforms I mentioned earlier. I'm glad to help with any issues that arise on other platforms.\n\nI added this simple patch to log results:\n\ndiff --git a/nsprpub/pr/src/misc/prnetdb.c b/nsprpub/pr/src/misc/prnetdb.c\nindex 2a22ec9..66fd26f 100644\n--- a/nsprpub/pr/src/misc/prnetdb.c\n+++ b/nsprpub/pr/src/misc/prnetdb.c\n@@ -2423,5 +2423,11 @@ static void _pr_netdb_init()\n     /* make sure we've had a chance to probe for ipv6/getaddrinfo */\n     _pr_ipv6_is_present(); /* this will call _pr_find_getaddrinfo() */\n     _pr_use_fallback = (!_pr_getaddrinfo);\n+    PR_LOG(_pr_io_lm, PR_LOG_DEBUG,\n+           (\"_pr_netdb_initialized, _pr_use_fallback=%d, _pr_ipv6_is_present=%d\",\n+            _pr_use_fallback, _pr_ipv6_is_present()));\n+#else\n+    PR_LOG(_pr_io_lm, PR_LOG_DEBUG,\n+           (\"_pr_netdb_initialized, no fallback probes\"));\n #endif\n }\n\nThen ran on a few platforms:\n\n* Linux F16 64bit:\n$ uname -a\nLinux f16 3.2.7-1.fc16.x86_64 #1 SMP Tue Feb 21 01:40:47 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n\n$ NSPR_LOG_MODULES=io:5 ./pr/tests/getai www.mozilla.org\n-144095552[9a2f548]: _pr_netdb_initialized, no fallback probes\n\n* OS X:\n$ uname -a\nDarwin osx 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\n\n$ NSPR_LOG_MODULES=io:5 ./getai www.mozilla.org\n-1597311680[104680]: _pr_netdb_initialized, no fallback probes\n\n* Fedora 16 mingw32 cross-compile, copied to XP box and run under cygwin\n$ uname -a\nCYGWIN_NT-5.1 xp 1.7.11(0.260/5/3) 2012-02-24 14:05 i686 Cygwin\n\n$ NSPR_LOG_MODULES=io:5 ./getai.exe www.cnn.com\n0[3e4008]: _pr_netdb_initialized, _pr_use_fallback=0, _pr_ipv6_is_present=0\n\n\n* MozBuild environment:\n$ uname -a\nMINGW32_NT-5.1 XP 1.0.11(0.46/3/2) 2009-05-23 19:33 i686 Msys\n\n$ NSPR_LOG_MODULES=io:5 ./getai.exe www.cnn.com\n0[3b3668]: _pr_netdb_initialized, _pr_use_fallback=0, _pr_ipv6_is_present=0", "is_private": false, "creation_time": "2012-04-07T20:54:01Z", "creator": "rs@bugzilla.mozilla.pu.futz.org", "tags": [], "attachment_id": null}, {"tags": [], "attachment_id": 613290, "is_private": false, "creation_time": "2012-04-09T15:03:08Z", "creator": "rs@bugzilla.mozilla.pu.futz.org", "time": "2012-04-09T15:03:08Z", "raw_text": "Went back and tested the fallback case (by tweaking the names which are probed), and found a missing return in PR_FreeAddrInfo that was causing a double free.\n\nchanges from v2:\n     add missing return in fallback case\n     log initialization results to _pr_io_lm", "id": 6207186, "bug_id": 699055, "author": "rs@bugzilla.mozilla.pu.futz.org", "count": 5, "text": "Created attachment 613290\nv3 of getaddr patch\n\nWent back and tested the fallback case (by tweaking the names which are probed), and found a missing return in PR_FreeAddrInfo that was causing a double free.\n\nchanges from v2:\n     add missing return in fallback case\n     log initialization results to _pr_io_lm"}]}}, "comments": {}}