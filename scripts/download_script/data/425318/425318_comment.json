{"bugs": {"425318": {"comments": [{"raw_text": "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9b5pre) Gecko/2008032700 Minefield/3.0pre ID:2008032700\n\nSteps to reproduce:\n-> Open a new Tab\n-> Check the Error Console\n\nError: [Exception... \"Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIDOMLocation.host]\"  nsresult: \"0x80004005 (NS_ERROR_FAILURE)\"  location: \"JS frame :: chrome://browser/content/browser.js :: browser_onSecChange :: line 3819\"  data: no]\nSource File: chrome://browser/content/tabbrowser.xml\nLine: 484\n\nReproduced on a Mac and Windows Debug Build", "creator": "cbook@mozilla.com", "is_private": false, "count": 0, "bug_id": 425318, "attachment_id": null, "id": 3547864, "tags": [], "text": "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9b5pre) Gecko/2008032700 Minefield/3.0pre ID:2008032700\n\nSteps to reproduce:\n-> Open a new Tab\n-> Check the Error Console\n\nError: [Exception... \"Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIDOMLocation.host]\"  nsresult: \"0x80004005 (NS_ERROR_FAILURE)\"  location: \"JS frame :: chrome://browser/content/browser.js :: browser_onSecChange :: line 3819\"  data: no]\nSource File: chrome://browser/content/tabbrowser.xml\nLine: 484\n\nReproduced on a Mac and Windows Debug Build", "time": "2008-03-27T03:44:52Z", "author": "cbook@mozilla.com", "creation_time": "2008-03-27T03:44:52Z"}, {"author": "gavin.sharp@gmail.com", "time": "2008-03-27T05:02:59Z", "text": "This is DEBUG only, right? I think I've had a patch for this in my tree for a while...", "creation_time": "2008-03-27T05:02:59Z", "is_private": false, "count": 1, "bug_id": 425318, "raw_text": "This is DEBUG only, right? I think I've had a patch for this in my tree for a while...", "creator": "gavin.sharp@gmail.com", "tags": [], "attachment_id": null, "id": 3547956}, {"id": 3547957, "attachment_id": 311966, "tags": [], "creator": "gavin.sharp@gmail.com", "raw_text": "nsLocation::GetHost can throw for nsSimpleURIs like about:blank...", "bug_id": 425318, "count": 2, "is_private": false, "creation_time": "2008-03-27T05:03:44Z", "text": "Created attachment 311966\npatch\n\nnsLocation::GetHost can throw for nsSimpleURIs like about:blank...", "time": "2008-03-27T05:03:44Z", "author": "gavin.sharp@gmail.com"}, {"tags": [], "creation_time": "2008-03-27T18:11:44Z", "attachment_id": 311966, "id": 3548858, "is_private": false, "bug_id": 425318, "author": "gavin.sharp@gmail.com", "count": 3, "time": "2008-03-27T18:11:44Z", "text": "Comment on attachment 311966\npatch\n\nSimple debug-only fix to avoid unneeded Error Console noise.", "raw_text": "Simple debug-only fix to avoid unneeded Error Console noise.", "creator": "gavin.sharp@gmail.com"}, {"time": "2008-03-29T21:00:08Z", "author": "mbeltzner@gmail.com", "text": "Comment on attachment 311966\npatch\n\na=beltzner", "creation_time": "2008-03-29T21:00:08Z", "bug_id": 425318, "count": 4, "is_private": false, "creator": "mbeltzner@gmail.com", "raw_text": "a=beltzner", "tags": [], "id": 3552735, "attachment_id": 311966}, {"raw_text": "mozilla/browser/base/content/browser.js \t1.1021 ", "text": "mozilla/browser/base/content/browser.js \t1.1021 ", "creator": "gavin.sharp@gmail.com", "is_private": false, "bug_id": 425318, "time": "2008-04-04T20:27:56Z", "count": 5, "author": "gavin.sharp@gmail.com", "attachment_id": null, "id": 3562836, "tags": [], "creation_time": "2008-04-04T20:27:56Z"}, {"bug_id": 425318, "count": 6, "is_private": false, "creator": "dan@danwendorf.com", "raw_text": "I think this is a more general error with nsIDOMLocation.host and nsIDOMLocation.hostname, even in non-debug builds. When the location is an about: page like about:blank, both location.host and location.hostname will cause an NS_ERROR_FAILURE. To see this, just go to about:blank, then enter javascript:location.host or javascript:location.hostname in the address bar.", "tags": [], "id": 3658444, "attachment_id": null, "author": "dan@danwendorf.com", "time": "2008-06-12T10:06:02Z", "text": "I think this is a more general error with nsIDOMLocation.host and nsIDOMLocation.hostname, even in non-debug builds. When the location is an about: page like about:blank, both location.host and location.hostname will cause an NS_ERROR_FAILURE. To see this, just go to about:blank, then enter javascript:location.host or javascript:location.hostname in the address bar.", "creation_time": "2008-06-12T10:06:02Z"}, {"raw_text": "That's expected behavior, since about: URIs are nsSimpleURIs rather than nsStandardURLs. What would the hostname of an about: URI be, anyways?", "creator": "gavin.sharp@gmail.com", "is_private": false, "bug_id": 425318, "count": 7, "attachment_id": null, "id": 3659818, "tags": [], "text": "That's expected behavior, since about: URIs are nsSimpleURIs rather than nsStandardURLs. What would the hostname of an about: URI be, anyways?", "time": "2008-06-13T01:04:17Z", "author": "gavin.sharp@gmail.com", "creation_time": "2008-06-13T01:04:17Z"}, {"creator": "dan@danwendorf.com", "raw_text": "Since there is no hostname, it seems like .host should return undefined. That would be more well-behaved than a Javascript call returning a C++ error.", "text": "Since there is no hostname, it seems like .host should return undefined. That would be more well-behaved than a Javascript call returning a C++ error.", "count": 8, "time": "2008-06-13T10:27:40Z", "author": "dan@danwendorf.com", "bug_id": 425318, "is_private": false, "id": 3660215, "attachment_id": null, "creation_time": "2008-06-13T10:27:40Z", "tags": []}, {"id": 3661973, "attachment_id": null, "creation_time": "2008-06-15T04:33:08Z", "tags": [], "creator": "gavin.sharp@gmail.com", "text": "The API in question isn't a pure JS API, it's an XPCOM getter. That means it can be used by C++, which somewhat restricts it's behavior - it must follow XPCOM conventions. Even if we were to make the architectural changes required to change this behavior, and were willing to swallow the compatibility hit that implies, in most cases it wouldn't really help - the difference between checking for undefined and using try/catch isn't significant. Callers need to deal either way.", "raw_text": "The API in question isn't a pure JS API, it's an XPCOM getter. That means it can be used by C++, which somewhat restricts it's behavior - it must follow XPCOM conventions. Even if we were to make the architectural changes required to change this behavior, and were willing to swallow the compatibility hit that implies, in most cases it wouldn't really help - the difference between checking for undefined and using try/catch isn't significant. Callers need to deal either way.", "count": 9, "time": "2008-06-15T04:33:08Z", "author": "gavin.sharp@gmail.com", "bug_id": 425318, "is_private": false}]}}, "comments": {}}