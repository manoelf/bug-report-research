{"bugs": {"687237": {"comments": [{"tags": [], "time": "2011-09-17T10:29:32Z", "attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 5.1; rv:6.0.2) Gecko/20100101 Firefox/6.0.2\nBuild ID: 20110902133214\n\nSteps to reproduce:\n\nSome people prefer to persist read/unread state across sessions. This may be controlled by a pref.", "bug_id": 687237, "id": 5721351, "creation_time": "2011-09-17T10:29:32Z", "is_private": false, "creator": "tabutils+bugzilla@gmail.com", "author": "tabutils+bugzilla@gmail.com", "count": 0, "text": "User Agent: Mozilla/5.0 (Windows NT 5.1; rv:6.0.2) Gecko/20100101 Firefox/6.0.2\nBuild ID: 20110902133214\n\nSteps to reproduce:\n\nSome people prefer to persist read/unread state across sessions. This may be controlled by a pref."}, {"creator": "tabutils+bugzilla@gmail.com", "is_private": false, "creation_time": "2011-09-20T13:39:27Z", "attachment_id": 561176, "tags": [], "author": "tabutils+bugzilla@gmail.com", "text": "Created attachment 561176\npatch", "count": 1, "bug_id": 687237, "id": 5725401, "raw_text": "", "time": "2011-09-20T13:39:27Z"}, {"is_private": false, "creation_time": "2011-09-20T14:57:42Z", "id": 5725576, "bug_id": 687237, "count": 2, "text": "This seems to be an enhancement request rather than a bug.\nithinc, please mark it correspondingly.", "author": "ioana_damy@yahoo.com", "creator": "ioana_damy@yahoo.com", "tags": [], "raw_text": "This seems to be an enhancement request rather than a bug.\nithinc, please mark it correspondingly.", "attachment_id": null, "time": "2011-09-20T14:57:42Z"}, {"is_private": false, "creation_time": "2011-09-24T01:43:03Z", "id": 5734943, "bug_id": 687237, "author": "lenniger@yahoo.com", "count": 3, "text": "Comment on attachment 561176\npatch\n\n/browser/base/content/tabbrowser.xml\n\n\n>-                if (!this.mTab.selected)\n>+                if (!this.mTab.selected && !this.mBrowser.__SS_restoreState)\n>                   this.mTab.setAttribute(\"unread\", \"true\");\n\nWe don't need this one. \"unread\" should only be set if the tab is reloaded (sessionstore.load_on_demand=false). Session restore should keep the read/unread status if the the session is restored with sessionstore.load_on_demand=true.\n\n/browser/components/sessionstore/src/nsSessionStore.js\n>-  xulAttributes: {\"image\": true},\n>+  xulAttributes: {\"image\": true, \"unread\": true},\n\nThis is all it needs.\nIs sessionstore.load_on_demand is true, pages don't automatically reload in background. So tabs keep their previous read/unread status and only get a fresh \"unread\" on manual reload of of unselected tabs.", "creator": "lenniger@yahoo.com", "tags": [], "attachment_id": 561176, "raw_text": "/browser/base/content/tabbrowser.xml\n\n\n>-                if (!this.mTab.selected)\n>+                if (!this.mTab.selected && !this.mBrowser.__SS_restoreState)\n>                   this.mTab.setAttribute(\"unread\", \"true\");\n\nWe don't need this one. \"unread\" should only be set if the tab is reloaded (sessionstore.load_on_demand=false). Session restore should keep the read/unread status if the the session is restored with sessionstore.load_on_demand=true.\n\n/browser/components/sessionstore/src/nsSessionStore.js\n>-  xulAttributes: {\"image\": true},\n>+  xulAttributes: {\"image\": true, \"unread\": true},\n\nThis is all it needs.\nIs sessionstore.load_on_demand is true, pages don't automatically reload in background. So tabs keep their previous read/unread status and only get a fresh \"unread\" on manual reload of of unselected tabs.", "time": "2011-09-24T01:43:03Z"}, {"text": "The pref is sessionstore.restore_on_demand, not sessionstore.load_on_demand. Sorry", "count": 4, "author": "lenniger@yahoo.com", "creator": "lenniger@yahoo.com", "creation_time": "2011-09-24T01:49:03Z", "is_private": false, "id": 5734946, "bug_id": 687237, "raw_text": "The pref is sessionstore.restore_on_demand, not sessionstore.load_on_demand. Sorry", "attachment_id": null, "time": "2011-09-24T01:49:03Z", "tags": []}, {"attachment_id": null, "raw_text": "(In reply to Len from comment #3)\n> We don't need this one. \"unread\" should only be set if the tab is reloaded\n> (sessionstore.load_on_demand=false). Session restore should keep the\n> read/unread status if the the session is restored with\n> sessionstore.load_on_demand=true.\n\nI mean to keep the read/unread status regardless of the restore_on_demand pref. The restore is usually not a reload.", "time": "2011-09-24T04:25:39Z", "tags": [], "author": "tabutils+bugzilla@gmail.com", "count": 5, "text": "(In reply to Len from comment #3)\n> We don't need this one. \"unread\" should only be set if the tab is reloaded\n> (sessionstore.load_on_demand=false). Session restore should keep the\n> read/unread status if the the session is restored with\n> sessionstore.load_on_demand=true.\n\nI mean to keep the read/unread status regardless of the restore_on_demand pref. The restore is usually not a reload.", "creator": "tabutils+bugzilla@gmail.com", "creation_time": "2011-09-24T04:25:39Z", "is_private": false, "id": 5735070, "bug_id": 687237}, {"raw_text": "(In reply to ithinc from comment #5)\n> I mean to keep the read/unread status regardless of the restore_on_demand\n> pref. The restore is usually not a reload.\n\nThe default is to restore _and_ reload. With restore_on_demand you can change it to restore and wait until a user demands a reload (select, manual reload).\nI ever think of it as 'reload on demand only', that's why I first named it wrong in comment 3.\n\n\nThe latest change for \"unread\" (see bug 687754) makes sure that attribute is only set after a reload happened (if an existing \"busy\" is removed). Add your patch of nsSesionStore.js to it and we are done.\nWhat happens now is the following:\n- restore_on_demand = false (default)\nAll tabs are restored with the attributes that were saved, than the tabs are reloaded part by part and are getting \"unread\" after they finish reloading.\nThis makes sense because they are reloaded since you looked at them last time.\n- restore_on_demand = true (set by user)\nAll tabs are restored with the attributes that were saved and because no automatic reload happens, they keep their read/unread status until you do a manual reload.\n\nThat's how I expect it to work.\n\n\nTo keep the read/unread status regardless of the restore_on_demand pref is wrong in my eyes. Let me give you an example:\nYou looked at tab 2, changed to tab 5 and now you save your session or it crashes. You are restarting that session and your selected tab will be no 5. Tab 2 (and the others too) gets reloaded with possibly changed content (i.e. a news site); shouldn't it become \"unread\" now? If you ignore the restore_on_demand setting you will still see the read status even after a _reload_ happened, which I think is wrong.", "attachment_id": null, "time": "2011-09-24T13:34:32Z", "tags": [], "text": "(In reply to ithinc from comment #5)\n> I mean to keep the read/unread status regardless of the restore_on_demand\n> pref. The restore is usually not a reload.\n\nThe default is to restore _and_ reload. With restore_on_demand you can change it to restore and wait until a user demands a reload (select, manual reload).\nI ever think of it as 'reload on demand only', that's why I first named it wrong in comment 3.\n\n\nThe latest change for \"unread\" (see bug 687754) makes sure that attribute is only set after a reload happened (if an existing \"busy\" is removed). Add your patch of nsSesionStore.js to it and we are done.\nWhat happens now is the following:\n- restore_on_demand = false (default)\nAll tabs are restored with the attributes that were saved, than the tabs are reloaded part by part and are getting \"unread\" after they finish reloading.\nThis makes sense because they are reloaded since you looked at them last time.\n- restore_on_demand = true (set by user)\nAll tabs are restored with the attributes that were saved and because no automatic reload happens, they keep their read/unread status until you do a manual reload.\n\nThat's how I expect it to work.\n\n\nTo keep the read/unread status regardless of the restore_on_demand pref is wrong in my eyes. Let me give you an example:\nYou looked at tab 2, changed to tab 5 and now you save your session or it crashes. You are restarting that session and your selected tab will be no 5. Tab 2 (and the others too) gets reloaded with possibly changed content (i.e. a news site); shouldn't it become \"unread\" now? If you ignore the restore_on_demand setting you will still see the read status even after a _reload_ happened, which I think is wrong.", "count": 6, "author": "lenniger@yahoo.com", "creator": "lenniger@yahoo.com", "creation_time": "2011-09-24T13:34:32Z", "is_private": false, "id": 5735391, "bug_id": 687237}, {"tags": [], "attachment_id": null, "creation_time": "2011-09-24T14:12:40Z", "is_private": false, "creator": "tabutils+bugzilla@gmail.com", "raw_text": "(In reply to Len from comment #6)\n> Tab 2 (and the others too) gets reloaded with possibly changed content (i.e.\n> a news site); shouldn't it become \"unread\" now? If you ignore the\n> restore_on_demand setting you will still see the read status even after a\n> _reload_ happened, which I think is wrong.\n\nTab 2 (and the others) won't get reloaded after Firefox restarts unless the cache is expired.\nWith restore_on_demand set to true, you'll need to Reload Tab twice to get the page updated.", "time": "2011-09-24T14:12:40Z", "id": 5735402, "bug_id": 687237, "count": 7, "text": "(In reply to Len from comment #6)\n> Tab 2 (and the others too) gets reloaded with possibly changed content (i.e.\n> a news site); shouldn't it become \"unread\" now? If you ignore the\n> restore_on_demand setting you will still see the read status even after a\n> _reload_ happened, which I think is wrong.\n\nTab 2 (and the others) won't get reloaded after Firefox restarts unless the cache is expired.\nWith restore_on_demand set to true, you'll need to Reload Tab twice to get the page updated.", "author": "tabutils+bugzilla@gmail.com"}, {"time": "2011-09-24T22:27:05Z", "raw_text": "There must be a reason why the reload behavior looks so different for you and me.\nAnd I never had to reload twice to get a page updated. Sounds like a major bug to me if you have to.\n\nIn which FF version did you test it and what is your setting of browser.sessionstore.restore_on_demand in about:config?\nI was testing in FF9.0a1 build 20110918030911 with an actual tabbrowser.xml, with browser.sessionstore.restore_on_demand false and true. Just retested in FF9.0a1 build 20110924030858 with same results as before.", "id": 5735673, "bug_id": 687237, "text": "There must be a reason why the reload behavior looks so different for you and me.\nAnd I never had to reload twice to get a page updated. Sounds like a major bug to me if you have to.\n\nIn which FF version did you test it and what is your setting of browser.sessionstore.restore_on_demand in about:config?\nI was testing in FF9.0a1 build 20110918030911 with an actual tabbrowser.xml, with browser.sessionstore.restore_on_demand false and true. Just retested in FF9.0a1 build 20110924030858 with same results as before.", "count": 8, "author": "lenniger@yahoo.com", "tags": [], "attachment_id": null, "creation_time": "2011-09-24T22:27:05Z", "is_private": false, "creator": "lenniger@yahoo.com"}, {"creator": "tabutils+bugzilla@gmail.com", "text": "(In reply to Len from comment #8)\n> In which FF version did you test it and what is your setting of\n> browser.sessionstore.restore_on_demand in about:config?\n\nSession restore works so in all Firefox versions, just like what bug 635453 reported.", "count": 9, "author": "tabutils+bugzilla@gmail.com", "id": 5735943, "bug_id": 687237, "is_private": false, "creation_time": "2011-09-25T14:05:22Z", "time": "2011-09-25T14:05:22Z", "raw_text": "(In reply to Len from comment #8)\n> In which FF version did you test it and what is your setting of\n> browser.sessionstore.restore_on_demand in about:config?\n\nSession restore works so in all Firefox versions, just like what bug 635453 reported.", "attachment_id": null, "tags": []}, {"raw_text": "Bug 635453 - Apps tabs (pin tabs) aren't refresh on startup \nNot really related here.\nAnd there are many changes in sessionstore going on related to restoring, prefs, pinned tabs etc.\n\nLet me try to make my point clearer:\nOn adding unread to the xulAttributes sessionstore saves/restores the tabs with existing unread attributes.\nCase 1: If a page is restored from cache, there is no change of the unread attribute.\nCase 2: If a page is reloaded from the web, it is marked unread because it is no longer the page you saw before. It might be identical but that would need a detailed compare of the page content.\n\nIf restoring includes a reload, we have case 2 and unread is to be set.\n\nFF9 is the version that has the patch to handle \"unread\". So it makes sense to test related patches in that version.", "attachment_id": null, "time": "2011-09-25T21:32:29Z", "tags": [], "count": 10, "text": "Bug 635453 - Apps tabs (pin tabs) aren't refresh on startup \nNot really related here.\nAnd there are many changes in sessionstore going on related to restoring, prefs, pinned tabs etc.\n\nLet me try to make my point clearer:\nOn adding unread to the xulAttributes sessionstore saves/restores the tabs with existing unread attributes.\nCase 1: If a page is restored from cache, there is no change of the unread attribute.\nCase 2: If a page is reloaded from the web, it is marked unread because it is no longer the page you saw before. It might be identical but that would need a detailed compare of the page content.\n\nIf restoring includes a reload, we have case 2 and unread is to be set.\n\nFF9 is the version that has the patch to handle \"unread\". So it makes sense to test related patches in that version.", "author": "lenniger@yahoo.com", "creator": "lenniger@yahoo.com", "is_private": false, "creation_time": "2011-09-25T21:32:29Z", "id": 5736183, "bug_id": 687237}, {"count": 11, "text": "(In reply to Len from comment #10)\n> Bug 635453 - Apps tabs (pin tabs) aren't refresh on startup \n> Not really related here.\n\nI was not saying bug 635453 is related with this one, but that bug just provides some information that you seem to have no in mind.\n\n> Case 1: If a page is restored from cache, there is no change of the unread\n> attribute.\n> Case 2: If a page is reloaded from the web, it is marked unread because it\n> is no longer the page you saw before. It might be identical but that would\n> need a detailed compare of the page content.\n> \n> If restoring includes a reload, we have case 2 and unread is to be set.\n\nRestoring from cache is what session restore (including on-demand session restore) does, so we won't have case 2 usually.\n\n> FF9 is the version that has the patch to handle \"unread\". So it makes sense\n> to test related patches in that version.\n\nYes, tested.", "author": "tabutils+bugzilla@gmail.com", "bug_id": 687237, "id": 5739806, "time": "2011-09-27T12:11:58Z", "raw_text": "(In reply to Len from comment #10)\n> Bug 635453 - Apps tabs (pin tabs) aren't refresh on startup \n> Not really related here.\n\nI was not saying bug 635453 is related with this one, but that bug just provides some information that you seem to have no in mind.\n\n> Case 1: If a page is restored from cache, there is no change of the unread\n> attribute.\n> Case 2: If a page is reloaded from the web, it is marked unread because it\n> is no longer the page you saw before. It might be identical but that would\n> need a detailed compare of the page content.\n> \n> If restoring includes a reload, we have case 2 and unread is to be set.\n\nRestoring from cache is what session restore (including on-demand session restore) does, so we won't have case 2 usually.\n\n> FF9 is the version that has the patch to handle \"unread\". So it makes sense\n> to test related patches in that version.\n\nYes, tested.", "creator": "tabutils+bugzilla@gmail.com", "is_private": false, "creation_time": "2011-09-27T12:11:58Z", "attachment_id": null, "tags": []}, {"creator": "dao+bmo@mozilla.com", "is_private": false, "creation_time": "2012-12-03T07:12:54Z", "attachment_id": 561176, "tags": [], "count": 12, "text": "Comment on attachment 561176\npatch\n\n>diff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\n>--- a/browser/base/content/tabbrowser.xml\n>+++ b/browser/base/content/tabbrowser.xml\n>@@ -563,17 +581,17 @@\n>                 if (this.mBlank)\n>                   this.mBlank = false;\n> \n>                 if (this.mTab.hasAttribute(\"busy\")) {\n>                   this.mTab.removeAttribute(\"busy\");\n>                   this.mTabBrowser._tabAttrModified(this.mTab);\n>                 }\n>                 this.mTab.removeAttribute(\"progress\");\n>-                if (!this.mTab.selected)\n>+                if (!this.mTab.selected && !this.mBrowser.__SS_restoreState)\n>                   this.mTab.setAttribute(\"unread\", \"true\");\n\ntabbrowser shouldn't mess with sessionstore internals like this", "author": "dao+bmo@mozilla.com", "id": 6873297, "bug_id": 687237, "raw_text": ">diff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\n>--- a/browser/base/content/tabbrowser.xml\n>+++ b/browser/base/content/tabbrowser.xml\n>@@ -563,17 +581,17 @@\n>                 if (this.mBlank)\n>                   this.mBlank = false;\n> \n>                 if (this.mTab.hasAttribute(\"busy\")) {\n>                   this.mTab.removeAttribute(\"busy\");\n>                   this.mTabBrowser._tabAttrModified(this.mTab);\n>                 }\n>                 this.mTab.removeAttribute(\"progress\");\n>-                if (!this.mTab.selected)\n>+                if (!this.mTab.selected && !this.mBrowser.__SS_restoreState)\n>                   this.mTab.setAttribute(\"unread\", \"true\");\n\ntabbrowser shouldn't mess with sessionstore internals like this", "time": "2012-12-03T07:12:54Z"}, {"time": "2012-12-15T22:33:20Z", "attachment_id": 692654, "raw_text": "", "tags": [], "creator": "tabutils+bugzilla@gmail.com", "author": "tabutils+bugzilla@gmail.com", "count": 13, "text": "Created attachment 692654\npatch", "id": 6918345, "bug_id": 687237, "is_private": false, "creation_time": "2012-12-15T22:33:20Z"}, {"count": 14, "text": "To save and restore the read/unread status between browser sessions, we only need the attribute added to the xulAttributes list. Adding it one time by hand in sessionstore.js does the trick too (as long as you keep at least 1 'unread' tab). That's what I see since we have the unread attribute. The browser starts with the previous read/unread and if sessionstore is reloading a page from the web, the tab becomes 'unread' again; exactly how it should be.\n\n> -                  if (!this.mTab.selected)\n> +                  if (!this.mTab.selected && !this.mTab.hasAttribute(\"restoring\"))\n>                      this.mTab.setAttribute(\"unread\", \"true\");\n\nIf a page is set to 'read' and sessionstore is reloading it from the web with fresh content, you want to keep it as read instead setting it to 'unread' as it should be?\nOr am I misunderstanding the 'restoring' attribute?", "author": "lenniger@yahoo.com", "creator": "lenniger@yahoo.com", "is_private": false, "creation_time": "2012-12-17T11:17:33Z", "id": 6920268, "bug_id": 687237, "raw_text": "To save and restore the read/unread status between browser sessions, we only need the attribute added to the xulAttributes list. Adding it one time by hand in sessionstore.js does the trick too (as long as you keep at least 1 'unread' tab). That's what I see since we have the unread attribute. The browser starts with the previous read/unread and if sessionstore is reloading a page from the web, the tab becomes 'unread' again; exactly how it should be.\n\n> -                  if (!this.mTab.selected)\n> +                  if (!this.mTab.selected && !this.mTab.hasAttribute(\"restoring\"))\n>                      this.mTab.setAttribute(\"unread\", \"true\");\n\nIf a page is set to 'read' and sessionstore is reloading it from the web with fresh content, you want to keep it as read instead setting it to 'unread' as it should be?\nOr am I misunderstanding the 'restoring' attribute?", "attachment_id": null, "time": "2012-12-17T11:17:33Z", "tags": []}, {"creation_time": "2012-12-17T13:11:49Z", "is_private": false, "creator": "tabutils+bugzilla@gmail.com", "tags": [], "attachment_id": null, "id": 6920438, "bug_id": 687237, "author": "tabutils+bugzilla@gmail.com", "text": "Session restore reloads a page from the cache instead of the web. Read bug 706970 and bug 792585.\n\n(bug 792585 comment #27 by Dietrich Ayala (:dietrich) )\n> \n> 1. The session restore feature is designed to have Firefox behave as if you\n> had not restarted the browser. There are definitely places where we can't or\n> don't do that exactly for various reasons, but it's the general approach.\n> Firefox would not force-reload tabs for a user without their or the\n> website's prompting. So this feature should also not do that.\n> ...", "count": 15, "raw_text": "Session restore reloads a page from the cache instead of the web. Read bug 706970 and bug 792585.\n\n(bug 792585 comment #27 by Dietrich Ayala (:dietrich) )\n> \n> 1. The session restore feature is designed to have Firefox behave as if you\n> had not restarted the browser. There are definitely places where we can't or\n> don't do that exactly for various reasons, but it's the general approach.\n> Firefox would not force-reload tabs for a user without their or the\n> website's prompting. So this feature should also not do that.\n> ...", "time": "2012-12-17T13:11:49Z"}, {"creation_time": "2012-12-17T21:12:34Z", "is_private": false, "bug_id": 687237, "id": 6922283, "author": "lenniger@yahoo.com", "text": "> Session restore reloads a page from the cache instead of the web.\nCan you give us your restore settings and an example url of a page that is reloaded from cache but gets unread set?\n\n(bug 792585 comment #27 by Dietrich Ayala (:dietrich) )\n> \n> 1. The session restore feature is designed to have Firefox behave as if you\n> had not restarted the browser. There are definitely places where we can't or\n> don't do that exactly for various reasons, but it's the general approach.\n\nThe second sentence hints to situations where sessionstore isn't using the cache 'for various reasons'.\n\nIf sessionstore reloads from web instead from cache when it should take from cache, than it's a problem of sessionstore and not of tabbrowser.\n\nExample 1:\n- load a news page, select it (read) and than switch to a different tab\n- restart the browser\n- sessionstore decides to reload the news page from cache (with the old content)\n- the tab should show as read\n\nExample 2:\n- load a news page, select it (read) and than switch to a different tab\n- restart the browser\n- sessionstore decides to reload the news page from server (possibly with new content)\n- the tab should show as unread\n\nIt's the job of sessionstore to decide from where to reload and if it's reloaded from the server, unread should show that. Doesn't matter who forced a reload from server (me or sessionstore), it should result in setting the tab to unread. Anything else is a regression.\nIf you want it differently marked, you might be able to use your restoring attribute in CSS (read + restoring = reloading from cache, unread + restoring = reloading from server).", "count": 16, "creator": "lenniger@yahoo.com", "tags": [], "attachment_id": null, "raw_text": "> Session restore reloads a page from the cache instead of the web.\nCan you give us your restore settings and an example url of a page that is reloaded from cache but gets unread set?\n\n(bug 792585 comment #27 by Dietrich Ayala (:dietrich) )\n> \n> 1. The session restore feature is designed to have Firefox behave as if you\n> had not restarted the browser. There are definitely places where we can't or\n> don't do that exactly for various reasons, but it's the general approach.\n\nThe second sentence hints to situations where sessionstore isn't using the cache 'for various reasons'.\n\nIf sessionstore reloads from web instead from cache when it should take from cache, than it's a problem of sessionstore and not of tabbrowser.\n\nExample 1:\n- load a news page, select it (read) and than switch to a different tab\n- restart the browser\n- sessionstore decides to reload the news page from cache (with the old content)\n- the tab should show as read\n\nExample 2:\n- load a news page, select it (read) and than switch to a different tab\n- restart the browser\n- sessionstore decides to reload the news page from server (possibly with new content)\n- the tab should show as unread\n\nIt's the job of sessionstore to decide from where to reload and if it's reloaded from the server, unread should show that. Doesn't matter who forced a reload from server (me or sessionstore), it should result in setting the tab to unread. Anything else is a regression.\nIf you want it differently marked, you might be able to use your restoring attribute in CSS (read + restoring = reloading from cache, unread + restoring = reloading from server).", "time": "2012-12-17T21:12:34Z"}, {"is_private": false, "creation_time": "2013-03-22T10:26:20Z", "bug_id": 687237, "id": 7233303, "text": "Comment on attachment 692654\npatch\n\nReview of attachment 692654:\n-----------------------------------------------------------------\n\nI think all we need to do is to add \"unread\" to the xulAttributes property.", "count": 17, "author": "ttaubert@mozilla.com", "creator": "ttaubert@mozilla.com", "tags": [], "raw_text": "Review of attachment 692654:\n-----------------------------------------------------------------\n\nI think all we need to do is to add \"unread\" to the xulAttributes property.", "attachment_id": 692654, "time": "2013-03-22T10:26:20Z"}, {"author": "tabutils+bugzilla@gmail.com", "text": "(In reply to Tim Taubert [:ttaubert] from comment #17)\n> I think all we need to do is to add \"unread\" to the xulAttributes property.\n\nIt's not enough. The \"unread\" attribute will always be set to \"true\" after restoration, thus not \"restored\".", "count": 18, "creator": "tabutils+bugzilla@gmail.com", "creation_time": "2014-01-16T17:13:23Z", "is_private": false, "id": 8298755, "bug_id": 687237, "attachment_id": null, "raw_text": "(In reply to Tim Taubert [:ttaubert] from comment #17)\n> I think all we need to do is to add \"unread\" to the xulAttributes property.\n\nIt's not enough. The \"unread\" attribute will always be set to \"true\" after restoration, thus not \"restored\".", "time": "2014-01-16T17:13:23Z", "tags": []}]}}, "comments": {}}