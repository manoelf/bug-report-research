{"bugs": {"648657": {"comments": [{"count": 0, "text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Firefox 4.0\n\nIt's not possible to write a web app that prints within 3/4 of an inch of the page edge without having the user open about:config and change print.print_margin_xxxx prefs.\n\nAsking web app users to open about:config is wildly dangerous.\n\nNot being able to print within 1/2 inch of the top of the page makes it impossible to create a web app to print business cards on stock pre-perfed card stock.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Open the demo page at http://netfools.com/bugzamples/cardmaker/index.html\n2.Open File>Page Setup and notice that there is no page margin UI.\n3.Click the Print Cards button and notice that the output is not centered on the page.\nActual Results:  \nThe output is split between two pages.\n\nExpected Results:  \nThe output should be centered so that cards printed on any of the business card stock forms listed in the right hand column are properly centered.", "author": "richard@mozilla.com", "creator": "richard@mozilla.com", "attachment_id": null, "id": 5397622, "time": "2011-04-08T22:00:39Z", "tags": [], "creation_time": "2011-04-08T22:00:39Z", "bug_id": 648657, "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Firefox 4.0\n\nIt's not possible to write a web app that prints within 3/4 of an inch of the page edge without having the user open about:config and change print.print_margin_xxxx prefs.\n\nAsking web app users to open about:config is wildly dangerous.\n\nNot being able to print within 1/2 inch of the top of the page makes it impossible to create a web app to print business cards on stock pre-perfed card stock.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Open the demo page at http://netfools.com/bugzamples/cardmaker/index.html\n2.Open File>Page Setup and notice that there is no page margin UI.\n3.Click the Print Cards button and notice that the output is not centered on the page.\nActual Results:  \nThe output is split between two pages.\n\nExpected Results:  \nThe output should be centered so that cards printed on any of the business card stock forms listed in the right hand column are properly centered.", "is_private": false}, {"id": 5408902, "author": "richard@mozilla.com", "time": "2011-04-14T07:35:48Z", "text": "In Aurora 5.0a2, the print.print_margin_xxxx prefs appear to have been removed.  \n\nSadly, the minimum margin is now 5/8 of an inch.\n\nThis is a step backwards.  It is now completely impossible to print a 7 by 10 inch rectangle on an 8-1/2 by 11 inch sheet of paper.", "count": 1, "is_private": false, "attachment_id": null, "creator": "richard@mozilla.com", "tags": [], "raw_text": "In Aurora 5.0a2, the print.print_margin_xxxx prefs appear to have been removed.  \n\nSadly, the minimum margin is now 5/8 of an inch.\n\nThis is a step backwards.  It is now completely impossible to print a 7 by 10 inch rectangle on an 8-1/2 by 11 inch sheet of paper.", "bug_id": 648657, "creation_time": "2011-04-14T07:35:48Z"}, {"is_private": false, "creation_time": "2011-04-14T15:49:54Z", "bug_id": 648657, "raw_text": "I think it may be that the prefs are still active, but no longer created by default. I'm no expert on how that code works, but the file that appears to use those prefs hasn't changed in years.\n\nIn banging around in MXR, I did discover some additional prefs that might help: \n\nhttp://mxr.mozilla.org/mozilla-central/source/modules/libpref/src/init/all.js#343\n\nI was hoping that setting those to zero will make the print_margin prefs behave predictably, at the expense of the printer clipping if it's not capable of full bleed. I'm unable to test that right now on a real printer, but using the Preview button with the HP LJ4350 driver (OSX 10.6.7) still gives me a 1/2 top and left margin in Aurora.", "tags": [], "time": "2011-04-14T15:49:54Z", "id": 5409546, "attachment_id": null, "creator": "zandr@mozilla.com", "author": "zandr@mozilla.com", "count": 2, "text": "I think it may be that the prefs are still active, but no longer created by default. I'm no expert on how that code works, but the file that appears to use those prefs hasn't changed in years.\n\nIn banging around in MXR, I did discover some additional prefs that might help: \n\nhttp://mxr.mozilla.org/mozilla-central/source/modules/libpref/src/init/all.js#343\n\nI was hoping that setting those to zero will make the print_margin prefs behave predictably, at the expense of the printer clipping if it's not capable of full bleed. I'm unable to test that right now on a real printer, but using the Preview button with the HP LJ4350 driver (OSX 10.6.7) still gives me a 1/2 top and left margin in Aurora."}, {"tags": [], "creator": "richard@mozilla.com", "bug_id": 648657, "creation_time": "2011-04-14T22:28:42Z", "raw_text": "Ignore Comment 1.   Those prefs seem to appear automagically somewhere in the process of using the printer for the first time.  (but seemingly not triggered by using the Page Setup dialog.", "is_private": false, "attachment_id": null, "count": 3, "text": "Ignore Comment 1.   Those prefs seem to appear automagically somewhere in the process of using the printer for the first time.  (but seemingly not triggered by using the Page Setup dialog.", "id": 5410700, "time": "2011-04-14T22:28:42Z", "author": "richard@mozilla.com"}, {"is_private": false, "creation_time": "2011-09-26T19:53:10Z", "bug_id": 648657, "raw_text": "There is now a print alignment target which is better for illustrating this problem at: http://netfools.com/labels/align.html", "tags": [], "time": "2011-09-26T19:53:10Z", "id": 5737816, "attachment_id": null, "creator": "richard@mozilla.com", "author": "richard@mozilla.com", "text": "There is now a print alignment target which is better for illustrating this problem at: http://netfools.com/labels/align.html", "count": 4}, {"raw_text": "Took a couple minutes to figure out where these defaults were coming from.\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/xpwidgets/nsPrintSettingsImpl.cpp#85\nThe default \"0.5\" value for print_margin_xxx value is coming from the nsPrintSettings constructor, where margin defaults to DEFAULT_MARGIN_WIDTH, which is 0.5.\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/xpwidgets/nsPrintOptionsImpl.cpp#245\nIf the prefs have been changed, they are read out in the nsPrintOptions::ReadPrefs method, here.  If they're not defined, another 0.5 default is applied.\n\nhttp://mxr.mozilla.org/mozilla-central/source/layout/generic/nsSimplePageSequence.cpp#203\nhttp://mxr.mozilla.org/mozilla-central/source/layout/printing/nsPrintEngine.cpp#2329\nThese margins are applied either by the nsSimplePageSequence, or the nsPrintEngine.cpp (for Print Selection).  The margin and the unwriteable margin are added together and subtracted from the content.   From a quick reading it doesn't look like the CSS margin property has any ability to change that.\n\nOn Cocoa, the relevant bits of logic are:\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/cocoa/nsPrintSettingsX.mm#109\nwhere InitUnwritableMargin reads the paper margins from the current PMPage and saves them to the mUnwriteableMargin variable (whence they will become the print_unwriteable_margin_[xxx] prefs)\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/cocoa/nsPrintDialogX.mm\nMost of the Cocoa printing settings are preserved opaquely inside the nsPrintSettingsX object, through a NSPrintInfo*.  The NSPageLayout (\"Page Setup\") dialog manipulates them (#169), and they are later provided to the NSPrintOperation (#108).  The print_margin_xxx variable doesn't figure.  So, on Cocoa, we deliver appropriately-sized PMPaper margins, and then inset our content into that.\n\nI am unable to find any place where the Windows or Cocoa widgets change the value of the print_margin_xxx preference.  The printPageSetup.js code in toolkit/content/global references the right property of PrintSettings, but I think no platform uses that dialog these days.", "bug_id": 648657, "creation_time": "2011-11-04T00:09:17Z", "creator": "mhanson@mozilla.com", "tags": [], "is_private": false, "attachment_id": null, "text": "Took a couple minutes to figure out where these defaults were coming from.\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/xpwidgets/nsPrintSettingsImpl.cpp#85\nThe default \"0.5\" value for print_margin_xxx value is coming from the nsPrintSettings constructor, where margin defaults to DEFAULT_MARGIN_WIDTH, which is 0.5.\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/xpwidgets/nsPrintOptionsImpl.cpp#245\nIf the prefs have been changed, they are read out in the nsPrintOptions::ReadPrefs method, here.  If they're not defined, another 0.5 default is applied.\n\nhttp://mxr.mozilla.org/mozilla-central/source/layout/generic/nsSimplePageSequence.cpp#203\nhttp://mxr.mozilla.org/mozilla-central/source/layout/printing/nsPrintEngine.cpp#2329\nThese margins are applied either by the nsSimplePageSequence, or the nsPrintEngine.cpp (for Print Selection).  The margin and the unwriteable margin are added together and subtracted from the content.   From a quick reading it doesn't look like the CSS margin property has any ability to change that.\n\nOn Cocoa, the relevant bits of logic are:\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/cocoa/nsPrintSettingsX.mm#109\nwhere InitUnwritableMargin reads the paper margins from the current PMPage and saves them to the mUnwriteableMargin variable (whence they will become the print_unwriteable_margin_[xxx] prefs)\n\nhttp://mxr.mozilla.org/mozilla-central/source/widget/src/cocoa/nsPrintDialogX.mm\nMost of the Cocoa printing settings are preserved opaquely inside the nsPrintSettingsX object, through a NSPrintInfo*.  The NSPageLayout (\"Page Setup\") dialog manipulates them (#169), and they are later provided to the NSPrintOperation (#108).  The print_margin_xxx variable doesn't figure.  So, on Cocoa, we deliver appropriately-sized PMPaper margins, and then inset our content into that.\n\nI am unable to find any place where the Windows or Cocoa widgets change the value of the print_margin_xxx preference.  The printPageSetup.js code in toolkit/content/global references the right property of PrintSettings, but I think no platform uses that dialog these days.", "count": 5, "author": "mhanson@mozilla.com", "time": "2011-11-04T00:09:17Z", "id": 5825314}]}}, "comments": {}}