{"bugs": {"423200": {"comments": [{"text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.12) Gecko/20080129 Iceweasel Firefox/2.0.0.4 (Debian-2.0.0.12-2)\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b4) Gecko/2008030318 Firefox/3.0b4\n\nI can't seem to use the bookmarks service moveItem() function to move an item exactly one index down in its folder. I believe this is due to a bad check found on line 1620 of nsNavBookmarks.cpp:\n\nhttp://mxr.mozilla.org/mozilla/source/toolkit/components/places/src/nsNavBookmarks.cpp#1620\n\n1620     if (oldParent == aNewParent && newIndex > oldIndex) {\n1621       // when an item is being moved lower in the same folder, the new index\n1622       // refers to the index before it was removed. Removal causes everything\n1623       // to shift up.\n1624       --newIndex;\n1625     }\n1626   }\n1627 \n1628   // this is like the previous check, except this covers if\n1629   // the specified index was -1 (append), and the calculated\n1630   // new index is the same as the existing index\n1631   if (aNewParent == oldParent && newIndex == oldIndex) {\n1632     // Nothing to do!\n1633     return NS_OK;\n1634   }\n\nIf the new index is exactly one greater than the original index of the item, newIndex is decremented and the very next check results in no action.\n\nReproducible: Always\n\nSteps to Reproduce:\n  var BMSVC = Components.classes[\"@mozilla.org/browser/nav-bookmarks-service;1\"]\n                      .getService(Components.interfaces.nsINavBookmarksService);\n  var BM = BMSVC.bookmarksMenuFolder;\n  var item = BMSVC.getIdForItemAt(BM, 0);\n  var oIdx = BMSVC.getItemIndex(item);\n  BMSVC.moveItem(item, BM, 1);\n  if (BMSVC.getItemIndex(item) == oIdx)\n    alert('fail');\n  else\n    alert('success');\nActual Results:  \nalert shows 'fail'\n\nExpected Results:  \nalert shows 'success'\n\nI believe the solution is to make the check on line 1620:\n\n\"if (oldParent == aNewParent && newIndex > oldIndex+1)\"\n\nThis should result in the proper behavior while removing the bad edge case that is failing.\n\nThe workaround I'm currently using is to get the item at the index I want to move to and then moving it up one instead.", "creation_time": "2008-03-15T21:06:42Z", "time": "2008-03-15T21:06:42Z", "tags": [], "bug_id": 423200, "is_private": false, "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.12) Gecko/20080129 Iceweasel Firefox/2.0.0.4 (Debian-2.0.0.12-2)\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b4) Gecko/2008030318 Firefox/3.0b4\n\nI can't seem to use the bookmarks service moveItem() function to move an item exactly one index down in its folder. I believe this is due to a bad check found on line 1620 of nsNavBookmarks.cpp:\n\nhttp://mxr.mozilla.org/mozilla/source/toolkit/components/places/src/nsNavBookmarks.cpp#1620\n\n1620     if (oldParent == aNewParent && newIndex > oldIndex) {\n1621       // when an item is being moved lower in the same folder, the new index\n1622       // refers to the index before it was removed. Removal causes everything\n1623       // to shift up.\n1624       --newIndex;\n1625     }\n1626   }\n1627 \n1628   // this is like the previous check, except this covers if\n1629   // the specified index was -1 (append), and the calculated\n1630   // new index is the same as the existing index\n1631   if (aNewParent == oldParent && newIndex == oldIndex) {\n1632     // Nothing to do!\n1633     return NS_OK;\n1634   }\n\nIf the new index is exactly one greater than the original index of the item, newIndex is decremented and the very next check results in no action.\n\nReproducible: Always\n\nSteps to Reproduce:\n  var BMSVC = Components.classes[\"@mozilla.org/browser/nav-bookmarks-service;1\"]\n                      .getService(Components.interfaces.nsINavBookmarksService);\n  var BM = BMSVC.bookmarksMenuFolder;\n  var item = BMSVC.getIdForItemAt(BM, 0);\n  var oIdx = BMSVC.getItemIndex(item);\n  BMSVC.moveItem(item, BM, 1);\n  if (BMSVC.getItemIndex(item) == oIdx)\n    alert('fail');\n  else\n    alert('success');\nActual Results:  \nalert shows 'fail'\n\nExpected Results:  \nalert shows 'success'\n\nI believe the solution is to make the check on line 1620:\n\n\"if (oldParent == aNewParent && newIndex > oldIndex+1)\"\n\nThis should result in the proper behavior while removing the bad edge case that is failing.\n\nThe workaround I'm currently using is to get the item at the index I want to move to and then moving it up one instead.", "author": "unusualtears@gmail.com", "creator": "unusualtears@gmail.com", "count": 0, "attachment_id": null, "id": 3529934}, {"bug_id": 423200, "creator": "hzbz@pm.me", "raw_text": "terrific, this basic scenario is not in the automated tests:\n\nhttp://mxr.mozilla.org/seamonkey/source/toolkit/components/places/tests/bookmarks/test_bookmarks.js\n\nthe tests there are all using default index (-1), or are testing cycles (parent = self, parent = child of parent).\n\nscenarios that need tests:\n- 1 up\n- 1 down\n- valid number up\n- valid number down\n- invalid number up (eg: > childCount)\n- invalid number down (eg: < -1)", "id": 3529968, "count": 1, "creation_time": "2008-03-15T21:44:31Z", "is_private": false, "author": "hzbz@pm.me", "attachment_id": null, "text": "terrific, this basic scenario is not in the automated tests:\n\nhttp://mxr.mozilla.org/seamonkey/source/toolkit/components/places/tests/bookmarks/test_bookmarks.js\n\nthe tests there are all using default index (-1), or are testing cycles (parent = self, parent = child of parent).\n\nscenarios that need tests:\n- 1 up\n- 1 down\n- valid number up\n- valid number down\n- invalid number up (eg: > childCount)\n- invalid number down (eg: < -1)", "tags": [], "time": "2008-03-15T21:44:31Z"}, {"raw_text": "Adam, if you do BMSVC.moveItem(item, BM, 2); do you find the bookmark in the position 1?\n\nin the backend when moving down in the same folder we are subtracting 1 to take in count old item position, so to move down by 1 position actually you should move down by 2.\nit's something odd and undocumented, i'd prefer this kind of calculation done in the frontend, since now if i have item at position 5 and i call\nmoveItem(item, parent, 2);\nmoveItem(item, parent, 5);\ni'd expect the item is back to initial position, but it's at position 4.\n\nSo your fix will work for moving down by 1, but then if you move down by 2 you will end up again moving down by 1.\n\nThe correct fix should be document this into the IDL, or change the backend behaviour to aways put in the requested position, and fix its current users in the frontend (i'd prefer the latter)", "author": "mak@mozilla.com", "creator": "mak@mozilla.com", "bug_id": 423200, "is_private": false, "count": 2, "attachment_id": null, "id": 3533721, "creation_time": "2008-03-18T09:37:15Z", "text": "Adam, if you do BMSVC.moveItem(item, BM, 2); do you find the bookmark in the position 1?\n\nin the backend when moving down in the same folder we are subtracting 1 to take in count old item position, so to move down by 1 position actually you should move down by 2.\nit's something odd and undocumented, i'd prefer this kind of calculation done in the frontend, since now if i have item at position 5 and i call\nmoveItem(item, parent, 2);\nmoveItem(item, parent, 5);\ni'd expect the item is back to initial position, but it's at position 4.\n\nSo your fix will work for moving down by 1, but then if you move down by 2 you will end up again moving down by 1.\n\nThe correct fix should be document this into the IDL, or change the backend behaviour to aways put in the requested position, and fix its current users in the frontend (i'd prefer the latter)", "time": "2008-03-18T09:37:15Z", "tags": []}, {"raw_text": "Marco,\n\nYou are correct about this fault.\n\nThe problem with the current behavior is consistency as your example with an item at position 5 shows.\n\nMy fix was naive, simply removing the check at 1620 entirely should solve this. \n\nI'm not sure how much code already expects the current behavior.\n\nhttp://mxr.mozilla.org/firefox/search?string=.moveItem(\n\nIn nsPlacesTransactionsService.js it is just reusing the transaction's values for old and new index ( http://mxr.mozilla.org/firefox/source/browser/components/places/src/nsPlacesTransactionsService.js#459 ) so it is not taking the current behavior into account.\n\nIf you open the bookmarks window and drag a bookmark up one position, then try to undo it, it does nothing. Drag it up two and undo, it moves it back down only one.\n\nutils.js http://mxr.mozilla.org/firefox/source/browser/components/places/content/utils.js#348 makes use of moveItem as well, but it also doesn't seem to account for this behavior.\n\nI'm not sure what other users there are, but my best guess is they won't account for this behavior (and won't need updating).", "author": "unusualtears@gmail.com", "creator": "unusualtears@gmail.com", "bug_id": 423200, "is_private": false, "count": 3, "id": 3534457, "attachment_id": null, "creation_time": "2008-03-18T18:54:01Z", "text": "Marco,\n\nYou are correct about this fault.\n\nThe problem with the current behavior is consistency as your example with an item at position 5 shows.\n\nMy fix was naive, simply removing the check at 1620 entirely should solve this. \n\nI'm not sure how much code already expects the current behavior.\n\nhttp://mxr.mozilla.org/firefox/search?string=.moveItem(\n\nIn nsPlacesTransactionsService.js it is just reusing the transaction's values for old and new index ( http://mxr.mozilla.org/firefox/source/browser/components/places/src/nsPlacesTransactionsService.js#459 ) so it is not taking the current behavior into account.\n\nIf you open the bookmarks window and drag a bookmark up one position, then try to undo it, it does nothing. Drag it up two and undo, it moves it back down only one.\n\nutils.js http://mxr.mozilla.org/firefox/source/browser/components/places/content/utils.js#348 makes use of moveItem as well, but it also doesn't seem to account for this behavior.\n\nI'm not sure what other users there are, but my best guess is they won't account for this behavior (and won't need updating).", "time": "2008-03-18T18:54:01Z", "tags": []}, {"creation_time": "2008-04-03T10:23:21Z", "text": "Created attachment 313315\npatch\n\nwe are not going to change the api at this time, the moveItem is drag&drop friendly like it is, so to move down in the same container add +1 to final index.\n\n- added comment to API to indicate the need to add +1 when moving down into the same container\n\n- fixed an index adjust when moving to new container (we need to add 1 from the new index on, and not from newIndex +1 on, or we'll end up with duped position value)\n\n- fixed transaction manager to behave correctly when moving back to original position (for moveItem into the same container)\n\n- created a specific moveItem test file (and moved out bits from test_bookmarks.js to there)", "time": "2008-04-03T10:23:21Z", "tags": [], "raw_text": "we are not going to change the api at this time, the moveItem is drag&drop friendly like it is, so to move down in the same container add +1 to final index.\n\n- added comment to API to indicate the need to add +1 when moving down into the same container\n\n- fixed an index adjust when moving to new container (we need to add 1 from the new index on, and not from newIndex +1 on, or we'll end up with duped position value)\n\n- fixed transaction manager to behave correctly when moving back to original position (for moveItem into the same container)\n\n- created a specific moveItem test file (and moved out bits from test_bookmarks.js to there)", "author": "mak@mozilla.com", "creator": "mak@mozilla.com", "bug_id": 423200, "is_private": false, "count": 4, "attachment_id": 313315, "id": 3559555}, {"attachment_id": 313595, "is_private": false, "author": "mak@mozilla.com", "tags": [], "time": "2008-04-04T12:26:41Z", "text": "Created attachment 313595\npatch\n\nFixed a typo in bookmarks.idl, we are moving an itemId not only a folder\n\n-  void moveItem(in long long aFolder, in long long newParent, in long aIndex);\n+  void moveItem(in long long aItemId, in long long newParent, in long aIndex);", "id": 3562050, "count": 5, "bug_id": 423200, "creator": "mak@mozilla.com", "raw_text": "Fixed a typo in bookmarks.idl, we are moving an itemId not only a folder\n\n-  void moveItem(in long long aFolder, in long long newParent, in long aIndex);\n+  void moveItem(in long long aItemId, in long long newParent, in long aIndex);", "creation_time": "2008-04-04T12:26:41Z"}, {"text": "bump to normal severity due to index error when inserting into a new container", "time": "2008-04-04T12:27:42Z", "tags": [], "author": "mak@mozilla.com", "is_private": false, "attachment_id": null, "creation_time": "2008-04-04T12:27:42Z", "raw_text": "bump to normal severity due to index error when inserting into a new container", "creator": "mak@mozilla.com", "bug_id": 423200, "count": 6, "id": 3562053}, {"creator": "hzbz@pm.me", "raw_text": ">Index: toolkit/components/places/public/nsINavBookmarksService.idl\n>===================================================================\n>RCS file: /cvsroot/mozilla/toolkit/components/places/public/nsINavBookmarksService.idl,v\n>retrieving revision 1.54\n>diff -u -8 -p -r1.54 nsINavBookmarksService.idl\n>--- toolkit/components/places/public/nsINavBookmarksService.idl\t17 Mar 2008 23:25:36 -0000\t1.54\n>+++ toolkit/components/places/public/nsINavBookmarksService.idl\t4 Apr 2008 12:23:50 -0000\n>@@ -297,18 +297,22 @@ interface nsINavBookmarksService : nsISu\n>   /**\n>    * Moves an item to a different container, preserving its contents.\n>    *  @param aItemId\n>    *         The id of the item to move\n>    *  @param aNewParent\n>    *         The id of the new parent\n>    *  @param aIndex\n>    *         The index under aNewParent, or DEFAULT_INDEX to append\n>+   *\n>+   * NOTE: When moving down in the same container we take in count the\n\ns/in count/into account/\n\n>+   * removal of the original item. If you want to move from index X to\n>+   * index Y > X you must use moveItem(folder, folder, Y + 1)\n\ns/folder/id/ for clarity\n\n>    */\n>-  void moveItem(in long long aFolder, in long long newParent, in long aIndex);\n>+  void moveItem(in long long aItemId, in long long newParent, in long aIndex);\n\ns/newParent/aNewParent/ for consistency, and because that's how it's doc'd above.\n\nr=me with these fixed", "bug_id": 423200, "id": 3562403, "count": 7, "creation_time": "2008-04-04T16:37:52Z", "author": "hzbz@pm.me", "is_private": false, "attachment_id": 313595, "text": "Comment on attachment 313595\npatch\n\n>Index: toolkit/components/places/public/nsINavBookmarksService.idl\n>===================================================================\n>RCS file: /cvsroot/mozilla/toolkit/components/places/public/nsINavBookmarksService.idl,v\n>retrieving revision 1.54\n>diff -u -8 -p -r1.54 nsINavBookmarksService.idl\n>--- toolkit/components/places/public/nsINavBookmarksService.idl\t17 Mar 2008 23:25:36 -0000\t1.54\n>+++ toolkit/components/places/public/nsINavBookmarksService.idl\t4 Apr 2008 12:23:50 -0000\n>@@ -297,18 +297,22 @@ interface nsINavBookmarksService : nsISu\n>   /**\n>    * Moves an item to a different container, preserving its contents.\n>    *  @param aItemId\n>    *         The id of the item to move\n>    *  @param aNewParent\n>    *         The id of the new parent\n>    *  @param aIndex\n>    *         The index under aNewParent, or DEFAULT_INDEX to append\n>+   *\n>+   * NOTE: When moving down in the same container we take in count the\n\ns/in count/into account/\n\n>+   * removal of the original item. If you want to move from index X to\n>+   * index Y > X you must use moveItem(folder, folder, Y + 1)\n\ns/folder/id/ for clarity\n\n>    */\n>-  void moveItem(in long long aFolder, in long long newParent, in long aIndex);\n>+  void moveItem(in long long aItemId, in long long newParent, in long aIndex);\n\ns/newParent/aNewParent/ for consistency, and because that's how it's doc'd above.\n\nr=me with these fixed", "tags": [], "time": "2008-04-04T16:37:52Z"}, {"count": 8, "id": 3563755, "raw_text": "fixed review comments", "creator": "mak@mozilla.com", "bug_id": 423200, "creation_time": "2008-04-05T12:35:56Z", "attachment_id": 313802, "author": "mak@mozilla.com", "is_private": false, "time": "2008-04-05T12:35:56Z", "tags": [], "text": "Created attachment 313802\nfor check-in\n\nfixed review comments"}, {"creation_time": "2008-04-06T17:30:41Z", "bug_id": 423200, "raw_text": "Checking in toolkit/components/places/public/nsINavBookmarksService.idl;\n/cvsroot/mozilla/toolkit/components/places/public/nsINavBookmarksService.idl,v  <--  nsINavBookmarksService.idl\nnew revision: 1.55; previous revision: 1.54\ndone\nChecking in toolkit/components/places/src/nsNavBookmarks.cpp;\n/cvsroot/mozilla/toolkit/components/places/src/nsNavBookmarks.cpp,v  <--  nsNavBookmarks.cpp\nnew revision: 1.157; previous revision: 1.156\ndone\nChecking in toolkit/components/places/tests/bookmarks/test_bookmarks.js;\n/cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_bookmarks.js,v  <--  test_bookmarks.js\nnew revision: 1.43; previous revision: 1.42\ndone\nRCS file: /cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_moveitem.js,v\ndone\nChecking in toolkit/components/places/tests/bookmarks/test_moveitem.js;\n/cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_moveitem.js,v  <--  test_moveitem.js\ninitial revision: 1.1\ndone", "creator": "hzbz@pm.me", "count": 9, "id": 3565105, "text": "Checking in toolkit/components/places/public/nsINavBookmarksService.idl;\n/cvsroot/mozilla/toolkit/components/places/public/nsINavBookmarksService.idl,v  <--  nsINavBookmarksService.idl\nnew revision: 1.55; previous revision: 1.54\ndone\nChecking in toolkit/components/places/src/nsNavBookmarks.cpp;\n/cvsroot/mozilla/toolkit/components/places/src/nsNavBookmarks.cpp,v  <--  nsNavBookmarks.cpp\nnew revision: 1.157; previous revision: 1.156\ndone\nChecking in toolkit/components/places/tests/bookmarks/test_bookmarks.js;\n/cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_bookmarks.js,v  <--  test_bookmarks.js\nnew revision: 1.43; previous revision: 1.42\ndone\nRCS file: /cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_moveitem.js,v\ndone\nChecking in toolkit/components/places/tests/bookmarks/test_moveitem.js;\n/cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_moveitem.js,v  <--  test_moveitem.js\ninitial revision: 1.1\ndone", "time": "2008-04-06T17:30:41Z", "tags": [], "is_private": false, "author": "hzbz@pm.me", "attachment_id": null}, {"id": 3565146, "attachment_id": null, "count": 10, "is_private": false, "bug_id": 423200, "author": "hzbz@pm.me", "creator": "hzbz@pm.me", "raw_text": "Forgot the front-end file:\n\nChecking in browser/components/places/src/nsPlacesTransactionsService.js;\n/cvsroot/mozilla/browser/components/places/src/nsPlacesTransactionsService.js,v  <--  nsPlacesTransactionsService.js\nnew revision: 1.37; previous revision: 1.36\ndone", "tags": [], "time": "2008-04-06T18:26:30Z", "text": "Forgot the front-end file:\n\nChecking in browser/components/places/src/nsPlacesTransactionsService.js;\n/cvsroot/mozilla/browser/components/places/src/nsPlacesTransactionsService.js,v  <--  nsPlacesTransactionsService.js\nnew revision: 1.37; previous revision: 1.36\ndone", "creation_time": "2008-04-06T18:26:30Z"}, {"attachment_id": null, "is_private": false, "author": "jaas@kflag.net", "tags": [], "time": "2008-04-06T20:04:13Z", "text": "backed out due to unit test orange", "id": 3565247, "count": 11, "bug_id": 423200, "creator": "jaas@kflag.net", "raw_text": "backed out due to unit test orange", "creation_time": "2008-04-06T20:04:13Z"}, {"time": "2008-04-07T12:34:16Z", "tags": [], "text": "Created attachment 314071\npatch\n\nThank you Josh, sorry for that, the transaction manager change came at last, i was sure to have checked unit tests but probably was before that :|\n\nSo, found and fixed another problem in transaction manager (when moving to -1 we should save the correct new index, not -1), plus fixed a wrong index check in the trasaction manager unit test (i've followed the test and that item should end up in index 2, previous wrong transaction manager behaviour made the test pass, badly). \nAsking an additional review because of new changes, executed the full testsuite check, all PASS now.", "attachment_id": 314071, "is_private": false, "author": "mak@mozilla.com", "creation_time": "2008-04-07T12:34:16Z", "count": 12, "id": 3566187, "bug_id": 423200, "raw_text": "Thank you Josh, sorry for that, the transaction manager change came at last, i was sure to have checked unit tests but probably was before that :|\n\nSo, found and fixed another problem in transaction manager (when moving to -1 we should save the correct new index, not -1), plus fixed a wrong index check in the trasaction manager unit test (i've followed the test and that item should end up in index 2, previous wrong transaction manager behaviour made the test pass, badly). \nAsking an additional review because of new changes, executed the full testsuite check, all PASS now.", "creator": "mak@mozilla.com"}, {"bug_id": 423200, "raw_text": "r=me, thanks", "creator": "hzbz@pm.me", "count": 13, "id": 3568242, "creation_time": "2008-04-08T04:48:08Z", "is_private": false, "author": "hzbz@pm.me", "attachment_id": 314071, "text": "Comment on attachment 314071\npatch\n\nr=me, thanks", "time": "2008-04-08T04:48:08Z", "tags": []}, {"text": "Checking in browser/components/places/src/nsPlacesTransactionsService.js;\n/cvsroot/mozilla/browser/components/places/src/nsPlacesTransactionsService.js,v  <--  nsPlacesTransactionsService.js\nnew revision: 1.39; previous revision: 1.38\ndone\nChecking in browser/components/places/tests/unit/test_placesTxn.js;\n/cvsroot/mozilla/browser/components/places/tests/unit/test_placesTxn.js,v  <--  test_placesTxn.js\nnew revision: 1.16; previous revision: 1.15\ndone\nChecking in toolkit/components/places/public/nsINavBookmarksService.idl;\n/cvsroot/mozilla/toolkit/components/places/public/nsINavBookmarksService.idl,v  <--  nsINavBookmarksService.idl\nnew revision: 1.57; previous revision: 1.56\ndone\nChecking in toolkit/components/places/src/nsNavBookmarks.cpp;\n/cvsroot/mozilla/toolkit/components/places/src/nsNavBookmarks.cpp,v  <--  nsNavBookmarks.cpp\nnew revision: 1.159; previous revision: 1.158\ndone\nChecking in toolkit/components/places/tests/bookmarks/test_bookmarks.js;\n/cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_bookmarks.js,v  <--  test_bookmarks.js\nnew revision: 1.45; previous revision: 1.44\ndone", "creation_time": "2008-04-08T06:32:57Z", "tags": [], "time": "2008-04-08T06:32:57Z", "is_private": false, "bug_id": 423200, "creator": "hzbz@pm.me", "author": "hzbz@pm.me", "raw_text": "Checking in browser/components/places/src/nsPlacesTransactionsService.js;\n/cvsroot/mozilla/browser/components/places/src/nsPlacesTransactionsService.js,v  <--  nsPlacesTransactionsService.js\nnew revision: 1.39; previous revision: 1.38\ndone\nChecking in browser/components/places/tests/unit/test_placesTxn.js;\n/cvsroot/mozilla/browser/components/places/tests/unit/test_placesTxn.js,v  <--  test_placesTxn.js\nnew revision: 1.16; previous revision: 1.15\ndone\nChecking in toolkit/components/places/public/nsINavBookmarksService.idl;\n/cvsroot/mozilla/toolkit/components/places/public/nsINavBookmarksService.idl,v  <--  nsINavBookmarksService.idl\nnew revision: 1.57; previous revision: 1.56\ndone\nChecking in toolkit/components/places/src/nsNavBookmarks.cpp;\n/cvsroot/mozilla/toolkit/components/places/src/nsNavBookmarks.cpp,v  <--  nsNavBookmarks.cpp\nnew revision: 1.159; previous revision: 1.158\ndone\nChecking in toolkit/components/places/tests/bookmarks/test_bookmarks.js;\n/cvsroot/mozilla/toolkit/components/places/tests/bookmarks/test_bookmarks.js,v  <--  test_bookmarks.js\nnew revision: 1.45; previous revision: 1.44\ndone", "attachment_id": null, "id": 3568357, "count": 14}, {"attachment_id": null, "author": "gerv@mozilla.org", "is_private": false, "time": "2009-11-26T14:27:19Z", "tags": [], "text": "Bug 451915 - move Firefox/Places bugs to Firefox/Bookmarks and History. Remove all bugspam from this move by filtering for the string \"places-to-b-and-h\".\n\nIn Thunderbird 3.0b, you do that as follows:\nTools | Message Filters\nMake sure the correct account is selected. Click \"New\"\nConditions: Body   contains   places-to-b-and-h\nChange the action to \"Delete Message\".\nSelect \"Manually Run\" from the dropdown at the top.\nClick OK.\n\nSelect the filter in the list, make sure \"Inbox\" is selected at the bottom, and click \"Run Now\". This should delete all the bugspam. You can then delete the filter.\n\nGerv", "count": 15, "id": 4422021, "raw_text": "Bug 451915 - move Firefox/Places bugs to Firefox/Bookmarks and History. Remove all bugspam from this move by filtering for the string \"places-to-b-and-h\".\n\nIn Thunderbird 3.0b, you do that as follows:\nTools | Message Filters\nMake sure the correct account is selected. Click \"New\"\nConditions: Body   contains   places-to-b-and-h\nChange the action to \"Delete Message\".\nSelect \"Manually Run\" from the dropdown at the top.\nClick OK.\n\nSelect the filter in the list, make sure \"Inbox\" is selected at the bottom, and click \"Run Now\". This should delete all the bugspam. You can then delete the filter.\n\nGerv", "creator": "gerv@mozilla.org", "bug_id": 423200, "creation_time": "2009-11-26T14:27:19Z"}]}}, "comments": {}}