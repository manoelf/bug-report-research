{"comments": {}, "bugs": {"635307": {"comments": [{"author": "fherrera@onirica.com", "creation_time": "2011-02-18T18:56:59Z", "text": "For native windows, native implementations handle accessible creation.\n\nThat is ok for native dialogs, but not for stuff like XUL panels, where we create the proper accessible in our tree and native implementations its own accessible.\n\nAn example of this is bug #443097, where we get showing/visible notifications for an accessible object that is not in the tree, and it is not the one we expect.", "id": 5290137, "raw_text": "For native windows, native implementations handle accessible creation.\n\nThat is ok for native dialogs, but not for stuff like XUL panels, where we create the proper accessible in our tree and native implementations its own accessible.\n\nAn example of this is bug #443097, where we get showing/visible notifications for an accessible object that is not in the tree, and it is not the one we expect.", "tags": [], "creator": "fherrera@onirica.com", "count": 0, "bug_id": 635307, "attachment_id": null, "is_private": false, "time": "2011-02-18T18:56:59Z"}, {"attachment_id": null, "time": "2011-02-19T00:32:42Z", "is_private": false, "author": "fherrera@onirica.com", "tags": [], "creator": "fherrera@onirica.com", "count": 1, "bug_id": 635307, "creation_time": "2011-02-19T00:32:42Z", "text": "I have been testing around accessible injection into native windows and, at least, it is not an option for gtk/gail.\n\nIt is a little bit hacky:\n\n\n  void *oldAtkObj = g_object_get_qdata (G_OBJECT (aWindow), g_quark_from_static_string (\"gtk-accessible-object\"));\n  if (oldAtkObj) {\n    if (strcmp(G_OBJECT_TYPE_NAME(oldAtkObj), \"GailWindow\") != 0)\n      return;\n\n    g_object_unref (G_OBJECT(oldAtkOjb));\n  }\n  // Horrible hack\n  AtkObject *AtkObj = nsAccessibleWrap::GetAtkObject(aAcc);\n  g_object_set_qdata (G_OBJECT (aWindow),\n                      g_quark_from_static_string (\"gtk-accessible-object\"),\n                      AtkObj);\n\nbut the main problem is that gail objects are not intended to be de-attached from their widgets and they don't remove signal handlers. It's dangerous to keep those callbacks connected even if they check accessible object type and are not executed.\n\nSo the other option I can think is passing the DOM node to nsWindow::Create and if we have an accessible for that node, prevent native accessible object creating and attach our.\n\nWhat do you think?", "id": 5291204, "raw_text": "I have been testing around accessible injection into native windows and, at least, it is not an option for gtk/gail.\n\nIt is a little bit hacky:\n\n\n  void *oldAtkObj = g_object_get_qdata (G_OBJECT (aWindow), g_quark_from_static_string (\"gtk-accessible-object\"));\n  if (oldAtkObj) {\n    if (strcmp(G_OBJECT_TYPE_NAME(oldAtkObj), \"GailWindow\") != 0)\n      return;\n\n    g_object_unref (G_OBJECT(oldAtkOjb));\n  }\n  // Horrible hack\n  AtkObject *AtkObj = nsAccessibleWrap::GetAtkObject(aAcc);\n  g_object_set_qdata (G_OBJECT (aWindow),\n                      g_quark_from_static_string (\"gtk-accessible-object\"),\n                      AtkObj);\n\nbut the main problem is that gail objects are not intended to be de-attached from their widgets and they don't remove signal handlers. It's dangerous to keep those callbacks connected even if they check accessible object type and are not executed.\n\nSo the other option I can think is passing the DOM node to nsWindow::Create and if we have an accessible for that node, prevent native accessible object creating and attach our.\n\nWhat do you think?"}, {"author": "fherrera@onirica.com", "bug_id": 635307, "tags": [], "creator": "fherrera@onirica.com", "count": 2, "raw_text": "thinking more about it, setting our accessible object as accessible object for native window won't help for bug #443097, as our gecko accessible objects do not listen to native widgets events, and then we miss native show/hide events for those windows. Native accessible objects take care of those events, so what about of keeping them and \"fixing\". I'm attaching an exmaple of such fixing function. Yeah, it look like a mess but I cannot figure out other solution.", "id": 5291973, "text": "thinking more about it, setting our accessible object as accessible object for native window won't help for bug #443097, as our gecko accessible objects do not listen to native widgets events, and then we miss native show/hide events for those windows. Native accessible objects take care of those events, so what about of keeping them and \"fixing\". I'm attaching an exmaple of such fixing function. Yeah, it look like a mess but I cannot figure out other solution.", "creation_time": "2011-02-19T14:55:53Z", "attachment_id": null, "time": "2011-02-19T14:55:53Z", "is_private": false}, {"bug_id": 635307, "tags": [], "creator": "fherrera@onirica.com", "time": "2011-02-19T15:35:40Z", "count": 3, "text": "Created attachment 513753\nmodify native accessible for atk", "creation_time": "2011-02-19T15:35:40Z", "is_private": false, "raw_text": "", "id": 5292012, "author": "fherrera@onirica.com", "attachment_id": 513753}]}}}