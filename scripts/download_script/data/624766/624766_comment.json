{"comments": {}, "bugs": {"624766": {"comments": [{"tags": [], "author": "brendan@mozilla.org", "time": "2011-01-11T18:03:32Z", "count": 0, "creation_time": "2011-01-11T18:03:32Z", "attachment_id": null, "id": 5190539, "creator": "brendan@mozilla.org", "raw_text": "js> function f(){ \"\\145\"; \"use strict\"; }\ntypein:1: SyntaxError: octal literals and octal escape sequences are deprecated:\ntypein:1: function f(){ \"\\145\"; \"use strict\"; }\ntypein:1: ..................................^\njs> function f(){\n  \"\\145\" // octal escape\n  \"use strict\"\n}\ntypein:5: SyntaxError: octal literals and octal escape sequences are deprecated:\ntypein:5: }\ntypein:5: ..^\njs> \n\nBurning directives (recognized or not) into the AST could help, but then you need to suppress code generation while avoiding useless expression warnings (see bug 624199, where the current solution does not build AST for directives).\n\nA minor polish bug, but these count and they can be fun when release pressure is (finally) off.\n\n/be", "is_private": false, "bug_id": 624766, "text": "js> function f(){ \"\\145\"; \"use strict\"; }\ntypein:1: SyntaxError: octal literals and octal escape sequences are deprecated:\ntypein:1: function f(){ \"\\145\"; \"use strict\"; }\ntypein:1: ..................................^\njs> function f(){\n  \"\\145\" // octal escape\n  \"use strict\"\n}\ntypein:5: SyntaxError: octal literals and octal escape sequences are deprecated:\ntypein:5: }\ntypein:5: ..^\njs> \n\nBurning directives (recognized or not) into the AST could help, but then you need to suppress code generation while avoiding useless expression warnings (see bug 624199, where the current solution does not build AST for directives).\n\nA minor polish bug, but these count and they can be fun when release pressure is (finally) off.\n\n/be"}, {"text": "We do retain the directive prologue in the parse tree, for functions at least. All that's missing here is some way for the scanner to indicate whether each specific token used the octal escapes.", "raw_text": "We do retain the directive prologue in the parse tree, for functions at least. All that's missing here is some way for the scanner to indicate whether each specific token used the octal escapes.", "bug_id": 624766, "is_private": false, "creator": "jimb@mozilla.com", "attachment_id": null, "id": 5191405, "count": 1, "creation_time": "2011-01-11T21:22:39Z", "author": "jimb@mozilla.com", "time": "2011-01-11T21:22:39Z", "tags": []}, {"text": "... and a corresponding way to retain that in the parse nodes. Steal a bit!", "is_private": false, "bug_id": 624766, "raw_text": "... and a corresponding way to retain that in the parse nodes. Steal a bit!", "creator": "jimb@mozilla.com", "id": 5191410, "attachment_id": null, "creation_time": "2011-01-11T21:23:01Z", "count": 2, "time": "2011-01-11T21:23:01Z", "author": "jimb@mozilla.com", "tags": []}, {"creator": "jwalden@mit.edu", "attachment_id": null, "id": 5191470, "text": "If I got more firepower behind me and convinced ECMA to make string literals containing escapes not directive prologue members, maybe we could avoid having to do any work to fix this.  ;-)", "raw_text": "If I got more firepower behind me and convinced ECMA to make string literals containing escapes not directive prologue members, maybe we could avoid having to do any work to fix this.  ;-)", "bug_id": 624766, "is_private": false, "tags": [], "count": 3, "creation_time": "2011-01-11T21:56:45Z", "author": "jwalden@mit.edu", "time": "2011-01-11T21:56:45Z"}, {"raw_text": "(In reply to comment #3)\n> If I got more firepower behind me and convinced ECMA to make string literals\n> containing escapes not directive prologue members, maybe we could avoid having\n> to do any work to fix this.  ;-)\n\nThis is the better solution, yes.", "is_private": false, "bug_id": 624766, "text": "(In reply to comment #3)\n> If I got more firepower behind me and convinced ECMA to make string literals\n> containing escapes not directive prologue members, maybe we could avoid having\n> to do any work to fix this.  ;-)\n\nThis is the better solution, yes.", "attachment_id": null, "id": 5194384, "creator": "jimb@mozilla.com", "author": "jimb@mozilla.com", "time": "2011-01-12T20:01:21Z", "count": 4, "creation_time": "2011-01-12T20:01:21Z", "tags": []}]}}}