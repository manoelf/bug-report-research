{"bugs": {"698271": {"comments": [{"tags": [], "time": "2011-10-30T14:12:13Z", "raw_text": "User Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/8.0.552.18 Safari/534.10\n\nSteps to reproduce:\n\nWe created a patch that introduce a new interface, imgIContentPolicy, so that it's implementations can evaluate every image after decode was done.\nWith this feature addon developers can produce adult content filtering addons. they can clear image surface if it contains adult contents.", "attachment_id": 570546, "bug_id": 698271, "id": 5813857, "is_private": false, "creation_time": "2011-10-30T14:12:13Z", "creator": "hamed.zaghaghi@gmail.com", "text": "Created attachment 570546\ndiff file for this patch\n\nUser Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/8.0.552.18 Safari/534.10\n\nSteps to reproduce:\n\nWe created a patch that introduce a new interface, imgIContentPolicy, so that it's implementations can evaluate every image after decode was done.\nWith this feature addon developers can produce adult content filtering addons. they can clear image surface if it contains adult contents.", "count": 0, "author": "hamed.zaghaghi@gmail.com"}, {"author": "josh@joshmatthews.net", "text": "Joe, I suspect this ball's in your court.", "count": 1, "creator": "josh@joshmatthews.net", "is_private": false, "creation_time": "2011-10-30T14:36:20Z", "id": 5813873, "bug_id": 698271, "attachment_id": null, "raw_text": "Joe, I suspect this ball's in your court.", "time": "2011-10-30T14:36:20Z", "tags": []}, {"time": "2011-10-30T19:15:44Z", "attachment_id": null, "raw_text": "", "tags": [], "creator": "davemgarrett@gmail.com", "author": "davemgarrett@gmail.com", "count": 2, "text": "*** Bug 698270 has been marked as a duplicate of this bug. ***", "bug_id": 698271, "id": 5814081, "is_private": false, "creation_time": "2011-10-30T19:15:44Z"}, {"text": "*** Bug 698269 has been marked as a duplicate of this bug. ***", "count": 3, "author": "davemgarrett@gmail.com", "creator": "davemgarrett@gmail.com", "creation_time": "2011-10-30T19:15:47Z", "is_private": false, "id": 5814083, "bug_id": 698271, "raw_text": "", "attachment_id": null, "time": "2011-10-30T19:15:47Z", "tags": []}, {"attachment_id": 570546, "tags": [], "creator": "dholbert@mozilla.com", "is_private": false, "creation_time": "2011-10-30T21:49:18Z", "raw_text": "Drive-by nit (mostly stylistic / spacing):\n\n>+++ b/modules/libpr0n/public/imgIContentPolicy.idl\n\nmodules/libpr0n/ no longer exists in trunk -- it's been moved to /image.\n\n>+interface imgIContentPolicy : nsISupports\n>+{\n>+\tconst short ACCEPT = 1;\n>+\tconst short REJECT = -1;\n>+\tshort shouldShow( in imgIContainer image );\n>+  boolean shouldDisableProgressiveShow();\n>+\t[noscript] void filter( in imgFrame frame );\n\nThe Indentation is inconsistent here.  Other imgIContainer IDLs use 2-space indent, so it looks like the 'boolean' line here is correctly-indented & the other lines should be aligned with it.\n\n(While you're at it, might as well nix the spaces adjacent to the parenthesis, to fit in with mozilla coding style.)\n\n>+++ b/modules/libpr0n/src/RasterImage.cpp\n>@@ -197,17 +199,18 @@ RasterImage::RasterImage(imgStatusTracke\n[...]\n>   mWorkerPending(PR_FALSE),\n>   mInDecoder(PR_FALSE),\n>-  mAnimationFinished(PR_FALSE)\n>+  mAnimationFinished(PR_FALSE),\n>+  mImageContentPolicyComponent(nsnull)\n\nThere was a recent s/PR_FALSE/false/ tree-wide conversion -- this chunk will need bitrot-fixing for that in order to apply correctly.\n\n>@@ -290,16 +293,23 @@ RasterImage::Init(imgIDecoderObserver *a\n>+  // Instantiate the content policy component if exists\n>+  if (!mMultipart && mURIString.Find(\"chrome\", true)!=0 && mURIString.Find(\"resource\", true)!=0) {\n\nAdd spaces around \"!=\" (elsewhere too)\n\n>+    nsresult rv;\n>+    mImageContentPolicyComponent = do_CreateInstance(IMGCONTENTPOLICY_ContractID, &rv);\n>+    if(NS_FAILED(rv))\n\nAdd space after \"if\" (elsewhere too)\n\n>+  if (hasContentPolicyComponent()) {\n>+    PRInt16 show = false;\n\nPRInt16 initialized to a boolean value (and then later checked against an enum value)? this looks incorrect.\n\n>+    mImageContentPolicyComponent->ShouldShow(this, &show);\n>+    if(show == imgIContentPolicy::REJECT) {\n>+      imgFrame* frame = GetImgFrame(0);\n>+      frame->LockImageData();\n>+      mImageContentPolicyComponent->Filter(frame);\n>+      frame->UnlockImageData();\n>+\t  }\n\nThat } is misindented\n\n>@@ -2682,17 +2702,22 @@ imgDecodeWorker::Run()\n>+  if(image->hasContentPolicyComponent() && !image->isSourceDataCompleted()){\n\nAdd space after \"if\" and before \"{\"\n\n>+    PRBool rv;\n\nrv is a semi-reserved variable-name, used only for 'nsresult'. Call this \"success\" or something.\nAlso, this should be \"bool\" now instead of PRBool. (recent treewide conversion)\n\n>+    image->mImageContentPolicyComponent->ShouldDisableProgressiveShow(&rv);\n>+    if(rv==PR_TRUE)\n\nAdd space after \"if\", and drop the \"PR_TRUE\" check -- you can just directly check \"if (myBool)\" instead of \"if (myBool == true)\"\n\n>diff --git a/modules/libpr0n/src/RasterImage.h b/modules/libpr0n/src/RasterImage.h\n>+  bool hasContentPolicyComponent() { return !mAnim && mImageContentPolicyComponent!=nsnull; }\n>+  bool isSourceDataCompleted() { return mHasSourceData; }\n\nMozilla style uses capitalized function-names.\n\n>@@ -524,16 +527,18 @@ private: // data\n>   // Decoding\n>   nsresult WantDecodedFrames();\n>   nsresult SyncDecode();\n>   nsresult InitDecoder(bool aDoSizeDecode);\n>   nsresult WriteToDecoder(const char *aBuffer, PRUint32 aCount);\n>   nsresult DecodeSomeData(PRUint32 aMaxBytes);\n>   PRBool   IsDecodeFinished();\n> \n>+  // content-policy for image data\n>+  nsCOMPtr<imgIContentPolicy>\tmImageContentPolicyComponent;\n>   // Decoder shutdown\n>   enum eShutdownIntent {\n\nLooks like this chunk wants a newline after it", "time": "2011-10-30T21:49:18Z", "author": "dholbert@mozilla.com", "count": 4, "text": "Comment on attachment 570546\ndiff file for this patch\n\nDrive-by nit (mostly stylistic / spacing):\n\n>+++ b/modules/libpr0n/public/imgIContentPolicy.idl\n\nmodules/libpr0n/ no longer exists in trunk -- it's been moved to /image.\n\n>+interface imgIContentPolicy : nsISupports\n>+{\n>+\tconst short ACCEPT = 1;\n>+\tconst short REJECT = -1;\n>+\tshort shouldShow( in imgIContainer image );\n>+  boolean shouldDisableProgressiveShow();\n>+\t[noscript] void filter( in imgFrame frame );\n\nThe Indentation is inconsistent here.  Other imgIContainer IDLs use 2-space indent, so it looks like the 'boolean' line here is correctly-indented & the other lines should be aligned with it.\n\n(While you're at it, might as well nix the spaces adjacent to the parenthesis, to fit in with mozilla coding style.)\n\n>+++ b/modules/libpr0n/src/RasterImage.cpp\n>@@ -197,17 +199,18 @@ RasterImage::RasterImage(imgStatusTracke\n[...]\n>   mWorkerPending(PR_FALSE),\n>   mInDecoder(PR_FALSE),\n>-  mAnimationFinished(PR_FALSE)\n>+  mAnimationFinished(PR_FALSE),\n>+  mImageContentPolicyComponent(nsnull)\n\nThere was a recent s/PR_FALSE/false/ tree-wide conversion -- this chunk will need bitrot-fixing for that in order to apply correctly.\n\n>@@ -290,16 +293,23 @@ RasterImage::Init(imgIDecoderObserver *a\n>+  // Instantiate the content policy component if exists\n>+  if (!mMultipart && mURIString.Find(\"chrome\", true)!=0 && mURIString.Find(\"resource\", true)!=0) {\n\nAdd spaces around \"!=\" (elsewhere too)\n\n>+    nsresult rv;\n>+    mImageContentPolicyComponent = do_CreateInstance(IMGCONTENTPOLICY_ContractID, &rv);\n>+    if(NS_FAILED(rv))\n\nAdd space after \"if\" (elsewhere too)\n\n>+  if (hasContentPolicyComponent()) {\n>+    PRInt16 show = false;\n\nPRInt16 initialized to a boolean value (and then later checked against an enum value)? this looks incorrect.\n\n>+    mImageContentPolicyComponent->ShouldShow(this, &show);\n>+    if(show == imgIContentPolicy::REJECT) {\n>+      imgFrame* frame = GetImgFrame(0);\n>+      frame->LockImageData();\n>+      mImageContentPolicyComponent->Filter(frame);\n>+      frame->UnlockImageData();\n>+\t  }\n\nThat } is misindented\n\n>@@ -2682,17 +2702,22 @@ imgDecodeWorker::Run()\n>+  if(image->hasContentPolicyComponent() && !image->isSourceDataCompleted()){\n\nAdd space after \"if\" and before \"{\"\n\n>+    PRBool rv;\n\nrv is a semi-reserved variable-name, used only for 'nsresult'. Call this \"success\" or something.\nAlso, this should be \"bool\" now instead of PRBool. (recent treewide conversion)\n\n>+    image->mImageContentPolicyComponent->ShouldDisableProgressiveShow(&rv);\n>+    if(rv==PR_TRUE)\n\nAdd space after \"if\", and drop the \"PR_TRUE\" check -- you can just directly check \"if (myBool)\" instead of \"if (myBool == true)\"\n\n>diff --git a/modules/libpr0n/src/RasterImage.h b/modules/libpr0n/src/RasterImage.h\n>+  bool hasContentPolicyComponent() { return !mAnim && mImageContentPolicyComponent!=nsnull; }\n>+  bool isSourceDataCompleted() { return mHasSourceData; }\n\nMozilla style uses capitalized function-names.\n\n>@@ -524,16 +527,18 @@ private: // data\n>   // Decoding\n>   nsresult WantDecodedFrames();\n>   nsresult SyncDecode();\n>   nsresult InitDecoder(bool aDoSizeDecode);\n>   nsresult WriteToDecoder(const char *aBuffer, PRUint32 aCount);\n>   nsresult DecodeSomeData(PRUint32 aMaxBytes);\n>   PRBool   IsDecodeFinished();\n> \n>+  // content-policy for image data\n>+  nsCOMPtr<imgIContentPolicy>\tmImageContentPolicyComponent;\n>   // Decoder shutdown\n>   enum eShutdownIntent {\n\nLooks like this chunk wants a newline after it", "bug_id": 698271, "id": 5814213}, {"tags": [], "raw_text": "(In reply to Daniel Holbert [:dholbert] from comment #4)\n> Mozilla style uses capitalized function-names.\n\n(in C++, that is)", "attachment_id": null, "time": "2011-10-30T21:49:42Z", "is_private": false, "creation_time": "2011-10-30T21:49:42Z", "bug_id": 698271, "id": 5814215, "count": 5, "text": "(In reply to Daniel Holbert [:dholbert] from comment #4)\n> Mozilla style uses capitalized function-names.\n\n(in C++, that is)", "author": "dholbert@mozilla.com", "creator": "dholbert@mozilla.com"}, {"author": "hamed.zaghaghi@gmail.com", "text": "I made the patch agaist mozilla-central, Should I do that against mozilla-aurora?", "count": 6, "bug_id": 698271, "id": 5814630, "raw_text": "I made the patch agaist mozilla-central, Should I do that against mozilla-aurora?", "time": "2011-10-31T06:05:50Z", "creator": "hamed.zaghaghi@gmail.com", "creation_time": "2011-10-31T06:05:50Z", "is_private": false, "attachment_id": null, "tags": []}, {"text": "(In reply to Hamed Zaghaghi from comment #6)\n> I made the patch agaist mozilla-central, Should I do that against\n> mozilla-aurora?\n\nNew functionality goes to mozilla-central then gets to Aurora with the next merge (which is only in 9 days anyway).", "count": 7, "author": "davemgarrett@gmail.com", "bug_id": 698271, "id": 5815704, "raw_text": "(In reply to Hamed Zaghaghi from comment #6)\n> I made the patch agaist mozilla-central, Should I do that against\n> mozilla-aurora?\n\nNew functionality goes to mozilla-central then gets to Aurora with the next merge (which is only in 9 days anyway).", "time": "2011-10-31T18:07:21Z", "creator": "davemgarrett@gmail.com", "creation_time": "2011-10-31T18:07:21Z", "is_private": false, "attachment_id": null, "tags": []}, {"author": "hamed.zaghaghi@gmail.com", "text": "Created attachment 570968\nfixed patch against mozilla-central rev 79467", "count": 8, "id": 5817556, "bug_id": 698271, "time": "2011-11-01T11:41:46Z", "raw_text": "", "creator": "hamed.zaghaghi@gmail.com", "is_private": false, "creation_time": "2011-11-01T11:41:46Z", "attachment_id": 570968, "tags": []}, {"time": "2011-11-01T12:15:19Z", "raw_text": "In previous one I forgot to update Makefile.in.", "attachment_id": 570972, "tags": [], "creator": "hamed.zaghaghi@gmail.com", "count": 9, "text": "Created attachment 570972\nfixed patch against mozilla-central rev 79467\n\nIn previous one I forgot to update Makefile.in.", "author": "hamed.zaghaghi@gmail.com", "bug_id": 698271, "id": 5817586, "is_private": false, "creation_time": "2011-11-01T12:15:19Z"}, {"tags": [], "attachment_id": 570982, "creation_time": "2011-11-01T13:48:47Z", "is_private": false, "creator": "hamed.zaghaghi@gmail.com", "time": "2011-11-01T13:48:47Z", "raw_text": "Sorry for multiple uploads.", "id": 5817710, "bug_id": 698271, "author": "hamed.zaghaghi@gmail.com", "count": 10, "text": "Created attachment 570982\nfixed patch against mozilla-central rev 79467\n\nSorry for multiple uploads."}]}}, "comments": {}}