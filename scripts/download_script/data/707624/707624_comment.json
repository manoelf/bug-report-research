{"comments": {}, "bugs": {"707624": {"comments": [{"raw_text": "I just noticed that e10s doesn't support redirecting from HTTP to a data: URI.  The parent channel constructs the new Data channel fine, and registers an ID for it, and  HttpChannelChild::Redirect1Begin creates a new data channel fine, too (when it tries to QI it to nsIChildChannel that fails and NS_ERROR is called, but that's just a warning).  I traced the code all the way through nsAsyncRedirectVerifyHelper.cpp up to the DocShell's redirect handler, and it all seemed fine, but the browser just stays on the old page.  Not sure where it's going wrong, and don't have time to find out.\n\nThis has come up while trying to answer a question about how to fix 354493, i.e. not from a bug in the field.  But I expect we'll hit it at some point--it's a legal redirect.\n\nAlso, presumably even if we get this working in the child, we'll have a memory leak in the parent? (Since we register the redirected-to data channel but don't ever use it).  Maybe we should special-case data, since all the info is in the URI, and we don't need a channel on the parent (except to pass to redirect handlers).\n\nI have a test URI at\n\n   http://people.mozilla.org/~jduell/data   \n\n(you should see \"foobar\" after going there)\n\nHonza: does bug 590682 fix this?", "attachment_id": null, "time": "2011-12-05T11:11:12Z", "tags": [], "text": "I just noticed that e10s doesn't support redirecting from HTTP to a data: URI.  The parent channel constructs the new Data channel fine, and registers an ID for it, and  HttpChannelChild::Redirect1Begin creates a new data channel fine, too (when it tries to QI it to nsIChildChannel that fails and NS_ERROR is called, but that's just a warning).  I traced the code all the way through nsAsyncRedirectVerifyHelper.cpp up to the DocShell's redirect handler, and it all seemed fine, but the browser just stays on the old page.  Not sure where it's going wrong, and don't have time to find out.\n\nThis has come up while trying to answer a question about how to fix 354493, i.e. not from a bug in the field.  But I expect we'll hit it at some point--it's a legal redirect.\n\nAlso, presumably even if we get this working in the child, we'll have a memory leak in the parent? (Since we register the redirected-to data channel but don't ever use it).  Maybe we should special-case data, since all the info is in the URI, and we don't need a channel on the parent (except to pass to redirect handlers).\n\nI have a test URI at\n\n   http://people.mozilla.org/~jduell/data   \n\n(you should see \"foobar\" after going there)\n\nHonza: does bug 590682 fix this?", "count": 0, "author": "jduell.mcbugs@gmail.com", "creator": "jduell.mcbugs@gmail.com", "creation_time": "2011-12-05T11:11:12Z", "is_private": false, "id": 5892334, "bug_id": 707624}, {"creator": "jduell.mcbugs@gmail.com", "creation_time": "2011-12-05T11:16:40Z", "is_private": false, "attachment_id": null, "tags": [], "author": "jduell.mcbugs@gmail.com", "count": 1, "text": "Hmm, I now notice that entering a plain old \"data:,fooooo\" into fennec (i.e. no redirect involved) doesn't seem to work, so perhaps the issue here is fennec not supporting the data protocol.\n\ncc-ing mobile guys in case they're not aware of this or can fill me in on why data: isn't supported.", "bug_id": 707624, "id": 5892341, "raw_text": "Hmm, I now notice that entering a plain old \"data:,fooooo\" into fennec (i.e. no redirect involved) doesn't seem to work, so perhaps the issue here is fennec not supporting the data protocol.\n\ncc-ing mobile guys in case they're not aware of this or can fill me in on why data: isn't supported.", "time": "2011-12-05T11:16:40Z"}, {"creator": "josh@joshmatthews.net", "author": "josh@joshmatthews.net", "count": 2, "text": "Comment 0 is a duplicate of bug 661604 I believe, which I found a while ago when doing my big mochitest push.", "bug_id": 707624, "id": 5892717, "is_private": false, "creation_time": "2011-12-05T15:28:36Z", "time": "2011-12-05T15:28:36Z", "attachment_id": null, "raw_text": "Comment 0 is a duplicate of bug 661604 I believe, which I found a while ago when doing my big mochitest push.", "tags": []}, {"tags": [], "time": "2011-12-07T21:48:08Z", "attachment_id": null, "raw_text": "(In reply to Jason Duell (:jduell) from comment #0)\n> Honza: does bug 590682 fix this?\n\nNo, because for data: we create the actual handling channel on the child process, data handler sets the DONT_OVERRIDE_ON_CHILD_PROCESS flag in that patch, at [1] we will get NULL.\n\nI don't think it's a good idea at all to let data be processed on the parent process, the actual data would have been carried between processes here and there w/o any obvious need, not quit optimal, IMO.  Therefor I've set the flag for data: in that patch.\n\n\nI have an idea: the patch in bug 590682 expects to do the actual processing on the parent.  That is a valid use case.  But we may need a second generic pair that expects to handle on the child process!  Actually an opposite addition to what that patch currently implements.  We will just add one more flag to nsIProtocolHandler and condition to IO service to create a generic channel (not IPC) when creating the new redirect channel.  When we get NULL at [1], we can create a generic channel \"manually\" and let it connect with the fake channel on the parent, using the existing channel registrar.  \n\nIn other words: the patch in bug 590682 is now incomplete!\n\n\nAnother idea, which I'm putting here just for a reference (complicated): We may have to think about redirects ones again.  Maybe creating the actual channel implementation on the parent process as new channel we redirect to was not a good idea at all.  Maybe we have to post an event to the child process and let it create the pair it self and than catch it on the parent asynchronously.  No need for the channel registrar.  Just need to let the redirecting channel wait for the new channel asynchronously.  The generic channel from bug 590682 can be rethinked to create a generic parent channel for e.g. data: and other channels that will process on child and don't want to implement the IPC part just because of http can redirect to that protocol.\n\n\n\nI don't know at the moment why you cannot simply open a data: URL.  Not enough time at the moment to test this my self.\n\n\n[1] http://hg.mozilla.org/mozilla-central/annotate/dfff3e59ef23/netwerk/protocol/http/HttpChannelChild.cpp#l770", "bug_id": 707624, "id": 5898592, "is_private": false, "creation_time": "2011-12-07T21:48:08Z", "creator": "honzab.moz@firemni.cz", "author": "honzab.moz@firemni.cz", "text": "(In reply to Jason Duell (:jduell) from comment #0)\n> Honza: does bug 590682 fix this?\n\nNo, because for data: we create the actual handling channel on the child process, data handler sets the DONT_OVERRIDE_ON_CHILD_PROCESS flag in that patch, at [1] we will get NULL.\n\nI don't think it's a good idea at all to let data be processed on the parent process, the actual data would have been carried between processes here and there w/o any obvious need, not quit optimal, IMO.  Therefor I've set the flag for data: in that patch.\n\n\nI have an idea: the patch in bug 590682 expects to do the actual processing on the parent.  That is a valid use case.  But we may need a second generic pair that expects to handle on the child process!  Actually an opposite addition to what that patch currently implements.  We will just add one more flag to nsIProtocolHandler and condition to IO service to create a generic channel (not IPC) when creating the new redirect channel.  When we get NULL at [1], we can create a generic channel \"manually\" and let it connect with the fake channel on the parent, using the existing channel registrar.  \n\nIn other words: the patch in bug 590682 is now incomplete!\n\n\nAnother idea, which I'm putting here just for a reference (complicated): We may have to think about redirects ones again.  Maybe creating the actual channel implementation on the parent process as new channel we redirect to was not a good idea at all.  Maybe we have to post an event to the child process and let it create the pair it self and than catch it on the parent asynchronously.  No need for the channel registrar.  Just need to let the redirecting channel wait for the new channel asynchronously.  The generic channel from bug 590682 can be rethinked to create a generic parent channel for e.g. data: and other channels that will process on child and don't want to implement the IPC part just because of http can redirect to that protocol.\n\n\n\nI don't know at the moment why you cannot simply open a data: URL.  Not enough time at the moment to test this my self.\n\n\n[1] http://hg.mozilla.org/mozilla-central/annotate/dfff3e59ef23/netwerk/protocol/http/HttpChannelChild.cpp#l770", "count": 3}, {"creation_time": "2012-09-06T00:08:18Z", "is_private": false, "creator": "jduell.mcbugs@gmail.com", "tags": [], "attachment_id": null, "id": 6613149, "bug_id": 707624, "text": "If bug 786275 then we don't have to fix this...", "count": 4, "author": "jduell.mcbugs@gmail.com", "time": "2012-09-06T00:08:18Z", "raw_text": "If bug 786275 then we don't have to fix this..."}, {"creator": "dtownsend@mozilla.com", "author": "dtownsend@mozilla.com", "count": 5, "text": "*** Bug 1146132 has been marked as a duplicate of this bug. ***", "id": 10078416, "bug_id": 707624, "is_private": false, "creation_time": "2015-03-25T22:19:25Z", "time": "2015-03-25T22:19:25Z", "attachment_id": null, "raw_text": "", "tags": []}, {"is_private": false, "creation_time": "2015-03-25T22:20:23Z", "creator": "dtownsend@mozilla.com", "tags": [], "attachment_id": null, "bug_id": 707624, "id": 10078424, "author": "dtownsend@mozilla.com", "text": "(In reply to Jason Duell [:jduell] (needinfo? me) from comment #4)\n> If bug 786275 then we don't have to fix this...\n\nThis isn't quite true, in bug 1146132 an add-on author is redirecting http requests to a data URI in order to replace the page with something else.", "count": 6, "time": "2015-03-25T22:20:23Z", "raw_text": "(In reply to Jason Duell [:jduell] (needinfo? me) from comment #4)\n> If bug 786275 then we don't have to fix this...\n\nThis isn't quite true, in bug 1146132 an add-on author is redirecting http requests to a data URI in order to replace the page with something else."}, {"is_private": false, "creation_time": "2017-09-13T18:35:17Z", "creator": "bug-husbandry-bot@mozilla.bugs", "tags": [], "attachment_id": null, "bug_id": 707624, "id": 12657912, "author": "bug-husbandry-bot@mozilla.bugs", "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "count": 7, "time": "2017-09-13T18:35:17Z", "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258"}, {"raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "attachment_id": null, "time": "2017-09-13T18:47:31Z", "tags": [], "count": 8, "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "author": "bug-husbandry-bot@mozilla.bugs", "creator": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2017-09-13T18:47:31Z", "is_private": false, "bug_id": 707624, "id": 12659468}, {"count": 9, "text": "Would this apply to other types of non-HTTP URLs also?\n\nBug 1416146 is about redirecting from HTTP to extension URLs (\"moz-extension\" scheme) in extension code.", "author": "hzbz@pm.me", "creator": "hzbz@pm.me", "creation_time": "2017-11-10T07:54:21Z", "is_private": false, "bug_id": 707624, "id": 12833270, "raw_text": "Would this apply to other types of non-HTTP URLs also?\n\nBug 1416146 is about redirecting from HTTP to extension URLs (\"moz-extension\" scheme) in extension code.", "attachment_id": null, "time": "2017-11-10T07:54:21Z", "tags": []}, {"id": 12834486, "bug_id": 707624, "creation_time": "2017-11-10T16:20:00Z", "is_private": false, "creator": "jduell.mcbugs@gmail.com", "count": 10, "text": "> Would this apply to other types of non-HTTP URLs also?\n\nWe don't support redirects to extension URIs right now.  I'm not actually sure of what our webextension APIs are for extension URLS, but whatever they are, I doubt we support them.  \n\nBut support for that would probably be a different bug than this one (although the fix might be related).  Open a new bug for it if Andy McKay thinks we need to support it.", "author": "jduell.mcbugs@gmail.com", "tags": [], "time": "2017-11-10T16:20:00Z", "raw_text": "> Would this apply to other types of non-HTTP URLs also?\n\nWe don't support redirects to extension URIs right now.  I'm not actually sure of what our webextension APIs are for extension URLS, but whatever they are, I doubt we support them.  \n\nBut support for that would probably be a different bug than this one (although the fix might be related).  Open a new bug for it if Andy McKay thinks we need to support it.", "attachment_id": null}, {"tags": [], "time": "2017-11-10T18:44:53Z", "attachment_id": null, "raw_text": "(In reply to Jason Duell [:jduell] (needinfo me) from comment #10)\n> > Would this apply to other types of non-HTTP URLs also?\n> \n> We don't support redirects to extension URIs right now.  I'm not actually\n> sure of what our webextension APIs are for extension URLS, but whatever they\n> are, I doubt we support them.  \n\nWe do support redir to moz-extension: (bug 1276048 and its dup).  My work on bug 1319111 was one of the blockers to make this actually work.  Not sure in what state it is now, but we allow it only with few corner cases unfixed?\n\n> \n> But support for that would probably be a different bug than this one\n> (although the fix might be related).  Open a new bug for it if Andy McKay\n> thinks we need to support it.\n\nI don't know why we should not support redir to data unless there is some redirect/ipc magic that is missing (nsIChildChannel/nsIParentChannel impl for data channels.)\n\nAlso note there were some limitations added to do top level loads from data (still evolving, tho) that could potentially affect this.", "bug_id": 707624, "id": 12834786, "creation_time": "2017-11-10T18:44:53Z", "is_private": false, "creator": "honzab.moz@firemni.cz", "author": "honzab.moz@firemni.cz", "text": "(In reply to Jason Duell [:jduell] (needinfo me) from comment #10)\n> > Would this apply to other types of non-HTTP URLs also?\n> \n> We don't support redirects to extension URIs right now.  I'm not actually\n> sure of what our webextension APIs are for extension URLS, but whatever they\n> are, I doubt we support them.  \n\nWe do support redir to moz-extension: (bug 1276048 and its dup).  My work on bug 1319111 was one of the blockers to make this actually work.  Not sure in what state it is now, but we allow it only with few corner cases unfixed?\n\n> \n> But support for that would probably be a different bug than this one\n> (although the fix might be related).  Open a new bug for it if Andy McKay\n> thinks we need to support it.\n\nI don't know why we should not support redir to data unless there is some redirect/ipc magic that is missing (nsIChildChannel/nsIParentChannel impl for data channels.)\n\nAlso note there were some limitations added to do top level loads from data (still evolving, tho) that could potentially affect this.", "count": 11}, {"raw_text": "(In reply to Honza Bambas (:mayhemer) from comment #11)\n> We do support redir to moz-extension: (bug 1276048 and its dup).  My work on\n> bug 1319111 was one of the blockers to make this actually work.  Not sure in\n> what state it is now, but we allow it only with few corner cases unfixed?\n\nThanks Honza! Sounds like it has since regressed. I'll poke those folks about fixing the regression.", "time": "2017-11-13T03:08:23Z", "text": "(In reply to Honza Bambas (:mayhemer) from comment #11)\n> We do support redir to moz-extension: (bug 1276048 and its dup).  My work on\n> bug 1319111 was one of the blockers to make this actually work.  Not sure in\n> what state it is now, but we allow it only with few corner cases unfixed?\n\nThanks Honza! Sounds like it has since regressed. I'll poke those folks about fixing the regression.", "count": 12, "author": "hzbz@pm.me", "id": 12836925, "bug_id": 707624, "attachment_id": null, "tags": [], "creator": "hzbz@pm.me", "is_private": false, "creation_time": "2017-11-13T03:08:23Z"}]}}}