{"comments": {}, "bugs": {"685459": {"comments": [{"id": 5707053, "count": 0, "is_private": false, "creation_time": "2011-09-08T08:12:32Z", "time": "2011-09-08T08:12:32Z", "creator": "kaie@kuix.de", "author": "kaie@kuix.de", "attachment_id": null, "raw_text": "- Using a nightly Firefox build that has been upgraded to NSS 3.13 beta\n- Using Cert Manager at the knockout certs we added for DigiNotar.\n\nexpected:\nthe knockout CA certs should be listed in the \"Authorities\" tab\n\nactual behaviour:\nthe knockout CA certs are listed in the \"Servers\" tab\n\nI don't know yet if this is an NSS bug or PSM bug.", "text": "- Using a nightly Firefox build that has been upgraded to NSS 3.13 beta\n- Using Cert Manager at the knockout certs we added for DigiNotar.\n\nexpected:\nthe knockout CA certs should be listed in the \"Authorities\" tab\n\nactual behaviour:\nthe knockout CA certs are listed in the \"Servers\" tab\n\nI don't know yet if this is an NSS bug or PSM bug.", "bug_id": 685459, "tags": []}, {"is_private": false, "id": 5712262, "count": 1, "creator": "wtc@google.com", "creation_time": "2011-09-10T04:58:02Z", "time": "2011-09-10T04:58:02Z", "author": "wtc@google.com", "attachment_id": null, "raw_text": "Bob: please review my findings below.\n\nKai: I tracked down this bug.  This bug is caused by two things:\n\n1. The trust flags for the distrusted CA certs in certdata.txt\nchanged between NSS 3.12 and NSS 3.13.  Bob explained the\ndifference in bug 642503 comment 20:\n\n  The  nssTrustLevel mapping to and from PKCS #11 has changed as as follows\n\n  Formerly:\n  CKT_NSS_UNTRUSTED (now CKT_NSS_MUST_VERIFY_TRUST) -> nssTrustLevel_Untrusted\n  ...\n\n  Now:\n  CKT_NSS_NOT_TRUSTED (was CKT_NSS_VALID) -> nssTrustLevel_Untrusted\n  ...\n\n  The nssTrustLevel mapping to and from certdb trust have changed a follows:\n\n  Formerly:\n  nssTrustLevel_Untrusted -> 0 (no bits set)\n  ...\n\n  Now:\n  ...\n  nssTrustLevel_Untrusted -> CERTDB_VALID_PEER (now CERTDB_TERMINAL_RECORD)\n\n  ...\n\n  Semantic differences\n\n  ...\n\n  **** certdata.txt ****\n  The MD5 Collisions forged Rogue CA:\n  Was CKT_NETSCAPE_UNTRUSTED which now mapps to CKT_NSS_MUST_VERIFY_TRUST\n  was changed to CKT_NSS_NOT_TRUSTED (formerly CKT_NSS_VALID).\n\n  This isn't a major semantic change. A different value will be passed\n  out of PKCS #11, and different bits will be set on the cert at the\n  user level (p,p,p rather then ,, ). ...\n\nNote that the trust attributes changed from ,, to p,p,p.\n\n2. PSM's getCertType function uses an inaccurate test for\nserver certs:\nhttp://mxr.mozilla.org/mozilla-central/ident?i=getCertType\n\n2245   if (trust.HasAnyCA())\n2246     return nsIX509Cert::CA_CERT;\n2247   if (trust.HasPeer(PR_TRUE, PR_FALSE, PR_FALSE))\n2248     return nsIX509Cert::SERVER_CERT;\n2249   if (trust.HasPeer(PR_FALSE, PR_TRUE, PR_FALSE) && cert->emailAddr)\n2250     return nsIX509Cert::EMAIL_CERT;\n2251   if (CERT_IsCACert(cert,NULL))\n2252     return nsIX509Cert::CA_CERT;\n\nThe new trust attributes p,p,p cause the server cert test\ntrust.HasPeer(PR_TRUE, PR_FALSE, PR_FALSE) to return true.\n\nThis can be fixed by performing the CERT_IsCACert(cert,NULL)\ntest before the server cert test.", "tags": [], "text": "Bob: please review my findings below.\n\nKai: I tracked down this bug.  This bug is caused by two things:\n\n1. The trust flags for the distrusted CA certs in certdata.txt\nchanged between NSS 3.12 and NSS 3.13.  Bob explained the\ndifference in bug 642503 comment 20:\n\n  The  nssTrustLevel mapping to and from PKCS #11 has changed as as follows\n\n  Formerly:\n  CKT_NSS_UNTRUSTED (now CKT_NSS_MUST_VERIFY_TRUST) -> nssTrustLevel_Untrusted\n  ...\n\n  Now:\n  CKT_NSS_NOT_TRUSTED (was CKT_NSS_VALID) -> nssTrustLevel_Untrusted\n  ...\n\n  The nssTrustLevel mapping to and from certdb trust have changed a follows:\n\n  Formerly:\n  nssTrustLevel_Untrusted -> 0 (no bits set)\n  ...\n\n  Now:\n  ...\n  nssTrustLevel_Untrusted -> CERTDB_VALID_PEER (now CERTDB_TERMINAL_RECORD)\n\n  ...\n\n  Semantic differences\n\n  ...\n\n  **** certdata.txt ****\n  The MD5 Collisions forged Rogue CA:\n  Was CKT_NETSCAPE_UNTRUSTED which now mapps to CKT_NSS_MUST_VERIFY_TRUST\n  was changed to CKT_NSS_NOT_TRUSTED (formerly CKT_NSS_VALID).\n\n  This isn't a major semantic change. A different value will be passed\n  out of PKCS #11, and different bits will be set on the cert at the\n  user level (p,p,p rather then ,, ). ...\n\nNote that the trust attributes changed from ,, to p,p,p.\n\n2. PSM's getCertType function uses an inaccurate test for\nserver certs:\nhttp://mxr.mozilla.org/mozilla-central/ident?i=getCertType\n\n2245   if (trust.HasAnyCA())\n2246     return nsIX509Cert::CA_CERT;\n2247   if (trust.HasPeer(PR_TRUE, PR_FALSE, PR_FALSE))\n2248     return nsIX509Cert::SERVER_CERT;\n2249   if (trust.HasPeer(PR_FALSE, PR_TRUE, PR_FALSE) && cert->emailAddr)\n2250     return nsIX509Cert::EMAIL_CERT;\n2251   if (CERT_IsCACert(cert,NULL))\n2252     return nsIX509Cert::CA_CERT;\n\nThe new trust attributes p,p,p cause the server cert test\ntrust.HasPeer(PR_TRUE, PR_FALSE, PR_FALSE) to return true.\n\nThis can be fixed by performing the CERT_IsCACert(cert,NULL)\ntest before the server cert test.", "bug_id": 685459}]}}}