{"bugs": {"667854": {"comments": [{"time": "2011-06-28T09:29:07Z", "raw_text": "tested on Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.17) Gecko/20110424 Thunderbird/3.1.10 (Thunderbird 3.1 on Ubuntu)\n\nThis is similar to the bug 132340. The bug said that quick search now work for base64 encoded bodies, but it still don't work for this testcase.\n\nSteps to reproduce:\n1. Import the attached eml file to your local mail folder. It includes\n   Base86 encoded body like:\n   ------------------------------------------------------\n   \u300c\u738b\u69d8\u306f\u3001\u4eba\u3092\u6bba\u3057\u307e\u3059\u3002\u300d\n   \u300c\u306a\u305c\u6bba\u3059\u306e\u3060\u3002\u300d\n   \u300c\u60aa\u5fc3\u3092\u62b1\u3044\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u306e\u3067\u3059\u304c\u3001\u8ab0\u3082\u305d\u3093\u306a\u3001\u60aa\u5fc3\u3092\u6301\u3063\u3066\u306f\u5c45\u308a\u307e\u305b\u306c\u3002\u300d\n   \u300c\u305f\u304f\u3055\u3093\u306e\u4eba\u3092\u6bba\u3057\u305f\u306e\u304b\u3002\u300d\n   \u300c\u306f\u3044\u3001\u306f\u3058\u3081\u306f\u738b\u69d8\u306e\u59b9\u5a7f\u3055\u307e\u3092\u3002\u305d\u308c\u304b\u3089\u3001\u5fa1\u81ea\u8eab\u306e\u304a\u4e16\u55e3\uff08\u3088\u3064\u304e\uff09\u3092\u3002\n   \u305d\u308c\u304b\u3089\u3001\u59b9\u3055\u307e\u3092\u3002\u305d\u308c\u304b\u3089\u3001\u59b9\u3055\u307e\u306e\u5fa1\u5b50\u3055\u307e\u3092\u3002\u305d\u308c\u304b\u3089\u3001\u7687\u540e\u3055\u307e\u3092\u3002\n   \u305d\u308c\u304b\u3089\u3001\u8ce2\u81e3\u306e\u30a2\u30ec\u30ad\u30b9\u69d8\u3092\u3002\u300d\n   \u300c\u304a\u3069\u308d\u3044\u305f\u3002\u56fd\u738b\u306f\u4e71\u5fc3\u304b\u3002\u300d\n   ------------------------------------------------------\n   (\"Run,Melos!\" by Osamu Dazai)\n   The base64 encoded version is:\n   ------------------------------------------------------\n   44CM546L5qeY44Gv44CB5Lq644KS5q6644GX44G+44GZ44CC44CNCuOAjOOBquOBnOauuuOBmeOB\n   ruOBoOOAguOAjQrjgIzmgqrlv4PjgpLmirHjgYTjgabjgYTjgovjgIHjgajjgYTjgYbjga7jgafj\n   gZnjgYzjgIHoqrDjgoLjgZ3jgpPjgarjgIHmgqrlv4PjgpLmjIHjgaPjgabjga/lsYXjgorjgb7j\n   gZvjgazjgILjgI0K44CM44Gf44GP44GV44KT44Gu5Lq644KS5q6644GX44Gf44Gu44GL44CC44CN\n   CuOAjOOBr+OBhOOAgeOBr+OBmOOCgeOBr+eOi+anmOOBruWmueWpv+OBleOBvuOCkuOAguOBneOC\n   jOOBi+OCieOAgeW+oeiHqui6q+OBruOBiuS4luWXo++8iOOCiOOBpOOBju+8ieOCkuOAguOBneOC\n   jOOBi+OCieOAgeWmueOBleOBvuOCkuOAguOBneOCjOOBi+OCieOAgeWmueOBleOBvuOBruW+oeWt\n   kOOBleOBvuOCkuOAguOBneOCjOOBi+OCieOAgeeah+WQjuOBleOBvuOCkuOAguOBneOCjOOBi+OC\n   ieOAgeizouiHo+OBruOCouODrOOCreOCueanmOOCkuOAguOAjQrjgIzjgYrjganjgo3jgYTjgZ/j\n   gILlm73njovjga/kubHlv4PjgYvjgILjgI0K\n\n\n   ------------------------------------------------------\n2. After the mail was completely imported, do quick search about \"\u30a2\u30ec\u30ad\u30b9\".\n   for message bodies. The actual source of the message has the name.\n   However, no message is appear in the search results.\n\nActual result: no message is found.\nExpected result: The imported message appears on the search result.", "attachment_id": 542404, "tags": [], "creator": "yuki@clear-code.com", "text": "Created attachment 542404\ntestcase: a part of \"Run,Melos!\" by Osamu Dazai\n\ntested on Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.17) Gecko/20110424 Thunderbird/3.1.10 (Thunderbird 3.1 on Ubuntu)\n\nThis is similar to the bug 132340. The bug said that quick search now work for base64 encoded bodies, but it still don't work for this testcase.\n\nSteps to reproduce:\n1. Import the attached eml file to your local mail folder. It includes\n   Base86 encoded body like:\n   ------------------------------------------------------\n   \u300c\u738b\u69d8\u306f\u3001\u4eba\u3092\u6bba\u3057\u307e\u3059\u3002\u300d\n   \u300c\u306a\u305c\u6bba\u3059\u306e\u3060\u3002\u300d\n   \u300c\u60aa\u5fc3\u3092\u62b1\u3044\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u306e\u3067\u3059\u304c\u3001\u8ab0\u3082\u305d\u3093\u306a\u3001\u60aa\u5fc3\u3092\u6301\u3063\u3066\u306f\u5c45\u308a\u307e\u305b\u306c\u3002\u300d\n   \u300c\u305f\u304f\u3055\u3093\u306e\u4eba\u3092\u6bba\u3057\u305f\u306e\u304b\u3002\u300d\n   \u300c\u306f\u3044\u3001\u306f\u3058\u3081\u306f\u738b\u69d8\u306e\u59b9\u5a7f\u3055\u307e\u3092\u3002\u305d\u308c\u304b\u3089\u3001\u5fa1\u81ea\u8eab\u306e\u304a\u4e16\u55e3\uff08\u3088\u3064\u304e\uff09\u3092\u3002\n   \u305d\u308c\u304b\u3089\u3001\u59b9\u3055\u307e\u3092\u3002\u305d\u308c\u304b\u3089\u3001\u59b9\u3055\u307e\u306e\u5fa1\u5b50\u3055\u307e\u3092\u3002\u305d\u308c\u304b\u3089\u3001\u7687\u540e\u3055\u307e\u3092\u3002\n   \u305d\u308c\u304b\u3089\u3001\u8ce2\u81e3\u306e\u30a2\u30ec\u30ad\u30b9\u69d8\u3092\u3002\u300d\n   \u300c\u304a\u3069\u308d\u3044\u305f\u3002\u56fd\u738b\u306f\u4e71\u5fc3\u304b\u3002\u300d\n   ------------------------------------------------------\n   (\"Run,Melos!\" by Osamu Dazai)\n   The base64 encoded version is:\n   ------------------------------------------------------\n   44CM546L5qeY44Gv44CB5Lq644KS5q6644GX44G+44GZ44CC44CNCuOAjOOBquOBnOauuuOBmeOB\n   ruOBoOOAguOAjQrjgIzmgqrlv4PjgpLmirHjgYTjgabjgYTjgovjgIHjgajjgYTjgYbjga7jgafj\n   gZnjgYzjgIHoqrDjgoLjgZ3jgpPjgarjgIHmgqrlv4PjgpLmjIHjgaPjgabjga/lsYXjgorjgb7j\n   gZvjgazjgILjgI0K44CM44Gf44GP44GV44KT44Gu5Lq644KS5q6644GX44Gf44Gu44GL44CC44CN\n   CuOAjOOBr+OBhOOAgeOBr+OBmOOCgeOBr+eOi+anmOOBruWmueWpv+OBleOBvuOCkuOAguOBneOC\n   jOOBi+OCieOAgeW+oeiHqui6q+OBruOBiuS4luWXo++8iOOCiOOBpOOBju+8ieOCkuOAguOBneOC\n   jOOBi+OCieOAgeWmueOBleOBvuOCkuOAguOBneOCjOOBi+OCieOAgeWmueOBleOBvuOBruW+oeWt\n   kOOBleOBvuOCkuOAguOBneOCjOOBi+OCieOAgeeah+WQjuOBleOBvuOCkuOAguOBneOCjOOBi+OC\n   ieOAgeizouiHo+OBruOCouODrOOCreOCueanmOOCkuOAguOAjQrjgIzjgYrjganjgo3jgYTjgZ/j\n   gILlm73njovjga/kubHlv4PjgYvjgILjgI0K\n\n\n   ------------------------------------------------------\n2. After the mail was completely imported, do quick search about \"\u30a2\u30ec\u30ad\u30b9\".\n   for message bodies. The actual source of the message has the name.\n   However, no message is appear in the search results.\n\nActual result: no message is found.\nExpected result: The imported message appears on the search result.", "count": 0, "author": "yuki@clear-code.com", "bug_id": 667854, "id": 5561180, "creation_time": "2011-06-28T09:29:07Z", "is_private": false}, {"creation_time": "2011-06-28T09:30:26Z", "is_private": false, "bug_id": 667854, "id": 5561183, "author": "yuki@clear-code.com", "text": "Oops,\n\n> 2. After the mail was completely imported, do quick search about \"\u30a2\u30ec\u30ad\u30b9\".\n>    for message bodies. The actual source of the message has the name.\n>    However, no message is appear in the search results.\n\nPlease ignore the last line.", "count": 1, "creator": "yuki@clear-code.com", "tags": [], "attachment_id": null, "raw_text": "Oops,\n\n> 2. After the mail was completely imported, do quick search about \"\u30a2\u30ec\u30ad\u30b9\".\n>    for message bodies. The actual source of the message has the name.\n>    However, no message is appear in the search results.\n\nPlease ignore the last line.", "time": "2011-06-28T09:30:26Z"}, {"attachment_id": null, "tags": [], "creator": "yuki@clear-code.com", "creation_time": "2011-06-28T09:49:02Z", "is_private": false, "raw_text": "I couldn't reproduce this problem on\nMozilla/5.0 (X11; Linux i686; rv:5.0) Gecko/20110620 Thunderbird/5.0b2\nSorry, it seems to be fixed on lately versions...", "time": "2011-06-28T09:49:02Z", "author": "yuki@clear-code.com", "count": 2, "text": "I couldn't reproduce this problem on\nMozilla/5.0 (X11; Linux i686; rv:5.0) Gecko/20110620 Thunderbird/5.0b2\nSorry, it seems to be fixed on lately versions...", "id": 5561197, "bug_id": 667854}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-07-01T04:06:30Z", "creator": "yuki@clear-code.com", "time": "2011-07-01T04:06:30Z", "raw_text": "With another testcase, this problem happens on Thunderbird 5.0.\nHowever, by privacy reason I cannot't upload the actual testcase...", "id": 5568855, "bug_id": 667854, "count": 3, "text": "With another testcase, this problem happens on Thunderbird 5.0.\nHowever, by privacy reason I cannot't upload the actual testcase...", "author": "yuki@clear-code.com"}, {"attachment_id": 543378, "tags": [], "creator": "yuki@clear-code.com", "creation_time": "2011-07-01T08:52:20Z", "is_private": false, "raw_text": "Minimum testcase for this problem.\nThis message includes following text as a base64 encoded string:\n----------------------------------------------------------------\nhttps://www.example.com/?randomparam1=2d2b0e756d50b91d96e90c0c1bb1cf51&randomparam2=f84bd4b600\n\n[SEARCHTERM]\n----------------------------------------------------------------\n\nSteps to reproduce:\n1. Import the attached message to Thunderbird.\n   I used the addon \"ImportExportTools\".\n2. Go to the folder which the message is imported.\n3. Start search by Ctrl-Shift-F.\n4. Search a message by the condition:\n   \"Body\", \"contains\", and \"SEARCH\" (type it into the textbox)\n\nActual result:\nNo message found.\n\nExpected result:\nThe imported message is found.", "time": "2011-07-01T08:52:20Z", "count": 4, "text": "Created attachment 543378\nminimum testcase\n\nMinimum testcase for this problem.\nThis message includes following text as a base64 encoded string:\n----------------------------------------------------------------\nhttps://www.example.com/?randomparam1=2d2b0e756d50b91d96e90c0c1bb1cf51&randomparam2=f84bd4b600\n\n[SEARCHTERM]\n----------------------------------------------------------------\n\nSteps to reproduce:\n1. Import the attached message to Thunderbird.\n   I used the addon \"ImportExportTools\".\n2. Go to the folder which the message is imported.\n3. Start search by Ctrl-Shift-F.\n4. Search a message by the condition:\n   \"Body\", \"contains\", and \"SEARCH\" (type it into the textbox)\n\nActual result:\nNo message found.\n\nExpected result:\nThe imported message is found.", "author": "yuki@clear-code.com", "bug_id": 667854, "id": 5569109}, {"author": "garkin1@gmail.com", "text": "I have the similar problem, message body filter doesn't work for messages with Base64 and long URL.\n\nAs a result, I can't filter mails from bugzilla...\n\nuser-agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:7.0) Gecko/20110905\n Thunderbird/7.0\n...\nContent-Type: text/plain; charset=\"utf-8\"\nContent-Transfer-Encoding: base64\n\nAny plans to fix it?", "count": 5, "id": 5820162, "bug_id": 667854, "raw_text": "I have the similar problem, message body filter doesn't work for messages with Base64 and long URL.\n\nAs a result, I can't filter mails from bugzilla...\n\nuser-agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:7.0) Gecko/20110905\n Thunderbird/7.0\n...\nContent-Type: text/plain; charset=\"utf-8\"\nContent-Transfer-Encoding: base64\n\nAny plans to fix it?", "time": "2011-11-02T07:55:33Z", "creator": "garkin1@gmail.com", "is_private": false, "creation_time": "2011-11-02T07:55:33Z", "attachment_id": null, "tags": []}, {"tags": [], "raw_text": "Confirmed with Tb 7.0.1 on Win-XP.\n\nWith attached mail, any of body search for aHR0(string of base64 encoded data), for http(text in decoded data), for SEARCHSTRING text in decoded data), returns nothing.\n\nIf the mail is attached as message/rfc822 part by Tb, message/rfc822 part is sent in base64(corrupted format though, known bug),\n> Content-Transfer-Encoding: base64\nand body search for YUhS(string of base64 encoded data) returns the mail.\nThis is already known and long-lived bug 37031, and different problem from this bug.", "attachment_id": null, "time": "2011-11-02T09:05:40Z", "creation_time": "2011-11-02T09:05:40Z", "is_private": false, "id": 5820209, "bug_id": 667854, "text": "Confirmed with Tb 7.0.1 on Win-XP.\n\nWith attached mail, any of body search for aHR0(string of base64 encoded data), for http(text in decoded data), for SEARCHSTRING text in decoded data), returns nothing.\n\nIf the mail is attached as message/rfc822 part by Tb, message/rfc822 part is sent in base64(corrupted format though, known bug),\n> Content-Transfer-Encoding: base64\nand body search for YUhS(string of base64 encoded data) returns the mail.\nThis is already known and long-lived bug 37031, and different problem from this bug.", "count": 6, "author": "m-wada@usa.com", "creator": "m-wada@usa.com"}, {"tags": [], "attachment_id": null, "raw_text": "Additional quick observations.\n\n(A-1) \"Search All Messages\" in Toolbar, When base64 encoded\n  http, https, https:, https:/, https://, https://w, ... => match\n  htt => no match\n  2d2b0e756d50b91d96e90c0c1bb1cf51 => match\n  Substring of \"2d2b0e756d50b91d96e90c0c1bb1cf51\" => no match\n  f84bd4b600 => match\n  Substring of f84bd4b600 => no match\n  SEARCHTERM => match\n  Substring of \"SEARCHTERM\" => no match\n(A-2) \"Search All Messages\" in Toolbar, When 8bits(not encoded) \n  Same as (A-1), but may be slightly different.\n\nGloda correctly indexes using base64 decoded message body.\nAbove looks a characteristcs of simple Gloda Search. \"Term in Gloda(similar to Word)\" is roughly continuous non-space/non-special chars, and Tb's Gloda Search probably doesn't use \"term start with\"/\"term end with\"/\"term contains\" like search.  \nIIRC, Gloda doesn't consider string less than 4 chars \"Term\". This is probably reason why \"htt\" doesn't match. \n\"https\" may be plural form of \"http\" for Gloda. This may be a reason why \"http\" matches.\n\n(B-1) \"Filter These Messages\" in Quick Filter Bar, Body, When base64 encoded\n  (i)  SEARCHTERM, any substring of \"SEARCHTERM\" => no match (this bug)\n  (ii) URL string, any substring of URL string => no match\n(B-2) \"Filter These Messages\" in Quick Filter Bar, Body, When 8bits(not encoded)\n  (i)  SEARCHTERM, any substring of \"SEARCHTERM\" => match\n  (ii) URL string, any substring of URL string => no match\nNote: \"Filter These Messages\" in Quick Filter Bar is same as Edit/Find/Search Messages and Search of folder context menu, and also same as Saved Search Folder(Virtual Folder) of \"single search target folder\" and of \"not online search if IMAP\", as far as conditions are set similarly to search at \"Filter These Messages\" and filter by \"Quick Filter\".\n\nIf URL string, and if base64 encoded message body, both of (B-1)/(i) \"problem in Body Search on base64 encoded message body\" and (B-2)/(ii) \"phenomenon in URL string search on message body of text/plain mail(linkified by Tb always)\", looks to occur at same time.", "time": "2011-11-03T04:24:43Z", "is_private": false, "creation_time": "2011-11-03T04:24:43Z", "id": 5822843, "bug_id": 667854, "author": "m-wada@usa.com", "count": 7, "text": "Additional quick observations.\n\n(A-1) \"Search All Messages\" in Toolbar, When base64 encoded\n  http, https, https:, https:/, https://, https://w, ... => match\n  htt => no match\n  2d2b0e756d50b91d96e90c0c1bb1cf51 => match\n  Substring of \"2d2b0e756d50b91d96e90c0c1bb1cf51\" => no match\n  f84bd4b600 => match\n  Substring of f84bd4b600 => no match\n  SEARCHTERM => match\n  Substring of \"SEARCHTERM\" => no match\n(A-2) \"Search All Messages\" in Toolbar, When 8bits(not encoded) \n  Same as (A-1), but may be slightly different.\n\nGloda correctly indexes using base64 decoded message body.\nAbove looks a characteristcs of simple Gloda Search. \"Term in Gloda(similar to Word)\" is roughly continuous non-space/non-special chars, and Tb's Gloda Search probably doesn't use \"term start with\"/\"term end with\"/\"term contains\" like search.  \nIIRC, Gloda doesn't consider string less than 4 chars \"Term\". This is probably reason why \"htt\" doesn't match. \n\"https\" may be plural form of \"http\" for Gloda. This may be a reason why \"http\" matches.\n\n(B-1) \"Filter These Messages\" in Quick Filter Bar, Body, When base64 encoded\n  (i)  SEARCHTERM, any substring of \"SEARCHTERM\" => no match (this bug)\n  (ii) URL string, any substring of URL string => no match\n(B-2) \"Filter These Messages\" in Quick Filter Bar, Body, When 8bits(not encoded)\n  (i)  SEARCHTERM, any substring of \"SEARCHTERM\" => match\n  (ii) URL string, any substring of URL string => no match\nNote: \"Filter These Messages\" in Quick Filter Bar is same as Edit/Find/Search Messages and Search of folder context menu, and also same as Saved Search Folder(Virtual Folder) of \"single search target folder\" and of \"not online search if IMAP\", as far as conditions are set similarly to search at \"Filter These Messages\" and filter by \"Quick Filter\".\n\nIf URL string, and if base64 encoded message body, both of (B-1)/(i) \"problem in Body Search on base64 encoded message body\" and (B-2)/(ii) \"phenomenon in URL string search on message body of text/plain mail(linkified by Tb always)\", looks to occur at same time.", "creator": "m-wada@usa.com"}, {"is_private": false, "creation_time": "2011-11-03T09:00:55Z", "id": 5823083, "bug_id": 667854, "author": "m-wada@usa.com", "text": "Created attachment 571577\nTest mail to see format of url is relevant, and long-url or short-url is irrlevant\n\nAll mails has message body of next format, and is base64 encoded.\n {FINDSTRING} http://x.y.z<depends_on_test_case> [SEARCHTEXT]\n(No CRLF/LF/CR to force Tb to send in base64 when text file is attached)\nDifference among case-1/2/3\n  case-1 : URL ends with /?p=...\n  case-2 : \"/\" before \"?\" is removed from case-1, and one byte is added\n  case-3 : \"=\" in case-2 is replaced by \"X\"\nDifference between case A and B: URL in case B is one byte longer than case A.\nLength of URL is 18 bytes or 19 bytes.\nURL in message body is also placed in Subject: for ease of observation.\n\n[Test Result]\n                                        Body Search result for:\n Subject                                FINDSTRING  SEARCHTEXT  http  x.y.z\n test-1A base64, URL=http://x.y.z/?p=a      O           O         O     O\n test-1B base64, URL=http://x.y.z/?p=ab     X           X         X     X\n test-2A base64, URL=http://x.y.z?p=ab      X           X         X     X\n test-2B base64, URL=http://x.y.z?p=abc     X           X         X     X\n test-3A base64, URL=http://x.y.z?pXab      O           O         O     O\n test-3B base64, URL=http://x.y.z?pXabc     O           O         O     O\nNote: If URL=http://x.y.z#abcde, this bug's problem couldn't be observed.\n\nBecause of crafted mail and no CRLF/LF/CR in base64 encoded message body data, different problem from this bug may be involved in avobe test reslt.", "count": 8, "creator": "m-wada@usa.com", "tags": [], "attachment_id": 571577, "raw_text": "All mails has message body of next format, and is base64 encoded.\n {FINDSTRING} http://x.y.z<depends_on_test_case> [SEARCHTEXT]\n(No CRLF/LF/CR to force Tb to send in base64 when text file is attached)\nDifference among case-1/2/3\n  case-1 : URL ends with /?p=...\n  case-2 : \"/\" before \"?\" is removed from case-1, and one byte is added\n  case-3 : \"=\" in case-2 is replaced by \"X\"\nDifference between case A and B: URL in case B is one byte longer than case A.\nLength of URL is 18 bytes or 19 bytes.\nURL in message body is also placed in Subject: for ease of observation.\n\n[Test Result]\n                                        Body Search result for:\n Subject                                FINDSTRING  SEARCHTEXT  http  x.y.z\n test-1A base64, URL=http://x.y.z/?p=a      O           O         O     O\n test-1B base64, URL=http://x.y.z/?p=ab     X           X         X     X\n test-2A base64, URL=http://x.y.z?p=ab      X           X         X     X\n test-2B base64, URL=http://x.y.z?p=abc     X           X         X     X\n test-3A base64, URL=http://x.y.z?pXab      O           O         O     O\n test-3B base64, URL=http://x.y.z?pXabc     O           O         O     O\nNote: If URL=http://x.y.z#abcde, this bug's problem couldn't be observed.\n\nBecause of crafted mail and no CRLF/LF/CR in base64 encoded message body data, different problem from this bug may be involved in avobe test reslt.", "time": "2011-11-03T09:00:55Z"}, {"creator": "m-wada@usa.com", "is_private": false, "creation_time": "2011-11-07T23:33:42Z", "attachment_id": 572646, "tags": [], "author": "m-wada@usa.com", "count": 9, "text": "Created attachment 572646\nTest mail to see base64 encode is irrlevant, only format of url is relevant\n\n\"Nothing is found\" occurs even when message body is plain text, is not base64 encoded.\nTest mails are \"Content-Transfer-Encoding: 8bits, with plain text data\" cases for \"not found with base64 data\" cases in previous test.\n\n[Test Result]\n                                           Body Search result for:\n Subject                                   FINDSTRING  SEARCHTEXT  http  x.y.z\n test-1Btext 8bits, URL=http://x.y.z/?p=ab     X           X         X     X\n test-2Atext 8bits, URL=http://x.y.z?p=ab      X           X         X     X\n test-2Btext 8bits, URL=http://x.y.z?p=abc     X           X         X     X\n\nNext in my comment #8 was above.\n> (B-2) \"Filter These Messages\" in Quick Filter Bar, Body, When 8bits(not encoded)\n>   (ii) URL string, any substring of URL string => no match\n\nRemoving base64 from bug summary.\n\nFYI.\nBug 132340 for \"problem in search of base64 encoded message body\" is resolved in 2009.", "bug_id": 667854, "id": 5832524, "time": "2011-11-07T23:33:42Z", "raw_text": "\"Nothing is found\" occurs even when message body is plain text, is not base64 encoded.\nTest mails are \"Content-Transfer-Encoding: 8bits, with plain text data\" cases for \"not found with base64 data\" cases in previous test.\n\n[Test Result]\n                                           Body Search result for:\n Subject                                   FINDSTRING  SEARCHTEXT  http  x.y.z\n test-1Btext 8bits, URL=http://x.y.z/?p=ab     X           X         X     X\n test-2Atext 8bits, URL=http://x.y.z?p=ab      X           X         X     X\n test-2Btext 8bits, URL=http://x.y.z?p=abc     X           X         X     X\n\nNext in my comment #8 was above.\n> (B-2) \"Filter These Messages\" in Quick Filter Bar, Body, When 8bits(not encoded)\n>   (ii) URL string, any substring of URL string => no match\n\nRemoving base64 from bug summary.\n\nFYI.\nBug 132340 for \"problem in search of base64 encoded message body\" is resolved in 2009."}, {"tags": [], "time": "2011-11-07T23:46:21Z", "attachment_id": null, "raw_text": "This bug may be cause of many hard-to-analyze reports of \"false negative in local body search\".", "bug_id": 667854, "id": 5832559, "is_private": false, "creation_time": "2011-11-07T23:46:21Z", "creator": "m-wada@usa.com", "author": "m-wada@usa.com", "count": 10, "text": "This bug may be cause of many hard-to-analyze reports of \"false negative in local body search\"."}, {"count": 11, "text": "Created attachment 573430\nTest mails to see this bug ioccurs when string of \"= followed by two hexa decimal digits\" exists, which is perhaps two digits higher than \"80\"\n\n(1) Words/terms placed in same line as term of \"=..\"\n    base64 or plain text is irrelevant.\n  Quoted-printable like string                  Problem occurs or not\n  (\"=\" followed by two hexa decimal digits)     \n    =ab, =89                                      Problem occurs\n    =79, =ag, =ax, =az, =8x                       Problem doesn't occur\n  It looks problem occurs only when string larger than or equals to =80.\n(2) Words/terms placed in different line.\n(2-1) Plain text mail(8bits) : Words/terms in different line is not affected.\n                               Body search can find them. No problem.\n(2-2) base64 encoded         : Terms in different lines is affected.\n                               Body search can not find them.\n                               (original case of this bug)\n(2-3) quoted-printable       : Problem won't occur even when in same line,\n                               bug 481616 always occurs though.\nSo, if URL of original case is changed to \"...randomparam1=2g...randomparam2=fg..., problem disappears.\n\nProblem looks relevant to quoted-printable like string only.\nURL or not, search keyword or not, were irrelevant. It's merely that URL can have Keyword=Value format string in it and Value part can frequently start with two hexa decimal digits when URL like Google's search.\n\nAnd, base64 or not was relevant to problem.\nWhen mail is not base64 encoded, problem occurs only on words/terms which is placed in same line. Problem doesn't occur on words/term in different lines.\nIf mail is base64 encoded, problem occurs even when words/terms are placed in different line from quoted-printable like string. Body Search can not find them.\n\nIf plain text, each line is read from folder, so it's split to multiple lines by read/write operation. However, if base64, it's obtained from buffer for decoded data. Line-break handling of search in such case is probably not appropriate.", "author": "m-wada@usa.com", "creator": "m-wada@usa.com", "creation_time": "2011-11-10T07:15:31Z", "is_private": false, "id": 5839387, "bug_id": 667854, "raw_text": "(1) Words/terms placed in same line as term of \"=..\"\n    base64 or plain text is irrelevant.\n  Quoted-printable like string                  Problem occurs or not\n  (\"=\" followed by two hexa decimal digits)     \n    =ab, =89                                      Problem occurs\n    =79, =ag, =ax, =az, =8x                       Problem doesn't occur\n  It looks problem occurs only when string larger than or equals to =80.\n(2) Words/terms placed in different line.\n(2-1) Plain text mail(8bits) : Words/terms in different line is not affected.\n                               Body search can find them. No problem.\n(2-2) base64 encoded         : Terms in different lines is affected.\n                               Body search can not find them.\n                               (original case of this bug)\n(2-3) quoted-printable       : Problem won't occur even when in same line,\n                               bug 481616 always occurs though.\nSo, if URL of original case is changed to \"...randomparam1=2g...randomparam2=fg..., problem disappears.\n\nProblem looks relevant to quoted-printable like string only.\nURL or not, search keyword or not, were irrelevant. It's merely that URL can have Keyword=Value format string in it and Value part can frequently start with two hexa decimal digits when URL like Google's search.\n\nAnd, base64 or not was relevant to problem.\nWhen mail is not base64 encoded, problem occurs only on words/terms which is placed in same line. Problem doesn't occur on words/term in different lines.\nIf mail is base64 encoded, problem occurs even when words/terms are placed in different line from quoted-printable like string. Body Search can not find them.\n\nIf plain text, each line is read from folder, so it's split to multiple lines by read/write operation. However, if base64, it's obtained from buffer for decoded data. Line-break handling of search in such case is probably not appropriate.", "attachment_id": 573430, "time": "2011-11-10T07:15:31Z", "tags": []}, {"id": 5840364, "bug_id": 667854, "is_private": false, "creation_time": "2011-11-10T17:25:38Z", "creator": "m-wada@usa.com", "text": "Problem summary.\nWhen message body contains quoted-printable encode like string(\"=\" followed by two hexa decimal digits for special character or characters higher than 0x80),\n(i)  when plain text, any string in same line is not found by Body Search.\n(ii) when base64 encoded, any string in any line is not found by Body Search.", "count": 12, "author": "m-wada@usa.com", "tags": [], "time": "2011-11-10T17:25:38Z", "raw_text": "Problem summary.\nWhen message body contains quoted-printable encode like string(\"=\" followed by two hexa decimal digits for special character or characters higher than 0x80),\n(i)  when plain text, any string in same line is not found by Body Search.\n(ii) when base64 encoded, any string in any line is not found by Body Search.", "attachment_id": null}, {"bug_id": 667854, "id": 5959109, "count": 13, "text": "this fails both quick filter and search messages?", "author": "vseerror@lehigh.edu", "raw_text": "this fails both quick filter and search messages?", "time": "2012-01-06T00:14:45Z", "creation_time": "2012-01-06T00:14:45Z", "is_private": false, "creator": "vseerror@lehigh.edu", "tags": [], "attachment_id": null}, {"time": "2014-01-02T23:45:10Z", "raw_text": "I can confirm that this problem exists for both quick filter and search messages in TB 24.2.0", "author": "tbbugs@myarcher.net", "count": 14, "text": "I can confirm that this problem exists for both quick filter and search messages in TB 24.2.0", "id": 8249599, "bug_id": 667854, "attachment_id": null, "tags": [], "creator": "tbbugs@myarcher.net", "creation_time": "2014-01-02T23:45:10Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "office@presenta.net", "is_private": false, "creation_time": "2014-06-02T12:09:04Z", "raw_text": "This bug still exists in Thunderbird 24.5.0. To reproduce it you can create a new message with the following body:\n\nField=ABCDEF\n\nSend the message and select Quick filter (Ctrl+Shift+K) of the Sent folder. Filter by the word \"ABCDEF\" (without quotes), no results appear. When you search for \"=ABCDEF\" or \"CDE\" (without quotes) the message appears. \n\nHere is a complete message that reproduces the problem:\n-------------------\n\nFrom - Mon Jun 02 14:51:25 2014\nReturn-Path: <xxx@xxx.xxx>\nDelivered-To: xxx@xxx.xxx\nMessage-ID: <538C651E.5060108@xxx.xxx>\nDate: Mon, 02 Jun 2014 14:50:54 +0300\nFrom: <xxx@xxx.xxx>\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.5.0\nMIME-Version: 1.0\nTo: xxx@xxx.xxx\nSubject: Probe\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\nContent-Transfer-Encoding: 7bit\n\nField=ABCDEF", "time": "2014-06-02T12:09:04Z", "author": "office@presenta.net", "count": 15, "text": "This bug still exists in Thunderbird 24.5.0. To reproduce it you can create a new message with the following body:\n\nField=ABCDEF\n\nSend the message and select Quick filter (Ctrl+Shift+K) of the Sent folder. Filter by the word \"ABCDEF\" (without quotes), no results appear. When you search for \"=ABCDEF\" or \"CDE\" (without quotes) the message appears. \n\nHere is a complete message that reproduces the problem:\n-------------------\n\nFrom - Mon Jun 02 14:51:25 2014\nReturn-Path: <xxx@xxx.xxx>\nDelivered-To: xxx@xxx.xxx\nMessage-ID: <538C651E.5060108@xxx.xxx>\nDate: Mon, 02 Jun 2014 14:50:54 +0300\nFrom: <xxx@xxx.xxx>\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.5.0\nMIME-Version: 1.0\nTo: xxx@xxx.xxx\nSubject: Probe\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\nContent-Transfer-Encoding: 7bit\n\nField=ABCDEF", "id": 8870092, "bug_id": 667854}, {"time": "2014-12-05T08:51:30Z", "raw_text": "FYI.\nBody Search.\n> http://mxr.mozilla.org/comm-central/source/mailnews/base/search/src/nsMsgLocalSearch.cpp#491\n> http://mxr.mozilla.org/comm-central/source/mailnews/db/msgdb/src/nsMsgHdr.cpp#539\n> http://mxr.mozilla.org/comm-central/source/mailnews/base/search/src/nsMsgSearchTerm.cpp#913\n>   nsMsgSearchTerm::MatchBody (nsIMsgSearchScopeTerm *scope, uint64_t offset, uint32_t length /*in lines*/, const char *folderCharset,\n>                                                       nsIMsgDBHdr *msg, nsIMsgDatabase* db, bool *pResult)\n> \n> http://mxr.mozilla.org/comm-central/source/mailnews/base/search/src/nsMsgSearchTerm.cpp#942\n> 942   // If there's a '=' in the search term, then we're not going to do\n> 943   // quoted printable decoding. Otherwise we assume everything is\n> 944   // quoted printable. Obviously everything isn't quoted printable, but\n> 945   // since we don't have a MIME parser handy, and we want to err on the\n> 946   // side of too many hits rather than not enough, we'll assume in that\n> 947   // general direction. Blech. ### FIX ME\n> 948   // bug fix #314637: for stateful charsets like ISO-2022-JP, we don't\n> 949   // want to decode quoted printable since it contains '='.", "bug_id": 667854, "id": 9663029, "text": "FYI.\nBody Search.\n> http://mxr.mozilla.org/comm-central/source/mailnews/base/search/src/nsMsgLocalSearch.cpp#491\n> http://mxr.mozilla.org/comm-central/source/mailnews/db/msgdb/src/nsMsgHdr.cpp#539\n> http://mxr.mozilla.org/comm-central/source/mailnews/base/search/src/nsMsgSearchTerm.cpp#913\n>   nsMsgSearchTerm::MatchBody (nsIMsgSearchScopeTerm *scope, uint64_t offset, uint32_t length /*in lines*/, const char *folderCharset,\n>                                                       nsIMsgDBHdr *msg, nsIMsgDatabase* db, bool *pResult)\n> \n> http://mxr.mozilla.org/comm-central/source/mailnews/base/search/src/nsMsgSearchTerm.cpp#942\n> 942   // If there's a '=' in the search term, then we're not going to do\n> 943   // quoted printable decoding. Otherwise we assume everything is\n> 944   // quoted printable. Obviously everything isn't quoted printable, but\n> 945   // since we don't have a MIME parser handy, and we want to err on the\n> 946   // side of too many hits rather than not enough, we'll assume in that\n> 947   // general direction. Blech. ### FIX ME\n> 948   // bug fix #314637: for stateful charsets like ISO-2022-JP, we don't\n> 949   // want to decode quoted printable since it contains '='.", "count": 16, "author": "m-wada@usa.com", "tags": [], "attachment_id": null, "creation_time": "2014-12-05T08:51:30Z", "is_private": false, "creator": "m-wada@usa.com"}, {"tags": [], "time": "2016-06-25T02:15:25Z", "attachment_id": null, "raw_text": "Ticket 1101474 is probably a duplicate of this one.\nPlease retitle to something like \"Some mails with a body containing an equal sign (\"=\") not matched (false negatives/positives) in some local body searches\". Mentioning \"quick\" somewhere may also help.", "id": 11501850, "bug_id": 667854, "is_private": false, "creation_time": "2016-06-25T02:15:25Z", "creator": "chealer@gmail.com", "author": "chealer@gmail.com", "text": "Ticket 1101474 is probably a duplicate of this one.\nPlease retitle to something like \"Some mails with a body containing an equal sign (\"=\") not matched (false negatives/positives) in some local body searches\". Mentioning \"quick\" somewhere may also help.", "count": 17}, {"creator": "arai.unmht@gmail.com", "is_private": false, "creation_time": "2016-06-25T15:18:12Z", "attachment_id": null, "tags": [], "text": "Changing the summary, as suggested in IRC.", "count": 18, "author": "arai.unmht@gmail.com", "id": 11502149, "bug_id": 667854, "time": "2016-06-25T15:18:12Z", "raw_text": "Changing the summary, as suggested in IRC."}, {"time": "2018-12-19T04:46:28Z", "attachment_id": null, "raw_text": "FYI: There is a workaround addon for this bug.\n\nSearch Body in Quoted Printable\nhttps://addons.thunderbird.net/thunderbird/addon/search-body-in-quoted-printabl/", "tags": [], "creator": "yuki@clear-code.com", "author": "yuki@clear-code.com", "text": "FYI: There is a workaround addon for this bug.\n\nSearch Body in Quoted Printable\nhttps://addons.thunderbird.net/thunderbird/addon/search-body-in-quoted-printabl/", "count": 19, "id": 13822270, "bug_id": 667854, "creation_time": "2018-12-19T04:46:28Z", "is_private": false}]}}, "comments": {}}