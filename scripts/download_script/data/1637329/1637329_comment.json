{"bugs": {"1637329": {"comments": [{"is_private": false, "text": "In order to minimize user-facing site bustage when Strict Tracking Protection is enabled, we would like to have the ability to \"shim\" certain resources or popular SDKs (for logins, etc).", "creation_time": "2020-05-12T16:45:51Z", "time": "2020-05-12T16:45:51Z", "raw_text": "In order to minimize user-facing site bustage when Strict Tracking Protection is enabled, we would like to have the ability to \"shim\" certain resources or popular SDKs (for logins, etc).", "count": 0, "id": 14814621, "bug_id": 1637329, "tags": [], "author": "miketaylr@gmail.com", "attachment_id": null, "creator": "miketaylr@gmail.com"}, {"count": 1, "raw_text": "", "time": "2020-06-01T23:37:47Z", "is_private": false, "creator": "twisniewski@mozilla.com", "bug_id": 1637329, "id": 14857003, "text": "Created attachment 9153271\nBug 1637329 - add support for shimming resources blocking by tracking protection to webcompat built-in addon; r?dimi!,robwu!", "creation_time": "2020-06-01T23:37:47Z", "attachment_id": 9153271, "author": "twisniewski@mozilla.com", "tags": []}, {"attachment_id": null, "author": "pulsebot@bots.tld", "tags": [], "creation_time": "2020-07-18T12:04:02Z", "text": "Pushed by twisniewski@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/b0b40eebd9ab\nadd support for shimming resources blocking by tracking protection to webcompat built-in addon; r=dimi,robwu,webcompat-reviewers,denschub,miketaylr", "creator": "pulsebot@bots.tld", "bug_id": 1637329, "id": 14944031, "count": 2, "raw_text": "Pushed by twisniewski@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/b0b40eebd9ab\nadd support for shimming resources blocking by tracking protection to webcompat built-in addon; r=dimi,robwu,webcompat-reviewers,denschub,miketaylr", "time": "2020-07-18T12:04:02Z", "is_private": false}, {"tags": [], "author": "rmaries@mozilla.com", "attachment_id": null, "creator": "rmaries@mozilla.com", "id": 14944278, "bug_id": 1637329, "count": 3, "is_private": false, "creation_time": "2020-07-19T05:17:19Z", "text": "Backed out for perma failures.\n\nPush with failure: https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&searchStr=os%2Cx%2C10.14%2Cdebug%2Cmochitests%2Cwithout%2Ce10s%2Ctest-macosx1014-64%2Fdebug-mochitest-chrome-1proc%2Cc2&revision=b0b40eebd9abf2748f85d7c700a2ced36035b14a&selectedTaskRun=Q6NCqvZLTaaJT8MWuiiftg.0\n\nLog: https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=310283998&repo=autoland&lineNumber=1564\n\nBackout: https://hg.mozilla.org/integration/autoland/rev/debc5d3ec218285df7e724af197646a7935cafb2", "time": "2020-07-19T05:17:19Z", "raw_text": "Backed out for perma failures.\n\nPush with failure: https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&searchStr=os%2Cx%2C10.14%2Cdebug%2Cmochitests%2Cwithout%2Ce10s%2Ctest-macosx1014-64%2Fdebug-mochitest-chrome-1proc%2Cc2&revision=b0b40eebd9abf2748f85d7c700a2ced36035b14a&selectedTaskRun=Q6NCqvZLTaaJT8MWuiiftg.0\n\nLog: https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=310283998&repo=autoland&lineNumber=1564\n\nBackout: https://hg.mozilla.org/integration/autoland/rev/debc5d3ec218285df7e724af197646a7935cafb2"}, {"author": "twisniewski@mozilla.com", "tags": [], "creator": "twisniewski@mozilla.com", "attachment_id": null, "id": 14944425, "bug_id": 1637329, "count": 4, "is_private": false, "raw_text": "robwu, jwatt, I have literally no idea what is going on with the permafailure shown in comment 3 here. Any ideas? I was hoping to land this before I went on PTO (because of the soft-freeze while I'm away), but I would rather not just blindly disable the shims this patch adds when e10s is off, without knowing what the error actually is. Why would this test get even worse with my patch, and does it indicate a deeper problem we might need to address? (I see the test was already disabled on Windows recently, so I have to wonder). Or if it's somehow deemed alright to land my patch and just disable that test for now, would either of you mind doing that? (I'll be away from my office in a few hours).", "time": "2020-07-19T14:31:18Z", "text": "robwu, jwatt, I have literally no idea what is going on with the permafailure shown in comment 3 here. Any ideas? I was hoping to land this before I went on PTO (because of the soft-freeze while I'm away), but I would rather not just blindly disable the shims this patch adds when e10s is off, without knowing what the error actually is. Why would this test get even worse with my patch, and does it indicate a deeper problem we might need to address? (I see the test was already disabled on Windows recently, so I have to wonder). Or if it's somehow deemed alright to land my patch and just disable that test for now, would either of you mind doing that? (I'll be away from my office in a few hours).", "creation_time": "2020-07-19T14:31:18Z"}, {"count": 5, "time": "2020-07-19T16:49:47Z", "creation_time": "2020-07-19T16:49:47Z", "text": "The stack of the crash from comment 3 points to the Localization destructor, and I don't see an obvious relation between your patch and that. I don't even see retriggers, so I don't know why it is classified as a permafail. I clicked on \"Retrigger job\" to retrigger the job, and the test passes, so it is clearly not a permafail: https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&selectedTaskRun=Ft6WVGk-S5qP4d6j0Hk_qA.0&revision=b0b40eebd9abf2748f85d7c700a2ced36035b14a&searchStr=os%2Cx%2C10.14%2Cdebug%2Cmochitests%2Cwithout%2Ce10s%2Ctest-macosx1014-64%2Fdebug-mochitest-chrome-1proc%2Cc2\n\nThe test is [already disabled on non-e10s Linux](https://searchfox.org/mozilla-central/rev/b2395478c6adf6e5b241be1610fb1d920ed995ed/browser/components/shell/test/chrome.ini#8) and soon Windows (bug 1583315)., so I think that the test is just unreliable. I suggest to try to reland it.\n\nFor posterity, the stack of the crash is:\n\n```\nINFO - GECKO(9300) | Assertion failure: !mNext (Must be unlinked), at /builds/worker/checkouts/gecko/js/xpconnect/src/xpcprivate.h:266\nINFO - GECKO(9300) | #01: nsXPCWrappedJS::~nsXPCWrappedJS() [js/xpconnect/src/XPCWrappedJS.cpp:430]\nINFO - GECKO(9300) | #02: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:271]\nINFO - GECKO(9300) | #03: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:286]\nINFO - GECKO(9300) | #04: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:146]\nINFO - GECKO(9300) | #05: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:136]\nINFO - GECKO(9300) | #06: SuspectAfterShutdown(void*, nsCycleCollectionParticipant*, nsCycleCollectingAutoRefCnt*, bool*) [xpcom/base/nsCycleCollector.cpp:3741]\nINFO - GECKO(9300) | #07: mozilla::intl::Localization::Release() [intl/l10n/Localization.cpp:44]\nINFO - GECKO(9300) | #08: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::SegmentImpl<509ul>::~SegmentImpl() [mfbt/SegmentedVector.h:76]\nINFO - GECKO(9300) | #09: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::PopLastN(unsigned int) [mfbt/SegmentedVector.h:247]\nINFO - GECKO(9300) | #10: mozilla::dom::DeferredFinalizerImpl<nsISupports>::DeferredFinalize(unsigned int, void*) [dom/bindings/BindingUtils.h:2731]\nINFO - GECKO(9300) | #11: mozilla::IncrementalFinalizeRunnable::ReleaseNow(bool) [xpcom/base/CycleCollectedJSRuntime.cpp:1553]\nINFO - GECKO(9300) | #12: mozilla::CycleCollectedJSRuntime::FinalizeDeferredThings(mozilla::CycleCollectedJSContext::DeferredFinalizeType) [xpcom/base/CycleCollectedJSRuntime.cpp:1627]\nINFO - GECKO(9300) | #13: mozilla::CycleCollectedJSRuntime::OnGC(JSContext*, JSGCStatus, JS::GCReason) [xpcom/base/CycleCollectedJSRuntime.cpp:1706]\nINFO - GECKO(9300) | #14: js::gc::GCRuntime::maybeCallGCCallback(JSGCStatus, JS::GCReason) [js/src/gc/GC.cpp:7033]\nINFO - GECKO(9300) | #15: js::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7124]\nINFO - GECKO(9300) | #16: js::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7347]\nINFO - GECKO(9300) | #17: js::gc::GCRuntime::gc(JSGCInvocationKind, JS::GCReason) [js/src/gc/GC.cpp:7423]\nINFO - GECKO(9300) | #18: JSRuntime::destroyRuntime() [js/src/vm/Runtime.cpp:290]\nINFO - GECKO(9300) | #19: js::DestroyContext(JSContext*) [js/src/vm/JSContext.cpp:214]\nINFO - GECKO(9300) | #20: mozilla::CycleCollectedJSContext::~CycleCollectedJSContext() [xpcom/base/CycleCollectedJSContext.cpp:109]\nINFO - GECKO(9300) | #21: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1063]\nINFO - GECKO(9300) | #22: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1027]\nINFO - GECKO(9300) | #23: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:128]\nINFO - GECKO(9300) | #24: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:97]\nINFO - GECKO(9300) | #25: nsXPConnect::ReleaseXPConnectSingleton() [js/xpconnect/src/nsXPConnect.cpp:164]\nINFO - GECKO(9300) | #26: nsComponentManagerImpl::Shutdown() [xpcom/components/nsComponentManager.cpp:933]\nINFO - GECKO(9300) | #27: mozilla::ShutdownXPCOM(nsIServiceManager*) [xpcom/build/XPCOMInit.cpp:737]\nINFO - GECKO(9300) | #28: ScopedXPCOMStartup::~ScopedXPCOMStartup() [toolkit/xre/nsAppRunner.cpp:1286]\nINFO - GECKO(9300) | #29: XREMain::XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4926]\nINFO - GECKO(9300) | #30: XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4963]\nINFO - GECKO(9300) | #31: main [/Users/cltbld/tasks/task_1595082452/build/application/Firefox NightlyDebug.app/Contents/MacOS/firefox + 0x1624]\nINFO - Not taking screenshot here: see the one that was previously logged\nINFO - TEST-UNEXPECTED-FAIL | browser/components/shell/test/test_headless_screenshot.html | Firefox process should exit with code 0 - got 1, expected +0\n```", "raw_text": "The stack of the crash from comment 3 points to the Localization destructor, and I don't see an obvious relation between your patch and that. I don't even see retriggers, so I don't know why it is classified as a permafail. I clicked on \"Retrigger job\" to retrigger the job, and the test passes, so it is clearly not a permafail: https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&selectedTaskRun=Ft6WVGk-S5qP4d6j0Hk_qA.0&revision=b0b40eebd9abf2748f85d7c700a2ced36035b14a&searchStr=os%2Cx%2C10.14%2Cdebug%2Cmochitests%2Cwithout%2Ce10s%2Ctest-macosx1014-64%2Fdebug-mochitest-chrome-1proc%2Cc2\n\nThe test is [already disabled on non-e10s Linux](https://searchfox.org/mozilla-central/rev/b2395478c6adf6e5b241be1610fb1d920ed995ed/browser/components/shell/test/chrome.ini#8) and soon Windows (bug 1583315)., so I think that the test is just unreliable. I suggest to try to reland it.\n\nFor posterity, the stack of the crash is:\n\n```\nINFO - GECKO(9300) | Assertion failure: !mNext (Must be unlinked), at /builds/worker/checkouts/gecko/js/xpconnect/src/xpcprivate.h:266\nINFO - GECKO(9300) | #01: nsXPCWrappedJS::~nsXPCWrappedJS() [js/xpconnect/src/XPCWrappedJS.cpp:430]\nINFO - GECKO(9300) | #02: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:271]\nINFO - GECKO(9300) | #03: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:286]\nINFO - GECKO(9300) | #04: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:146]\nINFO - GECKO(9300) | #05: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:136]\nINFO - GECKO(9300) | #06: SuspectAfterShutdown(void*, nsCycleCollectionParticipant*, nsCycleCollectingAutoRefCnt*, bool*) [xpcom/base/nsCycleCollector.cpp:3741]\nINFO - GECKO(9300) | #07: mozilla::intl::Localization::Release() [intl/l10n/Localization.cpp:44]\nINFO - GECKO(9300) | #08: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::SegmentImpl<509ul>::~SegmentImpl() [mfbt/SegmentedVector.h:76]\nINFO - GECKO(9300) | #09: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::PopLastN(unsigned int) [mfbt/SegmentedVector.h:247]\nINFO - GECKO(9300) | #10: mozilla::dom::DeferredFinalizerImpl<nsISupports>::DeferredFinalize(unsigned int, void*) [dom/bindings/BindingUtils.h:2731]\nINFO - GECKO(9300) | #11: mozilla::IncrementalFinalizeRunnable::ReleaseNow(bool) [xpcom/base/CycleCollectedJSRuntime.cpp:1553]\nINFO - GECKO(9300) | #12: mozilla::CycleCollectedJSRuntime::FinalizeDeferredThings(mozilla::CycleCollectedJSContext::DeferredFinalizeType) [xpcom/base/CycleCollectedJSRuntime.cpp:1627]\nINFO - GECKO(9300) | #13: mozilla::CycleCollectedJSRuntime::OnGC(JSContext*, JSGCStatus, JS::GCReason) [xpcom/base/CycleCollectedJSRuntime.cpp:1706]\nINFO - GECKO(9300) | #14: js::gc::GCRuntime::maybeCallGCCallback(JSGCStatus, JS::GCReason) [js/src/gc/GC.cpp:7033]\nINFO - GECKO(9300) | #15: js::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7124]\nINFO - GECKO(9300) | #16: js::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7347]\nINFO - GECKO(9300) | #17: js::gc::GCRuntime::gc(JSGCInvocationKind, JS::GCReason) [js/src/gc/GC.cpp:7423]\nINFO - GECKO(9300) | #18: JSRuntime::destroyRuntime() [js/src/vm/Runtime.cpp:290]\nINFO - GECKO(9300) | #19: js::DestroyContext(JSContext*) [js/src/vm/JSContext.cpp:214]\nINFO - GECKO(9300) | #20: mozilla::CycleCollectedJSContext::~CycleCollectedJSContext() [xpcom/base/CycleCollectedJSContext.cpp:109]\nINFO - GECKO(9300) | #21: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1063]\nINFO - GECKO(9300) | #22: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1027]\nINFO - GECKO(9300) | #23: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:128]\nINFO - GECKO(9300) | #24: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:97]\nINFO - GECKO(9300) | #25: nsXPConnect::ReleaseXPConnectSingleton() [js/xpconnect/src/nsXPConnect.cpp:164]\nINFO - GECKO(9300) | #26: nsComponentManagerImpl::Shutdown() [xpcom/components/nsComponentManager.cpp:933]\nINFO - GECKO(9300) | #27: mozilla::ShutdownXPCOM(nsIServiceManager*) [xpcom/build/XPCOMInit.cpp:737]\nINFO - GECKO(9300) | #28: ScopedXPCOMStartup::~ScopedXPCOMStartup() [toolkit/xre/nsAppRunner.cpp:1286]\nINFO - GECKO(9300) | #29: XREMain::XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4926]\nINFO - GECKO(9300) | #30: XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4963]\nINFO - GECKO(9300) | #31: main [/Users/cltbld/tasks/task_1595082452/build/application/Firefox NightlyDebug.app/Contents/MacOS/firefox + 0x1624]\nINFO - Not taking screenshot here: see the one that was previously logged\nINFO - TEST-UNEXPECTED-FAIL | browser/components/shell/test/test_headless_screenshot.html | Firefox process should exit with code 0 - got 1, expected +0\n```", "is_private": false, "attachment_id": null, "creator": "rob@robwu.nl", "tags": [], "author": "rob@robwu.nl", "bug_id": 1637329, "id": 14944460}, {"is_private": false, "creation_time": "2020-07-19T18:19:56Z", "time": "2020-07-19T18:19:56Z", "text": "Ok, I've queued it up for landing, hopefully it sticks this time. (Sorry otherwise!)", "raw_text": "Ok, I've queued it up for landing, hopefully it sticks this time. (Sorry otherwise!)", "count": 6, "id": 14944483, "bug_id": 1637329, "tags": [], "author": "twisniewski@mozilla.com", "attachment_id": null, "creator": "twisniewski@mozilla.com"}, {"count": 7, "time": "2020-07-19T18:38:46Z", "creation_time": "2020-07-19T18:38:46Z", "text": "Pushed by twisniewski@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/fc5242f4332d\nadd support for shimming resources blocking by tracking protection to webcompat built-in addon; r=dimi,robwu,webcompat-reviewers,denschub,miketaylr", "raw_text": "Pushed by twisniewski@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/fc5242f4332d\nadd support for shimming resources blocking by tracking protection to webcompat built-in addon; r=dimi,robwu,webcompat-reviewers,denschub,miketaylr", "is_private": false, "attachment_id": null, "creator": "pulsebot@bots.tld", "tags": [], "author": "pulsebot@bots.tld", "bug_id": 1637329, "id": 14944490}, {"author": "ncsoregi@mozilla.com", "tags": [], "attachment_id": null, "creation_time": "2020-07-20T00:29:27Z", "text": "Backed out for assertion failures on xpcprivate.h\n\n*backout:* https://hg.mozilla.org/integration/autoland/rev/015515bcba1f358432cad988600672d027fd125d\n\n*push:* https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&searchStr=os%2Cx%2C10.14%2Cdebug%2Cmochitests%2Cwithout%2Ce10s%2Ctest-macosx1014-64%2Fdebug-mochitest-chrome-1proc%2Cc2&revision=fc5242f4332df3d6abe1ea79c23b94f05b13c2e2&selectedTaskRun=SaBkEoTjQVGIcWO5c8qhFQ.0\n\n*failure log:* https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=310325896&repo=autoland&lineNumber=1390\n\n>[task 2020-07-19T23:55:29.208Z] 23:55:29     INFO - GECKO(1159) | Assertion failure: !mNext (Must be unlinked), at /builds/worker/checkouts/gecko/js/xpconnect/src/xpcprivate.h:266\n[task 2020-07-19T23:55:29.224Z] 23:55:29     INFO -  Initializing stack-fixing for the first stack frame, this may take a while...\n[task 2020-07-19T23:55:49.707Z] 23:55:49     INFO - GECKO(1159) | #01: nsXPCWrappedJS::~nsXPCWrappedJS() [js/xpconnect/src/XPCWrappedJS.cpp:430]\n[task 2020-07-19T23:55:49.708Z] 23:55:49     INFO - GECKO(1159) | #02: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:271]\n[task 2020-07-19T23:55:49.708Z] 23:55:49     INFO - GECKO(1159) | #03: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:286]\n[task 2020-07-19T23:55:49.709Z] 23:55:49     INFO - GECKO(1159) | #04: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:146]\n[task 2020-07-19T23:55:49.710Z] 23:55:49     INFO - GECKO(1159) | #05: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:136]\n[task 2020-07-19T23:55:49.710Z] 23:55:49     INFO - GECKO(1159) | #06: SuspectAfterShutdown(void*, nsCycleCollectionParticipant*, nsCycleCollectingAutoRefCnt*, bool*) [xpcom/base/nsCycleCollector.cpp:3741]\n[task 2020-07-19T23:55:49.710Z] 23:55:49     INFO - GECKO(1159) | #07: mozilla::intl::Localization::Release() [intl/l10n/Localization.cpp:44]\n[task 2020-07-19T23:55:49.711Z] 23:55:49     INFO - GECKO(1159) | #08: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::SegmentImpl<509ul>::~SegmentImpl() [mfbt/SegmentedVector.h:76]\n[task 2020-07-19T23:55:49.711Z] 23:55:49     INFO - GECKO(1159) | #09: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::PopLastN(unsigned int) [mfbt/SegmentedVector.h:247]\n[task 2020-07-19T23:55:49.715Z] 23:55:49     INFO - GECKO(1159) | #10: mozilla::dom::DeferredFinalizerImpl<nsISupports>::DeferredFinalize(unsigned int, void*) [dom/bindings/BindingUtils.h:2731]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #11: mozilla::IncrementalFinalizeRunnable::ReleaseNow(bool) [xpcom/base/CycleCollectedJSRuntime.cpp:1553]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #12: mozilla::CycleCollectedJSRuntime::FinalizeDeferredThings(mozilla::CycleCollectedJSContext::DeferredFinalizeType) [xpcom/base/CycleCollectedJSRuntime.cpp:1627]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #13: mozilla::CycleCollectedJSRuntime::OnGC(JSContext*, JSGCStatus, JS::GCReason) [xpcom/base/CycleCollectedJSRuntime.cpp:1706]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #14: js::gc::GCRuntime::maybeCallGCCallback(JSGCStatus, JS::GCReason) [js/src/gc/GC.cpp:7033]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #15: js::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7124]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #16: js::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7347]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #17: js::gc::GCRuntime::gc(JSGCInvocationKind, JS::GCReason) [js/src/gc/GC.cpp:7423]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #18: JSRuntime::destroyRuntime() [js/src/vm/Runtime.cpp:290]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #19: js::DestroyContext(JSContext*) [js/src/vm/JSContext.cpp:214]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #20: mozilla::CycleCollectedJSContext::~CycleCollectedJSContext() [xpcom/base/CycleCollectedJSContext.cpp:109]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #21: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1063]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #22: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1027]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #23: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:128]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #24: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:97]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #25: nsXPConnect::ReleaseXPConnectSingleton() [js/xpconnect/src/nsXPConnect.cpp:164]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #26: nsComponentManagerImpl::Shutdown() [xpcom/components/nsComponentManager.cpp:933]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #27: mozilla::ShutdownXPCOM(nsIServiceManager*) [xpcom/build/XPCOMInit.cpp:737]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #28: ScopedXPCOMStartup::~ScopedXPCOMStartup() [toolkit/xre/nsAppRunner.cpp:1286]\n[task 2020-07-19T23:55:49.721Z] 23:55:49     INFO - GECKO(1159) | #29: XREMain::XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4926]\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO - GECKO(1159) | #30: XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4963]\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO -  fix-stacks error: failed to read breakpad symbols dir `/Users/cltbld/tasks/task_1595202714/build/symbols/firefox` for `/Users/cltbld/tasks/task_1595202714/build/application/Firefox NightlyDebug.app/Contents/MacOS/firefox`\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO -  fix-stacks note:  this is expected and harmless for system libraries on debug automation runs\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO - GECKO(1159) | #31: main [/Users/cltbld/tasks/task_1595202714/build/application/Firefox NightlyDebug.app/Contents/MacOS/firefox + 0x1624]\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO - TEST-INFO | started process screencapture\n[task 2020-07-19T23:55:49.862Z] 23:55:49     INFO - TEST-INFO | screencapture: exit 0", "id": 14944620, "bug_id": 1637329, "creator": "ncsoregi@mozilla.com", "is_private": false, "raw_text": "Backed out for assertion failures on xpcprivate.h\n\n*backout:* https://hg.mozilla.org/integration/autoland/rev/015515bcba1f358432cad988600672d027fd125d\n\n*push:* https://treeherder.mozilla.org/#/jobs?repo=autoland&group_state=expanded&searchStr=os%2Cx%2C10.14%2Cdebug%2Cmochitests%2Cwithout%2Ce10s%2Ctest-macosx1014-64%2Fdebug-mochitest-chrome-1proc%2Cc2&revision=fc5242f4332df3d6abe1ea79c23b94f05b13c2e2&selectedTaskRun=SaBkEoTjQVGIcWO5c8qhFQ.0\n\n*failure log:* https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=310325896&repo=autoland&lineNumber=1390\n\n>[task 2020-07-19T23:55:29.208Z] 23:55:29     INFO - GECKO(1159) | Assertion failure: !mNext (Must be unlinked), at /builds/worker/checkouts/gecko/js/xpconnect/src/xpcprivate.h:266\n[task 2020-07-19T23:55:29.224Z] 23:55:29     INFO -  Initializing stack-fixing for the first stack frame, this may take a while...\n[task 2020-07-19T23:55:49.707Z] 23:55:49     INFO - GECKO(1159) | #01: nsXPCWrappedJS::~nsXPCWrappedJS() [js/xpconnect/src/XPCWrappedJS.cpp:430]\n[task 2020-07-19T23:55:49.708Z] 23:55:49     INFO - GECKO(1159) | #02: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:271]\n[task 2020-07-19T23:55:49.708Z] 23:55:49     INFO - GECKO(1159) | #03: nsXPCWrappedJS::Release() [js/xpconnect/src/XPCWrappedJS.cpp:286]\n[task 2020-07-19T23:55:49.709Z] 23:55:49     INFO - GECKO(1159) | #04: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:146]\n[task 2020-07-19T23:55:49.710Z] 23:55:49     INFO - GECKO(1159) | #05: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:136]\n[task 2020-07-19T23:55:49.710Z] 23:55:49     INFO - GECKO(1159) | #06: SuspectAfterShutdown(void*, nsCycleCollectionParticipant*, nsCycleCollectingAutoRefCnt*, bool*) [xpcom/base/nsCycleCollector.cpp:3741]\n[task 2020-07-19T23:55:49.710Z] 23:55:49     INFO - GECKO(1159) | #07: mozilla::intl::Localization::Release() [intl/l10n/Localization.cpp:44]\n[task 2020-07-19T23:55:49.711Z] 23:55:49     INFO - GECKO(1159) | #08: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::SegmentImpl<509ul>::~SegmentImpl() [mfbt/SegmentedVector.h:76]\n[task 2020-07-19T23:55:49.711Z] 23:55:49     INFO - GECKO(1159) | #09: mozilla::SegmentedVector<nsCOMPtr<nsISupports>, 4096ul, mozilla::MallocAllocPolicy>::PopLastN(unsigned int) [mfbt/SegmentedVector.h:247]\n[task 2020-07-19T23:55:49.715Z] 23:55:49     INFO - GECKO(1159) | #10: mozilla::dom::DeferredFinalizerImpl<nsISupports>::DeferredFinalize(unsigned int, void*) [dom/bindings/BindingUtils.h:2731]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #11: mozilla::IncrementalFinalizeRunnable::ReleaseNow(bool) [xpcom/base/CycleCollectedJSRuntime.cpp:1553]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #12: mozilla::CycleCollectedJSRuntime::FinalizeDeferredThings(mozilla::CycleCollectedJSContext::DeferredFinalizeType) [xpcom/base/CycleCollectedJSRuntime.cpp:1627]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #13: mozilla::CycleCollectedJSRuntime::OnGC(JSContext*, JSGCStatus, JS::GCReason) [xpcom/base/CycleCollectedJSRuntime.cpp:1706]\n[task 2020-07-19T23:55:49.716Z] 23:55:49     INFO - GECKO(1159) | #14: js::gc::GCRuntime::maybeCallGCCallback(JSGCStatus, JS::GCReason) [js/src/gc/GC.cpp:7033]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #15: js::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7124]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #16: js::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe<JSGCInvocationKind> const&, JS::GCReason) [js/src/gc/GC.cpp:7347]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #17: js::gc::GCRuntime::gc(JSGCInvocationKind, JS::GCReason) [js/src/gc/GC.cpp:7423]\n[task 2020-07-19T23:55:49.717Z] 23:55:49     INFO - GECKO(1159) | #18: JSRuntime::destroyRuntime() [js/src/vm/Runtime.cpp:290]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #19: js::DestroyContext(JSContext*) [js/src/vm/JSContext.cpp:214]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #20: mozilla::CycleCollectedJSContext::~CycleCollectedJSContext() [xpcom/base/CycleCollectedJSContext.cpp:109]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #21: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1063]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #22: XPCJSContext::~XPCJSContext() [js/xpconnect/src/XPCJSContext.cpp:1027]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #23: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:128]\n[task 2020-07-19T23:55:49.718Z] 23:55:49     INFO - GECKO(1159) | #24: nsXPConnect::~nsXPConnect() [js/xpconnect/src/nsXPConnect.cpp:97]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #25: nsXPConnect::ReleaseXPConnectSingleton() [js/xpconnect/src/nsXPConnect.cpp:164]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #26: nsComponentManagerImpl::Shutdown() [xpcom/components/nsComponentManager.cpp:933]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #27: mozilla::ShutdownXPCOM(nsIServiceManager*) [xpcom/build/XPCOMInit.cpp:737]\n[task 2020-07-19T23:55:49.719Z] 23:55:49     INFO - GECKO(1159) | #28: ScopedXPCOMStartup::~ScopedXPCOMStartup() [toolkit/xre/nsAppRunner.cpp:1286]\n[task 2020-07-19T23:55:49.721Z] 23:55:49     INFO - GECKO(1159) | #29: XREMain::XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4926]\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO - GECKO(1159) | #30: XRE_main(int, char**, mozilla::BootstrapConfig const&) [toolkit/xre/nsAppRunner.cpp:4963]\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO -  fix-stacks error: failed to read breakpad symbols dir `/Users/cltbld/tasks/task_1595202714/build/symbols/firefox` for `/Users/cltbld/tasks/task_1595202714/build/application/Firefox NightlyDebug.app/Contents/MacOS/firefox`\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO -  fix-stacks note:  this is expected and harmless for system libraries on debug automation runs\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO - GECKO(1159) | #31: main [/Users/cltbld/tasks/task_1595202714/build/application/Firefox NightlyDebug.app/Contents/MacOS/firefox + 0x1624]\n[task 2020-07-19T23:55:49.722Z] 23:55:49     INFO - TEST-INFO | started process screencapture\n[task 2020-07-19T23:55:49.862Z] 23:55:49     INFO - TEST-INFO | screencapture: exit 0", "time": "2020-07-20T00:29:27Z", "count": 8}, {"id": 14946458, "bug_id": 1637329, "author": "rob@robwu.nl", "tags": [], "creator": "rob@robwu.nl", "attachment_id": null, "is_private": false, "raw_text": "Do you know why the crash in `~Localization` is happening? See comment 5 for the formatted crash.\n\nThe crash happened at the first attempt to land, did not happen when I retriggered, and happened again on the second attempt to land the patch.", "creation_time": "2020-07-20T12:45:52Z", "text": "Do you know why the crash in `~Localization` is happening? See comment 5 for the formatted crash.\n\nThe crash happened at the first attempt to land, did not happen when I retriggered, and happened again on the second attempt to land the patch.", "time": "2020-07-20T12:45:52Z", "count": 9}, {"is_private": false, "raw_text": "I don't see a reason for that, but it's originated in `mozilla::DropJSObjects(this);` which we recently added in bug 1631593.  it may be that the recent changes to shutdown are flipping some shutdown race.\n\nOlli was reviewing the patch that added it, so maybe he'll have an idea how `DropJSObjects` gets called so late (should it just do nothing at this stage of the shutdown?)", "time": "2020-07-21T06:47:43Z", "creation_time": "2020-07-21T06:47:43Z", "text": "I don't see a reason for that, but it's originated in `mozilla::DropJSObjects(this);` which we recently added in bug 1631593.  it may be that the recent changes to shutdown are flipping some shutdown race.\n\nOlli was reviewing the patch that added it, so maybe he'll have an idea how `DropJSObjects` gets called so late (should it just do nothing at this stage of the shutdown?)", "count": 10, "id": 14948082, "bug_id": 1637329, "author": "zbraniecki@mozilla.com", "tags": [], "creator": "zbraniecki@mozilla.com", "attachment_id": null}, {"count": 11, "is_private": false, "raw_text": "Why would it be originated to mozilla::DropJSObjects(this);?\nThe crash happens when we implicitly release  Localization::mLocalization at the end of the destructor.", "creation_time": "2020-07-21T11:38:47Z", "time": "2020-07-21T11:38:47Z", "text": "Why would it be originated to mozilla::DropJSObjects(this);?\nThe crash happens when we implicitly release  Localization::mLocalization at the end of the destructor.", "author": "bugs@pettay.fi", "tags": [], "creator": "bugs@pettay.fi", "attachment_id": null, "id": 14948456, "bug_id": 1637329}, {"count": 12, "is_private": false, "time": "2020-07-21T17:23:27Z", "text": "There was a similar crash in Thunderbird, in bug 1629495, which got \"fixed\" by disabling some tests.\n\nBoth `browser/components/shell/test/test_headless_screenshot.html` and the failing Thunderbird tests ran without e10s.\nWould you be fine with disabling the test, relanding the patch (that has nothing to do with `Localization`) and debugging this in a follow-up bug?\nOr do you think that we can keep it disabled because non-e10s is not really supported any more?", "creation_time": "2020-07-21T17:23:27Z", "raw_text": "There was a similar crash in Thunderbird, in bug 1629495, which got \"fixed\" by disabling some tests.\n\nBoth `browser/components/shell/test/test_headless_screenshot.html` and the failing Thunderbird tests ran without e10s.\nWould you be fine with disabling the test, relanding the patch (that has nothing to do with `Localization`) and debugging this in a follow-up bug?\nOr do you think that we can keep it disabled because non-e10s is not really supported any more?", "tags": [], "author": "rob@robwu.nl", "attachment_id": null, "creator": "rob@robwu.nl", "id": 14949462, "bug_id": 1637329}, {"creator": "zbraniecki@mozilla.com", "id": 14949464, "bug_id": 1637329, "count": 13, "is_private": false, "time": "2020-07-21T17:24:00Z", "raw_text": "Ah, so `[task 2020-07-19T23:55:49.709Z] 23:55:49 INFO - GECKO(1159) | #04: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:146]` is not https://searchfox.org/mozilla-central/source/intl/l10n/Localization.cpp#145\n\nIt's the implicit release of `mLocalization` which happens after.\n\nWould it help to release it in `Destroy` which would then be covered by `NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN`?", "tags": [], "author": "zbraniecki@mozilla.com", "attachment_id": null, "creation_time": "2020-07-21T17:24:00Z", "text": "Ah, so `[task 2020-07-19T23:55:49.709Z] 23:55:49 INFO - GECKO(1159) | #04: mozilla::intl::Localization::~Localization() [intl/l10n/Localization.cpp:146]` is not https://searchfox.org/mozilla-central/source/intl/l10n/Localization.cpp#145\n\nIt's the implicit release of `mLocalization` which happens after.\n\nWould it help to release it in `Destroy` which would then be covered by `NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN`?"}, {"raw_text": "I don't think that will make a difference, as you're already running `NS_IMPL_CYCLE_COLLECTION_UNLINK(mLocalization)` there, which will null out `mLocalization` if the type is ever unlinked: https://searchfox.org/mozilla-central/rev/3b6958c26049c1e27b2790a43154caaba9f6dd4a/intl/l10n/Localization.cpp#24", "creation_time": "2020-07-21T18:15:33Z", "text": "I don't think that will make a difference, as you're already running `NS_IMPL_CYCLE_COLLECTION_UNLINK(mLocalization)` there, which will null out `mLocalization` if the type is ever unlinked: https://searchfox.org/mozilla-central/rev/3b6958c26049c1e27b2790a43154caaba9f6dd4a/intl/l10n/Localization.cpp#24", "time": "2020-07-21T18:15:33Z", "is_private": false, "count": 14, "bug_id": 1637329, "id": 14949564, "creator": "nika@thelayzells.com", "attachment_id": null, "author": "nika@thelayzells.com", "tags": []}, {"is_private": false, "raw_text": "A possible patch for the crash (just based on code inspection by Nika and me)\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=bf8158b6fbdd960e355dd159aa50d5fa9e6835cc\n\noops, I had something unrelated on that tree too. Oh well, that shouldn't affect to shutdown.", "text": "A possible patch for the crash (just based on code inspection by Nika and me)\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=bf8158b6fbdd960e355dd159aa50d5fa9e6835cc\n\noops, I had something unrelated on that tree too. Oh well, that shouldn't affect to shutdown.", "creation_time": "2020-07-21T23:19:39Z", "time": "2020-07-21T23:19:39Z", "count": 15, "id": 14950136, "bug_id": 1637329, "author": "bugs@pettay.fi", "tags": [], "creator": "bugs@pettay.fi", "attachment_id": null}, {"bug_id": 1637329, "id": 14954860, "attachment_id": null, "creator": "bugs@pettay.fi", "tags": [], "author": "bugs@pettay.fi", "text": "Rob, if you know how to reproduce the crash, even if just on tryserver, could you try this patch https://hg.mozilla.org/try/rev/8abbccf0d0572087f0daf1d58eb06a695d03459b", "time": "2020-07-24T13:54:53Z", "creation_time": "2020-07-24T13:54:53Z", "raw_text": "Rob, if you know how to reproduce the crash, even if just on tryserver, could you try this patch https://hg.mozilla.org/try/rev/8abbccf0d0572087f0daf1d58eb06a695d03459b", "is_private": false, "count": 16}, {"count": 17, "is_private": false, "raw_text": "Two attempts to landing it failed, but a retrigger succeeded, so I don't think that I am able to consistently reproduce.\n\nIf your patch doesn't cause issues (i.e. your try push with the patch in isolation was green), then I suggest to send your patch to Phabricator, let the patch stack here depend on your patch, and then land all patches together. If your patch fixes the issue, the patchset will stick. If it doesn't fix the issue, then this patch may eventually be backed out.", "text": "Two attempts to landing it failed, but a retrigger succeeded, so I don't think that I am able to consistently reproduce.\n\nIf your patch doesn't cause issues (i.e. your try push with the patch in isolation was green), then I suggest to send your patch to Phabricator, let the patch stack here depend on your patch, and then land all patches together. If your patch fixes the issue, the patchset will stick. If it doesn't fix the issue, then this patch may eventually be backed out.", "creation_time": "2020-07-24T13:59:06Z", "time": "2020-07-24T13:59:06Z", "author": "rob@robwu.nl", "tags": [], "creator": "rob@robwu.nl", "attachment_id": null, "id": 14954872, "bug_id": 1637329}, {"creator": "bugs@pettay.fi", "id": 14954928, "bug_id": 1637329, "count": 18, "is_private": false, "raw_text": "Does any of that need to happen before the merge? I'd rather land the patch after the merge.", "time": "2020-07-24T14:34:31Z", "author": "bugs@pettay.fi", "tags": [], "attachment_id": null, "creation_time": "2020-07-24T14:34:31Z", "text": "Does any of that need to happen before the merge? I'd rather land the patch after the merge."}, {"author": "rob@robwu.nl", "tags": [], "creator": "rob@robwu.nl", "attachment_id": null, "id": 14954965, "bug_id": 1637329, "count": 19, "is_private": false, "raw_text": "I think that :twisniewski would prefer to land this before the branch, but since it's a huge patch and we're investigating an unknown issue, I would recommend to wait after the branch instead. Then we have four more weeks to comfortably investigate issues in case things go south.", "creation_time": "2020-07-24T14:57:12Z", "time": "2020-07-24T14:57:12Z", "text": "I think that :twisniewski would prefer to land this before the branch, but since it's a huge patch and we're investigating an unknown issue, I would recommend to wait after the branch instead. Then we have four more weeks to comfortably investigate issues in case things go south."}, {"bug_id": 1637329, "id": 14955119, "creator": "twisniewski@mozilla.com", "raw_text": "Agreed. I would have preferred to land this before the branch, but if there is risk involved with this fix, then let's wait.", "time": "2020-07-24T16:25:33Z", "is_private": false, "count": 20, "attachment_id": null, "author": "twisniewski@mozilla.com", "tags": [], "text": "Agreed. I would have preferred to land this before the branch, but if there is risk involved with this fix, then let's wait.", "creation_time": "2020-07-24T16:25:33Z"}, {"count": 21, "creation_time": "2020-07-28T23:56:54Z", "time": "2020-07-28T23:56:54Z", "text": "Given that the patch in bug 1655778 has successfully landed, I'm going to try landing this patch again to confirm whether it fixes the test-failure (with the trivial rebasing required since I tried landing last time).", "raw_text": "Given that the patch in bug 1655778 has successfully landed, I'm going to try landing this patch again to confirm whether it fixes the test-failure (with the trivial rebasing required since I tried landing last time).", "is_private": false, "attachment_id": null, "creator": "twisniewski@mozilla.com", "tags": [], "author": "twisniewski@mozilla.com", "bug_id": 1637329, "id": 14961482}, {"is_private": false, "text": "Pushed by twisniewski@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/a7d72e255375\nadd support for shimming resources blocking by tracking protection to webcompat built-in addon; r=dimi,robwu,webcompat-reviewers,denschub,miketaylr", "creation_time": "2020-07-29T01:05:12Z", "time": "2020-07-29T01:05:12Z", "raw_text": "Pushed by twisniewski@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/a7d72e255375\nadd support for shimming resources blocking by tracking protection to webcompat built-in addon; r=dimi,robwu,webcompat-reviewers,denschub,miketaylr", "count": 22, "id": 14961532, "bug_id": 1637329, "tags": [], "author": "pulsebot@bots.tld", "attachment_id": null, "creator": "pulsebot@bots.tld"}, {"tags": ["bugherder"], "author": "aryx.bugmail@gmx-topmail.de", "attachment_id": null, "creator": "aryx.bugmail@gmx-topmail.de", "id": 14961889, "bug_id": 1637329, "count": 23, "is_private": false, "time": "2020-07-29T09:54:43Z", "text": "https://hg.mozilla.org/mozilla-central/rev/a7d72e255375", "creation_time": "2020-07-29T09:54:43Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/a7d72e255375"}, {"is_private": false, "raw_text": "https://github.com/uBlockOrigin/uBlock-issues/issues/1397\nhttps://xkema.github.io/outbox/ublock-bug-missing-gpt-methods/src/", "creation_time": "2020-12-13T20:31:50Z", "time": "2020-12-13T20:31:50Z", "text": "https://github.com/uBlockOrigin/uBlock-issues/issues/1397\nhttps://xkema.github.io/outbox/ublock-bug-missing-gpt-methods/src/", "count": 24, "id": 15171694, "bug_id": 1637329, "author": "krystian3w@interia.pl", "tags": [], "creator": "krystian3w@interia.pl", "attachment_id": null}]}}, "comments": {}}