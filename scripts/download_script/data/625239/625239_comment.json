{"bugs": {"625239": {"comments": [{"creation_time": "2011-01-13T00:43:10Z", "creator": "wtc@google.com", "time": "2011-01-13T00:43:10Z", "id": 5195326, "text": "The bug was first reported in bug 572289 comment 5.\n\nSEC_ASN1EncodeInteger doesn't encode negative values in the\nminimum number of octets.\n\nFor example, -129 should be encoded as the following value\noctets:\n    FF 7F\n\nBut SEC_ASN1EncodeInteger encodes -129 as the following value\noctects on a 32-bit system (where unsigned long is 32 bits):\n    FF FF FF 7F\n\nSimilarly, -128 should be\n    80\nbut is encoded as\n    FF FF FF 80\n\nThe test program mozilla/security/nss/cmd/tests/encodeinttest.c\nhas these two test cases, commented out right now.\n\nThis bug may not be serious in practice because the decoders\nin NSS (DER_GetInteger and SEC_ASN1DecodeInteger) can handle\nextra leading 0xFF octets properly, and we probably don't\nencode negative values often.  But it is intellectually\ninteresting.", "is_private": false, "bug_id": 625239, "attachment_id": null, "author": "wtc@google.com", "tags": [], "count": 0, "raw_text": "The bug was first reported in bug 572289 comment 5.\n\nSEC_ASN1EncodeInteger doesn't encode negative values in the\nminimum number of octets.\n\nFor example, -129 should be encoded as the following value\noctets:\n    FF 7F\n\nBut SEC_ASN1EncodeInteger encodes -129 as the following value\noctects on a 32-bit system (where unsigned long is 32 bits):\n    FF FF FF 7F\n\nSimilarly, -128 should be\n    80\nbut is encoded as\n    FF FF FF 80\n\nThe test program mozilla/security/nss/cmd/tests/encodeinttest.c\nhas these two test cases, commented out right now.\n\nThis bug may not be serious in practice because the decoders\nin NSS (DER_GetInteger and SEC_ASN1DecodeInteger) can handle\nextra leading 0xFF octets properly, and we probably don't\nencode negative values often.  But it is intellectually\ninteresting."}]}}, "comments": {}}