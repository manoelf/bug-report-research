{"bugs": {"626613": {"comments": [{"id": 5206996, "attachment_id": null, "creator": "maikstoeckmann@web.de", "bug_id": 626613, "is_private": false, "raw_text": "User-Agent:       Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\nBuild Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 GTB7.1 ( .NET CLR 3.5.30729)\n\nJavascript example - function that will be executed by user click:\n\nvar div = document.createElement(\"div\"); document.appendChild(div);\nvar img = document.createElement(\"img\"); div.appendChild(img);\nimg.opacity = 0.5;\nimg.onload = function(){div.backgroundColor = \"red\"};\nimg.src = \"example.png\";\n\nReproducible: Always\n\nSteps to Reproduce:\nsee 'details'\nActual Results:  \nimage's background is set to red immediately\n\nExpected Results:  \nThe expected behavior would be that image's background should is set to red when image loading has finished, in almost the same manner like the document.onload event. By the way, in InternetExplorer image.onload is fired correctly when image has been completely loaded.", "text": "User-Agent:       Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\nBuild Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 GTB7.1 ( .NET CLR 3.5.30729)\n\nJavascript example - function that will be executed by user click:\n\nvar div = document.createElement(\"div\"); document.appendChild(div);\nvar img = document.createElement(\"img\"); div.appendChild(img);\nimg.opacity = 0.5;\nimg.onload = function(){div.backgroundColor = \"red\"};\nimg.src = \"example.png\";\n\nReproducible: Always\n\nSteps to Reproduce:\nsee 'details'\nActual Results:  \nimage's background is set to red immediately\n\nExpected Results:  \nThe expected behavior would be that image's background should is set to red when image loading has finished, in almost the same manner like the document.onload event. By the way, in InternetExplorer image.onload is fired correctly when image has been completely loaded.", "tags": [], "time": "2011-01-18T12:06:05Z", "author": "maikstoeckmann@web.de", "creation_time": "2011-01-18T12:06:05Z", "count": 0}, {"author": "fmdevelopertim@gmail.com", "time": "2011-06-26T21:11:29Z", "count": 1, "creation_time": "2011-06-26T21:11:29Z", "tags": [], "raw_text": "Reporter -> Are you still experiencing this issue with the latest version of Firefox 5? Does the issue occur with the latest nightly? http://nightly.mozilla.org/", "is_private": false, "bug_id": 626613, "text": "Reporter -> Are you still experiencing this issue with the latest version of Firefox 5? Does the issue occur with the latest nightly? http://nightly.mozilla.org/", "attachment_id": null, "id": 5557441, "creator": "fmdevelopertim@gmail.com"}, {"author": "maikstoeckmann@web.de", "creation_time": "2011-06-27T07:10:32Z", "tags": [], "text": "Yes, this issue still occurs with the nightly build of 26-Jun-2011, and with the latest version of Firefox 5, too. You can test it here:\n\nhttp://hm.denkmalgis.de/\n\nIf you zoom into the map (by mouse wheel up), the image tile div's background is set to white by \"image onload\" event. On Firefox the background is set BEFORE the image is really loaded. On IE the background is set AFTER the image has been loaded. Once the image has been saved to cache, this issue disappears. So you have to clean up the cache to test it again.", "attachment_id": null, "creator": "maikstoeckmann@web.de", "time": "2011-06-27T07:10:32Z", "count": 2, "is_private": false, "bug_id": 626613, "raw_text": "Yes, this issue still occurs with the nightly build of 26-Jun-2011, and with the latest version of Firefox 5, too. You can test it here:\n\nhttp://hm.denkmalgis.de/\n\nIf you zoom into the map (by mouse wheel up), the image tile div's background is set to white by \"image onload\" event. On Firefox the background is set BEFORE the image is really loaded. On IE the background is set AFTER the image has been loaded. Once the image has been saved to cache, this issue disappears. So you have to clean up the cache to test it again.", "id": 5558131}, {"time": "2011-07-11T14:55:47Z", "author": "bertrand.gervais@archivideo.com", "creation_time": "2011-07-11T14:55:47Z", "count": 3, "tags": [], "is_private": false, "bug_id": 626613, "raw_text": "\nI confirm the issue still occurs in Firefox 5 and Firefox 6 beta. Firefox is the only browser that does not handle the image onload event properly.", "text": "\nI confirm the issue still occurs in Firefox 5 and Firefox 6 beta. Firefox is the only browser that does not handle the image onload event properly.", "id": 5584474, "attachment_id": null, "creator": "bertrand.gervais@archivideo.com"}, {"creator": "fmdevelopertim@gmail.com", "attachment_id": null, "id": 5585955, "text": "I see the issue on Mozilla/5.0 (Windows NT 5.1; rv:8.0a1) Gecko/20110711 Firefox/8.0a1 ID:20110711030829\n\nSee Bug 521894 - is this the same/related issue?", "raw_text": "I see the issue on Mozilla/5.0 (Windows NT 5.1; rv:8.0a1) Gecko/20110711 Firefox/8.0a1 ID:20110711030829\n\nSee Bug 521894 - is this the same/related issue?", "is_private": false, "bug_id": 626613, "tags": [], "count": 4, "creation_time": "2011-07-12T03:38:10Z", "author": "fmdevelopertim@gmail.com", "time": "2011-07-12T03:38:10Z"}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-07-12T03:56:39Z", "tags": [], "text": "Created attachment 545316\nTestcase with the code from comment 0, with some obvious typo fixes\n\nThis testcase does NOT show the problem for me.  The div turns red only after the image has finished loading.\n\nDo you see something different on this testcase, if not, can you attach a testcase that shows the problem you're seeing?  The site cited in comment 2 has a _lot_ of things going on, and it's not clear to me which parts are actually relevant to the issue at hand, so if you have anything smaller that shows the problem it would be very helpful.", "attachment_id": 545316, "creator": "bzbarsky@mit.edu", "time": "2011-07-12T03:56:39Z", "count": 5, "raw_text": "This testcase does NOT show the problem for me.  The div turns red only after the image has finished loading.\n\nDo you see something different on this testcase, if not, can you attach a testcase that shows the problem you're seeing?  The site cited in comment 2 has a _lot_ of things going on, and it's not clear to me which parts are actually relevant to the issue at hand, so if you have anything smaller that shows the problem it would be very helpful.", "is_private": false, "bug_id": 626613, "id": 5585972}, {"time": "2011-07-12T08:04:08Z", "author": "bertrand.gervais@archivideo.com", "creation_time": "2011-07-12T08:04:08Z", "count": 6, "tags": [], "is_private": false, "bug_id": 626613, "raw_text": "\nI agree your testcase clearly shows that the onload event is working for a single image.\nI have tried loading a bigger image, to have time to see it appear progressively, and it is true the onload event is fired when the image is totally displayed.\n\nAnyway, I still get this onload event problem on an application very similar to the one mentionned in comment 2. Is there a problem when the page contains many images ?\nTry to visualize the site in comment 2 on Firefox and Chrome. On Firefox, try zooming with the mouse wheel. You will experience \"white screens\" because lower levels images (lower resolution) are removed too soon (the onload event of higher level images is fired too soon). On Chrome, images are displayed all the time when zooming, because lower level images are removed only when higher level images are fully loaded.\n\nI will try to write a testcase showing the problem.", "text": "\nI agree your testcase clearly shows that the onload event is working for a single image.\nI have tried loading a bigger image, to have time to see it appear progressively, and it is true the onload event is fired when the image is totally displayed.\n\nAnyway, I still get this onload event problem on an application very similar to the one mentionned in comment 2. Is there a problem when the page contains many images ?\nTry to visualize the site in comment 2 on Firefox and Chrome. On Firefox, try zooming with the mouse wheel. You will experience \"white screens\" because lower levels images (lower resolution) are removed too soon (the onload event of higher level images is fired too soon). On Chrome, images are displayed all the time when zooming, because lower level images are removed only when higher level images are fully loaded.\n\nI will try to write a testcase showing the problem.", "id": 5586155, "attachment_id": null, "creator": "bertrand.gervais@archivideo.com"}, {"creation_time": "2011-07-12T12:52:37Z", "author": "bzbarsky@mit.edu", "tags": [], "text": "I do see the problem on the site from comment 2, yes.  It also has a huge amount of script that's difficult to make sense of without a huge time investment.\n\nIf you can create something smaller that shows the problem, that would be great.  Clearly there's a missing ingredient in my testcase, but I just can't tell what it is.", "creator": "bzbarsky@mit.edu", "attachment_id": null, "count": 7, "time": "2011-07-12T12:52:37Z", "bug_id": 626613, "is_private": false, "raw_text": "I do see the problem on the site from comment 2, yes.  It also has a huge amount of script that's difficult to make sense of without a huge time investment.\n\nIf you can create something smaller that shows the problem, that would be great.  Clearly there's a missing ingredient in my testcase, but I just can't tell what it is.", "id": 5586493}, {"tags": [], "time": "2011-08-27T21:44:54Z", "author": "fmdevelopertim@gmail.com", "creation_time": "2011-08-27T21:44:54Z", "count": 8, "id": 5682920, "attachment_id": null, "creator": "fmdevelopertim@gmail.com", "is_private": false, "bug_id": 626613, "raw_text": "Bertrand -> Any luck getting a reduce test case that exhibits the issue?", "text": "Bertrand -> Any luck getting a reduce test case that exhibits the issue?"}, {"is_private": false, "bug_id": 626613, "raw_text": "I think I have the same problem on a web aplpication under development.\nIt may currently be more easily visible in Aurora (if that's the same bug).\nTry the \"TestCase 2\" of the latest build (9.0a2 (2011-10-18))\n\nThe image appears very slowly but the onload event seems to trigger immediately.\nI'm not sure it meets specifications : In a web application, we need to be sure that all images are fully loaded and totaly displayed before running a fadeIn effect.\nBut I did not find any js/DOM event for that, except the onload event.", "text": "Created attachment 567999\nTestCase 2\n\nI think I have the same problem on a web aplpication under development.\nIt may currently be more easily visible in Aurora (if that's the same bug).\nTry the \"TestCase 2\" of the latest build (9.0a2 (2011-10-18))\n\nThe image appears very slowly but the onload event seems to trigger immediately.\nI'm not sure it meets specifications : In a web application, we need to be sure that all images are fully loaded and totaly displayed before running a fadeIn effect.\nBut I did not find any js/DOM event for that, except the onload event.", "id": 5791493, "attachment_id": 567999, "creator": "stephane.plazis@gmail.com", "time": "2011-10-19T10:38:12Z", "author": "stephane.plazis@gmail.com", "creation_time": "2011-10-19T10:38:12Z", "count": 9, "tags": []}, {"tags": [], "time": "2011-10-19T15:33:27Z", "author": "bzbarsky@mit.edu", "creation_time": "2011-10-19T15:33:27Z", "count": 10, "id": 5791964, "attachment_id": null, "creator": "bzbarsky@mit.edu", "bug_id": 626613, "is_private": false, "raw_text": "Stephane, you're seeing something else, I think, and it's specific to large jpegs.  In particular, image decode for that image is somewhat slow for some reason, and image decode does not block the image's onload.  Please file a separate bug on that?", "text": "Stephane, you're seeing something else, I think, and it's specific to large jpegs.  In particular, image decode for that image is somewhat slow for some reason, and image decode does not block the image's onload.  Please file a separate bug on that?"}, {"tags": [], "author": "moz@jeka.info", "creation_time": "2012-01-07T23:40:00Z", "attachment_id": null, "creator": "moz@jeka.info", "text": "Per bug 695859 comment 0 this should be fixed in Nightly 12", "time": "2012-01-07T23:40:00Z", "count": 11, "id": 5963304, "raw_text": "Per bug 695859 comment 0 this should be fixed in Nightly 12", "is_private": false, "bug_id": 626613}, {"id": 5967747, "attachment_id": null, "creator": "bzbarsky@mit.edu", "is_private": false, "bug_id": 626613, "raw_text": "Well, comment 10 should be.  The original bug report here, unclear....", "text": "Well, comment 10 should be.  The original bug report here, unclear....", "tags": [], "time": "2012-01-10T05:19:35Z", "author": "bzbarsky@mit.edu", "creation_time": "2012-01-10T05:19:35Z", "count": 12}, {"tags": [], "time": "2012-01-18T20:12:13Z", "author": "maikstoeckmann@web.de", "creation_time": "2012-01-18T20:12:13Z", "count": 13, "id": 5989826, "attachment_id": null, "creator": "maikstoeckmann@web.de", "is_private": false, "bug_id": 626613, "raw_text": "Sorry for the long delay, but I was completely over-worked for months. No, with Nightly 12.0a1 it's the same problem. But now I extracted the relevant line from the huge Javascript files to one simple test case, that you can open here:\n\nhttp://maps.kulturlandschaft-informatik.de/xxxtest/\n\nThere is a red div in the document body, and when the image.onload-event is fired, then it's color is set to green. As you see, the green color comes before the image data is loaded and displayed. I suppose, that it has to do with the fact, that the image es loaded from a dynamic source (PHP script)?", "text": "Sorry for the long delay, but I was completely over-worked for months. No, with Nightly 12.0a1 it's the same problem. But now I extracted the relevant line from the huge Javascript files to one simple test case, that you can open here:\n\nhttp://maps.kulturlandschaft-informatik.de/xxxtest/\n\nThere is a red div in the document body, and when the image.onload-event is fired, then it's color is set to green. As you see, the green color comes before the image data is loaded and displayed. I suppose, that it has to do with the fact, that the image es loaded from a dynamic source (PHP script)?"}, {"time": "2012-01-19T14:57:08Z", "author": "maikstoeckmann@web.de", "creation_time": "2012-01-19T14:57:08Z", "count": 14, "tags": [], "bug_id": 626613, "is_private": false, "raw_text": "In addition to my message from yesterday: I now have noticed, that the problem only appears under some circumstances. It seems to have something to do with the cache and how many images are stored. I can regularly reproduce the problem this way:\n\n1. Load http://maps.kulturlandschaft-informatik.de/xxxtest/ in the first tab\n2. Open another tab and load http://www.kleks-online.de/\n3. Go back to the first tab an click the Reload button (F5)\n\nAs of now, the problem occurs with every reload. But if I clean up the browser cache, the testcase runs properly again.", "text": "In addition to my message from yesterday: I now have noticed, that the problem only appears under some circumstances. It seems to have something to do with the cache and how many images are stored. I can regularly reproduce the problem this way:\n\n1. Load http://maps.kulturlandschaft-informatik.de/xxxtest/ in the first tab\n2. Open another tab and load http://www.kleks-online.de/\n3. Go back to the first tab an click the Reload button (F5)\n\nAs of now, the problem occurs with every reload. But if I clean up the browser cache, the testcase runs properly again.", "id": 5992059, "attachment_id": null, "creator": "maikstoeckmann@web.de"}, {"author": "oleksiyk@gmail.com", "creation_time": "2012-04-06T09:21:55Z", "tags": [], "text": "The same happens for me with Firefox 11 (Ubuntu Linux): onload event fires before image is completely loaded (rendered). In onload event handler all image properties are present and are correct (such as width, height, naturalWidth, complete=true, etc), so there is no way to 'catch' this situation.\n\nIt only happens with cached on disk images for which Firefox sends If-modified-since request (and receives back '304 not modified'). It doesn't happen on newly loaded images. \n\nIt looks like onload fires before image is fully read from disk cache.\n\np.s.\nThe test case by Maik St\u00f6ckmann does replicate this problem for me.", "attachment_id": null, "creator": "oleksiyk@gmail.com", "time": "2012-04-06T09:21:55Z", "count": 15, "bug_id": 626613, "is_private": false, "raw_text": "The same happens for me with Firefox 11 (Ubuntu Linux): onload event fires before image is completely loaded (rendered). In onload event handler all image properties are present and are correct (such as width, height, naturalWidth, complete=true, etc), so there is no way to 'catch' this situation.\n\nIt only happens with cached on disk images for which Firefox sends If-modified-since request (and receives back '304 not modified'). It doesn't happen on newly loaded images. \n\nIt looks like onload fires before image is fully read from disk cache.\n\np.s.\nThe test case by Maik St\u00f6ckmann does replicate this problem for me.", "id": 6203227}, {"tags": [], "author": "bzbarsky@mit.edu", "creation_time": "2012-04-06T20:21:52Z", "attachment_id": null, "creator": "bzbarsky@mit.edu", "text": "Oleksiy, that sounds like exactly what I described in comment 10.  And the fix for it should be in Firefox 12, per comment 11.  Are you seeing the issue in current 12 beta build?", "time": "2012-04-06T20:21:52Z", "count": 16, "id": 6204446, "is_private": false, "bug_id": 626613, "raw_text": "Oleksiy, that sounds like exactly what I described in comment 10.  And the fix for it should be in Firefox 12, per comment 11.  Are you seeing the issue in current 12 beta build?"}, {"tags": [], "author": "sombra2eternity@gmail.com", "time": "2012-09-04T13:01:37Z", "count": 17, "creation_time": "2012-09-04T13:01:37Z", "attachment_id": null, "id": 6607077, "creator": "sombra2eternity@gmail.com", "raw_text": "Hi, I'm on Firefox 15 recently installed over Ubuntu 12.04. I can confirm that the behavior described in comment #15 is still alive. Im working on a javascript function that loads dinamically an image and draw it to a canvas. If my server returns \"Not Modified - 304\" on the image headers the onload function is not fired. If I clean the cache and reload it works once.\n\nIts hard to make a downladable test case for this because it needs an apache server involved. Appending a \"?rnd=\"+Math.random()*10000 in the image.src acts as a workaround for now but Opera and Chrome shows correct behavior.", "is_private": false, "bug_id": 626613, "text": "Hi, I'm on Firefox 15 recently installed over Ubuntu 12.04. I can confirm that the behavior described in comment #15 is still alive. Im working on a javascript function that loads dinamically an image and draw it to a canvas. If my server returns \"Not Modified - 304\" on the image headers the onload function is not fired. If I clean the cache and reload it works once.\n\nIts hard to make a downladable test case for this because it needs an apache server involved. Appending a \"?rnd=\"+Math.random()*10000 in the image.src acts as a workaround for now but Opera and Chrome shows correct behavior."}, {"count": 18, "time": "2012-09-04T13:10:13Z", "raw_text": "sombra2eternity@gmail.com, there's no need for a downloadable testcase.  Just a link that actually reproduces the problem reliably would be great!", "bug_id": 626613, "is_private": false, "id": 6607087, "creation_time": "2012-09-04T13:10:13Z", "author": "bzbarsky@mit.edu", "tags": [], "text": "sombra2eternity@gmail.com, there's no need for a downloadable testcase.  Just a link that actually reproduces the problem reliably would be great!", "creator": "bzbarsky@mit.edu", "attachment_id": null}, {"tags": [], "author": "sombra2eternity@gmail.com", "creation_time": "2012-09-04T14:05:58Z", "attachment_id": 658067, "creator": "sombra2eternity@gmail.com", "text": "Created attachment 658067\nTest for javascript loading image when server returns 304\n\nI have seen that the code works ok when there is no CSS style using the same image for a border-image property. So I added a style for test.", "time": "2012-09-04T14:05:58Z", "count": 19, "id": 6607223, "bug_id": 626613, "is_private": false, "raw_text": "I have seen that the code works ok when there is no CSS style using the same image for a border-image property. So I added a style for test."}, {"creation_time": "2012-09-04T14:17:29Z", "count": 20, "time": "2012-09-04T14:17:29Z", "author": "sombra2eternity@gmail.com", "tags": [], "text": "(In reply to Boris Zbarsky (:bz) from comment #18)\n> sombra2eternity@gmail.com, there's no need for a downloadable testcase. \n> Just a link that actually reproduces the problem reliably would be great!\n\nI just created an attachment, if you can test it it works ok on chrome, but in firefox you only see the \"alert(1)\" once. If you change the src assignation for the commented line (the one with the random statement) you will find that it works always. If you need the server code for image loading I'll attach it too but its a fairly simple code that only checks the if-modified-sice header.\n\nThe problem here is that firefox in ver 15 send new headers (if-modified-since ...) that active some server features that was not activated in early versions. The firefox code against those features seems a bit untested. If you load several times the image via URL with tamper data opened you will see the 304 header too, but the image loads as expected, it only fails when loaded over javascript and get a 304.\n\nAnyway, I find that the code works right when no CSS border-image using the same image loaded is present. Too weird :/", "bug_id": 626613, "is_private": false, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #18)\n> sombra2eternity@gmail.com, there's no need for a downloadable testcase. \n> Just a link that actually reproduces the problem reliably would be great!\n\nI just created an attachment, if you can test it it works ok on chrome, but in firefox you only see the \"alert(1)\" once. If you change the src assignation for the commented line (the one with the random statement) you will find that it works always. If you need the server code for image loading I'll attach it too but its a fairly simple code that only checks the if-modified-sice header.\n\nThe problem here is that firefox in ver 15 send new headers (if-modified-since ...) that active some server features that was not activated in early versions. The firefox code against those features seems a bit untested. If you load several times the image via URL with tamper data opened you will see the 304 header too, but the image loads as expected, it only fails when loaded over javascript and get a 304.\n\nAnyway, I find that the code works right when no CSS border-image using the same image loaded is present. Too weird :/", "creator": "sombra2eternity@gmail.com", "id": 6607260, "attachment_id": null}, {"raw_text": "The point is that I've tried to reproduce this before with 304s and not been able to.  So your exact server setup is possibly relevant.  Is there a link that shows this happening against your server?\n\nThough actually, could you please file a separate bug on your issue?  You're saying you don't see an onload event at all, whereas this bug is about is firing too early in some cases...", "bug_id": 626613, "is_private": false, "text": "The point is that I've tried to reproduce this before with 304s and not been able to.  So your exact server setup is possibly relevant.  Is there a link that shows this happening against your server?\n\nThough actually, could you please file a separate bug on your issue?  You're saying you don't see an onload event at all, whereas this bug is about is firing too early in some cases...", "attachment_id": null, "id": 6607266, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "time": "2012-09-04T14:20:07Z", "count": 21, "creation_time": "2012-09-04T14:20:07Z", "tags": []}, {"creator": "sombra2eternity@gmail.com", "attachment_id": null, "id": 6607282, "text": "(In reply to Boris Zbarsky (:bz) from comment #21)\n> The point is that I've tried to reproduce this before with 304s and not been\n> able to.  So your exact server setup is possibly relevant.  Is there a link\n> that shows this happening against your server?\n> \n> Though actually, could you please file a separate bug on your issue?  You're\n> saying you don't see an onload event at all, whereas this bug is about is\n> firing too early in some cases...\n\nFair enought, I will open a new bug later for this, could you confirm that my attached test case works for you, its important the border-image point.", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #21)\n> The point is that I've tried to reproduce this before with 304s and not been\n> able to.  So your exact server setup is possibly relevant.  Is there a link\n> that shows this happening against your server?\n> \n> Though actually, could you please file a separate bug on your issue?  You're\n> saying you don't see an onload event at all, whereas this bug is about is\n> firing too early in some cases...\n\nFair enought, I will open a new bug later for this, could you confirm that my attached test case works for you, its important the border-image point.", "bug_id": 626613, "is_private": false, "tags": [], "count": 22, "creation_time": "2012-09-04T14:24:43Z", "author": "sombra2eternity@gmail.com", "time": "2012-09-04T14:24:43Z"}, {"time": "2016-06-06T21:28:49Z", "author": "ian@elliterate.com", "creation_time": "2016-06-06T21:28:49Z", "count": 23, "tags": [], "bug_id": 626613, "is_private": false, "raw_text": "I can confirm that this bug also/still exists in Firefox 46.0.1 on OS X 10.11.5.\n\nReproducible with the following HTML:\n\n    <html>\n      <head>\n        <script type=\"text/javascript\">\n          document.addEventListener(\"DOMContentLoaded\", function() {\n            var img = document.createElement(\"img\");\n\n            img.style = \"background-color: red;\";\n            img.onload = function() {\n              document.body.appendChild(img);\n            };\n\n            img.src = \"http://placekitten.com/5000/5000\";\n          });\n        </script>\n      </head>\n\n      <body></body>\n    </html>", "text": "I can confirm that this bug also/still exists in Firefox 46.0.1 on OS X 10.11.5.\n\nReproducible with the following HTML:\n\n    <html>\n      <head>\n        <script type=\"text/javascript\">\n          document.addEventListener(\"DOMContentLoaded\", function() {\n            var img = document.createElement(\"img\");\n\n            img.style = \"background-color: red;\";\n            img.onload = function() {\n              document.body.appendChild(img);\n            };\n\n            img.src = \"http://placekitten.com/5000/5000\";\n          });\n        </script>\n      </head>\n\n      <body></body>\n    </html>", "id": 11467308, "attachment_id": null, "creator": "ian@elliterate.com"}, {"id": 11467347, "attachment_id": null, "creator": "bzbarsky@mit.edu", "is_private": false, "bug_id": 626613, "raw_text": "What that testcase shows is comment 10.", "text": "What that testcase shows is comment 10.", "tags": [], "time": "2016-06-06T21:38:27Z", "author": "bzbarsky@mit.edu", "creation_time": "2016-06-06T21:38:27Z", "count": 24}, {"tags": [], "creation_time": "2016-06-06T21:39:54Z", "count": 25, "time": "2016-06-06T21:39:54Z", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "id": 11467353, "attachment_id": null, "text": "Seth, did we switch away from having onload blocked on decode?  Comments above suggest it was working in Firefox 12...", "is_private": false, "bug_id": 626613, "raw_text": "Seth, did we switch away from having onload blocked on decode?  Comments above suggest it was working in Firefox 12..."}, {"author": "seth.bugzilla@blackhail.net", "time": "2016-06-22T04:24:37Z", "count": 26, "creation_time": "2016-06-22T04:24:37Z", "tags": [], "raw_text": "(In reply to Boris Zbarsky [:bz] (Out June 25-July 6) from comment #25)\n> Seth, did we switch away from having onload blocked on decode?  Comments\n> above suggest it was working in Firefox 12...\n\nYes, we deliberately moved away from that in bug 1174923. Previously we sometimes blocked onload until the image finished decoding, and we sometimes didn't, depending on the situation. Now we never do, consistently. This improves page load performance since we can overlap image decoding with running the JS associated with the load event and the probable resulting layout flushes, style flushes, etc. The new behavior is consistent with the spec.\n\nThis is not a problem in the vast majority of cases because of predictive image decoding (which unfortunately we don't have for CSS images; it's on the todo list). However, we can't realistically predict anything about the situation where JS is loading an image that's not in the document, as in comment 23. We don't know at what size such an image will be drawn or whether it will ever be displayed at all.\n\nThe right solution in cases like comment 32, if the developer needs guarantees about this, is to either create an ImageBitmap rather than just an Image (that's ideal) or to draw the image to a canvas once it's loaded, forcing it to be decoded (suboptimal but will also work).", "bug_id": 626613, "is_private": false, "text": "(In reply to Boris Zbarsky [:bz] (Out June 25-July 6) from comment #25)\n> Seth, did we switch away from having onload blocked on decode?  Comments\n> above suggest it was working in Firefox 12...\n\nYes, we deliberately moved away from that in bug 1174923. Previously we sometimes blocked onload until the image finished decoding, and we sometimes didn't, depending on the situation. Now we never do, consistently. This improves page load performance since we can overlap image decoding with running the JS associated with the load event and the probable resulting layout flushes, style flushes, etc. The new behavior is consistent with the spec.\n\nThis is not a problem in the vast majority of cases because of predictive image decoding (which unfortunately we don't have for CSS images; it's on the todo list). However, we can't realistically predict anything about the situation where JS is loading an image that's not in the document, as in comment 23. We don't know at what size such an image will be drawn or whether it will ever be displayed at all.\n\nThe right solution in cases like comment 32, if the developer needs guarantees about this, is to either create an ImageBitmap rather than just an Image (that's ideal) or to draw the image to a canvas once it's loaded, forcing it to be decoded (suboptimal but will also work).", "attachment_id": null, "id": 11494166, "creator": "seth.bugzilla@blackhail.net"}, {"tags": [], "time": "2016-06-22T04:25:02Z", "author": "seth.bugzilla@blackhail.net", "creation_time": "2016-06-22T04:25:02Z", "count": 27, "id": 11494167, "attachment_id": null, "creator": "seth.bugzilla@blackhail.net", "is_private": false, "bug_id": 626613, "raw_text": "Ack, s/comment 32/comment 23/ above.", "text": "Ack, s/comment 32/comment 23/ above."}, {"count": 28, "time": "2020-12-16T11:38:01Z", "raw_text": "Bulk-downgrade of unassigned, 4 years untouched DOM/Storage bugs' priority.\n\nIf you have reason to believe this is wrong (especially for the severity), please write a comment and ni :jstutte.", "is_private": false, "bug_id": 626613, "id": 15178754, "creation_time": "2020-12-16T11:38:01Z", "author": "jstutte@mozilla.com", "tags": [], "text": "Bulk-downgrade of unassigned, 4 years untouched DOM/Storage bugs' priority.\n\nIf you have reason to believe this is wrong (especially for the severity), please write a comment and ni :jstutte.", "creator": "jstutte@mozilla.com", "attachment_id": null}]}}, "comments": {}}