{"comments": {}, "bugs": {"663270": {"comments": [{"attachment_id": null, "raw_text": "The current threading behavior only uses the message-id based hints.  This breaks when bad mail gateway software messes up with the respective headers.  In such cases, we can thread based on the subject line.  For example, if a subject begins with \"Re: \" we can try to assign it to an existing thread with the same subject line.\n\nIn order to determine where in the thread to inject the message, we can look at the quoted text in the mail body and try to match it to the body of an existing message as a simple heuristic.", "text": "The current threading behavior only uses the message-id based hints.  This breaks when bad mail gateway software messes up with the respective headers.  In such cases, we can thread based on the subject line.  For example, if a subject begins with \"Re: \" we can try to assign it to an existing thread with the same subject line.\n\nIn order to determine where in the thread to inject the message, we can look at the quoted text in the mail body and try to match it to the body of an existing message as a simple heuristic.", "bug_id": 663270, "tags": [], "is_private": false, "id": 5523805, "count": 0, "creator": "ehsan.akhgari@gmail.com", "time": "2011-06-09T23:44:21Z", "creation_time": "2011-06-09T23:44:21Z", "author": "ehsan.akhgari@gmail.com"}, {"id": 5523827, "count": 1, "is_private": false, "author": "mozilla@davidbienvenu.org", "creation_time": "2011-06-09T23:51:18Z", "time": "2011-06-09T23:51:18Z", "creator": "mozilla@davidbienvenu.org", "raw_text": "(In reply to comment #0)\n> The current threading behavior only uses the message-id based hints.  This\n> breaks when bad mail gateway software messes up with the respective headers.\n> In such cases, we can thread based on the subject line.  For example, if a\n> subject begins with \"Re: \" we can try to assign it to an existing thread\n> with the same subject line.\n\nWe have prefs to control the various threading options - see https://wiki.mozilla.org/Thunderbird:Help_Documentation:Hidden_Preferences - that doc is a little out of date because we've switched the defaults around. Ludo might know of a better doc that tells you exactly what to do to get the kind of threading you want. But we don't do the quoted text in the mail body, since we don't always have the message body when we do threading.", "attachment_id": null, "bug_id": 663270, "text": "(In reply to comment #0)\n> The current threading behavior only uses the message-id based hints.  This\n> breaks when bad mail gateway software messes up with the respective headers.\n> In such cases, we can thread based on the subject line.  For example, if a\n> subject begins with \"Re: \" we can try to assign it to an existing thread\n> with the same subject line.\n\nWe have prefs to control the various threading options - see https://wiki.mozilla.org/Thunderbird:Help_Documentation:Hidden_Preferences - that doc is a little out of date because we've switched the defaults around. Ludo might know of a better doc that tells you exactly what to do to get the kind of threading you want. But we don't do the quoted text in the mail body, since we don't always have the message body when we do threading.", "tags": []}, {"attachment_id": null, "raw_text": "(In reply to comment #1)\n> (In reply to comment #0)\n> > The current threading behavior only uses the message-id based hints.  This\n> > breaks when bad mail gateway software messes up with the respective headers.\n> > In such cases, we can thread based on the subject line.  For example, if a\n> > subject begins with \"Re: \" we can try to assign it to an existing thread\n> > with the same subject line.\n> \n> We have prefs to control the various threading options - see\n> https://wiki.mozilla.org/Thunderbird:Help_Documentation:Hidden_Preferences -\n> that doc is a little out of date because we've switched the defaults around.\n> Ludo might know of a better doc that tells you exactly what to do to get the\n> kind of threading you want.\n\nHmm, the mail.strict_threading kind of implies that we already do subject-based threading, which contradicts my experience.\n\n> But we don't do the quoted text in the mail body,\n> since we don't always have the message body when we do threading.\n\nCan we do that if we do have the body available?", "bug_id": 663270, "text": "(In reply to comment #1)\n> (In reply to comment #0)\n> > The current threading behavior only uses the message-id based hints.  This\n> > breaks when bad mail gateway software messes up with the respective headers.\n> > In such cases, we can thread based on the subject line.  For example, if a\n> > subject begins with \"Re: \" we can try to assign it to an existing thread\n> > with the same subject line.\n> \n> We have prefs to control the various threading options - see\n> https://wiki.mozilla.org/Thunderbird:Help_Documentation:Hidden_Preferences -\n> that doc is a little out of date because we've switched the defaults around.\n> Ludo might know of a better doc that tells you exactly what to do to get the\n> kind of threading you want.\n\nHmm, the mail.strict_threading kind of implies that we already do subject-based threading, which contradicts my experience.\n\n> But we don't do the quoted text in the mail body,\n> since we don't always have the message body when we do threading.\n\nCan we do that if we do have the body available?", "tags": [], "is_private": false, "id": 5529325, "count": 2, "creator": "ehsan.akhgari@gmail.com", "creation_time": "2011-06-13T18:37:26Z", "time": "2011-06-13T18:37:26Z", "author": "ehsan.akhgari@gmail.com"}, {"is_private": false, "id": 5529672, "count": 3, "creator": "mozilla@davidbienvenu.org", "creation_time": "2011-06-13T20:37:45Z", "time": "2011-06-13T20:37:45Z", "author": "mozilla@davidbienvenu.org", "attachment_id": null, "raw_text": "(In reply to comment #2)\n\n> \n> Hmm, the mail.strict_threading kind of implies that we already do\n> subject-based threading, which contradicts my experience.\n\nWe should thread by subject if the reply starts with re:, by default.\n\n> \n> > But we don't do the quoted text in the mail body,\n> > since we don't always have the message body when we do threading.\n> \n> Can we do that if we do have the body available?\n\nNot efficiently, no. If subject and reference threading are both broken, it would be kinda slow to grovel though the message bodies of all of your messages looking for messages that contain the quoted content. We could use gloda full test queries, probably, but it would have to be after the normal threading. This might be something worth trying in an extension.", "text": "(In reply to comment #2)\n\n> \n> Hmm, the mail.strict_threading kind of implies that we already do\n> subject-based threading, which contradicts my experience.\n\nWe should thread by subject if the reply starts with re:, by default.\n\n> \n> > But we don't do the quoted text in the mail body,\n> > since we don't always have the message body when we do threading.\n> \n> Can we do that if we do have the body available?\n\nNot efficiently, no. If subject and reference threading are both broken, it would be kinda slow to grovel though the message bodies of all of your messages looking for messages that contain the quoted content. We could use gloda full test queries, probably, but it would have to be after the normal threading. This might be something worth trying in an extension.", "bug_id": 663270, "tags": []}, {"is_private": false, "count": 4, "id": 5529908, "creator": "ehsan.akhgari@gmail.com", "creation_time": "2011-06-13T21:41:48Z", "time": "2011-06-13T21:41:48Z", "author": "ehsan.akhgari@gmail.com", "attachment_id": null, "raw_text": "(In reply to comment #3)\n> (In reply to comment #2)\n> \n> > \n> > Hmm, the mail.strict_threading kind of implies that we already do\n> > subject-based threading, which contradicts my experience.\n> \n> We should thread by subject if the reply starts with re:, by default.\n\nWill that take precedence over the In-Reply-To header (or whatever it's called, can't remember the exact name)?", "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> \n> > \n> > Hmm, the mail.strict_threading kind of implies that we already do\n> > subject-based threading, which contradicts my experience.\n> \n> We should thread by subject if the reply starts with re:, by default.\n\nWill that take precedence over the In-Reply-To header (or whatever it's called, can't remember the exact name)?", "bug_id": 663270, "tags": []}, {"raw_text": "References/In-Reply-To is matched first, and then I think we try to match the subject if we can't find a match yet.", "attachment_id": null, "tags": [], "bug_id": 663270, "text": "References/In-Reply-To is matched first, and then I think we try to match the subject if we can't find a match yet.", "id": 5529912, "count": 5, "is_private": false, "author": "Pidgeot18@gmail.com", "creation_time": "2011-06-13T21:43:17Z", "time": "2011-06-13T21:43:17Z", "creator": "Pidgeot18@gmail.com"}, {"is_private": false, "count": 6, "id": 5530079, "creator": "ehsan.akhgari@gmail.com", "creation_time": "2011-06-13T22:48:08Z", "time": "2011-06-13T22:48:08Z", "author": "ehsan.akhgari@gmail.com", "attachment_id": null, "raw_text": "Hmm, tell me that I'm crazy but this <http://mxr.mozilla.org/comm-central/source/mailnews/mailnews.js#134> tells me that if the pref is true (which is the default behavior), no subject threading is performed at all!\n\nSo, should we consider changing the default value of the pref to false?", "bug_id": 663270, "text": "Hmm, tell me that I'm crazy but this <http://mxr.mozilla.org/comm-central/source/mailnews/mailnews.js#134> tells me that if the pref is true (which is the default behavior), no subject threading is performed at all!\n\nSo, should we consider changing the default value of the pref to false?", "tags": []}, {"raw_text": "Oh, yeah, some folks (hi, Ludo) convinced me that we should try strict threading. I'd rather thread by subject without re: myself, so I'd be happy to flip the default value. But I'll give those with the opposing view a chance to comment.", "attachment_id": null, "bug_id": 663270, "text": "Oh, yeah, some folks (hi, Ludo) convinced me that we should try strict threading. I'd rather thread by subject without re: myself, so I'd be happy to flip the default value. But I'll give those with the opposing view a chance to comment.", "tags": [], "count": 7, "id": 5530203, "is_private": false, "author": "mozilla@davidbienvenu.org", "creation_time": "2011-06-13T23:28:33Z", "time": "2011-06-13T23:28:33Z", "creator": "mozilla@davidbienvenu.org"}, {"tags": [], "bug_id": 663270, "text": "And the complete documentation on Threading is at <https://wiki.mozilla.org/MailNews:Message_Threading#Preferences_Controlling_Threading>", "raw_text": "And the complete documentation on Threading is at <https://wiki.mozilla.org/MailNews:Message_Threading#Preferences_Controlling_Threading>", "attachment_id": null, "author": "ludovic@hirlimann.net", "time": "2011-06-14T09:52:21Z", "creation_time": "2011-06-14T09:52:21Z", "creator": "ludovic@hirlimann.net", "count": 8, "id": 5530991, "is_private": false}, {"raw_text": "I'm reading through all of this and I definitely think TB5 changed something about how threads are collected together.  In every case where it breaks, the first message that started the thread is not combined with the replies.  \n\nThis made me think that the control in mail.correct_threading (due to it controlling message ID involvement) were the key, but it is unclear to me when these indexes get updated, so my experiments might be off.", "attachment_id": null, "tags": [], "bug_id": 663270, "text": "I'm reading through all of this and I definitely think TB5 changed something about how threads are collected together.  In every case where it breaks, the first message that started the thread is not combined with the replies.  \n\nThis made me think that the control in mail.correct_threading (due to it controlling message ID involvement) were the key, but it is unclear to me when these indexes get updated, so my experiments might be off.", "count": 9, "id": 5594538, "is_private": false, "author": "jbg@qualcomm.com", "time": "2011-07-16T00:16:37Z", "creation_time": "2011-07-16T00:16:37Z", "creator": "jbg@qualcomm.com"}, {"id": 5906838, "count": 10, "is_private": false, "author": "jonathan.protzenko@gmail.com", "time": "2011-12-11T01:40:05Z", "creation_time": "2011-12-11T01:40:05Z", "creator": "jonathan.protzenko@gmail.com", "raw_text": "So here's some thoughts.\n- Strict threading is on by default, which means we don't use the subject to thread. Making this off by default is *wrong*. It frequently happens that someone sends you a message called \"hey\" or \"hello\". Threading by subject will thread all these messages together. Suggestion: only thread by subject if the messages are close enough in time and/or some recipients are shared.\n- Threading by message-id confuses people when someone intends to start a new thread by hits reply all because they're lazy, not realizing that this will keep the References: header intact. Suggestion: consider the message to be in a new thread if the subject changes drastically from that in the message pointed to by the In-Reply-To message.\n- Threading without re (thread_without_re) is just a bad idea imho.\n\nIndeed, using body contents (which I think gmail does somehow) would be ideal, but we don't have the infrastructure to do that (and, in my mind, is likely to require significant engineering effort to get \"the rightest way\"). Applying the two rules above (which gmail does, incidentally) would be already a massive improvement.\n\nPlease note that gloda has its own concept of threading; we should definitely keep that in sync with the main threading logic (namely, it only uses references: and in-reply-to: and is not sensitive to subject-threading).", "attachment_id": null, "bug_id": 663270, "text": "So here's some thoughts.\n- Strict threading is on by default, which means we don't use the subject to thread. Making this off by default is *wrong*. It frequently happens that someone sends you a message called \"hey\" or \"hello\". Threading by subject will thread all these messages together. Suggestion: only thread by subject if the messages are close enough in time and/or some recipients are shared.\n- Threading by message-id confuses people when someone intends to start a new thread by hits reply all because they're lazy, not realizing that this will keep the References: header intact. Suggestion: consider the message to be in a new thread if the subject changes drastically from that in the message pointed to by the In-Reply-To message.\n- Threading without re (thread_without_re) is just a bad idea imho.\n\nIndeed, using body contents (which I think gmail does somehow) would be ideal, but we don't have the infrastructure to do that (and, in my mind, is likely to require significant engineering effort to get \"the rightest way\"). Applying the two rules above (which gmail does, incidentally) would be already a massive improvement.\n\nPlease note that gloda has its own concept of threading; we should definitely keep that in sync with the main threading logic (namely, it only uses references: and in-reply-to: and is not sensitive to subject-threading).", "tags": []}, {"raw_text": "To elaborate on the triggering use-case, the problem is that Mailman 2.1 (still, as of 2.1.10, which is what Mozilla is using) deletes the message-id header and replaces it with its own when gatewaying from the mailing list to the new server.  It does not stash it in another field or update/generate a synthetic References field.\n\nhttp://bazaar.launchpad.net/~mailman-coders/mailman/2.1/view/head:/Mailman/Queue/NewsRunner.py#L128\n\nThe generated message-id has some information in it, namely an epoch timestamp.  It is generated like so:\n    global _serial\n    msgid = '<mailman.%d.%d.%d.%s@%s>' % (\n        _serial, time.time(), os.getpid(),\n        mlist.internal_name(), mlist.host_name)\n\nBecause the serial number precedes the timestamp (which will usually be some small number of seconds after the 'Received' header's timestamp at the mail-server) and is unpredictable, this means that any database range query would need to be on an intentionally created index using the timestamp.  Which is to say that gloda can't create an efficient query on the already-existing message-id index.\n\nThe message-id's are *not* munged when messages posted to the newsgroup are gatewayed to the mailing list.  Also, no reverse transformation of the message-id clobbering is performed, which would have saved us this pain.  This has the notable side-effect that when someone replies to a message and the reply goes to both the newsgroup and the mailing list, the mailing list ends up with two copies with the same (original) message-id, and the newsgroup ends up with two copies where one is the original message-id and one is the munged message-id.\n\nAside: If thunderbird were to de-dupe, we would probably want to take the one directly from the mailing list because it is the one that will have DKIM information which provides the strongest authentication.\n\n\nThe mozilla bugs that relate to our gateways are: Bug 651527, Bug 711375.\nThe launchpad bug with activity relating to mailman being a jerk is: https://bugs.launchpad.net/mailman/+bug/266263\nAnd one with a patch but no activity:\nhttps://bugs.launchpad.net/mailman/+bug/496233\n\n\nFor analysis convenience:\n\nBug 451995 is where we changed (Jan 12, 2009):\nhttp://hg.mozilla.org/comm-central/rev/20af028c35be\n  mail.thread_without_re: true => false\n\nBug 449821 is where we changed (Feb 1, 2009):\nhttp://hg.mozilla.org/comm-central/rev/fb8823d88515\n  mail.strict_threading: false => true\n  mail.correct_threading: false => true\n\nThread without Re was-and-is super-dangerous because it would thread automatically generated e-mails together and this would frequently result in pathological performance when deleting e-mails because re-threading would need to occur.  The canonical example was justdave deleting 10,000 messages with the same subject all at once.  This can be mitigated with my (abandoned because the complexity was no longer justified) fix to topologically sort messages by thread when deleting on Bug 452221.", "attachment_id": null, "tags": [], "bug_id": 663270, "text": "To elaborate on the triggering use-case, the problem is that Mailman 2.1 (still, as of 2.1.10, which is what Mozilla is using) deletes the message-id header and replaces it with its own when gatewaying from the mailing list to the new server.  It does not stash it in another field or update/generate a synthetic References field.\n\nhttp://bazaar.launchpad.net/~mailman-coders/mailman/2.1/view/head:/Mailman/Queue/NewsRunner.py#L128\n\nThe generated message-id has some information in it, namely an epoch timestamp.  It is generated like so:\n    global _serial\n    msgid = '<mailman.%d.%d.%d.%s@%s>' % (\n        _serial, time.time(), os.getpid(),\n        mlist.internal_name(), mlist.host_name)\n\nBecause the serial number precedes the timestamp (which will usually be some small number of seconds after the 'Received' header's timestamp at the mail-server) and is unpredictable, this means that any database range query would need to be on an intentionally created index using the timestamp.  Which is to say that gloda can't create an efficient query on the already-existing message-id index.\n\nThe message-id's are *not* munged when messages posted to the newsgroup are gatewayed to the mailing list.  Also, no reverse transformation of the message-id clobbering is performed, which would have saved us this pain.  This has the notable side-effect that when someone replies to a message and the reply goes to both the newsgroup and the mailing list, the mailing list ends up with two copies with the same (original) message-id, and the newsgroup ends up with two copies where one is the original message-id and one is the munged message-id.\n\nAside: If thunderbird were to de-dupe, we would probably want to take the one directly from the mailing list because it is the one that will have DKIM information which provides the strongest authentication.\n\n\nThe mozilla bugs that relate to our gateways are: Bug 651527, Bug 711375.\nThe launchpad bug with activity relating to mailman being a jerk is: https://bugs.launchpad.net/mailman/+bug/266263\nAnd one with a patch but no activity:\nhttps://bugs.launchpad.net/mailman/+bug/496233\n\n\nFor analysis convenience:\n\nBug 451995 is where we changed (Jan 12, 2009):\nhttp://hg.mozilla.org/comm-central/rev/20af028c35be\n  mail.thread_without_re: true => false\n\nBug 449821 is where we changed (Feb 1, 2009):\nhttp://hg.mozilla.org/comm-central/rev/fb8823d88515\n  mail.strict_threading: false => true\n  mail.correct_threading: false => true\n\nThread without Re was-and-is super-dangerous because it would thread automatically generated e-mails together and this would frequently result in pathological performance when deleting e-mails because re-threading would need to occur.  The canonical example was justdave deleting 10,000 messages with the same subject all at once.  This can be mitigated with my (abandoned because the complexity was no longer justified) fix to topologically sort messages by thread when deleting on Bug 452221.", "is_private": false, "id": 6166748, "count": 11, "author": "bugmail@asutherland.org", "creator": "bugmail@asutherland.org", "creation_time": "2012-03-23T20:24:56Z", "time": "2012-03-23T20:24:56Z"}, {"is_private": false, "id": 6748702, "count": 12, "author": "dave@ubiqsoft.com", "creator": "dave@ubiqsoft.com", "time": "2012-10-20T15:19:01Z", "creation_time": "2012-10-20T15:19:01Z", "raw_text": "(In reply to Jonathan Protzenko [:protz] from comment #10)\n> - Threading by message-id confuses people when someone intends to start a\n> new thread by hits reply all because they're lazy, not realizing that this\n> will keep the References: header intact. Suggestion: consider the message to\n> be in a new thread if the subject changes drastically from that in the\n> message pointed to by the In-Reply-To message.\n\nIs there an issue specifically for this case that I can track and vote for? It seems pretty doable since message-id and subject are  already used, and a simpler case than this issue describes.\n\nOn a related note, has anyone have thoughts on threading Facebook messages? Annoyingly they don't use the standard headers and change the subject as well (e.g. \"Dave commented on\", \"Bob commented on\"). I think the needed info is in \"X-Facebook-Notify\" though. My idea would be to thread everything on the pid or equivalent. Probably its own issue, but I thought I would ask here first.", "attachment_id": null, "tags": [], "text": "(In reply to Jonathan Protzenko [:protz] from comment #10)\n> - Threading by message-id confuses people when someone intends to start a\n> new thread by hits reply all because they're lazy, not realizing that this\n> will keep the References: header intact. Suggestion: consider the message to\n> be in a new thread if the subject changes drastically from that in the\n> message pointed to by the In-Reply-To message.\n\nIs there an issue specifically for this case that I can track and vote for? It seems pretty doable since message-id and subject are  already used, and a simpler case than this issue describes.\n\nOn a related note, has anyone have thoughts on threading Facebook messages? Annoyingly they don't use the standard headers and change the subject as well (e.g. \"Dave commented on\", \"Bob commented on\"). I think the needed info is in \"X-Facebook-Notify\" though. My idea would be to thread everything on the pid or equivalent. Probably its own issue, but I thought I would ask here first.", "bug_id": 663270}, {"text": "This would be an important bug to fix. Especially the less technically inclined email users often reuse old messages to create a new ones on a completely different topic (falsely preserving the message-ID). This leads to ridiculous threads including message with 2+ completely different subject headers. A basic subject matching process like done in Gmail would be very important to make Thunderbird better.", "bug_id": 663270, "tags": [], "raw_text": "This would be an important bug to fix. Especially the less technically inclined email users often reuse old messages to create a new ones on a completely different topic (falsely preserving the message-ID). This leads to ridiculous threads including message with 2+ completely different subject headers. A basic subject matching process like done in Gmail would be very important to make Thunderbird better.", "attachment_id": null, "author": "jaregi@yahoo.co.uk", "creator": "jaregi@yahoo.co.uk", "creation_time": "2012-11-09T14:06:34Z", "time": "2012-11-09T14:06:34Z", "is_private": false, "count": 13, "id": 6808089}, {"author": "dave@ubiqsoft.com", "creator": "dave@ubiqsoft.com", "creation_time": "2012-12-16T17:26:00Z", "time": "2012-12-16T17:26:00Z", "is_private": false, "id": 6919016, "count": 14, "bug_id": 663270, "text": "FYI, I created a separate issue 822101 for Facebook threading since its really header-based, just different headers. https://bugzilla.mozilla.org/show_bug.cgi?id=822101", "tags": [], "raw_text": "FYI, I created a separate issue 822101 for Facebook threading since its really header-based, just different headers. https://bugzilla.mozilla.org/show_bug.cgi?id=822101", "attachment_id": null}, {"author": "dave@ubiqsoft.com", "creator": "dave@ubiqsoft.com", "time": "2013-07-12T23:17:04Z", "creation_time": "2013-07-12T23:17:04Z", "is_private": false, "id": 7630942, "count": 15, "tags": [], "text": "I believe GMail actually just drops the (In reply to David Rees from comment #12)\n> (In reply to Jonathan Protzenko [:protz] from comment #10)\n> > - Threading by message-id confuses people when someone intends to start a\n> > new thread by hits reply all because they're lazy, not realizing that this\n> > will keep the References: header intact. Suggestion: consider the message to\n> > be in a new thread if the subject changes drastically from that in the\n> > message pointed to by the In-Reply-To message.\n> \n> Is there an issue specifically for this case that I can track and vote for?\n> It seems pretty doable since message-id and subject are  already used, and a\n> simpler case than this issue describes.\n> \n\nI created bug 893261 for this specific case of deleting \"In-Reply-To\" when a reply's subject is changed. Its really on the email creation side (and an easier change as well).", "bug_id": 663270, "raw_text": "I believe GMail actually just drops the (In reply to David Rees from comment #12)\n> (In reply to Jonathan Protzenko [:protz] from comment #10)\n> > - Threading by message-id confuses people when someone intends to start a\n> > new thread by hits reply all because they're lazy, not realizing that this\n> > will keep the References: header intact. Suggestion: consider the message to\n> > be in a new thread if the subject changes drastically from that in the\n> > message pointed to by the In-Reply-To message.\n> \n> Is there an issue specifically for this case that I can track and vote for?\n> It seems pretty doable since message-id and subject are  already used, and a\n> simpler case than this issue describes.\n> \n\nI created bug 893261 for this specific case of deleting \"In-Reply-To\" when a reply's subject is changed. Its really on the email creation side (and an easier change as well).", "attachment_id": null}]}}}