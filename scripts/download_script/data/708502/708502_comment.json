{"bugs": {"708502": {"comments": [{"creator": "brian@birchill.co.jp", "is_private": false, "author": "brian@birchill.co.jp", "creation_time": "2011-12-08T02:18:14Z", "time": "2011-12-08T02:18:14Z", "tags": [], "text": "Created attachment 579928\nPartial refactoring of generation of glyph frames\n\nAs per the following message to www-svg I think the way we're counting characters in SVG text metrics APIs is wrong with regards to characters marked display:none.\n\n  http://lists.w3.org/Archives/Public/www-svg/2011Nov/0135.html\n\nFor example, getNumberOfChars does not count characters in tspans that are display:none but the spec says of this method: \"Effectively, this is equivalent to the length of the Node::textContent attribute from DOM Level 3 Core\" which doesn't talk about display:none making characters disappear.\n\nAt least the following methods are affected:\n\n getNumberOfChars\n getComputedTextLength\n getSubStringLength\n getStartPositionOfChar/getEndPositionOfChar/getExtentOfChar\n\nFor further details and interop information see the above message to www-svg.\n\nFor this bug I think we should:\n\n1. Write a lot of tests for combinations of text/tspan/textPath etc. and display:none to cover BOTH rendering and API results\n2. Refactor the display stuff so we generate frames for display:none glyphs\n3. Skip those frames for rendering but include them when counting somehow?\n\nI've attached a draft patch that does most of 2.", "attachment_id": 579928, "raw_text": "As per the following message to www-svg I think the way we're counting characters in SVG text metrics APIs is wrong with regards to characters marked display:none.\n\n  http://lists.w3.org/Archives/Public/www-svg/2011Nov/0135.html\n\nFor example, getNumberOfChars does not count characters in tspans that are display:none but the spec says of this method: \"Effectively, this is equivalent to the length of the Node::textContent attribute from DOM Level 3 Core\" which doesn't talk about display:none making characters disappear.\n\nAt least the following methods are affected:\n\n getNumberOfChars\n getComputedTextLength\n getSubStringLength\n getStartPositionOfChar/getEndPositionOfChar/getExtentOfChar\n\nFor further details and interop information see the above message to www-svg.\n\nFor this bug I think we should:\n\n1. Write a lot of tests for combinations of text/tspan/textPath etc. and display:none to cover BOTH rendering and API results\n2. Refactor the display stuff so we generate frames for display:none glyphs\n3. Skip those frames for rendering but include them when counting somehow?\n\nI've attached a draft patch that does most of 2.", "id": 5899445, "count": 0, "bug_id": 708502}, {"raw_text": "The attached patch applies on top of those for bug 376027.", "attachment_id": null, "id": 5899448, "count": 1, "is_private": false, "creator": "brian@birchill.co.jp", "text": "The attached patch applies on top of those for bug 376027.", "time": "2011-12-08T02:20:19Z", "tags": [], "bug_id": 708502, "creation_time": "2011-12-08T02:20:19Z", "author": "brian@birchill.co.jp"}, {"count": 2, "bug_id": 708502, "raw_text": "Note that with Cameron's work, SVG text will go through the regular nsBlockFrame/nsInlineFrame/nsTextFrame frame construction path. We really don't want that code to have to account for possible display:none frames.\n\nI think display:none text and <tpsan>s should be treated as not existing for all these APIs. No-one replied to your email to www-svg so I guess no-one feels strongly about it. It's consistent with what browsers already do.", "attachment_id": null, "id": 5899502, "creator": "roc@ocallahan.org", "is_private": false, "time": "2011-12-08T02:43:47Z", "tags": [], "text": "Note that with Cameron's work, SVG text will go through the regular nsBlockFrame/nsInlineFrame/nsTextFrame frame construction path. We really don't want that code to have to account for possible display:none frames.\n\nI think display:none text and <tpsan>s should be treated as not existing for all these APIs. No-one replied to your email to www-svg so I guess no-one feels strongly about it. It's consistent with what browsers already do.", "author": "roc@ocallahan.org", "creation_time": "2011-12-08T02:43:47Z"}, {"bug_id": 708502, "count": 3, "author": "cam@mcc.id.au", "creation_time": "2011-12-08T02:46:30Z", "tags": [], "time": "2011-12-08T02:46:30Z", "text": "I haven't looked at the issue properly yet.  It's on the agenda for tomorrow morning's telcon.  At first glance, ignoring those display:none characters seems inconsistent with having x=\"\", dx=\"\" etc. attributes work on just what characters are in the content.", "creator": "cam@mcc.id.au", "is_private": false, "id": 5899508, "attachment_id": null, "raw_text": "I haven't looked at the issue properly yet.  It's on the agenda for tomorrow morning's telcon.  At first glance, ignoring those display:none characters seems inconsistent with having x=\"\", dx=\"\" etc. attributes work on just what characters are in the content."}, {"id": 5899535, "raw_text": "BTW it doesn't mean that we have to build frames for these display:none <tspan>s, right?  It just means we have to make sure we count the characters in them so that the indices you pass in to getComputedTextLength etc. take them into account.\n\nWe would need to define what say getStartPositionOfChar does when given an index to a character that is currently not displayed due to display:none.  It's probably the same case for characters corresponding to glyphs that have fallen off the end of a text path (which also isn't handled in the definitions of these methods in the spec).", "attachment_id": null, "text": "BTW it doesn't mean that we have to build frames for these display:none <tspan>s, right?  It just means we have to make sure we count the characters in them so that the indices you pass in to getComputedTextLength etc. take them into account.\n\nWe would need to define what say getStartPositionOfChar does when given an index to a character that is currently not displayed due to display:none.  It's probably the same case for characters corresponding to glyphs that have fallen off the end of a text path (which also isn't handled in the definitions of these methods in the spec).", "time": "2011-12-08T02:57:10Z", "bug_id": 708502, "tags": [], "creation_time": "2011-12-08T02:57:10Z", "author": "cam@mcc.id.au", "count": 4, "is_private": false, "creator": "cam@mcc.id.au"}, {"count": 5, "is_private": false, "creator": "roc@ocallahan.org", "text": "(In reply to Cameron McCormack (:heycam) from comment #4)\n> BTW it doesn't mean that we have to build frames for these display:none\n> <tspan>s, right?  It just means we have to make sure we count the characters\n> in them so that the indices you pass in to getComputedTextLength etc. take\n> them into account.\n\nYes, I guess so.", "tags": [], "bug_id": 708502, "time": "2011-12-08T03:48:20Z", "creation_time": "2011-12-08T03:48:20Z", "author": "roc@ocallahan.org", "raw_text": "(In reply to Cameron McCormack (:heycam) from comment #4)\n> BTW it doesn't mean that we have to build frames for these display:none\n> <tspan>s, right?  It just means we have to make sure we count the characters\n> in them so that the indices you pass in to getComputedTextLength etc. take\n> them into account.\n\nYes, I guess so.", "attachment_id": null, "id": 5899636}, {"raw_text": "Since the nsIFrame methods are only useful for SVG as nobody else should have display:none frames I think an assertion in each that the content namespace is SVG is warranted.", "attachment_id": null, "id": 5900103, "count": 6, "is_private": false, "creator": "longsonr@gmail.com", "text": "Since the nsIFrame methods are only useful for SVG as nobody else should have display:none frames I think an assertion in each that the content namespace is SVG is warranted.", "bug_id": 708502, "time": "2011-12-08T10:04:38Z", "tags": [], "creation_time": "2011-12-08T10:04:38Z", "author": "longsonr@gmail.com"}, {"bug_id": 708502, "count": 7, "author": "brian@birchill.co.jp", "creation_time": "2011-12-08T11:35:27Z", "time": "2011-12-08T11:35:27Z", "tags": [], "text": "(In reply to Cameron McCormack (:heycam) from comment #3)\n> I haven't looked at the issue properly yet.  It's on the agenda for tomorrow\n> morning's telcon.  At first glance, ignoring those display:none characters\n> seems inconsistent with having x=\"\", dx=\"\" etc. attributes work on just what\n> characters are in the content.\n\nRight. Also, since display:none can be set by a CSS stylesheet, it would be surprising to someone writing script that the return value of getNumberOfChars suddenly reports a different number because, e.g. a :hover selector on an unknown stylesheet matched and now all their indices are incorrect. I think the way it's defined in SVG now makes sense, it's just that most implementations don't do it that way at present.\n\n(In reply to Cameron McCormack (:heycam) from comment #4)\n> BTW it doesn't mean that we have to build frames for these display:none\n> <tspan>s, right?  It just means we have to make sure we count the characters\n> in them so that the indices you pass in to getComputedTextLength etc. take\n> them into account.\n\nRight, there's no requirement to make frames. I just imagined that's probably the easiest way forward but I haven't looked into it so there may well be an easier/better way to juggle the numbers.", "creator": "brian@birchill.co.jp", "is_private": false, "id": 5900184, "attachment_id": null, "raw_text": "(In reply to Cameron McCormack (:heycam) from comment #3)\n> I haven't looked at the issue properly yet.  It's on the agenda for tomorrow\n> morning's telcon.  At first glance, ignoring those display:none characters\n> seems inconsistent with having x=\"\", dx=\"\" etc. attributes work on just what\n> characters are in the content.\n\nRight. Also, since display:none can be set by a CSS stylesheet, it would be surprising to someone writing script that the return value of getNumberOfChars suddenly reports a different number because, e.g. a :hover selector on an unknown stylesheet matched and now all their indices are incorrect. I think the way it's defined in SVG now makes sense, it's just that most implementations don't do it that way at present.\n\n(In reply to Cameron McCormack (:heycam) from comment #4)\n> BTW it doesn't mean that we have to build frames for these display:none\n> <tspan>s, right?  It just means we have to make sure we count the characters\n> in them so that the indices you pass in to getComputedTextLength etc. take\n> them into account.\n\nRight, there's no requirement to make frames. I just imagined that's probably the easiest way forward but I haven't looked into it so there may well be an easier/better way to juggle the numbers."}, {"text": "Created attachment 580269\nCreate convenience methods for getting displayed frames\n\nSplitting the previous patch out into two parts:\n* One which adds the convenience methods for getting displayed frames\n* One which creates frames for display:none glyphs but doesn't paint them\n\nI've split them out since depending on which direction this bug goes we might want one but not the other.", "bug_id": 708502, "tags": [], "time": "2011-12-09T02:06:18Z", "creation_time": "2011-12-09T02:06:18Z", "author": "brian@birchill.co.jp", "count": 8, "is_private": false, "creator": "brian@birchill.co.jp", "id": 5903098, "raw_text": "Splitting the previous patch out into two parts:\n* One which adds the convenience methods for getting displayed frames\n* One which creates frames for display:none glyphs but doesn't paint them\n\nI've split them out since depending on which direction this bug goes we might want one but not the other.", "attachment_id": 580269}, {"id": 5903103, "attachment_id": 580270, "raw_text": "", "author": "brian@birchill.co.jp", "creation_time": "2011-12-09T02:06:54Z", "bug_id": 708502, "time": "2011-12-09T02:06:54Z", "tags": [], "text": "Created attachment 580270\nMake frames for display:none glyphs but don't paint them", "creator": "brian@birchill.co.jp", "is_private": false, "count": 9}, {"author": "brian@birchill.co.jp", "creation_time": "2011-12-09T08:40:25Z", "time": "2011-12-09T08:40:25Z", "tags": [], "text": "(In reply to Robert Longson from comment #6)\n> Since the nsIFrame methods are only useful for SVG as nobody else should\n> have display:none frames I think an assertion in each that the content\n> namespace is SVG is warranted.\n\nI started doing this but the assertion was failing. It seems the content of a glyph frame is a text node which isn't marked as being in the SVG namespace.", "creator": "brian@birchill.co.jp", "is_private": false, "id": 5903625, "attachment_id": null, "raw_text": "(In reply to Robert Longson from comment #6)\n> Since the nsIFrame methods are only useful for SVG as nobody else should\n> have display:none frames I think an assertion in each that the content\n> namespace is SVG is warranted.\n\nI started doing this but the assertion was failing. It seems the content of a glyph frame is a text node which isn't marked as being in the SVG namespace.", "bug_id": 708502, "count": 10}, {"attachment_id": null, "raw_text": "You could have something that checks for either IsSVG on the content or a text node: IsNodeOfType(nsINode::eTEXT). It may well be that the text node check could be removed once Cameron completes his text rework/glyph frame removal.", "id": 5903655, "creator": "longsonr@gmail.com", "is_private": false, "author": "longsonr@gmail.com", "creation_time": "2011-12-09T09:06:47Z", "tags": [], "time": "2011-12-09T09:06:47Z", "text": "You could have something that checks for either IsSVG on the content or a text node: IsNodeOfType(nsINode::eTEXT). It may well be that the text node check could be removed once Cameron completes his text rework/glyph frame removal.", "count": 11, "bug_id": 708502}, {"creator": "brian@birchill.co.jp", "is_private": false, "count": 12, "author": "brian@birchill.co.jp", "creation_time": "2011-12-16T07:20:29Z", "time": "2011-12-16T07:20:29Z", "tags": [], "bug_id": 708502, "text": "Created attachment 582185\nCreate convenience methods for getting displayed frames v1b\n\n(In reply to Robert Longson from comment #11)\n> You could have something that checks for either IsSVG on the content or a\n> text node: IsNodeOfType(nsINode::eTEXT). It may well be that the text node\n> check could be removed once Cameron completes his text rework/glyph frame\n> removal.\n\nGood idea, I've added that to the patch now.", "attachment_id": 582185, "raw_text": "(In reply to Robert Longson from comment #11)\n> You could have something that checks for either IsSVG on the content or a\n> text node: IsNodeOfType(nsINode::eTEXT). It may well be that the text node\n> check could be removed once Cameron completes his text rework/glyph frame\n> removal.\n\nGood idea, I've added that to the patch now.", "id": 5921219}, {"text": "Created attachment 582186\nCreate convenience methods for getting displayed frames v1c\n\nThis time uploading after qrefresh.", "bug_id": 708502, "time": "2011-12-16T07:23:13Z", "tags": [], "creation_time": "2011-12-16T07:23:13Z", "author": "brian@birchill.co.jp", "count": 13, "is_private": false, "creator": "brian@birchill.co.jp", "id": 5921222, "raw_text": "This time uploading after qrefresh.", "attachment_id": 582186}, {"raw_text": ">+{\n>+  nsIFrame* child = mFirstChild;\n>+  NS_ABORT_IF_FALSE(\n>+    child->GetContent()->GetNameSpaceID() == kNameSpaceID_SVG ||\n\nUse child->GetContent()->IsSVG() instead\n\n>+  nsIFrame* GetNextDisplayedSibling() const {\n>+    NS_ABORT_IF_FALSE(GetContent()->GetNameSpaceID() == kNameSpaceID_SVG ||\n\nIsSVG() here too.", "attachment_id": 582186, "id": 5921527, "count": 14, "is_private": false, "creator": "longsonr@gmail.com", "text": "Comment on attachment 582186\nCreate convenience methods for getting displayed frames v1c\n\n>+{\n>+  nsIFrame* child = mFirstChild;\n>+  NS_ABORT_IF_FALSE(\n>+    child->GetContent()->GetNameSpaceID() == kNameSpaceID_SVG ||\n\nUse child->GetContent()->IsSVG() instead\n\n>+  nsIFrame* GetNextDisplayedSibling() const {\n>+    NS_ABORT_IF_FALSE(GetContent()->GetNameSpaceID() == kNameSpaceID_SVG ||\n\nIsSVG() here too.", "tags": [], "time": "2011-12-16T12:15:45Z", "bug_id": 708502, "creation_time": "2011-12-16T12:15:45Z", "author": "longsonr@gmail.com"}]}}, "comments": {}}