{"comments": {}, "bugs": {"637828": {"comments": [{"bug_id": 637828, "time": "2011-03-01T20:23:27Z", "creator": "ben@stechz.com", "count": 0, "tags": [], "text": "Created attachment 515988\nScreenshot\n\nSeems to only reproduce on Android.\n\nSteps:\n1. Navigate to http://mozilla.org\n2. Wait for transition from Firefox to Thunderbird\n\nThere are graphics corruption issues after the fade is finished. See attachment.", "is_private": false, "creation_time": "2011-03-01T20:23:27Z", "raw_text": "Seems to only reproduce on Android.\n\nSteps:\n1. Navigate to http://mozilla.org\n2. Wait for transition from Firefox to Thunderbird\n\nThere are graphics corruption issues after the fade is finished. See attachment.", "id": 5312643, "author": "ben@stechz.com", "attachment_id": 515988}, {"author": "ben@stechz.com", "bug_id": 637828, "creator": "ben@stechz.com", "count": 1, "tags": [], "raw_text": "This only seems to happen for smaller scales? After a certain amount of zooming in, this problem doesn't occur. I'm assuming the magic resolution range for this corruption is <=1.0.", "id": 5312664, "text": "This only seems to happen for smaller scales? After a certain amount of zooming in, this problem doesn't occur. I'm assuming the magic resolution range for this corruption is <=1.0.", "creation_time": "2011-03-01T20:30:55Z", "attachment_id": null, "time": "2011-03-01T20:30:55Z", "is_private": false}, {"time": "2011-03-03T00:33:42Z", "is_private": false, "attachment_id": null, "tags": [], "creator": "cjones.bugs@gmail.com", "count": 2, "bug_id": 637828, "creation_time": "2011-03-03T00:33:42Z", "text": "I see this on desktop in portrait orientation.", "id": 5317063, "raw_text": "I see this on desktop in portrait orientation.", "author": "cjones.bugs@gmail.com"}, {"time": "2011-03-03T01:23:29Z", "count": 3, "creator": "cjones.bugs@gmail.com", "tags": [], "bug_id": 637828, "id": 5317189, "raw_text": "STR in test-ipcbrowser\n (1) Load http://mozilla.org\n (2) Set resolution to 0.5/0.5\n\nAny resolution <1.0 seems to tickle the bug.  Curiously, the corruption is\n - ABSENT in a vanilla desktop-firefox build\n - ABSENT in a vanilla desktop-firefox build with MOZ_LAYERS_FORCE_SHMEM_SURFACES=1\n - ABSENT in a vanilla desktop-fennec build (guessing from comment 1)\n - present in desktop-fennec build with --enable-mobile-optimize\n\nSo it looks like the secret sauce needed to trigger this is --enable-mobile-optimize.  The only significant difference between that and MOZ_LAYERS_FORCE_SHMEM_SURFACES=1 in a vanilla build wrt shadow layers is the image resampling algorithms used.  (The only other difference is that slightly different code is used to composite layers to the Gtk2 window, but since this bug appears on android too I think we can rule that out.)\n\nThis smells like a pixman bug :/.", "is_private": false, "creation_time": "2011-03-03T01:23:29Z", "text": "STR in test-ipcbrowser\n (1) Load http://mozilla.org\n (2) Set resolution to 0.5/0.5\n\nAny resolution <1.0 seems to tickle the bug.  Curiously, the corruption is\n - ABSENT in a vanilla desktop-firefox build\n - ABSENT in a vanilla desktop-firefox build with MOZ_LAYERS_FORCE_SHMEM_SURFACES=1\n - ABSENT in a vanilla desktop-fennec build (guessing from comment 1)\n - present in desktop-fennec build with --enable-mobile-optimize\n\nSo it looks like the secret sauce needed to trigger this is --enable-mobile-optimize.  The only significant difference between that and MOZ_LAYERS_FORCE_SHMEM_SURFACES=1 in a vanilla build wrt shadow layers is the image resampling algorithms used.  (The only other difference is that slightly different code is used to composite layers to the Gtk2 window, but since this bug appears on android too I think we can rule that out.)\n\nThis smells like a pixman bug :/.", "attachment_id": null, "author": "cjones.bugs@gmail.com"}, {"id": 5317322, "raw_text": "This makes the bug go away\n\ndiff --git a/gfx/layers/ipc/ShadowLayers.cpp b/gfx/layers/ipc/ShadowLayers.cpp\n--- a/gfx/layers/ipc/ShadowLayers.cpp\n+++ b/gfx/layers/ipc/ShadowLayers.cpp\n@@ -393,21 +393,17 @@ ShadowLayerForwarder::GetParentBackendTy\n   return mParentBackend;\n }\n \n static gfxASurface::gfxImageFormat\n OptimalFormatFor(gfxASurface::gfxContentType aContent)\n {\n   switch (aContent) {\n   case gfxASurface::CONTENT_COLOR:\n-#ifdef MOZ_GFX_OPTIMIZE_MOBILE\n-    return gfxASurface::ImageFormatRGB16_565;\n-#else\n     return gfxASurface::ImageFormatRGB24;\n-#endif\n   case gfxASurface::CONTENT_ALPHA:\n\nLooks like pixman is choking somewhere trying to composite to/from 565 surfaces.  I'd guess a problem with rgba32->565.  Digging.", "creation_time": "2011-03-03T02:23:47Z", "text": "This makes the bug go away\n\ndiff --git a/gfx/layers/ipc/ShadowLayers.cpp b/gfx/layers/ipc/ShadowLayers.cpp\n--- a/gfx/layers/ipc/ShadowLayers.cpp\n+++ b/gfx/layers/ipc/ShadowLayers.cpp\n@@ -393,21 +393,17 @@ ShadowLayerForwarder::GetParentBackendTy\n   return mParentBackend;\n }\n \n static gfxASurface::gfxImageFormat\n OptimalFormatFor(gfxASurface::gfxContentType aContent)\n {\n   switch (aContent) {\n   case gfxASurface::CONTENT_COLOR:\n-#ifdef MOZ_GFX_OPTIMIZE_MOBILE\n-    return gfxASurface::ImageFormatRGB16_565;\n-#else\n     return gfxASurface::ImageFormatRGB24;\n-#endif\n   case gfxASurface::CONTENT_ALPHA:\n\nLooks like pixman is choking somewhere trying to composite to/from 565 surfaces.  I'd guess a problem with rgba32->565.  Digging.", "count": 4, "creator": "cjones.bugs@gmail.com", "tags": [], "bug_id": 637828, "author": "cjones.bugs@gmail.com", "is_private": false, "time": "2011-03-03T02:23:47Z", "attachment_id": null}, {"bug_id": 637828, "tags": [], "creator": "cjones.bugs@gmail.com", "time": "2011-03-03T03:55:18Z", "count": 5, "raw_text": "This bug is gone when I --enable-system-cairo for a local cairo 1.10 build with my distro's pixman (0.18.4).\n\nHalp!  Do we cherry-pick upstream patches in this situation?", "id": 5317461, "text": "This bug is gone when I --enable-system-cairo for a local cairo 1.10 build with my distro's pixman (0.18.4).\n\nHalp!  Do we cherry-pick upstream patches in this situation?", "creation_time": "2011-03-03T03:55:18Z", "is_private": false, "author": "cjones.bugs@gmail.com", "attachment_id": null}, {"is_private": false, "time": "2011-03-03T04:00:54Z", "attachment_id": null, "creation_time": "2011-03-03T04:00:54Z", "text": "Judging by the date of the git commit we've got in-tree, it looks we're on pixman ~0.18.2.  Is that right?", "id": 5317469, "raw_text": "Judging by the date of the git commit we've got in-tree, it looks we're on pixman ~0.18.2.  Is that right?", "creator": "cjones.bugs@gmail.com", "count": 6, "tags": [], "bug_id": 637828, "author": "cjones.bugs@gmail.com"}, {"bug_id": 637828, "creator": "jmuizelaar@mozilla.com", "tags": [], "count": 7, "text": "The pixman in tree should be from between 0.19.4 and 0.19.6. Does the patch on bug 604168 fix it for you?", "creation_time": "2011-03-03T04:29:06Z", "raw_text": "The pixman in tree should be from between 0.19.4 and 0.19.6. Does the patch on bug 604168 fix it for you?", "id": 5317508, "author": "jmuizelaar@mozilla.com", "time": "2011-03-03T04:29:06Z", "is_private": false, "attachment_id": null}, {"author": "cjones.bugs@gmail.com", "raw_text": "Yeah, I got confused by an out-of-date README and then sidetracked for a bit.  pixman-version.h says 0.19.1, FWIW.\n\nI will give that a shot.", "id": 5317510, "text": "Yeah, I got confused by an out-of-date README and then sidetracked for a bit.  pixman-version.h says 0.19.1, FWIW.\n\nI will give that a shot.", "creation_time": "2011-03-03T04:30:29Z", "bug_id": 637828, "tags": [], "count": 8, "creator": "cjones.bugs@gmail.com", "attachment_id": null, "is_private": false, "time": "2011-03-03T04:30:29Z"}, {"raw_text": "Bad news: I tried a local build of cairo 1.10 with a local build of pixman 0.21.2 (being careful to check LD_DEBUG), and the bug was gone.  That's sort of good.\n\nBut, with a local build of pixman 0.18.4 running with local cairo 1.10, the bug was also gone.  0.18.4 looks to be older than our in-tree pixman.  That means the remaining possible culprits are\n - cairo 1.9 vs 1.10 (sigh)\n - some patch we have applied to pixman in-tree\n - some patch we have applied to cairo in-tree\n\n(The bug also doesn't appear with in-tree cairo+pixman when I force the Xlib backend to use rgb565 surfaces instead of rgb24, but that's not too surprising.)", "id": 5317668, "text": "Bad news: I tried a local build of cairo 1.10 with a local build of pixman 0.21.2 (being careful to check LD_DEBUG), and the bug was gone.  That's sort of good.\n\nBut, with a local build of pixman 0.18.4 running with local cairo 1.10, the bug was also gone.  0.18.4 looks to be older than our in-tree pixman.  That means the remaining possible culprits are\n - cairo 1.9 vs 1.10 (sigh)\n - some patch we have applied to pixman in-tree\n - some patch we have applied to cairo in-tree\n\n(The bug also doesn't appear with in-tree cairo+pixman when I force the Xlib backend to use rgb565 surfaces instead of rgb24, but that's not too surprising.)", "creation_time": "2011-03-03T05:59:59Z", "bug_id": 637828, "count": 9, "creator": "cjones.bugs@gmail.com", "tags": [], "author": "cjones.bugs@gmail.com", "is_private": false, "time": "2011-03-03T05:59:59Z", "attachment_id": null}, {"author": "cjones.bugs@gmail.com", "text": "In-tree cairo claims to be 1.9.5 (cairo-features.h.in), not sure how accurate that is.  I tried some cairo versions around there\n\n1.9.2 - no tee backend\n1.9.4 - crash\n1.9.6 - crash\n1.9.8 - OK\n\nSo, maybe something was fixed around 1.9.6-1.9.8.", "creation_time": "2011-03-03T06:41:00Z", "raw_text": "In-tree cairo claims to be 1.9.5 (cairo-features.h.in), not sure how accurate that is.  I tried some cairo versions around there\n\n1.9.2 - no tee backend\n1.9.4 - crash\n1.9.6 - crash\n1.9.8 - OK\n\nSo, maybe something was fixed around 1.9.6-1.9.8.", "id": 5317718, "bug_id": 637828, "tags": [], "count": 10, "creator": "cjones.bugs@gmail.com", "attachment_id": null, "is_private": false, "time": "2011-03-03T06:41:00Z"}, {"attachment_id": null, "is_private": false, "time": "2011-03-03T08:53:28Z", "author": "cjones.bugs@gmail.com", "creation_time": "2011-03-03T08:53:28Z", "text": "I spent some time looking over the cairo log to see if there was anything that looked related to this bug.  Nothing /really/ stood out, though there were a few patches that looked somewhat relevant.  I tried applying them and deps, but turns out that some quite substantial cairo changes, many of them to cairo-image-surface, landed the day after the rev we imported last.  (Not coincidentally, I imagine! :) .)  So attempting to cherry-pick looks to be a lost cause, at least with my cairo-fu.\n\nOne of the substantial changes was http://cgit.freedesktop.org/cairo/commit/?id=b9407af6a4bc792c1bcb52c90aa8a618627bb618, referencing the tantalizing goodies\n\nimage-rgba firefox-talos-gfx-0 342050.17 (342155.88 0.02%) -> 69412.44 (69702.90 0.21%): 4.93x speedup\n\u2588\u2588\u2588\u2589\n[snip]\nimage-rgba firefox-planet-gnome-0 217512.61 (217636.80 0.06%) -> 123341.02 (123641.94 0.12%): 1.76x speedup\n\u258a\n\nIt's of course unclear how those numbers would translate to m-c tip.  This probably wasn't all that appealing in the past because we haven't used the image backend for anything \"serious\".  We are now, on mobile.  I don't think this is news to anyone here.\n\nSo, I would be remiss to not pursue this: What would it take to land cairo 1.10 for fennec 4, if *only* for fennec 4?  We have a patch in bug 562746.  We can land cairo 1.10 on a branch if need be.  Some folks who can hack on regression fixes are clear of their FF4 blockers (like me).\n\nThe alternative, possibly leaving this bug and maybe others unfixed and leaving possibly significant perf wins on the table, because we end up shipping a year-out-of-date cairo, doesn't sound very good.\n\nLet the flames begin!", "id": 5317909, "raw_text": "I spent some time looking over the cairo log to see if there was anything that looked related to this bug.  Nothing /really/ stood out, though there were a few patches that looked somewhat relevant.  I tried applying them and deps, but turns out that some quite substantial cairo changes, many of them to cairo-image-surface, landed the day after the rev we imported last.  (Not coincidentally, I imagine! :) .)  So attempting to cherry-pick looks to be a lost cause, at least with my cairo-fu.\n\nOne of the substantial changes was http://cgit.freedesktop.org/cairo/commit/?id=b9407af6a4bc792c1bcb52c90aa8a618627bb618, referencing the tantalizing goodies\n\nimage-rgba firefox-talos-gfx-0 342050.17 (342155.88 0.02%) -> 69412.44 (69702.90 0.21%): 4.93x speedup\n\u2588\u2588\u2588\u2589\n[snip]\nimage-rgba firefox-planet-gnome-0 217512.61 (217636.80 0.06%) -> 123341.02 (123641.94 0.12%): 1.76x speedup\n\u258a\n\nIt's of course unclear how those numbers would translate to m-c tip.  This probably wasn't all that appealing in the past because we haven't used the image backend for anything \"serious\".  We are now, on mobile.  I don't think this is news to anyone here.\n\nSo, I would be remiss to not pursue this: What would it take to land cairo 1.10 for fennec 4, if *only* for fennec 4?  We have a patch in bug 562746.  We can land cairo 1.10 on a branch if need be.  Some folks who can hack on regression fixes are clear of their FF4 blockers (like me).\n\nThe alternative, possibly leaving this bug and maybe others unfixed and leaving possibly significant perf wins on the table, because we end up shipping a year-out-of-date cairo, doesn't sound very good.\n\nLet the flames begin!", "tags": [], "count": 11, "creator": "cjones.bugs@gmail.com", "bug_id": 637828}, {"bug_id": 637828, "tags": [], "creator": "cjones.bugs@gmail.com", "count": 12, "raw_text": "Tentatively setting dep; a cairo expert could probably directly patch this bug or cherry-pick a fix, but that would take some time for me and I'd rather settle comment 11 first.", "id": 5317912, "text": "Tentatively setting dep; a cairo expert could probably directly patch this bug or cherry-pick a fix, but that would take some time for me and I'd rather settle comment 11 first.", "creation_time": "2011-03-03T08:57:34Z", "author": "cjones.bugs@gmail.com", "time": "2011-03-03T08:57:34Z", "is_private": false, "attachment_id": null}, {"author": "cjones.bugs@gmail.com", "attachment_id": null, "bug_id": 637828, "tags": [], "creator": "cjones.bugs@gmail.com", "count": 13, "time": "2011-03-03T09:07:49Z", "raw_text": "Another option which I believe has been bounced around before is shipping a libcairo.so built from scratch and building --enable-system-cairo.  This shouldn't be a problem on android since we don't have to worry about conflicting symbols.", "id": 5317925, "text": "Another option which I believe has been bounced around before is shipping a libcairo.so built from scratch and building --enable-system-cairo.  This shouldn't be a problem on android since we don't have to worry about conflicting symbols.", "creation_time": "2011-03-03T09:07:49Z", "is_private": false}, {"is_private": false, "time": "2011-03-03T09:53:21Z", "attachment_id": null, "raw_text": "That sounds like a reasonable plan", "id": 5317988, "text": "That sounds like a reasonable plan", "creation_time": "2011-03-03T09:53:21Z", "bug_id": 637828, "creator": "roc@ocallahan.org", "count": 14, "tags": [], "author": "roc@ocallahan.org"}, {"author": "siarhei.siamashka@gmail.com", "creator": "siarhei.siamashka@gmail.com", "count": 15, "tags": [], "bug_id": 637828, "id": 5318215, "raw_text": "(In reply to comment #11)\n> So, I would be remiss to not pursue this: What would it take to land cairo 1.10\n> for fennec 4, if *only* for fennec 4?  We have a patch in bug 562746.  We can\n> land cairo 1.10 on a branch if need be.  Some folks who can hack on regression\n> fixes are clear of their FF4 blockers (like me).\n\nThat's a great idea in general. I think that cairo 1.10.x should be now in a *much* better shape than 1.9 snapshots. Once the release schedule for cairo 1.10 had been announced, a lot of people joined testing efforts and found numerous bugs which are now fixed. Also cairo 1.10 now got into some linux distros where additional testing and bugfixing happened.\n\nRegarding fennec, special care needs to be taken not to forget doing cairo_surface_flush/cairo_surface_mark_dirty calls in places where necessary:\nhttp://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-mark-dirty\nhttp://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-flush\n\nNew version of cairo is less forgiving in the cases when this is not done properly (see bug 616700 as an example). Also these flush/dirty calls are only relevant for image backend and are for example noops for xlib, so the bugs may show up in fennec only.\n\nAlso in the linux world, the in-tree pixman/cairo copies are irrelevant because everyone is using system libraries anyway.", "creation_time": "2011-03-03T13:13:53Z", "text": "(In reply to comment #11)\n> So, I would be remiss to not pursue this: What would it take to land cairo 1.10\n> for fennec 4, if *only* for fennec 4?  We have a patch in bug 562746.  We can\n> land cairo 1.10 on a branch if need be.  Some folks who can hack on regression\n> fixes are clear of their FF4 blockers (like me).\n\nThat's a great idea in general. I think that cairo 1.10.x should be now in a *much* better shape than 1.9 snapshots. Once the release schedule for cairo 1.10 had been announced, a lot of people joined testing efforts and found numerous bugs which are now fixed. Also cairo 1.10 now got into some linux distros where additional testing and bugfixing happened.\n\nRegarding fennec, special care needs to be taken not to forget doing cairo_surface_flush/cairo_surface_mark_dirty calls in places where necessary:\nhttp://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-mark-dirty\nhttp://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-flush\n\nNew version of cairo is less forgiving in the cases when this is not done properly (see bug 616700 as an example). Also these flush/dirty calls are only relevant for image backend and are for example noops for xlib, so the bugs may show up in fennec only.\n\nAlso in the linux world, the in-tree pixman/cairo copies are irrelevant because everyone is using system libraries anyway.", "attachment_id": null, "time": "2011-03-03T13:13:53Z", "is_private": false}, {"author": "siarhei.siamashka@gmail.com", "tags": [], "count": 16, "creator": "siarhei.siamashka@gmail.com", "bug_id": 637828, "id": 5318251, "raw_text": "(In reply to comment #15)\n> Regarding fennec, special care needs to be taken not to forget doing\n> cairo_surface_flush/cairo_surface_mark_dirty calls in places where necessary:\n> http://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-mark-dirty\n> http://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-flush\n\nAnd I think that in order to make this missing cairo_surface_flush/cairo_surface_mark_dirty calls hunt more efficient, the use of valgrind API could be used. We need to track any accesses to surface memory buffers performed by anything other than cairo/pixman and happening at a wrong time (not between flush and dirty calls). And this is exactly what valgrind can do easily.", "creation_time": "2011-03-03T13:37:31Z", "text": "(In reply to comment #15)\n> Regarding fennec, special care needs to be taken not to forget doing\n> cairo_surface_flush/cairo_surface_mark_dirty calls in places where necessary:\n> http://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-mark-dirty\n> http://cairographics.org/manual-1.0.2/cairo-cairo-surface-t.html#cairo-surface-flush\n\nAnd I think that in order to make this missing cairo_surface_flush/cairo_surface_mark_dirty calls hunt more efficient, the use of valgrind API could be used. We need to track any accesses to surface memory buffers performed by anything other than cairo/pixman and happening at a wrong time (not between flush and dirty calls). And this is exactly what valgrind can do easily.", "attachment_id": null, "time": "2011-03-03T13:37:31Z", "is_private": false}, {"bug_id": 637828, "tags": [], "count": 17, "creator": "ben@stechz.com", "raw_text": "I'm not confident about upgrading cairo. We would be adding a lot of unknowns for Fennec's release candidate. Updating cairo is the kind of thing we want to do at the beginning of the release cycle.\n\nAre there any other solutions that can circumvent this bug?", "id": 5318985, "text": "I'm not confident about upgrading cairo. We would be adding a lot of unknowns for Fennec's release candidate. Updating cairo is the kind of thing we want to do at the beginning of the release cycle.\n\nAre there any other solutions that can circumvent this bug?", "creation_time": "2011-03-03T17:32:24Z", "author": "ben@stechz.com", "time": "2011-03-03T17:32:24Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "is_private": false, "time": "2011-03-03T20:20:35Z", "author": "ben@stechz.com", "raw_text": "Siarhei: I've found several places where we are not flushing and marking dirty. I could use some help figuring out how to set up valgrind to find the instances we care about.", "id": 5319590, "text": "Siarhei: I've found several places where we are not flushing and marking dirty. I could use some help figuring out how to set up valgrind to find the instances we care about.", "creation_time": "2011-03-03T20:20:35Z", "bug_id": 637828, "tags": [], "creator": "ben@stechz.com", "count": 18}, {"attachment_id": null, "time": "2011-03-03T21:50:24Z", "is_private": false, "author": "siarhei.siamashka@gmail.com", "bug_id": 637828, "creator": "siarhei.siamashka@gmail.com", "count": 19, "tags": [], "text": "It should be possible to patch cairo to make use of VALGRIND_MAKE_MEM_DEFINED and VALGRIND_MAKE_MEM_NOACCESS or VALGRIND_MAKE_MEM_UNDEFINED client requests:\n    http://valgrind.org/docs/manual/mc-manual.html\n\nSo that 'cairo_image_surface_create_for_data' and 'cairo_surface_mark_dirty' would use VALGRIND_MAKE_MEM_NOACCESS on the surface memory buffer and 'cairo_surface_flush' would use VALGRIND_MAKE_MEM_DEFINED. After this is done, valgrind would complain about any attempts to access this buffer when it is not marked as 'defined'. Additionally either every cairo function also should mark buffer as defined on entry and restore its original state on exit in order not to catch itself, or just the valgrind log needs to be filtered to ignore any memory accesses which have cairo functions showing up in a backtrace.", "creation_time": "2011-03-03T21:50:24Z", "raw_text": "It should be possible to patch cairo to make use of VALGRIND_MAKE_MEM_DEFINED and VALGRIND_MAKE_MEM_NOACCESS or VALGRIND_MAKE_MEM_UNDEFINED client requests:\n    http://valgrind.org/docs/manual/mc-manual.html\n\nSo that 'cairo_image_surface_create_for_data' and 'cairo_surface_mark_dirty' would use VALGRIND_MAKE_MEM_NOACCESS on the surface memory buffer and 'cairo_surface_flush' would use VALGRIND_MAKE_MEM_DEFINED. After this is done, valgrind would complain about any attempts to access this buffer when it is not marked as 'defined'. Additionally either every cairo function also should mark buffer as defined on entry and restore its original state on exit in order not to catch itself, or just the valgrind log needs to be filtered to ignore any memory accesses which have cairo functions showing up in a backtrace.", "id": 5319902}, {"is_private": false, "time": "2011-03-03T22:14:06Z", "attachment_id": null, "id": 5320010, "raw_text": "Is there any easy function to call that gives me the number of bytes for an image, given its format, width, height, and stride?", "creation_time": "2011-03-03T22:14:06Z", "text": "Is there any easy function to call that gives me the number of bytes for an image, given its format, width, height, and stride?", "creator": "ben@stechz.com", "tags": [], "count": 20, "bug_id": 637828, "author": "ben@stechz.com"}, {"is_private": false, "creation_time": "2011-03-03T22:31:12Z", "text": "No, need to compute from GetSize() and BytePerPixelFromFormat(). But total size isn't typically useful information on its own for an arbitrary image surface, except for accounting; what are you trying to do?", "id": 5320071, "raw_text": "No, need to compute from GetSize() and BytePerPixelFromFormat(). But total size isn't typically useful information on its own for an arbitrary image surface, except for accounting; what are you trying to do?", "tags": [], "creator": "cjones.bugs@gmail.com", "count": 21, "time": "2011-03-03T22:31:12Z", "bug_id": 637828, "attachment_id": null, "author": "cjones.bugs@gmail.com"}, {"author": "ben@stechz.com", "creator": "ben@stechz.com", "count": 22, "tags": [], "bug_id": 637828, "id": 5320078, "raw_text": "VALGRIND_MAKE_MEM_DEFINED needs to know the size of the memory region.", "creation_time": "2011-03-03T22:32:15Z", "text": "VALGRIND_MAKE_MEM_DEFINED needs to know the size of the memory region.", "attachment_id": null, "time": "2011-03-03T22:32:15Z", "is_private": false}, {"attachment_id": null, "time": "2011-03-03T22:33:17Z", "is_private": false, "author": "cjones.bugs@gmail.com", "tags": [], "count": 23, "creator": "cjones.bugs@gmail.com", "bug_id": 637828, "creation_time": "2011-03-03T22:33:17Z", "text": "Yeah, you can't do that unless the stride is the width*bpp.  Need to mark images row-by-row otherwise.", "id": 5320086, "raw_text": "Yeah, you can't do that unless the stride is the width*bpp.  Need to mark images row-by-row otherwise."}, {"bug_id": 637828, "creator": "cjones.bugs@gmail.com", "count": 24, "time": "2011-03-03T22:34:08Z", "tags": [], "text": "(Probably simplest just to use a single row-by-row impl, since this isn't terribly perf critical.)", "creation_time": "2011-03-03T22:34:08Z", "is_private": false, "raw_text": "(Probably simplest just to use a single row-by-row impl, since this isn't terribly perf critical.)", "id": 5320089, "author": "cjones.bugs@gmail.com", "attachment_id": null}, {"text": "If someone can come up with a reduced test case, that might help here.", "creation_time": "2011-03-04T00:17:50Z", "raw_text": "If someone can come up with a reduced test case, that might help here.", "id": 5320421, "bug_id": 637828, "creator": "jmuizelaar@mozilla.com", "tags": [], "count": 25, "author": "jmuizelaar@mozilla.com", "is_private": false, "time": "2011-03-04T00:17:50Z", "attachment_id": null}, {"creation_time": "2011-03-04T00:24:05Z", "text": "I tried for a bit, but this page is animating using jquery junk and I couldn't reproduce the problem with tests that just animated the opacity of <img>'s and <div>'s and text.  In fact, it was after I tried to make a small test case that I asked you about cairo-trace last night ;).\n\nI'm sure it's doable with some work.", "id": 5320440, "raw_text": "I tried for a bit, but this page is animating using jquery junk and I couldn't reproduce the problem with tests that just animated the opacity of <img>'s and <div>'s and text.  In fact, it was after I tried to make a small test case that I asked you about cairo-trace last night ;).\n\nI'm sure it's doable with some work.", "tags": [], "count": 26, "creator": "cjones.bugs@gmail.com", "bug_id": 637828, "author": "cjones.bugs@gmail.com", "is_private": false, "time": "2011-03-04T00:24:05Z", "attachment_id": null}, {"author": "ben@stechz.com", "creation_time": "2011-03-04T00:25:55Z", "text": "I think the key features that tickle this bug are:\n1) Something with opacity and gradients\n2) Some sort of timed invalidation involving these gradients", "id": 5320443, "raw_text": "I think the key features that tickle this bug are:\n1) Something with opacity and gradients\n2) Some sort of timed invalidation involving these gradients", "tags": [], "count": 27, "creator": "ben@stechz.com", "bug_id": 637828, "attachment_id": null, "is_private": false, "time": "2011-03-04T00:25:55Z"}, {"author": "jmuizelaar@mozilla.com", "bug_id": 637828, "count": 28, "tags": [], "creator": "jmuizelaar@mozilla.com", "text": "Removing the use of slow operation 'SRC with a mask' helps this problem.", "creation_time": "2011-03-04T18:48:20Z", "raw_text": "Removing the use of slow operation 'SRC with a mask' helps this problem.", "id": 5322279, "attachment_id": null, "time": "2011-03-04T18:48:20Z", "is_private": false}, {"is_private": false, "time": "2011-03-04T21:09:26Z", "attachment_id": 516979, "raw_text": "I don't see any reason to use SOURCE here. Pixman will already turn OVER with RGB24 source into COPY when it can. Plus if we use SOURCE with a MASK it will turn into a very slow path, including hitting pixman's general code.", "id": 5322669, "text": "Created attachment 516979\nRemove unneeded optimization\n\nI don't see any reason to use SOURCE here. Pixman will already turn OVER with RGB24 source into COPY when it can. Plus if we use SOURCE with a MASK it will turn into a very slow path, including hitting pixman's general code.", "creation_time": "2011-03-04T21:09:26Z", "bug_id": 637828, "tags": [], "count": 29, "creator": "jmuizelaar@mozilla.com", "author": "jmuizelaar@mozilla.com"}, {"count": 30, "time": "2011-03-04T21:18:13Z", "creator": "jmuizelaar@mozilla.com", "tags": [], "bug_id": 637828, "id": 5322690, "raw_text": "", "is_private": false, "creation_time": "2011-03-04T21:18:13Z", "text": "Created attachment 516983\nVersion that builds", "attachment_id": 516983, "author": "jmuizelaar@mozilla.com"}, {"attachment_id": null, "is_private": false, "time": "2011-03-04T21:26:29Z", "author": "cjones.bugs@gmail.com", "text": "This patch sounds good on its own, but is the underlying bug something we're likely to trip on elsewhere?", "creation_time": "2011-03-04T21:26:29Z", "raw_text": "This patch sounds good on its own, but is the underlying bug something we're likely to trip on elsewhere?", "id": 5322709, "bug_id": 637828, "count": 31, "creator": "cjones.bugs@gmail.com", "tags": []}, {"time": "2011-03-04T22:57:46Z", "is_private": false, "attachment_id": null, "creator": "joe@drew.ca", "count": 32, "tags": [], "bug_id": 637828, "creation_time": "2011-03-04T22:57:46Z", "text": "Jeff tells me that the ADD composite operation seems to be wrong, but it might be the input to that operation in clip_and_composite_source.", "id": 5322938, "raw_text": "Jeff tells me that the ADD composite operation seems to be wrong, but it might be the input to that operation in clip_and_composite_source.", "author": "joe@drew.ca"}, {"author": "joe@drew.ca", "count": 33, "tags": [], "creator": "joe@drew.ca", "bug_id": 637828, "id": 5322995, "raw_text": "This is removing an optimization that was added in bug 418494 - an optimization that Jeff actually questioned in bug 418494 comment 4. Further, Jeff tells me that pixman is already smart enough to optimize to source when it makes sense, like when we have no alpha channel. Finally, Jeff also tells me that using source requires us to draw through a mask, while over can be a lot faster.\n\nSo, as long as this doesn't regress us on Try, I'm happy with this patch!", "creation_time": "2011-03-04T23:25:27Z", "text": "Comment on attachment 516983\nVersion that builds\n\nThis is removing an optimization that was added in bug 418494 - an optimization that Jeff actually questioned in bug 418494 comment 4. Further, Jeff tells me that pixman is already smart enough to optimize to source when it makes sense, like when we have no alpha channel. Finally, Jeff also tells me that using source requires us to draw through a mask, while over can be a lot faster.\n\nSo, as long as this doesn't regress us on Try, I'm happy with this patch!", "attachment_id": 516983, "time": "2011-03-04T23:25:27Z", "is_private": false}, {"author": "jmuizelaar@mozilla.com", "attachment_id": null, "bug_id": 637828, "tags": [], "count": 34, "creator": "jmuizelaar@mozilla.com", "time": "2011-03-05T18:54:22Z", "raw_text": "(In reply to comment #32)\n> Jeff tells me that the ADD composite operation seems to be wrong, but it might\n> be the input to that operation in clip_and_composite_source.\n\nI've confirmed that inputs to the composite operation\nat http://mxr.mozilla.org/mozilla-central/source/gfx/cairo/cairo/src/cairo-surface-fallback.c#365 are fine and the result is wrong.\n\nThis suggests that compositing a scaled RGB24 source with a A8 mask, the ADD operation and a RGB565 destination surface is broken.\n\nKnowing this should make this much easier to fix. Unfortunately, I may not be able to debug this soon (before Monday) So I'd be happy if someone else took a look.", "id": 5324228, "text": "(In reply to comment #32)\n> Jeff tells me that the ADD composite operation seems to be wrong, but it might\n> be the input to that operation in clip_and_composite_source.\n\nI've confirmed that inputs to the composite operation\nat http://mxr.mozilla.org/mozilla-central/source/gfx/cairo/cairo/src/cairo-surface-fallback.c#365 are fine and the result is wrong.\n\nThis suggests that compositing a scaled RGB24 source with a A8 mask, the ADD operation and a RGB565 destination surface is broken.\n\nKnowing this should make this much easier to fix. Unfortunately, I may not be able to debug this soon (before Monday) So I'd be happy if someone else took a look.", "creation_time": "2011-03-05T18:54:22Z", "is_private": false}, {"is_private": false, "time": "2011-03-05T18:55:44Z", "attachment_id": null, "creation_time": "2011-03-05T18:55:44Z", "text": "This is exciting news! I'm no expert, so if anyone else wants to look please do. In the mean time, I think I'll poke around...", "id": 5324231, "raw_text": "This is exciting news! I'm no expert, so if anyone else wants to look please do. In the mean time, I think I'll poke around...", "count": 35, "tags": [], "creator": "ben@stechz.com", "bug_id": 637828, "author": "ben@stechz.com"}, {"is_private": false, "time": "2011-03-05T20:18:09Z", "attachment_id": null, "raw_text": "BTW, there is still another corruption bug, even when all paths to cairo-surface-fallback.c:365 are gone. You can see it on the download button. If these are the same bug, perhaps there's an underlying draw path to blame.", "id": 5324291, "text": "BTW, there is still another corruption bug, even when all paths to cairo-surface-fallback.c:365 are gone. You can see it on the download button. If these are the same bug, perhaps there's an underlying draw path to blame.", "creation_time": "2011-03-05T20:18:09Z", "bug_id": 637828, "count": 36, "creator": "ben@stechz.com", "tags": [], "author": "ben@stechz.com"}, {"bug_id": 637828, "creator": "ben@stechz.com", "tags": [], "count": 37, "time": "2011-03-05T20:26:06Z", "raw_text": "No luck debugging this. We'll need someone else to take a look.", "id": 5324302, "text": "No luck debugging this. We'll need someone else to take a look.", "is_private": false, "creation_time": "2011-03-05T20:26:06Z", "author": "ben@stechz.com", "attachment_id": null}, {"bug_id": 637828, "time": "2011-03-05T22:24:30Z", "creator": "jmuizelaar@mozilla.com", "tags": [], "count": 38, "raw_text": "I tried reproducing the problem with a standalone test case. So either, there's something else special going on here or I missed something.", "id": 5324411, "text": "I tried reproducing the problem with a standalone test case. So either, there's something else special going on here or I missed something.", "is_private": false, "creation_time": "2011-03-05T22:24:30Z", "author": "jmuizelaar@mozilla.com", "attachment_id": null}, {"is_private": false, "time": "2011-03-06T03:44:35Z", "attachment_id": null, "id": 5324992, "raw_text": "Note that I haven't seen any evidence of try Talos results, which is what I want before landing this change.", "creation_time": "2011-03-06T03:44:35Z", "text": "Note that I haven't seen any evidence of try Talos results, which is what I want before landing this change.", "count": 39, "tags": [], "creator": "joe@drew.ca", "bug_id": 637828, "author": "joe@drew.ca"}, {"attachment_id": null, "is_private": false, "time": "2011-03-07T17:35:06Z", "author": "jmuizelaar@mozilla.com", "raw_text": "The problem is:\nthe destination pixman image has a transform.\n\nCairo does not expect this.", "id": 5327452, "text": "The problem is:\nthe destination pixman image has a transform.\n\nCairo does not expect this.", "creation_time": "2011-03-07T17:35:06Z", "bug_id": 637828, "tags": [], "creator": "jmuizelaar@mozilla.com", "count": 40}, {"id": 5327809, "raw_text": "(In reply to comment #40)\n> The problem is:\n> the destination pixman image has a transform.\n> \n> Cairo does not expect this.\n\nIt seems like this happens when we use the destination as a transformed source. The solution to this problem, is not obvious. Upstream has completely rewritten this code.", "creation_time": "2011-03-07T19:27:47Z", "text": "(In reply to comment #40)\n> The problem is:\n> the destination pixman image has a transform.\n> \n> Cairo does not expect this.\n\nIt seems like this happens when we use the destination as a transformed source. The solution to this problem, is not obvious. Upstream has completely rewritten this code.", "count": 41, "tags": [], "creator": "jmuizelaar@mozilla.com", "bug_id": 637828, "author": "jmuizelaar@mozilla.com", "is_private": false, "time": "2011-03-07T19:27:47Z", "attachment_id": null}, {"author": "jmuizelaar@mozilla.com", "raw_text": "This fixes the problem for me. Hopefully, it fixes all the other problem too.", "id": 5328298, "text": "Created attachment 517529\nReset the transform on the destination\n\nThis fixes the problem for me. Hopefully, it fixes all the other problem too.", "creation_time": "2011-03-07T21:47:49Z", "bug_id": 637828, "creator": "jmuizelaar@mozilla.com", "count": 42, "tags": [], "attachment_id": 517529, "is_private": false, "time": "2011-03-07T21:47:49Z"}, {"bug_id": 637828, "creator": "joe@drew.ca", "time": "2011-03-07T21:54:48Z", "count": 43, "tags": [], "raw_text": "too much patch", "id": 5328329, "text": "Comment on attachment 517529\nReset the transform on the destination\n\ntoo much patch", "is_private": false, "creation_time": "2011-03-07T21:54:48Z", "author": "joe@drew.ca", "attachment_id": 517529}, {"bug_id": 637828, "creator": "jmuizelaar@mozilla.com", "count": 44, "tags": [], "raw_text": "This time without the debugging code.", "id": 5328337, "text": "Created attachment 517535\nReset the transform on the destination v2\n\nThis time without the debugging code.", "creation_time": "2011-03-07T21:57:27Z", "author": "jmuizelaar@mozilla.com", "time": "2011-03-07T21:57:27Z", "is_private": false, "attachment_id": 517535}, {"author": "joe@drew.ca", "bug_id": 637828, "tags": [], "creator": "joe@drew.ca", "count": 45, "raw_text": "just enough patch", "id": 5328351, "text": "Comment on attachment 517535\nReset the transform on the destination v2\n\njust enough patch", "creation_time": "2011-03-07T22:01:52Z", "attachment_id": 517535, "time": "2011-03-07T22:01:52Z", "is_private": false}, {"is_private": false, "time": "2011-03-07T22:04:55Z", "attachment_id": null, "creation_time": "2011-03-07T22:04:55Z", "text": "It seems like the code at fault here is really pixman. I think that pixman should probably not be using a transformed fetch on the destination image under any circumstances.\n\nFor example, in this case we're fetching destination pixels from a different part of the image than we're storing them to. I can't see any reason for wanting this behaviour.", "id": 5328356, "raw_text": "It seems like the code at fault here is really pixman. I think that pixman should probably not be using a transformed fetch on the destination image under any circumstances.\n\nFor example, in this case we're fetching destination pixels from a different part of the image than we're storing them to. I can't see any reason for wanting this behaviour.", "count": 46, "creator": "jmuizelaar@mozilla.com", "tags": [], "bug_id": 637828, "author": "jmuizelaar@mozilla.com"}, {"text": "This fixes everything that updating cairo fixed for me! Let's get both patches in!", "creation_time": "2011-03-07T22:14:42Z", "raw_text": "This fixes everything that updating cairo fixed for me! Let's get both patches in!", "id": 5328397, "bug_id": 637828, "count": 47, "tags": [], "creator": "ben@stechz.com", "author": "ben@stechz.com", "is_private": false, "time": "2011-03-07T22:14:42Z", "attachment_id": null}, {"creator": "jmuizelaar@mozilla.com", "tags": [], "count": 48, "time": "2011-03-07T22:30:00Z", "bug_id": 637828, "id": 5328452, "raw_text": "(In reply to comment #47)\n> This fixes everything that updating cairo fixed for me! Let's get both patches\n> in!\n\nI'm not in as much of a rush to take the first patch because of any potential risk. If someone can show a measurable difference, it would make it more attractive.", "creation_time": "2011-03-07T22:30:00Z", "is_private": false, "text": "(In reply to comment #47)\n> This fixes everything that updating cairo fixed for me! Let's get both patches\n> in!\n\nI'm not in as much of a rush to take the first patch because of any potential risk. If someone can show a measurable difference, it would make it more attractive.", "attachment_id": null, "author": "jmuizelaar@mozilla.com"}, {"bug_id": 637828, "creator": "jmuizelaar@mozilla.com", "tags": [], "time": "2011-03-08T00:19:26Z", "count": 49, "raw_text": "Here's a final version ready for pushing.", "id": 5328800, "text": "Created attachment 517578\nReset the transform on the destination v3\n\nHere's a final version ready for pushing.", "is_private": false, "creation_time": "2011-03-08T00:19:26Z", "author": "jmuizelaar@mozilla.com", "attachment_id": 517578}, {"author": "pavlov@pavlov.net", "creator": "pavlov@pavlov.net", "tags": [], "count": 50, "bug_id": 637828, "creation_time": "2011-03-08T00:37:26Z", "text": "*** Bug 616638 has been marked as a duplicate of this bug. ***", "id": 5328859, "raw_text": "", "attachment_id": null, "time": "2011-03-08T00:37:26Z", "is_private": false}, {"attachment_id": null, "is_private": false, "time": "2011-03-08T00:37:49Z", "author": "pavlov@pavlov.net", "raw_text": "", "id": 5328866, "text": "*** Bug 610344 has been marked as a duplicate of this bug. ***", "creation_time": "2011-03-08T00:37:49Z", "bug_id": 637828, "tags": [], "count": 51, "creator": "pavlov@pavlov.net"}, {"bug_id": 637828, "tags": [], "creator": "ben@stechz.com", "time": "2011-03-08T00:50:15Z", "count": 52, "text": "Pushed http://hg.mozilla.org/mozilla-central/rev/6dab3f1dfa0e\n\nLeaving open for other patch.", "is_private": false, "creation_time": "2011-03-08T00:50:15Z", "raw_text": "Pushed http://hg.mozilla.org/mozilla-central/rev/6dab3f1dfa0e\n\nLeaving open for other patch.", "id": 5328907, "author": "ben@stechz.com", "attachment_id": null}, {"text": "(In reply to comment #46)\n> It seems like the code at fault here is really pixman. I think that pixman\n> should probably not be using a transformed fetch on the destination image under\n> any circumstances.\n\nI wonder if this is actually fixed in pixman already: http://cgit.freedesktop.org/pixman/commit/?id=7f4eabbeec92e55fd8f812c0e5d8568eacbb633d", "creation_time": "2011-03-08T04:39:20Z", "is_private": false, "raw_text": "(In reply to comment #46)\n> It seems like the code at fault here is really pixman. I think that pixman\n> should probably not be using a transformed fetch on the destination image under\n> any circumstances.\n\nI wonder if this is actually fixed in pixman already: http://cgit.freedesktop.org/pixman/commit/?id=7f4eabbeec92e55fd8f812c0e5d8568eacbb633d", "id": 5329376, "bug_id": 637828, "time": "2011-03-08T04:39:20Z", "creator": "siarhei.siamashka@gmail.com", "count": 53, "tags": [], "author": "siarhei.siamashka@gmail.com", "attachment_id": null}, {"creator": "arendsf@gmail.com", "tags": [], "count": 54, "bug_id": 637828, "id": 5343155, "raw_text": "", "creation_time": "2011-03-14T14:59:19Z", "text": "Created attachment 519141\nAnother use case: \"ghost pixels\" when panning regular text", "author": "arendsf@gmail.com", "time": "2011-03-14T14:59:19Z", "is_private": false, "attachment_id": 519141}, {"creator": "mbeltzner@gmail.com", "tags": [], "count": 55, "bug_id": 637828, "creation_time": "2011-03-14T15:03:41Z", "text": "Should we also take this on the relbranch?", "id": 5343162, "raw_text": "Should we also take this on the relbranch?", "author": "mbeltzner@gmail.com", "time": "2011-03-14T15:03:41Z", "is_private": false, "attachment_id": null}, {"id": 5343169, "raw_text": "Removing - jrmuizel tells me I'm seeing a different bug!", "creation_time": "2011-03-14T15:05:29Z", "text": "Removing - jrmuizel tells me I'm seeing a different bug!", "count": 56, "tags": [], "creator": "mbeltzner@gmail.com", "bug_id": 637828, "author": "mbeltzner@gmail.com", "is_private": false, "time": "2011-03-14T15:05:29Z", "attachment_id": null}, {"author": "mbrubeck@limpet.net", "creation_time": "2011-03-14T15:13:16Z", "text": "(In reply to comment #54)\n> Another use case: \"ghost pixels\" when panning regular text\n\nI've filed bug 641506 for that issue, which seems to be newer than this bug.", "id": 5343186, "raw_text": "(In reply to comment #54)\n> Another use case: \"ghost pixels\" when panning regular text\n\nI've filed bug 641506 for that issue, which seems to be newer than this bug.", "creator": "mbrubeck@limpet.net", "count": 57, "tags": [], "bug_id": 637828, "attachment_id": null, "is_private": false, "time": "2011-03-14T15:13:16Z"}]}}}