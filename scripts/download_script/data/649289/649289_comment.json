{"comments": {}, "bugs": {"649289": {"comments": [{"count": 0, "text": "I cannot figure out whether this is a real race or a false positive\nfrom Helgrind.  But I thought it worth logging.\n\nTEST_PATH=dom/src/threads/test/test_atob.html\n\nRace is reported at the end of the run, and only sometimes.\n\nSUMMARY\n~~~~~~~\n\nWe have one thread (the main thread) in this chain of calls\n\nnsGlobalWindow::FreeInnerObjects\n-> nsDOMThreadService::CancelWorkersForGlobal\n   // at which point it acquires nsDOMThreadService::mMonitor\n   -> nsDOMThreadService::TriggerOperationCallbackForPool\n      -> JS_GetContextPrivate\n         // and reads JSContext::data\n\nLater a second thread (thread #26) does this\n\nnsThread::ThreadFunc\n-> NS_ProcessNextEvent_P\n   -> nsThread::ProcessNextEvent\n      -> nsThreadPool::Run\n         -> nsDOMWorkerRunnable::Run\n            -> JS_SetContextPrivate\n               // and writes JSContext::data, without holding any lock\n\nI looked at comments on the declaration for class nsDOMThreadService\naround nsDOMThreadService.h:186, to see if describes what mMonitor is\nand is not supposed to protect.  Wasn't much wiser for it though.\n\nOne thing I did notice is that the comment seems out of date:\n\n  // mMonitor protects all access to mWorkersInProgress and\n  // mCreationsInProgress.\n  mozilla::Monitor mMonitor;\n\nThere's no field mCreationsInProgress.  Should it say \"mJSContexts\"\ninstead?\n\n\nRAW RACE REPORT\n~~~~~~~~~~~~~~~\n\nHint: start reading at the 2nd from last stack.  Then look at the 3rd\nfrom last stack.  This is so as to avoid your head exploding from\nseeing too many stacks all at the same time.\n\n\n ---Thread-Announcement------------------------------------------\n\n Thread #26 was created\n    at 0x86486CE: clone (/build/buildd/eglibc-2.11.1/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:77)\n    by 0x4E37172: pthread_create@@GLIBC_2.2.5 (/build/buildd/eglibc-2.11.1/nptl/../nptl/sysdeps/pthread/createthread.c:75)\n    by 0x4C2CA4A: pthread_create_WRK (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:257)\n    by 0x4C2CB5E: pthread_create@* (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:288)\n    by 0x799CE33: _PR_CreateThread (nsprpub/pr/src/pthreads/ptthread.c:432)\n    by 0x799D084: PR_CreateThread (nsprpub/pr/src/pthreads/ptthread.c:515)\n    by 0x6339E08: nsThread::Init() (xpcom/threads/nsThread.cpp:346)\n    by 0x633AB2F: nsThreadManager::NewThread(unsigned int, nsIThread**) (xpcom/threads/nsThreadManager.cpp:245)\n    by 0x633BC13: nsThreadPool::PutEvent(nsIRunnable*) (xpcom/threads/nsThreadPool.cpp:113)\n    by 0x633BDE3: nsThreadPool::Dispatch(nsIRunnable*, unsigned int) (xpcom/threads/nsThreadPool.cpp:258)\n    by 0x5BE1F39: nsDOMThreadService::Dispatch(nsDOMWorker*, nsIRunnable*, unsigned int, int) (dom/src/threads/nsDOMThreadService.cpp:968)\n    by 0x5BE5527: nsDOMWorker::InitializeInternal(nsIScriptGlobalObject*, JSContext*, JSObject*, unsigned int, unsigned long*) (dom/src/threads/nsDOMWorker.cpp:1715)\n\n ---Thread-Announcement------------------------------------------\n\n Thread #1 is the program's root thread\n\n ----------------------------------------------------------------\n\n Lock at 0x1C0F02B8 was first observed\n    at 0x4C2C8C4: pthread_mutex_init (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:430)\n    by 0x7996ED8: PR_NewMonitor (nsprpub/pr/src/pthreads/ptsynch.c:517)\n    by 0x5BE1528: nsDOMThreadService::nsDOMThreadService() (ff-opt/dom/src/threads/../../../dist/include/mozilla/Monitor.h:82)\n    by 0x5BE1678: nsDOMThreadService::GetOrInitService() (dom/src/threads/nsDOMThreadService.cpp:828)\n    by 0x5BE54E2: nsDOMWorker::InitializeInternal(nsIScriptGlobalObject*, JSContext*, JSObject*, unsigned int, unsigned long*) (dom/src/threads/nsDOMWorker.cpp:1707)\n    by 0x5BE58F0: nsDOMWorker::Initialize(nsISupports*, JSContext*, JSObject*, unsigned int, unsigned long*) (dom/src/threads/nsDOMWorker.cpp:1592)\n    by 0x5BB5661: nsDOMConstructor::Construct(nsIXPConnectWrappedNative*, JSContext*, JSObject*, unsigned int, unsigned long*, unsigned long*, int*) (dom/base/nsDOMClassInfo.cpp:5495)\n    by 0x5BB5961: nsDOMConstructorSH::Construct(nsIXPConnectWrappedNative*, JSContext*, JSObject*, unsigned int, unsigned long*, unsigned long*, int*) (dom/base/nsDOMClassInfo.cpp:10726)\n    by 0x5EB41CA: XPC_WN_Helper_Construct(JSContext*, unsigned int, unsigned long*) (js/src/xpconnect/src/xpcwrappednativejsops.cpp:1062)\n    by 0x65B6A06: js::InvokeConstructor(JSContext*, js::CallArgs const&) (js/src/jscntxtinlines.h:692)\n    by 0x672482B: js::Interpret(JSContext*, JSStackFrame*, unsigned int, JSInterpMode) (js/src/jsinterp.cpp:4636)\n    by 0x65B5AB1: js::RunScript(JSContext*, JSScript*, JSStackFrame*) (js/src/jsinterp.cpp:636)\n\n Possible data race during write of size 8 at 0x1C0D5288 by thread #26\n Locks held: none\n    at 0x655752F: JS_SetContextPrivate (js/src/jsapi.cpp:1062)\n    by 0x5BE2A31: nsDOMWorkerRunnable::Run() (dom/src/threads/nsDOMThreadService.cpp:431)\n    by 0x633BA8B: nsThreadPool::Run() (xpcom/threads/nsThreadPool.cpp:222)\n    by 0x6339778: nsThread::ProcessNextEvent(int, int*) (xpcom/threads/nsThread.cpp:631)\n    by 0x62F9AF9: NS_ProcessNextEvent_P(nsIThread*, int) (ff-opt/xpcom/build/nsThreadUtils.cpp:250)\n    by 0x6339F40: nsThread::ThreadFunc(void*) (xpcom/threads/nsThread.cpp:276)\n    by 0x799CACC: _pt_root (nsprpub/pr/src/pthreads/ptthread.c:189)\n    by 0x4C2CBE7: mythread_wrapper (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:221)\n    by 0x4E369C9: start_thread (/build/buildd/eglibc-2.11.1/nptl/pthread_create.c:300)\n    by 0x864870C: clone (/build/buildd/eglibc-2.11.1/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:112)\n\n This conflicts with a previous read of size 8 by thread #1\n Locks held: 1, at address 0x1C0F02B8\n    at 0x6557527: JS_GetContextPrivate (js/src/jsapi.cpp:1055)\n    by 0x5BE0142: nsDOMThreadService::TriggerOperationCallbackForPool(nsDOMWorkerPool*) (dom/src/threads/nsDOMThreadService.cpp:1110)\n    by 0x5BE1080: nsDOMThreadService::CancelWorkersForGlobal(nsIScriptGlobalObject*) (dom/src/threads/nsDOMThreadService.cpp:1166)\n    by 0x5B93D57: nsGlobalWindow::FreeInnerObjects(int) (dom/base/nsGlobalWindow.cpp:1231)\n    by 0x5B9A0B5: nsGlobalWindow::SetDocShell(nsIDocShell*) (dom/base/nsGlobalWindow.cpp:2369)\n    by 0x5F69D7B: nsDocShell::Destroy() (docshell/base/nsDocShell.cpp:4576)\n    by 0x59B3871: nsFrameLoader::Finalize() (content/base/src/nsFrameLoader.cpp:578)\n    by 0x59A9749: nsDocument::MaybeInitializeFinalizeFrameLoaders() (content/base/src/nsDocument.cpp:5503)\n\n Address 0x1C0D5288 is 328 bytes inside a block of size 544 alloc'd\n    at 0x4C26E2C: calloc (/home/sewardj/VgTRUNK/HGDEV2/coregrind/m_replacemalloc/vg_replace_malloc.c:467)\n    by 0x657904A: js_NewContext(JSRuntime*, unsigned long) (js/src/jsutil.h:243)\n    by 0x655BC60: JS_NewContext (js/src/jsapi.cpp:1032)\n    by 0x5BE01A0: nsDOMThreadService::CreateJSContext() (dom/src/threads/nsDOMThreadService.cpp:1053)\n    by 0x5BE031B: nsDOMThreadService::OnThreadCreated() (dom/src/threads/nsDOMThreadService.cpp:1385)\n    by 0x633BA3F: nsThreadPool::Run() (xpcom/threads/nsThreadPool.cpp:175)\n    by 0x6339778: nsThread::ProcessNextEvent(int, int*) (xpcom/threads/nsThread.cpp:631)\n    by 0x62F9AF9: NS_ProcessNextEvent_P(nsIThread*, int) (ff-opt/xpcom/build/nsThreadUtils.cpp:250)\n    by 0x6339F40: nsThread::ThreadFunc(void*) (xpcom/threads/nsThread.cpp:276)\n    by 0x799CACC: _pt_root (nsprpub/pr/src/pthreads/ptthread.c:189)\n    by 0x4C2CBE7: mythread_wrapper (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:221)\n    by 0x4E369C9: start_thread (/build/buildd/eglibc-2.11.1/nptl/pthread_create.c:300)", "time": "2011-04-12T11:41:43Z", "author": "jseward@acm.org", "id": 5403366, "creation_time": "2011-04-12T11:41:43Z", "bug_id": 649289, "raw_text": "I cannot figure out whether this is a real race or a false positive\nfrom Helgrind.  But I thought it worth logging.\n\nTEST_PATH=dom/src/threads/test/test_atob.html\n\nRace is reported at the end of the run, and only sometimes.\n\nSUMMARY\n~~~~~~~\n\nWe have one thread (the main thread) in this chain of calls\n\nnsGlobalWindow::FreeInnerObjects\n-> nsDOMThreadService::CancelWorkersForGlobal\n   // at which point it acquires nsDOMThreadService::mMonitor\n   -> nsDOMThreadService::TriggerOperationCallbackForPool\n      -> JS_GetContextPrivate\n         // and reads JSContext::data\n\nLater a second thread (thread #26) does this\n\nnsThread::ThreadFunc\n-> NS_ProcessNextEvent_P\n   -> nsThread::ProcessNextEvent\n      -> nsThreadPool::Run\n         -> nsDOMWorkerRunnable::Run\n            -> JS_SetContextPrivate\n               // and writes JSContext::data, without holding any lock\n\nI looked at comments on the declaration for class nsDOMThreadService\naround nsDOMThreadService.h:186, to see if describes what mMonitor is\nand is not supposed to protect.  Wasn't much wiser for it though.\n\nOne thing I did notice is that the comment seems out of date:\n\n  // mMonitor protects all access to mWorkersInProgress and\n  // mCreationsInProgress.\n  mozilla::Monitor mMonitor;\n\nThere's no field mCreationsInProgress.  Should it say \"mJSContexts\"\ninstead?\n\n\nRAW RACE REPORT\n~~~~~~~~~~~~~~~\n\nHint: start reading at the 2nd from last stack.  Then look at the 3rd\nfrom last stack.  This is so as to avoid your head exploding from\nseeing too many stacks all at the same time.\n\n\n ---Thread-Announcement------------------------------------------\n\n Thread #26 was created\n    at 0x86486CE: clone (/build/buildd/eglibc-2.11.1/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:77)\n    by 0x4E37172: pthread_create@@GLIBC_2.2.5 (/build/buildd/eglibc-2.11.1/nptl/../nptl/sysdeps/pthread/createthread.c:75)\n    by 0x4C2CA4A: pthread_create_WRK (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:257)\n    by 0x4C2CB5E: pthread_create@* (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:288)\n    by 0x799CE33: _PR_CreateThread (nsprpub/pr/src/pthreads/ptthread.c:432)\n    by 0x799D084: PR_CreateThread (nsprpub/pr/src/pthreads/ptthread.c:515)\n    by 0x6339E08: nsThread::Init() (xpcom/threads/nsThread.cpp:346)\n    by 0x633AB2F: nsThreadManager::NewThread(unsigned int, nsIThread**) (xpcom/threads/nsThreadManager.cpp:245)\n    by 0x633BC13: nsThreadPool::PutEvent(nsIRunnable*) (xpcom/threads/nsThreadPool.cpp:113)\n    by 0x633BDE3: nsThreadPool::Dispatch(nsIRunnable*, unsigned int) (xpcom/threads/nsThreadPool.cpp:258)\n    by 0x5BE1F39: nsDOMThreadService::Dispatch(nsDOMWorker*, nsIRunnable*, unsigned int, int) (dom/src/threads/nsDOMThreadService.cpp:968)\n    by 0x5BE5527: nsDOMWorker::InitializeInternal(nsIScriptGlobalObject*, JSContext*, JSObject*, unsigned int, unsigned long*) (dom/src/threads/nsDOMWorker.cpp:1715)\n\n ---Thread-Announcement------------------------------------------\n\n Thread #1 is the program's root thread\n\n ----------------------------------------------------------------\n\n Lock at 0x1C0F02B8 was first observed\n    at 0x4C2C8C4: pthread_mutex_init (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:430)\n    by 0x7996ED8: PR_NewMonitor (nsprpub/pr/src/pthreads/ptsynch.c:517)\n    by 0x5BE1528: nsDOMThreadService::nsDOMThreadService() (ff-opt/dom/src/threads/../../../dist/include/mozilla/Monitor.h:82)\n    by 0x5BE1678: nsDOMThreadService::GetOrInitService() (dom/src/threads/nsDOMThreadService.cpp:828)\n    by 0x5BE54E2: nsDOMWorker::InitializeInternal(nsIScriptGlobalObject*, JSContext*, JSObject*, unsigned int, unsigned long*) (dom/src/threads/nsDOMWorker.cpp:1707)\n    by 0x5BE58F0: nsDOMWorker::Initialize(nsISupports*, JSContext*, JSObject*, unsigned int, unsigned long*) (dom/src/threads/nsDOMWorker.cpp:1592)\n    by 0x5BB5661: nsDOMConstructor::Construct(nsIXPConnectWrappedNative*, JSContext*, JSObject*, unsigned int, unsigned long*, unsigned long*, int*) (dom/base/nsDOMClassInfo.cpp:5495)\n    by 0x5BB5961: nsDOMConstructorSH::Construct(nsIXPConnectWrappedNative*, JSContext*, JSObject*, unsigned int, unsigned long*, unsigned long*, int*) (dom/base/nsDOMClassInfo.cpp:10726)\n    by 0x5EB41CA: XPC_WN_Helper_Construct(JSContext*, unsigned int, unsigned long*) (js/src/xpconnect/src/xpcwrappednativejsops.cpp:1062)\n    by 0x65B6A06: js::InvokeConstructor(JSContext*, js::CallArgs const&) (js/src/jscntxtinlines.h:692)\n    by 0x672482B: js::Interpret(JSContext*, JSStackFrame*, unsigned int, JSInterpMode) (js/src/jsinterp.cpp:4636)\n    by 0x65B5AB1: js::RunScript(JSContext*, JSScript*, JSStackFrame*) (js/src/jsinterp.cpp:636)\n\n Possible data race during write of size 8 at 0x1C0D5288 by thread #26\n Locks held: none\n    at 0x655752F: JS_SetContextPrivate (js/src/jsapi.cpp:1062)\n    by 0x5BE2A31: nsDOMWorkerRunnable::Run() (dom/src/threads/nsDOMThreadService.cpp:431)\n    by 0x633BA8B: nsThreadPool::Run() (xpcom/threads/nsThreadPool.cpp:222)\n    by 0x6339778: nsThread::ProcessNextEvent(int, int*) (xpcom/threads/nsThread.cpp:631)\n    by 0x62F9AF9: NS_ProcessNextEvent_P(nsIThread*, int) (ff-opt/xpcom/build/nsThreadUtils.cpp:250)\n    by 0x6339F40: nsThread::ThreadFunc(void*) (xpcom/threads/nsThread.cpp:276)\n    by 0x799CACC: _pt_root (nsprpub/pr/src/pthreads/ptthread.c:189)\n    by 0x4C2CBE7: mythread_wrapper (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:221)\n    by 0x4E369C9: start_thread (/build/buildd/eglibc-2.11.1/nptl/pthread_create.c:300)\n    by 0x864870C: clone (/build/buildd/eglibc-2.11.1/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:112)\n\n This conflicts with a previous read of size 8 by thread #1\n Locks held: 1, at address 0x1C0F02B8\n    at 0x6557527: JS_GetContextPrivate (js/src/jsapi.cpp:1055)\n    by 0x5BE0142: nsDOMThreadService::TriggerOperationCallbackForPool(nsDOMWorkerPool*) (dom/src/threads/nsDOMThreadService.cpp:1110)\n    by 0x5BE1080: nsDOMThreadService::CancelWorkersForGlobal(nsIScriptGlobalObject*) (dom/src/threads/nsDOMThreadService.cpp:1166)\n    by 0x5B93D57: nsGlobalWindow::FreeInnerObjects(int) (dom/base/nsGlobalWindow.cpp:1231)\n    by 0x5B9A0B5: nsGlobalWindow::SetDocShell(nsIDocShell*) (dom/base/nsGlobalWindow.cpp:2369)\n    by 0x5F69D7B: nsDocShell::Destroy() (docshell/base/nsDocShell.cpp:4576)\n    by 0x59B3871: nsFrameLoader::Finalize() (content/base/src/nsFrameLoader.cpp:578)\n    by 0x59A9749: nsDocument::MaybeInitializeFinalizeFrameLoaders() (content/base/src/nsDocument.cpp:5503)\n\n Address 0x1C0D5288 is 328 bytes inside a block of size 544 alloc'd\n    at 0x4C26E2C: calloc (/home/sewardj/VgTRUNK/HGDEV2/coregrind/m_replacemalloc/vg_replace_malloc.c:467)\n    by 0x657904A: js_NewContext(JSRuntime*, unsigned long) (js/src/jsutil.h:243)\n    by 0x655BC60: JS_NewContext (js/src/jsapi.cpp:1032)\n    by 0x5BE01A0: nsDOMThreadService::CreateJSContext() (dom/src/threads/nsDOMThreadService.cpp:1053)\n    by 0x5BE031B: nsDOMThreadService::OnThreadCreated() (dom/src/threads/nsDOMThreadService.cpp:1385)\n    by 0x633BA3F: nsThreadPool::Run() (xpcom/threads/nsThreadPool.cpp:175)\n    by 0x6339778: nsThread::ProcessNextEvent(int, int*) (xpcom/threads/nsThread.cpp:631)\n    by 0x62F9AF9: NS_ProcessNextEvent_P(nsIThread*, int) (ff-opt/xpcom/build/nsThreadUtils.cpp:250)\n    by 0x6339F40: nsThread::ThreadFunc(void*) (xpcom/threads/nsThread.cpp:276)\n    by 0x799CACC: _pt_root (nsprpub/pr/src/pthreads/ptthread.c:189)\n    by 0x4C2CBE7: mythread_wrapper (/home/sewardj/VgTRUNK/HGDEV2/helgrind/hg_intercepts.c:221)\n    by 0x4E369C9: start_thread (/build/buildd/eglibc-2.11.1/nptl/pthread_create.c:300)", "tags": [], "creator": "jseward@acm.org", "is_private": false, "attachment_id": null}, {"id": 5403916, "time": "2011-04-12T16:29:59Z", "is_private": false, "tags": [], "creation_time": "2011-04-12T16:29:59Z", "bug_id": 649289, "raw_text": "Ben, this is all you, right?", "author": "bzbarsky@mit.edu", "text": "Ben, this is all you, right?", "count": 1, "attachment_id": null, "creator": "bzbarsky@mit.edu"}, {"time": "2018-06-29T04:48:20Z", "author": "bug-husbandry-bot@mozilla.bugs", "id": 13435760, "count": 2, "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "is_private": false, "attachment_id": null, "creation_time": "2018-06-29T04:48:20Z", "bug_id": 649289, "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "tags": [], "creator": "bug-husbandry-bot@mozilla.bugs"}]}}}