{"comments": {}, "bugs": {"705070": {"comments": [{"attachment_id": null, "raw_text": "Firefox's default theme include Firefox-specific icons for icons that are not covered by GTK stock icons.\nFor instance, the icon for new tab and new window menu entry are not provided by GTK stock icons (both in GTK2 : http://developer.gnome.org/gtk/stable/gtk-Stock-Items.html and GTK3 : http://developer.gnome.org/gtk3/stable/gtk3-Stock-Items.html ).\nHowever, it does so by using directly the icons.\nIt would be much better to add the icons to the hicolor theme (the theme to which GTK reverts to when an icon is not available anywhere else), and then call GTK to get the icon, as it would allow the GTK icon theme makers to provide replacement to those icons that match better the rest of their theme.\nFor instance, an icon theme for Gnome which already provides a window-new.png icon for Gnome application could make a symlink from window-new.png to moz-new-window.png (or whatever we are going to call it), so that the new window icons in Nautilus and Firefox are coherent.", "tags": [], "bug_id": 705070, "text": "Firefox's default theme include Firefox-specific icons for icons that are not covered by GTK stock icons.\nFor instance, the icon for new tab and new window menu entry are not provided by GTK stock icons (both in GTK2 : http://developer.gnome.org/gtk/stable/gtk-Stock-Items.html and GTK3 : http://developer.gnome.org/gtk3/stable/gtk3-Stock-Items.html ).\nHowever, it does so by using directly the icons.\nIt would be much better to add the icons to the hicolor theme (the theme to which GTK reverts to when an icon is not available anywhere else), and then call GTK to get the icon, as it would allow the GTK icon theme makers to provide replacement to those icons that match better the rest of their theme.\nFor instance, an icon theme for Gnome which already provides a window-new.png icon for Gnome application could make a symlink from window-new.png to moz-new-window.png (or whatever we are going to call it), so that the new window icons in Nautilus and Firefox are coherent.", "id": 5870416, "count": 0, "is_private": false, "time": "2011-11-24T10:09:25Z", "creation_time": "2011-11-24T10:09:25Z", "creator": "jagw40k@free.fr", "author": "jagw40k@free.fr"}, {"is_private": false, "id": 6804338, "count": 1, "creator": "jagw40k@free.fr", "time": "2012-11-08T12:41:16Z", "creation_time": "2012-11-08T12:41:16Z", "author": "jagw40k@free.fr", "attachment_id": null, "raw_text": "A quick review on how theme is handled now :\n\n- The default theme is included in the archive omni.ja, in chrome/browser/skin/classic/browser .\n    > It contains a number of css files that describe the default theme, the main one being browser.css\n    > It also contains all the default icons, and usually *many different icons are included in one single image*.\n\nTo make the default theme use GTK icon theme is very easy, it is just about modifying browser.css to replace some \u201clist-style-image: url(\"chrome://browser/skin/something.png\");\u201d by some \u201clist-style-image: url(\"moz-icon://stock/someotherthing\");\u201d.\nThe hard part is *to properly define fallback icons when the current GTK icon theme doesn't provide the icons we want*.\n\n\nThe GTK way of providing application-specific fallback icons is by using gtk_icon_theme_append_search_path(). But to do that, we need to have the default icons accessible to GTK, which mean that instead of having multiple icons within one single image file, and inside a compressed omni.ja, we would require to have an uncompressed folder containing one image file per icon. Is that possible ? What would be the drawbacks ? Why is almost everything contained in this omni.ja archive ?\n\nAn other way of doing things could be to have the css interpreter himself look if the icon is part of the GTK theme, the problem being that if the icon doesn't exist in the GTK theme, \u201cmoz-icon://stock/randomiconthatdoesntexist\u201d will just use the \u201cfile not found\u201d icon.", "tags": [], "text": "A quick review on how theme is handled now :\n\n- The default theme is included in the archive omni.ja, in chrome/browser/skin/classic/browser .\n    > It contains a number of css files that describe the default theme, the main one being browser.css\n    > It also contains all the default icons, and usually *many different icons are included in one single image*.\n\nTo make the default theme use GTK icon theme is very easy, it is just about modifying browser.css to replace some \u201clist-style-image: url(\"chrome://browser/skin/something.png\");\u201d by some \u201clist-style-image: url(\"moz-icon://stock/someotherthing\");\u201d.\nThe hard part is *to properly define fallback icons when the current GTK icon theme doesn't provide the icons we want*.\n\n\nThe GTK way of providing application-specific fallback icons is by using gtk_icon_theme_append_search_path(). But to do that, we need to have the default icons accessible to GTK, which mean that instead of having multiple icons within one single image file, and inside a compressed omni.ja, we would require to have an uncompressed folder containing one image file per icon. Is that possible ? What would be the drawbacks ? Why is almost everything contained in this omni.ja archive ?\n\nAn other way of doing things could be to have the css interpreter himself look if the icon is part of the GTK theme, the problem being that if the icon doesn't exist in the GTK theme, \u201cmoz-icon://stock/randomiconthatdoesntexist\u201d will just use the \u201cfile not found\u201d icon.", "bug_id": 705070}, {"attachment_id": null, "raw_text": "", "tags": [], "bug_id": 705070, "text": "*** Bug 458330 has been marked as a duplicate of this bug. ***", "is_private": false, "count": 2, "id": 7065761, "creator": "bugzilla@mversen.de", "creation_time": "2013-02-03T22:21:05Z", "time": "2013-02-03T22:21:05Z", "author": "bugzilla@mversen.de"}]}}}