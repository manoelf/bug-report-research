{"bugs": {"651018": {"comments": [{"count": 0, "bug_id": 651018, "raw_text": "Presently conversions between app units and CSS pixels/inches are done with device context and/or pres context methods, even though they're fixed.  This patch series will move these conversions to free functions in nsCoord.h (thus, code that needs them can get at them without even including nsIDeviceContext.h or nsIPresContext.h -- yes, there are files that include one of those headers exclusively for those conversions).\n\nThis patch series will also purge as many remaining references to \"twips\" from the codebase as possible.  In many places \"twips\" was a misnomer for app units; in almost all of the remaining places, we were double-converting, some external unit (inches, points, centimeters) to twips to app units, or vice versa.  There remains one lousy preference that is being written out in actual twips :-( -- if anything's to be done about that it'll be when I get round to vivisecting nsIPrintSettings.", "tags": [], "is_private": false, "time": "2011-04-19T03:03:49Z", "creation_time": "2011-04-19T03:03:49Z", "author": "zackw@panix.com", "creator": "zackw@panix.com", "text": "Presently conversions between app units and CSS pixels/inches are done with device context and/or pres context methods, even though they're fixed.  This patch series will move these conversions to free functions in nsCoord.h (thus, code that needs them can get at them without even including nsIDeviceContext.h or nsIPresContext.h -- yes, there are files that include one of those headers exclusively for those conversions).\n\nThis patch series will also purge as many remaining references to \"twips\" from the codebase as possible.  In many places \"twips\" was a misnomer for app units; in almost all of the remaining places, we were double-converting, some external unit (inches, points, centimeters) to twips to app units, or vice versa.  There remains one lousy preference that is being written out in actual twips :-( -- if anything's to be done about that it'll be when I get round to vivisecting nsIPrintSettings.", "attachment_id": null, "id": 5417665}, {"time": "2011-04-19T03:49:08Z", "count": 1, "bug_id": 651018, "author": "zackw@panix.com", "creator": "zackw@panix.com", "tags": [], "is_private": false, "raw_text": "nsCoord.h has a fair bit of stuff in it that nobody uses.  This patch prunes all of that and makes the scale-factor #defines uniform.  There's also a little en-passant tidying in the SVG code.  And NS_IEEEPositiveInfinity() and NS_IEEEIsNan() are moved to nsMathUtils.h and renamed to match C99.", "text": "Created attachment 526915\npart 1: prune nsCoord.h\n\nnsCoord.h has a fair bit of stuff in it that nobody uses.  This patch prunes all of that and makes the scale-factor #defines uniform.  There's also a little en-passant tidying in the SVG code.  And NS_IEEEPositiveInfinity() and NS_IEEEIsNan() are moved to nsMathUtils.h and renamed to match C99.", "attachment_id": 526915, "id": 5417731, "creation_time": "2011-04-19T03:49:08Z"}, {"raw_text": "This removes most of the device-independent scaling functions from nsPresContext and nsDeviceContext.  They're replaced either with the constants from the previous patch, or with free functions in nsCoord.h (similar to the conversion functions that are already there).", "tags": [], "is_private": false, "creation_time": "2011-04-19T03:51:24Z", "text": "Created attachment 526917\npart 2: AppUnitsPerCSS* out of pres/device context\n\nThis removes most of the device-independent scaling functions from nsPresContext and nsDeviceContext.  They're replaced either with the constants from the previous patch, or with free functions in nsCoord.h (similar to the conversion functions that are already there).", "id": 5417734, "attachment_id": 526917, "count": 2, "bug_id": 651018, "time": "2011-04-19T03:51:24Z", "author": "zackw@panix.com", "creator": "zackw@panix.com"}, {"creator": "zackw@panix.com", "author": "zackw@panix.com", "bug_id": 651018, "count": 3, "time": "2011-04-19T03:55:28Z", "creation_time": "2011-04-19T03:55:28Z", "text": "Created attachment 526920\npart 3: zap all references to \"twips\" that really mean app units\n\nAn awful lot of the places that refer to \"twips\" really mean app units; fix 'em.\n\nThere will be one more piece of this bug, which gets rid of all but one of the places where twips - 1/20th of a Postscript point - were actually being used; but it blew up on the try server, so I'm not posting it yet. :)", "id": 5417741, "attachment_id": 526920, "raw_text": "An awful lot of the places that refer to \"twips\" really mean app units; fix 'em.\n\nThere will be one more piece of this bug, which gets rid of all but one of the places where twips - 1/20th of a Postscript point - were actually being used; but it blew up on the try server, so I'm not posting it yet. :)", "tags": [], "is_private": false}, {"raw_text": "+#define PIXELS_PER_INCH      96.0f\n+\n+#define PIXELS_PER_MM        (PIXELS_PER_INCH /     MM_PER_INCH)\n+#define PIXELS_PER_CM        (PIXELS_PER_INCH /     CM_PER_INCH)\n+#define PIXELS_PER_POINT     (PIXELS_PER_INCH / POINTS_PER_INCH)\n+#define PIXELS_PER_PICA      (PIXELS_PER_INCH /  PICAS_PER_INCH)\n+\n+#define APP_UNITS_PER_PIXEL  60.0f\n+#define APP_UNITS_PER_INCH   (APP_UNITS_PER_PIXEL * PIXELS_PER_INCH)\n+#define APP_UNITS_PER_MM     (APP_UNITS_PER_PIXEL * PIXELS_PER_MM)\n+#define APP_UNITS_PER_CM     (APP_UNITS_PER_PIXEL * PIXELS_PER_CM)\n+#define APP_UNITS_PER_POINT  (APP_UNITS_PER_PIXEL * PIXELS_PER_POINT)\n+#define APP_UNITS_PER_PICA   (APP_UNITS_PER_PIXEL * PIXELS_PER_PICA)\n\nThese are all CSS-specific. I think these should all include \"CSS\" in their names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*, and APP_UNITS_PER_CSS_*.", "is_private": false, "tags": [], "creation_time": "2011-04-19T04:25:18Z", "attachment_id": 526915, "id": 5417784, "text": "Comment on attachment 526915\npart 1: prune nsCoord.h\n\n+#define PIXELS_PER_INCH      96.0f\n+\n+#define PIXELS_PER_MM        (PIXELS_PER_INCH /     MM_PER_INCH)\n+#define PIXELS_PER_CM        (PIXELS_PER_INCH /     CM_PER_INCH)\n+#define PIXELS_PER_POINT     (PIXELS_PER_INCH / POINTS_PER_INCH)\n+#define PIXELS_PER_PICA      (PIXELS_PER_INCH /  PICAS_PER_INCH)\n+\n+#define APP_UNITS_PER_PIXEL  60.0f\n+#define APP_UNITS_PER_INCH   (APP_UNITS_PER_PIXEL * PIXELS_PER_INCH)\n+#define APP_UNITS_PER_MM     (APP_UNITS_PER_PIXEL * PIXELS_PER_MM)\n+#define APP_UNITS_PER_CM     (APP_UNITS_PER_PIXEL * PIXELS_PER_CM)\n+#define APP_UNITS_PER_POINT  (APP_UNITS_PER_PIXEL * PIXELS_PER_POINT)\n+#define APP_UNITS_PER_PICA   (APP_UNITS_PER_PIXEL * PIXELS_PER_PICA)\n\nThese are all CSS-specific. I think these should all include \"CSS\" in their names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*, and APP_UNITS_PER_CSS_*.", "count": 4, "bug_id": 651018, "time": "2011-04-19T04:25:18Z", "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org"}, {"creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "time": "2011-04-19T04:29:59Z", "bug_id": 651018, "count": 5, "attachment_id": null, "id": 5417791, "text": "-    nsRect r(nsPresContext::CSSPixelsToAppUnits(aX),\n-             nsPresContext::CSSPixelsToAppUnits(aY),\n-             nsPresContext::CSSPixelsToAppUnits(aW),\n-             nsPresContext::CSSPixelsToAppUnits(aH));\n+    nsRect r(NSCSSPixelsToAppUnits(aX),\n+             NSCSSPixelsToAppUnits(aY),\n+             NSCSSPixelsToAppUnits(aW),\n+             NSCSSPixelsToAppUnits(aH));\n\nI can live with this pattern, but I'd actually prefer to use helper functions to convert these rects (and similar stuff for points).\nE.g. rewrite this to be\n  nsRect r = nsIntRect(aX, aY, aW, aH).ToAppUnits(APP_UNITS_PER_CSS_PIXEL);", "creation_time": "2011-04-19T04:29:59Z", "is_private": false, "tags": [], "raw_text": "-    nsRect r(nsPresContext::CSSPixelsToAppUnits(aX),\n-             nsPresContext::CSSPixelsToAppUnits(aY),\n-             nsPresContext::CSSPixelsToAppUnits(aW),\n-             nsPresContext::CSSPixelsToAppUnits(aH));\n+    nsRect r(NSCSSPixelsToAppUnits(aX),\n+             NSCSSPixelsToAppUnits(aY),\n+             NSCSSPixelsToAppUnits(aW),\n+             NSCSSPixelsToAppUnits(aH));\n\nI can live with this pattern, but I'd actually prefer to use helper functions to convert these rects (and similar stuff for points).\nE.g. rewrite this to be\n  nsRect r = nsIntRect(aX, aY, aW, aH).ToAppUnits(APP_UNITS_PER_CSS_PIXEL);"}, {"count": 6, "bug_id": 651018, "time": "2011-04-19T04:30:58Z", "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "raw_text": "(In reply to comment #4)\n> These are all CSS-specific. I think these should all include \"CSS\" in their\n> names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> and APP_UNITS_PER_CSS_*.\n\nAlso I wonder if we should worry about these not being namespaced in any way. It would be nice if they were in \"namespace mozilla;\" but I guess that would require a lot of \"using namespace mozilla;\" additions...", "is_private": false, "tags": [], "creation_time": "2011-04-19T04:30:58Z", "attachment_id": null, "id": 5417792, "text": "(In reply to comment #4)\n> These are all CSS-specific. I think these should all include \"CSS\" in their\n> names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> and APP_UNITS_PER_CSS_*.\n\nAlso I wonder if we should worry about these not being namespaced in any way. It would be nice if they were in \"namespace mozilla;\" but I guess that would require a lot of \"using namespace mozilla;\" additions..."}, {"creation_time": "2011-04-19T04:49:05Z", "attachment_id": null, "id": 5417829, "text": "(In reply to comment #4)\n> flag: review?(roc@ocallahan.org) => review+Comment on attachment 526915 [details]\n> \n> These are all CSS-specific. I think these should all include \"CSS\" in their\n> names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> and APP_UNITS_PER_CSS_*.\n\nOk, will change.\n\n(In reply to comment #5)\n> +    nsRect r(NSCSSPixelsToAppUnits(aX),\n> +             NSCSSPixelsToAppUnits(aY),\n> +             NSCSSPixelsToAppUnits(aW),\n> +             NSCSSPixelsToAppUnits(aH));\n> \n> I can live with this pattern, but I'd actually prefer to use helper functions\n> to convert these rects (and similar stuff for points).\n\nThis feels like inappropriate mission creep for *this* bug.  How's this sound: you add the helper functions in your Rect/Size/Point/etc merge bug, and then if you file a bug to find patterns like this and switch 'em, and assign it to me, I'll do the gruntwork.\n\n(In reply to comment #6)\n> (In reply to comment #4)\n> > These are all CSS-specific. I think these should all include \"CSS\" in their\n> > names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> > and APP_UNITS_PER_CSS_*.\n> \n> Also I wonder if we should worry about these not being namespaced in any way.\n> It would be nice if they were in \"namespace mozilla;\" but I guess that would\n> require a lot of \"using namespace mozilla;\" additions...\n\nAlso feels like mission creep, particularly as I hesitate to move only *part* of the contents of this file to namespace mozilla, but moving all of it would be gigantic (and I'd want better tools than grep -w to do it with, i.e. I'd rather one of the static-analysis-and-rewrite guys did it :-)", "creator": "zackw@panix.com", "author": "zackw@panix.com", "raw_text": "(In reply to comment #4)\n> flag: review?(roc@ocallahan.org) => review+Comment on attachment 526915 [details]\n> \n> These are all CSS-specific. I think these should all include \"CSS\" in their\n> names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> and APP_UNITS_PER_CSS_*.\n\nOk, will change.\n\n(In reply to comment #5)\n> +    nsRect r(NSCSSPixelsToAppUnits(aX),\n> +             NSCSSPixelsToAppUnits(aY),\n> +             NSCSSPixelsToAppUnits(aW),\n> +             NSCSSPixelsToAppUnits(aH));\n> \n> I can live with this pattern, but I'd actually prefer to use helper functions\n> to convert these rects (and similar stuff for points).\n\nThis feels like inappropriate mission creep for *this* bug.  How's this sound: you add the helper functions in your Rect/Size/Point/etc merge bug, and then if you file a bug to find patterns like this and switch 'em, and assign it to me, I'll do the gruntwork.\n\n(In reply to comment #6)\n> (In reply to comment #4)\n> > These are all CSS-specific. I think these should all include \"CSS\" in their\n> > names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> > and APP_UNITS_PER_CSS_*.\n> \n> Also I wonder if we should worry about these not being namespaced in any way.\n> It would be nice if they were in \"namespace mozilla;\" but I guess that would\n> require a lot of \"using namespace mozilla;\" additions...\n\nAlso feels like mission creep, particularly as I hesitate to move only *part* of the contents of this file to namespace mozilla, but moving all of it would be gigantic (and I'd want better tools than grep -w to do it with, i.e. I'd rather one of the static-analysis-and-rewrite guys did it :-)", "bug_id": 651018, "count": 7, "time": "2011-04-19T04:49:05Z", "is_private": false, "tags": []}, {"author": "roc@ocallahan.org", "id": 5417864, "attachment_id": null, "text": "(In reply to comment #7)\n> (In reply to comment #5)\n> > +    nsRect r(NSCSSPixelsToAppUnits(aX),\n> > +             NSCSSPixelsToAppUnits(aY),\n> > +             NSCSSPixelsToAppUnits(aW),\n> > +             NSCSSPixelsToAppUnits(aH));\n> > \n> > I can live with this pattern, but I'd actually prefer to use helper functions\n> > to convert these rects (and similar stuff for points).\n> \n> This feels like inappropriate mission creep for *this* bug.  How's this sound:\n> you add the helper functions in your Rect/Size/Point/etc merge bug, and then if\n> you file a bug to find patterns like this and switch 'em, and assign it to me,\n> I'll do the gruntwork.\n\nFair enough.\n\n> (In reply to comment #6)\n> > (In reply to comment #4)\n> > > These are all CSS-specific. I think these should all include \"CSS\" in their\n> > > names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> > > and APP_UNITS_PER_CSS_*.\n> > \n> > Also I wonder if we should worry about these not being namespaced in any way.\n> > It would be nice if they were in \"namespace mozilla;\" but I guess that would\n> > require a lot of \"using namespace mozilla;\" additions...\n> \n> Also feels like mission creep, particularly as I hesitate to move only *part*\n> of the contents of this file to namespace mozilla, but moving all of it would\n> be gigantic (and I'd want better tools than grep -w to do it with, i.e. I'd\n> rather one of the static-analysis-and-rewrite guys did it :-)\n\nSounds reasonable except that you're adding more of these not-at-all-namespaced names. But I guess it doesn't matter enough.", "creator": "roc@ocallahan.org", "creation_time": "2011-04-19T05:20:02Z", "is_private": false, "tags": [], "time": "2011-04-19T05:20:02Z", "count": 8, "raw_text": "(In reply to comment #7)\n> (In reply to comment #5)\n> > +    nsRect r(NSCSSPixelsToAppUnits(aX),\n> > +             NSCSSPixelsToAppUnits(aY),\n> > +             NSCSSPixelsToAppUnits(aW),\n> > +             NSCSSPixelsToAppUnits(aH));\n> > \n> > I can live with this pattern, but I'd actually prefer to use helper functions\n> > to convert these rects (and similar stuff for points).\n> \n> This feels like inappropriate mission creep for *this* bug.  How's this sound:\n> you add the helper functions in your Rect/Size/Point/etc merge bug, and then if\n> you file a bug to find patterns like this and switch 'em, and assign it to me,\n> I'll do the gruntwork.\n\nFair enough.\n\n> (In reply to comment #6)\n> > (In reply to comment #4)\n> > > These are all CSS-specific. I think these should all include \"CSS\" in their\n> > > names to make it clear that's what we're talking about. So CSS_PIXELS_PER_*,\n> > > and APP_UNITS_PER_CSS_*.\n> > \n> > Also I wonder if we should worry about these not being namespaced in any way.\n> > It would be nice if they were in \"namespace mozilla;\" but I guess that would\n> > require a lot of \"using namespace mozilla;\" additions...\n> \n> Also feels like mission creep, particularly as I hesitate to move only *part*\n> of the contents of this file to namespace mozilla, but moving all of it would\n> be gigantic (and I'd want better tools than grep -w to do it with, i.e. I'd\n> rather one of the static-analysis-and-rewrite guys did it :-)\n\nSounds reasonable except that you're adding more of these not-at-all-namespaced names. But I guess it doesn't matter enough.", "bug_id": 651018}, {"author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "count": 9, "bug_id": 651018, "time": "2011-04-19T05:22:17Z", "creation_time": "2011-04-19T05:22:17Z", "text": "Call me nitpicky, but ROUND_TO_AU should be ROUND_TO_APPUNITS IMHO, partly because \"AU\" is an actual length unit which is rather different from an appunit :-). Ditto for the other AU macros.", "attachment_id": null, "id": 5417868, "raw_text": "Call me nitpicky, but ROUND_TO_AU should be ROUND_TO_APPUNITS IMHO, partly because \"AU\" is an actual length unit which is rather different from an appunit :-). Ditto for the other AU macros.", "tags": [], "is_private": false}, {"count": 10, "bug_id": 651018, "time": "2016-06-27T20:14:32Z", "author": "benjamin@smedbergs.us", "creator": "benjamin@smedbergs.us", "raw_text": "Resetting owner to default per Zack's request.", "tags": [], "is_private": false, "creation_time": "2016-06-27T20:14:32Z", "text": "Resetting owner to default per Zack's request.", "id": 11505683, "attachment_id": null}]}}, "comments": {}}