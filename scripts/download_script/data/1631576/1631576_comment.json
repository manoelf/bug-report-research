{"comments": {}, "bugs": {"1631576": {"comments": [{"creation_time": "2020-04-20T19:51:20Z", "creator": "dveditz@mozilla.com", "attachment_id": 9141833, "id": 14767431, "text": "Created attachment 9141833\ntimings.pdf\n\n[filed from mail to security@ from Cesar Pereida Garcia]\nDear NSS and Red Hat folks,\n\nWe are a team of security researchers in Finland and we would like to report a vulnerability affecting the DSA signature generation path in NSS. \nThe vulnerability leaks enough information to recover DSA private keys via a timing attack and a lattice calculation.\n\n### Timing attack strikes once more ###\n\nAffecting NSS latests branch.\nThis attack draws inspiration from the attacks presented in [1] and [2].\nDuring DSA signature generation in the function `dsa_SignDigest`, the nonce value `k` is not padded, exposing the bit length of `k`,\ni.e. the most significant bits (MSBs) of the nonce.\nSimilar to [1], the regularity of the modular exponentiation function `mp_exptmod_safe_i` processing the nonce, amplifies and improves the\ntiming resolution, allowing to clearly distinguish the time it takes to generate a signature, and therefore leaking the MSBs.\nMoreover, due to the windowed approach used by the modular exponentiation algorithm, nonce bits are processed in windows of 4 bits,\nthus the leakage occurs in multiples of 4 bits.\nAn attacker can measure the time it takes to compute a DSA signature and then based on the time, catalog in buckets.\nThe attacker can label each bucket with length `n - (4 * i)` bits, where `n` is the length of the DSA private key, and `i` is the amount\nof windows skipped by the algorithm due to smaller nonce length.\nThe attached figure shows experimental results with a DSA key generated with default parameters using the `certutil` tool, i.e. 2048-bit DSA with\na 224-bit private key length. As can be appreciated, the timing difference is clearly marked, allowing to easily categorize signatures in each bucket\nto then proceed with the lattice calculation to finally recover the private key.\n\n### Vulnerable applications ###\n\nThis vulnerability can be exploited by any application performing DSA signatures and using NSS as the cryptography library.\nWe include Red Hat folks in the loop as they very likely have several tools and applications linking to NSS to perform DSA operations.\n\n### Countermeasure ###\n\nWe recommend padding the nonce `k` value to be of fixed length, similar to the work by [1], resulting in no leakage by the modular exponentiation\nfunction.\n\nWe can help develop and/or test the patch, according to your needs, please let us know how would you like to proceed.\n\n### Disclosure ###\n\nWe aim a public disclosure of our findings on May 18 (~1 month from today). We appreciate if you could take a look at this issue at your earliest\nconvenience.\n\n### References ###\n\n[1] Billy Bob Brumley and Nicola Tuveri. \u201cRemote Timing Attacks Are Still Practical\u201d. In Computer Security - ESORICS 2011.\n[2] Cesar Pereida, Billy Bob Brumley, and Yuval Yarom. \"Make sure DSA signing exponentiations really are constant-time\". In 23rd CCS, 2016.\n\n\nThanks for your time reviewing this vulnerability.\n\nRegards,\n\nCesar Pereida Garcia\nDoctoral Researcher\nNetwork and Information Security Group (NISEC)\nTampere University", "raw_text": "[filed from mail to security@ from Cesar Pereida Garcia]\nDear NSS and Red Hat folks,\n\nWe are a team of security researchers in Finland and we would like to report a vulnerability affecting the DSA signature generation path in NSS. \nThe vulnerability leaks enough information to recover DSA private keys via a timing attack and a lattice calculation.\n\n### Timing attack strikes once more ###\n\nAffecting NSS latests branch.\nThis attack draws inspiration from the attacks presented in [1] and [2].\nDuring DSA signature generation in the function `dsa_SignDigest`, the nonce value `k` is not padded, exposing the bit length of `k`,\ni.e. the most significant bits (MSBs) of the nonce.\nSimilar to [1], the regularity of the modular exponentiation function `mp_exptmod_safe_i` processing the nonce, amplifies and improves the\ntiming resolution, allowing to clearly distinguish the time it takes to generate a signature, and therefore leaking the MSBs.\nMoreover, due to the windowed approach used by the modular exponentiation algorithm, nonce bits are processed in windows of 4 bits,\nthus the leakage occurs in multiples of 4 bits.\nAn attacker can measure the time it takes to compute a DSA signature and then based on the time, catalog in buckets.\nThe attacker can label each bucket with length `n - (4 * i)` bits, where `n` is the length of the DSA private key, and `i` is the amount\nof windows skipped by the algorithm due to smaller nonce length.\nThe attached figure shows experimental results with a DSA key generated with default parameters using the `certutil` tool, i.e. 2048-bit DSA with\na 224-bit private key length. As can be appreciated, the timing difference is clearly marked, allowing to easily categorize signatures in each bucket\nto then proceed with the lattice calculation to finally recover the private key.\n\n### Vulnerable applications ###\n\nThis vulnerability can be exploited by any application performing DSA signatures and using NSS as the cryptography library.\nWe include Red Hat folks in the loop as they very likely have several tools and applications linking to NSS to perform DSA operations.\n\n### Countermeasure ###\n\nWe recommend padding the nonce `k` value to be of fixed length, similar to the work by [1], resulting in no leakage by the modular exponentiation\nfunction.\n\nWe can help develop and/or test the patch, according to your needs, please let us know how would you like to proceed.\n\n### Disclosure ###\n\nWe aim a public disclosure of our findings on May 18 (~1 month from today). We appreciate if you could take a look at this issue at your earliest\nconvenience.\n\n### References ###\n\n[1] Billy Bob Brumley and Nicola Tuveri. \u201cRemote Timing Attacks Are Still Practical\u201d. In Computer Security - ESORICS 2011.\n[2] Cesar Pereida, Billy Bob Brumley, and Yuval Yarom. \"Make sure DSA signing exponentiations really are constant-time\". In 23rd CCS, 2016.\n\n\nThanks for your time reviewing this vulnerability.\n\nRegards,\n\nCesar Pereida Garcia\nDoctoral Researcher\nNetwork and Information Security Group (NISEC)\nTampere University", "time": "2020-04-20T19:51:20Z", "author": "dveditz@mozilla.com", "tags": [], "bug_id": 1631576, "count": 0, "is_private": false}, {"id": 14767455, "text": "RedHat has tagged this one INC1266622 if we need to talk to them about it.", "creation_time": "2020-04-20T20:01:02Z", "attachment_id": null, "creator": "dveditz@mozilla.com", "author": "dveditz@mozilla.com", "is_private": false, "count": 1, "bug_id": 1631576, "tags": [], "raw_text": "RedHat has tagged this one INC1266622 if we need to talk to them about it.", "time": "2020-04-20T20:01:02Z"}, {"id": 14770328, "text": "Thank you and your whole research group for this collection of reports. This comment is being added to each.\n\nI\u2019m assigning each of these to a team member for more detailed analysis beyond our initial triage. As all of these affect RHEL, I am also requesting impact analysis from our RedHat peers as well, as even if a side-channel is local, that might indicate higher-severity for server software than for Firefox. The analysis will also determine how to allocate CVE numbers, as needed.\n\nI would like to advise that the embargo period your team has initially indicated is quite short, and in this case conflicts with both RedHat and Firefox release cycles. For a bug being actively exploited, we can do what is necessary; in the general case, our Release Calendar [0] indicates that to meet a 18 May disclosure date, we would need to make and uplift a point release of NSS from Nightly to Firefox Beta 76 within 8 days, which, given the complexity involved, seems unrealistic - and moreso for all four bugs at once. We\u2019ll have a better idea as we complete our analysis of each bug.\n\nAgain, thank you for bringing these issues to our attention. Research such as yours makes the whole world safer!\n\n[0] https://wiki.mozilla.org/Release_Management/Calendar", "creator": "jc@insufficient.coffee", "attachment_id": null, "creation_time": "2020-04-21T21:32:40Z", "bug_id": 1631576, "tags": [], "is_private": false, "count": 2, "author": "jc@insufficient.coffee", "time": "2020-04-21T21:32:40Z", "raw_text": "Thank you and your whole research group for this collection of reports. This comment is being added to each.\n\nI\u2019m assigning each of these to a team member for more detailed analysis beyond our initial triage. As all of these affect RHEL, I am also requesting impact analysis from our RedHat peers as well, as even if a side-channel is local, that might indicate higher-severity for server software than for Firefox. The analysis will also determine how to allocate CVE numbers, as needed.\n\nI would like to advise that the embargo period your team has initially indicated is quite short, and in this case conflicts with both RedHat and Firefox release cycles. For a bug being actively exploited, we can do what is necessary; in the general case, our Release Calendar [0] indicates that to meet a 18 May disclosure date, we would need to make and uplift a point release of NSS from Nightly to Firefox Beta 76 within 8 days, which, given the complexity involved, seems unrealistic - and moreso for all four bugs at once. We\u2019ll have a better idea as we complete our analysis of each bug.\n\nAgain, thank you for bringing these issues to our attention. Research such as yours makes the whole world safer!\n\n[0] https://wiki.mozilla.org/Release_Management/Calendar"}, {"id": 14772199, "text": "Created attachment 9142475\nBug 1631576 - Force a fixed length for DSA exponentiation\n\nAdd blinding to k before calculation g^k mod p\n\nDepends on D59652", "author": "rrelyea@redhat.com", "is_private": false, "count": 3, "bug_id": 1631576, "tags": [], "creation_time": "2020-04-22T17:04:26Z", "raw_text": "Add blinding to k before calculation g^k mod p\n\nDepends on D59652", "attachment_id": 9142475, "creator": "rrelyea@redhat.com", "time": "2020-04-22T17:04:26Z"}, {"id": 14772228, "text": "I'd like to get the actual reporters to review the proposed patch, is there anyway to do this? The patch adds blinding at the cost of doubling the cost of the DSA operation. I think that's fine since DSA is not our high volume protocol. This is much simpler that trying to come up with a CT version of mod_expt.", "creation_time": "2020-04-22T17:14:29Z", "attachment_id": null, "creator": "rrelyea@redhat.com", "author": "rrelyea@redhat.com", "tags": [], "bug_id": 1631576, "count": 4, "is_private": false, "raw_text": "I'd like to get the actual reporters to review the proposed patch, is there anyway to do this? The patch adds blinding at the cost of doubling the cost of the DSA operation. I think that's fine since DSA is not our high volume protocol. This is much simpler that trying to come up with a CT version of mod_expt.", "time": "2020-04-22T17:14:29Z"}, {"time": "2020-04-22T18:58:30Z", "creator": "jc@insufficient.coffee", "attachment_id": null, "creation_time": "2020-04-22T18:58:30Z", "raw_text": "Billy and team,\n\nCan you follow the review link to Phabricator? Until you've logged in there once, we can't tag you for review, yet your review we'd appreciate. Thank you!", "bug_id": 1631576, "tags": [], "is_private": false, "count": 5, "id": 14772421, "text": "Billy and team,\n\nCan you follow the review link to Phabricator? Until you've logged in there once, we can't tag you for review, yet your review we'd appreciate. Thank you!", "author": "jc@insufficient.coffee"}, {"id": 14773059, "text": "I .... think I'm registered in Phabricator now (bbrumley)", "creation_time": "2020-04-23T01:29:14Z", "creator": "bbrumley@gmail.com", "attachment_id": null, "author": "bbrumley@gmail.com", "bug_id": 1631576, "tags": [], "is_private": false, "count": 6, "raw_text": "I .... think I'm registered in Phabricator now (bbrumley)", "time": "2020-04-23T01:29:14Z"}, {"time": "2020-04-23T01:59:50Z", "raw_text": "Thanks I took a look.\n\nLet's wait for Cesar (it's 5am here in Tampere!) and we'll compare notes together later today.", "count": 7, "is_private": false, "bug_id": 1631576, "tags": [], "author": "bbrumley@gmail.com", "creator": "bbrumley@gmail.com", "attachment_id": null, "creation_time": "2020-04-23T01:59:50Z", "text": "Thanks I took a look.\n\nLet's wait for Cesar (it's 5am here in Tampere!) and we'll compare notes together later today.", "id": 14773076}, {"text": "(In reply to J.C. Jones [:jcj] (he/him) [increased latency due to COVID-19] from comment #5)\n> Billy and team,\n> \n> Can you follow the review link to Phabricator? Until you've logged in there once, we can't tag you for review, yet your review we'd appreciate. Thank you!\n\nI should be registered now as pereida", "id": 14773331, "creation_time": "2020-04-23T07:30:50Z", "creator": "cesar.pereida@gmail.com", "attachment_id": null, "author": "cesar.pereida@gmail.com", "is_private": false, "count": 8, "bug_id": 1631576, "tags": [], "raw_text": "(In reply to J.C. Jones [:jcj] (he/him) [increased latency due to COVID-19] from comment #5)\n> Billy and team,\n> \n> Can you follow the review link to Phabricator? Until you've logged in there once, we can't tag you for review, yet your review we'd appreciate. Thank you!\n\nI should be registered now as pereida", "time": "2020-04-23T07:30:50Z"}, {"text": "Matt,\n\nDoes FxA / nsIIdentityCryptoService still have any need for DSA? It's used there via jwcrypto.jsm, and it use would be potentially subject to this vulnerability.", "id": 14774464, "creation_time": "2020-04-23T17:48:05Z", "attachment_id": null, "creator": "jc@insufficient.coffee", "author": "jc@insufficient.coffee", "tags": [], "bug_id": 1631576, "count": 9, "is_private": false, "raw_text": "Matt,\n\nDoes FxA / nsIIdentityCryptoService still have any need for DSA? It's used there via jwcrypto.jsm, and it use would be potentially subject to this vulnerability.", "time": "2020-04-23T17:48:05Z"}, {"creator": "mozilla+bmo@noorenberghe.ca", "attachment_id": null, "creation_time": "2020-04-23T18:03:06Z", "id": 14774498, "text": "I was involved in that code for Persona/BrowserID (long dead) but as you noticed it's now used by FxA code so redirecting this to Ryan Kelly.\n\nIt does look like it's used: https://searchfox.org/mozilla-central/rev/41c3ea3ee8eab9ce7b82932257cb80b703cbba67/services/fxaccounts/FxAccounts.jsm#1297", "time": "2020-04-23T18:03:06Z", "raw_text": "I was involved in that code for Persona/BrowserID (long dead) but as you noticed it's now used by FxA code so redirecting this to Ryan Kelly.\n\nIt does look like it's used: https://searchfox.org/mozilla-central/rev/41c3ea3ee8eab9ce7b82932257cb80b703cbba67/services/fxaccounts/FxAccounts.jsm#1297", "count": 10, "is_private": false, "tags": [], "bug_id": 1631576, "author": "mozilla+bmo@noorenberghe.ca"}, {"bug_id": 1631576, "tags": [], "is_private": false, "count": 11, "author": "ryan@rfk.id.au", "time": "2020-04-23T20:42:09Z", "raw_text": "Yeah, we're definitely still using it, although we have *finally* kicked off a project to remove browserid from the FxA and Sync ecosystem so hopefully it won't be with us for much longer.\n\nIn broad strokes: If you're signed in to Firefox with your Firefox Account, then every [12 hours](https://searchfox.org/mozilla-central/rev/41c3ea3ee8eab9ce7b82932257cb80b703cbba67/services/fxaccounts/FxAccountsCommon.js#54) it will generate a fresh DSA keypair. It asks the FxA server to sign the public key to tie it to your account, and then it uses the private key to sign an assertion that's used to authenticate to the Sync servers.\n\nIf an attacker was able to intercept one of these assertions, and to learn the corresponding DSA private key, then they would be able to impersonate the victim to all other FxA relying services (because you can use a BrowserID assertion to generate FxA OAuth tokens). As one example, a malicious or compromised Sync Tokenserver might be able to exploit this to hijack the user's credentials and use them on other services, since it's in a position to force the client to generate lots of signatures from the same key.\n\nWe know how to stop using DSA here (switch from BrowserID assertions to OAuth tokens, which don't involve any client-side crypto) but we're not in a position to make that change in a hurry.", "text": "Yeah, we're definitely still using it, although we have *finally* kicked off a project to remove browserid from the FxA and Sync ecosystem so hopefully it won't be with us for much longer.\n\nIn broad strokes: If you're signed in to Firefox with your Firefox Account, then every [12 hours](https://searchfox.org/mozilla-central/rev/41c3ea3ee8eab9ce7b82932257cb80b703cbba67/services/fxaccounts/FxAccountsCommon.js#54) it will generate a fresh DSA keypair. It asks the FxA server to sign the public key to tie it to your account, and then it uses the private key to sign an assertion that's used to authenticate to the Sync servers.\n\nIf an attacker was able to intercept one of these assertions, and to learn the corresponding DSA private key, then they would be able to impersonate the victim to all other FxA relying services (because you can use a BrowserID assertion to generate FxA OAuth tokens). As one example, a malicious or compromised Sync Tokenserver might be able to exploit this to hijack the user's credentials and use them on other services, since it's in a position to force the client to generate lots of signatures from the same key.\n\nWe know how to stop using DSA here (switch from BrowserID assertions to OAuth tokens, which don't involve any client-side crypto) but we're not in a position to make that change in a hurry.", "id": 14774889, "attachment_id": null, "creator": "ryan@rfk.id.au", "creation_time": "2020-04-23T20:42:09Z"}, {"bug_id": 1631576, "tags": [], "is_private": false, "count": 12, "author": "rrelyea@redhat.com", "time": "2020-04-24T15:42:42Z", "raw_text": "JC, we have an approved patch. what's the process from here (I don't want to leak embargoed information before had).", "text": "JC, we have an approved patch. what's the process from here (I don't want to leak embargoed information before had).", "id": 14776568, "attachment_id": null, "creator": "rrelyea@redhat.com", "creation_time": "2020-04-24T15:42:42Z"}, {"raw_text": "Thanks, Bob. At this point, I think it's in my hands, I'll handle the releases.\n\nWe're late in the cycle for Firefox 76, since RCs start tomorrow. Since per https://bugzilla.mozilla.org/show_bug.cgi?id=1631583#c8 embargo date is now Firefox 77's release on 2 June, we have a little breathing room. We need to do the sec-approval analysis now and see if we want to land this into NSS trunk now or make a point release at the end of May.\n\nRedHat: If you have input as to how early to make the release of NSS beyond Firefox's timing, let me know.", "time": "2020-04-24T16:46:35Z", "author": "jc@insufficient.coffee", "count": 13, "is_private": false, "bug_id": 1631576, "tags": [], "creation_time": "2020-04-24T16:46:35Z", "attachment_id": null, "creator": "jc@insufficient.coffee", "text": "Thanks, Bob. At this point, I think it's in my hands, I'll handle the releases.\n\nWe're late in the cycle for Firefox 76, since RCs start tomorrow. Since per https://bugzilla.mozilla.org/show_bug.cgi?id=1631583#c8 embargo date is now Firefox 77's release on 2 June, we have a little breathing room. We need to do the sec-approval analysis now and see if we want to land this into NSS trunk now or make a point release at the end of May.\n\nRedHat: If you have input as to how early to make the release of NSS beyond Firefox's timing, let me know.", "id": 14776715}, {"id": 14776762, "text": "Comment on attachment 9142475\nBug 1631576 - Force a fixed length for DSA exponentiation\n\n### Security Approval Request\n* **How easily could an exploit be constructed based on the patch?**: Medium difficulty\n* **Do comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?**: Yes\n* **Which older supported branches are affected by this flaw?**: All branches\n* **If not all supported branches, which bug introduced the flaw?**: None\n* **Do you have backports for the affected branches?**: Yes\n* **If not, how different, hard to create, and risky will they be?**: \n* **How likely is this patch to cause regressions; how much testing does it need?**: We have moderate coverage of DSA with automated tests, and it's unlikely we'll encounter correctness regressions from this due to the nature of the change. This change does cause a performance regression, deliberately, but it shouldn't be noticeable. \n\nThis will need to be back-ported to ESR 68, which will be tracked and get esr68-approval in uplift Bug 1632908. I propose landing this into Beta 77 and ESR 68.9 at the same time.", "creator": "jc@insufficient.coffee", "attachment_id": 9142475, "creation_time": "2020-04-24T17:11:26Z", "is_private": false, "count": 14, "tags": [], "bug_id": 1631576, "author": "jc@insufficient.coffee", "time": "2020-04-24T17:11:26Z", "raw_text": "### Security Approval Request\n* **How easily could an exploit be constructed based on the patch?**: Medium difficulty\n* **Do comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?**: Yes\n* **Which older supported branches are affected by this flaw?**: All branches\n* **If not all supported branches, which bug introduced the flaw?**: None\n* **Do you have backports for the affected branches?**: Yes\n* **If not, how different, hard to create, and risky will they be?**: \n* **How likely is this patch to cause regressions; how much testing does it need?**: We have moderate coverage of DSA with automated tests, and it's unlikely we'll encounter correctness regressions from this due to the nature of the change. This change does cause a performance regression, deliberately, but it shouldn't be noticeable. \n\nThis will need to be back-ported to ESR 68, which will be tracked and get esr68-approval in uplift Bug 1632908. I propose landing this into Beta 77 and ESR 68.9 at the same time."}, {"tags": [], "bug_id": 1631576, "count": 15, "is_private": false, "author": "rrelyea@redhat.com", "time": "2020-04-24T20:49:48Z", "raw_text": "Thanks JC. Our current plan is to pick this up in our next rebase (which is in the next month).", "text": "Thanks JC. Our current plan is to pick this up in our next rebase (which is in the next month).", "id": 14777344, "attachment_id": null, "creator": "rrelyea@redhat.com", "creation_time": "2020-04-24T20:49:48Z"}, {"creation_time": "2020-04-30T06:58:53Z", "attachment_id": 9142475, "creator": "dveditz@mozilla.com", "text": "Comment on attachment 9142475\nBug 1631576 - Force a fixed length for DSA exponentiation\n\nsec-approval for Firefox 77.  It's too late for Firefox 76.", "id": 14787862, "raw_text": "sec-approval for Firefox 77.  It's too late for Firefox 76.", "time": "2020-04-30T06:58:53Z", "author": "dveditz@mozilla.com", "bug_id": 1631576, "tags": [], "is_private": false, "count": 16}, {"attachment_id": null, "creator": "jc@insufficient.coffee", "time": "2020-05-11T18:59:30Z", "raw_text": "Requesting CVE assignment.", "creation_time": "2020-05-11T18:59:30Z", "count": 17, "is_private": false, "bug_id": 1631576, "tags": [], "author": "jc@insufficient.coffee", "text": "Requesting CVE assignment.", "id": 14810400}, {"creation_time": "2020-05-12T06:26:22Z", "attachment_id": null, "creator": "dveditz@mozilla.com", "text": "assigned CVE-2020-12399", "id": 14813504, "raw_text": "assigned CVE-2020-12399", "time": "2020-05-12T06:26:22Z", "author": "dveditz@mozilla.com", "is_private": false, "count": 18, "bug_id": 1631576, "tags": []}, {"text": "more than sec-moderate for Firefox per comment 11", "id": 14815101, "creation_time": "2020-05-12T18:34:24Z", "creator": "dveditz@mozilla.com", "attachment_id": null, "author": "dveditz@mozilla.com", "is_private": false, "count": 19, "bug_id": 1631576, "tags": [], "raw_text": "more than sec-moderate for Firefox per comment 11", "time": "2020-05-12T18:34:24Z"}, {"text": "default: https://hg.mozilla.org/projects/nss/rev/daa823a4a29bcef0fec33a379ec83857429aea2e\nNSS_3_52_BRANCH: https://hg.mozilla.org/projects/nss/rev/a5a9937948c8e3dba3a8065781f0ade74be1259e\nNSS_3_44_BRANCH: https://hg.mozilla.org/projects/nss/rev/48612468b52fe730e54c785adac68b6972c95277\n\nUplifts to Firefox and releases are in progress.", "id": 14832021, "creation_time": "2020-05-19T21:48:42Z", "creator": "jc@insufficient.coffee", "attachment_id": null, "author": "jc@insufficient.coffee", "tags": [], "bug_id": 1631576, "is_private": false, "count": 20, "raw_text": "default: https://hg.mozilla.org/projects/nss/rev/daa823a4a29bcef0fec33a379ec83857429aea2e\nNSS_3_52_BRANCH: https://hg.mozilla.org/projects/nss/rev/a5a9937948c8e3dba3a8065781f0ade74be1259e\nNSS_3_44_BRANCH: https://hg.mozilla.org/projects/nss/rev/48612468b52fe730e54c785adac68b6972c95277\n\nUplifts to Firefox and releases are in progress.", "time": "2020-05-19T21:48:42Z"}, {"text": "beta: https://hg.mozilla.org/releases/mozilla-beta/rev/d64b298d08bc3847778e99a510cc341a7f4dac09", "id": 14832059, "creator": "jc@insufficient.coffee", "attachment_id": null, "creation_time": "2020-05-19T22:16:04Z", "is_private": false, "count": 21, "tags": [], "bug_id": 1631576, "author": "jc@insufficient.coffee", "time": "2020-05-19T22:16:04Z", "raw_text": "beta: https://hg.mozilla.org/releases/mozilla-beta/rev/d64b298d08bc3847778e99a510cc341a7f4dac09"}, {"author": "jcristau@mozilla.com", "count": 22, "is_private": false, "tags": [], "bug_id": 1631576, "raw_text": "https://hg.mozilla.org/mozilla-central/rev/80ded95f5d33", "time": "2020-05-20T16:55:45Z", "id": 14834118, "text": "https://hg.mozilla.org/mozilla-central/rev/80ded95f5d33", "creation_time": "2020-05-20T16:55:45Z", "attachment_id": null, "creator": "jcristau@mozilla.com"}, {"author": "jc@insufficient.coffee", "tags": [], "bug_id": 1631576, "count": 23, "is_private": false, "raw_text": "https://groups.google.com/d/msg/mozilla.dev.tech.crypto/LL7uY4wvzUs/mp1B7Wd0AQAJ", "time": "2020-05-20T18:20:44Z", "text": "https://groups.google.com/d/msg/mozilla.dev.tech.crypto/LL7uY4wvzUs/mp1B7Wd0AQAJ", "id": 14834267, "creation_time": "2020-05-20T18:20:44Z", "creator": "jc@insufficient.coffee", "attachment_id": null}, {"time": "2020-05-22T16:04:26Z", "raw_text": "esr68: https://hg.mozilla.org/releases/mozilla-esr68/rev/555ae5322bbb", "count": 24, "is_private": false, "bug_id": 1631576, "tags": [], "author": "jc@insufficient.coffee", "attachment_id": null, "creator": "jc@insufficient.coffee", "creation_time": "2020-05-22T16:04:26Z", "id": 14837781, "text": "esr68: https://hg.mozilla.org/releases/mozilla-esr68/rev/555ae5322bbb"}, {"id": 14846439, "text": "Created attachment 9152088\nadvisory.txt", "attachment_id": 9152088, "creator": "fbraun@mozilla.com", "creation_time": "2020-05-27T14:09:29Z", "tags": [], "bug_id": 1631576, "count": 25, "is_private": false, "author": "fbraun@mozilla.com", "time": "2020-05-27T14:09:29Z", "raw_text": ""}, {"raw_text": "As part of a security bug pattern analysis, we are requesting your help with a high level analysis of this bug. It is our hope to develop static analysis (or potentially runtime/dynamic analysis) in the future to identify classes of bugs.\n\nPlease visit [this google form](https://docs.google.com/forms/d/e/1FAIpQLSe9uRXuoMK6tRglbNL5fpXbun_oEb6_xC2zpuE_CKA_GUjrvA/viewform?usp=pp_url&entry.2124261401=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1631576) to reply.", "time": "2020-06-10T17:00:15Z", "author": "release-mgmt-account-bot@mozilla.tld", "bug_id": 1631576, "tags": [], "is_private": false, "count": 26, "creation_time": "2020-06-10T17:00:15Z", "attachment_id": null, "creator": "release-mgmt-account-bot@mozilla.tld", "text": "As part of a security bug pattern analysis, we are requesting your help with a high level analysis of this bug. It is our hope to develop static analysis (or potentially runtime/dynamic analysis) in the future to identify classes of bugs.\n\nPlease visit [this google form](https://docs.google.com/forms/d/e/1FAIpQLSe9uRXuoMK6tRglbNL5fpXbun_oEb6_xC2zpuE_CKA_GUjrvA/viewform?usp=pp_url&entry.2124261401=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1631576) to reply.", "id": 14874530}, {"creation_time": "2020-06-16T17:21:47Z", "attachment_id": null, "creator": "rrelyea@redhat.com", "id": 14885485, "text": "response filled in, such as it is.", "raw_text": "response filled in, such as it is.", "time": "2020-06-16T17:21:47Z", "author": "rrelyea@redhat.com", "is_private": false, "count": 27, "bug_id": 1631576, "tags": []}]}}}