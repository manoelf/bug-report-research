{"bugs": {"640134": {"comments": [{"time": "2011-03-09T11:15:06Z", "count": 0, "bug_id": 640134, "author": "mimecuvalo@gmail.com", "creator": "mimecuvalo@gmail.com", "is_private": false, "tags": [], "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b12) Gecko/20100101 Firefox/4.0b12\nBuild Identifier: \n\nSeems there was a spec for this a long time ago but dropped for whatever reason:\n http://www.w3.org/TR/WD-font/#font-smooth-prop\n\nwebkit has the CSS property:\n  -webkit-font-smoothing: [none | subpixel-antialiased | antialiased]\n\n\n\nReproducible: Always", "attachment_id": null, "id": 5332730, "text": "User-Agent:       Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b12) Gecko/20100101 Firefox/4.0b12\nBuild Identifier: \n\nSeems there was a spec for this a long time ago but dropped for whatever reason:\n http://www.w3.org/TR/WD-font/#font-smooth-prop\n\nwebkit has the CSS property:\n  -webkit-font-smoothing: [none | subpixel-antialiased | antialiased]\n\n\n\nReproducible: Always", "creation_time": "2011-03-09T11:15:06Z"}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "time": "2011-03-09T17:31:02Z", "count": 1, "bug_id": 640134, "text": "If we do this, we should only allow it in user/UA sheets, imo.", "attachment_id": null, "id": 5333390, "creation_time": "2011-03-09T17:31:02Z", "tags": [], "is_private": false, "raw_text": "If we do this, we should only allow it in user/UA sheets, imo."}, {"tags": [], "is_private": false, "time": "2011-03-09T23:58:24Z", "count": 2, "bug_id": 640134, "raw_text": "What are the use-cases for this?", "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "text": "What are the use-cases for this?", "id": 5334702, "attachment_id": null, "creation_time": "2011-03-09T23:58:24Z"}, {"text": "Created attachment 518222\nusecase\n\nThe usecase, at least for me, is that when working in things like the terminal or Vim, anti-aliasing on code drives me bonkers.  See attached screenshot of a terminal for example.  I'm developing a terminal for Firefox ( http://firessh.mozdev.org ) and as such would like to be able to disable anti-aliasing.", "id": 5334740, "attachment_id": 518222, "creation_time": "2011-03-10T00:16:39Z", "tags": [], "is_private": false, "raw_text": "The usecase, at least for me, is that when working in things like the terminal or Vim, anti-aliasing on code drives me bonkers.  See attached screenshot of a terminal for example.  I'm developing a terminal for Firefox ( http://firessh.mozdev.org ) and as such would like to be able to disable anti-aliasing.", "author": "mimecuvalo@gmail.com", "creator": "mimecuvalo@gmail.com", "time": "2011-03-10T00:16:39Z", "count": 3, "bug_id": 640134}, {"time": "2011-03-10T01:53:06Z", "tags": [], "is_private": false, "bug_id": 640134, "raw_text": "Is it possible for you to use a font with bitmap glyphs?", "count": 4, "creator": "roc@ocallahan.org", "text": "Is it possible for you to use a font with bitmap glyphs?", "id": 5334980, "attachment_id": null, "author": "roc@ocallahan.org", "creation_time": "2011-03-10T01:53:06Z"}, {"creator": "mimecuvalo@gmail.com", "text": "(In reply to comment #4)\n> Is it possible for you to use a font with bitmap glyphs?\n\nHm, never thought of it - do you mean using a webfont? ( i.e. http://www.google.com/webfonts )  Don't those get automatically aliased as well?", "attachment_id": null, "id": 5335035, "author": "mimecuvalo@gmail.com", "creation_time": "2011-03-10T02:35:47Z", "time": "2011-03-10T02:35:47Z", "tags": [], "is_private": false, "bug_id": 640134, "raw_text": "(In reply to comment #4)\n> Is it possible for you to use a font with bitmap glyphs?\n\nHm, never thought of it - do you mean using a webfont? ( i.e. http://www.google.com/webfonts )  Don't those get automatically aliased as well?", "count": 5}, {"author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > Is it possible for you to use a font with bitmap glyphs?\n> \n> Hm, never thought of it - do you mean using a webfont? ( i.e.\n> http://www.google.com/webfonts )  Don't those get automatically aliased as\n> well?\n\nTruetype fonts can contain bitmap glyphs for specific sizes. See\nhttp://partners.adobe.com/public/developer/opentype/index_ebdt.html\nI don't have any specific examples of such fonts but I'm sure there are some.\n\nThese would not be antialiased if you render them at the correct size.\n\nThese could be used in Gecko with @font-face.", "attachment_id": null, "id": 5335111, "creation_time": "2011-03-10T03:48:06Z", "tags": [], "is_private": false, "time": "2011-03-10T03:48:06Z", "count": 6, "bug_id": 640134, "raw_text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > Is it possible for you to use a font with bitmap glyphs?\n> \n> Hm, never thought of it - do you mean using a webfont? ( i.e.\n> http://www.google.com/webfonts )  Don't those get automatically aliased as\n> well?\n\nTruetype fonts can contain bitmap glyphs for specific sizes. See\nhttp://partners.adobe.com/public/developer/opentype/index_ebdt.html\nI don't have any specific examples of such fonts but I'm sure there are some.\n\nThese would not be antialiased if you render them at the correct size.\n\nThese could be used in Gecko with @font-face."}, {"count": 7, "bug_id": 640134, "time": "2011-03-10T07:31:07Z", "author": "mimecuvalo@gmail.com", "creator": "mimecuvalo@gmail.com", "raw_text": "(In reply to comment #6)\n> Truetype fonts can contain bitmap glyphs for specific sizes. See\n> http://partners.adobe.com/public/developer/opentype/index_ebdt.html\n> I don't have any specific examples of such fonts but I'm sure there are some.\n\nGotcha.  Well, although it's beyond me currently, I'll study up on it and try to convert a font to have it or find some fonts that possess this property.\nHowever, I do imagine on my end that users will eventually request the ability to change the font to something else and when they do I'd have to start packaging more processed fonts (that have bitmap glyphs) with the addon.", "is_private": false, "tags": [], "creation_time": "2011-03-10T07:31:07Z", "attachment_id": null, "id": 5335326, "text": "(In reply to comment #6)\n> Truetype fonts can contain bitmap glyphs for specific sizes. See\n> http://partners.adobe.com/public/developer/opentype/index_ebdt.html\n> I don't have any specific examples of such fonts but I'm sure there are some.\n\nGotcha.  Well, although it's beyond me currently, I'll study up on it and try to convert a font to have it or find some fonts that possess this property.\nHowever, I do imagine on my end that users will eventually request the ability to change the font to something else and when they do I'd have to start packaging more processed fonts (that have bitmap glyphs) with the addon."}, {"count": 8, "raw_text": "Maybe.\n\nI suspect that the results you get for non-antialiased drawing of arbitrary fonts are going to look pretty bad.", "bug_id": 640134, "is_private": false, "tags": [], "time": "2011-03-10T08:24:18Z", "creation_time": "2011-03-10T08:24:18Z", "author": "roc@ocallahan.org", "attachment_id": null, "id": 5335381, "creator": "roc@ocallahan.org", "text": "Maybe.\n\nI suspect that the results you get for non-antialiased drawing of arbitrary fonts are going to look pretty bad."}, {"id": 5335427, "attachment_id": null, "creator": "jfkthame@gmail.com", "text": "(In reply to comment #6)\n> (In reply to comment #5)\n> > (In reply to comment #4)\n> > > Is it possible for you to use a font with bitmap glyphs?\n> > \n> > Hm, never thought of it - do you mean using a webfont? ( i.e.\n> > http://www.google.com/webfonts )  Don't those get automatically aliased as\n> > well?\n> \n> Truetype fonts can contain bitmap glyphs for specific sizes. See\n> http://partners.adobe.com/public/developer/opentype/index_ebdt.html\n> I don't have any specific examples of such fonts but I'm sure there are some.\n> \n> These would not be antialiased if you render them at the correct size.\n> \n> These could be used in Gecko with @font-face.\n\nThis would depend on platform behavior; DirectWrite, for example, seems to ignore embedded bitmaps except in CJK fonts, so it's not going to help for Windows users with h/w acceleration.", "author": "jfkthame@gmail.com", "creation_time": "2011-03-10T08:53:31Z", "time": "2011-03-10T08:53:31Z", "is_private": false, "tags": [], "raw_text": "(In reply to comment #6)\n> (In reply to comment #5)\n> > (In reply to comment #4)\n> > > Is it possible for you to use a font with bitmap glyphs?\n> > \n> > Hm, never thought of it - do you mean using a webfont? ( i.e.\n> > http://www.google.com/webfonts )  Don't those get automatically aliased as\n> > well?\n> \n> Truetype fonts can contain bitmap glyphs for specific sizes. See\n> http://partners.adobe.com/public/developer/opentype/index_ebdt.html\n> I don't have any specific examples of such fonts but I'm sure there are some.\n> \n> These would not be antialiased if you render them at the correct size.\n> \n> These could be used in Gecko with @font-face.\n\nThis would depend on platform behavior; DirectWrite, for example, seems to ignore embedded bitmaps except in CJK fonts, so it's not going to help for Windows users with h/w acceleration.", "bug_id": 640134, "count": 9}, {"author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "time": "2011-03-10T09:30:00Z", "count": 10, "bug_id": 640134, "text": "That's annoying. Could we just work around that if we wanted to?", "attachment_id": null, "id": 5335505, "creation_time": "2011-03-10T09:30:00Z", "tags": [], "is_private": false, "raw_text": "That's annoying. Could we just work around that if we wanted to?"}, {"time": "2011-03-10T09:34:30Z", "tags": [], "is_private": false, "bug_id": 640134, "raw_text": "Moreover, we cannot display remote bitmap fonts via @font-face at the moment because ots drops the bitmap tables.\nWorkaround: turn gfx.downloadable_fonts.sanitize to off.", "count": 11, "text": "Moreover, we cannot display remote bitmap fonts via @font-face at the moment because ots drops the bitmap tables.\nWorkaround: turn gfx.downloadable_fonts.sanitize to off.", "creator": "VYV03354@nifty.ne.jp", "attachment_id": null, "id": 5335514, "author": "VYV03354@nifty.ne.jp", "creation_time": "2011-03-10T09:34:30Z"}, {"raw_text": "Sigh. It's a valid use-case, but I really wouldn't want to add a new CSS property for just this one use-case... Goodness me, maybe SVG Fonts are the answer :-).", "is_private": false, "tags": [], "creation_time": "2011-03-10T09:38:46Z", "attachment_id": null, "id": 5335518, "text": "Sigh. It's a valid use-case, but I really wouldn't want to add a new CSS property for just this one use-case... Goodness me, maybe SVG Fonts are the answer :-).", "bug_id": 640134, "count": 12, "time": "2011-03-10T09:38:46Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org"}, {"creation_time": "2011-03-10T09:43:52Z", "id": 5335522, "attachment_id": null, "text": "(In reply to comment #8)\n> I suspect that the results you get for non-antialiased drawing of arbitrary\n> fonts are going to look pretty bad.\n\nYes, in many cases they'll be awful at small sizes. It would be up to authors/users to apply such an option only to fonts that have been hinted appropriately for non-AA usage, if they want clean-looking results.\n\n(In reply to comment #10)\n> That's annoying. Could we just work around that if we wanted to?\n\nIn principle, I suppose we could, but it'd mean digging through several font tables to find the bitmaps and blitting them ourselves - seems like a lot of effort for a fairly obscure edge case.\n\nI think a more reasonable approach would be to allow control over the rendering modes - subpixel (with or without fractional positioning), grayscale, or aliased - but I'm not sure how best to expose that control.\n\nUsers already have some system-wide control via the ClearType Tuner control panel (on Windows) or other facilities depending on the OS, but the point here is that specific settings may be wanted just for a certain element. That suggests CSS control. However, I'm wary of allowing page authors to impose their font-rasterization preferences on users, overriding the user's settings, as this is often a very personal preference. That's what lies behind comment #1, I assume. But then, how many users would have any idea how to customize at that level?", "creator": "jfkthame@gmail.com", "author": "jfkthame@gmail.com", "raw_text": "(In reply to comment #8)\n> I suspect that the results you get for non-antialiased drawing of arbitrary\n> fonts are going to look pretty bad.\n\nYes, in many cases they'll be awful at small sizes. It would be up to authors/users to apply such an option only to fonts that have been hinted appropriately for non-AA usage, if they want clean-looking results.\n\n(In reply to comment #10)\n> That's annoying. Could we just work around that if we wanted to?\n\nIn principle, I suppose we could, but it'd mean digging through several font tables to find the bitmaps and blitting them ourselves - seems like a lot of effort for a fairly obscure edge case.\n\nI think a more reasonable approach would be to allow control over the rendering modes - subpixel (with or without fractional positioning), grayscale, or aliased - but I'm not sure how best to expose that control.\n\nUsers already have some system-wide control via the ClearType Tuner control panel (on Windows) or other facilities depending on the OS, but the point here is that specific settings may be wanted just for a certain element. That suggests CSS control. However, I'm wary of allowing page authors to impose their font-rasterization preferences on users, overriding the user's settings, as this is often a very personal preference. That's what lies behind comment #1, I assume. But then, how many users would have any idea how to customize at that level?", "bug_id": 640134, "count": 13, "time": "2011-03-10T09:43:52Z", "is_private": false, "tags": []}, {"time": "2011-03-10T09:44:39Z", "bug_id": 640134, "count": 14, "creator": "jfkthame@gmail.com", "author": "jfkthame@gmail.com", "is_private": false, "tags": [], "raw_text": "(In reply to comment #12)\n> Sigh. It's a valid use-case, but I really wouldn't want to add a new CSS\n> property for just this one use-case... Goodness me, maybe SVG Fonts are the\n> answer :-).\n\nNot sure how serious that comment is :) .... does SVG provide control over antialiasing?", "id": 5335525, "attachment_id": null, "text": "(In reply to comment #12)\n> Sigh. It's a valid use-case, but I really wouldn't want to add a new CSS\n> property for just this one use-case... Goodness me, maybe SVG Fonts are the\n> answer :-).\n\nNot sure how serious that comment is :) .... does SVG provide control over antialiasing?", "creation_time": "2011-03-10T09:44:39Z"}, {"author": "jfkthame@gmail.com", "creator": "jfkthame@gmail.com", "text": "(In reply to comment #12)\n> Sigh. It's a valid use-case, but I really wouldn't want to add a new CSS\n> property for just this one use-case... \n\nNo need for a new property, just a new value for an existing property:\n\n  .term {\n    font-family: monospace;\n    text-rendering: aliased;\n  }\n\nMaybe we should just do this. If authors misuse it to impose aliased rendering all over the place just because they happen to like it, and users _dislike_ the ragged results, it's up to users to frequent other sites. Just like if an author insists on using colors, fonts, etc. that look ugly to me - I'm unlikely to spend much time on those pages.", "id": 5335539, "attachment_id": null, "creation_time": "2011-03-10T09:52:19Z", "tags": [], "is_private": false, "time": "2011-03-10T09:52:19Z", "count": 15, "bug_id": 640134, "raw_text": "(In reply to comment #12)\n> Sigh. It's a valid use-case, but I really wouldn't want to add a new CSS\n> property for just this one use-case... \n\nNo need for a new property, just a new value for an existing property:\n\n  .term {\n    font-family: monospace;\n    text-rendering: aliased;\n  }\n\nMaybe we should just do this. If authors misuse it to impose aliased rendering all over the place just because they happen to like it, and users _dislike_ the ragged results, it's up to users to frequent other sites. Just like if an author insists on using colors, fonts, etc. that look ugly to me - I'm unlikely to spend much time on those pages."}, {"text": "(In reply to comment #14)\n> Not sure how serious that comment is :) .... does SVG provide control over\n> antialiasing?\n\nWith \"full\" SVG fonts you could put PNGs in your SVG, so as long as you display it at the right size, you get pixel-accurate results.\n\nI thought of a new text-rendering value and rejected it, but now that you suggest it again I think it would make sense ... some browsers still use text-rendering to control ligaturization and kerning, which is orthogonal, but I suppose that wouldn't really be a problem in practice.", "creator": "roc@ocallahan.org", "attachment_id": null, "id": 5335556, "author": "roc@ocallahan.org", "creation_time": "2011-03-10T10:05:25Z", "time": "2011-03-10T10:05:25Z", "tags": [], "is_private": false, "bug_id": 640134, "raw_text": "(In reply to comment #14)\n> Not sure how serious that comment is :) .... does SVG provide control over\n> antialiasing?\n\nWith \"full\" SVG fonts you could put PNGs in your SVG, so as long as you display it at the right size, you get pixel-accurate results.\n\nI thought of a new text-rendering value and rejected it, but now that you suggest it again I think it would make sense ... some browsers still use text-rendering to control ligaturization and kerning, which is orthogonal, but I suppose that wouldn't really be a problem in practice.", "count": 16}, {"tags": [], "is_private": false, "time": "2011-09-18T12:31:22Z", "count": 17, "bug_id": 640134, "raw_text": "Sorry to bring up an old bug, but I'd like to point out another use-case. This would be quite useful for a retro appearance on certain websites and apps, such as http://www.nitrome.com/ . This would also be useful for another site that I'm making, so it would be greatly appreciated if this could be implemented (although it would be even better if it could be standardised).", "author": "josh.tumath+bugzilla@outlook.com", "text": "Sorry to bring up an old bug, but I'd like to point out another use-case. This would be quite useful for a retro appearance on certain websites and apps, such as http://www.nitrome.com/ . This would also be useful for another site that I'm making, so it would be greatly appreciated if this could be implemented (although it would be even better if it could be standardised).", "creator": "josh.tumath+bugzilla@outlook.com", "attachment_id": null, "id": 5722023, "creation_time": "2011-09-18T12:31:22Z"}, {"time": "2011-11-28T14:03:44Z", "tags": [], "is_private": false, "bug_id": 640134, "raw_text": "Another usecase for the font-smooth property are bitmap fonts which should never be anti-alised.", "count": 18, "text": "Another usecase for the font-smooth property are bitmap fonts which should never be anti-alised.", "creator": "mail@dasprids.de", "id": 5875420, "attachment_id": null, "author": "mail@dasprids.de", "creation_time": "2011-11-28T14:03:44Z"}, {"tags": [], "is_private": false, "time": "2011-11-28T17:08:14Z", "count": 19, "bug_id": 640134, "raw_text": "(In reply to Ben Scholzen from comment #18)\n> Another usecase for the font-smooth property are bitmap fonts which should\n> never be anti-alised.\n\nIf they should never be anti-aliased, then it would be a bug for the implementation to do so, and there's no need for a property to control it.", "author": "dbaron@dbaron.org", "creator": "dbaron@dbaron.org", "text": "(In reply to Ben Scholzen from comment #18)\n> Another usecase for the font-smooth property are bitmap fonts which should\n> never be anti-alised.\n\nIf they should never be anti-aliased, then it would be a bug for the implementation to do so, and there's no need for a property to control it.", "id": 5875857, "attachment_id": null, "creation_time": "2011-11-28T17:08:14Z"}, {"creator": "mail@dasprids.de", "author": "mail@dasprids.de", "time": "2011-11-28T19:13:48Z", "bug_id": 640134, "count": 20, "id": 5876332, "attachment_id": null, "text": "(In reply to David Baron [:dbaron] from comment #19)\n> (In reply to Ben Scholzen from comment #18)\n> > Another usecase for the font-smooth property are bitmap fonts which should\n> > never be anti-alised.\n> \n> If they should never be anti-aliased, then it would be a bug for the\n> implementation to do so, and there's no need for a property to control it.\n\nWell, by bitmap fonts, I meant pixel fonts like those:\nhttp://www.fontsquirrel.com/fonts/list/style/Pixel", "creation_time": "2011-11-28T19:13:48Z", "is_private": false, "tags": [], "raw_text": "(In reply to David Baron [:dbaron] from comment #19)\n> (In reply to Ben Scholzen from comment #18)\n> > Another usecase for the font-smooth property are bitmap fonts which should\n> > never be anti-alised.\n> \n> If they should never be anti-aliased, then it would be a bug for the\n> implementation to do so, and there's no need for a property to control it.\n\nWell, by bitmap fonts, I meant pixel fonts like those:\nhttp://www.fontsquirrel.com/fonts/list/style/Pixel"}, {"attachment_id": null, "id": 6580737, "text": "I need to take some screenshots at 200% zoom - is there a way to disable font anti-aliasing in Firefox for this purpose so they become clear and crisp?", "creation_time": "2012-08-24T13:21:48Z", "is_private": false, "tags": [], "raw_text": "I need to take some screenshots at 200% zoom - is there a way to disable font anti-aliasing in Firefox for this purpose so they become clear and crisp?", "creator": "abletony84@gmail.com", "author": "abletony84@gmail.com", "time": "2012-08-24T13:21:48Z", "bug_id": 640134, "count": 21}, {"creator": "matt.fairbrass@gmail.com", "author": "matt.fairbrass@gmail.com", "bug_id": 640134, "count": 22, "time": "2013-03-27T14:59:13Z", "creation_time": "2013-03-27T14:59:13Z", "attachment_id": null, "id": 7249477, "text": "I see this issue has been raised some time ago. Just to chime in on the conversation I think there should be a property to control whether or AA is applied to glyphs of a font or not, it should be down to the decision of the designer/developer based on his/her requirements for the project.\n\nAnother use case to support this request would be the use of Icon fonts, such as the ones used by Github: https://github.com/blog/1135-the-making-of-octicons . This is widely becoming a common use case.\n\nAs Ben Summers points out in this article: http://bens.me.uk/2012/web-font-icon-canvas-rendering by not providing a mechanism to disable sub-pixel anti-aliasing, we lose the crisp sharp edges of the glyphs as the designer intended.\n\n+1 for a similar feature as found in webkit to control this behavior.", "raw_text": "I see this issue has been raised some time ago. Just to chime in on the conversation I think there should be a property to control whether or AA is applied to glyphs of a font or not, it should be down to the decision of the designer/developer based on his/her requirements for the project.\n\nAnother use case to support this request would be the use of Icon fonts, such as the ones used by Github: https://github.com/blog/1135-the-making-of-octicons . This is widely becoming a common use case.\n\nAs Ben Summers points out in this article: http://bens.me.uk/2012/web-font-icon-canvas-rendering by not providing a mechanism to disable sub-pixel anti-aliasing, we lose the crisp sharp edges of the glyphs as the designer intended.\n\n+1 for a similar feature as found in webkit to control this behavior.", "is_private": false, "tags": []}, {"raw_text": "Maybe this would be better implemented as an @font-face descriptor? It seems want to define how a font family is meant to be rendered, as opposed to declaring a style that it should be rendered in.", "is_private": false, "tags": [], "creation_time": "2013-03-27T15:06:19Z", "id": 7249501, "attachment_id": null, "text": "Maybe this would be better implemented as an @font-face descriptor? It seems want to define how a font family is meant to be rendered, as opposed to declaring a style that it should be rendered in.", "bug_id": 640134, "count": 23, "time": "2013-03-27T15:06:19Z", "creator": "josh.tumath+bugzilla@outlook.com", "author": "josh.tumath+bugzilla@outlook.com"}, {"count": 24, "bug_id": 640134, "time": "2013-10-30T15:24:29Z", "author": "mimecuvalo@gmail.com", "creator": "mimecuvalo@gmail.com", "raw_text": "Now that bug 857142 has landed - can we maybe add a 'none' value to it as well?", "is_private": false, "tags": [], "creation_time": "2013-10-30T15:24:29Z", "id": 8021322, "attachment_id": null, "text": "Now that bug 857142 has landed - can we maybe add a 'none' value to it as well?"}, {"raw_text": "`font-smoothing: none` is essential now\nas Matt said its neede for font icons. Just open this in FF and Chrome -- https://github.com/rails/rails\nThat is sad =(", "bug_id": 640134, "count": 25, "time": "2014-05-19T15:32:12Z", "is_private": false, "tags": [], "creation_time": "2014-05-19T15:32:12Z", "attachment_id": null, "id": 8810238, "creator": "hiddih@gmail.com", "text": "`font-smoothing: none` is essential now\nas Matt said its neede for font icons. Just open this in FF and Chrome -- https://github.com/rails/rails\nThat is sad =(", "author": "hiddih@gmail.com"}, {"attachment_id": null, "id": 8810349, "creator": "jfkthame@gmail.com", "text": "(In reply to hiddih from comment #25)\n> `font-smoothing: none` is essential now\n> as Matt said its neede for font icons. Just open this in FF and Chrome --\n> https://github.com/rails/rails\n> That is sad =(\n\nThis comment is too vague to be useful. What platform are you talking about? If you're referring to OS X, would -moz-osx-font-smoothing:grayscale help? (It certainly makes a difference to the rendering of the icons for me - but github isn't using it.)", "author": "jfkthame@gmail.com", "creation_time": "2014-05-19T15:53:28Z", "time": "2014-05-19T15:53:28Z", "is_private": false, "tags": [], "raw_text": "(In reply to hiddih from comment #25)\n> `font-smoothing: none` is essential now\n> as Matt said its neede for font icons. Just open this in FF and Chrome --\n> https://github.com/rails/rails\n> That is sad =(\n\nThis comment is too vague to be useful. What platform are you talking about? If you're referring to OS X, would -moz-osx-font-smoothing:grayscale help? (It certainly makes a difference to the rendering of the icons for me - but github isn't using it.)", "bug_id": 640134, "count": 26}, {"count": 27, "raw_text": "Sorry. Yep I'm talking about OSX.\n`-moz-osx-font-smoothing:grayscale` doesn't always help: http://codepen.io/H1D/pen/hpBkG", "bug_id": 640134, "is_private": false, "tags": [], "time": "2014-05-19T16:30:18Z", "creation_time": "2014-05-19T16:30:18Z", "author": "hiddih@gmail.com", "attachment_id": null, "id": 8810515, "text": "Sorry. Yep I'm talking about OSX.\n`-moz-osx-font-smoothing:grayscale` doesn't always help: http://codepen.io/H1D/pen/hpBkG", "creator": "hiddih@gmail.com"}, {"attachment_id": null, "id": 8811528, "text": "(In reply to hiddih from comment #27)\n\n> http://codepen.io/H1D/pen/hpBkG\n\nYes, the Firefox rendering of this is antialiased. But the Chrome rendering, while it's \"crisp\", suffers from a different problem: inconsistent line thicknesses at some sizes. IMO, that looks worse than the antialiased but much more even rendering we get in Firefox.", "creator": "jfkthame@gmail.com", "author": "jfkthame@gmail.com", "creation_time": "2014-05-19T19:48:03Z", "time": "2014-05-19T19:48:03Z", "is_private": false, "tags": [], "raw_text": "(In reply to hiddih from comment #27)\n\n> http://codepen.io/H1D/pen/hpBkG\n\nYes, the Firefox rendering of this is antialiased. But the Chrome rendering, while it's \"crisp\", suffers from a different problem: inconsistent line thicknesses at some sizes. IMO, that looks worse than the antialiased but much more even rendering we get in Firefox.", "bug_id": 640134, "count": 28}, {"tags": [], "is_private": false, "time": "2014-05-19T22:12:19Z", "count": 29, "bug_id": 640134, "raw_text": "> Chrome rendering, while it's \"crisp\", suffers from a different problem: inconsistent line thicknesses at some sizes\n - true. But still there are situation when I'd sacrifice consistent line thickness over \"crisp\" image. For example when font-size is fixed in a way, so this thickness issue won't arise.\n\nAnyway having an option is better that not to have it, isn't it?", "author": "hiddih@gmail.com", "text": "> Chrome rendering, while it's \"crisp\", suffers from a different problem: inconsistent line thicknesses at some sizes\n - true. But still there are situation when I'd sacrifice consistent line thickness over \"crisp\" image. For example when font-size is fixed in a way, so this thickness issue won't arise.\n\nAnyway having an option is better that not to have it, isn't it?", "creator": "hiddih@gmail.com", "attachment_id": null, "id": 8812344, "creation_time": "2014-05-19T22:12:19Z"}]}}, "comments": {}}