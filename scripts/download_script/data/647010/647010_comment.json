{"comments": {}, "bugs": {"647010": {"comments": [{"time": "2011-03-31T22:16:37Z", "is_private": false, "tags": [], "raw_text": "MustLive reported this today to security@m.o and I was unable to find an existing bug in Bugzilla, so I've opened this.  Feel free to DUP it if you find the appropriate bug.  I'll write the short summary and include MustLive's full message below:\n\nSummary:\n\nUsers can be fooled into typing their credentials into HTTP authentication dialogs from other (potentially attacker-controlled) web sites if an attacker can inject content protected by HTTP auth into a legitimate site.  Sub-document resources like images, scripts, iframes, etc. should not be able to cause this dialog, possibly in any case, but certainly in cases where the resource is in a different origin.\n\nFull Message:\n\nHello Mozilla!\n \nI want to warn you about URL Spoofing vulnerability in Mozilla Firefox (and in other browsers). I found it long time ago, at 6th of February 2008, and at last Saturday I made announcement of it at my site (just found time for it). Vulnerability is low risk and can be considered by you and all browser vendors as small one, but I think it worth mentioning.\n \nAnd it has enough danger for users of browsers (of almost all browsers, because all browsers which support Basic/Digest Authentication are vulnerable) to not just write small post about it, but to inform all browser vendors (which browsers I have at my computer and in which I've tested). Affected are Mozilla Firefox (and Mozilla and all other Gecko-based browsers), Internet Explorer, Google Chrome and Opera.\n \nThis is better to call attack, then vulnerability, because it's using built-in browsers functionality (and its intended behavior) to attack users of web sites. This attack allows to conduct phishing attacks on users of web sites - in this case phishing is doing not at other (phishing) sites, not with using of holes of target sites (like reflected XSS or persistent XSS), but with using of browsers functionality (and allowed functionality of target sites to place external content).\n \nI called this attack as Onsite phishing (or Inline phishing). It can be used (including by phishers) for stealing of logins and passwords of users of web sites.\n \nAs I've tested, a lot of different methods (with using of tags and CSS), which allow to make cross-site requests, can be used to conduct this attack. Except prefetching (in all Gecko-based browsers which support prefetching functionality), which doesn't show Authentication window at receiving of 401 response from web server. The next methods can be used:\n \nTags img, script, iframe, frame, embed, link (css) - Mozilla, Firefox, IE, Google Chrome and Opera.\nTag object - Internet Explorer, Google Chrome and Opera.\nCSS (inline, in html files, in external css files): such as -moz-binding:url - Mozilla and Firefox < 3.0, such as background-image:url - in all browsers.\n \nHere are screenshots of the attack in different browsers (in Firefox 3.0.19, 3.5.x, 3.6.x. 4.0b2 the dialog window looks almost equally):\n\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Mozilla.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Firefox.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20IE6.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20IE7.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20IE8.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Chrome.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Opera.png\n \nThe attack can be made as reflected at target site, as persistent (with using of allowed functionality at target site, which allows to put some tags, like img tag). The persistent attack is more dangerous (and such type of attack is showed on screenshots). And there are millions of web sites which allow such user generated content (like img tags) which can lead to such persistent attacks. If you'll need some additional explanation of this attack to understand it better, then tell me and I'll write you common attack scenario for it.\n \nVulnerable are Mozilla Firefox 3.0.19, Firefox 3.5.11, Firefox 3.6.8, Firefox 4.0b2 and previous and next versions (and other browsers).\n \nAttend to security of all of yours web sites, web software, browsers and to security audit.\n \nI mentioned about this vulnerability at my site (http://websecurity.com.ua/5038/). For now I don't post any concrete information about vulnerability, in order to inform you first and give you time to fix them.\n \nBest wishes & regards,\nMustLive\nAdministrator of Websecurity web site\nhttp://websecurity.com.ua", "bug_id": 647010, "count": 0, "id": 5384774, "attachment_id": null, "creator": "brandon@hackmill.com", "text": "MustLive reported this today to security@m.o and I was unable to find an existing bug in Bugzilla, so I've opened this.  Feel free to DUP it if you find the appropriate bug.  I'll write the short summary and include MustLive's full message below:\n\nSummary:\n\nUsers can be fooled into typing their credentials into HTTP authentication dialogs from other (potentially attacker-controlled) web sites if an attacker can inject content protected by HTTP auth into a legitimate site.  Sub-document resources like images, scripts, iframes, etc. should not be able to cause this dialog, possibly in any case, but certainly in cases where the resource is in a different origin.\n\nFull Message:\n\nHello Mozilla!\n \nI want to warn you about URL Spoofing vulnerability in Mozilla Firefox (and in other browsers). I found it long time ago, at 6th of February 2008, and at last Saturday I made announcement of it at my site (just found time for it). Vulnerability is low risk and can be considered by you and all browser vendors as small one, but I think it worth mentioning.\n \nAnd it has enough danger for users of browsers (of almost all browsers, because all browsers which support Basic/Digest Authentication are vulnerable) to not just write small post about it, but to inform all browser vendors (which browsers I have at my computer and in which I've tested). Affected are Mozilla Firefox (and Mozilla and all other Gecko-based browsers), Internet Explorer, Google Chrome and Opera.\n \nThis is better to call attack, then vulnerability, because it's using built-in browsers functionality (and its intended behavior) to attack users of web sites. This attack allows to conduct phishing attacks on users of web sites - in this case phishing is doing not at other (phishing) sites, not with using of holes of target sites (like reflected XSS or persistent XSS), but with using of browsers functionality (and allowed functionality of target sites to place external content).\n \nI called this attack as Onsite phishing (or Inline phishing). It can be used (including by phishers) for stealing of logins and passwords of users of web sites.\n \nAs I've tested, a lot of different methods (with using of tags and CSS), which allow to make cross-site requests, can be used to conduct this attack. Except prefetching (in all Gecko-based browsers which support prefetching functionality), which doesn't show Authentication window at receiving of 401 response from web server. The next methods can be used:\n \nTags img, script, iframe, frame, embed, link (css) - Mozilla, Firefox, IE, Google Chrome and Opera.\nTag object - Internet Explorer, Google Chrome and Opera.\nCSS (inline, in html files, in external css files): such as -moz-binding:url - Mozilla and Firefox < 3.0, such as background-image:url - in all browsers.\n \nHere are screenshots of the attack in different browsers (in Firefox 3.0.19, 3.5.x, 3.6.x. 4.0b2 the dialog window looks almost equally):\n\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Mozilla.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Firefox.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20IE6.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20IE7.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20IE8.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Chrome.png\nhttp://websecurity.com.ua/uploads/2011/03/Attack%20on%20Opera.png\n \nThe attack can be made as reflected at target site, as persistent (with using of allowed functionality at target site, which allows to put some tags, like img tag). The persistent attack is more dangerous (and such type of attack is showed on screenshots). And there are millions of web sites which allow such user generated content (like img tags) which can lead to such persistent attacks. If you'll need some additional explanation of this attack to understand it better, then tell me and I'll write you common attack scenario for it.\n \nVulnerable are Mozilla Firefox 3.0.19, Firefox 3.5.11, Firefox 3.6.8, Firefox 4.0b2 and previous and next versions (and other browsers).\n \nAttend to security of all of yours web sites, web software, browsers and to security audit.\n \nI mentioned about this vulnerability at my site (http://websecurity.com.ua/5038/). For now I don't post any concrete information about vulnerability, in order to inform you first and give you time to fix them.\n \nBest wishes & regards,\nMustLive\nAdministrator of Websecurity web site\nhttp://websecurity.com.ua", "author": "brandon@hackmill.com", "creation_time": "2011-03-31T22:16:37Z"}, {"is_private": false, "tags": [], "raw_text": "A major problem here is site compat...", "attachment_id": null, "id": 5386394, "text": "A major problem here is site compat...", "creation_time": "2011-04-01T16:04:05Z", "time": "2011-04-01T16:04:05Z", "count": 1, "bug_id": 647010, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu"}, {"time": "2011-04-01T19:40:44Z", "is_private": false, "tags": [], "raw_text": "Like the reporter suggested, it might be OK to allow sub-resources with the same origin as the main document to cause the auth dialog to pop up. At least then the plan to make the auth dialog a doorhanger would continue to make sense.\n\nPerhaps this could also be made a setting that is controlled by CSP or a CSP-like mechanism? If so, the default should be to restrict to the same origin.", "bug_id": 647010, "count": 2, "attachment_id": null, "id": 5387060, "text": "Like the reporter suggested, it might be OK to allow sub-resources with the same origin as the main document to cause the auth dialog to pop up. At least then the plan to make the auth dialog a doorhanger would continue to make sense.\n\nPerhaps this could also be made a setting that is controlled by CSP or a CSP-like mechanism? If so, the default should be to restrict to the same origin.", "creator": "brian@briansmith.org", "author": "brian@briansmith.org", "creation_time": "2011-04-01T19:40:44Z"}, {"bug_id": 647010, "raw_text": "(In reply to comment #2)\n> Perhaps this could also be made a setting that is controlled by CSP or a\n> CSP-like mechanism? If so, the default should be to restrict to the same\n> origin.\n\nFunny you mention that.  A http-auth-src directive (perhaps differently named) has already been proposed as a new CSP feature.", "count": 3, "time": "2011-04-01T20:50:55Z", "tags": [], "is_private": false, "creation_time": "2011-04-01T20:50:55Z", "text": "(In reply to comment #2)\n> Perhaps this could also be made a setting that is controlled by CSP or a\n> CSP-like mechanism? If so, the default should be to restrict to the same\n> origin.\n\nFunny you mention that.  A http-auth-src directive (perhaps differently named) has already been proposed as a new CSP feature.", "creator": "brandon@hackmill.com", "id": 5387257, "attachment_id": null, "author": "brandon@hackmill.com"}, {"is_private": false, "tags": [], "time": "2011-04-02T15:37:40Z", "count": 4, "raw_text": "echos of bug 580168 ? That bug had been leaning towards WONTFIX, so maybe CSP is a way forward?", "bug_id": 647010, "author": "mcmanus@ducksong.com", "attachment_id": null, "id": 5388336, "creator": "mcmanus@ducksong.com", "text": "echos of bug 580168 ? That bug had been leaning towards WONTFIX, so maybe CSP is a way forward?", "creation_time": "2011-04-02T15:37:40Z"}, {"text": "I think so. The http-auth-src in CSP can be a good solution to this. Limiting to http-auth-src to the same domain by default might break the web.", "attachment_id": null, "id": 5393827, "creation_time": "2011-04-07T02:39:02Z", "tags": [], "is_private": false, "raw_text": "I think so. The http-auth-src in CSP can be a good solution to this. Limiting to http-auth-src to the same domain by default might break the web.", "creator": "mozilla@yehg.net", "author": "mozilla@yehg.net", "time": "2011-04-07T02:39:02Z", "bug_id": 647010, "count": 5}, {"creator": "mustlive@websecurity.com.ua", "text": "Dear Mozilla developers!\n\nAs I already wrote to Brandon, it's quite possible, that I was not first who have though about this attack on users of different web browsers. And I though so in February 2008, when found this hole, and because I've never heard about this attack from that time, so I decided to inform four browsers vendors about it. And if there are no earlier entries in Bugzilla about this issue, then this will be such one.\n\nTo mentioned in my letter I'll add, that my position is the next: browsers vendors need to fix it. If they begun long time ago to fixing phishing attacks via phishing sites (by using of blacklists of sites - which is built-in feature in most modern browsers), then this attack is another phishing attack vector and it also need to be fixed (and efficiently).\n\nThere are two ways which you and other browsers vendors can go:\n\n1. Fix it completely.\n2. Made some interface improvements to reduce the risk.\n\nIt's possible to combine both of them, but if you'll make #1, then there will be no need in #2.\n\n#1 - it's to fix issue completely, to remove possibility for phishing attacks (it can be done in different ways).\n\n#2 - it's to improve user interface. Like to add highlighting to domain name (to make it harder to fool people) and to add possibility to get information about the domain which shows authentication window. The last feature is already implemented in Opera - in only one from all browsers tested by me (see on my screenshots or open authentication window in Opera 10 or 11). In Opera users have more chances to identified such phishing attacks, but even this browsers needs to fix this issue. So #1 is very recommended for all browsers vendors.\n\nConcerning CSP, which many of you have mentioned. It's a good way to solve this issue. But it has two shortcomings:\n\n1. CSP is supported only in Firefox 4.0 (and I've recommended to fix this issue in Firefox 3.x too).\n2. CSP will require actions from admins of web sites, so it'll take a long time, when all sites will be protected against this attack. So during a long time there will be sites, where users of Gecko-based browsers (even of last versions) will be under risk of this attack.\n\nSo take it into account when you'll be working on the fix.", "id": 5398540, "attachment_id": null, "author": "mustlive@websecurity.com.ua", "creation_time": "2011-04-09T19:23:14Z", "time": "2011-04-09T19:23:14Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "Dear Mozilla developers!\n\nAs I already wrote to Brandon, it's quite possible, that I was not first who have though about this attack on users of different web browsers. And I though so in February 2008, when found this hole, and because I've never heard about this attack from that time, so I decided to inform four browsers vendors about it. And if there are no earlier entries in Bugzilla about this issue, then this will be such one.\n\nTo mentioned in my letter I'll add, that my position is the next: browsers vendors need to fix it. If they begun long time ago to fixing phishing attacks via phishing sites (by using of blacklists of sites - which is built-in feature in most modern browsers), then this attack is another phishing attack vector and it also need to be fixed (and efficiently).\n\nThere are two ways which you and other browsers vendors can go:\n\n1. Fix it completely.\n2. Made some interface improvements to reduce the risk.\n\nIt's possible to combine both of them, but if you'll make #1, then there will be no need in #2.\n\n#1 - it's to fix issue completely, to remove possibility for phishing attacks (it can be done in different ways).\n\n#2 - it's to improve user interface. Like to add highlighting to domain name (to make it harder to fool people) and to add possibility to get information about the domain which shows authentication window. The last feature is already implemented in Opera - in only one from all browsers tested by me (see on my screenshots or open authentication window in Opera 10 or 11). In Opera users have more chances to identified such phishing attacks, but even this browsers needs to fix this issue. So #1 is very recommended for all browsers vendors.\n\nConcerning CSP, which many of you have mentioned. It's a good way to solve this issue. But it has two shortcomings:\n\n1. CSP is supported only in Firefox 4.0 (and I've recommended to fix this issue in Firefox 3.x too).\n2. CSP will require actions from admins of web sites, so it'll take a long time, when all sites will be protected against this attack. So during a long time there will be sites, where users of Gecko-based browsers (even of last versions) will be under risk of this attack.\n\nSo take it into account when you'll be working on the fix.", "count": 6}, {"creation_time": "2011-07-20T15:40:26Z", "author": "brandon@hackmill.com", "id": 5601839, "attachment_id": null, "text": "(In reply to comment #5)\n> I think so. The http-auth-src in CSP can be a good solution to this.\n> Limiting to http-auth-src to the same domain by default might break the web.\n\nWell, Chromium just announced this exact fix, so we don't have the breaking-the-web excuse anymore:\nhttp://blog.chromium.org/2011/06/new-chromium-security-features-june.html\n\n(they're blocking cross-origin HTTP auth prompts)", "creator": "brandon@hackmill.com", "count": 7, "raw_text": "(In reply to comment #5)\n> I think so. The http-auth-src in CSP can be a good solution to this.\n> Limiting to http-auth-src to the same domain by default might break the web.\n\nWell, Chromium just announced this exact fix, so we don't have the breaking-the-web excuse anymore:\nhttp://blog.chromium.org/2011/06/new-chromium-security-features-june.html\n\n(they're blocking cross-origin HTTP auth prompts)", "bug_id": 647010, "is_private": false, "tags": [], "time": "2011-07-20T15:40:26Z"}, {"creator": "gavin.sharp@gmail.com", "author": "gavin.sharp@gmail.com", "bug_id": 647010, "count": 8, "time": "2011-07-20T21:01:58Z", "creation_time": "2011-07-20T21:01:58Z", "text": "(In reply to comment #7)\n> Well, Chromium just announced this exact fix, so we don't have the\n> breaking-the-web excuse anymore:\n\nThat's not quite how that works - that Chromium's going to try something doesn't mean concerns about Web compat just go away :) They have good in-the-field experimentation data (and the ability to revert changes quickly), but they also still have a smaller (and different in composition) user base than we do. It's great that they're being aggressive - I think we should be more aggressive too - but we still need to be careful and avoid just blindly following their lead.", "id": 5602790, "attachment_id": null, "raw_text": "(In reply to comment #7)\n> Well, Chromium just announced this exact fix, so we don't have the\n> breaking-the-web excuse anymore:\n\nThat's not quite how that works - that Chromium's going to try something doesn't mean concerns about Web compat just go away :) They have good in-the-field experimentation data (and the ability to revert changes quickly), but they also still have a smaller (and different in composition) user base than we do. It's great that they're being aggressive - I think we should be more aggressive too - but we still need to be careful and avoid just blindly following their lead.", "tags": [], "is_private": false}, {"tags": [], "is_private": false, "time": "2011-11-29T04:02:38Z", "count": 9, "bug_id": 647010, "raw_text": "", "author": "brandon@hackmill.com", "text": "*** Bug 705501 has been marked as a duplicate of this bug. ***", "creator": "brandon@hackmill.com", "id": 5877897, "attachment_id": null, "creation_time": "2011-11-29T04:02:38Z"}, {"is_private": false, "tags": [], "time": "2012-01-24T22:42:03Z", "count": 10, "raw_text": "", "bug_id": 647010, "author": "gavin.sharp@gmail.com", "attachment_id": null, "id": 6005870, "creator": "gavin.sharp@gmail.com", "text": "*** Bug 559556 has been marked as a duplicate of this bug. ***", "creation_time": "2012-01-24T22:42:03Z"}, {"creation_time": "2012-01-24T22:42:09Z", "id": 6005873, "attachment_id": null, "creator": "gavin.sharp@gmail.com", "text": "*** Bug 714543 has been marked as a duplicate of this bug. ***", "author": "gavin.sharp@gmail.com", "raw_text": "", "bug_id": 647010, "count": 11, "time": "2012-01-24T22:42:09Z", "is_private": false, "tags": []}, {"bug_id": 647010, "raw_text": "See also bug 724182.", "count": 12, "time": "2012-02-04T01:57:15Z", "tags": [], "is_private": false, "creation_time": "2012-02-04T01:57:15Z", "creator": "brian@briansmith.org", "text": "See also bug 724182.", "id": 6034192, "attachment_id": null, "author": "brian@briansmith.org"}, {"creator": "brian@briansmith.org", "text": "Changing components because, while I think this is a good idea, but this shouldn't be implemented in Necko, but rather in some higher, UI-related component. Necko shouldn't be displaying or controlling UI at all (I know it does participate in UI-related things currently, but there is a bug already on file to have us stop doing so.)\n\nBug 724182 describes a way to limit the compatibility impact by enforcing CORS for these requests. Presumably, we could prompt for HTTP credentials if the CORS preflight request tells us to do so.", "id": 6034196, "attachment_id": null, "author": "brian@briansmith.org", "creation_time": "2012-02-04T02:01:25Z", "time": "2012-02-04T02:01:25Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "Changing components because, while I think this is a good idea, but this shouldn't be implemented in Necko, but rather in some higher, UI-related component. Necko shouldn't be displaying or controlling UI at all (I know it does participate in UI-related things currently, but there is a bug already on file to have us stop doing so.)\n\nBug 724182 describes a way to limit the compatibility impact by enforcing CORS for these requests. Presumably, we could prompt for HTTP credentials if the CORS preflight request tells us to do so.", "count": 13}, {"bug_id": 647010, "raw_text": "This tweet (https://twitter.com/RSnake/status/328908680097574912), which was going around yesterday is somewhat related. I tried implementing some hackish switch to requesting channel's tab logic in ModalPrompert.promptAuth, but couldn't get it to work.", "count": 14, "time": "2013-05-02T20:51:54Z", "tags": [], "is_private": false, "creation_time": "2013-05-02T20:51:54Z", "text": "This tweet (https://twitter.com/RSnake/status/328908680097574912), which was going around yesterday is somewhat related. I tried implementing some hackish switch to requesting channel's tab logic in ModalPrompert.promptAuth, but couldn't get it to work.", "creator": "evilpies@gmail.com", "attachment_id": null, "id": 7381732, "author": "evilpies@gmail.com"}, {"text": "We could easily bypass prompts at nsHttpChannelAuthProvider::PromptForIdentity for channels that are subrequests, however that is not that easy to recognize what should actually bypass.  We cannot use !LOAD_INITIAL_DOCUMENT_URI, since we must allow XHR and download to prompt.", "creator": "honzab.moz@firemni.cz", "id": 7382201, "attachment_id": null, "author": "honzab.moz@firemni.cz", "creation_time": "2013-05-02T22:33:13Z", "time": "2013-05-02T22:33:13Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "We could easily bypass prompts at nsHttpChannelAuthProvider::PromptForIdentity for channels that are subrequests, however that is not that easy to recognize what should actually bypass.  We cannot use !LOAD_INITIAL_DOCUMENT_URI, since we must allow XHR and download to prompt.", "count": 15}, {"count": 16, "raw_text": "(In reply to Tom Schuster [:evilpie] from comment #14)\n> This tweet (https://twitter.com/RSnake/status/328908680097574912)\n\nIs there a bug covering the \"delayed reload and auth\" attack?", "bug_id": 647010, "is_private": false, "tags": [], "time": "2013-05-17T09:15:16Z", "creation_time": "2013-05-17T09:15:16Z", "author": "fb+mozdev@quantumedia.de", "id": 7434599, "attachment_id": null, "text": "(In reply to Tom Schuster [:evilpie] from comment #14)\n> This tweet (https://twitter.com/RSnake/status/328908680097574912)\n\nIs there a bug covering the \"delayed reload and auth\" attack?", "creator": "fb+mozdev@quantumedia.de"}, {"raw_text": "Comments 7/8 imply Chrome was experimenting with this -- did it stick for them? Also, are they only allowing auth for the top-level doc load itself (as this bug imples), or only cross-origin loads? (Eg, if an unprotected index.html loads ./subdir/protected.foo, will Chrome prompt?)", "tags": [], "is_private": false, "creation_time": "2013-05-19T00:31:35Z", "text": "Comments 7/8 imply Chrome was experimenting with this -- did it stick for them? Also, are they only allowing auth for the top-level doc load itself (as this bug imples), or only cross-origin loads? (Eg, if an unprotected index.html loads ./subdir/protected.foo, will Chrome prompt?)", "attachment_id": null, "id": 7438647, "bug_id": 647010, "count": 17, "time": "2013-05-19T00:31:35Z", "creator": "jdinbox@gmail.com", "author": "jdinbox@gmail.com"}, {"creation_time": "2013-05-19T02:37:18Z", "author": "brian@briansmith.org", "id": 7438768, "attachment_id": null, "text": "I changed this to sec-high because it meets the criteria \"Spoofing of full URL bar or bypass of SSL integrity checks\". I think it is fair to say that users are unlikely to notice when the origin in the HTTP auth dialog box jibberish is different than the origin in the address bar. Note that even with mixed content blocker enabled, SSL integrity checks can be bypassed because we still allow non-HTTPS images/audio/video in HTTPS pages.", "creator": "brian@briansmith.org", "count": 18, "raw_text": "I changed this to sec-high because it meets the criteria \"Spoofing of full URL bar or bypass of SSL integrity checks\". I think it is fair to say that users are unlikely to notice when the origin in the HTTP auth dialog box jibberish is different than the origin in the address bar. Note that even with mixed content blocker enabled, SSL integrity checks can be bypassed because we still allow non-HTTPS images/audio/video in HTTPS pages.", "bug_id": 647010, "is_private": false, "tags": [], "time": "2013-05-19T02:37:18Z"}, {"author": "dveditz@mozilla.com", "creator": "dveditz@mozilla.com", "count": 19, "bug_id": 647010, "time": "2013-06-04T19:16:26Z", "creation_time": "2013-06-04T19:16:26Z", "id": 7496732, "attachment_id": null, "text": "HTTP auth is rarely used on the public web in practice, this is not anything like a general SSL spoof.", "raw_text": "HTTP auth is rarely used on the public web in practice, this is not anything like a general SSL spoof.", "is_private": false, "tags": []}, {"creation_time": "2013-06-14T23:35:05Z", "author": "mathnerd314...gph+mozilla@gmail.com", "attachment_id": null, "id": 7537784, "creator": "mathnerd314...gph+mozilla@gmail.com", "text": "Chrome did not stick; see http://crbug.com/174179. They only blocked cross-origin loads AFAICT.", "count": 20, "raw_text": "Chrome did not stick; see http://crbug.com/174179. They only blocked cross-origin loads AFAICT.", "bug_id": 647010, "is_private": false, "tags": [], "time": "2013-06-14T23:35:05Z"}, {"attachment_id": null, "id": 7538089, "text": "Thanks for the pointer. From a quick skim, looks like the actual undoing happened in http://crbug.com/123150... But it's not quite clear to me exactly _why_ it got reverted; the cross-origin blocking from http://crbug.com/81251 shipped for a year before being backed out (apparently not quite following their process, and now 174179 et al are back to figuring out how to fix things).\n\nI'm curious about the rationale for their backout. Seems like there was some user grumbling, but also maybe some unexpected breakage of authenticated XHR (see 123150 #68/69).", "creation_time": "2013-06-15T01:06:41Z", "is_private": false, "tags": [], "raw_text": "Thanks for the pointer. From a quick skim, looks like the actual undoing happened in http://crbug.com/123150... But it's not quite clear to me exactly _why_ it got reverted; the cross-origin blocking from http://crbug.com/81251 shipped for a year before being backed out (apparently not quite following their process, and now 174179 et al are back to figuring out how to fix things).\n\nI'm curious about the rationale for their backout. Seems like there was some user grumbling, but also maybe some unexpected breakage of authenticated XHR (see 123150 #68/69).", "author": "jdinbox@gmail.com", "creator": "jdinbox@gmail.com", "time": "2013-06-15T01:06:41Z", "count": 21, "bug_id": 647010}, {"creation_time": "2013-06-19T16:36:02Z", "creator": "mathnerd314...gph+mozilla@gmail.com", "text": "The worry is that someone could load a million http://user:pw@host url's and conduct a relatively silent brute-force password attack on e.g. a home router. They addressed it in 94578 by disabling the user:pw syntax, but that got reverted due to user complaints (123150). So instead they added back the auth dialogs (174129).", "id": 7552839, "attachment_id": null, "author": "mathnerd314...gph+mozilla@gmail.com", "bug_id": 647010, "raw_text": "The worry is that someone could load a million http://user:pw@host url's and conduct a relatively silent brute-force password attack on e.g. a home router. They addressed it in 94578 by disabling the user:pw syntax, but that got reverted due to user complaints (123150). So instead they added back the auth dialogs (174129).", "count": 22, "time": "2013-06-19T16:36:02Z", "tags": [], "is_private": false}, {"author": "jstenback+bmo@gmail.com", "text": "Honza, is this something you could take? We could likely apply a fix much like the fix the chrome guys took for this same problem.", "creator": "jstenback+bmo@gmail.com", "id": 7625693, "attachment_id": null, "creation_time": "2013-07-11T20:38:56Z", "tags": [], "is_private": false, "time": "2013-07-11T20:38:56Z", "count": 23, "bug_id": 647010, "raw_text": "Honza, is this something you could take? We could likely apply a fix much like the fix the chrome guys took for this same problem."}, {"tags": [], "is_private": false, "time": "2013-07-12T10:48:32Z", "count": 24, "bug_id": 647010, "raw_text": "(In reply to Johnny Stenback (:jst, jst@mozilla.com) from comment #23)\n> Honza, is this something you could take? We could likely apply a fix much\n> like the fix the chrome guys took for this same problem.\n\nYes, but not very soon.", "author": "honzab.moz@firemni.cz", "creator": "honzab.moz@firemni.cz", "text": "(In reply to Johnny Stenback (:jst, jst@mozilla.com) from comment #23)\n> Honza, is this something you could take? We could likely apply a fix much\n> like the fix the chrome guys took for this same problem.\n\nYes, but not very soon.", "id": 7627944, "attachment_id": null, "creation_time": "2013-07-12T10:48:32Z"}, {"id": 7734721, "attachment_id": null, "text": "So we are going to check only hosts? What happens another realm requests a different username/password ?", "creator": "torisugari@gmail.com", "author": "torisugari@gmail.com", "creation_time": "2013-08-10T17:56:43Z", "time": "2013-08-10T17:56:43Z", "is_private": false, "tags": [], "raw_text": "So we are going to check only hosts? What happens another realm requests a different username/password ?", "bug_id": 647010, "count": 25}, {"time": "2013-08-13T12:09:18Z", "count": 26, "bug_id": 647010, "author": "honzab.moz@firemni.cz", "creator": "honzab.moz@firemni.cz", "is_private": false, "tags": [], "raw_text": "(In reply to O. Atsushi (Torisugari) from comment #25)\n> So we are going to check only hosts? What happens another realm requests a\n> different username/password ?\n\nI'm not sure I understand tour questions fully, can you be more detailed please?", "id": 7741799, "attachment_id": null, "text": "(In reply to O. Atsushi (Torisugari) from comment #25)\n> So we are going to check only hosts? What happens another realm requests a\n> different username/password ?\n\nI'm not sure I understand tour questions fully, can you be more detailed please?", "creation_time": "2013-08-13T12:09:18Z"}, {"bug_id": 647010, "raw_text": "What's the plan here now? Disable all subresource HTTP-auth, or just cross-origin? I'd add both options and a pref, e.g.: \n\nnetwork.auth.allow-subresource-auth = (AUTH_ALLOW_SUBRESOURCE = 1) | (AUTH_ALLOW_CROSS_ORIGIN = 2)\n\nDefault is 1 (for web compat). Only allowing cross-origin (i.e. value of 2) wouldn't make any sense, of course.\n\nThis may also warrant a toggle in the security prefs panel (not just an about:config value). This can be tri-state (allow all, allow same-origin, disallow) or binary (with any of the three possible combinations) though I'd only offer a checkbox that toggles the first bit (i.e. allow subresource loading or not) and leave the cross-origin option to the power users.", "count": 27, "time": "2014-02-26T15:07:14Z", "tags": [], "is_private": false, "creation_time": "2014-02-26T15:07:14Z", "creator": "fb+mozdev@quantumedia.de", "text": "What's the plan here now? Disable all subresource HTTP-auth, or just cross-origin? I'd add both options and a pref, e.g.: \n\nnetwork.auth.allow-subresource-auth = (AUTH_ALLOW_SUBRESOURCE = 1) | (AUTH_ALLOW_CROSS_ORIGIN = 2)\n\nDefault is 1 (for web compat). Only allowing cross-origin (i.e. value of 2) wouldn't make any sense, of course.\n\nThis may also warrant a toggle in the security prefs panel (not just an about:config value). This can be tri-state (allow all, allow same-origin, disallow) or binary (with any of the three possible combinations) though I'd only offer a checkbox that toggles the first bit (i.e. allow subresource loading or not) and leave the cross-origin option to the power users.", "attachment_id": null, "id": 8465976, "author": "fb+mozdev@quantumedia.de"}, {"count": 28, "raw_text": "Does anyone know of any legitimate websites that need cross-site http auth prompts?  Looking at the chrome bugs on the issue, they ran into problems with xhr and iframes.  Chrome decided to block http auth prompts via images.\n\nFor this bug, it would be great if we could block all cross-site http auth requests and add an about:config pref to restore to previous functionality.  Since this might cause site compatibility issues, we could at a minimum deny cross site prompts from non-xhr and non-iframe loads.\n\nThere is a bug open to gather telemetry (https://bugzilla.mozilla.org/show_bug.cgi?id=979359).  We could gather some data to determine how frequently cross site auth prompts occur, and when they do occur we can check if they are xhr, frame, or other.  In order to gather telemetry, we will have to do the engineering work to implement this feature anyway.  Perhaps the implementation will be simpler now that we have loadInfo on channels (bug 1038756).  Before we show the prompt, we can do a same origin check with the loadInfo->loadingNode and check the content policy type of the load.\n\nAdding more options (allow everything, allow subresource same origin, deny subresource same origin), adding user visible options to preferences, and changing the UI to more prominently display the website requesting credentials would all also be nice.  But I think we can do those as followup bugs.", "bug_id": 647010, "is_private": false, "tags": [], "time": "2014-09-23T00:03:53Z", "creation_time": "2014-09-23T00:03:53Z", "author": "tanvi@mozilla.com", "attachment_id": null, "id": 9344629, "creator": "tanvi@mozilla.com", "text": "Does anyone know of any legitimate websites that need cross-site http auth prompts?  Looking at the chrome bugs on the issue, they ran into problems with xhr and iframes.  Chrome decided to block http auth prompts via images.\n\nFor this bug, it would be great if we could block all cross-site http auth requests and add an about:config pref to restore to previous functionality.  Since this might cause site compatibility issues, we could at a minimum deny cross site prompts from non-xhr and non-iframe loads.\n\nThere is a bug open to gather telemetry (https://bugzilla.mozilla.org/show_bug.cgi?id=979359).  We could gather some data to determine how frequently cross site auth prompts occur, and when they do occur we can check if they are xhr, frame, or other.  In order to gather telemetry, we will have to do the engineering work to implement this feature anyway.  Perhaps the implementation will be simpler now that we have loadInfo on channels (bug 1038756).  Before we show the prompt, we can do a same origin check with the loadInfo->loadingNode and check the content policy type of the load.\n\nAdding more options (allow everything, allow subresource same origin, deny subresource same origin), adding user visible options to preferences, and changing the UI to more prominently display the website requesting credentials would all also be nice.  But I think we can do those as followup bugs."}, {"author": "tanvi@mozilla.com", "creator": "tanvi@mozilla.com", "time": "2014-09-25T23:30:00Z", "count": 29, "bug_id": 647010, "text": "We have to be wary of a potential attack vector when turning cross-orign http auth off.  An attacker could try and brute force a password with something like:\n<img src=\"http://username:password@ipaddress\">\n\nThey could look for onerror events and cycle through passwords until they find one that doesn't invoke the onerror.\n\nI think we should try and turn off cross-origin http auth for everything but xhr and frames to start with.  And also disable sending credentials in the url when we block the auth prompt.", "attachment_id": null, "id": 9363778, "creation_time": "2014-09-25T23:30:00Z", "tags": [], "is_private": false, "raw_text": "We have to be wary of a potential attack vector when turning cross-orign http auth off.  An attacker could try and brute force a password with something like:\n<img src=\"http://username:password@ipaddress\">\n\nThey could look for onerror events and cycle through passwords until they find one that doesn't invoke the onerror.\n\nI think we should try and turn off cross-origin http auth for everything but xhr and frames to start with.  And also disable sending credentials in the url when we block the auth prompt."}, {"bug_id": 647010, "raw_text": "", "count": 30, "time": "2014-11-29T04:50:31Z", "tags": [], "is_private": false, "creation_time": "2014-11-29T04:50:31Z", "text": "*** Bug 1105944 has been marked as a duplicate of this bug. ***", "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 9650426, "author": "bzbarsky@mit.edu"}, {"creation_time": "2014-12-03T22:36:53Z", "author": "bugs@pettay.fi", "text": "Tanvi, do you think you could look at this?", "creator": "bugs@pettay.fi", "attachment_id": null, "id": 9658558, "count": 31, "bug_id": 647010, "raw_text": "Tanvi, do you think you could look at this?", "tags": [], "is_private": false, "time": "2014-12-03T22:36:53Z"}, {"creator": "tanvi@mozilla.com", "text": "(In reply to Olli Pettay [:smaug] from comment #31)\n> Tanvi, do you think you could look at this?\n\nLast I talked to jduell, he was going to add this to the networking teams backlog and see if he could assign someone from his team to this bug.  jduell, any update?", "id": 9661750, "attachment_id": null, "author": "tanvi@mozilla.com", "creation_time": "2014-12-04T22:40:50Z", "time": "2014-12-04T22:40:50Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "(In reply to Olli Pettay [:smaug] from comment #31)\n> Tanvi, do you think you could look at this?\n\nLast I talked to jduell, he was going to add this to the networking teams backlog and see if he could assign someone from his team to this bug.  jduell, any update?", "count": 32}, {"creation_time": "2014-12-05T00:29:47Z", "author": "jduell.mcbugs@gmail.com", "attachment_id": null, "id": 9662170, "creator": "jduell.mcbugs@gmail.com", "text": "Honza, can you either fix this or teach someone else in Necko (Valentin/Daniel/Dragana) how to?  Not urgent but worth fixing.", "count": 33, "raw_text": "Honza, can you either fix this or teach someone else in Necko (Valentin/Daniel/Dragana) how to?  Not urgent but worth fixing.", "bug_id": 647010, "is_private": false, "tags": [], "time": "2014-12-05T00:29:47Z"}, {"creation_time": "2015-01-13T21:55:51Z", "text": "OK, assigning to me to find an assignee..", "creator": "honzab.moz@firemni.cz", "id": 9790118, "attachment_id": null, "author": "honzab.moz@firemni.cz", "bug_id": 647010, "raw_text": "OK, assigning to me to find an assignee..", "count": 34, "time": "2015-01-13T21:55:51Z", "tags": [], "is_private": false}, {"creation_time": "2015-02-25T13:14:33Z", "text": "I will take a look at this.", "attachment_id": null, "id": 9956074, "raw_text": "I will take a look at this.", "tags": [], "is_private": false, "author": "dd.mozilla@gmail.com", "creator": "dd.mozilla@gmail.com", "count": 35, "bug_id": 647010, "time": "2015-02-25T13:14:33Z"}, {"creator": "honzab.moz@firemni.cz", "author": "honzab.moz@firemni.cz", "bug_id": 647010, "count": 36, "time": "2015-02-25T13:23:15Z", "creation_time": "2015-02-25T13:23:15Z", "attachment_id": null, "id": 9956109, "text": "Please next time update the assignee field.  Thanks.", "raw_text": "Please next time update the assignee field.  Thanks.", "is_private": false, "tags": []}, {"creation_time": "2015-02-26T15:36:47Z", "creator": "dd.mozilla@gmail.com", "text": "Created attachment 8569912\nbug_647010_v1.patch\n\nI am not sure if I am doing the right thing with cross-origin check - is it ok as it is implemented or i will need to look for top document and its uri?\nIt should be the top-document uri that i have to check against, but i am not sure i am doing it correctly. Probably it is not correct :)", "id": 9962243, "attachment_id": 8569912, "author": "dd.mozilla@gmail.com", "bug_id": 647010, "raw_text": "I am not sure if I am doing the right thing with cross-origin check - is it ok as it is implemented or i will need to look for top document and its uri?\nIt should be the top-document uri that i have to check against, but i am not sure i am doing it correctly. Probably it is not correct :)", "count": 37, "time": "2015-02-26T15:36:47Z", "tags": [], "is_private": false}, {"creation_time": "2015-02-26T19:03:40Z", "creator": "tanvi@mozilla.com", "text": "Comment on attachment 8569912\nbug_647010_v1.patch\n\nHi Dragana,\n\nThank you for picking up this bug!\n\nWhy are iframes whitelisted?  iframes should only be allow to cause the HTTP Auth prompt if they are same origin.\n\nAlso, we should use the loadingPrincipal from loadInfo instead of the triggeringPrincipal.  There are cases where the triggeringPrincipal is a css stylesheet (for example) and what we are looking for is the origin of the top level document.\nhttps://mxr.mozilla.org/mozilla-central/source/netwerk/base/nsILoadInfo.idl#57", "attachment_id": 8569912, "id": 9963294, "author": "tanvi@mozilla.com", "bug_id": 647010, "raw_text": "Hi Dragana,\n\nThank you for picking up this bug!\n\nWhy are iframes whitelisted?  iframes should only be allow to cause the HTTP Auth prompt if they are same origin.\n\nAlso, we should use the loadingPrincipal from loadInfo instead of the triggeringPrincipal.  There are cases where the triggeringPrincipal is a css stylesheet (for example) and what we are looking for is the origin of the top level document.\nhttps://mxr.mozilla.org/mozilla-central/source/netwerk/base/nsILoadInfo.idl#57", "count": 38, "time": "2015-02-26T19:03:40Z", "tags": [], "is_private": false}, {"bug_id": 647010, "count": 39, "time": "2015-02-26T19:25:49Z", "creator": "dd.mozilla@gmail.com", "author": "dd.mozilla@gmail.com", "raw_text": "Thank you for the feedback.\n\n(In reply to Tanvi Vyas [:tanvi] from comment #38)\n> Comment on attachment 8569912\n> bug_647010_v1.patch\n> \n> Hi Dragana,\n> \n> Thank you for picking up this bug!\n> \n> Why are iframes whitelisted?  iframes should only be allow to cause the HTTP\n> Auth prompt if they are same origin.\n> \n\nSorry I meant to change that..\n\n> Also, we should use the loadingPrincipal from loadInfo instead of the\n> triggeringPrincipal.  There are cases where the triggeringPrincipal is a css\n> stylesheet (for example) and what we are looking for is the origin of the\n> top level document.\n> https://mxr.mozilla.org/mozilla-central/source/netwerk/base/nsILoadInfo.\n> idl#57\n\nI have read that and just mixed them up. I have read today a lot of stuff about all loadInfo, loadingNode, content types... (the names are a bit confusing, at least when you first look at them)\nI will update it soon and ping you for feedback :)", "is_private": false, "tags": [], "creation_time": "2015-02-26T19:25:49Z", "attachment_id": null, "id": 9963416, "text": "Thank you for the feedback.\n\n(In reply to Tanvi Vyas [:tanvi] from comment #38)\n> Comment on attachment 8569912\n> bug_647010_v1.patch\n> \n> Hi Dragana,\n> \n> Thank you for picking up this bug!\n> \n> Why are iframes whitelisted?  iframes should only be allow to cause the HTTP\n> Auth prompt if they are same origin.\n> \n\nSorry I meant to change that..\n\n> Also, we should use the loadingPrincipal from loadInfo instead of the\n> triggeringPrincipal.  There are cases where the triggeringPrincipal is a css\n> stylesheet (for example) and what we are looking for is the origin of the\n> top level document.\n> https://mxr.mozilla.org/mozilla-central/source/netwerk/base/nsILoadInfo.\n> idl#57\n\nI have read that and just mixed them up. I have read today a lot of stuff about all loadInfo, loadingNode, content types... (the names are a bit confusing, at least when you first look at them)\nI will update it soon and ping you for feedback :)"}, {"attachment_id": 8570139, "id": 9964259, "text": "Created attachment 8570139\nbug_647010_v2.patch", "creation_time": "2015-02-26T21:52:20Z", "is_private": false, "tags": [], "raw_text": "", "creator": "dd.mozilla@gmail.com", "author": "dd.mozilla@gmail.com", "time": "2015-02-26T21:52:20Z", "bug_id": 647010, "count": 40}, {"time": "2015-02-27T00:21:40Z", "is_private": false, "tags": [], "raw_text": "+    nsCOMPtr<nsIChannel> chan = do_QueryInterface(mAuthChannel);\n+    nsCOMPtr<nsILoadInfo> loadInfo;\n+    chan->GetLoadInfo(getter_AddRefs(loadInfo));\n+    if (!loadInfo) {\n+        return true;\n+    }\n\nUnfortunately, I think we have to return false if there is no loadInfo.  addon created channels won't have a loadInfo attached to them.  Most Gecko channels should, so 99% of the time we can make a good decision about whether or not we should allow the auth prompt.  It is not ideal, but at least this patch gets us in a better place than we are today.\n\nJonas, Christoph - if you feel differently and feel that we can fail closed if there is no loadInfo in this case, please chime in!", "bug_id": 647010, "count": 41, "id": 9964949, "attachment_id": 8570139, "creator": "tanvi@mozilla.com", "text": "Comment on attachment 8570139\nbug_647010_v2.patch\n\n+    nsCOMPtr<nsIChannel> chan = do_QueryInterface(mAuthChannel);\n+    nsCOMPtr<nsILoadInfo> loadInfo;\n+    chan->GetLoadInfo(getter_AddRefs(loadInfo));\n+    if (!loadInfo) {\n+        return true;\n+    }\n\nUnfortunately, I think we have to return false if there is no loadInfo.  addon created channels won't have a loadInfo attached to them.  Most Gecko channels should, so 99% of the time we can make a good decision about whether or not we should allow the auth prompt.  It is not ideal, but at least this patch gets us in a better place than we are today.\n\nJonas, Christoph - if you feel differently and feel that we can fail closed if there is no loadInfo in this case, please chime in!", "author": "tanvi@mozilla.com", "creation_time": "2015-02-27T00:21:40Z"}, {"creation_time": "2015-02-27T16:08:05Z", "attachment_id": 8570139, "id": 9967081, "creator": "honzab.moz@firemni.cz", "text": "Comment on attachment 8570139\nbug_647010_v2.patch\n\nReview of attachment 8570139:\n-----------------------------------------------------------------\n\n::: modules/libpref/init/all.js\n@@ +1682,5 @@\n>  pref(\"network.automatic-ntlm-auth.allow-proxies\", true);\n>  pref(\"network.automatic-ntlm-auth.allow-non-fqdn\", false);\n>  pref(\"network.automatic-ntlm-auth.trusted-uris\", \"\");\n>  \n> +// Subresource HTTP-auth: 0 - do not allow suresources HTTP-auth\n\ndon't allow sub-resources to open WWW authentication credentials dialogs\n\nupdate the option 1 comment as well\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.cpp\n@@ +736,5 @@\n>                  level = nsIAuthPrompt2::LEVEL_SECURE;\n>              else if (authFlags & nsIHttpAuthenticator::IDENTITY_ENCRYPTED)\n>                  level = nsIAuthPrompt2::LEVEL_PW_ENCRYPTED;\n>  \n> +            // Prompt the use?\n\nuser\n\nbut this comment should rather say what the BlockPromp() method does.\n\n@@ +803,5 @@\n> +    nsCOMPtr<nsIPrefBranch> prefService =\n> +        do_GetService(NS_PREFSERVICE_CONTRACTID);\n> +    int32_t authAllowOpt;\n> +    nsresult rv = prefService->GetIntPref(\"network.auth.allow-subresource-auth\",\n> +                                          &authAllowOpt);\n\nyou may use mozilla::Preferences\n\nis this ensured to be called on the main thread only if you want to read the prefs?  maybe better would be to have a cache for the pref if MT-only cannot be enforced here.  It would also be faster.   See mozilla::Preferences::Add*VarCache methods.\n\n@@ +807,5 @@\n> +                                          &authAllowOpt);\n> +\n> +    // On error just allow everything.\n> +    // 2 - allow everything.\n> +    if (NS_FAILED(rv) || (authAllowOpt == 2)) {\n\nhave #defines for the values\nI'd slightly more prefer a switch here\nsplit the conditions (have two return false; for each side of ||)\n\n@@ +816,5 @@\n> +    if (authAllowOpt == 0) {\n> +        return true;\n> +    }\n> +\n> +    // 1 - only allow for subresources that are not cross-origin.\n\nthis is actually != 0 && != 2..\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.h\n@@ +110,5 @@\n>       * This is called from ProcessResponse.\n>       */\n>      nsresult ProcessSTSHeader();\n>  \n> +    bool BlockPrompt();\n\nsome comments please", "author": "honzab.moz@firemni.cz", "raw_text": "Review of attachment 8570139:\n-----------------------------------------------------------------\n\n::: modules/libpref/init/all.js\n@@ +1682,5 @@\n>  pref(\"network.automatic-ntlm-auth.allow-proxies\", true);\n>  pref(\"network.automatic-ntlm-auth.allow-non-fqdn\", false);\n>  pref(\"network.automatic-ntlm-auth.trusted-uris\", \"\");\n>  \n> +// Subresource HTTP-auth: 0 - do not allow suresources HTTP-auth\n\ndon't allow sub-resources to open WWW authentication credentials dialogs\n\nupdate the option 1 comment as well\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.cpp\n@@ +736,5 @@\n>                  level = nsIAuthPrompt2::LEVEL_SECURE;\n>              else if (authFlags & nsIHttpAuthenticator::IDENTITY_ENCRYPTED)\n>                  level = nsIAuthPrompt2::LEVEL_PW_ENCRYPTED;\n>  \n> +            // Prompt the use?\n\nuser\n\nbut this comment should rather say what the BlockPromp() method does.\n\n@@ +803,5 @@\n> +    nsCOMPtr<nsIPrefBranch> prefService =\n> +        do_GetService(NS_PREFSERVICE_CONTRACTID);\n> +    int32_t authAllowOpt;\n> +    nsresult rv = prefService->GetIntPref(\"network.auth.allow-subresource-auth\",\n> +                                          &authAllowOpt);\n\nyou may use mozilla::Preferences\n\nis this ensured to be called on the main thread only if you want to read the prefs?  maybe better would be to have a cache for the pref if MT-only cannot be enforced here.  It would also be faster.   See mozilla::Preferences::Add*VarCache methods.\n\n@@ +807,5 @@\n> +                                          &authAllowOpt);\n> +\n> +    // On error just allow everything.\n> +    // 2 - allow everything.\n> +    if (NS_FAILED(rv) || (authAllowOpt == 2)) {\n\nhave #defines for the values\nI'd slightly more prefer a switch here\nsplit the conditions (have two return false; for each side of ||)\n\n@@ +816,5 @@\n> +    if (authAllowOpt == 0) {\n> +        return true;\n> +    }\n> +\n> +    // 1 - only allow for subresources that are not cross-origin.\n\nthis is actually != 0 && != 2..\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.h\n@@ +110,5 @@\n>       * This is called from ProcessResponse.\n>       */\n>      nsresult ProcessSTSHeader();\n>  \n> +    bool BlockPrompt();\n\nsome comments please", "bug_id": 647010, "count": 42, "time": "2015-02-27T16:08:05Z", "is_private": false, "tags": []}, {"raw_text": "", "tags": [], "is_private": false, "creation_time": "2015-03-09T09:45:41Z", "text": "Created attachment 8574587\nbug_647010_v3.patch", "attachment_id": 8574587, "id": 10002909, "count": 43, "bug_id": 647010, "time": "2015-03-09T09:45:41Z", "author": "dd.mozilla@gmail.com", "creator": "dd.mozilla@gmail.com"}, {"raw_text": "", "is_private": false, "tags": [], "creation_time": "2015-03-09T21:48:52Z", "id": 10006017, "attachment_id": 8574880, "text": "Created attachment 8574880\nbug_647010_v3.patch", "bug_id": 647010, "count": 44, "time": "2015-03-09T21:48:52Z", "creator": "dd.mozilla@gmail.com", "author": "dd.mozilla@gmail.com"}, {"is_private": false, "tags": [], "time": "2015-03-09T21:49:18Z", "count": 45, "raw_text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=5167934020d5", "bug_id": 647010, "author": "dd.mozilla@gmail.com", "attachment_id": null, "id": 10006020, "text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=5167934020d5", "creator": "dd.mozilla@gmail.com", "creation_time": "2015-03-09T21:49:18Z"}, {"creation_time": "2015-03-10T19:19:04Z", "text": "Comment on attachment 8574880\nbug_647010_v3.patch\n\n+            // Prompt the user for HTTP-authentication dialog? Depending on the\n+            // pref, we may suppress the authentication dialog for all\n+            // sub-resources, only for cross-origin sub-resources or the dialog\n+            // will be displayed for all sub-resources.\nDepending on the pref setting, the authentication dialog may be blocked for all sub-resources, blocked for cross-origin sub-resources, or always allowed for sub-resources.\n(And the same comment change in nsHttpChannelAuthProvider.h)\n\n+            // For more details look at the bug 647010.\n+            if (BlockPrompt()) {\n+              return NS_ERROR_ABORT;\n+            }\n+\n\n\n+            nsCOMPtr<nsIURI> loadingURI;\n+            loadInfo->LoadingPrincipal()->GetURI(getter_AddRefs(loadingURI));\nYou should add a null check for LoadingPrincipal.\n\nLeaving the test for Honza.", "creator": "tanvi@mozilla.com", "id": 10010982, "attachment_id": 8574880, "author": "tanvi@mozilla.com", "bug_id": 647010, "raw_text": "+            // Prompt the user for HTTP-authentication dialog? Depending on the\n+            // pref, we may suppress the authentication dialog for all\n+            // sub-resources, only for cross-origin sub-resources or the dialog\n+            // will be displayed for all sub-resources.\nDepending on the pref setting, the authentication dialog may be blocked for all sub-resources, blocked for cross-origin sub-resources, or always allowed for sub-resources.\n(And the same comment change in nsHttpChannelAuthProvider.h)\n\n+            // For more details look at the bug 647010.\n+            if (BlockPrompt()) {\n+              return NS_ERROR_ABORT;\n+            }\n+\n\n\n+            nsCOMPtr<nsIURI> loadingURI;\n+            loadInfo->LoadingPrincipal()->GetURI(getter_AddRefs(loadingURI));\nYou should add a null check for LoadingPrincipal.\n\nLeaving the test for Honza.", "count": 46, "time": "2015-03-10T19:19:04Z", "tags": [], "is_private": false}, {"time": "2015-03-11T15:50:02Z", "count": 47, "bug_id": 647010, "author": "dd.mozilla@gmail.com", "creator": "dd.mozilla@gmail.com", "is_private": false, "tags": [], "raw_text": "make changes suggested by Tanvi and fixed failing test on Android.", "attachment_id": 8576046, "id": 10015492, "text": "Created attachment 8576046\nbug_647010_v4.patch\n\nmake changes suggested by Tanvi and fixed failing test on Android.", "creation_time": "2015-03-11T15:50:02Z"}, {"raw_text": "Review of attachment 8576046:\n-----------------------------------------------------------------\n\nAny try run?\n\nI'd like to check the next version.\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.cpp\n@@ +28,5 @@\n>  namespace mozilla {\n>  namespace net {\n>  \n> +#define DO_NOT_ALLOW_AUTH_DIALOG_FOR_SUB_RESOURCES 0\n> +#define ALLOW_AUTH_DIALOG_FOR_NOT_CROSS_ORIGIN_SUB_RESOURCES 1\n\nthis should strictly reflect the description in all.js.\n\nI'd see the names rather as:\n\nSUBRESOURCE_AUTH_DIALOG_DISALLOW_ALL 0\nSUBRESOURCE_AUTH_DIALOG_DISALLOW_CROSS_ORIGIN 1\nSUBRESOURCE_AUTH_DIALOG_ALLOW_ALL 2\n\n@@ +64,5 @@\n>  {\n>      MOZ_ASSERT(!mAuthChannel, \"Disconnect wasn't called\");\n>  }\n>  \n> +uint32_t nsHttpChannelAuthProvider::sAuthAllowOpt = 1;\n\nuse #define\n\n@@ +71,5 @@\n> +nsHttpChannelAuthProvider::InitializePrefs()\n> +{\n> +  mozilla::Preferences::AddUintVarCache(&sAuthAllowOpt,\n> +                                        \"network.auth.allow-subresource-auth\",\n> +                                        1);\n\nnit: maybe assert main thread here.\n\n@@ +817,5 @@\n> +        (loadInfo->GetContentPolicyType() == nsIContentPolicy::TYPE_XMLHTTPREQUEST)) {\n> +        return false;\n> +    }\n> +\n> +    bool block = false;\n\nmaybe just directly return the result where applicable instead of playing with this local var?\n\n@@ +828,5 @@\n> +    case ALLOW_AUTH_DIALOG_FOR_NOT_CROSS_ORIGIN_SUB_RESOURCES:\n> +        // Do not open the http-authentication credentials dialog for\n> +        // the sub-resources only if they are not cross-origin.\n> +        {\n> +            nsCOMPtr<nsIURI> loadingURI;\n\ndeclare before use\n\n@@ +830,5 @@\n> +        // the sub-resources only if they are not cross-origin.\n> +        {\n> +            nsCOMPtr<nsIURI> loadingURI;\n> +            nsCOMPtr<nsIPrincipal> loadingPrincipal = loadInfo->LoadingPrincipal();\n> +            if (loadingPrincipal) {\n\nif (!loadingProncipal) \n  return false\n\n?\n\netc..\n\n@@ +834,5 @@\n> +            if (loadingPrincipal) {\n> +                loadingPrincipal->GetURI(getter_AddRefs(loadingURI));\n> +\n> +                nsIScriptSecurityManager* ssm = nsContentUtils::GetSecurityManager();\n> +                if (NS_FAILED(ssm->CheckSameOriginURI(loadingURI, mURI, false))) {\n\nisn't there some CheckMayLoad method/function taking loading principal instead of URL?\n\n@@ +843,5 @@\n> +            }\n> +        }\n> +        break;\n> +    default:\n> +        // Allow the http-authentication dialog. \n\nnit: ws\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.h\n@@ +114,5 @@\n> +    // Depending on the pref setting, the authentication dialog may be blocked\n> +    // for all sub-resources, blocked for cross-origin sub-resources, or\n> +    // always allowed for sub-resources.\n> +    // For more details look at the bug 647010.\n> +    bool BlockPrompt();\n\nblank line after this line please\n\n@@ +154,5 @@\n>      uint32_t                          mSuppressDefensiveAuth    : 1;\n>  \n>      nsRefPtr<nsHttpHandler>           mHttpHandler;  // keep gHttpHandler alive\n> +\n> +    static uint32_t                   sAuthAllowOpt;\n\ncomment what this means\n\ns/Opt/Pref/ ?\n\n::: netwerk/test/unit/test_auth_dialog_permission.js\n@@ +113,5 @@\n> +\n> +  onStopRequest: function test_onStopR(request, ctx, status) {\n> +    do_check_eq(status, Components.results.NS_ERROR_ABORT);\n> +\n> +    if (current_test < (tests.length - 1)) {\n\nI personally prefer test.shift() semantics ;)\n\nand should have some next_test() function\n\n@@ +126,5 @@\n> +      do_test_pending();\n> +      httpserv.stop(do_test_finished);\n> +    }\n> +\n> +    do_test_finished();\n\nplease explain why you call this here.\n\n@@ +201,5 @@\n> +  let uri = make_uri(\"https://example.com\");\n> +  let principal = Components.classes[\"@mozilla.org/scriptsecuritymanager;1\"]\n> +                    .getService(Ci.nsIScriptSecurityManager)\n> +                    .getNoAppCodebasePrincipal(uri);\n> +  let chan = makeChan(URL + \"/auth\", principal, Ci.nsIContentPolicy.TYPE_OTHER);\n\nwould be nice to hide call to make_uri and principal creation into the makeChannel function.  You always do the same thing anyway.  Or have a make_loading_principal(URI) function?\n\n@@ +258,5 @@\n> +}\n> +\n> +function test_no_cross_origin_aurh_request_not_cross_origin() {\n> +  prefs.setIntPref(\"network.auth.allow-subresource-auth\", 1);\n> +  let uri = make_uri(URL + \"/auth\");\n\nnit: maybe use URL + \"/\" for the sameorigin loading principals\n\n@@ +289,5 @@\n> +}\n> +\n> +function test_no_sub_resources_auth_request_cross_origin() {\n> +  prefs.setIntPref(\"network.auth.allow-subresource-auth\", 0);\n> +  let uri = make_uri(\"https://exeption.com\");\n\nwhat is this host name?", "is_private": false, "tags": [], "creation_time": "2015-03-24T18:00:08Z", "attachment_id": 8576046, "id": 10071406, "text": "Comment on attachment 8576046\nbug_647010_v4.patch\n\nReview of attachment 8576046:\n-----------------------------------------------------------------\n\nAny try run?\n\nI'd like to check the next version.\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.cpp\n@@ +28,5 @@\n>  namespace mozilla {\n>  namespace net {\n>  \n> +#define DO_NOT_ALLOW_AUTH_DIALOG_FOR_SUB_RESOURCES 0\n> +#define ALLOW_AUTH_DIALOG_FOR_NOT_CROSS_ORIGIN_SUB_RESOURCES 1\n\nthis should strictly reflect the description in all.js.\n\nI'd see the names rather as:\n\nSUBRESOURCE_AUTH_DIALOG_DISALLOW_ALL 0\nSUBRESOURCE_AUTH_DIALOG_DISALLOW_CROSS_ORIGIN 1\nSUBRESOURCE_AUTH_DIALOG_ALLOW_ALL 2\n\n@@ +64,5 @@\n>  {\n>      MOZ_ASSERT(!mAuthChannel, \"Disconnect wasn't called\");\n>  }\n>  \n> +uint32_t nsHttpChannelAuthProvider::sAuthAllowOpt = 1;\n\nuse #define\n\n@@ +71,5 @@\n> +nsHttpChannelAuthProvider::InitializePrefs()\n> +{\n> +  mozilla::Preferences::AddUintVarCache(&sAuthAllowOpt,\n> +                                        \"network.auth.allow-subresource-auth\",\n> +                                        1);\n\nnit: maybe assert main thread here.\n\n@@ +817,5 @@\n> +        (loadInfo->GetContentPolicyType() == nsIContentPolicy::TYPE_XMLHTTPREQUEST)) {\n> +        return false;\n> +    }\n> +\n> +    bool block = false;\n\nmaybe just directly return the result where applicable instead of playing with this local var?\n\n@@ +828,5 @@\n> +    case ALLOW_AUTH_DIALOG_FOR_NOT_CROSS_ORIGIN_SUB_RESOURCES:\n> +        // Do not open the http-authentication credentials dialog for\n> +        // the sub-resources only if they are not cross-origin.\n> +        {\n> +            nsCOMPtr<nsIURI> loadingURI;\n\ndeclare before use\n\n@@ +830,5 @@\n> +        // the sub-resources only if they are not cross-origin.\n> +        {\n> +            nsCOMPtr<nsIURI> loadingURI;\n> +            nsCOMPtr<nsIPrincipal> loadingPrincipal = loadInfo->LoadingPrincipal();\n> +            if (loadingPrincipal) {\n\nif (!loadingProncipal) \n  return false\n\n?\n\netc..\n\n@@ +834,5 @@\n> +            if (loadingPrincipal) {\n> +                loadingPrincipal->GetURI(getter_AddRefs(loadingURI));\n> +\n> +                nsIScriptSecurityManager* ssm = nsContentUtils::GetSecurityManager();\n> +                if (NS_FAILED(ssm->CheckSameOriginURI(loadingURI, mURI, false))) {\n\nisn't there some CheckMayLoad method/function taking loading principal instead of URL?\n\n@@ +843,5 @@\n> +            }\n> +        }\n> +        break;\n> +    default:\n> +        // Allow the http-authentication dialog. \n\nnit: ws\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.h\n@@ +114,5 @@\n> +    // Depending on the pref setting, the authentication dialog may be blocked\n> +    // for all sub-resources, blocked for cross-origin sub-resources, or\n> +    // always allowed for sub-resources.\n> +    // For more details look at the bug 647010.\n> +    bool BlockPrompt();\n\nblank line after this line please\n\n@@ +154,5 @@\n>      uint32_t                          mSuppressDefensiveAuth    : 1;\n>  \n>      nsRefPtr<nsHttpHandler>           mHttpHandler;  // keep gHttpHandler alive\n> +\n> +    static uint32_t                   sAuthAllowOpt;\n\ncomment what this means\n\ns/Opt/Pref/ ?\n\n::: netwerk/test/unit/test_auth_dialog_permission.js\n@@ +113,5 @@\n> +\n> +  onStopRequest: function test_onStopR(request, ctx, status) {\n> +    do_check_eq(status, Components.results.NS_ERROR_ABORT);\n> +\n> +    if (current_test < (tests.length - 1)) {\n\nI personally prefer test.shift() semantics ;)\n\nand should have some next_test() function\n\n@@ +126,5 @@\n> +      do_test_pending();\n> +      httpserv.stop(do_test_finished);\n> +    }\n> +\n> +    do_test_finished();\n\nplease explain why you call this here.\n\n@@ +201,5 @@\n> +  let uri = make_uri(\"https://example.com\");\n> +  let principal = Components.classes[\"@mozilla.org/scriptsecuritymanager;1\"]\n> +                    .getService(Ci.nsIScriptSecurityManager)\n> +                    .getNoAppCodebasePrincipal(uri);\n> +  let chan = makeChan(URL + \"/auth\", principal, Ci.nsIContentPolicy.TYPE_OTHER);\n\nwould be nice to hide call to make_uri and principal creation into the makeChannel function.  You always do the same thing anyway.  Or have a make_loading_principal(URI) function?\n\n@@ +258,5 @@\n> +}\n> +\n> +function test_no_cross_origin_aurh_request_not_cross_origin() {\n> +  prefs.setIntPref(\"network.auth.allow-subresource-auth\", 1);\n> +  let uri = make_uri(URL + \"/auth\");\n\nnit: maybe use URL + \"/\" for the sameorigin loading principals\n\n@@ +289,5 @@\n> +}\n> +\n> +function test_no_sub_resources_auth_request_cross_origin() {\n> +  prefs.setIntPref(\"network.auth.allow-subresource-auth\", 0);\n> +  let uri = make_uri(\"https://exeption.com\");\n\nwhat is this host name?", "bug_id": 647010, "count": 48, "time": "2015-03-24T18:00:08Z", "creator": "honzab.moz@firemni.cz", "author": "honzab.moz@firemni.cz"}, {"creator": "dd.mozilla@gmail.com", "author": "dd.mozilla@gmail.com", "bug_id": 647010, "count": 49, "time": "2015-03-31T15:08:47Z", "creation_time": "2015-03-31T15:08:47Z", "text": "Created attachment 8586139\nbug_647010_v5.patch", "attachment_id": 8586139, "id": 10100826, "raw_text": "", "tags": [], "is_private": false}, {"count": 50, "bug_id": 647010, "raw_text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=3bcb3763af28", "tags": [], "is_private": false, "time": "2015-03-31T15:15:13Z", "creation_time": "2015-03-31T15:15:13Z", "author": "dd.mozilla@gmail.com", "text": "https://treeherder.mozilla.org/#/jobs?repo=try&revision=3bcb3763af28", "creator": "dd.mozilla@gmail.com", "id": 10100871, "attachment_id": null}, {"time": "2015-03-31T19:40:10Z", "count": 51, "bug_id": 647010, "author": "honzab.moz@firemni.cz", "creator": "honzab.moz@firemni.cz", "tags": [], "is_private": false, "raw_text": "Review of attachment 8586139:\n-----------------------------------------------------------------\n\nThe test looks good!  thanks.\n\n::: modules/libpref/init/all.js\n@@ +1684,5 @@\n> +// Sub-resources HTTP-authentication:\n> +//   0 - don't allow sub-resources to open HTTP authentication credentials\n> +//       dialogs\n> +//   1 - allow sub-resources to open HTTP authentication credentials dialogs,\n> +//       but don't allow it for cross-origin sub-resources\n\ndon't allow cross-origin subresources to open HTTP ... ?\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.cpp\n@@ +30,5 @@\n>  \n> +#define SUBRESOURCE_AUTH_DIALOG_DISALLOW_ALL 0\n> +#define SUBRESOURCE_AUTH_DIALOG_DISALLOW_CROSS_ORIGIN 1\n> +#define SUBRESOURCE_AUTH_DIALOG_ALLOW_ALL 2\n> +#define SUBRESOURCE_AUTH_DIALOG_DEFAULT 1\n\nnit: rather then 1 use one of the defines here\n\nbut I kinda don't follow why you are trying to hide this under a DEFAULT define..\n\n@@ +72,5 @@\n> +\n> +void\n> +nsHttpChannelAuthProvider::InitializePrefs()\n> +{\n> +  MOZ_ASSERT(NS_IsMainThread(), \"This must be on the main thread.\");\n\nThe message is redundant.  What the assertion says is clear from the first arg.  If you want a message here, make it meaningful or just omit (preferred).\n\n@@ +75,5 @@\n> +{\n> +  MOZ_ASSERT(NS_IsMainThread(), \"This must be on the main thread.\");\n> +  mozilla::Preferences::AddUintVarCache(&sAuthAllowPref,\n> +                                        \"network.auth.allow-subresource-auth\",\n> +                                        1);\n\nif you want the _DEFAULT define then why don't you use it here?\n\n::: netwerk/test/unit/test_auth_dialog_permission.js\n@@ +19,5 @@\n> +  if (metadata.hasHeader(\"Authorization\") &&\n> +      metadata.getHeader(\"Authorization\") == expectedHeader) {\n> +\n> +    response.setStatusLine(metadata.httpVersion, 200, \"OK, authorized\");\n> +    response.setHeader(\"WWW-Authenticate\", 'Basic realm=\"secret\"', false);\n\nare you sure this header should be set on a 200 response?\n\n@@ +110,5 @@\n> +  return ios.newURI(url, null, null);\n> +}\n> +\n> +function makeChan(loadingUrl, url, contentPolicy) {\n> +  var uri = make_uri(loadingUrl);\n\nnit: maybe s/uri/loadingURI/ ?\n\n@@ +179,5 @@\n> +    Components.classes[\"@mozilla.org/network/http-auth-manager;1\"]\n> +              .getService(Components.interfaces.nsIHttpAuthManager)\n> +              .clearAll();\n> +\n> +    do_timeout(0, run_next_test);\n\nnit: there is do_execute_soon()\n\n@@ +198,5 @@\n> +  }\n> +};\n> +\n> +var tests = [\n> +  // For the next 3 test the preference is set to 2 - allow the cross-origin\n\n3 tests", "text": "Comment on attachment 8586139\nbug_647010_v5.patch\n\nReview of attachment 8586139:\n-----------------------------------------------------------------\n\nThe test looks good!  thanks.\n\n::: modules/libpref/init/all.js\n@@ +1684,5 @@\n> +// Sub-resources HTTP-authentication:\n> +//   0 - don't allow sub-resources to open HTTP authentication credentials\n> +//       dialogs\n> +//   1 - allow sub-resources to open HTTP authentication credentials dialogs,\n> +//       but don't allow it for cross-origin sub-resources\n\ndon't allow cross-origin subresources to open HTTP ... ?\n\n::: netwerk/protocol/http/nsHttpChannelAuthProvider.cpp\n@@ +30,5 @@\n>  \n> +#define SUBRESOURCE_AUTH_DIALOG_DISALLOW_ALL 0\n> +#define SUBRESOURCE_AUTH_DIALOG_DISALLOW_CROSS_ORIGIN 1\n> +#define SUBRESOURCE_AUTH_DIALOG_ALLOW_ALL 2\n> +#define SUBRESOURCE_AUTH_DIALOG_DEFAULT 1\n\nnit: rather then 1 use one of the defines here\n\nbut I kinda don't follow why you are trying to hide this under a DEFAULT define..\n\n@@ +72,5 @@\n> +\n> +void\n> +nsHttpChannelAuthProvider::InitializePrefs()\n> +{\n> +  MOZ_ASSERT(NS_IsMainThread(), \"This must be on the main thread.\");\n\nThe message is redundant.  What the assertion says is clear from the first arg.  If you want a message here, make it meaningful or just omit (preferred).\n\n@@ +75,5 @@\n> +{\n> +  MOZ_ASSERT(NS_IsMainThread(), \"This must be on the main thread.\");\n> +  mozilla::Preferences::AddUintVarCache(&sAuthAllowPref,\n> +                                        \"network.auth.allow-subresource-auth\",\n> +                                        1);\n\nif you want the _DEFAULT define then why don't you use it here?\n\n::: netwerk/test/unit/test_auth_dialog_permission.js\n@@ +19,5 @@\n> +  if (metadata.hasHeader(\"Authorization\") &&\n> +      metadata.getHeader(\"Authorization\") == expectedHeader) {\n> +\n> +    response.setStatusLine(metadata.httpVersion, 200, \"OK, authorized\");\n> +    response.setHeader(\"WWW-Authenticate\", 'Basic realm=\"secret\"', false);\n\nare you sure this header should be set on a 200 response?\n\n@@ +110,5 @@\n> +  return ios.newURI(url, null, null);\n> +}\n> +\n> +function makeChan(loadingUrl, url, contentPolicy) {\n> +  var uri = make_uri(loadingUrl);\n\nnit: maybe s/uri/loadingURI/ ?\n\n@@ +179,5 @@\n> +    Components.classes[\"@mozilla.org/network/http-auth-manager;1\"]\n> +              .getService(Components.interfaces.nsIHttpAuthManager)\n> +              .clearAll();\n> +\n> +    do_timeout(0, run_next_test);\n\nnit: there is do_execute_soon()\n\n@@ +198,5 @@\n> +  }\n> +};\n> +\n> +var tests = [\n> +  // For the next 3 test the preference is set to 2 - allow the cross-origin\n\n3 tests", "attachment_id": 8586139, "id": 10102419, "creation_time": "2015-03-31T19:40:10Z"}, {"text": "Created attachment 8586752\nbug_647010_v6.patch", "creator": "dd.mozilla@gmail.com", "id": 10105925, "attachment_id": 8586752, "author": "dd.mozilla@gmail.com", "creation_time": "2015-04-01T13:56:01Z", "time": "2015-04-01T13:56:01Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "", "count": 52}, {"creator": "ryanvm@gmail.com", "author": "ryanvm@gmail.com", "time": "2015-04-01T14:44:53Z", "bug_id": 647010, "count": 53, "text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/2e642b4f35c4", "attachment_id": null, "id": 10106172, "creation_time": "2015-04-01T14:44:53Z", "tags": [], "is_private": false, "raw_text": "https://hg.mozilla.org/integration/mozilla-inbound/rev/2e642b4f35c4"}, {"is_private": false, "tags": [], "time": "2015-04-02T01:07:38Z", "count": 54, "raw_text": "https://hg.mozilla.org/mozilla-central/rev/2e642b4f35c4", "bug_id": 647010, "author": "kwierso@gmail.com", "attachment_id": null, "id": 10109173, "text": "https://hg.mozilla.org/mozilla-central/rev/2e642b4f35c4", "creator": "kwierso@gmail.com", "creation_time": "2015-04-02T01:07:38Z"}, {"creator": "dveditz@mozilla.com", "text": "*** Bug 978471 has been marked as a duplicate of this bug. ***", "id": 10186775, "attachment_id": null, "author": "dveditz@mozilla.com", "creation_time": "2015-04-22T18:28:56Z", "time": "2015-04-22T18:28:56Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "", "count": 55}, {"is_private": false, "tags": [], "raw_text": "Release Note Request (optional, but appreciated)\n[Why is this notable]: less user annoyance & higher security\n[Suggested wording]: Sub-resources can no longer request HTTP authentication, thus protecting users from inadvertently disclosing login data.\n[Links (documentation, blog post, etc)]: ?", "attachment_id": null, "id": 10505035, "text": "Release Note Request (optional, but appreciated)\n[Why is this notable]: less user annoyance & higher security\n[Suggested wording]: Sub-resources can no longer request HTTP authentication, thus protecting users from inadvertently disclosing login data.\n[Links (documentation, blog post, etc)]: ?", "creation_time": "2015-07-16T20:46:49Z", "time": "2015-07-16T20:46:49Z", "bug_id": 647010, "count": 56, "creator": "fb+mozdev@quantumedia.de", "author": "fb+mozdev@quantumedia.de"}, {"bug_id": 647010, "raw_text": "This is on the site compat doc:\nhttps://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security", "count": 57, "time": "2015-07-16T20:48:19Z", "tags": [], "is_private": false, "creation_time": "2015-07-16T20:48:19Z", "creator": "kohei.yoshino@gmail.com", "text": "This is on the site compat doc:\nhttps://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security", "attachment_id": null, "id": 10505058, "author": "kohei.yoshino@gmail.com"}, {"text": "It's more appropriate to relnote this behavior change (point to the above) rather than write a security advisory for it.", "creator": "dveditz@mozilla.com", "id": 10554145, "attachment_id": null, "author": "dveditz@mozilla.com", "creation_time": "2015-07-30T00:14:17Z", "time": "2015-07-30T00:14:17Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "It's more appropriate to relnote this behavior change (point to the above) rather than write a security advisory for it.", "count": 58}, {"time": "2015-08-03T13:07:31Z", "is_private": false, "tags": [], "raw_text": "relnote-firefox is the proper way to propose a release note item.\n\nAnyway, added to the release notes with \"Sub-resources can no longer request HTTP authentication, thus protecting users from inadvertently disclosing login data\" as wording. I also added a link against https://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security for more details.\n\nI guess this change also impact our Android release.", "bug_id": 647010, "count": 59, "id": 10567324, "attachment_id": null, "creator": "sledru@mozilla.com", "text": "relnote-firefox is the proper way to propose a release note item.\n\nAnyway, added to the release notes with \"Sub-resources can no longer request HTTP authentication, thus protecting users from inadvertently disclosing login data\" as wording. I also added a link against https://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security for more details.\n\nI guess this change also impact our Android release.", "author": "sledru@mozilla.com", "creation_time": "2015-08-03T13:07:31Z"}, {"raw_text": "Daniel and guys!\n\nRelnote for this behavior change is not appropriate. Since it's a vulnerability (and Mozilla developers agreed with me), so there must be security advisory for it.\n\nMake MFSA as you always do. So everyone will see that after many years of thinking and working on a fix, you made it and your browser will be safe from this vulnerability. As Google did in Chrome in 2011 (4 months after I informed them, without answering and thanking me, but with no doubts they agreed with me concerning it).", "bug_id": 647010, "count": 60, "time": "2015-08-11T18:05:26Z", "is_private": false, "tags": [], "creation_time": "2015-08-11T18:05:26Z", "id": 10604911, "attachment_id": null, "creator": "mustlive@websecurity.com.ua", "text": "Daniel and guys!\n\nRelnote for this behavior change is not appropriate. Since it's a vulnerability (and Mozilla developers agreed with me), so there must be security advisory for it.\n\nMake MFSA as you always do. So everyone will see that after many years of thinking and working on a fix, you made it and your browser will be safe from this vulnerability. As Google did in Chrome in 2011 (4 months after I informed them, without answering and thanking me, but with no doubts they agreed with me concerning it).", "author": "mustlive@websecurity.com.ua"}, {"raw_text": "This \"fix\" just broke thousands of sites. It doesn't even appear to allow a user to optionally click the secondary iframe authentication page.", "is_private": false, "tags": [], "creation_time": "2015-08-11T22:54:34Z", "attachment_id": null, "id": 10606535, "text": "This \"fix\" just broke thousands of sites. It doesn't even appear to allow a user to optionally click the secondary iframe authentication page.", "count": 61, "bug_id": 647010, "time": "2015-08-11T22:54:34Z", "author": "janderson2000@gmail.com", "creator": "janderson2000@gmail.com"}, {"tags": [], "is_private": false, "raw_text": "janderson: probably best to file a separate bug giving examples of sites that regressed from this fix, otherwise it will get lost at the end of this \"resolved\" bug.\n\nI don't understand what you mean by \"click the secondary iframe authentication page\". It might be clearer with a specific example site and the steps you expect to work.", "text": "janderson: probably best to file a separate bug giving examples of sites that regressed from this fix, otherwise it will get lost at the end of this \"resolved\" bug.\n\nI don't understand what you mean by \"click the secondary iframe authentication page\". It might be clearer with a specific example site and the steps you expect to work.", "attachment_id": null, "id": 10607161, "creation_time": "2015-08-12T03:15:11Z", "time": "2015-08-12T03:15:11Z", "count": 62, "bug_id": 647010, "author": "dveditz@mozilla.com", "creator": "dveditz@mozilla.com"}, {"creation_time": "2015-08-12T03:58:37Z", "id": 10607317, "attachment_id": null, "creator": "janderson2000@gmail.com", "text": "Many internal business sites use embedded iframes from more than one source/domain.  This \"bug fix\" has eliminated what many consider a useful browser behavior in a trusted environment with the mindset that it was just a security hole waiting to be exploited with the help of a careless user who doesn't notice the source of a secondary iframe authentication.  \n\nWhile the above scenario can happen, legitimate secondary source authentication is also in many sites, and they are all now instantly broken.\n\nA better solution to this potential problem would be to show a warning to the user that another source is seeking authentication and then allow the user to accept or reject.  \n\nAs this \"fix\" was implemented, it has been very disruptive.", "author": "janderson2000@gmail.com", "raw_text": "Many internal business sites use embedded iframes from more than one source/domain.  This \"bug fix\" has eliminated what many consider a useful browser behavior in a trusted environment with the mindset that it was just a security hole waiting to be exploited with the help of a careless user who doesn't notice the source of a secondary iframe authentication.  \n\nWhile the above scenario can happen, legitimate secondary source authentication is also in many sites, and they are all now instantly broken.\n\nA better solution to this potential problem would be to show a warning to the user that another source is seeking authentication and then allow the user to accept or reject.  \n\nAs this \"fix\" was implemented, it has been very disruptive.", "bug_id": 647010, "count": 63, "time": "2015-08-12T03:58:37Z", "is_private": false, "tags": []}, {"count": 64, "bug_id": 647010, "raw_text": "Also, I know about the configuration fix, but you can't have all your users change their browser configuration to allow more than one authentication source.", "tags": [], "is_private": false, "time": "2015-08-12T04:01:10Z", "creation_time": "2015-08-12T04:01:10Z", "author": "janderson2000@gmail.com", "text": "Also, I know about the configuration fix, but you can't have all your users change their browser configuration to allow more than one authentication source.", "creator": "janderson2000@gmail.com", "attachment_id": null, "id": 10607324}, {"time": "2015-08-12T12:49:25Z", "is_private": false, "tags": [], "raw_text": "bug report: the HTTP auth dialog does not work since version 40 of Firefox.", "bug_id": 647010, "count": 65, "id": 10608477, "attachment_id": null, "text": "bug report: the HTTP auth dialog does not work since version 40 of Firefox.", "creator": "sta@ad.jadorre.com", "author": "sta@ad.jadorre.com", "creation_time": "2015-08-12T12:49:25Z"}, {"time": "2015-08-12T13:31:51Z", "bug_id": 647010, "count": 66, "creator": "kohei.yoshino@gmail.com", "author": "kohei.yoshino@gmail.com", "is_private": false, "tags": [], "raw_text": "Enterprise users can deploy Firefox 38 ESR [1] which is not affected by this change, and they can also centrally configure [2] Firefox 45 ESR when it's out. This is already stated in the site compatibility doc [3]. Nothing should be problem here.\n\n[1] https://www.mozilla.org/en-US/firefox/organizations/\n[2] https://developer.mozilla.org/en-US/docs/MCD,_Mission_Control_Desktop_AKA_AutoConfig\n[3] https://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security", "attachment_id": null, "id": 10608764, "text": "Enterprise users can deploy Firefox 38 ESR [1] which is not affected by this change, and they can also centrally configure [2] Firefox 45 ESR when it's out. This is already stated in the site compatibility doc [3]. Nothing should be problem here.\n\n[1] https://www.mozilla.org/en-US/firefox/organizations/\n[2] https://developer.mozilla.org/en-US/docs/MCD,_Mission_Control_Desktop_AKA_AutoConfig\n[3] https://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security", "creation_time": "2015-08-12T13:31:51Z"}, {"creation_time": "2015-08-12T14:27:57Z", "attachment_id": null, "id": 10609047, "text": "Deploying an entirely different version isn't exactly a simple solution.\n\nThis was a terrible fix....a lazy fix....  a \"we don't give a F\" fix.  Just shut the whole thing down instead of implementing a smart embedded warning/exception storing fix.  Another blow to the usability and utility of Firefox.", "raw_text": "Deploying an entirely different version isn't exactly a simple solution.\n\nThis was a terrible fix....a lazy fix....  a \"we don't give a F\" fix.  Just shut the whole thing down instead of implementing a smart embedded warning/exception storing fix.  Another blow to the usability and utility of Firefox.", "is_private": false, "tags": [], "author": "janderson2000@gmail.com", "creator": "janderson2000@gmail.com", "count": 67, "bug_id": 647010, "time": "2015-08-12T14:27:57Z"}, {"id": 10610452, "attachment_id": null, "text": "Daniel, Kohei and Mozilla in the whole.\n\nFirefox 40 was released yesterday and this vulnerability was fixed in it. But there was no MSFA for this issue, even you made 14 security advisories for FF 40.\n\nIn Release Notes in Security section you mentioned about it, but without MFSA (\nhttps://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security). Even for vulnerability MFSA 2015-91 you made both - wrote about the bug 1086999 in Release Notes after description of this bug 647010 and made security advisory. The same you need to do for my bug 647010. If you made relnote for it, then OK, but also make MFSA (as you did with MFSA 2015-91).\n\nThis vulnerability is more important then some MFSA from the last release (such as 2015-86 and 2015-91) and many others from previous releases. And if you made security advisory for them, then you need to do it for this vulnerability (it deserves for SA).", "creation_time": "2015-08-12T19:03:30Z", "is_private": false, "tags": [], "raw_text": "Daniel, Kohei and Mozilla in the whole.\n\nFirefox 40 was released yesterday and this vulnerability was fixed in it. But there was no MSFA for this issue, even you made 14 security advisories for FF 40.\n\nIn Release Notes in Security section you mentioned about it, but without MFSA (\nhttps://developer.mozilla.org/en-US/Firefox/Releases/40/Site_Compatibility#Security). Even for vulnerability MFSA 2015-91 you made both - wrote about the bug 1086999 in Release Notes after description of this bug 647010 and made security advisory. The same you need to do for my bug 647010. If you made relnote for it, then OK, but also make MFSA (as you did with MFSA 2015-91).\n\nThis vulnerability is more important then some MFSA from the last release (such as 2015-86 and 2015-91) and many others from previous releases. And if you made security advisory for them, then you need to do it for this vulnerability (it deserves for SA).", "creator": "mustlive@websecurity.com.ua", "author": "mustlive@websecurity.com.ua", "time": "2015-08-12T19:03:30Z", "bug_id": 647010, "count": 68}, {"raw_text": "We're not doing a security advisory for this, as previously stated.", "tags": [], "is_private": false, "creation_time": "2015-08-12T21:47:23Z", "text": "We're not doing a security advisory for this, as previously stated.", "id": 10611261, "attachment_id": null, "count": 69, "bug_id": 647010, "time": "2015-08-12T21:47:23Z", "author": "albill@gmail.com", "creator": "albill@gmail.com"}, {"time": "2015-08-13T08:04:03Z", "bug_id": 647010, "count": 70, "creator": "peeters.simon@gmail.com", "author": "peeters.simon@gmail.com", "tags": [], "is_private": false, "raw_text": "This 'feature' broke a lot of usefull sites, please revert or change the default back to something usefull.\n\nexample: 'static' frontends for api's behind basic auth.\nThese are static javascript powered frontends which query remote api's trough xhr or jsonp.\npractical example: we have a kanban style viewer for our redmine tickes, this is just a static page, and relies on the basic auth on the redmine server api to get the data for the right user. (and to get any access at all)\n\nI could live with an added yellow, or even red warning, saying that this isn't for the main site. but disabling this is just wrong.", "text": "This 'feature' broke a lot of usefull sites, please revert or change the default back to something usefull.\n\nexample: 'static' frontends for api's behind basic auth.\nThese are static javascript powered frontends which query remote api's trough xhr or jsonp.\npractical example: we have a kanban style viewer for our redmine tickes, this is just a static page, and relies on the basic auth on the redmine server api to get the data for the right user. (and to get any access at all)\n\nI could live with an added yellow, or even red warning, saying that this isn't for the main site. but disabling this is just wrong.", "id": 10612804, "attachment_id": null, "creation_time": "2015-08-13T08:04:03Z"}, {"bug_id": 647010, "raw_text": "This update just broke my javascript looping app that worked for like 15 years. Nice....", "count": 71, "time": "2015-08-13T18:41:49Z", "tags": [], "is_private": false, "creation_time": "2015-08-13T18:41:49Z", "creator": "mdross@wright-weather.com", "text": "This update just broke my javascript looping app that worked for like 15 years. Nice....", "id": 10615481, "attachment_id": null, "author": "mdross@wright-weather.com"}, {"time": "2015-08-16T18:59:04Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "(In reply to zorgos from comment #65)\n> bug report: the HTTP auth dialog does not work since version 40 of Firefox.\n\nHi zorgos, is your auth dialog triggered by <iframe>, <img>, <script>, XMLHttpRequest or CSS background-image? If not, it's another issue currently tracked in Bug 1195091.", "count": 72, "text": "(In reply to zorgos from comment #65)\n> bug report: the HTTP auth dialog does not work since version 40 of Firefox.\n\nHi zorgos, is your auth dialog triggered by <iframe>, <img>, <script>, XMLHttpRequest or CSS background-image? If not, it's another issue currently tracked in Bug 1195091.", "creator": "kohei.yoshino@gmail.com", "id": 10623404, "attachment_id": null, "author": "kohei.yoshino@gmail.com", "creation_time": "2015-08-16T18:59:04Z"}, {"count": 73, "raw_text": "(In reply to Kohei Yoshino [:kohei] from comment #72)\n> (In reply to zorgos from comment #65)\n> > bug report: the HTTP auth dialog does not work since version 40 of Firefox.\n> \n> Hi zorgos, is your auth dialog triggered by <iframe>, <img>, <script>,\n> XMLHttpRequest or CSS background-image? If not, it's another issue currently\n> tracked in Bug 1195091.\n\nHi Kohei,\nBy <script src=\"https://another-domain.com/\"></script>\nThe top domain is cached by cloudflare so for security reason, authentication is done through another domain. For me, this patch reduces my security.", "bug_id": 647010, "is_private": false, "tags": [], "time": "2015-08-17T06:40:03Z", "creation_time": "2015-08-17T06:40:03Z", "author": "sta@ad.jadorre.com", "attachment_id": null, "id": 10624045, "text": "(In reply to Kohei Yoshino [:kohei] from comment #72)\n> (In reply to zorgos from comment #65)\n> > bug report: the HTTP auth dialog does not work since version 40 of Firefox.\n> \n> Hi zorgos, is your auth dialog triggered by <iframe>, <img>, <script>,\n> XMLHttpRequest or CSS background-image? If not, it's another issue currently\n> tracked in Bug 1195091.\n\nHi Kohei,\nBy <script src=\"https://another-domain.com/\"></script>\nThe top domain is cached by cloudflare so for security reason, authentication is done through another domain. For me, this patch reduces my security.", "creator": "sta@ad.jadorre.com"}, {"count": 74, "bug_id": 647010, "raw_text": "Was this perhaps implemented in such a way that embedded resources cannot even request saved credentials?\n\nI have FoxyProxy set to redirect YouTube over a specific proxy that required credentials. These credentials are saved in FoxyProxy. That means I don't get a dialog asking for credentials.\n\nAfter upgrading to Firefox 40, embedded YouTube videos (iframe) now show \"The proxy server is refusing connections\" (which is a completely wrong message btw) until I load YouTube.com in a top-level context. After that, the credentials are cached and everything works as expected. After closing Firefox, the cache is lost, of course.", "tags": [], "is_private": false, "time": "2015-08-17T10:57:30Z", "creation_time": "2015-08-17T10:57:30Z", "author": "fuzzykiller@futuretech.in", "text": "Was this perhaps implemented in such a way that embedded resources cannot even request saved credentials?\n\nI have FoxyProxy set to redirect YouTube over a specific proxy that required credentials. These credentials are saved in FoxyProxy. That means I don't get a dialog asking for credentials.\n\nAfter upgrading to Firefox 40, embedded YouTube videos (iframe) now show \"The proxy server is refusing connections\" (which is a completely wrong message btw) until I load YouTube.com in a top-level context. After that, the credentials are cached and everything works as expected. After closing Firefox, the cache is lost, of course.", "creator": "fuzzykiller@futuretech.in", "attachment_id": null, "id": 10624596}, {"text": "This is marked as parity-Chrome, but as far as I can tell it does not match the behaviour of the current version (44).\n\nThe end result is quite a few sites are effectively broken in Firefox, effectively forcing users not advanced enough to hunt for the config option to use a different browser instead. Perhaps this change would have been better as a warning *first* (perhaps with telemetry to count occurrences) and then blocked in a later version, when site authors have had more warning?\n\nAlso, the HTTPS version of the site is considered a different origin. This is probably intended, and not doing so would enable a similar attack by anyone in a position to MitM, but there's some sites in the wild that are affected (top-level is a frameset over plain HTTP, some content frames on the same domain over HTTPS).", "id": 10633253, "attachment_id": null, "creation_time": "2015-08-19T00:51:34Z", "tags": [], "is_private": false, "raw_text": "This is marked as parity-Chrome, but as far as I can tell it does not match the behaviour of the current version (44).\n\nThe end result is quite a few sites are effectively broken in Firefox, effectively forcing users not advanced enough to hunt for the config option to use a different browser instead. Perhaps this change would have been better as a warning *first* (perhaps with telemetry to count occurrences) and then blocked in a later version, when site authors have had more warning?\n\nAlso, the HTTPS version of the site is considered a different origin. This is probably intended, and not doing so would enable a similar attack by anyone in a position to MitM, but there's some sites in the wild that are affected (top-level is a frameset over plain HTTP, some content frames on the same domain over HTTPS).", "creator": "bob+bmo@vulpin.com", "author": "bob+bmo@vulpin.com", "time": "2015-08-19T00:51:34Z", "bug_id": 647010, "count": 75}, {"bug_id": 647010, "count": 76, "time": "2015-08-25T02:41:36Z", "creator": "titansoftime@gmail.com", "author": "titansoftime@gmail.com", "raw_text": "Our entire office (200+ people) have now switched to chrome because of this... GG.", "is_private": false, "tags": [], "creation_time": "2015-08-25T02:41:36Z", "attachment_id": null, "id": 10653717, "text": "Our entire office (200+ people) have now switched to chrome because of this... GG."}, {"creation_time": "2015-08-25T04:23:06Z", "id": 10653975, "attachment_id": null, "text": "Why don't you use Firefox 38 ESR as I wrote in my comment 66?", "creator": "kohei.yoshino@gmail.com", "author": "kohei.yoshino@gmail.com", "raw_text": "Why don't you use Firefox 38 ESR as I wrote in my comment 66?", "bug_id": 647010, "count": 77, "time": "2015-08-25T04:23:06Z", "is_private": false, "tags": []}, {"creator": "dd.mozilla@gmail.com", "author": "dd.mozilla@gmail.com", "bug_id": 647010, "count": 78, "time": "2015-08-25T05:01:29Z", "creation_time": "2015-08-25T05:01:29Z", "text": "Changing pref will return to behavior before this bug has been introduces:\ngo to about:config \nsearch for network.auth.allow-subresource-auth and set it to 2\n\nfirefox will behave as before.", "id": 10654019, "attachment_id": null, "raw_text": "Changing pref will return to behavior before this bug has been introduces:\ngo to about:config \nsearch for network.auth.allow-subresource-auth and set it to 2\n\nfirefox will behave as before.", "tags": [], "is_private": false}, {"id": 10654035, "attachment_id": null, "text": "Kohei,\n\nDo you think we should need to do that?\n\nAs a single user doing this or changing the config is an easy option yes. Being IT in an office with hundreds of people is a different story. My intent is not to be mean, but to express the problem. I understand the seriousness of security risks, but the other major browsers do not have this issue.", "creator": "titansoftime@gmail.com", "author": "titansoftime@gmail.com", "creation_time": "2015-08-25T05:24:06Z", "time": "2015-08-25T05:24:06Z", "is_private": false, "tags": [], "raw_text": "Kohei,\n\nDo you think we should need to do that?\n\nAs a single user doing this or changing the config is an easy option yes. Being IT in an office with hundreds of people is a different story. My intent is not to be mean, but to express the problem. I understand the seriousness of security risks, but the other major browsers do not have this issue.", "bug_id": 647010, "count": 79}, {"time": "2015-08-25T05:49:17Z", "is_private": false, "tags": [], "raw_text": "Regardless of this specific problem, enterprise users may want to use Firefox ESR (and the centralized configuration control system) to avoid such compatibility issues. Many companies, governments, universities and other organizations are choosing ESR. It should make your life easier :)", "bug_id": 647010, "count": 80, "attachment_id": null, "id": 10654095, "text": "Regardless of this specific problem, enterprise users may want to use Firefox ESR (and the centralized configuration control system) to avoid such compatibility issues. Many companies, governments, universities and other organizations are choosing ESR. It should make your life easier :)", "creator": "kohei.yoshino@gmail.com", "author": "kohei.yoshino@gmail.com", "creation_time": "2015-08-25T05:49:17Z"}, {"raw_text": "Interesting. I will suggest it. Thank you.", "tags": [], "is_private": false, "creation_time": "2015-08-25T05:59:53Z", "text": "Interesting. I will suggest it. Thank you.", "id": 10654120, "attachment_id": null, "count": 81, "bug_id": 647010, "time": "2015-08-25T05:59:53Z", "author": "titansoftime@gmail.com", "creator": "titansoftime@gmail.com"}, {"creator": "jdinbox@gmail.com", "author": "jdinbox@gmail.com", "bug_id": 647010, "count": 82, "time": "2015-08-25T19:40:20Z", "creation_time": "2015-08-25T19:40:20Z", "text": "So, while I support broader disabling of the HTTP Auth prompt, I'm not really thrilled with the course this bug took...\n\nNote comment 17-21 where the parity-chrome claim was clarified, as the fix they landed actually bounced due to site compatibility around XHR/iframes. So it's no surprise that we're seeing reports like bug 1195091 and bug 1189268.\n\nNor was the telemetry patch in bug 979359 landed, so it's not clear if what landed here was supported by any actual data on usage. If it's still in relatively widespread use, we'll probably need to figure out a different or more gradual way to deprecate/discourage its use.", "attachment_id": null, "id": 10657169, "raw_text": "So, while I support broader disabling of the HTTP Auth prompt, I'm not really thrilled with the course this bug took...\n\nNote comment 17-21 where the parity-chrome claim was clarified, as the fix they landed actually bounced due to site compatibility around XHR/iframes. So it's no surprise that we're seeing reports like bug 1195091 and bug 1189268.\n\nNor was the telemetry patch in bug 979359 landed, so it's not clear if what landed here was supported by any actual data on usage. If it's still in relatively widespread use, we'll probably need to figure out a different or more gradual way to deprecate/discourage its use.", "tags": [], "is_private": false}, {"text": "This does not simply use existing homograph mitigation in the auth dialog because \u2026 ?\n\nThis protection does not need to be requested by the server by setting, e.g., Content Security Policy headers because \u2026 ?\n\nIn fact, from a cursory look at the patch, this does not even seem to allow sources that are explicitly whitelisted by server Content Security Policy?!", "creator": "schwarz@rz.uni-kiel.de", "id": 10660120, "attachment_id": null, "author": "schwarz@rz.uni-kiel.de", "creation_time": "2015-08-26T11:29:56Z", "time": "2015-08-26T11:29:56Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "This does not simply use existing homograph mitigation in the auth dialog because \u2026 ?\n\nThis protection does not need to be requested by the server by setting, e.g., Content Security Policy headers because \u2026 ?\n\nIn fact, from a cursory look at the patch, this does not even seem to allow sources that are explicitly whitelisted by server Content Security Policy?!", "count": 83}, {"creation_time": "2015-08-31T22:14:56Z", "text": "In bug 1197944, the pref was flipped to revert the behavior change.\n\nIs there a plan or metabug for fixing it again, after we address some of the compatibility issues?", "creator": "jruderman@gmail.com", "id": 10679584, "attachment_id": null, "author": "jruderman@gmail.com", "bug_id": 647010, "raw_text": "In bug 1197944, the pref was flipped to revert the behavior change.\n\nIs there a plan or metabug for fixing it again, after we address some of the compatibility issues?", "count": 84, "time": "2015-08-31T22:14:56Z", "tags": [], "is_private": false}, {"raw_text": "As Jesse said, this was reverted so this security risk still exists.", "bug_id": 647010, "count": 85, "time": "2015-10-30T05:16:47Z", "is_private": false, "tags": [], "creation_time": "2015-10-30T05:16:47Z", "id": 10888198, "attachment_id": null, "creator": "dveditz@mozilla.com", "text": "As Jesse said, this was reverted so this security risk still exists.", "author": "dveditz@mozilla.com"}, {"creator": "fb+mozdev@quantumedia.de", "author": "fb+mozdev@quantumedia.de", "bug_id": 647010, "count": 86, "time": "2016-06-11T21:37:03Z", "creation_time": "2016-06-11T21:37:03Z", "text": "So Bug 1230462 is now fixed, however I'd say there's more that can be done. \n\nAs a first measure, I propose to disable the \"OK\" button for a second or two for cross-origin requests (similar to the behaviour of the download window). A more drastic measure could be to add a checkbox \u00e0 la \"Are you sure you want to send this data?\" but this could annoy some (esp. corp) users \u2013 an advanced variant of this could track if a user activated the checkbox for this origin-cross-origin-combination more than 3 times and remember this preference.\n\nAny other ideas?", "attachment_id": null, "id": 11480282, "raw_text": "So Bug 1230462 is now fixed, however I'd say there's more that can be done. \n\nAs a first measure, I propose to disable the \"OK\" button for a second or two for cross-origin requests (similar to the behaviour of the download window). A more drastic measure could be to add a checkbox \u00e0 la \"Are you sure you want to send this data?\" but this could annoy some (esp. corp) users \u2013 an advanced variant of this could track if a user activated the checkbox for this origin-cross-origin-combination more than 3 times and remember this preference.\n\nAny other ideas?", "tags": [], "is_private": false}, {"creator": "angeloliao16@gmail.com", "author": "angeloliao16@gmail.com", "time": "2017-10-24T21:35:12Z", "bug_id": 647010, "count": 87, "text": "The current Chromium behavior is that it suppresses auth prompt requested by an image resource loaded from cross-origin : https://bugs.chromium.org/p/chromium/issues/detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior has been around for three years. So it may best to change to that to better protect the user. We are thinking about similar behavior on the Edge side as well.", "id": 12787045, "attachment_id": null, "creation_time": "2017-10-24T21:35:12Z", "tags": [], "is_private": false, "raw_text": "The current Chromium behavior is that it suppresses auth prompt requested by an image resource loaded from cross-origin : https://bugs.chromium.org/p/chromium/issues/detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior has been around for three years. So it may best to change to that to better protect the user. We are thinking about similar behavior on the Edge side as well."}, {"author": "overholt@mozilla.com", "creator": "overholt@mozilla.com", "text": "(In reply to angeloliao16 from comment #87)\n> The current Chromium behavior is that it suppresses auth prompt requested by\n> an image resource loaded from cross-origin :\n> https://bugs.chromium.org/p/chromium/issues/\n> detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20Releas\n> eBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior\n> has been around for three years. So it may best to change to that to better\n> protect the user. We are thinking about similar behavior on the Edge side as\n> well.\n\nThanks for the info! It looks like we ran into a bunch of web breakage when we tried to ship this (see https://bugzilla.mozilla.org/show_bug.cgi?id=1189268#c15). Dragana, do you know if we have plans to revisit things here? If not, maybe Wennie is aware of plans?\n\nAnne, is there a spec change required here?", "attachment_id": null, "id": 12789609, "creation_time": "2017-10-25T16:29:37Z", "tags": [], "is_private": false, "time": "2017-10-25T16:29:37Z", "count": 88, "bug_id": 647010, "raw_text": "(In reply to angeloliao16 from comment #87)\n> The current Chromium behavior is that it suppresses auth prompt requested by\n> an image resource loaded from cross-origin :\n> https://bugs.chromium.org/p/chromium/issues/\n> detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20Releas\n> eBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior\n> has been around for three years. So it may best to change to that to better\n> protect the user. We are thinking about similar behavior on the Edge side as\n> well.\n\nThanks for the info! It looks like we ran into a bunch of web breakage when we tried to ship this (see https://bugzilla.mozilla.org/show_bug.cgi?id=1189268#c15). Dragana, do you know if we have plans to revisit things here? If not, maybe Wennie is aware of plans?\n\nAnne, is there a spec change required here?"}, {"bug_id": 647010, "raw_text": "Yeah, it would require changes to https://fetch.spec.whatwg.org/. (Search for \"prompt\". I don't think Chrome has documented that; they've proposed related changes though: https://github.com/whatwg/fetch/pull/465.)", "count": 89, "time": "2017-10-26T08:59:55Z", "tags": [], "is_private": false, "creation_time": "2017-10-26T08:59:55Z", "creator": "annevk@annevk.nl", "text": "Yeah, it would require changes to https://fetch.spec.whatwg.org/. (Search for \"prompt\". I don't think Chrome has documented that; they've proposed related changes though: https://github.com/whatwg/fetch/pull/465.)", "id": 12791783, "attachment_id": null, "author": "annevk@annevk.nl"}, {"count": 90, "bug_id": 647010, "time": "2017-10-30T13:08:39Z", "author": "ckerschb@christophkerschbaumer.com", "creator": "ckerschb@christophkerschbaumer.com", "raw_text": "(In reply to Andrew Overholt [:overholt] from comment #88)\n> Dragana, do you\n> know if we have plans to revisit things here? If not, maybe Wennie is aware\n> of plans?\n\nYes, we definitely should revisit that. I'll add to the Dom:Security roadmap.", "is_private": false, "tags": [], "creation_time": "2017-10-30T13:08:39Z", "id": 12801724, "attachment_id": null, "text": "(In reply to Andrew Overholt [:overholt] from comment #88)\n> Dragana, do you\n> know if we have plans to revisit things here? If not, maybe Wennie is aware\n> of plans?\n\nYes, we definitely should revisit that. I'll add to the Dom:Security roadmap."}, {"text": "(In reply to Andrew Overholt [:overholt] from comment #88)\n> (In reply to angeloliao16 from comment #87)\n> > The current Chromium behavior is that it suppresses auth prompt requested by\n> > an image resource loaded from cross-origin :\n> > https://bugs.chromium.org/p/chromium/issues/\n> > detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20Releas\n> > eBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior\n> > has been around for three years. So it may best to change to that to better\n> > protect the user. We are thinking about similar behavior on the Edge side as\n> > well.\n> \n> Thanks for the info! It looks like we ran into a bunch of web breakage when\n> we tried to ship this (see\n> https://bugzilla.mozilla.org/show_bug.cgi?id=1189268#c15). Dragana, do you\n> know if we have plans to revisit things here? If not, maybe Wennie is aware\n> of plans?\n> \n> Anne, is there a spec change required here?\n\nWe do, there are already some bugs that are touching this. We need to be careful and turn off http-auth piece by piece.", "creator": "dd.mozilla@gmail.com", "attachment_id": null, "id": 12834680, "author": "dd.mozilla@gmail.com", "creation_time": "2017-11-10T17:52:22Z", "time": "2017-11-10T17:52:22Z", "tags": [], "is_private": false, "bug_id": 647010, "raw_text": "(In reply to Andrew Overholt [:overholt] from comment #88)\n> (In reply to angeloliao16 from comment #87)\n> > The current Chromium behavior is that it suppresses auth prompt requested by\n> > an image resource loaded from cross-origin :\n> > https://bugs.chromium.org/p/chromium/issues/\n> > detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20Releas\n> > eBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior\n> > has been around for three years. So it may best to change to that to better\n> > protect the user. We are thinking about similar behavior on the Edge side as\n> > well.\n> \n> Thanks for the info! It looks like we ran into a bunch of web breakage when\n> we tried to ship this (see\n> https://bugzilla.mozilla.org/show_bug.cgi?id=1189268#c15). Dragana, do you\n> know if we have plans to revisit things here? If not, maybe Wennie is aware\n> of plans?\n> \n> Anne, is there a spec change required here?\n\nWe do, there are already some bugs that are touching this. We need to be careful and turn off http-auth piece by piece.", "count": 91}, {"author": "dd.mozilla@gmail.com", "attachment_id": null, "id": 12898004, "creator": "dd.mozilla@gmail.com", "text": "(In reply to angeloliao16 from comment #87)\n> The current Chromium behavior is that it suppresses auth prompt requested by\n> an image resource loaded from cross-origin :\n> https://bugs.chromium.org/p/chromium/issues/\n> detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20Releas\n> eBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior\n> has been around for three years. So it may best to change to that to better\n> protect the user. We are thinking about similar behavior on the Edge side as\n> well.\n\nBug 1423146 is open to flip  the pref.", "creation_time": "2017-12-05T10:17:26Z", "is_private": false, "tags": [], "time": "2017-12-05T10:17:26Z", "count": 92, "raw_text": "(In reply to angeloliao16 from comment #87)\n> The current Chromium behavior is that it suppresses auth prompt requested by\n> an image resource loaded from cross-origin :\n> https://bugs.chromium.org/p/chromium/issues/\n> detail?id=400380&q=image%20xhr%20prompt&colspec=ID%20Pri%20M%20Stars%20Releas\n> eBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified. This behavior\n> has been around for three years. So it may best to change to that to better\n> protect the user. We are thinking about similar behavior on the Edge side as\n> well.\n\nBug 1423146 is open to flip  the pref.", "bug_id": 647010}, {"raw_text": "Mass bug change to replace various 'parity' whiteboard flags with the new canonical keywords. (See bug 1443764 comment 13.)", "tags": [], "is_private": false, "creation_time": "2018-05-02T15:40:57Z", "text": "Mass bug change to replace various 'parity' whiteboard flags with the new canonical keywords. (See bug 1443764 comment 13.)", "id": 13249213, "attachment_id": null, "bug_id": 647010, "count": 93, "time": "2018-05-02T15:40:57Z", "creator": "jwatt@jwatt.org", "author": "jwatt@jwatt.org"}, {"tags": [], "is_private": false, "time": "2018-05-29T14:56:49Z", "count": 94, "bug_id": 647010, "raw_text": "Hello Mozilla! I sent you a letter 21.05.2018, but without an answer, so write here.\n\nIn March 2011 I informed you about URL Spoofing vulnerability in Mozilla Firefox and in other browsers (for attacks via auth dialogs from external sites). I called this attack as Onsite phishing or Inline phishing. It can be used (including by phishers) for stealing of logins and passwords of users of web sites.\n\nMy advisory: Bug 647010. You fixed it in 2015, but quickly reversed the fix. And I notices, that you fixed it in Firefox 59 in January. But now you fixed only partly - just protection from images vector and not from other vectors of attack.\n\nYou should add my Bug 647010 to References for 2017, e.g. at fxsitecompat.com, since these later bugzilla entries (after March 2011) just repeat my entry. And by myself I wrote about more vectors of attack (all of them), not only images, because it's primitive to talk only about attack by injecting images, while there are many other vectors.\n\nThis is not good that you limited the fix, but it's good, that after 2,5 years you tried again to fix it. Tell me, why do you limited yourself only to images and do you plan to fix other vectors? Do you consider them as a vulnerability at all or images vector of attack was the only vulnerability on your opinion?", "author": "mustlive@websecurity.com.ua", "text": "Hello Mozilla! I sent you a letter 21.05.2018, but without an answer, so write here.\n\nIn March 2011 I informed you about URL Spoofing vulnerability in Mozilla Firefox and in other browsers (for attacks via auth dialogs from external sites). I called this attack as Onsite phishing or Inline phishing. It can be used (including by phishers) for stealing of logins and passwords of users of web sites.\n\nMy advisory: Bug 647010. You fixed it in 2015, but quickly reversed the fix. And I notices, that you fixed it in Firefox 59 in January. But now you fixed only partly - just protection from images vector and not from other vectors of attack.\n\nYou should add my Bug 647010 to References for 2017, e.g. at fxsitecompat.com, since these later bugzilla entries (after March 2011) just repeat my entry. And by myself I wrote about more vectors of attack (all of them), not only images, because it's primitive to talk only about attack by injecting images, while there are many other vectors.\n\nThis is not good that you limited the fix, but it's good, that after 2,5 years you tried again to fix it. Tell me, why do you limited yourself only to images and do you plan to fix other vectors? Do you consider them as a vulnerability at all or images vector of attack was the only vulnerability on your opinion?", "creator": "mustlive@websecurity.com.ua", "id": 13371316, "attachment_id": null, "creation_time": "2018-05-29T14:56:49Z"}]}}}