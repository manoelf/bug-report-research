{"bugs": {"708524": {"comments": [{"tags": [], "attachment_id": null, "creation_time": "2011-12-08T05:54:04Z", "is_private": false, "creator": "cjones.bugs@gmail.com", "time": "2011-12-08T05:54:04Z", "raw_text": "The B2G homescreen has a battery indicator that shows charging/discharging status.  When AC power is plugged in, the indicator shows a CSS animation that indicates charging status.  The animation is over a very small area of the screen, maybe 5x20 pixels.  When the animation runs, the b2g process on device consumes ~30-40% CPU.  That seems way too high.\n\nWe're going to profile and see what's wrong.", "bug_id": 708524, "id": 5899801, "text": "The B2G homescreen has a battery indicator that shows charging/discharging status.  When AC power is plugged in, the indicator shows a CSS animation that indicates charging status.  The animation is over a very small area of the screen, maybe 5x20 pixels.  When the animation runs, the b2g process on device consumes ~30-40% CPU.  That seems way too high.\n\nWe're going to profile and see what's wrong.", "count": 0, "author": "cjones.bugs@gmail.com"}, {"tags": [], "attachment_id": 580712, "creation_time": "2011-12-11T03:03:56Z", "is_private": false, "creator": "swu@mozilla.com", "time": "2011-12-11T03:03:56Z", "raw_text": "", "bug_id": 708524, "id": 5906874, "author": "swu@mozilla.com", "count": 1, "text": "Created attachment 580712\noprofile with animation on"}, {"is_private": false, "creation_time": "2011-12-11T03:05:02Z", "creator": "swu@mozilla.com", "tags": [], "attachment_id": 580713, "id": 5906877, "bug_id": 708524, "author": "swu@mozilla.com", "count": 2, "text": "Created attachment 580713\noprofile with animation off", "time": "2011-12-11T03:05:02Z", "raw_text": ""}, {"tags": [], "attachment_id": 580714, "is_private": false, "creation_time": "2011-12-11T03:17:35Z", "creator": "swu@mozilla.com", "raw_text": "", "time": "2011-12-11T03:17:35Z", "id": 5906880, "bug_id": 708524, "text": "Created attachment 580714\noprofile with animation off (new)", "count": 3, "author": "swu@mozilla.com"}, {"creator": "swu@mozilla.com", "is_private": false, "creation_time": "2011-12-11T03:19:05Z", "attachment_id": null, "tags": [], "text": "The oprofile for target need to patch to support ARM Cortex-A9 used by SGS2 phone.\n\nAdding attached oprofile reports for homescreen.css with animation on and off.\nThere are 2 animation off reports sampled at different time.\nEach was sampled for 10 seconds.\n\nPlease ignore the \"CPU: invalid cpu type, speed 0 MHz (estimated)\" message in the report, it should not matter.", "count": 4, "author": "swu@mozilla.com", "id": 5906882, "bug_id": 708524, "raw_text": "The oprofile for target need to patch to support ARM Cortex-A9 used by SGS2 phone.\n\nAdding attached oprofile reports for homescreen.css with animation on and off.\nThere are 2 animation off reports sampled at different time.\nEach was sampled for 10 seconds.\n\nPlease ignore the \"CPU: invalid cpu type, speed 0 MHz (estimated)\" message in the report, it should not matter.", "time": "2011-12-11T03:19:05Z"}, {"time": "2011-12-11T03:29:19Z", "attachment_id": null, "raw_text": "Can you try do to a build of gecko with symbols and get a detailed profile? Thanks!", "tags": [], "creator": "gal@uci.edu", "author": "gal@uci.edu", "count": 5, "text": "Can you try do to a build of gecko with symbols and get a detailed profile? Thanks!", "bug_id": 708524, "id": 5906885, "is_private": false, "creation_time": "2011-12-11T03:29:19Z"}, {"tags": [], "raw_text": "B2g builds have symbols by default.  You just need to tell oprofile to show function information.  Getting a callgraph might help too.  See the gIthub issue about enabling profiling in the sgs2 kernel to see which patch to get for better stack walking.", "attachment_id": null, "time": "2011-12-11T04:30:26Z", "is_private": false, "creation_time": "2011-12-11T04:30:26Z", "id": 5906913, "bug_id": 708524, "count": 6, "text": "B2g builds have symbols by default.  You just need to tell oprofile to show function information.  Getting a callgraph might help too.  See the gIthub issue about enabling profiling in the sgs2 kernel to see which patch to get for better stack walking.", "author": "cjones.bugs@gmail.com", "creator": "cjones.bugs@gmail.com"}, {"creator": "swu@mozilla.com", "is_private": false, "creation_time": "2011-12-11T04:59:00Z", "attachment_id": null, "tags": [], "author": "swu@mozilla.com", "text": "Let me check how to make callgraph working on SGS2.\n\nBelow is some additional information with symbols.\nMost CPU usage are coming from those fetch_scanline_* functions of gecko.\n\n=================================================\nCPU: invalid cpu type, speed 0 MHz (estimated)\nCounted CPU_CYCLES events (Number of CPU cycles) with a unit mask of 0x00 (No unit mask) count 125000\nsamples  %        app name                 symbol name\n1615      4.5107  libxul.so                fetch_scanline_x1r5g5b5\n1554      4.3403  libxul.so                fetch_scanline_a1b5g5r5\n1509      4.2146  libxul.so                fetch_scanline_x4r4g4b4\n1459      4.0750  libxul.so                fetch_scanline_x1b5g5r5\n1388      3.8767  libxul.so                fetch_scanline_a4r4g4b4\n1326      3.7035  libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n1302      3.6365  libxul.so                fetch_scanline_a4b4g4r4\n1241      3.4661  oprofiled                odb_update_node_with_offset\n764       2.1338  vmlinux                  ring_buffer_consume\n693       1.9355  vmlinux                  schedule\n562       1.5697  vmlinux                  s5pv310_enter_idle\n440       1.2289  libxul.so                fast_composite_scaled_bilinear_neon_8888_8888_pad_SRC\n438       1.2233  vmlinux                  __do_softirq\n279       0.7792  vmlinux                  tick_nohz_stop_sched_tick\n271       0.7569  libm.so                  floor\n267       0.7457  vmlinux                  tick_nohz_restart_sched_tick\n242       0.6759  vmlinux                  add_preempt_count\n236       0.6591  vmlinux                  __queue_work\n211       0.5893  vmlinux                  sub_preempt_count\n208       0.5809  libxul.so                mozilla::imagelib::ConvertColormap(unsigned int*, unsigned int)\n194       0.5418  libxul.so                nsFrameManager::ReparentStyleContext(nsIFrame*)\n177       0.4944  libc.so                  memcpy\n...................\n=================================================", "count": 7, "bug_id": 708524, "id": 5906957, "raw_text": "Let me check how to make callgraph working on SGS2.\n\nBelow is some additional information with symbols.\nMost CPU usage are coming from those fetch_scanline_* functions of gecko.\n\n=================================================\nCPU: invalid cpu type, speed 0 MHz (estimated)\nCounted CPU_CYCLES events (Number of CPU cycles) with a unit mask of 0x00 (No unit mask) count 125000\nsamples  %        app name                 symbol name\n1615      4.5107  libxul.so                fetch_scanline_x1r5g5b5\n1554      4.3403  libxul.so                fetch_scanline_a1b5g5r5\n1509      4.2146  libxul.so                fetch_scanline_x4r4g4b4\n1459      4.0750  libxul.so                fetch_scanline_x1b5g5r5\n1388      3.8767  libxul.so                fetch_scanline_a4r4g4b4\n1326      3.7035  libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n1302      3.6365  libxul.so                fetch_scanline_a4b4g4r4\n1241      3.4661  oprofiled                odb_update_node_with_offset\n764       2.1338  vmlinux                  ring_buffer_consume\n693       1.9355  vmlinux                  schedule\n562       1.5697  vmlinux                  s5pv310_enter_idle\n440       1.2289  libxul.so                fast_composite_scaled_bilinear_neon_8888_8888_pad_SRC\n438       1.2233  vmlinux                  __do_softirq\n279       0.7792  vmlinux                  tick_nohz_stop_sched_tick\n271       0.7569  libm.so                  floor\n267       0.7457  vmlinux                  tick_nohz_restart_sched_tick\n242       0.6759  vmlinux                  add_preempt_count\n236       0.6591  vmlinux                  __queue_work\n211       0.5893  vmlinux                  sub_preempt_count\n208       0.5809  libxul.so                mozilla::imagelib::ConvertColormap(unsigned int*, unsigned int)\n194       0.5418  libxul.so                nsFrameManager::ReparentStyleContext(nsIFrame*)\n177       0.4944  libc.so                  memcpy\n...................\n=================================================", "time": "2011-12-11T04:59:00Z"}, {"raw_text": "Callgraph for \"libxul.so\".", "time": "2011-12-11T06:00:07Z", "bug_id": 708524, "id": 5906971, "author": "swu@mozilla.com", "text": "Created attachment 580717\ncallgraph for libxul.so\n\nCallgraph for \"libxul.so\".", "count": 8, "tags": [], "attachment_id": 580717, "is_private": false, "creation_time": "2011-12-11T06:00:07Z", "creator": "swu@mozilla.com"}, {"attachment_id": null, "raw_text": "Thanks Shian-Yow.  We're not getting backtraces from the expensive functions in pIxman, so it's hard to tell what's expensive.  In general we should fix pixman to give us better stacks, but for the purposes of this bug we can try to get some higher-level profiling data.\n\nMy first guess id that we're invalidating too much content.  Roc, tn is there a guide to getting invalidation information somewhere?  Is the easiest way to check this to look st display list dumps?", "time": "2011-12-11T06:58:30Z", "tags": [], "author": "cjones.bugs@gmail.com", "count": 9, "text": "Thanks Shian-Yow.  We're not getting backtraces from the expensive functions in pIxman, so it's hard to tell what's expensive.  In general we should fix pixman to give us better stacks, but for the purposes of this bug we can try to get some higher-level profiling data.\n\nMy first guess id that we're invalidating too much content.  Roc, tn is there a guide to getting invalidation information somewhere?  Is the easiest way to check this to look st display list dumps?", "creator": "cjones.bugs@gmail.com", "is_private": false, "creation_time": "2011-12-11T06:58:30Z", "id": 5906990, "bug_id": 708524}, {"raw_text": "Another result measured at a different time.  The libxul.so consumes 37% CPU, but the callgraph result was different from previous attachment.\n\n======================================\nCPU: invalid cpu type, speed 0 MHz (estimated)\nCounted CPU_CYCLES events (Number of CPU cycles) with a unit mask of 0x00 (No unit mask) count 125000\nCPU_CYCLES:125000|\n  samples|      %|\n------------------\n    10462 37.5130 libxul.so\n     9717 34.8417 vmlinux\n     2025  7.2609 libGLESv2_mali.so\n     1925  6.9024 oprofiled\n     1079  3.8689 libc.so\n      927  3.3239 libMali.so\n      660  2.3665 libmozutils.so\n      386  1.3841 libm.so\n      338  1.2119 libnspr4.so\n======================================", "time": "2011-12-11T07:30:28Z", "bug_id": 708524, "id": 5907000, "text": "Created attachment 580721\ncallgraph for libxul.so with different result\n\nAnother result measured at a different time.  The libxul.so consumes 37% CPU, but the callgraph result was different from previous attachment.\n\n======================================\nCPU: invalid cpu type, speed 0 MHz (estimated)\nCounted CPU_CYCLES events (Number of CPU cycles) with a unit mask of 0x00 (No unit mask) count 125000\nCPU_CYCLES:125000|\n  samples|      %|\n------------------\n    10462 37.5130 libxul.so\n     9717 34.8417 vmlinux\n     2025  7.2609 libGLESv2_mali.so\n     1925  6.9024 oprofiled\n     1079  3.8689 libc.so\n      927  3.3239 libMali.so\n      660  2.3665 libmozutils.so\n      386  1.3841 libm.so\n      338  1.2119 libnspr4.so\n======================================", "count": 10, "author": "swu@mozilla.com", "tags": [], "attachment_id": 580721, "creation_time": "2011-12-11T07:30:28Z", "is_private": false, "creator": "swu@mozilla.com"}, {"bug_id": 708524, "id": 5907004, "creation_time": "2011-12-11T07:54:59Z", "is_private": false, "creator": "swu@mozilla.com", "count": 11, "text": "In my testing, there are 2 cases.\n\nCase 1: libxul.so consumes 54%, a lot coming from pixman.\n\nList of functions consume higher than %1 usage:\n=====================================================\nsamples  %        app name                 symbol name\n2841      6.0810  oprofiled                odb_update_node_with_offset\n1815      3.8849  libxul.so                fetch_scanline_x4r4g4b4\n1802      3.8571  libxul.so                fetch_scanline_x1r5g5b5\n1795      3.8421  libxul.so                fetch_scanline_a1b5g5r5\n1734      3.7116  libxul.so                fetch_scanline_x1b5g5r5\n1668      3.5703  libxul.so                fetch_scanline_a4r4g4b4\n1547      3.3113  libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n1515      3.2428  libxul.so                fetch_scanline_a4b4g4r4\n1074      2.2989  vmlinux                  ring_buffer_consume\n938       2.0077  vmlinux                  s5pv310_enter_idle\n769       1.6460  vmlinux                  schedule\n618       1.3228  libxul.so                fast_composite_scaled_bilinear_neon_8888_8888_pad_SRC\n591       1.2650  vmlinux                  __do_softirq\n=====================================================\n\n\nCase 2: libxul.so consumes 37%, no expensive functions seen.\n\nList of functions consume higher than %1 usage:\n=====================================================\nsamples  %        app name                 symbol name\n1391      5.0186  oprofiled                odb_update_node_with_offset\n1310      4.7263  libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n779       2.8105  vmlinux                  s5pv310_enter_idle\n757       2.7312  vmlinux                  ring_buffer_consume\n650       2.3451  vmlinux                  schedule\n343       1.2375  vmlinux                  add_preempt_count\n337       1.2159  vmlinux                  __do_softirq\n311       1.1221  libxul.so                fast_composite_scaled_bilinear_neon_8888_8888_pad_OVER\n297       1.0715  libm.so                  floor\n294       1.0607  vmlinux                  sub_preempt_count\n=====================================================", "author": "swu@mozilla.com", "tags": [], "time": "2011-12-11T07:54:59Z", "raw_text": "In my testing, there are 2 cases.\n\nCase 1: libxul.so consumes 54%, a lot coming from pixman.\n\nList of functions consume higher than %1 usage:\n=====================================================\nsamples  %        app name                 symbol name\n2841      6.0810  oprofiled                odb_update_node_with_offset\n1815      3.8849  libxul.so                fetch_scanline_x4r4g4b4\n1802      3.8571  libxul.so                fetch_scanline_x1r5g5b5\n1795      3.8421  libxul.so                fetch_scanline_a1b5g5r5\n1734      3.7116  libxul.so                fetch_scanline_x1b5g5r5\n1668      3.5703  libxul.so                fetch_scanline_a4r4g4b4\n1547      3.3113  libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n1515      3.2428  libxul.so                fetch_scanline_a4b4g4r4\n1074      2.2989  vmlinux                  ring_buffer_consume\n938       2.0077  vmlinux                  s5pv310_enter_idle\n769       1.6460  vmlinux                  schedule\n618       1.3228  libxul.so                fast_composite_scaled_bilinear_neon_8888_8888_pad_SRC\n591       1.2650  vmlinux                  __do_softirq\n=====================================================\n\n\nCase 2: libxul.so consumes 37%, no expensive functions seen.\n\nList of functions consume higher than %1 usage:\n=====================================================\nsamples  %        app name                 symbol name\n1391      5.0186  oprofiled                odb_update_node_with_offset\n1310      4.7263  libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n779       2.8105  vmlinux                  s5pv310_enter_idle\n757       2.7312  vmlinux                  ring_buffer_consume\n650       2.3451  vmlinux                  schedule\n343       1.2375  vmlinux                  add_preempt_count\n337       1.2159  vmlinux                  __do_softirq\n311       1.1221  libxul.so                fast_composite_scaled_bilinear_neon_8888_8888_pad_OVER\n297       1.0715  libm.so                  floor\n294       1.0607  vmlinux                  sub_preempt_count\n=====================================================", "attachment_id": null}, {"raw_text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #9)\n> My first guess id that we're invalidating too much content.  Roc, tn is\n> there a guide to getting invalidation information somewhere?  Is the easiest\n> way to check this to look st display list dumps?\n\nThe easiest way without changing code, yes. Set MOZ_DUMP_PAINT_LIST=1 in the environment or gDumpPaintList=1 in a debugger.", "attachment_id": null, "time": "2011-12-11T21:28:44Z", "tags": [], "count": 12, "text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #9)\n> My first guess id that we're invalidating too much content.  Roc, tn is\n> there a guide to getting invalidation information somewhere?  Is the easiest\n> way to check this to look st display list dumps?\n\nThe easiest way without changing code, yes. Set MOZ_DUMP_PAINT_LIST=1 in the environment or gDumpPaintList=1 in a debugger.", "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "is_private": false, "creation_time": "2011-12-11T21:28:44Z", "bug_id": 708524, "id": 5907520}, {"time": "2011-12-13T00:45:13Z", "raw_text": "I use something like this when looking into painting/invalidation things.", "attachment_id": 581098, "tags": [], "creator": "tnikkel@gmail.com", "count": 13, "text": "Created attachment 581098\ndebug patch\n\nI use something like this when looking into painting/invalidation things.", "author": "tnikkel@gmail.com", "bug_id": 708524, "id": 5910778, "is_private": false, "creation_time": "2011-12-13T00:45:13Z"}, {"tags": [], "attachment_id": 581895, "is_private": false, "creation_time": "2011-12-15T07:37:58Z", "creator": "swu@mozilla.com", "time": "2011-12-15T07:37:58Z", "raw_text": "", "id": 5918147, "bug_id": 708524, "author": "swu@mozilla.com", "count": 14, "text": "Created attachment 581895\nDump paint log with MOZ_DUMP_PAINT_LIST=1 (Animation on)"}, {"time": "2011-12-15T07:39:22Z", "raw_text": "", "bug_id": 708524, "id": 5918151, "author": "swu@mozilla.com", "text": "Created attachment 581897\nDump paint log with MOZ_DUMP_PAINT_LIST=1 (Animation off)", "count": 15, "tags": [], "attachment_id": 581897, "is_private": false, "creation_time": "2011-12-15T07:39:22Z", "creator": "swu@mozilla.com"}, {"creator": "swu@mozilla.com", "text": "I attached 2 dump paint logs (Animation on and off).\n\nIn Animation on case, the log was very busy.  \nCan someone take a look to see if any anything abnormal?  :)", "count": 16, "author": "swu@mozilla.com", "id": 5918155, "bug_id": 708524, "creation_time": "2011-12-15T07:42:01Z", "is_private": false, "time": "2011-12-15T07:42:01Z", "raw_text": "I attached 2 dump paint logs (Animation on and off).\n\nIn Animation on case, the log was very busy.  \nCan someone take a look to see if any anything abnormal?  :)", "attachment_id": null, "tags": []}, {"creation_time": "2011-12-15T23:54:41Z", "is_private": false, "creator": "cjones.bugs@gmail.com", "tags": [], "attachment_id": null, "bug_id": 708524, "id": 5920592, "author": "cjones.bugs@gmail.com", "text": "Yes:\n\n-----\nPainting --- before optimization (dirty 0,0,28800,48000):\n-----\n\nIf I read correctly, the entire viewport is being invalidated by the battery animation.  That's bad.", "count": 17, "time": "2011-12-15T23:54:41Z", "raw_text": "Yes:\n\n-----\nPainting --- before optimization (dirty 0,0,28800,48000):\n-----\n\nIf I read correctly, the entire viewport is being invalidated by the battery animation.  That's bad."}, {"creator": "roc@ocallahan.org", "creation_time": "2011-12-15T23:58:24Z", "is_private": false, "attachment_id": null, "tags": [], "count": 18, "text": "No, that's just us building the display list for the entire window to ensure we rebuild layers correctly. The actual invalid region doesn't show up in this log. You'll need to look at the paint events your Gonk widget is dispatching.", "author": "roc@ocallahan.org", "bug_id": 708524, "id": 5920608, "raw_text": "No, that's just us building the display list for the entire window to ensure we rebuild layers correctly. The actual invalid region doesn't show up in this log. You'll need to look at the paint events your Gonk widget is dispatching.", "time": "2011-12-15T23:58:24Z"}, {"raw_text": "Here's another log added Timothy's debug patch.\nDoes it help to indicate more clues?", "attachment_id": 582622, "time": "2011-12-18T03:22:02Z", "tags": [], "text": "Created attachment 582622\nAnimation on with MOZ_DUMP_PAINT_LIST=1 and Timothy's debug patch\n\nHere's another log added Timothy's debug patch.\nDoes it help to indicate more clues?", "count": 19, "author": "swu@mozilla.com", "creator": "swu@mozilla.com", "creation_time": "2011-12-18T03:22:02Z", "is_private": false, "bug_id": 708524, "id": 5925004}, {"creator": "swu@mozilla.com", "count": 20, "text": "Created attachment 582629\nAnimation on with MOZ_DUMP_PAINT_LIST=1 and Timothy's debug patch\n\nPrevious log was incorrect.  Update with this.", "author": "swu@mozilla.com", "id": 5925040, "bug_id": 708524, "creation_time": "2011-12-18T04:46:52Z", "is_private": false, "time": "2011-12-18T04:46:52Z", "raw_text": "Previous log was incorrect.  Update with this.", "attachment_id": 582629, "tags": []}, {"creation_time": "2011-12-18T05:08:25Z", "is_private": false, "bug_id": 708524, "id": 5925054, "author": "swu@mozilla.com", "count": 21, "text": "Created attachment 582630\nAnimation on log with only Timothy's debug patch\n\nThis is another log with Timothy's debug patch, but turn off MOZ_DUMP_PAINT_LIST to show less information.  \n\nThis log was captured for about 20 seconds.  \nThe message \"paint event bounds 0 0 480 800\" was found 895 times.\nAnd \"InvalidateThebesLayerContents\" was found 2893 times.\n\nDoes this mean we are invalidating too much?", "creator": "swu@mozilla.com", "tags": [], "attachment_id": 582630, "raw_text": "This is another log with Timothy's debug patch, but turn off MOZ_DUMP_PAINT_LIST to show less information.  \n\nThis log was captured for about 20 seconds.  \nThe message \"paint event bounds 0 0 480 800\" was found 895 times.\nAnd \"InvalidateThebesLayerContents\" was found 2893 times.\n\nDoes this mean we are invalidating too much?", "time": "2011-12-18T05:08:25Z"}, {"attachment_id": null, "raw_text": "paint event bounds 0 0 480 800\nDrawThebesLayer aRegionToDraw 0 0 480 24\nInvalidateThebesLayerContents 405 3 29 16\nnsViewManager::UpdateViewNoSuppression 405 3 29 16\nInvalidateThebesLayerContents 0 0 480 24\nnsViewManager::UpdateViewNoSuppression 0 0 480 24\nInvalidateThebesLayerContents 0 0 480 24\nnsViewManager::UpdateViewNoSuppression 0 0 480 24\n\nThis repeats over and over. The coordinates look weird for\n\nInvalidateThebesLayerContents 405 3 29 16\nnsViewManager::UpdateViewNoSuppression 405 3 29 16", "time": "2011-12-18T05:20:04Z", "tags": [], "author": "gal@uci.edu", "count": 22, "text": "paint event bounds 0 0 480 800\nDrawThebesLayer aRegionToDraw 0 0 480 24\nInvalidateThebesLayerContents 405 3 29 16\nnsViewManager::UpdateViewNoSuppression 405 3 29 16\nInvalidateThebesLayerContents 0 0 480 24\nnsViewManager::UpdateViewNoSuppression 0 0 480 24\nInvalidateThebesLayerContents 0 0 480 24\nnsViewManager::UpdateViewNoSuppression 0 0 480 24\n\nThis repeats over and over. The coordinates look weird for\n\nInvalidateThebesLayerContents 405 3 29 16\nnsViewManager::UpdateViewNoSuppression 405 3 29 16", "creator": "gal@uci.edu", "creation_time": "2011-12-18T05:20:04Z", "is_private": false, "bug_id": 708524, "id": 5925061}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-12-18T07:05:43Z", "creator": "swu@mozilla.com", "raw_text": "The coordinate \"405 3 29 16\" is the battery image on the top right corner, and \"0 0 480 24\" is the notification bar at the top.\n\nNext thing is to find out why they repeated so frequently.", "time": "2011-12-18T07:05:43Z", "bug_id": 708524, "id": 5925115, "count": 23, "text": "The coordinate \"405 3 29 16\" is the battery image on the top right corner, and \"0 0 480 24\" is the notification bar at the top.\n\nNext thing is to find out why they repeated so frequently.", "author": "swu@mozilla.com"}, {"creation_time": "2011-12-18T08:04:52Z", "is_private": false, "creator": "tnikkel@gmail.com", "tags": [], "attachment_id": null, "id": 5925133, "bug_id": 708524, "count": 24, "text": "From that log it looks like we invalidate reasonable rects, but every paint event is for the entire window still. We repaint 480x24 rect of a layer and composite the layer tree and blit that to the screen for the rest of the window. What does the DOM tree look like? Is the battery indicator inside a floated element maybe?", "author": "tnikkel@gmail.com", "raw_text": "From that log it looks like we invalidate reasonable rects, but every paint event is for the entire window still. We repaint 480x24 rect of a layer and composite the layer tree and blit that to the screen for the rest of the window. What does the DOM tree look like? Is the battery indicator inside a floated element maybe?", "time": "2011-12-18T08:04:52Z"}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-12-18T09:43:16Z", "creator": "roc@ocallahan.org", "time": "2011-12-18T09:43:16Z", "raw_text": "    nsPaintEvent event(true, NS_PAINT, gWindowToRedraw);\n    event.region = gScreenBounds;\n\nSo the paint event bounds are always the screen. Nothing to see there. I sure hope we're using GL to composite everything.\n\nI think we may need a hierarchical profile to get a better grip on what's costly here.\n\n(In reply to Shian-Yow Wu from comment #23)\n> The coordinate \"405 3 29 16\" is the battery image on the top right corner,\n> and \"0 0 480 24\" is the notification bar at the top.\n\nWe shouldn't be repainting the notification bar, right? That may be some kind of bug, although it may not explain the performance issue.", "bug_id": 708524, "id": 5925188, "author": "roc@ocallahan.org", "text": "    nsPaintEvent event(true, NS_PAINT, gWindowToRedraw);\n    event.region = gScreenBounds;\n\nSo the paint event bounds are always the screen. Nothing to see there. I sure hope we're using GL to composite everything.\n\nI think we may need a hierarchical profile to get a better grip on what's costly here.\n\n(In reply to Shian-Yow Wu from comment #23)\n> The coordinate \"405 3 29 16\" is the battery image on the top right corner,\n> and \"0 0 480 24\" is the notification bar at the top.\n\nWe shouldn't be repainting the notification bar, right? That may be some kind of bug, although it may not explain the performance issue.", "count": 25}, {"tags": [], "time": "2011-12-18T21:39:05Z", "attachment_id": null, "raw_text": "Yuck.  Fwiw we saw the same symptom on android too.\n\nWe are compositing with GL.\n\n(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #25)\n> We shouldn't be repainting the notification bar, right? That may be some\n> kind of bug, although it may not explain the performance issue.\n\nNot the whole thing.", "bug_id": 708524, "id": 5925651, "is_private": false, "creation_time": "2011-12-18T21:39:05Z", "creator": "cjones.bugs@gmail.com", "author": "cjones.bugs@gmail.com", "text": "Yuck.  Fwiw we saw the same symptom on android too.\n\nWe are compositing with GL.\n\n(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #25)\n> We shouldn't be repainting the notification bar, right? That may be some\n> kind of bug, although it may not explain the performance issue.\n\nNot the whole thing.", "count": 26}, {"attachment_id": null, "raw_text": "is this the same bug as bug 698297?", "time": "2011-12-27T02:52:56Z", "tags": [], "author": "nhirata.bugzilla@gmail.com", "text": "is this the same bug as bug 698297?", "count": 27, "creator": "nhirata.bugzilla@gmail.com", "creation_time": "2011-12-27T02:52:56Z", "is_private": false, "id": 5940368, "bug_id": 708524}, {"tags": [], "attachment_id": 584379, "is_private": false, "creation_time": "2011-12-27T04:36:00Z", "creator": "swu@mozilla.com", "raw_text": "This is the profiling result with perf.\nAfter using \"libxul.so\" compiled with \"-fno-omit-frame-pointer\", it indicated CPU time was spent on these 2 functions in pixman.\n    14.48%  b2g-debug  libxul.so            [.] bits_image_fetch_bilinear_affine_pad_r5g6b5\n    11.23%  b2g-debug  libxul.so            [.] convert_r5g6b5\n\nThe high CPU time functions are different from Bug 698297.  But can't say whether the 2 bugs are related or not, as I cannot get callgraph working for pixman functions.", "time": "2011-12-27T04:36:00Z", "id": 5940425, "bug_id": 708524, "text": "Created attachment 584379\nperf callgraph\n\nThis is the profiling result with perf.\nAfter using \"libxul.so\" compiled with \"-fno-omit-frame-pointer\", it indicated CPU time was spent on these 2 functions in pixman.\n    14.48%  b2g-debug  libxul.so            [.] bits_image_fetch_bilinear_affine_pad_r5g6b5\n    11.23%  b2g-debug  libxul.so            [.] convert_r5g6b5\n\nThe high CPU time functions are different from Bug 698297.  But can't say whether the 2 bugs are related or not, as I cannot get callgraph working for pixman functions.", "count": 28, "author": "swu@mozilla.com"}, {"raw_text": "Sounds like we are doing some 16-bit rgb to 24-bit rgb conversion here. Thats odd. We are driving the screen with 24bpp. Where would the 16-bit rgb come from?", "attachment_id": null, "time": "2011-12-27T06:21:10Z", "tags": [], "text": "Sounds like we are doing some 16-bit rgb to 24-bit rgb conversion here. Thats odd. We are driving the screen with 24bpp. Where would the 16-bit rgb come from?", "count": 29, "author": "gal@uci.edu", "creator": "gal@uci.edu", "creation_time": "2011-12-27T06:21:10Z", "is_private": false, "id": 5940482, "bug_id": 708524}, {"creation_time": "2011-12-27T19:20:35Z", "is_private": false, "creator": "cjones.bugs@gmail.com", "tags": [], "attachment_id": null, "bug_id": 708524, "id": 5941324, "count": 30, "text": "This bug is mostly invalid, until we fix bug 711867.\n\ngecko uses 16bpp surfaces by default in GFX_OPTIMIZE_MOBILE.", "author": "cjones.bugs@gmail.com", "time": "2011-12-27T19:20:35Z", "raw_text": "This bug is mostly invalid, until we fix bug 711867.\n\ngecko uses 16bpp surfaces by default in GFX_OPTIMIZE_MOBILE."}, {"tags": [], "attachment_id": null, "creation_time": "2011-12-30T18:17:28Z", "is_private": false, "creator": "cjones.bugs@gmail.com", "raw_text": "OK, still seeing high CPU usage after bug 711867 landed.  Let's get some oprofile data.", "time": "2011-12-30T18:17:28Z", "bug_id": 708524, "id": 5947078, "count": 31, "text": "OK, still seeing high CPU usage after bug 711867 landed.  Let's get some oprofile data.", "author": "cjones.bugs@gmail.com"}, {"creator": "swu@mozilla.com", "is_private": false, "creation_time": "2012-01-01T01:31:40Z", "attachment_id": 585172, "tags": [], "author": "swu@mozilla.com", "text": "Created attachment 585172\noprofile summary", "count": 32, "id": 5948687, "bug_id": 708524, "time": "2012-01-01T01:31:40Z", "raw_text": ""}, {"bug_id": 708524, "id": 5948688, "text": "Created attachment 585173\noprofile detail", "count": 33, "author": "swu@mozilla.com", "raw_text": "", "time": "2012-01-01T01:35:30Z", "is_private": false, "creation_time": "2012-01-01T01:35:30Z", "creator": "swu@mozilla.com", "tags": [], "attachment_id": 585173}, {"time": "2012-01-01T01:51:37Z", "attachment_id": null, "raw_text": "We need a stack profile.", "tags": [], "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "text": "We need a stack profile.", "count": 34, "id": 5948693, "bug_id": 708524, "is_private": false, "creation_time": "2012-01-01T01:51:37Z"}, {"id": 5948820, "bug_id": 708524, "author": "swu@mozilla.com", "text": "Created attachment 585185\noprofile with callgraph\n\nThis is oprofile with call graph.", "count": 35, "time": "2012-01-01T09:45:21Z", "raw_text": "This is oprofile with call graph.", "creation_time": "2012-01-01T09:45:21Z", "is_private": false, "creator": "swu@mozilla.com", "tags": [], "attachment_id": 585185}, {"tags": [], "attachment_id": null, "raw_text": "Hmm, how to interpret that?\n\nHow much of the time is spend under FrameLayerBuilder::BuildContainerLayerFor?\n\nHow much under nsFrame::BuildDisplayListForStackingContext?", "time": "2012-01-02T03:25:26Z", "is_private": false, "creation_time": "2012-01-02T03:25:26Z", "bug_id": 708524, "id": 5949289, "author": "roc@ocallahan.org", "count": 36, "text": "Hmm, how to interpret that?\n\nHow much of the time is spend under FrameLayerBuilder::BuildContainerLayerFor?\n\nHow much under nsFrame::BuildDisplayListForStackingContext?", "creator": "roc@ocallahan.org"}, {"time": "2012-01-02T06:18:43Z", "attachment_id": null, "raw_text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #36)\n> Hmm, how to interpret that?\n> \n> How much of the time is spend under\n> FrameLayerBuilder::BuildContainerLayerFor?\n> \n> How much under nsFrame::BuildDisplayListForStackingContext?\n\nBelow was the opcontrol commands been used, and the log were generated from opreport at host side.\n\nopcontrol --vmlinux=/data/local/vmlinux --kernel-range=0xc059c000,0xc0c06000 --event=CPU_CYCLES:125000\nopcontrol --callgraph=6\nopcontrol --start;sleep 10;opcontrol --stop\n\nIt's sampled by CPU_CYCLES event for 10 seconds.\n\nI'm not sure if it's accurate to estimate time spent from sample percentage.\nIf we calculate it this way, then the estimated time should be 9.16ms (10 sec * 0.0916%) for FrameLayerBuilder::BuildContainerLayerFor, and 4.58ms for nsIFrame::BuildDisplayListForStackingContext.", "tags": [], "creator": "swu@mozilla.com", "author": "swu@mozilla.com", "count": 37, "text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #36)\n> Hmm, how to interpret that?\n> \n> How much of the time is spend under\n> FrameLayerBuilder::BuildContainerLayerFor?\n> \n> How much under nsFrame::BuildDisplayListForStackingContext?\n\nBelow was the opcontrol commands been used, and the log were generated from opreport at host side.\n\nopcontrol --vmlinux=/data/local/vmlinux --kernel-range=0xc059c000,0xc0c06000 --event=CPU_CYCLES:125000\nopcontrol --callgraph=6\nopcontrol --start;sleep 10;opcontrol --stop\n\nIt's sampled by CPU_CYCLES event for 10 seconds.\n\nI'm not sure if it's accurate to estimate time spent from sample percentage.\nIf we calculate it this way, then the estimated time should be 9.16ms (10 sec * 0.0916%) for FrameLayerBuilder::BuildContainerLayerFor, and 4.58ms for nsIFrame::BuildDisplayListForStackingContext.", "id": 5949368, "bug_id": 708524, "creation_time": "2012-01-02T06:18:43Z", "is_private": false}, {"text": "1287      4.9133  libGLESv2_mali.so        libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n\nThis is us possibly doing excessive texture uploading, which might mean that our uploading code is using a slow path.\n\n  669       2.5540  libmozutils.so           libmozutils.so           __clzsi2\n\nI have no idea what this is.  It looks suspicious.  glandium, any pointers?\n\n  314       1.1987  libxul.so                libxul.so                pixman_composite_over_8888_8888_asm_neon\n\nThis is surprising, because we should be compositing in GL.\n\n  296       1.1300  libnspr4.so              libnspr4.so              /system/b2g/libnspr4.so\n\nThis is also suspicious.  We should be getting symbols from nspr, so that's a separate bug too.", "count": 38, "author": "cjones.bugs@gmail.com", "creator": "cjones.bugs@gmail.com", "is_private": false, "creation_time": "2012-01-03T21:34:58Z", "bug_id": 708524, "id": 5952084, "raw_text": "1287      4.9133  libGLESv2_mali.so        libGLESv2_mali.so        _gles_fb_tex_sub_image_2d\n\nThis is us possibly doing excessive texture uploading, which might mean that our uploading code is using a slow path.\n\n  669       2.5540  libmozutils.so           libmozutils.so           __clzsi2\n\nI have no idea what this is.  It looks suspicious.  glandium, any pointers?\n\n  314       1.1987  libxul.so                libxul.so                pixman_composite_over_8888_8888_asm_neon\n\nThis is surprising, because we should be compositing in GL.\n\n  296       1.1300  libnspr4.so              libnspr4.so              /system/b2g/libnspr4.so\n\nThis is also suspicious.  We should be getting symbols from nspr, so that's a separate bug too.", "attachment_id": null, "time": "2012-01-03T21:34:58Z", "tags": []}, {"bug_id": 708524, "id": 5953355, "text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #38)\n>   669       2.5540  libmozutils.so           libmozutils.so          \n> __clzsi2\n> \n> I have no idea what this is.  It looks suspicious.  glandium, any pointers?\n\nhttp://gcc.gnu.org/onlinedocs/gccint/Integer-library-routines.html", "count": 39, "author": "mh+mozilla@glandium.org", "time": "2012-01-04T07:20:53Z", "raw_text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #38)\n>   669       2.5540  libmozutils.so           libmozutils.so          \n> __clzsi2\n> \n> I have no idea what this is.  It looks suspicious.  glandium, any pointers?\n\nhttp://gcc.gnu.org/onlinedocs/gccint/Integer-library-routines.html", "is_private": false, "creation_time": "2012-01-04T07:20:53Z", "creator": "mh+mozilla@glandium.org", "tags": [], "attachment_id": null}]}}, "comments": {}}