{"bugs": {"668296": {"comments": [{"raw_text": "Right now, all of our nsISMILType::Destroy impls do something like:\n>  aValue.mU.whateverTypeImUsing = someZeroishValue; // nsnull or 0.0 or 0\n>  aValue.mType = &nsSMILNullType::sSingleton;\n\nEach class does this in its own way (using its particular subcomponent(s) of mU), but that's kind of silly -- it's one extra piece of boilerplate that has to be copied (with manual tweaking) into each new SMIL class & tweaked.\n\nThe goal of all this is just to zero out mU (simply as a foolproofing technique, in case we accidentally re-use a nsSMILValue after destroying it).  There's no reason that we need to do this in a class-specific way. We should just stick this code in an inherited nsISMILType::Destroy method -- this would share code better, and it'd also remove the need for any Destroy impl at all in many of our nsISMILType classes.", "attachment_id": null, "id": 5565182, "count": 0, "is_private": false, "creator": "dholbert@mozilla.com", "text": "Right now, all of our nsISMILType::Destroy impls do something like:\n>  aValue.mU.whateverTypeImUsing = someZeroishValue; // nsnull or 0.0 or 0\n>  aValue.mType = &nsSMILNullType::sSingleton;\n\nEach class does this in its own way (using its particular subcomponent(s) of mU), but that's kind of silly -- it's one extra piece of boilerplate that has to be copied (with manual tweaking) into each new SMIL class & tweaked.\n\nThe goal of all this is just to zero out mU (simply as a foolproofing technique, in case we accidentally re-use a nsSMILValue after destroying it).  There's no reason that we need to do this in a class-specific way. We should just stick this code in an inherited nsISMILType::Destroy method -- this would share code better, and it'd also remove the need for any Destroy impl at all in many of our nsISMILType classes.", "bug_id": 668296, "time": "2011-06-29T18:59:42Z", "tags": [], "creation_time": "2011-06-29T18:59:42Z", "author": "dholbert@mozilla.com"}, {"tags": [], "bug_id": 668296, "time": "2011-06-29T19:22:28Z", "text": "(I started to write up this patch, but it's not as dead-simple-straightforward as I initially thought, because nsISMILType is only a .h file, and it can't touch nsSMILValue nor nsSMILNullType::sSingleton, since the files that define those things #include nsISMILType themselves.  Holding off on this for now; feel free to take this & fix it.)", "author": "dholbert@mozilla.com", "creation_time": "2011-06-29T19:22:28Z", "count": 1, "creator": "dholbert@mozilla.com", "is_private": false, "id": 5565261, "raw_text": "(I started to write up this patch, but it's not as dead-simple-straightforward as I initially thought, because nsISMILType is only a .h file, and it can't touch nsSMILValue nor nsSMILNullType::sSingleton, since the files that define those things #include nsISMILType themselves.  Holding off on this for now; feel free to take this & fix it.)", "attachment_id": null}, {"creator": "dholbert@mozilla.com", "is_private": false, "time": "2011-06-29T23:21:25Z", "tags": [], "text": "But basically, the idea here is to have something like this (possibly in a new nsISMILType.cpp file, if that's not too icky):\n>  /* virtual */\n>  void nsISMILType::Destroy(nsSMILValue& aValue) const {\n>    NS_PRECONDITION(aValue.mType == this, \"Unexpected SMIL value\");\n>    memset(&aValue.mU, 0, sizeof(aValue.mU));\n>    aValue.mType = &nsSMILNullType::sSingleton;\n>  }\n\nand then get rid of all the ::Destroy() impls\n(except for the ones that delete mU.mPtr -- those would need to remain, but their boilerplate code could still be replaced with a call to \"nsISMILType::Destroy(aValue);\")", "author": "dholbert@mozilla.com", "creation_time": "2011-06-29T23:21:25Z", "raw_text": "But basically, the idea here is to have something like this (possibly in a new nsISMILType.cpp file, if that's not too icky):\n>  /* virtual */\n>  void nsISMILType::Destroy(nsSMILValue& aValue) const {\n>    NS_PRECONDITION(aValue.mType == this, \"Unexpected SMIL value\");\n>    memset(&aValue.mU, 0, sizeof(aValue.mU));\n>    aValue.mType = &nsSMILNullType::sSingleton;\n>  }\n\nand then get rid of all the ::Destroy() impls\n(except for the ones that delete mU.mPtr -- those would need to remain, but their boilerplate code could still be replaced with a call to \"nsISMILType::Destroy(aValue);\")", "attachment_id": null, "id": 5565884, "count": 2, "bug_id": 668296}]}}, "comments": {}}