{"comments": {}, "bugs": {"664796": {"comments": [{"bug_id": 664796, "id": 5537356, "count": 0, "is_private": false, "tags": [], "attachment_id": null, "time": "2011-06-16T19:14:21Z", "text": "Right now, getting new messages for a group requires us to open up the database. We should avoid doing so until we're absolutely sure that the database needs to be opened--i.e., the readsets confirm that we have a new message.", "creation_time": "2011-06-16T19:14:21Z", "raw_text": "Right now, getting new messages for a group requires us to open up the database. We should avoid doing so until we're absolutely sure that the database needs to be opened--i.e., the readsets confirm that we have a new message.", "author": "Pidgeot18@gmail.com", "creator": "Pidgeot18@gmail.com"}, {"creator": "Pidgeot18@gmail.com", "author": "Pidgeot18@gmail.com", "text": "Some notes:\n\nThe first part the database is opened is probably nsNNTPNewsgroupList::Init; it's not needed for sure until GetRangeOfArtsToDownload. nsNewsFolder::UpdateSummaryFromNNTPInfo may indirectly cause it to be opened, but that should only happen if there are actually new messages.\n\nThe last part of the puzzle is making sure nsNNTPNewsgroupList::GetRangeOfArtsToDownload doesn't open up the database if it finds it shouldn't have to, i.e., m_firstArticle would equal m_lastArticle.\n\nIt shouldn't be too hard to write a test to make sure that the database isn't opened when we don't need to (nsIDbChangeListener::onEvent with the event being DBOpened).", "attachment_id": null, "time": "2011-06-16T21:53:26Z", "creation_time": "2011-06-16T21:53:26Z", "raw_text": "Some notes:\n\nThe first part the database is opened is probably nsNNTPNewsgroupList::Init; it's not needed for sure until GetRangeOfArtsToDownload. nsNewsFolder::UpdateSummaryFromNNTPInfo may indirectly cause it to be opened, but that should only happen if there are actually new messages.\n\nThe last part of the puzzle is making sure nsNNTPNewsgroupList::GetRangeOfArtsToDownload doesn't open up the database if it finds it shouldn't have to, i.e., m_firstArticle would equal m_lastArticle.\n\nIt shouldn't be too hard to write a test to make sure that the database isn't opened when we don't need to (nsIDbChangeListener::onEvent with the event being DBOpened).", "bug_id": 664796, "tags": [], "is_private": false, "count": 1, "id": 5537874}, {"count": 2, "is_private": false, "tags": [], "id": 5703370, "bug_id": 664796, "creation_time": "2011-09-06T22:30:48Z", "raw_text": "I took these while working with some gurus in the #maildev IRC channel.  The files were taken with a loop during most of the time that my CPU was being throttled by Thunderbird.  It took a few seconds to stop the loop once utilization calmed down resulting in the last few files.  The loop follows:\n\nwhile [ 1 ]; do gstack 7542 > /tmp/tb/7542.`date +%s`; sleep 1; done", "text": "Created attachment 558638\nThunderbird gstacks (mostly) during issue with symbols.\n\nI took these while working with some gurus in the #maildev IRC channel.  The files were taken with a loop during most of the time that my CPU was being throttled by Thunderbird.  It took a few seconds to stop the loop once utilization calmed down resulting in the last few files.  The loop follows:\n\nwhile [ 1 ]; do gstack 7542 > /tmp/tb/7542.`date +%s`; sleep 1; done", "time": "2011-09-06T22:30:48Z", "attachment_id": 558638, "creator": "dajoker@gmail.com", "author": "dajoker@gmail.com"}, {"creation_time": "2011-09-07T01:46:11Z", "raw_text": "Looking through the gstack output seven (of twenty-five) appear to come down through nsNNTPNewsgroupList::Initialize and eleven of them come through nsNNTPNewsgroupList::CleanUp though how helpful this is I am not sure.  Focusing on these (or close) functions would seem to be where an optimization could be added (if CleanUp could somehow realize nothing changed, then do not write anything assuming it is doing so currently).  Anyway, just noticing...", "time": "2011-09-07T01:46:11Z", "attachment_id": null, "text": "Looking through the gstack output seven (of twenty-five) appear to come down through nsNNTPNewsgroupList::Initialize and eleven of them come through nsNNTPNewsgroupList::CleanUp though how helpful this is I am not sure.  Focusing on these (or close) functions would seem to be where an optimization could be added (if CleanUp could somehow realize nothing changed, then do not write anything assuming it is doing so currently).  Anyway, just noticing...", "id": 5703759, "tags": [], "count": 3, "is_private": false, "bug_id": 664796, "author": "dajoker@gmail.com", "creator": "dajoker@gmail.com"}, {"author": "Pidgeot18@gmail.com", "creator": "Pidgeot18@gmail.com", "attachment_id": null, "time": "2011-09-07T02:14:34Z", "text": "::Initialize is opening up the database. Interestingly enough, ::CleanUp is causing the database to be indirectly reopened:\n#15 0x00007f9f3a204b79 in nsMsgDBService::OpenFolderDB(nsIMsgFolder*, int, nsIMsgDatabase**) () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#16 0x00007f9f3a2a9d57 in nsMsgNewsFolder::GetDatabase() () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#17 0x00007f9f3a2da333 in nsMsgDBFolder::CallFilterPlugins(nsIMsgWindow*, int*) () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#18 0x00007f9f3a2a8b8f in nsMsgNewsFolder::NotifyFinishedDownloadinghdrs() () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#19 0x00007f9f3a29e919 in nsNNTPNewsgroupList::CleanUp() () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n\nJudging from code, it looks like CallFilterPlugins grabs its database before it determines it needs to use it. Moving that block of code after the point at which it determines that the spam filters need to be run (which shouldn't be necessary for news barring uncommon circumstances) should cut out some of the blocks.\n\nCertainly, we can move the db initialization code from ::Initialize to ::GetRangeOfArtsToDownload, where it can be done solely on the condition that the number of articles to download is definitely non-zero. That does seem to be much harder though.", "raw_text": "::Initialize is opening up the database. Interestingly enough, ::CleanUp is causing the database to be indirectly reopened:\n#15 0x00007f9f3a204b79 in nsMsgDBService::OpenFolderDB(nsIMsgFolder*, int, nsIMsgDatabase**) () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#16 0x00007f9f3a2a9d57 in nsMsgNewsFolder::GetDatabase() () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#17 0x00007f9f3a2da333 in nsMsgDBFolder::CallFilterPlugins(nsIMsgWindow*, int*) () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#18 0x00007f9f3a2a8b8f in nsMsgNewsFolder::NotifyFinishedDownloadinghdrs() () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n#19 0x00007f9f3a29e919 in nsNNTPNewsgroupList::CleanUp() () from /home/aburgemeister/code/thunderbird/comm-release/mozilla/dist/bin/libxul.so\n\nJudging from code, it looks like CallFilterPlugins grabs its database before it determines it needs to use it. Moving that block of code after the point at which it determines that the spam filters need to be run (which shouldn't be necessary for news barring uncommon circumstances) should cut out some of the blocks.\n\nCertainly, we can move the db initialization code from ::Initialize to ::GetRangeOfArtsToDownload, where it can be done solely on the condition that the number of articles to download is definitely non-zero. That does seem to be much harder though.", "creation_time": "2011-09-07T02:14:34Z", "bug_id": 664796, "id": 5703787, "tags": [], "is_private": false, "count": 4}, {"creation_time": "2012-01-09T14:41:16Z", "raw_text": "If what I'm proposing is against any rules or anything, please let me know.\n\nI'd like this to get fixed so that Thunderbird is not wasting my time as often as it does.  It sounds like this is something that could help the product as a whole through some rework.  I am not talented enough to fix this, but if somebody could do it for me in a way that Mozilla will accept (not looking for a one-off just for me that I'll need to re-implement every time Thunderbird is updated) I'd be willing to compensate for time.  If there are any good \"bounty\" sites for this, please let me know.  Otherwise, the first person to get patch file(s) to me for this which are acceptable to the project maintainers will get $50 on release of the fixes with TB (too low?  justify it and we'll talk).  In doing this of course you'll need to follow the current TB license.", "text": "If what I'm proposing is against any rules or anything, please let me know.\n\nI'd like this to get fixed so that Thunderbird is not wasting my time as often as it does.  It sounds like this is something that could help the product as a whole through some rework.  I am not talented enough to fix this, but if somebody could do it for me in a way that Mozilla will accept (not looking for a one-off just for me that I'll need to re-implement every time Thunderbird is updated) I'd be willing to compensate for time.  If there are any good \"bounty\" sites for this, please let me know.  Otherwise, the first person to get patch file(s) to me for this which are acceptable to the project maintainers will get $50 on release of the fixes with TB (too low?  justify it and we'll talk).  In doing this of course you'll need to follow the current TB license.", "attachment_id": null, "time": "2012-01-09T14:41:16Z", "count": 5, "is_private": false, "tags": [], "id": 5965250, "bug_id": 664796, "creator": "dajoker@gmail.com", "author": "dajoker@gmail.com"}]}}}