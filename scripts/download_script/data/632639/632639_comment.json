{"comments": {}, "bugs": {"632639": {"comments": [{"author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org", "count": 0, "bug_id": 632639, "time": "2011-02-09T01:47:35Z", "creation_time": "2011-02-09T01:47:35Z", "text": "Created attachment 510871\nwip\n\nWe'd like to improve our setup process and first run experience, so we first need to measure how that process is working for our users (on an opt-in basis, of course). This bug is about adding that instrumentation.", "id": 5265102, "attachment_id": 510871, "raw_text": "We'd like to improve our setup process and first run experience, so we first need to measure how that process is working for our users (on an opt-in basis, of course). This bug is about adding that instrumentation.", "tags": [], "is_private": false}, {"creator": "mozilla@davidbienvenu.org", "author": "mozilla@davidbienvenu.org", "time": "2011-02-14T20:46:49Z", "bug_id": 632639, "count": 1, "id": 5277871, "attachment_id": 512235, "text": "Created attachment 512235\nwip v2\n\nthis adds some more notifications, and makes the helper app that registers as the default client synchronous, so that we can send the right notification.", "creation_time": "2011-02-14T20:46:49Z", "is_private": false, "tags": [], "raw_text": "this adds some more notifications, and makes the helper app that registers as the default client synchronous, so that we can send the right notification."}, {"creator": "mozilla@davidbienvenu.org", "author": "mozilla@davidbienvenu.org", "bug_id": 632639, "count": 2, "time": "2011-02-14T21:18:41Z", "creation_time": "2011-02-14T21:18:41Z", "attachment_id": null, "id": 5277978, "text": "With this patch, we track the following events, with timestamps:\n\n\"msgSent\" - user sent a message successfully\n\"setAsDefault\" - thunderbird set as the default mail client\n\"msgDownloaded\" - a message was added to a folder\n\"accountAdded\" - an account was added (meaning an incoming server was added)\n\"smtpServerAdded\" - an smtp server was added\n\nWe don't track failed attempts to send a message, though I can look at that.\n\nI've designed this to be all notification driven, so that we aren't sprinkling calls to the instrumentation module throughout the code. I've also tried to make it as unobtrusive as possible, by unregistering itself as a listener for the various notifications once it receives them, and not registering at all on startup if accounts already exist, or instrumentation has been turned off.\n\nI need to get a test http url so we can verify that the data is actually getting posted. And I need to think which parts of this we can test with mozmill. I think sancus signed up for helping with the former - I basically just need a url that I can http post to, and some verification that the data is getting through, for testing purposes.", "raw_text": "With this patch, we track the following events, with timestamps:\n\n\"msgSent\" - user sent a message successfully\n\"setAsDefault\" - thunderbird set as the default mail client\n\"msgDownloaded\" - a message was added to a folder\n\"accountAdded\" - an account was added (meaning an incoming server was added)\n\"smtpServerAdded\" - an smtp server was added\n\nWe don't track failed attempts to send a message, though I can look at that.\n\nI've designed this to be all notification driven, so that we aren't sprinkling calls to the instrumentation module throughout the code. I've also tried to make it as unobtrusive as possible, by unregistering itself as a listener for the various notifications once it receives them, and not registering at all on startup if accounts already exist, or instrumentation has been turned off.\n\nI need to get a test http url so we can verify that the data is actually getting posted. And I need to think which parts of this we can test with mozmill. I think sancus signed up for helping with the former - I basically just need a url that I can http post to, and some verification that the data is getting through, for testing purposes.", "is_private": false, "tags": []}, {"count": 3, "bug_id": 632639, "raw_text": "", "tags": [], "is_private": false, "time": "2011-02-15T16:58:45Z", "creation_time": "2011-02-15T16:58:45Z", "author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org", "text": "Created attachment 512502\nmake default client dialog close, call uninit method", "id": 5279962, "attachment_id": 512502}, {"author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org", "text": "Created attachment 515204\nproposed fix for feedback\n\nI haven't gotten a test server to try this with yet, but everything else is basically working, so I'd like to get feedback in preparation for getting reviews. Sid, I was hoping to get feedback on the nsMailWinIntegration.cpp change that we talked about (or even an r+), and Blake, I was hoping to get your feedback on everything else, so we can get at least some of this landed soon. You'll need the patch in Bug 634907 in order to get the mozmill test to run.", "id": 5305194, "attachment_id": 515204, "creation_time": "2011-02-25T22:48:48Z", "tags": [], "is_private": false, "time": "2011-02-25T22:48:48Z", "count": 4, "bug_id": 632639, "raw_text": "I haven't gotten a test server to try this with yet, but everything else is basically working, so I'd like to get feedback in preparation for getting reviews. Sid, I was hoping to get feedback on the nsMailWinIntegration.cpp change that we talked about (or even an r+), and Blake, I was hoping to get your feedback on everything else, so we can get at least some of this landed soon. You'll need the patch in Bug 634907 in order to get the mozmill test to run."}, {"creation_time": "2011-02-26T01:00:30Z", "author": "bwinton@latte.ca", "attachment_id": null, "id": 5305568, "text": "(In reply to comment #2)\n> I need to get a test http url so we can verify that the data is actually\n> getting posted. And I need to think which parts of this we can test with\n> mozmill. I think sancus signed up for helping with the former - I basically\n> just need a url that I can http post to, and some verification that the data is\n> getting through, for testing purposes.\n\nIf you can send the data as a GET instead of a POST, then it gets way easier to set up.  (See bug 629270 for details\u2026)", "creator": "bwinton@latte.ca", "count": 5, "raw_text": "(In reply to comment #2)\n> I need to get a test http url so we can verify that the data is actually\n> getting posted. And I need to think which parts of this we can test with\n> mozmill. I think sancus signed up for helping with the former - I basically\n> just need a url that I can http post to, and some verification that the data is\n> getting through, for testing purposes.\n\nIf you can send the data as a GET instead of a POST, then it gets way easier to set up.  (See bug 629270 for details\u2026)", "bug_id": 632639, "is_private": false, "tags": [], "time": "2011-02-26T01:00:30Z"}, {"time": "2011-02-26T01:09:17Z", "bug_id": 632639, "count": 6, "creator": "mozilla@davidbienvenu.org", "author": "mozilla@davidbienvenu.org", "tags": [], "is_private": false, "raw_text": "(In reply to comment #5)\n\n> If you can send the data as a GET instead of a POST, then it gets way easier to\n> set up.  (See bug 629270 for details\u2026)\n\nThx, can I do that with a json blob? If it's just a string, I would think so...", "text": "(In reply to comment #5)\n\n> If you can send the data as a GET instead of a POST, then it gets way easier to\n> set up.  (See bug 629270 for details\u2026)\n\nThx, can I do that with a json blob? If it's just a string, I would think so...", "id": 5305589, "attachment_id": null, "creation_time": "2011-02-26T01:09:17Z"}, {"raw_text": "I'll take care of this on Monday, it's really straightforward just between being/sick off it kinda got lost in the shuffle, sorry. You can use POST, I'll just write the JSON blobs to a file much like I do with the account provisioning logs.", "tags": [], "is_private": false, "creation_time": "2011-02-26T01:34:12Z", "text": "I'll take care of this on Monday, it's really straightforward just between being/sick off it kinda got lost in the shuffle, sorry. You can use POST, I'll just write the JSON blobs to a file much like I do with the account provisioning logs.", "attachment_id": null, "id": 5305622, "bug_id": 632639, "count": 7, "time": "2011-02-26T01:34:12Z", "creator": "sancus@pobox.com", "author": "sancus@pobox.com"}, {"raw_text": "It would be interesting to see how often people couldn't send email, instead of just the successfully sent times.\n\nIt looks like you forgot to add the tests themselves.  ;)\n\nFor mailInstrumentation.js:\n  The line:\n    if (aTopic == \"mail:composeSendSucceeded\") \n  has a trailing space.\n\n  nsIMFListener isn't used.\n\n  You could probably inline mFNSContractID.  Or not.  Either way is fine.  :)\n\n  _currentStateString seems more like \"_lastStateString\" from the comment above it.\n\n  There are some dump statements that should probably be removed or turned into log statements.\n\n  Why do you remove yourself as a listener in the _accountsChanged method?  Is it that we're only interested in the first account being added, and don't care how many accounts people add?\n\n  I guess we also remove ourselves as GFM listeners in the msgAdded method.  Is that for the same reason?  We're only concerned with the first message sent successfully?\n\n  Of course, if those two are correct to remove themselves, then should we also remove ourselves in _smtpServerAdded?\n\n  For _postStateObject would it make sense to post an empty object, instead of logging an exception, if the account wasn't set up?  And I believe you've already implemented \"// But what if userOptedIn has changed? Pref change listener?\", so we can remove the comment\u2026\n\n  I see calls to:\n    mailInstrumentationManager.addEvent(\"msgSent\", true);\n    mailInstrumentationManager.addEvent(\"setAsDefault\", true);\n    mailInstrumentationManager.addEvent(\"msgDownloaded\", true);\n  But I also see calls to:\n    mailInstrumentationManager.addEvent(\"accountAdded\", \"true\");\n    mailInstrumentationManager.addEvent(\"smtpServerAdded\", \"true\");\n  I would be happy with strings or booleans in both cases, but we should probably be consistent.\n\n  The function definitions for observe, _loadState, _postStateObject, _createStateObject, init, and uninit should probably have their {s moved to the same line.\n\n  You don't seem to be using _initialized.\n\n  Should you remove the prefs observers in uninit?\n\n  And finally, we're only adding the first event of any given type?  (I think that's correct, but wanted to double-check.)\n\n\nTo sum up, there are some minor things, and I'm not sure whether we want the instrumentation to only log the first event or all the events, but assuming we only want the first event, this seems like a good direction to go.  Oh, and I haven't seen the tests.  :)\n\nLater,\nBlake.", "bug_id": 632639, "count": 8, "time": "2011-03-03T17:23:06Z", "is_private": false, "tags": [], "creation_time": "2011-03-03T17:23:06Z", "id": 5318945, "attachment_id": 515204, "creator": "bwinton@latte.ca", "text": "Comment on attachment 515204\nproposed fix for feedback\n\nIt would be interesting to see how often people couldn't send email, instead of just the successfully sent times.\n\nIt looks like you forgot to add the tests themselves.  ;)\n\nFor mailInstrumentation.js:\n  The line:\n    if (aTopic == \"mail:composeSendSucceeded\") \n  has a trailing space.\n\n  nsIMFListener isn't used.\n\n  You could probably inline mFNSContractID.  Or not.  Either way is fine.  :)\n\n  _currentStateString seems more like \"_lastStateString\" from the comment above it.\n\n  There are some dump statements that should probably be removed or turned into log statements.\n\n  Why do you remove yourself as a listener in the _accountsChanged method?  Is it that we're only interested in the first account being added, and don't care how many accounts people add?\n\n  I guess we also remove ourselves as GFM listeners in the msgAdded method.  Is that for the same reason?  We're only concerned with the first message sent successfully?\n\n  Of course, if those two are correct to remove themselves, then should we also remove ourselves in _smtpServerAdded?\n\n  For _postStateObject would it make sense to post an empty object, instead of logging an exception, if the account wasn't set up?  And I believe you've already implemented \"// But what if userOptedIn has changed? Pref change listener?\", so we can remove the comment\u2026\n\n  I see calls to:\n    mailInstrumentationManager.addEvent(\"msgSent\", true);\n    mailInstrumentationManager.addEvent(\"setAsDefault\", true);\n    mailInstrumentationManager.addEvent(\"msgDownloaded\", true);\n  But I also see calls to:\n    mailInstrumentationManager.addEvent(\"accountAdded\", \"true\");\n    mailInstrumentationManager.addEvent(\"smtpServerAdded\", \"true\");\n  I would be happy with strings or booleans in both cases, but we should probably be consistent.\n\n  The function definitions for observe, _loadState, _postStateObject, _createStateObject, init, and uninit should probably have their {s moved to the same line.\n\n  You don't seem to be using _initialized.\n\n  Should you remove the prefs observers in uninit?\n\n  And finally, we're only adding the first event of any given type?  (I think that's correct, but wanted to double-check.)\n\n\nTo sum up, there are some minor things, and I'm not sure whether we want the instrumentation to only log the first event or all the events, but assuming we only want the first event, this seems like a good direction to go.  Oh, and I haven't seen the tests.  :)\n\nLater,\nBlake.", "author": "bwinton@latte.ca"}, {"time": "2011-03-03T23:23:52Z", "bug_id": 632639, "count": 9, "creator": "mozilla@davidbienvenu.org", "author": "mozilla@davidbienvenu.org", "tags": [], "is_private": false, "raw_text": "thx for the feedback. Yes, I'm only interested in the first event of any given type, and for events that might be frequent, like msgAdded, it's a big performance win to remove ourselves as listeners for the events. For other events, it's no big deal.", "text": "thx for the feedback. Yes, I'm only interested in the first event of any given type, and for events that might be frequent, like msgAdded, it's a big performance win to remove ourselves as listeners for the events. For other events, it's no big deal.", "id": 5320228, "attachment_id": null, "creation_time": "2011-03-03T23:23:52Z"}, {"author": "rain@sunshowers.io", "creator": "rain@sunshowers.io", "count": 10, "bug_id": 632639, "time": "2011-03-04T11:52:58Z", "creation_time": "2011-03-04T11:52:58Z", "text": "Comment on attachment 515204\nproposed fix for feedback\n\n>+  executeInfo.cbSize = sizeof(SHELLEXECUTEINFOW);\n>+  executeInfo.hwnd = hWnd;\n>+  executeInfo.fMask = SEE_MASK_NOCLOSEPROCESS;\n>+  executeInfo.lpDirectory = NULL;\n>+  executeInfo.lpFile = appHelperPath.get();\n>+  executeInfo.lpParameters = params.get();\n>+  executeInfo.nShow = SW_SHOWNORMAL;\n> \n>-  CloseHandle(pi.hProcess);\n>-  CloseHandle(pi.hThread);\n>+  DWORD dwRet;\n> \n>+  if (ShellExecuteExW(&executeInfo))\n>+  {\n>+    // We want to block until the program exits\n>+    DWORD dwSignaled = WaitForSingleObject(executeInfo.hProcess, INFINITE);\n\nNote that this will be synchronous iff the non-elevated helper.exe stays alive while the elevated helper.exe does its work. Have you tested to make sure that's the case?\n\n>+    if (dwSignaled == WAIT_OBJECT_0)\n>+      if (!GetExitCodeProcess(executeInfo.hProcess, &dwRet))\n>+        dwRet = GetLastError();\n>+  }\n>+  else\n>+    return NS_ERROR_ABORT;\n>+\n>+  // We're going to ignore errors here since there's nothing we can do about\n>+  // them, and helper.exe seems to return non-zero ret on success.\n\nIf you don't actually use the error, it's probably best to get rid of dwRet and the GetExitCodeProcess call.", "id": 5321311, "attachment_id": 515204, "raw_text": ">+  executeInfo.cbSize = sizeof(SHELLEXECUTEINFOW);\n>+  executeInfo.hwnd = hWnd;\n>+  executeInfo.fMask = SEE_MASK_NOCLOSEPROCESS;\n>+  executeInfo.lpDirectory = NULL;\n>+  executeInfo.lpFile = appHelperPath.get();\n>+  executeInfo.lpParameters = params.get();\n>+  executeInfo.nShow = SW_SHOWNORMAL;\n> \n>-  CloseHandle(pi.hProcess);\n>-  CloseHandle(pi.hThread);\n>+  DWORD dwRet;\n> \n>+  if (ShellExecuteExW(&executeInfo))\n>+  {\n>+    // We want to block until the program exits\n>+    DWORD dwSignaled = WaitForSingleObject(executeInfo.hProcess, INFINITE);\n\nNote that this will be synchronous iff the non-elevated helper.exe stays alive while the elevated helper.exe does its work. Have you tested to make sure that's the case?\n\n>+    if (dwSignaled == WAIT_OBJECT_0)\n>+      if (!GetExitCodeProcess(executeInfo.hProcess, &dwRet))\n>+        dwRet = GetLastError();\n>+  }\n>+  else\n>+    return NS_ERROR_ABORT;\n>+\n>+  // We're going to ignore errors here since there's nothing we can do about\n>+  // them, and helper.exe seems to return non-zero ret on success.\n\nIf you don't actually use the error, it's probably best to get rid of dwRet and the GetExitCodeProcess call.", "tags": [], "is_private": false}, {"time": "2011-03-05T10:04:44Z", "bug_id": 632639, "count": 11, "creator": "mozilla@davidbienvenu.org", "author": "mozilla@davidbienvenu.org", "tags": [], "is_private": false, "raw_text": "(In reply to comment #10)\n> \n> Note that this will be synchronous iff the non-elevated helper.exe stays alive\n> while the elevated helper.exe does its work. Have you tested to make sure\n> that's the case?\n\nI've tested that we're set as the default client immediately after the dialog comes down, no matter how long I wait with the elevated helper app up, so I believe that's the case.\n> \n> \n> If you don't actually use the error, it's probably best to get rid of dwRet and\n> the GetExitCodeProcess call.\n\nOK - it bothered me a little that I wasn't getting a success code back even though it worked fine, but there's nothing I can do with an error anyway.", "text": "(In reply to comment #10)\n> \n> Note that this will be synchronous iff the non-elevated helper.exe stays alive\n> while the elevated helper.exe does its work. Have you tested to make sure\n> that's the case?\n\nI've tested that we're set as the default client immediately after the dialog comes down, no matter how long I wait with the elevated helper app up, so I believe that's the case.\n> \n> \n> If you don't actually use the error, it's probably best to get rid of dwRet and\n> the GetExitCodeProcess call.\n\nOK - it bothered me a little that I wasn't getting a success code back even though it worked fine, but there's nothing I can do with an error anyway.", "id": 5323802, "attachment_id": null, "creation_time": "2011-03-05T10:04:44Z"}, {"count": 12, "bug_id": 632639, "time": "2011-03-11T20:25:32Z", "author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org", "raw_text": "addressed feedback comments", "tags": [], "is_private": false, "creation_time": "2011-03-11T20:25:32Z", "text": "Created attachment 518788\nmake default client dialog sync - checked in\n\naddressed feedback comments", "id": 5339813, "attachment_id": 518788}, {"count": 13, "bug_id": 632639, "raw_text": ">+  // We need an hWnd to cause UAC to pop up immediately\n>+  // If GetForegroundWindow returns NULL, then the UAC prompt will still appear,\n>+  // but minimized.\n>+  HWND hWnd = GetForegroundWindow();\n>\n\nI think this isn't required because helper.exe causes the UAC prompt, not us, but I'm not sure. r+ if you try removing this bit (setting hWnd below to null) and seeing if the UAC prompt still shows up in the foreground.", "tags": [], "is_private": false, "time": "2011-03-11T20:33:40Z", "creation_time": "2011-03-11T20:33:40Z", "author": "rain@sunshowers.io", "text": "Comment on attachment 518788\nmake default client dialog sync - checked in\n\n>+  // We need an hWnd to cause UAC to pop up immediately\n>+  // If GetForegroundWindow returns NULL, then the UAC prompt will still appear,\n>+  // but minimized.\n>+  HWND hWnd = GetForegroundWindow();\n>\n\nI think this isn't required because helper.exe causes the UAC prompt, not us, but I'm not sure. r+ if you try removing this bit (setting hWnd below to null) and seeing if the UAC prompt still shows up in the foreground.", "creator": "rain@sunshowers.io", "id": 5339839, "attachment_id": 518788}, {"text": "Created attachment 518802\naddresses Blake's comments - checked in\n\nThis addresses most of Blake's comments, except that I left one dump statement in there, because I want to leave it until I've tested the http stuff (and until Bryan has hooked up the opt-in UI), and I left the exception on no account setup in, because if there's no account, I can't post anything useful to the server, since we're going to use a hash of the e-mail address to identify the posts. Perhaps Dave will see some benefit in tracking users who opt-in but don't setup an account, but I want to see the opt-in UI first...", "attachment_id": 518802, "id": 5339948, "creation_time": "2011-03-11T21:18:13Z", "tags": [], "is_private": false, "raw_text": "This addresses most of Blake's comments, except that I left one dump statement in there, because I want to leave it until I've tested the http stuff (and until Bryan has hooked up the opt-in UI), and I left the exception on no account setup in, because if there's no account, I can't post anything useful to the server, since we're going to use a hash of the e-mail address to identify the posts. Perhaps Dave will see some benefit in tracking users who opt-in but don't setup an account, but I want to see the opt-in UI first...", "author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org", "time": "2011-03-11T21:18:13Z", "count": 14, "bug_id": 632639}, {"raw_text": "oh, the diff claims that wrapper.py has a ^M line ending, but I don't think it does.", "tags": [], "is_private": false, "creation_time": "2011-03-11T21:21:22Z", "text": "oh, the diff claims that wrapper.py has a ^M line ending, but I don't think it does.", "attachment_id": null, "id": 5339955, "count": 15, "bug_id": 632639, "time": "2011-03-11T21:21:22Z", "author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org"}, {"text": "Comment on attachment 518788\nmake default client dialog sync - checked in\n\nyou were right that the foreground hwnd stuff wasn't needed so I removed that.", "id": 5340012, "attachment_id": 518788, "creation_time": "2011-03-11T21:39:02Z", "tags": [], "is_private": false, "raw_text": "you were right that the foreground hwnd stuff wasn't needed so I removed that.", "creator": "mozilla@davidbienvenu.org", "author": "mozilla@davidbienvenu.org", "time": "2011-03-11T21:39:02Z", "bug_id": 632639, "count": 16}, {"time": "2011-03-11T21:39:23Z", "bug_id": 632639, "count": 17, "creator": "bwinton@latte.ca", "author": "bwinton@latte.ca", "tags": [], "is_private": false, "raw_text": "Remove the second dump statement <dump(\"after wait for autoconfig\");>, and I'm happy with it.\n\n(Note: I haven't run the tests, so you should also make sure they work on all the platforms before committing, but I trust you to do that.)\n\nLater,\nBlake.", "text": "Comment on attachment 518802\naddresses Blake's comments - checked in\n\nRemove the second dump statement <dump(\"after wait for autoconfig\");>, and I'm happy with it.\n\n(Note: I haven't run the tests, so you should also make sure they work on all the platforms before committing, but I trust you to do that.)\n\nLater,\nBlake.", "id": 5340013, "attachment_id": 518802, "creation_time": "2011-03-11T21:39:23Z"}, {"creation_time": "2011-03-12T13:33:21Z", "text": "initial support has been checked in, preffed off. Bryan, do you have a bug for doing the opt-in UI? Sancus, do you have a bug for the test server?", "attachment_id": null, "id": 5341074, "raw_text": "initial support has been checked in, preffed off. Bryan, do you have a bug for doing the opt-in UI? Sancus, do you have a bug for the test server?", "tags": [], "is_private": false, "author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org", "count": 18, "bug_id": 632639, "time": "2011-03-12T13:33:21Z"}, {"is_private": false, "tags": [], "raw_text": "marking in test-suite+, because the things that are testable are tested (mozmill can't do a message send, or set TB as the default app).", "attachment_id": null, "id": 5341075, "text": "marking in test-suite+, because the things that are testable are tested (mozmill can't do a message send, or set TB as the default app).", "creation_time": "2011-03-12T13:34:17Z", "time": "2011-03-12T13:34:17Z", "bug_id": 632639, "count": 19, "creator": "mozilla@davidbienvenu.org", "author": "mozilla@davidbienvenu.org"}, {"id": 5341454, "attachment_id": null, "creator": "sancus@pobox.com", "text": "You can post json to:\nhttp://momodev.org/tbreceive\n\nAnd see the results at:\nhttp://www.momodev.org/tb_data.json\n\nAnything you post will be added to the array verbatim, so you'll want to post, say, {\"data\":\"HereIsSomeData\"}. It just adds the whole body of the POST request as one element to the array, no parameters are necessary.", "author": "sancus@pobox.com", "creation_time": "2011-03-12T23:42:55Z", "time": "2011-03-12T23:42:55Z", "is_private": false, "tags": [], "raw_text": "You can post json to:\nhttp://momodev.org/tbreceive\n\nAnd see the results at:\nhttp://www.momodev.org/tb_data.json\n\nAnything you post will be added to the array verbatim, so you'll want to post, say, {\"data\":\"HereIsSomeData\"}. It just adds the whole body of the POST request as one element to the array, no parameters are necessary.", "bug_id": 632639, "count": 20}, {"text": "(In reply to comment #18)\n> initial support has been checked in, preffed off. Bryan, do you have a bug for\n> doing the opt-in UI? Sancus, do you have a bug for the test server?\n\nCreated bug 641935 for tracking the UI needed to get people to opt-in to this work.", "attachment_id": null, "id": 5346581, "creation_time": "2011-03-15T20:16:23Z", "tags": [], "is_private": false, "raw_text": "(In reply to comment #18)\n> initial support has been checked in, preffed off. Bryan, do you have a bug for\n> doing the opt-in UI? Sancus, do you have a bug for the test server?\n\nCreated bug 641935 for tracking the UI needed to get people to opt-in to this work.", "creator": "clarkbw@mozilla.com", "author": "clarkbw@mozilla.com", "time": "2011-03-15T20:16:23Z", "bug_id": 632639, "count": 21}, {"count": 22, "bug_id": 632639, "time": "2011-08-03T00:18:11Z", "author": "mozilla@davidbienvenu.org", "creator": "mozilla@davidbienvenu.org", "raw_text": "Andrei, would we still use http://momodev.org/tbreceive post moco-assimilation? I'm hoping to sneak the instrumentation in along with the test-pilot work.", "is_private": false, "tags": [], "creation_time": "2011-08-03T00:18:11Z", "attachment_id": null, "id": 5629298, "text": "Andrei, would we still use http://momodev.org/tbreceive post moco-assimilation? I'm hoping to sneak the instrumentation in along with the test-pilot work."}, {"author": "ludovic@hirlimann.net", "creator": "ludovic@hirlimann.net", "time": "2011-10-06T08:18:10Z", "count": 23, "bug_id": 632639, "id": 5762758, "attachment_id": null, "text": "What's the status here ?", "creation_time": "2011-10-06T08:18:10Z", "is_private": false, "tags": [], "raw_text": "What's the status here ?"}, {"text": "We're still waiting on the opt-in ui, or a decision that the test-pilot opt-in ui is sufficient. We probably need to fix up the url we deliver the info to by changing a pref, and I think there's a change that needs to be made because of some core changes to the way we handle http request responses. See Bug 687332", "creator": "mozilla@davidbienvenu.org", "id": 5763217, "attachment_id": null, "author": "mozilla@davidbienvenu.org", "creation_time": "2011-10-06T14:01:49Z", "time": "2011-10-06T14:01:49Z", "tags": [], "is_private": false, "bug_id": 632639, "raw_text": "We're still waiting on the opt-in ui, or a decision that the test-pilot opt-in ui is sufficient. We probably need to fix up the url we deliver the info to by changing a pref, and I think there's a change that needs to be made because of some core changes to the way we handle http request responses. See Bug 687332", "count": 24}, {"author": "vseerror@lehigh.edu", "creator": "vseerror@lehigh.edu", "count": 25, "bug_id": 632639, "time": "2014-03-11T16:31:33Z", "creation_time": "2014-03-11T16:31:33Z", "text": "(In reply to David :Bienvenu from comment #24)\n> We're still waiting on the opt-in ui, or a decision that the test-pilot\n> opt-in ui is sufficient. We probably need to fix up the url we deliver the\n> info to by changing a pref, \n\nTP addon has been removed. Does that change the game.\n\n> I think there's a change that needs to be\n> made because of some core changes to the way we handle http request\n> responses. See Bug 687332\n\nbug was fixed 2012-08-31", "id": 8518853, "attachment_id": null, "raw_text": "(In reply to David :Bienvenu from comment #24)\n> We're still waiting on the opt-in ui, or a decision that the test-pilot\n> opt-in ui is sufficient. We probably need to fix up the url we deliver the\n> info to by changing a pref, \n\nTP addon has been removed. Does that change the game.\n\n> I think there's a change that needs to be\n> made because of some core changes to the way we handle http request\n> responses. See Bug 687332\n\nbug was fixed 2012-08-31", "tags": [], "is_private": false}, {"count": 26, "bug_id": 632639, "raw_text": "This has also landed:\nhttp://hg.mozilla.org/comm-central/rev/478ab6a5e8d5", "tags": [], "is_private": false, "time": "2016-04-03T15:23:15Z", "creation_time": "2016-04-03T15:23:15Z", "author": "acelists@atlas.sk", "text": "Comment on attachment 518802\naddresses Blake's comments - checked in\n\nThis has also landed:\nhttp://hg.mozilla.org/comm-central/rev/478ab6a5e8d5", "creator": "acelists@atlas.sk", "id": 11297052, "attachment_id": 518802}]}}}