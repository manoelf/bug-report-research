{"bugs": {"707237": {"comments": [{"id": 5888816, "bug_id": 707237, "creation_time": "2011-12-02T19:05:37Z", "is_private": false, "creator": "jorendorff@mozilla.com", "count": 0, "text": "ttaubert stumbled into this. It took a while to debug it.\n\nThe first time jsdebugger.jsm is loaded, it creates the Debugger constructor in whatever compartment it's in. From then on, all Debuggers created using that constructor are created in the same compartment.\n\nSo if you run jsdebugger.jsm in the chrome compartment, all your Debuggers will be in the chrome compartment.\n\nBut suppose you want to debug chrome. You might create a new sandbox and run\n   Components.utils.import(\"resource://gre/modules/jsdebugger.jsm\");\nin the sandbox. Unfortunately that will not help, because it reuses the existing module, already loaded, and you get a transparent wrapper of the Debugger constructor rather than a fresh Debugger constructor. This means that even though it will look like you're creating a new Debugger in the sandbox, the Debugger will actually be in the main chrome compartment and therefore unable to debug chrome.", "author": "jorendorff@mozilla.com", "tags": [], "time": "2011-12-02T19:05:37Z", "raw_text": "ttaubert stumbled into this. It took a while to debug it.\n\nThe first time jsdebugger.jsm is loaded, it creates the Debugger constructor in whatever compartment it's in. From then on, all Debuggers created using that constructor are created in the same compartment.\n\nSo if you run jsdebugger.jsm in the chrome compartment, all your Debuggers will be in the chrome compartment.\n\nBut suppose you want to debug chrome. You might create a new sandbox and run\n   Components.utils.import(\"resource://gre/modules/jsdebugger.jsm\");\nin the sandbox. Unfortunately that will not help, because it reuses the existing module, already loaded, and you get a transparent wrapper of the Debugger constructor rather than a fresh Debugger constructor. This means that even though it will look like you're creating a new Debugger in the sandbox, the Debugger will actually be in the main chrome compartment and therefore unable to debug chrome.", "attachment_id": null}, {"tags": [], "time": "2011-12-03T14:26:17Z", "attachment_id": null, "raw_text": "Is this solely an artifact of how JSMs work?\n\nIn other words, could one work around this by using IJSDebugger directly?", "id": 5890591, "bug_id": 707237, "creation_time": "2011-12-03T14:26:17Z", "is_private": false, "creator": "khuey@kylehuey.com", "author": "khuey@kylehuey.com", "text": "Is this solely an artifact of how JSMs work?\n\nIn other words, could one work around this by using IJSDebugger directly?", "count": 1}, {"count": 2, "text": "(In reply to Kyle Huey [:khuey] (khuey@mozilla.com) from comment #1)\n> Is this solely an artifact of how JSMs work?\n\nYes.\n\n> In other words, could one work around this by using IJSDebugger directly?\n\nYes. The workaround is to take the code from jsdebugger.jsm (it's just 2 lines) and paste it right into your code that wants to use Debugger.", "author": "jorendorff@mozilla.com", "creator": "jorendorff@mozilla.com", "creation_time": "2011-12-06T16:55:46Z", "is_private": false, "bug_id": 707237, "id": 5894737, "raw_text": "(In reply to Kyle Huey [:khuey] (khuey@mozilla.com) from comment #1)\n> Is this solely an artifact of how JSMs work?\n\nYes.\n\n> In other words, could one work around this by using IJSDebugger directly?\n\nYes. The workaround is to take the code from jsdebugger.jsm (it's just 2 lines) and paste it right into your code that wants to use Debugger.", "attachment_id": null, "time": "2011-12-06T16:55:46Z", "tags": []}, {"is_private": false, "creation_time": "2011-12-12T10:21:46Z", "creator": "pastith@gmail.com", "tags": [], "attachment_id": null, "bug_id": 707237, "id": 5908187, "count": 3, "text": "Since the remote debugging protocol server loads jsdebugger.jsm in a sandbox, would it be correct to assume that if the sole user of jsdebugger.jsm was the remote protocol server, debugging chrome would work? Also, in that light, is bug 703718 something that we should do or not?", "author": "pastith@gmail.com", "raw_text": "Since the remote debugging protocol server loads jsdebugger.jsm in a sandbox, would it be correct to assume that if the sole user of jsdebugger.jsm was the remote protocol server, debugging chrome would work? Also, in that light, is bug 703718 something that we should do or not?", "time": "2011-12-12T10:21:46Z"}, {"time": "2011-12-13T16:40:02Z", "raw_text": "(In reply to Panos Astithas [:past] from comment #3)\n> Since the remote debugging protocol server loads jsdebugger.jsm in a\n> sandbox, would it be correct to assume that if the sole user of\n> jsdebugger.jsm was the remote protocol server, debugging chrome would work?\n\nNo, the jsm would still create its own global which is in the chrome compartment.", "id": 5912315, "bug_id": 707237, "author": "dave.camp@gmail.com", "text": "(In reply to Panos Astithas [:past] from comment #3)\n> Since the remote debugging protocol server loads jsdebugger.jsm in a\n> sandbox, would it be correct to assume that if the sole user of\n> jsdebugger.jsm was the remote protocol server, debugging chrome would work?\n\nNo, the jsm would still create its own global which is in the chrome compartment.", "count": 4, "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-12-13T16:40:02Z", "creator": "dave.camp@gmail.com"}]}}, "comments": {}}