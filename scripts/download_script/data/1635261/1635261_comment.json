{"bugs": {"1635261": {"comments": [{"author": "tihuang@mozilla.com", "id": 14796578, "raw_text": "The AntiTrackingUtils::HasStoragePermissionInParent() would returns a wrong value in Fission. \n\nThe reason is that we get the topLevelStorageAreaPrincipal from the channel. But, it is incorrect in Fission. To Fix this, we will not use the topLevelStorageAreaPrincipal, but to use the browsingContext and windowGlobalParent to get the principal we need since we are in the parent process when calling this function.", "text": "The AntiTrackingUtils::HasStoragePermissionInParent() would returns a wrong value in Fission. \n\nThe reason is that we get the topLevelStorageAreaPrincipal from the channel. But, it is incorrect in Fission. To Fix this, we will not use the topLevelStorageAreaPrincipal, but to use the browsingContext and windowGlobalParent to get the principal we need since we are in the parent process when calling this function.", "is_private": false, "attachment_id": null, "bug_id": 1635261, "creator": "tihuang@mozilla.com", "creation_time": "2020-05-04T20:54:26Z", "time": "2020-05-04T20:54:26Z", "count": 0, "tags": []}, {"creator": "tihuang@mozilla.com", "creation_time": "2020-05-07T14:13:38Z", "time": "2020-05-07T14:13:38Z", "count": 1, "tags": [], "id": 14802570, "author": "tihuang@mozilla.com", "raw_text": "\nWe used to use the topLevelStorageAreaPrincipal and topLevelPrincipal to\nget the principal we need to do the storage permission checks in\nAntiTrackingUtils::HasStoragePermissionInParent(). But, they don't work\nin Fission. Also, we use these two principals to implicitly check if the\nchannel is top-level. This won't work as well.\n\nSo, we change to use the browsingContext to do the top-level check as\nwell as getting the top-level principal.", "text": "Created attachment 9146466\nBug 1635261 - Modify the way how we get the top-level principal in AntiTrackingUtils::HasStoragePermissionInParent(). r?dimi\n\n\nWe used to use the topLevelStorageAreaPrincipal and topLevelPrincipal to\nget the principal we need to do the storage permission checks in\nAntiTrackingUtils::HasStoragePermissionInParent(). But, they don't work\nin Fission. Also, we use these two principals to implicitly check if the\nchannel is top-level. This won't work as well.\n\nSo, we change to use the browsingContext to do the top-level check as\nwell as getting the top-level principal.", "is_private": false, "attachment_id": 9146466, "bug_id": 1635261}, {"creator": "cpeterson@mozilla.com", "creation_time": "2020-05-07T17:03:42Z", "time": "2020-05-07T17:03:42Z", "count": 2, "tags": [], "id": 14802940, "author": "cpeterson@mozilla.com", "text": "Tracking for Fission Nightly milestone (M6a) since this is work in progress.", "raw_text": "Tracking for Fission Nightly milestone (M6a) since this is work in progress.", "is_private": false, "attachment_id": null, "bug_id": 1635261}, {"bug_id": 1635261, "count": 3, "tags": [], "time": "2020-05-13T13:37:36Z", "attachment_id": null, "raw_text": "Pushed by tihuang@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/05ac80df0e76\nModify the way how we get the top-level principal in AntiTrackingUtils::HasStoragePermissionInParent(). r=dimi,baku", "text": "Pushed by tihuang@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/05ac80df0e76\nModify the way how we get the top-level principal in AntiTrackingUtils::HasStoragePermissionInParent(). r=dimi,baku", "is_private": false, "creator": "pulsebot@bots.tld", "creation_time": "2020-05-13T13:37:36Z", "id": 14816685, "author": "pulsebot@bots.tld"}, {"bug_id": 1635261, "attachment_id": null, "raw_text": "https://hg.mozilla.org/mozilla-central/rev/05ac80df0e76", "text": "https://hg.mozilla.org/mozilla-central/rev/05ac80df0e76", "is_private": false, "id": 14817930, "author": "cbrindusan@mozilla.com", "count": 4, "tags": ["bugherder"], "time": "2020-05-13T21:49:43Z", "creator": "cbrindusan@mozilla.com", "creation_time": "2020-05-13T21:49:43Z"}]}}, "comments": {}}