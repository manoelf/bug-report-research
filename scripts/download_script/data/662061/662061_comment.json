{"bugs": {"662061": {"comments": [{"creator": "mail+community+mozilla@zealvurte.co.uk", "author": "mail+community+mozilla@zealvurte.co.uk", "text": "User-Agent:       Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.71 Safari/534.24\nBuild Identifier: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nLayout.css.dpi is no longer supported and does not affect the layout, but it continues to change the reported resolution value for media queries, which results in a value out of sync with the layout.\n\nLayout.css.devPixelsPerPx changes the value of device-pixel-ratio only (Not part of CSS 3 itself, and really not required to be.), but doesn't change the resolution value. The spec does not state as to what context the units for the resolution are in, but because both zooming and layout.css.dpi changes the value as would be expected and is of practical use, that the viewport dimensions changes accordingly, and in terms of CSS units the DPI has actually changed, so it would then be expected for it to change using this setting too; therefore, it is a bug.\n\nZooming without changing layout.css.dpi or layout.css.devPixelsPerPx keeps all values changing as expected.\n\nReproducible: Always\n\nSteps to Reproduce:\nA-1. Change layout.css.dpi to 72.\nA-2. Check resolution and device-pixel-ratio values.\n\nB-1. Change layout.css.devPixelsPerPx to 0.75.\nB-2. Check resolution and device-pixel-ratio values.\n\nC-1. Change layout.css.dpi to 72.\nC-2. Zoom in 5 times.\nC-3. Check resolution and device-pixel-ratio values.\n\nActual Results:  \nA: 72 PPI, 1.0.\nB: 72 PPI, 0.75.\nC: 101 to 120 PPI, 1.5.\n\nExpected Results:  \nA: 96 PPI, 1.0.\nB: 72 PPI, 0.75.\nC: 141 to 160 PPI, 1.5.", "time": "2011-06-04T16:47:08Z", "attachment_id": null, "raw_text": "User-Agent:       Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.71 Safari/534.24\nBuild Identifier: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nLayout.css.dpi is no longer supported and does not affect the layout, but it continues to change the reported resolution value for media queries, which results in a value out of sync with the layout.\n\nLayout.css.devPixelsPerPx changes the value of device-pixel-ratio only (Not part of CSS 3 itself, and really not required to be.), but doesn't change the resolution value. The spec does not state as to what context the units for the resolution are in, but because both zooming and layout.css.dpi changes the value as would be expected and is of practical use, that the viewport dimensions changes accordingly, and in terms of CSS units the DPI has actually changed, so it would then be expected for it to change using this setting too; therefore, it is a bug.\n\nZooming without changing layout.css.dpi or layout.css.devPixelsPerPx keeps all values changing as expected.\n\nReproducible: Always\n\nSteps to Reproduce:\nA-1. Change layout.css.dpi to 72.\nA-2. Check resolution and device-pixel-ratio values.\n\nB-1. Change layout.css.devPixelsPerPx to 0.75.\nB-2. Check resolution and device-pixel-ratio values.\n\nC-1. Change layout.css.dpi to 72.\nC-2. Zoom in 5 times.\nC-3. Check resolution and device-pixel-ratio values.\n\nActual Results:  \nA: 72 PPI, 1.0.\nB: 72 PPI, 0.75.\nC: 101 to 120 PPI, 1.5.\n\nExpected Results:  \nA: 96 PPI, 1.0.\nB: 72 PPI, 0.75.\nC: 141 to 160 PPI, 1.5.", "creation_time": "2011-06-04T16:47:08Z", "bug_id": 662061, "tags": [], "is_private": false, "count": 0, "id": 5513427}, {"count": 1, "is_private": false, "tags": [], "id": 5513661, "bug_id": 662061, "raw_text": "Why do you expect layout.css.dpi (or, more generally, resolution changes) to affect the layout?  Why do you claim that it's no longer supported?", "creation_time": "2011-06-04T23:27:57Z", "text": "Why do you expect layout.css.dpi (or, more generally, resolution changes) to affect the layout?  Why do you claim that it's no longer supported?", "time": "2011-06-04T23:27:57Z", "attachment_id": null, "creator": "dbaron@dbaron.org", "author": "dbaron@dbaron.org"}, {"raw_text": "Because i already filed a bug for layout.css.dpi not working anymore, and was told support for it was removed despite it remaining in the config. It no longer has any affect on the layout as it used to as that is what the devs intended, but it is causing the value of resolution to be change still when it shouldn't. So this would be a bug left behind since support was dropped.\n\nAs to your first question, i can't really answer than any better than saying because that is what happens, that's the point of it. In this case it's more accurate to say that i expect changes in relationship between a pixel and the CSS units (Which change the rendering of the layout on screen.), to be reported back accurately in media queries.\n\nThere are 3 different ways this is done in Gecko: Zoom, layout.css.devPixelsPerPx, and layout.css.dpi. The last is no longer supported as i said, but changing it still is changing the resolution value as if it is working still. The second is working correctly, but is not changing the resolution value as it should. The first works correctly on it's own by changing both values, but when used with the other two it will be incorrect two because of the bugs they have. Correct their bugs, and they all work fine again.\n\nCurrently, the only way to produce accurate results is to set layout.css.dpi and layout.css.devPixelsPerPx to both match the intended DPI, and the zooming system will then have the correct base values to adjust from when zooming.", "creation_time": "2011-06-05T00:09:11Z", "time": "2011-06-05T00:09:11Z", "attachment_id": null, "author": "mail+community+mozilla@zealvurte.co.uk", "text": "Because i already filed a bug for layout.css.dpi not working anymore, and was told support for it was removed despite it remaining in the config. It no longer has any affect on the layout as it used to as that is what the devs intended, but it is causing the value of resolution to be change still when it shouldn't. So this would be a bug left behind since support was dropped.\n\nAs to your first question, i can't really answer than any better than saying because that is what happens, that's the point of it. In this case it's more accurate to say that i expect changes in relationship between a pixel and the CSS units (Which change the rendering of the layout on screen.), to be reported back accurately in media queries.\n\nThere are 3 different ways this is done in Gecko: Zoom, layout.css.devPixelsPerPx, and layout.css.dpi. The last is no longer supported as i said, but changing it still is changing the resolution value as if it is working still. The second is working correctly, but is not changing the resolution value as it should. The first works correctly on it's own by changing both values, but when used with the other two it will be incorrect two because of the bugs they have. Correct their bugs, and they all work fine again.\n\nCurrently, the only way to produce accurate results is to set layout.css.dpi and layout.css.devPixelsPerPx to both match the intended DPI, and the zooming system will then have the correct base values to adjust from when zooming.", "creator": "mail+community+mozilla@zealvurte.co.uk", "id": 5513686, "is_private": false, "count": 2, "tags": [], "bug_id": 662061}, {"creation_time": "2011-06-07T00:02:54Z", "raw_text": "layout.css.dpi still changes the DPI. It's just that the DPI doesn't change the layout unless you're using mozmm.", "attachment_id": null, "time": "2011-06-07T00:02:54Z", "text": "layout.css.dpi still changes the DPI. It's just that the DPI doesn't change the layout unless you're using mozmm.", "id": 5516499, "is_private": false, "count": 3, "tags": [], "bug_id": 662061, "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org"}, {"bug_id": 662061, "is_private": false, "count": 4, "tags": [], "id": 5517006, "text": "As rather ridiculous as you probably realise i think that is because it is completely outside the the CSS spec, there is still the issue of the DPI not changing in layout.css.devPixelsPerPx, while it does when zooming, producing incorrect results when using the two together, despite having the same impact on layout, which is out of accordance with spec and expected behaviour.", "attachment_id": null, "time": "2011-06-07T08:33:32Z", "creation_time": "2011-06-07T08:33:32Z", "raw_text": "As rather ridiculous as you probably realise i think that is because it is completely outside the the CSS spec, there is still the issue of the DPI not changing in layout.css.devPixelsPerPx, while it does when zooming, producing incorrect results when using the two together, despite having the same impact on layout, which is out of accordance with spec and expected behaviour.", "creator": "mail+community+mozilla@zealvurte.co.uk", "author": "mail+community+mozilla@zealvurte.co.uk"}, {"author": "dbaron@dbaron.org", "creator": "dbaron@dbaron.org", "time": "2011-06-07T14:36:25Z", "attachment_id": null, "text": "http://www.w3.org/TR/CSS21/syndata.html#length-units says:\n\n  # For a CSS device, these dimensions are either anchored (i) by relating the\n  # physical units to their physical measurements, or (ii) by relating the pixel\n  # unit to the reference pixel. For print media and similar high-resolution\n  # devices, the anchor unit should be one of the standard physical units\n  # (inches, centimeters, etc). For lower-resolution devices, and devices with\n  # unusual viewing distances, it is recommended instead that the anchor unit be\n  # the pixel unit. For such devices it is recommended that the pixel unit refer\n  # to the whole number of device pixels that best approximates the reference\n  # pixel. \n\nso I'm not sure why you say that a control for CSS pixels per device pixel violates the spec.\n\n(I recommend reading that whole section.)", "raw_text": "http://www.w3.org/TR/CSS21/syndata.html#length-units says:\n\n  # For a CSS device, these dimensions are either anchored (i) by relating the\n  # physical units to their physical measurements, or (ii) by relating the pixel\n  # unit to the reference pixel. For print media and similar high-resolution\n  # devices, the anchor unit should be one of the standard physical units\n  # (inches, centimeters, etc). For lower-resolution devices, and devices with\n  # unusual viewing distances, it is recommended instead that the anchor unit be\n  # the pixel unit. For such devices it is recommended that the pixel unit refer\n  # to the whole number of device pixels that best approximates the reference\n  # pixel. \n\nso I'm not sure why you say that a control for CSS pixels per device pixel violates the spec.\n\n(I recommend reading that whole section.)", "creation_time": "2011-06-07T14:36:25Z", "bug_id": 662061, "id": 5517361, "tags": [], "is_private": false, "count": 5}, {"time": "2011-06-07T19:45:15Z", "attachment_id": null, "text": "I never said the control itself does, red the spec many times.\n\nWhen you zoom, the resolution and device-pixel-ratio (Not part of the spec.) change accordingly to reflect the scaled layout.\nWhen you change layout.css.devPixelsPerPx, which has the same affect on the layout, and is also scaling based on changing that anchored pixel unit as the spec defines, it does not change the resolution value, but it does change the device-pixel-ratio.\nThis alone indicates a discrepancy in how you're handling the resolution value.\n\nWhen using the two together, the device-pixel-ratio reports the correct value, while the resolution does not. If you only used the zoom, both would be correct.\n\nNot changing the resolution value when using the layout.css.devPixelsPerPx is unhelpful just on it's own (A static non CSS based DPI/DPCM, is entirely useless to CSS if you perform any scaling as described in what you quoted, and Webkit doesn't even bother to change the device-pixel-ratio when zooming, so i don't understand what they were thinking of trying to fix.), but allowing it to cause values which become out of sync with the scale of the units is worse.", "creation_time": "2011-06-07T19:45:15Z", "raw_text": "I never said the control itself does, red the spec many times.\n\nWhen you zoom, the resolution and device-pixel-ratio (Not part of the spec.) change accordingly to reflect the scaled layout.\nWhen you change layout.css.devPixelsPerPx, which has the same affect on the layout, and is also scaling based on changing that anchored pixel unit as the spec defines, it does not change the resolution value, but it does change the device-pixel-ratio.\nThis alone indicates a discrepancy in how you're handling the resolution value.\n\nWhen using the two together, the device-pixel-ratio reports the correct value, while the resolution does not. If you only used the zoom, both would be correct.\n\nNot changing the resolution value when using the layout.css.devPixelsPerPx is unhelpful just on it's own (A static non CSS based DPI/DPCM, is entirely useless to CSS if you perform any scaling as described in what you quoted, and Webkit doesn't even bother to change the device-pixel-ratio when zooming, so i don't understand what they were thinking of trying to fix.), but allowing it to cause values which become out of sync with the scale of the units is worse.", "bug_id": 662061, "id": 5518138, "tags": [], "count": 6, "is_private": false, "author": "mail+community+mozilla@zealvurte.co.uk", "creator": "mail+community+mozilla@zealvurte.co.uk"}, {"id": 5518266, "count": 7, "is_private": false, "tags": [], "bug_id": 662061, "creation_time": "2011-06-07T20:38:30Z", "raw_text": "The device-pixel-ratio media query reports the ratio of device pixels to CSS pixels.\n\nThe resolution media query reports the number of device pixels per physical inch.\n\nZooming changes the size of a CSS pixel relative to both of the others, so it should change device-pixel-ratio but not resolution.\n\nlayout.css.dpi changes what we believe a physical inch is (relative to both of the others), so it should change resolution but not device-pixel-ratio.\n\nlayout.css.devPixelsPerPx changes the initial ratio of device pixels to CSS pixels, so it should affect the initial device-pixel-ratio (modifiable by zooming) but not change resolution.\n\n\nSo as far as I can tell the only bug reported here is that zooming should not change the resolution media feature, but it does.", "attachment_id": null, "time": "2011-06-07T20:38:30Z", "text": "The device-pixel-ratio media query reports the ratio of device pixels to CSS pixels.\n\nThe resolution media query reports the number of device pixels per physical inch.\n\nZooming changes the size of a CSS pixel relative to both of the others, so it should change device-pixel-ratio but not resolution.\n\nlayout.css.dpi changes what we believe a physical inch is (relative to both of the others), so it should change resolution but not device-pixel-ratio.\n\nlayout.css.devPixelsPerPx changes the initial ratio of device pixels to CSS pixels, so it should affect the initial device-pixel-ratio (modifiable by zooming) but not change resolution.\n\n\nSo as far as I can tell the only bug reported here is that zooming should not change the resolution media feature, but it does.", "author": "dbaron@dbaron.org", "creator": "dbaron@dbaron.org"}, {"creator": "mail+community+mozilla@zealvurte.co.uk", "author": "mail+community+mozilla@zealvurte.co.uk", "is_private": false, "count": 8, "tags": [], "id": 5518435, "bug_id": 662061, "raw_text": "Correct, if that's how you interpret resolution and its units.\nI didn't know which you wanted to consider a bug, because i didn't know how you were interpreting it until now, so thanks for clearing that up.", "creation_time": "2011-06-07T21:43:05Z", "text": "Correct, if that's how you interpret resolution and its units.\nI didn't know which you wanted to consider a bug, because i didn't know how you were interpreting it until now, so thanks for clearing that up.", "time": "2011-06-07T21:43:05Z", "attachment_id": null}, {"author": "george.carstoiu@gmail.com", "creator": "george.carstoiu@gmail.com", "raw_text": "(In reply to comment #7)\n> So as far as I can tell the only bug reported here is that zooming should\n> not change the resolution media feature, but it does.\n\nConsidering Comment 7, setting status to New and changing the summary accordingly.", "creation_time": "2011-06-23T11:29:43Z", "time": "2011-06-23T11:29:43Z", "attachment_id": null, "text": "(In reply to comment #7)\n> So as far as I can tell the only bug reported here is that zooming should\n> not change the resolution media feature, but it does.\n\nConsidering Comment 7, setting status to New and changing the summary accordingly.", "id": 5550697, "tags": [], "is_private": false, "count": 9, "bug_id": 662061}, {"text": "(In reply to David Baron [:dbaron] from comment #7)\n> The resolution media query reports the number of device pixels per physical\n> inch.\n\nA recent spec change will change this; see bug 771390.", "time": "2012-07-06T00:32:21Z", "attachment_id": null, "raw_text": "(In reply to David Baron [:dbaron] from comment #7)\n> The resolution media query reports the number of device pixels per physical\n> inch.\n\nA recent spec change will change this; see bug 771390.", "creation_time": "2012-07-06T00:32:21Z", "bug_id": 662061, "count": 10, "is_private": false, "tags": [], "id": 6448768, "creator": "dbaron@dbaron.org", "author": "dbaron@dbaron.org"}, {"bug_id": 662061, "id": 6449277, "is_private": false, "count": 11, "tags": [], "time": "2012-07-06T07:07:45Z", "attachment_id": null, "text": "Yep, the spec now supports the more expected behaviour that I was hoping for.\n\nThe bug summary is now wrong (resolution should change), and my original bug summary should be restored, as the bug is actually an issue with the syncing of the two media query values depending on method of scaling in the browser.", "raw_text": "Yep, the spec now supports the more expected behaviour that I was hoping for.\n\nThe bug summary is now wrong (resolution should change), and my original bug summary should be restored, as the bug is actually an issue with the syncing of the two media query values depending on method of scaling in the browser.", "creation_time": "2012-07-06T07:07:45Z", "author": "mail+community+mozilla@zealvurte.co.uk", "creator": "mail+community+mozilla@zealvurte.co.uk"}, {"raw_text": "Seamonkey users can set Preferences -> Appearance -> Content -> Zoom only text instead of full pages = Check. This changes the preference browser.zoom.full to False. Now zooming only affects text as wanted by bug reporter.\n\nFirefox has the preference browser.zoom.full too. Toggling it to False gives the same result as wanted by bug reporter. \n\nI don't know if somewhere in Firefox preference dialog users have GUI access to this preference. This might be another bug. The technical basics are working, so this bug is invalid.\n\nIf the bug reporter wants this as default behaviour or a GUI access to this preference a fresh bug report is welcome.", "creation_time": "2013-07-06T19:14:30Z", "author": "hb@calen.de", "time": "2013-07-06T19:14:30Z", "attachment_id": null, "text": "Seamonkey users can set Preferences -> Appearance -> Content -> Zoom only text instead of full pages = Check. This changes the preference browser.zoom.full to False. Now zooming only affects text as wanted by bug reporter.\n\nFirefox has the preference browser.zoom.full too. Toggling it to False gives the same result as wanted by bug reporter. \n\nI don't know if somewhere in Firefox preference dialog users have GUI access to this preference. This might be another bug. The technical basics are working, so this bug is invalid.\n\nIf the bug reporter wants this as default behaviour or a GUI access to this preference a fresh bug report is welcome.", "creator": "hb@calen.de", "id": 7607076, "tags": [], "count": 12, "is_private": false, "bug_id": 662061}, {"time": "2013-07-07T16:23:15Z", "attachment_id": null, "text": "This bug is about what relevant standards say we should do when zooming.  Please don't mark bugs invalid if you're not the module owner or not able to correctly judge their validity.", "creation_time": "2013-07-07T16:23:15Z", "raw_text": "This bug is about what relevant standards say we should do when zooming.  Please don't mark bugs invalid if you're not the module owner or not able to correctly judge their validity.", "bug_id": 662061, "id": 7607641, "count": 13, "is_private": false, "tags": [], "author": "dbaron@dbaron.org", "creator": "dbaron@dbaron.org"}, {"id": 11799506, "is_private": false, "count": 14, "tags": [], "bug_id": 662061, "creation_time": "2016-10-19T22:51:48Z", "raw_text": "For reference: https://drafts.csswg.org/mediaqueries-4/#resolution", "time": "2016-10-19T22:51:48Z", "attachment_id": null, "author": "tantek@cs.stanford.edu", "text": "For reference: https://drafts.csswg.org/mediaqueries-4/#resolution", "creator": "tantek@cs.stanford.edu"}]}}, "comments": {}}