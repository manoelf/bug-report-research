{"bugs": {"666447": {"comments": [{"raw_text": "nsIFrame::GetContainingBlock returns the containing block of the outer table frame when called on inner table frames.  This leads to complications (see bug 10209 comment 110) in case the containing block of the outer table frame is a positioned inline frame.  We need to figure out a more elegant way of handling that.", "attachment_id": null, "id": 5549876, "count": 0, "is_private": false, "creator": "ehsan.akhgari@gmail.com", "text": "nsIFrame::GetContainingBlock returns the containing block of the outer table frame when called on inner table frames.  This leads to complications (see bug 10209 comment 110) in case the containing block of the outer table frame is a positioned inline frame.  We need to figure out a more elegant way of handling that.", "time": "2011-06-23T00:11:26Z", "bug_id": 666447, "tags": [], "creation_time": "2011-06-23T00:11:26Z", "author": "ehsan.akhgari@gmail.com"}, {"bug_id": 666447, "count": 1, "author": "bzbarsky@mit.edu", "creation_time": "2011-06-23T02:05:54Z", "tags": [], "time": "2011-06-23T02:05:54Z", "text": "So is there a reason to not just return the containing block of the table outer frame for table inner frames?", "creator": "bzbarsky@mit.edu", "is_private": false, "id": 5550088, "attachment_id": null, "raw_text": "So is there a reason to not just return the containing block of the table outer frame for table inner frames?"}, {"count": 2, "bug_id": 666447, "raw_text": "(In reply to comment #1)\n> So is there a reason to not just return the containing block of the table outer\n> frame for table inner frames?\n\nThe confusion mostly rises from the fact that the CSS spec defines containing blocks for elements, and doesn't say anything about the special case for tables.  I do think that it should be OK.  For future reference, we should make sure that nsHTMLReflowState::ComputeContainingBlockRectangle does something sensible in this case.", "attachment_id": null, "id": 5551266, "is_private": false, "creator": "ehsan.akhgari@gmail.com", "text": "(In reply to comment #1)\n> So is there a reason to not just return the containing block of the table outer\n> frame for table inner frames?\n\nThe confusion mostly rises from the fact that the CSS spec defines containing blocks for elements, and doesn't say anything about the special case for tables.  I do think that it should be OK.  For future reference, we should make sure that nsHTMLReflowState::ComputeContainingBlockRectangle does something sensible in this case.", "time": "2011-06-23T16:23:27Z", "tags": [], "creation_time": "2011-06-23T16:23:27Z", "author": "ehsan.akhgari@gmail.com"}, {"attachment_id": null, "raw_text": "Per http://www.w3.org/TR/CSS21/visudet.html#containing-block-details\nthe containing block of the table, caption, and inner table elements is the outer table box (table wrapper box). Is this a problem somehow?", "id": 5551722, "is_private": false, "creator": "fantasai.bugs@inkedblade.net", "count": 3, "creation_time": "2011-06-23T18:34:01Z", "author": "fantasai.bugs@inkedblade.net", "text": "Per http://www.w3.org/TR/CSS21/visudet.html#containing-block-details\nthe containing block of the table, caption, and inner table elements is the outer table box (table wrapper box). Is this a problem somehow?", "bug_id": 666447, "time": "2011-06-23T18:34:01Z", "tags": []}, {"id": 5551753, "attachment_id": null, "raw_text": "The spec's definition of \"containing block\" there is useless here, since it differs for percentage base calculations.  The spec's containing block for percentage calculations ignores the table wrapper box and uses the next up block.", "author": "bzbarsky@mit.edu", "creation_time": "2011-06-23T18:40:09Z", "tags": [], "time": "2011-06-23T18:40:09Z", "bug_id": 666447, "text": "The spec's definition of \"containing block\" there is useless here, since it differs for percentage base calculations.  The spec's containing block for percentage calculations ignores the table wrapper box and uses the next up block.", "creator": "bzbarsky@mit.edu", "is_private": false, "count": 4}]}}, "comments": {}}