{"comments": {}, "bugs": {"623829": {"comments": [{"text": "User-Agent:       Mozilla/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko/20110106 Firefox/4.0b9pre\nBuild Identifier: \n\nGrab the testcase from Bug 587654: https://bugzilla.mozilla.org/attachment.cgi?id=466305\n\n1. View the directory containing the files\n2. Click on index.htm\n3. Right-click and reload the page\n4. Click \"Click this link\"\n5. Click the back button\n6. You're back at the directory listing (wrong!), now click the forward button.\n7. You're at index.htm, now click the forward button again and it won't do anything.\n\nReproducible: Always", "is_private": false, "bug_id": 623829, "raw_text": "User-Agent:       Mozilla/5.0 (X11; Linux x86_64; rv:2.0b9pre) Gecko/20110106 Firefox/4.0b9pre\nBuild Identifier: \n\nGrab the testcase from Bug 587654: https://bugzilla.mozilla.org/attachment.cgi?id=466305\n\n1. View the directory containing the files\n2. Click on index.htm\n3. Right-click and reload the page\n4. Click \"Click this link\"\n5. Click the back button\n6. You're back at the directory listing (wrong!), now click the forward button.\n7. You're at index.htm, now click the forward button again and it won't do anything.\n\nReproducible: Always", "creator": "mozilla@bigwillystyle42.com", "id": 5181898, "attachment_id": null, "creation_time": "2011-01-07T05:40:17Z", "count": 0, "time": "2011-01-07T05:40:17Z", "author": "mozilla@bigwillystyle42.com", "tags": []}, {"creation_time": "2011-01-07T05:44:51Z", "count": 1, "time": "2011-01-07T05:44:51Z", "author": "mozilla@bigwillystyle42.com", "tags": [], "text": "This has the same regression range as Bug 597315:\n\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=116f2046b9ef&tochange=095418dfa2e6\n\nSo I'm going to blame Bug 462076.", "bug_id": 623829, "is_private": false, "raw_text": "This has the same regression range as Bug 597315:\n\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=116f2046b9ef&tochange=095418dfa2e6\n\nSo I'm going to blame Bug 462076.", "creator": "mozilla@bigwillystyle42.com", "id": 5181906, "attachment_id": null}, {"raw_text": "Olli, any ideas here? Do we need to block on this?", "is_private": false, "bug_id": 623829, "text": "Olli, any ideas here? Do we need to block on this?", "attachment_id": null, "id": 5192464, "creator": "jstenback+bmo@gmail.com", "author": "jstenback+bmo@gmail.com", "time": "2011-01-12T02:43:52Z", "count": 2, "creation_time": "2011-01-12T02:43:52Z", "tags": []}, {"tags": [], "count": 3, "creation_time": "2011-01-12T10:52:34Z", "author": "bugs@pettay.fi", "time": "2011-01-12T10:52:34Z", "creator": "bugs@pettay.fi", "attachment_id": null, "id": 5193119, "text": "I haven't had time to look at this.\n\nI'm not sure whether this should block. There are no duplicates to this\nand bug 462076 landed long ago.", "raw_text": "I haven't had time to look at this.\n\nI'm not sure whether this should block. There are no duplicates to this\nand bug 462076 landed long ago.", "bug_id": 623829, "is_private": false}, {"text": "*** Bug 697718 has been marked as a duplicate of this bug. ***", "raw_text": "", "bug_id": 623829, "is_private": false, "creator": "alice0775@gmail.com", "attachment_id": null, "id": 5810341, "count": 4, "creation_time": "2011-10-27T23:39:00Z", "author": "alice0775@gmail.com", "time": "2011-10-27T23:39:00Z", "tags": []}, {"tags": [], "author": "al_9x@yahoo.com", "time": "2011-10-27T23:55:31Z", "count": 5, "creation_time": "2011-10-27T23:55:31Z", "attachment_id": null, "id": 5810373, "creator": "al_9x@yahoo.com", "raw_text": "When you are doing rapid releases and (effectively) forcing upgrades, regressions should have higher priority than this (9.5 months old)", "bug_id": 623829, "is_private": false, "text": "When you are doing rapid releases and (effectively) forcing upgrades, regressions should have higher priority than this (9.5 months old)"}, {"creation_time": "2011-10-28T00:15:37Z", "author": "bugs@pettay.fi", "tags": [], "text": "This has nothing to do with rapid releases. The patch causing this landed way before we started\nto talk about rapid releases.\n\nThis is clearly not very often happening problem, since it was noticed about 4 months after\nthe patch causing the regression landed. And now, 14 months after the patch a new bug\nwas filed.\nUnfortunately session history is tricky and not defined properly in any spec - which leads to\nproblems in all the browsers.\n\nBut anyhow, I'll try to look at this soon. Thank you for reminding me.\n(Or feel free to fix this. Firefox is, you know, open source ;) )", "creator": "bugs@pettay.fi", "attachment_id": null, "count": 6, "time": "2011-10-28T00:15:37Z", "raw_text": "This has nothing to do with rapid releases. The patch causing this landed way before we started\nto talk about rapid releases.\n\nThis is clearly not very often happening problem, since it was noticed about 4 months after\nthe patch causing the regression landed. And now, 14 months after the patch a new bug\nwas filed.\nUnfortunately session history is tricky and not defined properly in any spec - which leads to\nproblems in all the browsers.\n\nBut anyhow, I'll try to look at this soon. Thank you for reminding me.\n(Or feel free to fix this. Firefox is, you know, open source ;) )", "bug_id": 623829, "is_private": false, "id": 5810422}, {"tags": [], "count": 7, "creation_time": "2011-10-28T01:56:28Z", "author": "al_9x@yahoo.com", "time": "2011-10-28T01:56:28Z", "creator": "al_9x@yahoo.com", "attachment_id": null, "id": 5810569, "text": "(In reply to Olli Pettay [:smaug] from comment #6)\n> This has nothing to do with rapid releases.\n\nThe relevance of rapid releases is this:\n\nrapid releases provide an opportunity to both fix and introduce regressions quickly.  The later is automatic, if you don't concentrate on the fix part, rapid releases become a clear liability, accumulating little annoying regressions with each release.  Eventually it becomes a death by a thousand cuts, Fx grows progressively more unpleasant to use.\n\nBecause upgrades are effectively forced, testing cycles are short, there is no really stable, well tested release to cling to (like 2.0 was or 3.6 may still be for a time).  The ESR will not address this issue as only major security problems will be fixed, accumulated regressions will remain for its lifetime.\n\nThis is a recipe for losing users.  To avoid this, you need to shift the balance toward the advantage of rapid releases by prioritizing clear regressions and rolling out fixes quickly, even when the bugs don't seems individually severe, because it's their accumulation you're trying to avoid.", "raw_text": "(In reply to Olli Pettay [:smaug] from comment #6)\n> This has nothing to do with rapid releases.\n\nThe relevance of rapid releases is this:\n\nrapid releases provide an opportunity to both fix and introduce regressions quickly.  The later is automatic, if you don't concentrate on the fix part, rapid releases become a clear liability, accumulating little annoying regressions with each release.  Eventually it becomes a death by a thousand cuts, Fx grows progressively more unpleasant to use.\n\nBecause upgrades are effectively forced, testing cycles are short, there is no really stable, well tested release to cling to (like 2.0 was or 3.6 may still be for a time).  The ESR will not address this issue as only major security problems will be fixed, accumulated regressions will remain for its lifetime.\n\nThis is a recipe for losing users.  To avoid this, you need to shift the balance toward the advantage of rapid releases by prioritizing clear regressions and rolling out fixes quickly, even when the bugs don't seems individually severe, because it's their accumulation you're trying to avoid.", "is_private": false, "bug_id": 623829}, {"text": "We would NOT have shipped a fix for this sort of bug in a 3.6.x release.\n\nFurthermore, we would not have held a 3.6.0 or 4.0 release for this bug.\n\nSo Olli is right; rapid release is not an issue here.  It does give us an opportunity to fix regressions faster, but it doesn't lead to any sort of \"accumulation\" that wasn't there before.", "raw_text": "We would NOT have shipped a fix for this sort of bug in a 3.6.x release.\n\nFurthermore, we would not have held a 3.6.0 or 4.0 release for this bug.\n\nSo Olli is right; rapid release is not an issue here.  It does give us an opportunity to fix regressions faster, but it doesn't lead to any sort of \"accumulation\" that wasn't there before.", "is_private": false, "bug_id": 623829, "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 5810585, "count": 8, "creation_time": "2011-10-28T02:11:01Z", "author": "bzbarsky@mit.edu", "time": "2011-10-28T02:11:01Z", "tags": []}, {"creation_time": "2011-10-28T03:07:20Z", "count": 9, "time": "2011-10-28T03:07:20Z", "author": "al_9x@yahoo.com", "tags": [], "text": "(In reply to Boris Zbarsky (:bz) from comment #8)\n> We would NOT have shipped a fix for this sort of bug in a 3.6.x release.\n> \n> Furthermore, we would not have held a 3.6.0 or 4.0 release for this bug.\n> \n> So Olli is right; rapid release is not an issue here.  It does give us an\n> opportunity to fix regressions faster, but it doesn't lead to any sort of\n> \"accumulation\" that wasn't there before.\n\nEach release will add regressions, that's a given, if you don't then remove them quickly enough they will accumulate, inflow > outflow = accumulation.  Opportunities to fix regressions have to be taken advantage of, they weren't here.", "bug_id": 623829, "is_private": false, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #8)\n> We would NOT have shipped a fix for this sort of bug in a 3.6.x release.\n> \n> Furthermore, we would not have held a 3.6.0 or 4.0 release for this bug.\n> \n> So Olli is right; rapid release is not an issue here.  It does give us an\n> opportunity to fix regressions faster, but it doesn't lead to any sort of\n> \"accumulation\" that wasn't there before.\n\nEach release will add regressions, that's a given, if you don't then remove them quickly enough they will accumulate, inflow > outflow = accumulation.  Opportunities to fix regressions have to be taken advantage of, they weren't here.", "creator": "al_9x@yahoo.com", "id": 5810638, "attachment_id": null}, {"creation_time": "2011-10-28T03:38:35Z", "count": 10, "time": "2011-10-28T03:38:35Z", "author": "bzbarsky@mit.edu", "tags": [], "text": "> Each release will add regressions, that's a given\n\nYes, and fix bugs and fix regressions.  Again, nothing to do with this bug per se.", "is_private": false, "bug_id": 623829, "raw_text": "> Each release will add regressions, that's a given\n\nYes, and fix bugs and fix regressions.  Again, nothing to do with this bug per se.", "creator": "bzbarsky@mit.edu", "id": 5810657, "attachment_id": null}, {"time": "2011-10-28T22:31:25Z", "author": "torisugari@gmail.com", "creation_time": "2011-10-28T22:31:25Z", "count": 11, "tags": [], "bug_id": 623829, "is_private": false, "raw_text": "(In reply to Olli Pettay [:smaug] from comment #6)\n> Unfortunately session history is tricky and not defined properly in any spec\n> - which leads to problems in all the browsers.\n\nHow about clearing sub-frames' SH entries on a LOAD_RELOAD_NORMAL request, no matter which nsISHEntry::HasDynamicallyAddedChild returns true or false? Both testcases (this and bug 697718) are not \"dynamic\" frames.\n\nI'm quite sure there exists a really buggy part anywhere else (theoretically there's no need to touch SH at all unless the reloading request fails), but this band-aid will hide the bug from users, just like forced-Reload and LOAD_REFRESH requests.", "text": "(In reply to Olli Pettay [:smaug] from comment #6)\n> Unfortunately session history is tricky and not defined properly in any spec\n> - which leads to problems in all the browsers.\n\nHow about clearing sub-frames' SH entries on a LOAD_RELOAD_NORMAL request, no matter which nsISHEntry::HasDynamicallyAddedChild returns true or false? Both testcases (this and bug 697718) are not \"dynamic\" frames.\n\nI'm quite sure there exists a really buggy part anywhere else (theoretically there's no need to touch SH at all unless the reloading request fails), but this band-aid will hide the bug from users, just like forced-Reload and LOAD_REFRESH requests.", "id": 5812563, "attachment_id": null, "creator": "torisugari@gmail.com"}, {"author": "torisugari@gmail.com", "time": "2011-11-07T12:59:13Z", "count": 12, "creation_time": "2011-11-07T12:59:13Z", "tags": [], "raw_text": "When we move\n[pageA]->[pageB + frame1]->[pageB + frame2]->[pageC]\nand back to\n[pageA]<-[pageB + frame1]<-[pageB + frame2]<-[pageC]\nand forward to\n[pageA]->[pageB + frame1]->[pageB + frame2]->[pageC]\n\n\n[pageB + frame2]<-[pageC]          is bfcached     ([pageB + frame2]).\n[pageA]->[pageB + frame1]          is bfcached     ([pageB + frame1]).\n[pageB + frame1]<-[pageB + frame2] is not bfcached ([pageB + frame1]).\n[pageB + frame1]->[pageB + frame2] is not bfcached ([pageB + frame2]).\n\nAfter I reload [pageB + frame1]\n\nbackward: [pageA]<-[     skip     ]<-[pageB + frame1]<-[pageC]\nforward : [pageA]->[pageB + frame1]->[     skip     ]->[pageC]\n\nBoth [pageB + frame1]<-[pageC] and [pageA]->[pageB + frame1] is bfcached.\n\nIf browser.sessionhistory.max_total_viewers is 0, and reload [pageB + frame1]\n\nforward : [pageA]->[pageB + frame1]->[     skip     ]->[pageC]\nbackward: [pageA]<-[pageB + frame1]<-[pageB + frame2]<-[pageC]\nforward : [pageA]->[pageB + frame1]->[pageB + frame2]->[pageC]\n...\nNavigation is broken right after reload, but it recovers automatically.", "is_private": false, "bug_id": 623829, "text": "When we move\n[pageA]->[pageB + frame1]->[pageB + frame2]->[pageC]\nand back to\n[pageA]<-[pageB + frame1]<-[pageB + frame2]<-[pageC]\nand forward to\n[pageA]->[pageB + frame1]->[pageB + frame2]->[pageC]\n\n\n[pageB + frame2]<-[pageC]          is bfcached     ([pageB + frame2]).\n[pageA]->[pageB + frame1]          is bfcached     ([pageB + frame1]).\n[pageB + frame1]<-[pageB + frame2] is not bfcached ([pageB + frame1]).\n[pageB + frame1]->[pageB + frame2] is not bfcached ([pageB + frame2]).\n\nAfter I reload [pageB + frame1]\n\nbackward: [pageA]<-[     skip     ]<-[pageB + frame1]<-[pageC]\nforward : [pageA]->[pageB + frame1]->[     skip     ]->[pageC]\n\nBoth [pageB + frame1]<-[pageC] and [pageA]->[pageB + frame1] is bfcached.\n\nIf browser.sessionhistory.max_total_viewers is 0, and reload [pageB + frame1]\n\nforward : [pageA]->[pageB + frame1]->[     skip     ]->[pageC]\nbackward: [pageA]<-[pageB + frame1]<-[pageB + frame2]<-[pageC]\nforward : [pageA]->[pageB + frame1]->[pageB + frame2]->[pageC]\n...\nNavigation is broken right after reload, but it recovers automatically.", "attachment_id": null, "id": 5830608, "creator": "torisugari@gmail.com"}, {"attachment_id": null, "id": 11482644, "creator": "adrian.florinescu@softvision.com", "raw_text": "Still reproducible on version 50.0a1 Build ID 20160613030258.", "is_private": false, "bug_id": 623829, "text": "Still reproducible on version 50.0a1 Build ID 20160613030258.", "tags": [], "author": "adrian.florinescu@softvision.com", "time": "2016-06-14T10:41:07Z", "count": 13, "creation_time": "2016-06-14T10:41:07Z"}]}}}