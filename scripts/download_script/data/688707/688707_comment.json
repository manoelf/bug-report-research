{"bugs": {"688707": {"comments": [{"creator": "cjones.bugs@gmail.com", "author": "cjones.bugs@gmail.com", "text": "Created attachment 561997\nsysprof data\n\nSee attached URL.\n\nThe profile seems to be pretty heavy on CSS selector matching, so the parallelization bug may be our best bet here.  Attached is a sysprof profile.", "time": "2011-09-23T09:11:11Z", "attachment_id": 561997, "raw_text": "See attached URL.\n\nThe profile seems to be pretty heavy on CSS selector matching, so the parallelization bug may be our best bet here.  Attached is a sysprof profile.", "creation_time": "2011-09-23T09:11:11Z", "bug_id": 688707, "tags": [], "count": 0, "is_private": false, "id": 5733174}, {"bug_id": 688707, "count": 1, "is_private": false, "tags": [], "id": 5734419, "text": "Parallelizing won't help too much by itself.\n\nWhat I see is that right about 20% of the time is spent restyling and in particular reframing off a WillPaint notification.  But only about half of this is selector matching under the frame construction; the rest is various other stuff, including the actual reresolves, etc.\n\nAnother 14% is reframing from a offsetWidth get in a DOMContentLoaded event handler.  Again, about half is selector matching.\n\n6% is layout from that offsetWidth get.\n\n10% is various JS+DOM stuff (querySelector calls, JSObject creation, etc, etc)\n\n13% is restyling off the refresh driver.  This won't be parallelized yet.\n\n10% is reframing off the refresh driver.  This will likely get parallelized for the selector matching bits, which is half or so.\n\n10% is reflow off the refresh driver.\n\nThat's most of the obvious hotspots.\n\nSo the time taken in selector matching that's parallelizable is about 0.5 * (10 + 14 + 20) = 22% of total time.  Figure we make it 2-3x faster, we win about 11-14%.\n\nThe real question is why we have to do all that restyling and especially reframing.", "time": "2011-09-23T20:51:09Z", "attachment_id": null, "raw_text": "Parallelizing won't help too much by itself.\n\nWhat I see is that right about 20% of the time is spent restyling and in particular reframing off a WillPaint notification.  But only about half of this is selector matching under the frame construction; the rest is various other stuff, including the actual reresolves, etc.\n\nAnother 14% is reframing from a offsetWidth get in a DOMContentLoaded event handler.  Again, about half is selector matching.\n\n6% is layout from that offsetWidth get.\n\n10% is various JS+DOM stuff (querySelector calls, JSObject creation, etc, etc)\n\n13% is restyling off the refresh driver.  This won't be parallelized yet.\n\n10% is reframing off the refresh driver.  This will likely get parallelized for the selector matching bits, which is half or so.\n\n10% is reflow off the refresh driver.\n\nThat's most of the obvious hotspots.\n\nSo the time taken in selector matching that's parallelizable is about 0.5 * (10 + 14 + 20) = 22% of total time.  Figure we make it 2-3x faster, we win about 11-14%.\n\nThe real question is why we have to do all that restyling and especially reframing.", "creation_time": "2011-09-23T20:51:09Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "text": "I tried disabling our \"trigger restyles on DOM mutations when certain selectors are present\" stuff as well as later-sibling restyles for + and ~ combinators, and that doesn't change things.\n\nLikewise, getting rid of the reframe ContentStateChanged can trigger does not help.\n\nLikewise, not flushing layout in the document viewer doesn't help (no surprise).\n\nInterestingly, the pause I see in WebKit is about 2x smaller than ours...\n\nAs far as things that _would_ help, moving painting to the refresh driver would help some (we wouldn't have the separate WillPaint bit, and it would presumably roll into one of the other pieces).", "attachment_id": null, "time": "2011-09-23T21:05:01Z", "raw_text": "I tried disabling our \"trigger restyles on DOM mutations when certain selectors are present\" stuff as well as later-sibling restyles for + and ~ combinators, and that doesn't change things.\n\nLikewise, getting rid of the reframe ContentStateChanged can trigger does not help.\n\nLikewise, not flushing layout in the document viewer doesn't help (no surprise).\n\nInterestingly, the pause I see in WebKit is about 2x smaller than ours...\n\nAs far as things that _would_ help, moving painting to the refresh driver would help some (we wouldn't have the separate WillPaint bit, and it would presumably roll into one of the other pieces).", "creation_time": "2011-09-23T21:05:01Z", "bug_id": 688707, "tags": [], "count": 2, "is_private": false, "id": 5734462}, {"creation_time": "2011-09-23T21:24:07Z", "raw_text": "I tried turning off script, and that speeds up both us and Safari by about 2x.  So the DOMContentLoaded script really is just being dumb, but we can still do better here, clearly...\n\nWith script disabled, I _still_ see a bunch of time spent on restyling.  I wonder why....", "text": "I tried turning off script, and that speeds up both us and Safari by about 2x.  So the DOMContentLoaded script really is just being dumb, but we can still do better here, clearly...\n\nWith script disabled, I _still_ see a bunch of time spent on restyling.  I wonder why....", "time": "2011-09-23T21:24:07Z", "attachment_id": null, "count": 3, "is_private": false, "tags": [], "id": 5734506, "bug_id": 688707, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"bug_id": 688707, "count": 4, "is_private": false, "tags": [], "id": 5734516, "creator": "bzbarsky@mit.edu", "text": "OK, those restyles seem to come mostly from SVG stuff doing RestyleForAnimation on every single nsSVGElement::WalkContentStyleRules call.  Can we not detect whether we need to do that up front?  I'm not even sure where there is SVG on this page....", "time": "2011-09-23T21:27:14Z", "attachment_id": null, "author": "bzbarsky@mit.edu", "raw_text": "OK, those restyles seem to come mostly from SVG stuff doing RestyleForAnimation on every single nsSVGElement::WalkContentStyleRules call.  Can we not detect whether we need to do that up front?  I'm not even sure where there is SVG on this page....", "creation_time": "2011-09-23T21:27:14Z"}, {"raw_text": "(In reply to Boris Zbarsky (:bz) from comment #4)\n> I'm not even\n> sure where there is SVG on this page....\n\nIf I break on nsSVGElement::WalkContentStyleRules, I get a bunch of hits for this SVG doc:\n  https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6-hover.svg\nat around pageload time.\n\n(That's the \"github // social coding\" logo)", "creation_time": "2011-09-27T23:27:15Z", "attachment_id": null, "time": "2011-09-27T23:27:15Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #4)\n> I'm not even\n> sure where there is SVG on this page....\n\nIf I break on nsSVGElement::WalkContentStyleRules, I get a bunch of hits for this SVG doc:\n  https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6-hover.svg\nat around pageload time.\n\n(That's the \"github // social coding\" logo)", "id": 5741763, "is_private": false, "count": 5, "tags": [], "bug_id": 688707, "author": "dholbert@mozilla.com", "creator": "dholbert@mozilla.com"}, {"is_private": false, "count": 6, "tags": [], "id": 5741824, "bug_id": 688707, "creation_time": "2011-09-27T23:44:03Z", "raw_text": "Also a few hits to:\n https://a248.e.akamai.net/assets.github.com/images/modules/footer/footer-logo.svg\n\n(In reply to Boris Zbarsky (:bz) from comment #4)\n> OK, those restyles seem to come mostly from SVG stuff doing\n> RestyleForAnimation on every single nsSVGElement::WalkContentStyleRules\n\nI actually don't get any hits at all to PresShell::RestyleForAnimation during pageload, FWIW.", "text": "Also a few hits to:\n https://a248.e.akamai.net/assets.github.com/images/modules/footer/footer-logo.svg\n\n(In reply to Boris Zbarsky (:bz) from comment #4)\n> OK, those restyles seem to come mostly from SVG stuff doing\n> RestyleForAnimation on every single nsSVGElement::WalkContentStyleRules\n\nI actually don't get any hits at all to PresShell::RestyleForAnimation during pageload, FWIW.", "attachment_id": null, "time": "2011-09-27T23:44:03Z", "creator": "dholbert@mozilla.com", "author": "dholbert@mozilla.com"}, {"bug_id": 688707, "tags": [], "is_private": false, "count": 7, "id": 5741855, "text": "(to more fully respond to comment 4, I don't think SVG is involved here -- per comment 6, I don't think it's actually triggering restyles, and I don't see any SVG-related functions showing up prominently in my or cjones' sysprof logs)", "attachment_id": null, "time": "2011-09-27T23:56:00Z", "creation_time": "2011-09-27T23:56:00Z", "raw_text": "(to more fully respond to comment 4, I don't think SVG is involved here -- per comment 6, I don't think it's actually triggering restyles, and I don't see any SVG-related functions showing up prominently in my or cjones' sysprof logs)", "creator": "dholbert@mozilla.com", "author": "dholbert@mozilla.com"}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "attachment_id": null, "time": "2011-09-28T02:19:16Z", "text": "You don't get hits as in no profiler hits?  Or you don't get hits as in debugger breakpoints?\n\nRestyleForAnimation is _really_ fast.  It wouldn't show up at all at the sampling resolution I see in cjones' log.\n\nBut the restyle it triggers may or may not be particularly fast....  But it's async, so won't be blamed to the RestyleForAnimation call.", "raw_text": "You don't get hits as in no profiler hits?  Or you don't get hits as in debugger breakpoints?\n\nRestyleForAnimation is _really_ fast.  It wouldn't show up at all at the sampling resolution I see in cjones' log.\n\nBut the restyle it triggers may or may not be particularly fast....  But it's async, so won't be blamed to the RestyleForAnimation call.", "creation_time": "2011-09-28T02:19:16Z", "bug_id": 688707, "id": 5742124, "tags": [], "count": 8, "is_private": false}, {"author": "dholbert@mozilla.com", "creator": "dholbert@mozilla.com", "id": 5742221, "is_private": false, "count": 9, "tags": [], "bug_id": 688707, "creation_time": "2011-09-28T03:37:50Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #8)\n> You don't get hits as in no profiler hits?  Or you don't get hits as in\n> debugger breakpoints?\n\nsorry, by \"hits\" I meant debugger breakpoints.  So, at least on my system, that's not responsible for the slowness.\n\n(This was with a completely fresh profile. I also tried disabling scripts & reloading, in case that mattered (since you'd mention disabling scripts), but I didn't hit the RestyleForAnimation breakpoint that time, either.)\n\nI also stepped through one run of nsSVGElement::WalkContentStyleRules, and I verified that it skipped the clause that contains RestyleForAnimation. (skipped it because \"context->IsProcessingRestyles()\" was false, IIRC)", "time": "2011-09-28T03:37:50Z", "attachment_id": null, "text": "(In reply to Boris Zbarsky (:bz) from comment #8)\n> You don't get hits as in no profiler hits?  Or you don't get hits as in\n> debugger breakpoints?\n\nsorry, by \"hits\" I meant debugger breakpoints.  So, at least on my system, that's not responsible for the slowness.\n\n(This was with a completely fresh profile. I also tried disabling scripts & reloading, in case that mattered (since you'd mention disabling scripts), but I didn't hit the RestyleForAnimation breakpoint that time, either.)\n\nI also stepped through one run of nsSVGElement::WalkContentStyleRules, and I verified that it skipped the clause that contains RestyleForAnimation. (skipped it because \"context->IsProcessingRestyles()\" was false, IIRC)"}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "bug_id": 688707, "id": 5742242, "tags": [], "is_private": false, "count": 10, "time": "2011-09-28T04:03:00Z", "attachment_id": null, "text": "Hmm.  I wonder what I was seeing...\n\nIn any case, the data that would be useful here is knowing how many different restyles we perform, how much of the subtree we restyle each time, and what triggers those restyles....", "creation_time": "2011-09-28T04:03:00Z", "raw_text": "Hmm.  I wonder what I was seeing...\n\nIn any case, the data that would be useful here is knowing how many different restyles we perform, how much of the subtree we restyle each time, and what triggers those restyles...."}, {"bug_id": 688707, "id": 6048189, "is_private": false, "count": 11, "tags": [], "attachment_id": null, "time": "2012-02-09T20:34:09Z", "author": "mozilla@davedash.com", "text": "Here's another URL: https://github.com/mozilla/mozillians/pull/129\n\nFWIW this is the first I've had such an issue in some time.", "creator": "mozilla@davedash.com", "creation_time": "2012-02-09T20:34:09Z", "raw_text": "Here's another URL: https://github.com/mozilla/mozillians/pull/129\n\nFWIW this is the first I've had such an issue in some time."}]}}, "comments": {}}