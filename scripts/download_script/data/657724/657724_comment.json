{"comments": {}, "bugs": {"657724": {"comments": [{"raw_text": "It's slow, we don't need it.  See bug 653887.\n\nBut actually, I think this would regress bug 423269 because we'd get Begin/EndUpdate happening under a scriptblocker with no outer updates....  Jonas, is that correct?  Do we need to move more things that listen for EndUpdate to post scriptrunners in EndUpdate, perhaps?", "bug_id": 657724, "creation_time": "2011-05-17T19:15:20Z", "creator": "bzbarsky@mit.edu", "tags": [], "attachment_id": null, "is_private": false, "text": "It's slow, we don't need it.  See bug 653887.\n\nBut actually, I think this would regress bug 423269 because we'd get Begin/EndUpdate happening under a scriptblocker with no outer updates....  Jonas, is that correct?  Do we need to move more things that listen for EndUpdate to post scriptrunners in EndUpdate, perhaps?", "count": 0, "author": "bzbarsky@mit.edu", "time": "2011-05-17T19:15:20Z", "id": 5475426}, {"count": 1, "text": "Gah.  There are also frame AttributeChanged implementations that mutate the frame tree (!).\n\nI'll need to audit those....", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "attachment_id": null, "time": "2011-05-17T21:07:38Z", "id": 5475672, "bug_id": 657724, "creation_time": "2011-05-17T21:07:38Z", "raw_text": "Gah.  There are also frame AttributeChanged implementations that mutate the frame tree (!).\n\nI'll need to audit those....", "tags": [], "is_private": false}, {"count": 2, "text": "Specifically, nsTableCellFrame::AttributeChanged calling nsTableFrame::AttributeChangedFor which changes the cellmap and then starts messing with colframes.", "author": "bzbarsky@mit.edu", "time": "2011-05-17T21:10:19Z", "id": 5475683, "raw_text": "Specifically, nsTableCellFrame::AttributeChanged calling nsTableFrame::AttributeChangedFor which changes the cellmap and then starts messing with colframes.", "creation_time": "2011-05-17T21:10:19Z", "bug_id": 657724, "creator": "bzbarsky@mit.edu", "tags": [], "is_private": false, "attachment_id": null}, {"attachment_id": null, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "text": "And of course XBL does the whole add/remove nodes thing under nsXBLPrototypeBinding::AttributeChanged...\n\nOn the other hand, the dep on bug 653126 is the other way: if we stop calling BeginUpdate right up front in SetAttrAndNotify (and specifically if we don't call it anywhere before the SetAndTakeAttr call), then the problem of accidentally flushing the sink when our style data is not in a good state is gone.  So fixing this bug would automagically fix bug 653126.", "count": 3, "is_private": false, "tags": [], "creation_time": "2011-05-18T03:32:53Z", "bug_id": 657724, "raw_text": "And of course XBL does the whole add/remove nodes thing under nsXBLPrototypeBinding::AttributeChanged...\n\nOn the other hand, the dep on bug 653126 is the other way: if we stop calling BeginUpdate right up front in SetAttrAndNotify (and specifically if we don't call it anywhere before the SetAndTakeAttr call), then the problem of accidentally flushing the sink when our style data is not in a good state is gone.  So fixing this bug would automagically fix bug 653126.", "id": 5476369, "time": "2011-05-18T03:32:53Z"}, {"text": "I further believe that the add/remove I mention in comment 3 is fine, except insofar as it triggers outermost EndUpdate while still under a scriptblocker.", "count": 4, "author": "bzbarsky@mit.edu", "time": "2011-05-18T03:34:05Z", "id": 5476371, "raw_text": "I further believe that the add/remove I mention in comment 3 is fine, except insofar as it triggers outermost EndUpdate while still under a scriptblocker.", "bug_id": 657724, "creation_time": "2011-05-18T03:34:05Z", "creator": "bzbarsky@mit.edu", "tags": [], "is_private": false, "attachment_id": null}, {"author": "bzbarsky@mit.edu", "count": 5, "text": "Not sure whether this has been coming up noticeably in quantum flow profiles...", "attachment_id": null, "creator": "bzbarsky@mit.edu", "time": "2017-04-18T02:48:05Z", "id": 12242010, "is_private": false, "raw_text": "Not sure whether this has been coming up noticeably in quantum flow profiles...", "creation_time": "2017-04-18T02:48:05Z", "bug_id": 657724, "tags": []}, {"is_private": false, "attachment_id": null, "creator": "bugs@pettay.fi", "tags": [], "raw_text": "Not too much, perhaps because RestyleManager's AttributeWillChange/AttributeChanged are so slow that\none may not even end up looking at Begin/EndUpdate so closely.\nOr in innerHTML cases SetAttr happens before element is in tree so everything is reasonable fast.\n\nI did file bug 1350885 since EndUpdate shows up a bit when inserting new elements to tree, so I guess same applies to SetAttr too.\n(EndUpdate was showing up more before bug 1352389)\nHmm, but is this bug about nsIDocumentObserver's method, or the Begin/EndUpdate on nsDocument?\nIf the former, then this has shown up even less. I guess this is about that.\n\n\nIn a synthetic testcase nsDocument::EndUpdate does seem to take 3% of attribute setting.\n(RestyleManager's AttributeWillChange/AttributeChanged together >22%)", "bug_id": 657724, "creation_time": "2017-04-18T08:22:04Z", "id": 12242536, "author": "bugs@pettay.fi", "time": "2017-04-18T08:22:04Z", "count": 6, "text": "Not too much, perhaps because RestyleManager's AttributeWillChange/AttributeChanged are so slow that\none may not even end up looking at Begin/EndUpdate so closely.\nOr in innerHTML cases SetAttr happens before element is in tree so everything is reasonable fast.\n\nI did file bug 1350885 since EndUpdate shows up a bit when inserting new elements to tree, so I guess same applies to SetAttr too.\n(EndUpdate was showing up more before bug 1352389)\nHmm, but is this bug about nsIDocumentObserver's method, or the Begin/EndUpdate on nsDocument?\nIf the former, then this has shown up even less. I guess this is about that.\n\n\nIn a synthetic testcase nsDocument::EndUpdate does seem to take 3% of attribute setting.\n(RestyleManager's AttributeWillChange/AttributeChanged together >22%)"}, {"tags": [], "creation_time": "2017-04-19T03:45:46Z", "bug_id": 657724, "raw_text": "> Hmm, but is this bug about nsIDocumentObserver's method, or the Begin/EndUpdate on nsDocument?\n\nBoth.  The latter calls the former, of course.  All the complicated logic that makes it hard to say whether it's ok to skip this is in the former.", "is_private": false, "id": 12245782, "time": "2017-04-19T03:45:46Z", "creator": "bzbarsky@mit.edu", "attachment_id": null, "text": "> Hmm, but is this bug about nsIDocumentObserver's method, or the Begin/EndUpdate on nsDocument?\n\nBoth.  The latter calls the former, of course.  All the complicated logic that makes it hard to say whether it's ok to skip this is in the former.", "count": 7, "author": "bzbarsky@mit.edu"}, {"is_private": false, "creation_time": "2020-03-09T17:28:12Z", "bug_id": 657724, "raw_text": "I didn't really get anywhere with this, unfortunately.  I'll see if I can post the old patches that I had related to this, at least...", "tags": [], "time": "2020-03-09T17:28:12Z", "id": 14685079, "attachment_id": null, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "count": 8, "text": "I didn't really get anywhere with this, unfortunately.  I'll see if I can post the old patches that I had related to this, at least..."}, {"is_private": false, "attachment_id": 9132059, "tags": [], "creator": "bzbarsky@mit.edu", "bug_id": 657724, "creation_time": "2020-03-09T19:36:23Z", "raw_text": "", "id": 14685335, "time": "2020-03-09T19:36:23Z", "author": "bzbarsky@mit.edu", "text": "Created attachment 9132059\npart 1.  Make sure to MaybeBroadcast on AttributeChanged in XULBroadcastManager, so that we're not depending on the MaybeBroadcast from EndUpdate for attribute changes.", "count": 9}, {"id": 14685351, "time": "2020-03-09T19:45:32Z", "tags": [], "creation_time": "2020-03-09T19:45:32Z", "bug_id": 657724, "raw_text": "", "is_private": false, "count": 10, "text": "Created attachment 9132063\npart 2.  Switch attribute changes away from calling Begin/EndUpdate.", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "attachment_id": 9132063}, {"time": "2020-03-09T19:54:12Z", "id": 14685371, "bug_id": 657724, "creation_time": "2020-03-09T19:54:12Z", "raw_text": "", "tags": [], "is_private": false, "text": "Created attachment 9132068\npart 3.  Add a conditional script blocker that only adds/removes script blockers if needed.", "count": 11, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "attachment_id": 9132068}, {"attachment_id": 9132069, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "count": 12, "text": "Created attachment 9132069\nVERY BITROTTED part 4.  Switch inline style changes away from calling Begin/EndUpdate.", "is_private": false, "creation_time": "2020-03-09T19:55:42Z", "bug_id": 657724, "raw_text": "", "tags": [], "time": "2020-03-09T19:55:42Z", "id": 14685377}, {"author": "bzbarsky@mit.edu", "text": "That style patch would need unbitrotting, and likely the previous patches have bitrot too, just not bitrot that shows up when trying to apply them anymore; I merged them to tip that much...\n\nAnd the bigger questions about whether this is doable are still open.", "count": 13, "attachment_id": null, "creator": "bzbarsky@mit.edu", "id": 14685386, "time": "2020-03-09T19:58:58Z", "is_private": false, "tags": [], "bug_id": 657724, "creation_time": "2020-03-09T19:58:58Z", "raw_text": "That style patch would need unbitrotting, and likely the previous patches have bitrot too, just not bitrot that shows up when trying to apply them anymore; I merged them to tip that much...\n\nAnd the bigger questions about whether this is doable are still open."}]}}}