{"bugs": {"706051": {"comments": [{"tags": [], "time": "2011-11-29T11:26:01Z", "attachment_id": null, "raw_text": "Each platform does own initialization. current algorithm is\n1) accessibility service is created\n2) accessibility service triggers nsAccessNodeWrap::InitAccessibility\n\nthere's some initialization paths in widgets module (atk part) and in nsAccessibilityWrap (atk part).\n\naccessibility engine can be started when no platform accessibility is needed (for example when XPCOM nsIAccesible solution like DOM Inspector is running). In this case we don't need to create platform accessible classes (for example atk or os x objects).\n\nSo our engine should provide two options:\n1) start crossplatform engine only\n2) start full engine include platform part", "id": 5878441, "bug_id": 706051, "is_private": false, "creation_time": "2011-11-29T11:26:01Z", "creator": "surkov.alexander@gmail.com", "author": "surkov.alexander@gmail.com", "count": 0, "text": "Each platform does own initialization. current algorithm is\n1) accessibility service is created\n2) accessibility service triggers nsAccessNodeWrap::InitAccessibility\n\nthere's some initialization paths in widgets module (atk part) and in nsAccessibilityWrap (atk part).\n\naccessibility engine can be started when no platform accessibility is needed (for example when XPCOM nsIAccesible solution like DOM Inspector is running). In this case we don't need to create platform accessible classes (for example atk or os x objects).\n\nSo our engine should provide two options:\n1) start crossplatform engine only\n2) start full engine include platform part"}]}}, "comments": {}}