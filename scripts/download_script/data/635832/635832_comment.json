{"bugs": {"635832": {"comments": [{"count": 0, "tags": [], "creator": "jingl1345@gmail.com", "bug_id": 635832, "creation_time": "2011-02-22T06:48:50Z", "text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: firefox-4.0b11\n\nAfter studying the Bug 267506 \"Reduce string copying from nsGenericHTMLElement::GetHrefURIForAnchors\" at https://bugzilla.mozilla.org/show_bug.cgi?id=267506, I found a similar case in firefox-4.0b11.source/content/html/content/src/nsHTMLSharedElement.cpp:\n\nthe \"nsAutoString href\" is not necessary in function nsHTMLSharedElement::GetHref, and the function can be changed as follows:\n\n// nsIDOMHTMLBaseElement\nNS_IMPL_STRING_ATTR(nsHTMLSharedElement, Target, target)\nNS_IMETHODIMP\nnsHTMLSharedElement::GetHref(nsAString& aValue)\n{\n-  nsAutoString href;\n-  GetAttr(kNameSpaceID_None, nsGkAtoms::href, href);\n\n+  const nsAttrValue* hrefAttrValue =\n+    mAttrsAndChildren.GetAttr(nsGkAtoms::href, kNameSpaceID_None);\n\n  nsCOMPtr<nsIURI> uri;\n  nsIDocument* doc = GetOwnerDoc();\n  if (doc) {\n    nsContentUtils::NewURIWithDocumentCharset(\n+      getter_AddRefs(uri), hrefAttrValue->GetStringValue(),\n+      doc, doc->GetDocumentURI());\n-      getter_AddRefs(uri), href, doc, doc->GetDocumentURI());\n  }\n  if (!uri) {\n+    aValue = hrefAttrValue->GetStringValue();\n-    aValue = href;\n    return NS_OK;\n  }\n  \n  nsCAutoString spec;\n  uri->GetSpec(spec);\n  CopyUTF8toUTF16(spec, aValue);\n\n  return NS_OK;\n}\n\nReproducible: Didn't try", "id": 5295315, "raw_text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: firefox-4.0b11\n\nAfter studying the Bug 267506 \"Reduce string copying from nsGenericHTMLElement::GetHrefURIForAnchors\" at https://bugzilla.mozilla.org/show_bug.cgi?id=267506, I found a similar case in firefox-4.0b11.source/content/html/content/src/nsHTMLSharedElement.cpp:\n\nthe \"nsAutoString href\" is not necessary in function nsHTMLSharedElement::GetHref, and the function can be changed as follows:\n\n// nsIDOMHTMLBaseElement\nNS_IMPL_STRING_ATTR(nsHTMLSharedElement, Target, target)\nNS_IMETHODIMP\nnsHTMLSharedElement::GetHref(nsAString& aValue)\n{\n-  nsAutoString href;\n-  GetAttr(kNameSpaceID_None, nsGkAtoms::href, href);\n\n+  const nsAttrValue* hrefAttrValue =\n+    mAttrsAndChildren.GetAttr(nsGkAtoms::href, kNameSpaceID_None);\n\n  nsCOMPtr<nsIURI> uri;\n  nsIDocument* doc = GetOwnerDoc();\n  if (doc) {\n    nsContentUtils::NewURIWithDocumentCharset(\n+      getter_AddRefs(uri), hrefAttrValue->GetStringValue(),\n+      doc, doc->GetDocumentURI());\n-      getter_AddRefs(uri), href, doc, doc->GetDocumentURI());\n  }\n  if (!uri) {\n+    aValue = hrefAttrValue->GetStringValue();\n-    aValue = href;\n    return NS_OK;\n  }\n  \n  nsCAutoString spec;\n  uri->GetSpec(spec);\n  CopyUTF8toUTF16(spec, aValue);\n\n  return NS_OK;\n}\n\nReproducible: Didn't try", "author": "jingl1345@gmail.com", "time": "2011-02-22T06:48:50Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "bzbarsky@mit.edu", "bug_id": 635832, "creation_time": "2011-02-22T15:56:05Z", "text": "This isn't performance-sensitive code, though.  And it introduces some fragility, because it assumes things about the type of the href attr, right?", "id": 5295815, "raw_text": "This isn't performance-sensitive code, though.  And it introduces some fragility, because it assumes things about the type of the href attr, right?", "author": "bzbarsky@mit.edu", "time": "2011-02-22T15:56:05Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "time": "2011-02-22T18:16:24Z", "is_private": false, "author": "jingl1345@gmail.com", "bug_id": 635832, "count": 2, "tags": [], "creator": "jingl1345@gmail.com", "text": "(In reply to comment #1)\n> This isn't performance-sensitive code, though.  And it introduces some\n> fragility, because it assumes things about the type of the href attr, right?\n\nCan you say more about the fragility? I did not get it. Thanks.", "creation_time": "2011-02-22T18:16:24Z", "raw_text": "(In reply to comment #1)\n> This isn't performance-sensitive code, though.  And it introduces some\n> fragility, because it assumes things about the type of the href attr, right?\n\nCan you say more about the fragility? I did not get it. Thanks.", "id": 5296164}, {"id": 5296182, "raw_text": "GetStringValue() will assert and crash if the type of the attribute is not eString.  See the implementation in nsAttrValue.cpp.", "creation_time": "2011-02-22T18:22:31Z", "is_private": false, "text": "GetStringValue() will assert and crash if the type of the attribute is not eString.  See the implementation in nsAttrValue.cpp.", "count": 3, "time": "2011-02-22T18:22:31Z", "creator": "bzbarsky@mit.edu", "tags": [], "bug_id": 635832, "attachment_id": null, "author": "bzbarsky@mit.edu"}, {"raw_text": "Hmm, I don't think this is saving any cycles. Whatever happen we will always use string: if |doc| isn't null, we will call |nsContentUtils::NewURIWithDocumentCharset| and if it is, |uri| will be null so we will call |aValue = href|. Even if |href| is used in two different blocks, we will always go in at least one of them, aren't we?", "id": 5297209, "text": "Hmm, I don't think this is saving any cycles. Whatever happen we will always use string: if |doc| isn't null, we will call |nsContentUtils::NewURIWithDocumentCharset| and if it is, |uri| will be null so we will call |aValue = href|. Even if |href| is used in two different blocks, we will always go in at least one of them, aren't we?", "creation_time": "2011-02-22T22:57:58Z", "is_private": false, "bug_id": 635832, "time": "2011-02-22T22:57:58Z", "count": 4, "creator": "mounir@lamouri.fr", "tags": [], "author": "mounir@lamouri.fr", "attachment_id": null}, {"is_private": false, "creation_time": "2011-02-22T23:48:14Z", "text": "There are costs to constructing the |href| string and possibly to copying data into it and out of it.  So if this were on a hot path, like @href on <a>, we'd want to avoid those costs.", "id": 5297337, "raw_text": "There are costs to constructing the |href| string and possibly to copying data into it and out of it.  So if this were on a hot path, like @href on <a>, we'd want to avoid those costs.", "count": 5, "time": "2011-02-22T23:48:14Z", "creator": "bzbarsky@mit.edu", "tags": [], "bug_id": 635832, "attachment_id": null, "author": "bzbarsky@mit.edu"}, {"bug_id": 635832, "creator": "mounir@lamouri.fr", "count": 6, "tags": [], "raw_text": "(In reply to comment #5)\n> There are costs to constructing the |href| string and possibly to copying data\n> into it and out of it.  So if this were on a hot path, like @href on <a>, we'd\n> want to avoid those costs.\n\nThat's a cost we just can't avoid given that it seems like we are always using href.", "id": 5297350, "text": "(In reply to comment #5)\n> There are costs to constructing the |href| string and possibly to copying data\n> into it and out of it.  So if this were on a hot path, like @href on <a>, we'd\n> want to avoid those costs.\n\nThat's a cost we just can't avoid given that it seems like we are always using href.", "creation_time": "2011-02-22T23:55:51Z", "author": "mounir@lamouri.fr", "time": "2011-02-22T23:55:51Z", "is_private": false, "attachment_id": null}, {"is_private": false, "time": "2011-02-23T08:45:18Z", "attachment_id": null, "id": 5298011, "raw_text": "(In reply to comment #3)\n> GetStringValue() will assert and crash if the type of the attribute is not\n> eString.  See the implementation in nsAttrValue.cpp.\n\nI saw three cases where\n    const nsAttrValue* href = mAttrsAndChildren.GetAttr(nsGkAtoms::href,\n                                                        kNameSpaceID_XLink);\nis used.\n\nSo is it because in this case kNameSpaceID_None is used but not kNameSpaceID_XLink, and then hrefAttrValue->GetStringValue() may crash?\n\nIn the old bug 267506 patch, kNameSpaceID_None is used there. Does this mean it is also wrong in that patch? If it is, is there any bug report related to this?", "creation_time": "2011-02-23T08:45:18Z", "text": "(In reply to comment #3)\n> GetStringValue() will assert and crash if the type of the attribute is not\n> eString.  See the implementation in nsAttrValue.cpp.\n\nI saw three cases where\n    const nsAttrValue* href = mAttrsAndChildren.GetAttr(nsGkAtoms::href,\n                                                        kNameSpaceID_XLink);\nis used.\n\nSo is it because in this case kNameSpaceID_None is used but not kNameSpaceID_XLink, and then hrefAttrValue->GetStringValue() may crash?\n\nIn the old bug 267506 patch, kNameSpaceID_None is used there. Does this mean it is also wrong in that patch? If it is, is there any bug report related to this?", "tags": [], "creator": "jingl1345@gmail.com", "count": 7, "bug_id": 635832, "author": "jingl1345@gmail.com"}, {"attachment_id": null, "is_private": false, "time": "2011-02-23T14:33:17Z", "author": "bzbarsky@mit.edu", "raw_text": "It's ok to use the typed getters on nsAttrValue if you know the type of the attribute.\n\nThe type of xlink:href is eString (which is the default attribute type).\n\nThe worries arise in HTML for various \"special\" attributes, because some of them are parsed as different types.\n\nIn bug 267506, the code is very careful to parse the attribute as the right type.", "id": 5298413, "text": "It's ok to use the typed getters on nsAttrValue if you know the type of the attribute.\n\nThe type of xlink:href is eString (which is the default attribute type).\n\nThe worries arise in HTML for various \"special\" attributes, because some of them are parsed as different types.\n\nIn bug 267506, the code is very careful to parse the attribute as the right type.", "creation_time": "2011-02-23T14:33:17Z", "bug_id": 635832, "tags": [], "count": 8, "creator": "bzbarsky@mit.edu"}, {"count": 9, "time": "2011-02-23T23:28:35Z", "creator": "jingl1345@gmail.com", "tags": [], "bug_id": 635832, "is_private": false, "creation_time": "2011-02-23T23:28:35Z", "text": "(In reply to comment #8)\n> In bug 267506, the code is very careful to parse the attribute as the right\n> type.\n\nCan you say more about how the old code parse the attribute as the right type? I am new to Mozilla code, so I have some trouble to understand this.\n\nI compared nsGenericHTMLElement::GetHrefURIForAnchors() in the latest 4.0b11 version and the version mentioned in the bug 267506, and noticed that in the latest version it is using GetURIAttr(...) rather than GetAttr(...), does this means that whenever nsGenericHTMLElement::GetHrefURIForAnchors() is called, the caller knows the attribute is for URI and thus the type of the attribute?\n\nThanks.", "id": 5300222, "raw_text": "(In reply to comment #8)\n> In bug 267506, the code is very careful to parse the attribute as the right\n> type.\n\nCan you say more about how the old code parse the attribute as the right type? I am new to Mozilla code, so I have some trouble to understand this.\n\nI compared nsGenericHTMLElement::GetHrefURIForAnchors() in the latest 4.0b11 version and the version mentioned in the bug 267506, and noticed that in the latest version it is using GetURIAttr(...) rather than GetAttr(...), does this means that whenever nsGenericHTMLElement::GetHrefURIForAnchors() is called, the caller knows the attribute is for URI and thus the type of the attribute?\n\nThanks.", "attachment_id": null, "author": "jingl1345@gmail.com"}, {"attachment_id": null, "author": "bzbarsky@mit.edu", "creation_time": "2011-02-24T01:44:42Z", "is_private": false, "text": "> Can you say more about how the old code parse the attribute as the right type?\n\nElement classes are responsible for parsing their own attributes (see the various ParseAttribute implementations).\n\n> and noticed that in the latest version it is using GetURIAttr(...)\n\nWhich actually just does a GetStringValue() on the nsAttrValue.  Anything that wants to use this function needs to make sure to parse as a string.", "id": 5300565, "raw_text": "> Can you say more about how the old code parse the attribute as the right type?\n\nElement classes are responsible for parsing their own attributes (see the various ParseAttribute implementations).\n\n> and noticed that in the latest version it is using GetURIAttr(...)\n\nWhich actually just does a GetStringValue() on the nsAttrValue.  Anything that wants to use this function needs to make sure to parse as a string.", "creator": "bzbarsky@mit.edu", "tags": [], "time": "2011-02-24T01:44:42Z", "count": 10, "bug_id": 635832}, {"text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "creation_time": "2018-06-29T04:58:56Z", "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "id": 13436777, "bug_id": 635832, "count": 11, "tags": [], "creator": "bug-husbandry-bot@mozilla.bugs", "author": "bug-husbandry-bot@mozilla.bugs", "is_private": false, "time": "2018-06-29T04:58:56Z", "attachment_id": null}]}}, "comments": {}}