{"comments": {}, "bugs": {"712478": {"comments": [{"author": "taras.mozilla@glek.net", "count": 0, "text": "When the user is interacting with Firefox, it would be helpful to try to suspend cycle-collection, limit events on background pages, etc.", "creator": "taras.mozilla@glek.net", "is_private": false, "creation_time": "2011-12-20T23:42:28Z", "id": 5931248, "bug_id": 712478, "attachment_id": null, "raw_text": "When the user is interacting with Firefox, it would be helpful to try to suspend cycle-collection, limit events on background pages, etc.", "time": "2011-12-20T23:42:28Z", "tags": []}, {"creation_time": "2012-01-05T21:07:44Z", "is_private": false, "creator": "bugs@pettay.fi", "tags": [], "attachment_id": null, "bug_id": 712478, "id": 5958416, "author": "bugs@pettay.fi", "text": "This is what we did in FF3.x for CC and we have still user-interaction-active/user-interaction-inactive\nnotifications.", "count": 1, "time": "2012-01-05T21:07:44Z", "raw_text": "This is what we did in FF3.x for CC and we have still user-interaction-active/user-interaction-inactive\nnotifications."}, {"attachment_id": null, "raw_text": "(In reply to Olli Pettay [:smaug] from comment #1)\n> This is what we did in FF3.x for CC and we have still\n> user-interaction-active/user-interaction-inactive\n> notifications.\n\nIs there a way we can poll for this? ie while making a decision on whether to run gc or postpone it.\n\nI think this should be a tri-state:\nUser-inactive - proceed as normal\nUser-might-interact - try to avoid scheduling activities in near future(perhaps bump set-timeouts on background tabs)\nUser-interacting - suspend all possible gc, cc, settimeout/xmlhttprequest/etc on background tabs, etc.", "time": "2012-01-05T21:20:32Z", "tags": [], "author": "taras.mozilla@glek.net", "count": 2, "text": "(In reply to Olli Pettay [:smaug] from comment #1)\n> This is what we did in FF3.x for CC and we have still\n> user-interaction-active/user-interaction-inactive\n> notifications.\n\nIs there a way we can poll for this? ie while making a decision on whether to run gc or postpone it.\n\nI think this should be a tri-state:\nUser-inactive - proceed as normal\nUser-might-interact - try to avoid scheduling activities in near future(perhaps bump set-timeouts on background tabs)\nUser-interacting - suspend all possible gc, cc, settimeout/xmlhttprequest/etc on background tabs, etc.", "creator": "taras.mozilla@glek.net", "creation_time": "2012-01-05T21:20:32Z", "is_private": false, "id": 5958462, "bug_id": 712478}, {"creator": "bugs@pettay.fi", "count": 3, "text": "(You can't suspend active xmlhttprequest)\n\nCurrently there is no way to poll the state. But that could be added easily.\n\nuser-interaction-active/user-interaction-inactive are sent based on whether user has \ncaused any key or mouse events during last 5 seconds.\n\nNote, my aim is to drop CC times to way lower than they are now.\nI don't know what is happening with GC (which aren't often manually triggered).\nI see GC time usually 3x a long as CC time. (well, atm GC is 5x CC )\nI don't know how we could not GC so often.", "author": "bugs@pettay.fi", "bug_id": 712478, "id": 5958524, "is_private": false, "creation_time": "2012-01-05T21:31:30Z", "time": "2012-01-05T21:31:30Z", "raw_text": "(You can't suspend active xmlhttprequest)\n\nCurrently there is no way to poll the state. But that could be added easily.\n\nuser-interaction-active/user-interaction-inactive are sent based on whether user has \ncaused any key or mouse events during last 5 seconds.\n\nNote, my aim is to drop CC times to way lower than they are now.\nI don't know what is happening with GC (which aren't often manually triggered).\nI see GC time usually 3x a long as CC time. (well, atm GC is 5x CC )\nI don't know how we could not GC so often.", "attachment_id": null, "tags": []}, {"raw_text": "I'd prefer to frame this not as \"is the user interacting?\" but as \"how important is frame rate, right now?\"  To ensure we can pick the \"least bad\" time to GC in a variety of situations, I think we'll need multiple tiers.\n\nT1: User is interacting with something that animates.\n* Scrolling\n* Dragging tabs\n\nT2: Something is animating.\n* A video is playing and visible.\n* A tab is closing.\n\nT3: User input is imminent.\n* A key is held down.\n* A mouse button is held down.\n* There has been user input in the last second.\n\nT4: User input is likely.\n* There has been user input in the last 5 seconds.", "attachment_id": null, "time": "2012-01-06T08:10:09Z", "tags": [], "count": 4, "text": "I'd prefer to frame this not as \"is the user interacting?\" but as \"how important is frame rate, right now?\"  To ensure we can pick the \"least bad\" time to GC in a variety of situations, I think we'll need multiple tiers.\n\nT1: User is interacting with something that animates.\n* Scrolling\n* Dragging tabs\n\nT2: Something is animating.\n* A video is playing and visible.\n* A tab is closing.\n\nT3: User input is imminent.\n* A key is held down.\n* A mouse button is held down.\n* There has been user input in the last second.\n\nT4: User input is likely.\n* There has been user input in the last 5 seconds.", "author": "jruderman@gmail.com", "creator": "jruderman@gmail.com", "creation_time": "2012-01-06T08:10:09Z", "is_private": false, "id": 5959861, "bug_id": 712478}, {"count": 5, "text": "Maybe I'm over engineering this but perhaps instead of having hard rules like 'Don't do X while Y' with a bit more effort we could try to quantity the cost/benefit of an operation and only do it once we get over a certain threshold.\n\nWhatever we do we need I think we need to be careful not to allow state(s) in which GC will never run because some users may spend a larger time in those states in certain edge cases that we anticipate thus allowing memory to increase dramatically.", "author": "b56girard@gmail.com", "id": 5967261, "bug_id": 712478, "time": "2012-01-10T00:35:27Z", "raw_text": "Maybe I'm over engineering this but perhaps instead of having hard rules like 'Don't do X while Y' with a bit more effort we could try to quantity the cost/benefit of an operation and only do it once we get over a certain threshold.\n\nWhatever we do we need I think we need to be careful not to allow state(s) in which GC will never run because some users may spend a larger time in those states in certain edge cases that we anticipate thus allowing memory to increase dramatically.", "creator": "b56girard@gmail.com", "is_private": false, "creation_time": "2012-01-10T00:35:27Z", "attachment_id": null, "tags": []}, {"bug_id": 712478, "id": 5968166, "creation_time": "2012-01-10T10:33:58Z", "is_private": false, "creator": "bugs@pettay.fi", "author": "bugs@pettay.fi", "text": "I don't think that is a problem with GC since JS eng will just call GC when needed.\nWith CC it could be a problem. In FF3.x CC just run with lower probability if \nuser was interacting with the browser.\n\nBut, if the becoming fixes to CC handling work as well as they do for me, we wouldn't, IMO, need to\nchange CC handling frequency because of user activity.\nHowever we should certainly postpone any mainthread I/O to the times when user is inactive.", "count": 6, "tags": [], "time": "2012-01-10T10:33:58Z", "attachment_id": null, "raw_text": "I don't think that is a problem with GC since JS eng will just call GC when needed.\nWith CC it could be a problem. In FF3.x CC just run with lower probability if \nuser was interacting with the browser.\n\nBut, if the becoming fixes to CC handling work as well as they do for me, we wouldn't, IMO, need to\nchange CC handling frequency because of user activity.\nHowever we should certainly postpone any mainthread I/O to the times when user is inactive."}, {"is_private": false, "creation_time": "2012-01-10T10:56:25Z", "bug_id": 712478, "id": 5968184, "text": "From the point of view of the markup parsers, the question isn't \"Is it OK to do work now?\" The question is \"Given that I'm doing some work now, should I keep doing some more pending work or should I return to the event loop early?\"\n\nnsContentSink and interruptible reflow currently end up calling nsIWidget::HasPendingInputEvent(), which seems to answer roughly the right question, except it seems it doesn't answer the question on Mac. (From reading the source, it is unclear to me if on Windows mouse moves cause nsIWidget::HasPendingInputEvent() to return true when no mouse button is pressed.)\n\nMaybe nsIWidget::HasPendingInputEvent() is already the right thing although it would be nicer to have the API on nsContentUtils instead of having to obtain nsIWidget from behind a couple of layers of indirection.", "count": 7, "author": "hsivonen@mozilla.com", "creator": "hsivonen@mozilla.com", "tags": [], "raw_text": "From the point of view of the markup parsers, the question isn't \"Is it OK to do work now?\" The question is \"Given that I'm doing some work now, should I keep doing some more pending work or should I return to the event loop early?\"\n\nnsContentSink and interruptible reflow currently end up calling nsIWidget::HasPendingInputEvent(), which seems to answer roughly the right question, except it seems it doesn't answer the question on Mac. (From reading the source, it is unclear to me if on Windows mouse moves cause nsIWidget::HasPendingInputEvent() to return true when no mouse button is pressed.)\n\nMaybe nsIWidget::HasPendingInputEvent() is already the right thing although it would be nicer to have the API on nsContentUtils instead of having to obtain nsIWidget from behind a couple of layers of indirection.", "attachment_id": null, "time": "2012-01-10T10:56:25Z"}, {"count": 8, "text": "Exposing this on nsContentUtils would make a lot of sense to me.", "author": "jstenback+bmo@gmail.com", "creator": "jstenback+bmo@gmail.com", "is_private": false, "creation_time": "2012-01-11T02:52:45Z", "bug_id": 712478, "id": 5970951, "raw_text": "Exposing this on nsContentUtils would make a lot of sense to me.", "attachment_id": null, "time": "2012-01-11T02:52:45Z", "tags": []}, {"id": 6097025, "bug_id": 712478, "author": "avihpit@yahoo.com", "text": "I think that a global \"is user needs responsiveness\" flag would suffice (without higher resolution states).\n\nSince snappy aims at 100ms hangs at most (if I understand correctly), and assuming it's successful at that, I believe that such single global flag would eliminate the vast majority of related issues. Only if it doesn't, then a higher resolution (and complexity) approach should be considered IMHO.\n\nFew suggestions:\n\n1. Expose this functionality to Addons (both to poll/notified of this flag, and to affect it).\n\n2. To not accidentally release this flag just when a user starts interaction again, release it on a timer (750ms? 7500ms?) after last known activity (and this timer gets extended on any new activity).\n\n3. A simple API might be SetInteractingNow() (possibly called from many UI-related modules) and IsInteracting() (and possibly also a notification), combined with a timer from #2 above.\n\nModules who watch this flag can have for themselves a domain-specific threshold, after which the action will be taken regardless of this flag (however, I'd guess that on most cases this could hopefully be quite long).", "count": 9, "time": "2012-02-27T22:33:39Z", "raw_text": "I think that a global \"is user needs responsiveness\" flag would suffice (without higher resolution states).\n\nSince snappy aims at 100ms hangs at most (if I understand correctly), and assuming it's successful at that, I believe that such single global flag would eliminate the vast majority of related issues. Only if it doesn't, then a higher resolution (and complexity) approach should be considered IMHO.\n\nFew suggestions:\n\n1. Expose this functionality to Addons (both to poll/notified of this flag, and to affect it).\n\n2. To not accidentally release this flag just when a user starts interaction again, release it on a timer (750ms? 7500ms?) after last known activity (and this timer gets extended on any new activity).\n\n3. A simple API might be SetInteractingNow() (possibly called from many UI-related modules) and IsInteracting() (and possibly also a notification), combined with a timer from #2 above.\n\nModules who watch this flag can have for themselves a domain-specific threshold, after which the action will be taken regardless of this flag (however, I'd guess that on most cases this could hopefully be quite long).", "creation_time": "2012-02-27T22:33:39Z", "is_private": false, "creator": "avihpit@yahoo.com", "tags": [], "attachment_id": null}, {"creation_time": "2012-02-28T00:18:30Z", "is_private": false, "creator": "bugs@pettay.fi", "tags": [], "attachment_id": null, "id": 6097444, "bug_id": 712478, "author": "bugs@pettay.fi", "count": 10, "text": "Addons can use existing user-interaction-inactive/user-interaction-active notifications.", "time": "2012-02-28T00:18:30Z", "raw_text": "Addons can use existing user-interaction-inactive/user-interaction-active notifications."}, {"raw_text": "Re-assigning this to Bonnie, she's working on implementing a web-exposed idle API, and in doing that work she already has a helper on nsContentUtils that exposes whether the user is currently idle or not. My guess is that once bug 715041 is landed, we're done here as well.", "attachment_id": null, "time": "2012-03-01T01:31:18Z", "tags": [], "text": "Re-assigning this to Bonnie, she's working on implementing a web-exposed idle API, and in doing that work she already has a helper on nsContentUtils that exposes whether the user is currently idle or not. My guess is that once bug 715041 is landed, we're done here as well.", "count": 11, "author": "jstenback+bmo@gmail.com", "creator": "jstenback+bmo@gmail.com", "is_private": false, "creation_time": "2012-03-01T01:31:18Z", "id": 6104725, "bug_id": 712478}, {"count": 12, "text": "There is an IsUserIdle() function in nsContentUtils.cpp. This helper indicates whether the user is idle or not and will be available once the code has been committed.", "author": "bsurender@mozilla.com", "bug_id": 712478, "id": 6106520, "time": "2012-03-01T18:19:28Z", "raw_text": "There is an IsUserIdle() function in nsContentUtils.cpp. This helper indicates whether the user is idle or not and will be available once the code has been committed.", "creator": "bsurender@mozilla.com", "is_private": false, "creation_time": "2012-03-01T18:19:28Z", "attachment_id": null, "tags": []}, {"attachment_id": null, "tags": [], "creator": "taras.mozilla@glek.net", "creation_time": "2012-05-15T18:51:27Z", "is_private": false, "raw_text": "For a proof of concept we'll hang a the flag off nsIAppStartup and have scrolling + full screen invoke the interactive state.\n\nAs initial consumers of the service we'll look into session-store, idle* observers, thumbnail capture.", "time": "2012-05-15T18:51:27Z", "author": "taras.mozilla@glek.net", "text": "For a proof of concept we'll hang a the flag off nsIAppStartup and have scrolling + full screen invoke the interactive state.\n\nAs initial consumers of the service we'll look into session-store, idle* observers, thumbnail capture.", "count": 13, "bug_id": 712478, "id": 6309840}, {"author": "bugs@pettay.fi", "text": "nsIAppStartup sounds very strange place to add such flag.", "count": 14, "creator": "bugs@pettay.fi", "creation_time": "2012-05-15T19:24:34Z", "is_private": false, "id": 6309974, "bug_id": 712478, "attachment_id": null, "raw_text": "nsIAppStartup sounds very strange place to add such flag.", "time": "2012-05-15T19:24:34Z", "tags": []}, {"time": "2012-05-23T20:18:47Z", "attachment_id": null, "raw_text": "We are going to minus for now but please renom if we find it's a problem on real HW.", "tags": [], "creator": "smooney@mozilla.com", "author": "smooney@mozilla.com", "count": 15, "text": "We are going to minus for now but please renom if we find it's a problem on real HW.", "id": 6332394, "bug_id": 712478, "creation_time": "2012-05-23T20:18:47Z", "is_private": false}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2012-12-22T04:29:56Z", "creator": "mardeg@inbox.ru", "time": "2012-12-22T04:29:56Z", "raw_text": "", "bug_id": 712478, "id": 6939859, "text": "*** Bug 824204 has been marked as a duplicate of this bug. ***", "count": 16, "author": "mardeg@inbox.ru"}, {"time": "2013-02-01T17:49:10Z", "raw_text": "GC? I thought this was a problem with I/O.\n\nIn my experience, FF hangs most when fetching content from the cache.\n\nAlso will this only be fixed on Windows 7 on x86 arch?", "count": 17, "text": "GC? I thought this was a problem with I/O.\n\nIn my experience, FF hangs most when fetching content from the cache.\n\nAlso will this only be fixed on Windows 7 on x86 arch?", "author": "de.techno@gmail.com", "bug_id": 712478, "id": 7062120, "attachment_id": null, "tags": [], "creator": "de.techno@gmail.com", "is_private": false, "creation_time": "2013-02-01T17:49:10Z"}, {"creator": "avihpit@yahoo.com", "creation_time": "2014-06-26T15:24:24Z", "is_private": false, "attachment_id": null, "tags": [], "count": 18, "text": "(In reply to dE from comment #17)\n> GC? I thought this was a problem with I/O.\n> In my experience, FF hangs most when fetching content from the cache.\n> Also will this only be fixed on Windows 7 on x86 arch?\n\nProbably both. Cache issues are already greatly improved with Cache v2 which is already enabled by default on nightlies and should reach the release channel soon. I think it applies to all platforms.\n\n\nAs for GC/CC, I think I'll try to take this bug at some stage, and maybe also a derivative of it which will be pausing GC/CC during such activity if possible (i.e. as long as GC/CC can live with the lack of collections).\n\n(In reply to Taras Glek (:taras) from comment #0)\n> When the user is interacting with Firefox, it would be helpful to try to\n> suspend cycle-collection, limit events on background pages, etc.\n\n\"user is interacting\" is probably not the best correlation to what we care about here.\n\nThe reason we want to pause GC/CC is to increase responsiveness AND smoothness of stuff which happens on screen. The latter doesn't necessarily involve interactivity e.g. it also applies when there's some animation which doesn't involve user inputs.\n\nI'll probably approach the \"flag\" aspect of this bug with some heuristics on the recent frequency of the refresh driver iterations. The reasons being:\n\n1. GC/CC are main thread and therefore only hang the refresh driver and not off-main-thread animations (some CSS animations, video playback etc, async pan-zoom, etc)\n\n2. As long as the refresh driver iterates frequently, it means that GC/CC cycles may hurt smoothness.\n\n3. In case there are some user inputs which don't result in refresh driver iteration (e.g. maybe some mouse move or possibly APZC scroll, etc), the user won't notice GC/CC hangs anyway because there are no screen updates via the main thread.\n\nSo right now, recent refresh driver frequency (say, during the last 1-2-3 seconds) sounds to me like it could cover all the things we care about as far as GC/CC hangs go, and ignore exactly the things which we don't care about (off main thread display updates).\n\nI've kickstarted some telemetry collection on GC/CC hangs during UI animations at bug 1017055, though right now that's on my backlog.", "author": "avihpit@yahoo.com", "id": 8981945, "bug_id": 712478, "time": "2014-06-26T15:24:24Z", "raw_text": "(In reply to dE from comment #17)\n> GC? I thought this was a problem with I/O.\n> In my experience, FF hangs most when fetching content from the cache.\n> Also will this only be fixed on Windows 7 on x86 arch?\n\nProbably both. Cache issues are already greatly improved with Cache v2 which is already enabled by default on nightlies and should reach the release channel soon. I think it applies to all platforms.\n\n\nAs for GC/CC, I think I'll try to take this bug at some stage, and maybe also a derivative of it which will be pausing GC/CC during such activity if possible (i.e. as long as GC/CC can live with the lack of collections).\n\n(In reply to Taras Glek (:taras) from comment #0)\n> When the user is interacting with Firefox, it would be helpful to try to\n> suspend cycle-collection, limit events on background pages, etc.\n\n\"user is interacting\" is probably not the best correlation to what we care about here.\n\nThe reason we want to pause GC/CC is to increase responsiveness AND smoothness of stuff which happens on screen. The latter doesn't necessarily involve interactivity e.g. it also applies when there's some animation which doesn't involve user inputs.\n\nI'll probably approach the \"flag\" aspect of this bug with some heuristics on the recent frequency of the refresh driver iterations. The reasons being:\n\n1. GC/CC are main thread and therefore only hang the refresh driver and not off-main-thread animations (some CSS animations, video playback etc, async pan-zoom, etc)\n\n2. As long as the refresh driver iterates frequently, it means that GC/CC cycles may hurt smoothness.\n\n3. In case there are some user inputs which don't result in refresh driver iteration (e.g. maybe some mouse move or possibly APZC scroll, etc), the user won't notice GC/CC hangs anyway because there are no screen updates via the main thread.\n\nSo right now, recent refresh driver frequency (say, during the last 1-2-3 seconds) sounds to me like it could cover all the things we care about as far as GC/CC hangs go, and ignore exactly the things which we don't care about (off main thread display updates).\n\nI've kickstarted some telemetry collection on GC/CC hangs during UI animations at bug 1017055, though right now that's on my backlog."}]}}}