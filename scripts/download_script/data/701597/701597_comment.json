{"bugs": {"701597": {"comments": [{"time": "2011-11-11T01:19:32Z", "raw_text": "+++ This bug was initially created as a clone of Bug #413947 +++\n\nThis is an idea for being able to store no-store HTTP resources in the HTTP disk cache safely. This would allow us to avoid using the memory cache at all on mobile. The encryption/decryption overhead should be minimal.\n\n1. Every time we are run, generate an encryption key that lives only in memory.\n2. Encrypt the cache key using that key when doing writes/reads to/from the cache.\n3. Before writing the cache entries to disk, encrypt everything (including the headers, the body, and all the metadata derived from the URL, headers, and body) with the encryption key. Before reading, decrypt.\n4. Purge the encrypted entries on shutdown, and purge entries encrypted by previous sessions on startup.\n\nSome operating systems (Windows, and maybe Mac OS X) have APIs for doing per-session encryption like this. Alternatively, we can do this using just NSS.", "text": "+++ This bug was initially created as a clone of Bug #413947 +++\n\nThis is an idea for being able to store no-store HTTP resources in the HTTP disk cache safely. This would allow us to avoid using the memory cache at all on mobile. The encryption/decryption overhead should be minimal.\n\n1. Every time we are run, generate an encryption key that lives only in memory.\n2. Encrypt the cache key using that key when doing writes/reads to/from the cache.\n3. Before writing the cache entries to disk, encrypt everything (including the headers, the body, and all the metadata derived from the URL, headers, and body) with the encryption key. Before reading, decrypt.\n4. Purge the encrypted entries on shutdown, and purge entries encrypted by previous sessions on startup.\n\nSome operating systems (Windows, and maybe Mac OS X) have APIs for doing per-session encryption like this. Alternatively, we can do this using just NSS.", "count": 0, "author": "brian@briansmith.org", "id": 5841901, "bug_id": 701597, "attachment_id": null, "tags": [], "creator": "brian@briansmith.org", "creation_time": "2011-11-11T01:19:32Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "jduell.mcbugs@gmail.com", "is_private": false, "creation_time": "2011-11-11T19:55:50Z", "raw_text": "> This would allow us to avoid using the memory cache at all on mobile.\n\nI don't understand the point of this.  The memory cache is much faster than disk, and that shows up more on mobile than desktop.  Right now I think our problem is that we don't use the memory cache *enough* on mobile (we go straight to disk for anything expect no-store IIRC), and we should implement some sort of \"go to RAM first, and when evicted store it on disk\" strategy (aka bug 602611).   If that's true (and Nick & co are in a better place to give out the perf stats to determine this), then it's not worth putting the effort into supporting no-cache encrypted on disk AFAICT.\n\nIn the interim we might be able to get away with making the memory cache quite small (to avoid the stale entry problem mentioned in bug 413947 comment 8).\n\nI'm restoring the dependency on bug 413947, because it still seems to me that the only reason for doing this would be to preserve no-cache entries when we flush the memory cache on mobile.  And it would probably be worth doing some telemetry to see what % of entries would actually get lost w/o this fix, and how expensive it would be to refetch them (vs fetch off disk and decrypt).  Seems likely to be an edge case that's not worth the extra software work/complexity?", "time": "2011-11-11T19:55:50Z", "count": 1, "text": "> This would allow us to avoid using the memory cache at all on mobile.\n\nI don't understand the point of this.  The memory cache is much faster than disk, and that shows up more on mobile than desktop.  Right now I think our problem is that we don't use the memory cache *enough* on mobile (we go straight to disk for anything expect no-store IIRC), and we should implement some sort of \"go to RAM first, and when evicted store it on disk\" strategy (aka bug 602611).   If that's true (and Nick & co are in a better place to give out the perf stats to determine this), then it's not worth putting the effort into supporting no-cache encrypted on disk AFAICT.\n\nIn the interim we might be able to get away with making the memory cache quite small (to avoid the stale entry problem mentioned in bug 413947 comment 8).\n\nI'm restoring the dependency on bug 413947, because it still seems to me that the only reason for doing this would be to preserve no-cache entries when we flush the memory cache on mobile.  And it would probably be worth doing some telemetry to see what % of entries would actually get lost w/o this fix, and how expensive it would be to refetch them (vs fetch off disk and decrypt).  Seems likely to be an edge case that's not worth the extra software work/complexity?", "author": "jduell.mcbugs@gmail.com", "id": 5843353, "bug_id": 701597}, {"attachment_id": null, "tags": [], "creator": "justin.lebar+bug@gmail.com", "is_private": false, "creation_time": "2011-11-14T03:24:37Z", "raw_text": "Do we have any idea how big the necko memory cache can get on mobile?  This would help us triage the bug for memshrink.\n\nOn my desktop, it's only 750kb, but maybe I'm not on enough secure sites.  Maybe we should add telemetry for this, if we don't already have it?", "time": "2011-11-14T03:24:37Z", "author": "justin.lebar+bug@gmail.com", "text": "Do we have any idea how big the necko memory cache can get on mobile?  This would help us triage the bug for memshrink.\n\nOn my desktop, it's only 750kb, but maybe I'm not on enough secure sites.  Maybe we should add telemetry for this, if we don't already have it?", "count": 2, "id": 5846008, "bug_id": 701597}, {"count": 3, "text": "The max size for the memory cache for mobile is controlled by browser.cache.memory.capacity, currently set to 1 MB:\n\n http://mxr.mozilla.org/mozilla-central/source/mobile/app/mobile.js#99\n\n> Maybe we should add telemetry for this, if we don't already have it?\n\nbug 699409", "author": "jduell.mcbugs@gmail.com", "creator": "jduell.mcbugs@gmail.com", "is_private": false, "creation_time": "2011-11-14T22:21:19Z", "bug_id": 701597, "id": 5847864, "raw_text": "The max size for the memory cache for mobile is controlled by browser.cache.memory.capacity, currently set to 1 MB:\n\n http://mxr.mozilla.org/mozilla-central/source/mobile/app/mobile.js#99\n\n> Maybe we should add telemetry for this, if we don't already have it?\n\nbug 699409", "attachment_id": null, "time": "2011-11-14T22:21:19Z", "tags": []}, {"raw_text": "Whoops, I was wrong about the bug # (that was disk cache).  Added bug 702438.", "attachment_id": null, "time": "2011-11-14T22:30:27Z", "tags": [], "count": 4, "text": "Whoops, I was wrong about the bug # (that was disk cache).  Added bug 702438.", "author": "jduell.mcbugs@gmail.com", "creator": "jduell.mcbugs@gmail.com", "is_private": false, "creation_time": "2011-11-14T22:30:27Z", "id": 5847901, "bug_id": 701597}, {"text": "Why store things encrypted on disk? we should write them out, mmap and unlink() the file. This will let os the delete the file when we quit and let it swap it out under memory pressure.", "count": 5, "author": "taras.mozilla@glek.net", "creator": "taras.mozilla@glek.net", "creation_time": "2011-11-15T22:29:36Z", "is_private": false, "bug_id": 701597, "id": 5850704, "raw_text": "Why store things encrypted on disk? we should write them out, mmap and unlink() the file. This will let os the delete the file when we quit and let it swap it out under memory pressure.", "attachment_id": null, "time": "2011-11-15T22:29:36Z", "tags": []}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2012-01-11T22:53:12Z", "creator": "curtisk@mozilla.com", "time": "2012-01-11T22:53:12Z", "raw_text": "sec triage, no action", "bug_id": 701597, "id": 5973710, "author": "curtisk@mozilla.com", "count": 6, "text": "sec triage, no action"}, {"count": 7, "text": "Would these cache entries be used only for \"pinned\" uses, such as View Source and Save As?  (I assume they can't be revalidated with web sites.)  Can we destroy the key for a cache entry as soon as the cache entry is no longer pinned?", "author": "jruderman@gmail.com", "creator": "jruderman@gmail.com", "is_private": false, "creation_time": "2012-01-25T22:31:08Z", "id": 6009230, "bug_id": 701597, "raw_text": "Would these cache entries be used only for \"pinned\" uses, such as View Source and Save As?  (I assume they can't be revalidated with web sites.)  Can we destroy the key for a cache entry as soon as the cache entry is no longer pinned?", "attachment_id": null, "time": "2012-01-25T22:31:08Z", "tags": []}, {"raw_text": "sec traige, still waiting for action on this one", "time": "2012-02-22T22:22:10Z", "text": "sec traige, still waiting for action on this one", "count": 8, "author": "curtisk@mozilla.com", "bug_id": 701597, "id": 6084302, "attachment_id": null, "tags": [], "creator": "curtisk@mozilla.com", "is_private": false, "creation_time": "2012-02-22T22:22:10Z"}, {"id": 6160358, "bug_id": 701597, "creation_time": "2012-03-21T21:39:43Z", "is_private": false, "creator": "curtisk@mozilla.com", "author": "curtisk@mozilla.com", "text": "still waiting", "count": 9, "tags": [], "time": "2012-03-21T21:39:43Z", "attachment_id": null, "raw_text": "still waiting"}, {"is_private": false, "creation_time": "2017-09-13T18:40:32Z", "creator": "bug-husbandry-bot@mozilla.bugs", "tags": [], "attachment_id": null, "id": 12658962, "bug_id": 701597, "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "count": 10, "author": "bug-husbandry-bot@mozilla.bugs", "time": "2017-09-13T18:40:32Z", "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258"}]}}, "comments": {}}