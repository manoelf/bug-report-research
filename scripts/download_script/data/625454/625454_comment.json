{"bugs": {"625454": {"comments": [{"attachment_id": null, "bug_id": 625454, "tags": [], "author": "pwalton@mozilla.com", "count": 0, "raw_text": "When I resize the window rapidly, Firefox spends a lot of time processing events:\n\n\t0.0%\t66.5%\tAppKit\t           -[NSTitledFrame resizeWithEvent:]\n\t0.0%\t56.1%\tAppKit\t            -[NSWindow _setFrameCommon:display:stashSize:]\n\t0.0%\t9.6%\tAppKit\t            -[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:]\n\nOur frame rate drops to around 35 fps during this time.\n\nChrome doesn't do this: it spends essentially its time in the drawing code. This makes Chrome feel a lot faster when resizing. See this profile:\n\n\t0.0%\t66.9%\tAppKit\t                -[NSWindow setFrame:display:]\n\t0.0%\t1.2%\tFoundation\t                -[NSAutoreleasePool drain]\n\t0.0%\t0.9%\tAppKit\t                -[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:]", "creation_time": "2011-01-13T20:12:17Z", "creator": "pwalton@mozilla.com", "id": 5197432, "text": "When I resize the window rapidly, Firefox spends a lot of time processing events:\n\n\t0.0%\t66.5%\tAppKit\t           -[NSTitledFrame resizeWithEvent:]\n\t0.0%\t56.1%\tAppKit\t            -[NSWindow _setFrameCommon:display:stashSize:]\n\t0.0%\t9.6%\tAppKit\t            -[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:]\n\nOur frame rate drops to around 35 fps during this time.\n\nChrome doesn't do this: it spends essentially its time in the drawing code. This makes Chrome feel a lot faster when resizing. See this profile:\n\n\t0.0%\t66.9%\tAppKit\t                -[NSWindow setFrame:display:]\n\t0.0%\t1.2%\tFoundation\t                -[NSAutoreleasePool drain]\n\t0.0%\t0.9%\tAppKit\t                -[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:]", "time": "2011-01-13T20:12:17Z", "is_private": false}, {"id": 5197920, "text": "Created attachment 503623\nProposed patch.\n\nSo the problem here seems to be that -[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:] does, as part of some internal optimization (I guess?), this:\n\n[NSApp nextEventMatchingMask:NSLeftMouseUp |\nNSLeftMouseDragged untilDate:[NSDate distantFuture] inMode:NSEventTrackingRunLoopMode dequeue:YES];\n\nNotice the NSEventTrackingRunLoopMode. It's trying to get back only mouse-move or mouse-up events. Unfortunately, since our Gecko event source registers for kCFRunLoopCommonModes, it gets called here, and we do all sorts of event processing during performance-critical code inside Cocoa. The fix seems to be to register our event source in the kCFRunLoopDefaultMode only, so that it won't fire here and Cocoa can quickly return to processing the resize.", "time": "2011-01-13T22:31:31Z", "is_private": false, "creation_time": "2011-01-13T22:31:31Z", "creator": "pwalton@mozilla.com", "count": 1, "raw_text": "So the problem here seems to be that -[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:] does, as part of some internal optimization (I guess?), this:\n\n[NSApp nextEventMatchingMask:NSLeftMouseUp |\nNSLeftMouseDragged untilDate:[NSDate distantFuture] inMode:NSEventTrackingRunLoopMode dequeue:YES];\n\nNotice the NSEventTrackingRunLoopMode. It's trying to get back only mouse-move or mouse-up events. Unfortunately, since our Gecko event source registers for kCFRunLoopCommonModes, it gets called here, and we do all sorts of event processing during performance-critical code inside Cocoa. The fix seems to be to register our event source in the kCFRunLoopDefaultMode only, so that it won't fire here and Cocoa can quickly return to processing the resize.", "attachment_id": 503623, "bug_id": 625454, "tags": [], "author": "pwalton@mozilla.com"}, {"tags": [], "author": "pwalton@mozilla.com", "attachment_id": null, "bug_id": 625454, "raw_text": "Regression with this patch: Animations and transitions no longer occur while resizing (basically, we're starved for events). Neither Chrome nor Safari do this.", "count": 2, "creator": "pwalton@mozilla.com", "creation_time": "2011-01-13T22:45:23Z", "id": 5197965, "text": "Regression with this patch: Animations and transitions no longer occur while resizing (basically, we're starved for events). Neither Chrome nor Safari do this.", "time": "2011-01-13T22:45:23Z", "is_private": false}, {"is_private": false, "id": 5198020, "text": "> Regression with this patch: Animations and transitions no longer\n> occur while resizing (basically, we're starved for events). Neither\n> Chrome nor Safari do this.\n\nThis is exactly what I would have expected.  So your patch probably\nisn't acceptable on its own.\n\nI'm not sure what additional work (in addition to your patch) would be\nneeded to avoid this ... or whether it would be possible to avoid it\nand still improve event-handling performance (over what it is now).\n\nThe basic problem (and this is true on all platforms) is that we have\n(in effect) two event loops -- a Gecko one and a \"native\" one.  So\neither one can starve the other, and we need to be careful to avoid\nthis (much of the code in nsBaseAppShell.cpp is devoted to this\npurpose).\n\nSafari and Chrome (like all WebKit browsers) somehow get away with\nhaving a single event loop (or at least on OS X they do).  Which is\nprobably good for performance.  But it would be difficult for us (with\nour much greater commitment to working on multiple platforms) to do\nthe same.", "time": "2011-01-13T22:59:32Z", "creator": "smichaud@pobox.com", "creation_time": "2011-01-13T22:59:32Z", "raw_text": "> Regression with this patch: Animations and transitions no longer\n> occur while resizing (basically, we're starved for events). Neither\n> Chrome nor Safari do this.\n\nThis is exactly what I would have expected.  So your patch probably\nisn't acceptable on its own.\n\nI'm not sure what additional work (in addition to your patch) would be\nneeded to avoid this ... or whether it would be possible to avoid it\nand still improve event-handling performance (over what it is now).\n\nThe basic problem (and this is true on all platforms) is that we have\n(in effect) two event loops -- a Gecko one and a \"native\" one.  So\neither one can starve the other, and we need to be careful to avoid\nthis (much of the code in nsBaseAppShell.cpp is devoted to this\npurpose).\n\nSafari and Chrome (like all WebKit browsers) somehow get away with\nhaving a single event loop (or at least on OS X they do).  Which is\nprobably good for performance.  But it would be difficult for us (with\nour much greater commitment to working on multiple platforms) to do\nthe same.", "count": 3, "tags": [], "author": "smichaud@pobox.com", "attachment_id": null, "bug_id": 625454}, {"creation_time": "2011-01-13T23:06:54Z", "attachment_id": null, "bug_id": 625454, "tags": [], "creator": "smichaud@pobox.com", "author": "smichaud@pobox.com", "count": 4, "is_private": false, "raw_text": "What with all the weird bugs I've been dealing with, and my work to\nmake my Java Embedding Plugin compatible with FF4, I've had very\nlittle time to spend looking for OS-X performance enhancements.\n\nBut I suspect better performance can be wrung out of the OS X appshell\ncode, and I really would like to spend a couple of weeks trying to do\nthat.  This will (of course) only be feasible after the FF4 release.", "id": 5198048, "text": "What with all the weird bugs I've been dealing with, and my work to\nmake my Java Embedding Plugin compatible with FF4, I've had very\nlittle time to spend looking for OS-X performance enhancements.\n\nBut I suspect better performance can be wrung out of the OS X appshell\ncode, and I really would like to spend a couple of weeks trying to do\nthat.  This will (of course) only be feasible after the FF4 release.", "time": "2011-01-13T23:06:54Z"}, {"tags": [], "author": "smichaud@pobox.com", "attachment_id": null, "bug_id": 625454, "raw_text": "> couple of weeks\n\nLet's be more realistic -- a couple of months :-)", "count": 5, "creator": "smichaud@pobox.com", "creation_time": "2011-01-13T23:26:12Z", "id": 5198137, "text": "> couple of weeks\n\nLet's be more realistic -- a couple of months :-)", "time": "2011-01-13T23:26:12Z", "is_private": false}, {"time": "2011-01-14T00:55:37Z", "text": "Created attachment 503683\nProposed patch, version 2.\n\nHow about this? This one only blocks native events if we're in event tracking mode. Most of the performance problems are due to calling -[NSApplication nextEventMatchingMask:] inside the nested event loop. With this patch, the performance is better, and animations and JS still run during resize.", "id": 5198528, "is_private": false, "creation_time": "2011-01-14T00:55:37Z", "creator": "pwalton@mozilla.com", "count": 6, "raw_text": "How about this? This one only blocks native events if we're in event tracking mode. Most of the performance problems are due to calling -[NSApplication nextEventMatchingMask:] inside the nested event loop. With this patch, the performance is better, and animations and JS still run during resize.", "bug_id": 625454, "attachment_id": 503683, "author": "pwalton@mozilla.com", "tags": []}, {"time": "2011-01-14T08:21:26Z", "text": "The patch looks good to me, except that alwaysBlockNative should be aAlwaysBlockNative.", "id": 5199218, "is_private": false, "creation_time": "2011-01-14T08:21:26Z", "creator": "mstange.moz@gmail.com", "count": 7, "raw_text": "The patch looks good to me, except that alwaysBlockNative should be aAlwaysBlockNative.", "bug_id": 625454, "attachment_id": null, "author": "mstange.moz@gmail.com", "tags": []}, {"is_private": false, "time": "2011-01-14T16:09:38Z", "id": 5199880, "text": "Comment on attachment 503683\nProposed patch, version 2.\n\nThis looks more promising than your previous patch, but I need to\nspend several hours with it.  I should probably have time Monday or\nTuesday of next week.\n\nHow, precisely, have you been measuring performance?  (For example,\nhow did you get your figures from comment #0?)  I want to be able to\nreproduce your results, and do my own testing.", "creator": "smichaud@pobox.com", "creation_time": "2011-01-14T16:09:38Z", "raw_text": "This looks more promising than your previous patch, but I need to\nspend several hours with it.  I should probably have time Monday or\nTuesday of next week.\n\nHow, precisely, have you been measuring performance?  (For example,\nhow did you get your figures from comment #0?)  I want to be able to\nreproduce your results, and do my own testing.", "count": 8, "author": "smichaud@pobox.com", "tags": [], "bug_id": 625454, "attachment_id": 503683}, {"bug_id": 625454, "attachment_id": null, "author": "pwalton@mozilla.com", "tags": [], "count": 9, "raw_text": "(In reply to comment #8)\n> Comment on attachment 503683 [details]\n> Proposed patch, version 2.\n> \n> This looks more promising than your previous patch, but I need to\n> spend several hours with it.  I should probably have time Monday or\n> Tuesday of next week.\n> \n> How, precisely, have you been measuring performance?  (For example,\n> how did you get your figures from comment #0?)  I want to be able to\n> reproduce your results, and do my own testing.\n\nMy frame rate monitor here: https://github.com/pcwalton/firefox-framerate-monitor\n\nSpecifically, I've found the Shark integration useful for finding these things.", "creation_time": "2011-01-14T16:13:44Z", "creator": "pwalton@mozilla.com", "is_private": false, "time": "2011-01-14T16:13:44Z", "text": "(In reply to comment #8)\n> Comment on attachment 503683 [details]\n> Proposed patch, version 2.\n> \n> This looks more promising than your previous patch, but I need to\n> spend several hours with it.  I should probably have time Monday or\n> Tuesday of next week.\n> \n> How, precisely, have you been measuring performance?  (For example,\n> how did you get your figures from comment #0?)  I want to be able to\n> reproduce your results, and do my own testing.\n\nMy frame rate monitor here: https://github.com/pcwalton/firefox-framerate-monitor\n\nSpecifically, I've found the Shark integration useful for finding these things.", "id": 5199898}, {"attachment_id": 503683, "bug_id": 625454, "tags": [], "author": "smichaud@pobox.com", "count": 10, "raw_text": "I've now done at least basic testing on this patch.  What I've found\nindicates that it doesn't do any significant harm, and that (under\ncertain circumstances) it delivers a significant performance\nimprovement -- perhaps about 10%.\n\nMy performance tests were all done in Shark.  I'll have more to say\nabout them in a later comment.\n\nI wasn't able to get usable results with Patrick's framerate monitor\n(possibly because I don't fully understand what it does, or how to use\nit):  When testing with the Starfield animation at\nhttp://arapehlivanian.com/wp-content/uploads/2007/02/canvas.html, I\nsaw the framerate actually increase when I started resizing the\nbrowser window!\n\nMy other tests showed that animations can be blocked during window\nresize.  But this happens with or without the patch, and also happens\nin Safari.  More about this in a later comment.\n\n> alwaysBlockNative should be aAlwaysBlockNative\n\nI agree with Markus.", "creation_time": "2011-01-19T18:30:09Z", "creator": "smichaud@pobox.com", "id": 5210998, "text": "Comment on attachment 503683\nProposed patch, version 2.\n\nI've now done at least basic testing on this patch.  What I've found\nindicates that it doesn't do any significant harm, and that (under\ncertain circumstances) it delivers a significant performance\nimprovement -- perhaps about 10%.\n\nMy performance tests were all done in Shark.  I'll have more to say\nabout them in a later comment.\n\nI wasn't able to get usable results with Patrick's framerate monitor\n(possibly because I don't fully understand what it does, or how to use\nit):  When testing with the Starfield animation at\nhttp://arapehlivanian.com/wp-content/uploads/2007/02/canvas.html, I\nsaw the framerate actually increase when I started resizing the\nbrowser window!\n\nMy other tests showed that animations can be blocked during window\nresize.  But this happens with or without the patch, and also happens\nin Safari.  More about this in a later comment.\n\n> alwaysBlockNative should be aAlwaysBlockNative\n\nI agree with Markus.", "time": "2011-01-19T18:30:09Z", "is_private": false}, {"raw_text": "A detailed description of how I got these results is in the\nattachment.\n\n-[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:]\nis only ever called from -[NSTitledFrame resizeWithEvent:].  So any\nsavings due to changing the frequency of calls to the former should be\ndirectly reflected in performance statistics for the latter.\nFurthermore, calls with -[NSTitledFrame resizeWithEvent:] on the stack\nseem to be responsible for a large percentage of the \"work\" done by\nthe browser (between about 75% and about 85% in my tests).  So we\nshould get much more accurate results by looking at the statistics for\n-[NSTitledFrame resizeWithEvent:] than we would be looking at the\nstatistics for -[NSView\n_getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:].\n\nSo we need to look at the results for -[NSTitledFrame\nresizeWithEvent:].\n\nNote that the v2 patch only shows a significant performance\nimprovement for the about:home page.  It actually results in a small\nperformance regression with the Starfield canvas animation at\nhttp://arapehlivanian.com/wp-content/uploads/2007/02/canvas.html\n(probably too small to be significant).  And only a small performance\nimprovement with the very noisy and obnoxious page at\nhttp://www.vg.no/ (full of Flash objects) -- once again probably too\nsmall to be significant.\n\nSo it would seem that the v2 patch only helps with very simple pages\n(like the about:home page), and not at all with complex pages.  Which\nis exactly the opposite of what I would have expected ... but that's\nwhat my tests show.", "count": 11, "author": "smichaud@pobox.com", "tags": [], "bug_id": 625454, "attachment_id": 505139, "time": "2011-01-19T19:47:12Z", "text": "Created attachment 505139\nShark test results\n\nA detailed description of how I got these results is in the\nattachment.\n\n-[NSView _getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:]\nis only ever called from -[NSTitledFrame resizeWithEvent:].  So any\nsavings due to changing the frequency of calls to the former should be\ndirectly reflected in performance statistics for the latter.\nFurthermore, calls with -[NSTitledFrame resizeWithEvent:] on the stack\nseem to be responsible for a large percentage of the \"work\" done by\nthe browser (between about 75% and about 85% in my tests).  So we\nshould get much more accurate results by looking at the statistics for\n-[NSTitledFrame resizeWithEvent:] than we would be looking at the\nstatistics for -[NSView\n_getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:].\n\nSo we need to look at the results for -[NSTitledFrame\nresizeWithEvent:].\n\nNote that the v2 patch only shows a significant performance\nimprovement for the about:home page.  It actually results in a small\nperformance regression with the Starfield canvas animation at\nhttp://arapehlivanian.com/wp-content/uploads/2007/02/canvas.html\n(probably too small to be significant).  And only a small performance\nimprovement with the very noisy and obnoxious page at\nhttp://www.vg.no/ (full of Flash objects) -- once again probably too\nsmall to be significant.\n\nSo it would seem that the v2 patch only helps with very simple pages\n(like the about:home page), and not at all with complex pages.  Which\nis exactly the opposite of what I would have expected ... but that's\nwhat my tests show.", "id": 5211284, "is_private": false, "creator": "smichaud@pobox.com", "creation_time": "2011-01-19T19:47:12Z"}, {"creation_time": "2011-01-19T19:57:20Z", "bug_id": 625454, "attachment_id": null, "author": "smichaud@pobox.com", "tags": [], "creator": "smichaud@pobox.com", "count": 12, "is_private": false, "time": "2011-01-19T19:57:20Z", "raw_text": "I forgot to mention that my tests were done with \"universal\" (32-bit\nand 64-bit) distros made from current code -- with and without the v2\npatch.  These distros had optimization, debugging and symbol-stripping\nturned off (--disable-optimize --disable-debug --disable-strip\n--disable-install-strip).\n\nAll my tests were done on OS X 10.6.5 in 64-bit mode.", "id": 5211310, "text": "I forgot to mention that my tests were done with \"universal\" (32-bit\nand 64-bit) distros made from current code -- with and without the v2\npatch.  These distros had optimization, debugging and symbol-stripping\nturned off (--disable-optimize --disable-debug --disable-strip\n--disable-install-strip).\n\nAll my tests were done on OS X 10.6.5 in 64-bit mode."}, {"count": 13, "raw_text": "Testing with the following animation examples, I find that their\nanimation stops whenever I click and hold the resize \"button\" (at the\nbottom right-hand corner of the browser window).\n\nhttp://arapehlivanian.com/wp-content/uploads/2007/02/canvas.html\nhttps://developer.mozilla.org/samples/svg/svganimdemo1.html\nhttp://devedge-temp.mozilla.org/toolbox/examples/2001/stock-ticker/\n\nThe animation restarts when I move the resize button (and the window\nresizes), but stops again when I stop moving it (without letting go of\nthe mouse).\n\nThis happens with and without the patch, and also in Safari.  So I\nassume this is some kind of bug or design flaw in OS X itself.", "bug_id": 625454, "attachment_id": null, "author": "smichaud@pobox.com", "tags": [], "is_private": false, "time": "2011-01-19T20:11:25Z", "text": "Testing with the following animation examples, I find that their\nanimation stops whenever I click and hold the resize \"button\" (at the\nbottom right-hand corner of the browser window).\n\nhttp://arapehlivanian.com/wp-content/uploads/2007/02/canvas.html\nhttps://developer.mozilla.org/samples/svg/svganimdemo1.html\nhttp://devedge-temp.mozilla.org/toolbox/examples/2001/stock-ticker/\n\nThe animation restarts when I move the resize button (and the window\nresizes), but stops again when I stop moving it (without letting go of\nthe mouse).\n\nThis happens with and without the patch, and also in Safari.  So I\nassume this is some kind of bug or design flaw in OS X itself.", "id": 5211346, "creation_time": "2011-01-19T20:11:25Z", "creator": "smichaud@pobox.com"}, {"tags": [], "creator": "smichaud@pobox.com", "author": "smichaud@pobox.com", "attachment_id": null, "bug_id": 625454, "creation_time": "2011-01-19T20:13:00Z", "raw_text": "> So I assume this is some kind of bug or design flaw in OS X itself.\n\nOr maybe it's not a bug but a feature :-)", "id": 5211348, "text": "> So I assume this is some kind of bug or design flaw in OS X itself.\n\nOr maybe it's not a bug but a feature :-)", "time": "2011-01-19T20:13:00Z", "is_private": false, "count": 14}, {"is_private": false, "time": "2011-01-19T22:41:44Z", "id": 5211913, "text": "Created attachment 505210\nProposed patch, version 3.\n\nGlad to see the promising performance results, thanks a lot! :)\n\nPatch version 3 renames alwaysBlockNative to aAlwaysBlockNative. Asking for approval for this window resize performance win.", "creation_time": "2011-01-19T22:41:44Z", "creator": "pwalton@mozilla.com", "count": 15, "raw_text": "Glad to see the promising performance results, thanks a lot! :)\n\nPatch version 3 renames alwaysBlockNative to aAlwaysBlockNative. Asking for approval for this window resize performance win.", "bug_id": 625454, "attachment_id": 505210, "author": "pwalton@mozilla.com", "tags": []}, {"creation_time": "2011-01-19T22:53:28Z", "creator": "pwalton@mozilla.com", "is_private": false, "text": "Regarding the request for approval: The risk for this patch seems moderate to me. There's a possibility that we could be starved for events during resizing. I haven't noticed any regressions myself, however.\n\nThe performance benefit, as stated above, is biggest for simpler pages (like google.com, where I first found the issue when testing against Chrome). I'd suspect that the reason for this is that resize performance is going to hurt on big pages anyway, and on small pages, our time spent processing native events tends to dominate.", "id": 5211959, "time": "2011-01-19T22:53:28Z", "attachment_id": null, "bug_id": 625454, "tags": [], "author": "pwalton@mozilla.com", "count": 16, "raw_text": "Regarding the request for approval: The risk for this patch seems moderate to me. There's a possibility that we could be starved for events during resizing. I haven't noticed any regressions myself, however.\n\nThe performance benefit, as stated above, is biggest for simpler pages (like google.com, where I first found the issue when testing against Chrome). I'd suspect that the reason for this is that resize performance is going to hurt on big pages anyway, and on small pages, our time spent processing native events tends to dominate."}, {"bug_id": 625454, "attachment_id": 505210, "creation_time": "2011-01-20T22:25:41Z", "author": "christian@legnitto.com", "tags": [], "creator": "christian@legnitto.com", "count": 17, "time": "2011-01-20T22:25:41Z", "raw_text": "Let's get this in for beta 10 and back it out if there are issues.", "text": "Comment on attachment 505210\nProposed patch, version 3.\n\nLet's get this in for beta 10 and back it out if there are issues.", "id": 5214899, "is_private": false}, {"bug_id": 625454, "attachment_id": null, "creation_time": "2011-01-21T20:31:10Z", "author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com", "tags": [], "count": 18, "time": "2011-01-21T20:31:10Z", "id": 5217809, "raw_text": "http://hg.mozilla.org/mozilla-central/rev/84ed248b728d", "text": "http://hg.mozilla.org/mozilla-central/rev/84ed248b728d", "is_private": false}, {"id": 5233814, "text": "Backed out:\n\nhttp://hg.mozilla.org/mozilla-central/rev/a7b806aebf09\n\nSee bug 629324.", "time": "2011-01-27T23:36:46Z", "is_private": false, "creator": "pwalton@mozilla.com", "creation_time": "2011-01-27T23:36:46Z", "raw_text": "Backed out:\n\nhttp://hg.mozilla.org/mozilla-central/rev/a7b806aebf09\n\nSee bug 629324.", "count": 19, "tags": [], "author": "pwalton@mozilla.com", "attachment_id": null, "bug_id": 625454}, {"tags": [], "author": "mbeltzner@gmail.com", "attachment_id": 505210, "bug_id": 625454, "raw_text": "minusing approval due to backout", "count": 20, "creator": "mbeltzner@gmail.com", "creation_time": "2011-02-24T02:24:41Z", "text": "Comment on attachment 505210\nProposed patch, version 3.\n\nminusing approval due to backout", "id": 5300665, "time": "2011-02-24T02:24:41Z", "is_private": false}]}}, "comments": {}}