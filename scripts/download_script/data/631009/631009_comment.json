{"bugs": {"631009": {"comments": [{"is_private": false, "time": "2011-02-02T21:29:39Z", "id": 5248363, "text": "After GetText patch in bug #630001 this function returns with error when endOffset is out of text boundaries.\n\nThis is causing troubles in atk, minor troubles under at-spi1 and big troubles under at-spi2.\n\nWhen text is removed, from example on the location bar, we emit text-changed::delete signal. The atk bridge then calls GetText to retrieve the removed text. As we are firing the event after the text has been changed, there are a lot of chances that this call uses a endoffset out of boundaries.\n\nPrevious GetText behaviour tolerated this wrong endoffset and returned the text until the real end resulting on the atk-bridge using the wrong text for the at-spi event.\n\nBut now, GetText is failing with NS_ERROR_INVALID_ARG. That causes at-spi2 to send the at-spi event with empty text, but at-spi2 is failing, giving a invalid signal warning and a big delay that results in, for example, when replacing selected text, text entered in the wrong order.\n\nNotice that this wouldn't happen if we fix bug #619002 but we may want also to be safe for this.", "creation_time": "2011-02-02T21:29:39Z", "creator": "fherrera@onirica.com", "count": 0, "raw_text": "After GetText patch in bug #630001 this function returns with error when endOffset is out of text boundaries.\n\nThis is causing troubles in atk, minor troubles under at-spi1 and big troubles under at-spi2.\n\nWhen text is removed, from example on the location bar, we emit text-changed::delete signal. The atk bridge then calls GetText to retrieve the removed text. As we are firing the event after the text has been changed, there are a lot of chances that this call uses a endoffset out of boundaries.\n\nPrevious GetText behaviour tolerated this wrong endoffset and returned the text until the real end resulting on the atk-bridge using the wrong text for the at-spi event.\n\nBut now, GetText is failing with NS_ERROR_INVALID_ARG. That causes at-spi2 to send the at-spi event with empty text, but at-spi2 is failing, giving a invalid signal warning and a big delay that results in, for example, when replacing selected text, text entered in the wrong order.\n\nNotice that this wouldn't happen if we fix bug #619002 but we may want also to be safe for this.", "bug_id": 631009, "attachment_id": null, "author": "fherrera@onirica.com", "tags": []}, {"count": 1, "is_private": false, "raw_text": "Either this way of checking endOffset against CharacterCount() at the beginning.", "text": "Created attachment 509218\npatch allowing out of boundaries endOffset\n\nEither this way of checking endOffset against CharacterCount() at the beginning.", "id": 5248374, "time": "2011-02-02T21:32:14Z", "creation_time": "2011-02-02T21:32:14Z", "attachment_id": 509218, "bug_id": 631009, "creator": "fherrera@onirica.com", "tags": [], "author": "fherrera@onirica.com"}, {"creator": "fherrera@onirica.com", "creation_time": "2011-02-02T21:59:58Z", "time": "2011-02-02T21:59:58Z", "id": 5248490, "text": "It looks like the \"big\" troubles under at-spi2 are not related/fixed by this. Even with the patch above I get:\n\nGLib-GObject-WARNING **: gsignal.c:3081: signal name `text_changed::delete:system' is invalid for instance `0xa967a760'\n\nand similars and wrong order when typing in the location bar.", "is_private": false, "author": "fherrera@onirica.com", "tags": [], "bug_id": 631009, "attachment_id": null, "raw_text": "It looks like the \"big\" troubles under at-spi2 are not related/fixed by this. Even with the patch above I get:\n\nGLib-GObject-WARNING **: gsignal.c:3081: signal name `text_changed::delete:system' is invalid for instance `0xa967a760'\n\nand similars and wrong order when typing in the location bar.", "count": 2}, {"bug_id": 631009, "attachment_id": null, "author": "surkov.alexander@gmail.com", "tags": [], "count": 3, "raw_text": "(In reply to comment #1)\n> Created attachment 509218 [details]\n> patch allowing out of boundaries endOffset\n> \n> Either this way of checking endOffset against CharacterCount() at the\n> beginning.\n\nThat's correct behavior for IA2. The same time I wouldn't prefer failing XPCOM method for bad arguments since it's not friendly for JS. \n\nSince ATK needs the method working for out of range end offset then taking into account not failing XPCOM methods concept I would expect the same behavior for XPCOM. Thus it sounds reasonable if IA2 impl will be fixed for this case.\n\nFernando, do you take this bug?", "creation_time": "2011-02-03T05:01:46Z", "creator": "surkov.alexander@gmail.com", "is_private": false, "time": "2011-02-03T05:01:46Z", "id": 5250696, "text": "(In reply to comment #1)\n> Created attachment 509218 [details]\n> patch allowing out of boundaries endOffset\n> \n> Either this way of checking endOffset against CharacterCount() at the\n> beginning.\n\nThat's correct behavior for IA2. The same time I wouldn't prefer failing XPCOM method for bad arguments since it's not friendly for JS. \n\nSince ATK needs the method working for out of range end offset then taking into account not failing XPCOM methods concept I would expect the same behavior for XPCOM. Thus it sounds reasonable if IA2 impl will be fixed for this case.\n\nFernando, do you take this bug?"}]}}, "comments": {}}