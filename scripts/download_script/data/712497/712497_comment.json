{"bugs": {"712497": {"comments": [{"author": "choller@mozilla.com", "attachment_id": null, "time": "2011-12-21T00:22:13Z", "creator": "choller@mozilla.com", "text": "The following report (in the URL field) has been generated by static analysis using Clang.\n\nIt would be good if someone familiar with the particular code could check if\n\n- this is really a bug or a false positive\n- and/or if it makes sense to adjust the code (even if there is not a real bug present, e.g. by adding a missing initialization).\n\n\nIn this particular report, I think the problem is that | pollfds[pollfds_used] | could be accessed without taking the | if(..) | branch before that allocates this array. Even if this could never happen (which I don't know), it would probably be a good idea to initialize the | pollfds | pointer to NULL, so it would at most be a null pointer deference.", "raw_text": "The following report (in the URL field) has been generated by static analysis using Clang.\n\nIt would be good if someone familiar with the particular code could check if\n\n- this is really a bug or a false positive\n- and/or if it makes sense to adjust the code (even if there is not a real bug present, e.g. by adding a missing initialization).\n\n\nIn this particular report, I think the problem is that | pollfds[pollfds_used] | could be accessed without taking the | if(..) | branch before that allocates this array. Even if this could never happen (which I don't know), it would probably be a good idea to initialize the | pollfds | pointer to NULL, so it would at most be a null pointer deference.", "creation_time": "2011-12-21T00:22:13Z", "bug_id": 712497, "id": 5931368, "tags": [], "count": 0, "is_private": false}, {"creator": "wtc@google.com", "author": "wtc@google.com", "bug_id": 712497, "tags": [], "is_private": false, "count": 1, "id": 5932958, "text": "Thanks for the bug report.  This is a false positive.\n\nThe PRThreadPool structure pointed to by 'tp' is allocated by alloc_threadpool().\nThe structure is allocated with a PR_CALLOC call, so every member is initialized\nto 0, including tp->ioq.cnt and tp->ioq.npollfds.\n\nSo the first time we enter the while loop in io_wstart, the code\n\n\t\tpollfd_cnt = tp->ioq.cnt + 10;\n\t\tif (pollfd_cnt > tp->ioq.npollfds) {\n\nevaluates to true, and so we will do\n\n\t\tpollfds = tp->ioq.pollfds;\n\nSince this requires looking at three functions (alloc_threadpool,\nPR_CreateThread, and io_wstart), it may be beyond the ability of\nstatic analyzers.\n\nIf we initialize pollfds to NULL, will that fix this Clang report?\n\nPRPollDesc *pollfds = NULL;", "time": "2011-12-21T17:55:56Z", "attachment_id": null, "raw_text": "Thanks for the bug report.  This is a false positive.\n\nThe PRThreadPool structure pointed to by 'tp' is allocated by alloc_threadpool().\nThe structure is allocated with a PR_CALLOC call, so every member is initialized\nto 0, including tp->ioq.cnt and tp->ioq.npollfds.\n\nSo the first time we enter the while loop in io_wstart, the code\n\n\t\tpollfd_cnt = tp->ioq.cnt + 10;\n\t\tif (pollfd_cnt > tp->ioq.npollfds) {\n\nevaluates to true, and so we will do\n\n\t\tpollfds = tp->ioq.pollfds;\n\nSince this requires looking at three functions (alloc_threadpool,\nPR_CreateThread, and io_wstart), it may be beyond the ability of\nstatic analyzers.\n\nIf we initialize pollfds to NULL, will that fix this Clang report?\n\nPRPollDesc *pollfds = NULL;", "creation_time": "2011-12-21T17:55:56Z"}, {"bug_id": 712497, "id": 5932985, "count": 2, "is_private": false, "tags": [], "time": "2011-12-21T18:05:36Z", "attachment_id": null, "author": "choller@mozilla.com", "text": "(In reply to Wan-Teh Chang from comment #1)\n> Thanks for the bug report.  This is a false positive.\n> \n\nThanks for investigating!\n\n> If we initialize pollfds to NULL, will that fix this Clang report?\n> \n> PRPollDesc *pollfds = NULL;\n\nIt would turn the message from \"Dereference of undefined pointer\" to \"Possible null dereference\". That would still help us though because we usually ignore the null dereferences (because they're not security critical in our context) and we can also annotate the code for that (I think, haven't looked into that yet).\n\nSo yes, changing that seems helpful although Clang will throw a different message then.", "creator": "choller@mozilla.com", "raw_text": "(In reply to Wan-Teh Chang from comment #1)\n> Thanks for the bug report.  This is a false positive.\n> \n\nThanks for investigating!\n\n> If we initialize pollfds to NULL, will that fix this Clang report?\n> \n> PRPollDesc *pollfds = NULL;\n\nIt would turn the message from \"Dereference of undefined pointer\" to \"Possible null dereference\". That would still help us though because we usually ignore the null dereferences (because they're not security critical in our context) and we can also annotate the code for that (I think, haven't looked into that yet).\n\nSo yes, changing that seems helpful although Clang will throw a different message then.", "creation_time": "2011-12-21T18:05:36Z"}]}}, "comments": {}}