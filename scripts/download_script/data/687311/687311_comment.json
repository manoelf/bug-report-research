{"bugs": {"687311": {"comments": [{"tags": [], "bug_id": 687311, "text": "I've recently encountered some odd rendering issues in FFOX while using outline. In the first example, there are pseudo-elements that are absolutely positioned in their parent div and given negative top, right, bottom and left sides (positioning their sides outside their parent). The outline on the parent div, instead of remaining the proper size with the parent background-color, is going around the entire before and after pseudo-elements. Webkit doesn't separate the background-color and outline and if the outline is changed to border, it remains with the div. The jsFiddle to demonstrate this portion of the bug is here: http://srewis.me/qcD9GE\n\nThe second, but similar bug is also related to outline. Both the parent div and the paragraph within have an outline and an RGBa background color. The outline on the div stays outside the outline on the child P and renders a space between the div's outline and background-color on both the left and bottom. Webkit browsers render properly with the outline of the div sitting on top of the outline of the P within (since outline should not be included in the box model). Changing either the div or p from outline to border fixes the rendering in FFOX. Please view this bug demonstrated on this jsFiddle: http://srewis.me/o9IVqa", "raw_text": "I've recently encountered some odd rendering issues in FFOX while using outline. In the first example, there are pseudo-elements that are absolutely positioned in their parent div and given negative top, right, bottom and left sides (positioning their sides outside their parent). The outline on the parent div, instead of remaining the proper size with the parent background-color, is going around the entire before and after pseudo-elements. Webkit doesn't separate the background-color and outline and if the outline is changed to border, it remains with the div. The jsFiddle to demonstrate this portion of the bug is here: http://srewis.me/qcD9GE\n\nThe second, but similar bug is also related to outline. Both the parent div and the paragraph within have an outline and an RGBa background color. The outline on the div stays outside the outline on the child P and renders a space between the div's outline and background-color on both the left and bottom. Webkit browsers render properly with the outline of the div sitting on top of the outline of the P within (since outline should not be included in the box model). Changing either the div or p from outline to border fixes the rendering in FFOX. Please view this bug demonstrated on this jsFiddle: http://srewis.me/o9IVqa", "attachment_id": null, "author": "bugs@w3conversions.com", "creator": "bugs@w3conversions.com", "time": "2011-09-18T05:01:48Z", "creation_time": "2011-09-18T05:01:48Z", "is_private": false, "count": 0, "id": 5721876}, {"time": "2011-09-18T07:31:47Z", "creation_time": "2011-09-18T07:31:47Z", "creator": "phiw2@l-c-n.com", "author": "phiw2@l-c-n.com", "count": 1, "id": 5721908, "is_private": false, "bug_id": 687311, "text": "Sounds like bug 480888", "tags": [], "attachment_id": null, "raw_text": "Sounds like bug 480888"}, {"count": 2, "id": 5722249, "is_private": false, "author": "dbaron@dbaron.org", "time": "2011-09-18T20:19:01Z", "creation_time": "2011-09-18T20:19:01Z", "creator": "dbaron@dbaron.org", "raw_text": "", "attachment_id": 560812, "tags": [], "text": "Created attachment 560812\nfirst testcase", "bug_id": 687311}, {"id": 5722250, "count": 3, "is_private": false, "author": "dbaron@dbaron.org", "creation_time": "2011-09-18T20:19:36Z", "time": "2011-09-18T20:19:36Z", "creator": "dbaron@dbaron.org", "raw_text": "from http://srewis.me/o9IVqa", "attachment_id": 560813, "tags": [], "text": "Created attachment 560813\nsecond testcase\n\nfrom http://srewis.me/o9IVqa", "bug_id": 687311}, {"count": 4, "id": 5810421, "is_private": false, "time": "2011-10-28T00:15:03Z", "creation_time": "2011-10-28T00:15:03Z", "creator": "leeoniya@gmail.com", "author": "leeoniya@gmail.com", "attachment_id": null, "raw_text": "i think i just ran across something similar. horizontal 2px mystery spacing between outline and element background. only happens in FF.\n\nhttp://jsfiddle.net/CZKrY/\n\nis this the same bug?", "tags": [], "bug_id": 687311, "text": "i think i just ran across something similar. horizontal 2px mystery spacing between outline and element background. only happens in FF.\n\nhttp://jsfiddle.net/CZKrY/\n\nis this the same bug?"}, {"raw_text": "filed as Bug 697899 w/ref to this one. feel free to mark as dupe if appropriate.", "id": 5810438, "count": 5, "is_private": false, "attachment_id": null, "text": "filed as Bug 697899 w/ref to this one. feel free to mark as dupe if appropriate.", "bug_id": 687311, "tags": [], "author": "leeoniya@gmail.com", "creation_time": "2011-10-28T00:21:43Z", "time": "2011-10-28T00:21:43Z", "creator": "leeoniya@gmail.com"}, {"time": "2012-02-23T17:31:59Z", "creation_time": "2012-02-23T17:31:59Z", "creator": "dbaron@dbaron.org", "author": "dbaron@dbaron.org", "count": 6, "id": 6086913, "is_private": false, "text": "I guess I'm inclined to say this is a feature rather than a bug -- outlines should be drawn around descendant elements.", "bug_id": 687311, "tags": [], "attachment_id": null, "raw_text": "I guess I'm inclined to say this is a feature rather than a bug -- outlines should be drawn around descendant elements."}, {"raw_text": "David, I must disagree. I don't see this as a feature at all \u2014 on two points: \n\nOn the first demo (with the pseudo-elements), the children are absolutely positioned. I would not expect the outline to go ALL the way around them (the border does not). Notice when I put a double border on the parent (so you can see the color below)\u2014the background moves further out below the whole border: http://jsfiddle.net/stefsull/nSNaR/\n\nNotice also on that demo, that if I remove the position:relative from the parent (there simply to give it position so the children position themselves based on the parent), the outline then moves back to the parent. http://jsfiddle.net/stefsull/YZWJ3/ (And the second problem outlined below occurs.) I would not expect an outline to enclose absolutely positioned children\u2014they are out of the flow and should not affect that.\n\nOn the second demo (p element inside div), the issue is that the background color, if no border exists, is not not being painted under the area that would contain the border. However, as shown in this fiddle, if a border is added (again, I used a 4px double border), the background color is painted behind the border (not to the inner edge of the outline). I don't think the outline on the child should be expanding the parent. http://jsfiddle.net/stefsull/eUyJn/ \n\nNo one would expect to put a background-color on an element, and not have it move under the space that the child is creating with THEIR outline (where the parent's border would be if it existed). Outlines tend to be used because they don't add to the box model (yes, I realize we have box-sizing now, but that's a new property and not supported everywhere yet).\n\nIf outline is to be treated like box-shadow, in that it does not add to the box model, then I would not expect the outline to go AROUND the box-shadow (example on this bug: https://bugzilla.mozilla.org/show_bug.cgi?id=480888 ). In fact, if I use the spread radius of box-shadow instead of outline, this problem doesn't exist. Firefox draws the box-shadow exactly where I would expect to see the outline\u2014directly outside the border. http://jsfiddle.net/stefsull/5hwWm/2/\n\nIf I change both the parent and child to create the look of the border with the spread radius value of box-shadow, creating the same effect as the outline, with the same specifications to start outside the border and not add to the box model, the element is drawn exactly as I would expect\u2014with the child not pushing the parent out and leaving a gap in the background color: http://jsfiddle.net/stefsull/46aVv/1/\n\nNo other browser renders outline in this way\u2014and there's no prefix to turn it off in Mozilla.", "attachment_id": null, "bug_id": 687311, "text": "David, I must disagree. I don't see this as a feature at all \u2014 on two points: \n\nOn the first demo (with the pseudo-elements), the children are absolutely positioned. I would not expect the outline to go ALL the way around them (the border does not). Notice when I put a double border on the parent (so you can see the color below)\u2014the background moves further out below the whole border: http://jsfiddle.net/stefsull/nSNaR/\n\nNotice also on that demo, that if I remove the position:relative from the parent (there simply to give it position so the children position themselves based on the parent), the outline then moves back to the parent. http://jsfiddle.net/stefsull/YZWJ3/ (And the second problem outlined below occurs.) I would not expect an outline to enclose absolutely positioned children\u2014they are out of the flow and should not affect that.\n\nOn the second demo (p element inside div), the issue is that the background color, if no border exists, is not not being painted under the area that would contain the border. However, as shown in this fiddle, if a border is added (again, I used a 4px double border), the background color is painted behind the border (not to the inner edge of the outline). I don't think the outline on the child should be expanding the parent. http://jsfiddle.net/stefsull/eUyJn/ \n\nNo one would expect to put a background-color on an element, and not have it move under the space that the child is creating with THEIR outline (where the parent's border would be if it existed). Outlines tend to be used because they don't add to the box model (yes, I realize we have box-sizing now, but that's a new property and not supported everywhere yet).\n\nIf outline is to be treated like box-shadow, in that it does not add to the box model, then I would not expect the outline to go AROUND the box-shadow (example on this bug: https://bugzilla.mozilla.org/show_bug.cgi?id=480888 ). In fact, if I use the spread radius of box-shadow instead of outline, this problem doesn't exist. Firefox draws the box-shadow exactly where I would expect to see the outline\u2014directly outside the border. http://jsfiddle.net/stefsull/5hwWm/2/\n\nIf I change both the parent and child to create the look of the border with the spread radius value of box-shadow, creating the same effect as the outline, with the same specifications to start outside the border and not add to the box model, the element is drawn exactly as I would expect\u2014with the child not pushing the parent out and leaving a gap in the background color: http://jsfiddle.net/stefsull/46aVv/1/\n\nNo other browser renders outline in this way\u2014and there's no prefix to turn it off in Mozilla.", "tags": [], "id": 6089230, "count": 7, "is_private": false, "author": "bugs@w3conversions.com", "time": "2012-02-24T05:28:54Z", "creation_time": "2012-02-24T05:28:54Z", "creator": "bugs@w3conversions.com"}, {"id": 6089293, "count": 8, "is_private": false, "time": "2012-02-24T06:24:35Z", "creation_time": "2012-02-24T06:24:35Z", "creator": "dbaron@dbaron.org", "author": "dbaron@dbaron.org", "attachment_id": null, "raw_text": "The 'outline' property is designed to render focus outlines; it should behave as an indication of focus ought to behave.  Any other use cases are purely secondary and should only be considered in so far as they do not interfere with drawing optimal focus outlines.", "bug_id": 687311, "text": "The 'outline' property is designed to render focus outlines; it should behave as an indication of focus ought to behave.  Any other use cases are purely secondary and should only be considered in so far as they do not interfere with drawing optimal focus outlines.", "tags": []}, {"attachment_id": null, "raw_text": "", "text": "*** Bug 418912 has been marked as a duplicate of this bug. ***", "bug_id": 687311, "tags": [], "count": 9, "id": 8427295, "is_private": false, "time": "2014-02-17T07:00:39Z", "creation_time": "2014-02-17T07:00:39Z", "creator": "dbaron@dbaron.org", "author": "dbaron@dbaron.org"}, {"count": 10, "id": 8427302, "is_private": false, "author": "dbaron@dbaron.org", "creation_time": "2014-02-17T07:04:23Z", "time": "2014-02-17T07:04:23Z", "creator": "dbaron@dbaron.org", "raw_text": "", "attachment_id": null, "tags": [], "bug_id": 687311, "text": "*** Bug 772753 has been marked as a duplicate of this bug. ***"}, {"author": "bugs@w3conversions.com", "time": "2014-04-24T19:02:09Z", "creation_time": "2014-04-24T19:02:09Z", "creator": "bugs@w3conversions.com", "id": 8707146, "count": 11, "is_private": false, "bug_id": 687311, "text": "Now that https://bugzilla.mozilla.org/show_bug.cgi?id=480888 is fixed, is there any hope we could reconsider rendering this bug and render a focus ring around the parent with pseudo-elements, but let the outline-only stay on the parent (where it was placed)?", "tags": [], "raw_text": "Now that https://bugzilla.mozilla.org/show_bug.cgi?id=480888 is fixed, is there any hope we could reconsider rendering this bug and render a focus ring around the parent with pseudo-elements, but let the outline-only stay on the parent (where it was placed)?", "attachment_id": null}, {"raw_text": "", "is_private": false, "attachment_id": null, "count": 12, "id": 9374075, "author": "gijskruitbosch+bugs@gmail.com", "tags": [], "bug_id": 687311, "text": "*** Bug 1070685 has been marked as a duplicate of this bug. ***", "creator": "gijskruitbosch+bugs@gmail.com", "creation_time": "2014-09-29T14:20:31Z", "time": "2014-09-29T14:20:31Z"}, {"creator": "jypenator@gmail.com", "creation_time": "2014-10-03T09:56:41Z", "time": "2014-10-03T09:56:41Z", "author": "jypenator@gmail.com", "bug_id": 687311, "text": "ddn keyword added to update the comment in the outline page if something change in the future. I'm not sure to understand if this is a bug, the correct behavior or a possible behavior (spec underspecified).", "tags": [], "attachment_id": null, "is_private": false, "count": 13, "id": 9398433, "raw_text": "ddn keyword added to update the comment in the outline page if something change in the future. I'm not sure to understand if this is a bug, the correct behavior or a possible behavior (spec underspecified)."}, {"tags": [], "text": "This is a bug. Neither Webkit nor IE draw outlines around absolutely positioned child elements. \n\nThis bug is still present as of FF version 39.0.3.\n\nBecause there is a simple workaround (outlined here: http://stackoverflow.com/questions/10662902), namely that of using box-shadow instead of outline, there has been no noise around this bug.\n\nIt is a significant nuisance to have to work around this. It makes the CSS unintuitive, necessitating comments all over the place.\n\nPlease have this fixed.", "bug_id": 687311, "raw_text": "This is a bug. Neither Webkit nor IE draw outlines around absolutely positioned child elements. \n\nThis bug is still present as of FF version 39.0.3.\n\nBecause there is a simple workaround (outlined here: http://stackoverflow.com/questions/10662902), namely that of using box-shadow instead of outline, there has been no noise around this bug.\n\nIt is a significant nuisance to have to work around this. It makes the CSS unintuitive, necessitating comments all over the place.\n\nPlease have this fixed.", "attachment_id": null, "author": "noel.abrahams@hotmail.com", "time": "2015-08-14T12:43:26Z", "creation_time": "2015-08-14T12:43:26Z", "creator": "noel.abrahams@hotmail.com", "id": 10618745, "count": 14, "is_private": false}, {"is_private": false, "id": 11024283, "count": 15, "author": "duanyao.ustc@gmail.com", "creator": "duanyao.ustc@gmail.com", "creation_time": "2015-12-22T09:15:21Z", "time": "2015-12-22T09:15:21Z", "raw_text": "If an element need both outline and box-shadow, the box-shadow workaround on SO can not be used. Currently I set box-shadow on the element and outline on its ::before to workaround this problem, however what if ::before must be used for other purpose? So please fix this issue.", "attachment_id": null, "text": "If an element need both outline and box-shadow, the box-shadow workaround on SO can not be used. Currently I set box-shadow on the element and outline on its ::before to workaround this problem, however what if ::before must be used for other purpose? So please fix this issue.", "bug_id": 687311, "tags": []}, {"id": 11468496, "count": 16, "is_private": false, "creation_time": "2016-06-07T08:49:47Z", "time": "2016-06-07T08:49:47Z", "creator": "kdubost@mozilla.com", "author": "kdubost@mozilla.com", "attachment_id": null, "raw_text": "Relevant specification \nhttps://drafts.csswg.org/css-ui/#outline-props\n\n> The stacking of the rendering of these outlines is \n> explicitly left up to implementations to provide \n> a better user experience per platform. This supersedes \n> the stacking of outlines as defined in CSS 2.1.\n\nAnd\n\n> The rendering of applying transforms to outlines is \n> left explicitly undefined in CSS3-UI.\n\nExample of Web compatibility issue because of outline\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1214865", "text": "Relevant specification \nhttps://drafts.csswg.org/css-ui/#outline-props\n\n> The stacking of the rendering of these outlines is \n> explicitly left up to implementations to provide \n> a better user experience per platform. This supersedes \n> the stacking of outlines as defined in CSS 2.1.\n\nAnd\n\n> The rendering of applying transforms to outlines is \n> left explicitly undefined in CSS3-UI.\n\nExample of Web compatibility issue because of outline\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1214865", "bug_id": 687311, "tags": []}, {"creator": "rajsite@gmail.com", "creation_time": "2017-09-14T20:00:45Z", "time": "2017-09-14T20:00:45Z", "author": "rajsite@gmail.com", "is_private": false, "count": 17, "id": 12667107, "tags": [], "bug_id": 687311, "text": "This bit us pretty hard. We have a large widget set where designers used outline and outline-offset to style controls and we develop a WYSIWYG editor that uses the controls. Everything looked visually correct deployed from the editor (using an embedded chromium instance) to latest Edge and Chrome.\n\nStarted testing Firefox more recently and found the outline behavior makes the panels visually unusable (elements with pop-up style components are added as children and the outline stretched around them unexpectedly). Switching to borders doesn't achieve the same effect we can create with outline + outline-offset and also as borders contribute to box model it complicates the WYSIWYG layout (many of the widgets are calculating sizes in JS inconsistently and changing to borders results in subtle misalignment in many places).", "attachment_id": null, "raw_text": "This bit us pretty hard. We have a large widget set where designers used outline and outline-offset to style controls and we develop a WYSIWYG editor that uses the controls. Everything looked visually correct deployed from the editor (using an embedded chromium instance) to latest Edge and Chrome.\n\nStarted testing Firefox more recently and found the outline behavior makes the panels visually unusable (elements with pop-up style components are added as children and the outline stretched around them unexpectedly). Switching to borders doesn't achieve the same effect we can create with outline + outline-offset and also as borders contribute to box model it complicates the WYSIWYG layout (many of the widgets are calculating sizes in JS inconsistently and changing to borders results in subtle misalignment in many places)."}, {"creator": "dbaron@dbaron.org", "creation_time": "2017-09-14T21:07:30Z", "time": "2017-09-14T21:07:30Z", "author": "dbaron@dbaron.org", "is_private": false, "id": 12667374, "count": 18, "bug_id": 687311, "text": "After bug 480888, I don't think we expand outlines for the *outlines* of descendant elements anymore.  We still do so for their border boxes, which is the right thing to do for focus outlines.", "tags": [], "attachment_id": null, "raw_text": "After bug 480888, I don't think we expand outlines for the *outlines* of descendant elements anymore.  We still do so for their border boxes, which is the right thing to do for focus outlines."}, {"author": "markus@imdsolution.at", "creator": "markus@imdsolution.at", "creation_time": "2018-10-18T13:18:58Z", "time": "2018-10-18T13:18:58Z", "is_private": false, "count": 19, "id": 13696207, "tags": [], "bug_id": 687311, "text": "This is a bug in my opinion. It should behave exactly like in chrome. Please fix it. I recently removed my outline of textfields and textarea elements because of this bug. I expected a behavior like in chrome.", "raw_text": "This is a bug in my opinion. It should behave exactly like in chrome. Please fix it. I recently removed my outline of textfields and textarea elements because of this bug. I expected a behavior like in chrome.", "attachment_id": null}, {"author": "_+bugzilla@ygoe.de", "creator": "_+bugzilla@ygoe.de", "time": "2018-12-24T14:10:30Z", "creation_time": "2018-12-24T14:10:30Z", "is_private": false, "count": 20, "id": 13830682, "tags": [], "text": "Oh, this bug is even officially listed in the compatibility matrix of the MDN docs page about the outline property (https://developer.mozilla.org/en-US/docs/Web/CSS/outline). Now I've got a problem. I can decide for Firefox or all other browsers. I can compensate for each, but not for both.\n\nBecause of this, and since this bug doesn't seem to be fixed anymore, I request an official CSS selector to distinguish Firefox from other browsers. Would that be possible? It's not what spec authors like, but I don't like buggy and incompatible implementations either. Be it a spec or implementation bug, I don't care, there is just no way to render things corectly in all browsers at once.", "bug_id": 687311, "raw_text": "Oh, this bug is even officially listed in the compatibility matrix of the MDN docs page about the outline property (https://developer.mozilla.org/en-US/docs/Web/CSS/outline). Now I've got a problem. I can decide for Firefox or all other browsers. I can compensate for each, but not for both.\n\nBecause of this, and since this bug doesn't seem to be fixed anymore, I request an official CSS selector to distinguish Firefox from other browsers. Would that be possible? It's not what spec authors like, but I don't like buggy and incompatible implementations either. Be it a spec or implementation bug, I don't care, there is just no way to render things corectly in all browsers at once.", "attachment_id": null}, {"creator": "_+bugzilla@ygoe.de", "creation_time": "2019-02-17T16:25:53Z", "time": "2019-02-17T16:25:53Z", "author": "_+bugzilla@ygoe.de", "is_private": false, "id": 13930374, "count": 21, "tags": [], "bug_id": 687311, "text": "Has this been fixed in Firefox 65? I see correct results in Firefox and Chrome with identical CSS code now. This definitely wasn't the case before.", "attachment_id": null, "raw_text": "Has this been fixed in Firefox 65? I see correct results in Firefox and Chrome with identical CSS code now. This definitely wasn't the case before."}, {"is_private": false, "id": 14319933, "count": 22, "author": "ken.sugiura@gmail.com", "creator": "ken.sugiura@gmail.com", "creation_time": "2019-08-25T10:20:33Z", "time": "2019-08-25T10:20:33Z", "raw_text": "Not sure if this should be considered a separate bug or not, but I noticed that if you apply an outline to a `<button>` element containing an element with `display: inline-block`, there will be a considerable gap between the outline and the border box. This also happens with other elements as well but the gap is much larger on buttons for some reason.\n\nhttps://codepen.io/ksugi/pen/dybvpWG\n\nI am using Firefox 68 and macOS 10.14.5", "attachment_id": null, "text": "Not sure if this should be considered a separate bug or not, but I noticed that if you apply an outline to a `<button>` element containing an element with `display: inline-block`, there will be a considerable gap between the outline and the border box. This also happens with other elements as well but the gap is much larger on buttons for some reason.\n\nhttps://codepen.io/ksugi/pen/dybvpWG\n\nI am using Firefox 68 and macOS 10.14.5", "bug_id": 687311, "tags": []}, {"id": 14320023, "count": 23, "is_private": false, "creation_time": "2019-08-25T14:54:13Z", "time": "2019-08-25T14:54:13Z", "creator": "emilio@crisal.io", "author": "emilio@crisal.io", "attachment_id": null, "raw_text": "(In reply to Yves Goergen from comment #21)\n> Has this been fixed in Firefox 65? I see correct results in Firefox and Chrome with identical CSS code now. This definitely wasn't the case before.\n\nWe've done some changes so that we don't include out-of-flow descendants (i.e., position: absolute / fixed).\n\n(In reply to ken.sugiura from comment #22)\n> Not sure if this should be considered a separate bug or not, but I noticed that if you apply an outline to a `<button>` element containing an element with `display: inline-block`, there will be a considerable gap between the outline and the border box. This also happens with other elements as well but the gap is much larger on buttons for some reason.\n\nThis is because buttons have baseline alignment by default. You can see that the button and div position is the same in Firefox and Blink, only difference is where the outline gets painted. So I'd say this is this issue.\n\nI'd note that there was a fair bit of discussion in the CSS Working Group about this not that long ago, see https://github.com/w3c/csswg-drafts/issues/2846.", "text": "(In reply to Yves Goergen from comment #21)\n> Has this been fixed in Firefox 65? I see correct results in Firefox and Chrome with identical CSS code now. This definitely wasn't the case before.\n\nWe've done some changes so that we don't include out-of-flow descendants (i.e., position: absolute / fixed).\n\n(In reply to ken.sugiura from comment #22)\n> Not sure if this should be considered a separate bug or not, but I noticed that if you apply an outline to a `<button>` element containing an element with `display: inline-block`, there will be a considerable gap between the outline and the border box. This also happens with other elements as well but the gap is much larger on buttons for some reason.\n\nThis is because buttons have baseline alignment by default. You can see that the button and div position is the same in Firefox and Blink, only difference is where the outline gets painted. So I'd say this is this issue.\n\nI'd note that there was a fair bit of discussion in the CSS Working Group about this not that long ago, see https://github.com/w3c/csswg-drafts/issues/2846.", "bug_id": 687311, "tags": []}, {"is_private": false, "count": 24, "id": 14320139, "author": "ken.sugiura@gmail.com", "creator": "ken.sugiura@gmail.com", "creation_time": "2019-08-25T20:14:29Z", "time": "2019-08-25T20:14:29Z", "raw_text": "I did look through the default browser styles but couldn't find any that makes the button behave consistently with the divs. I tried setting `-moz-appearance: none !important` and `vertical-align: top` but they have no effect.", "attachment_id": null, "bug_id": 687311, "text": "I did look through the default browser styles but couldn't find any that makes the button behave consistently with the divs. I tried setting `-moz-appearance: none !important` and `vertical-align: top` but they have no effect.", "tags": []}, {"creator": "olestr@pm.me", "creation_time": "2021-05-18T22:44:41Z", "time": "2021-05-18T22:44:41Z", "author": "olestr@pm.me", "is_private": false, "id": 15412667, "count": 25, "tags": [], "bug_id": 687311, "text": "Big vote from me in making Firefox exclude absolutely positioned (and transformed!) elements from the outline.\n\nJust spent my evening bashing my head against this, without finding any solution.\n\nI'd say this should be fixed even before the CSS Working Group issue is resolved - an easy win for webcompat, as seemingly all the other browsers are excluding it.", "attachment_id": null, "raw_text": "Big vote from me in making Firefox exclude absolutely positioned (and transformed!) elements from the outline.\n\nJust spent my evening bashing my head against this, without finding any solution.\n\nI'd say this should be fixed even before the CSS Working Group issue is resolved - an easy win for webcompat, as seemingly all the other browsers are excluding it."}]}}, "comments": {}}