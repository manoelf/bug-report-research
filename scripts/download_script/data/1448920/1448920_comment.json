{"bugs": {"1448920": {"comments": [{"id": 13156114, "count": 0, "text": "[Affected versions]:\n- latest Nightly 61.0a1\n- Beta 60.0b6\n- Release 59.0.2\n- esr 52.7.3   \n\n[Affected platforms]:\n- Windows 10 x64 and x86 Version 1803 (OS Build 17128.1)\n\n[Preconditions]:\n- Edge is installed and closed\n- browsing history\n- saved favorites\n- saved pages to reading list\n- saved passwords\n\n[Steps to reproduce]:\n1. Launch Firefox on a clean profile with firefox -no-remote -migration parameter.\n2. From the Import Wizard choose Microsoft Edge and click Next.\n\n[Expected result]:\n- The Browsing History item is not displayed in the Import Wizard, therefore the history is not imported\n\n[Actual result]:\n- Only the following items are imported: Cookies, Saved Passwords, Favorites\n\n[Regression range]:\n- Not a regression, I was able to reproduce it on 50.0b4 as well.\n\n[Additional notes]:\n- note that on esr 52.7.3 the Import Wizard migrates only Cookies and Favorites, please let me know if I should file a separate bug for this\n- not reproducible on the current release version of Windows 10, Version 1709 (OS Build 16299.309)", "author": "ciprian.georgiu@softvision.com", "bug_id": 1448920, "tags": [], "creator": "ciprian.georgiu@softvision.com", "attachment_id": null, "raw_text": "[Affected versions]:\n- latest Nightly 61.0a1\n- Beta 60.0b6\n- Release 59.0.2\n- esr 52.7.3   \n\n[Affected platforms]:\n- Windows 10 x64 and x86 Version 1803 (OS Build 17128.1)\n\n[Preconditions]:\n- Edge is installed and closed\n- browsing history\n- saved favorites\n- saved pages to reading list\n- saved passwords\n\n[Steps to reproduce]:\n1. Launch Firefox on a clean profile with firefox -no-remote -migration parameter.\n2. From the Import Wizard choose Microsoft Edge and click Next.\n\n[Expected result]:\n- The Browsing History item is not displayed in the Import Wizard, therefore the history is not imported\n\n[Actual result]:\n- Only the following items are imported: Cookies, Saved Passwords, Favorites\n\n[Regression range]:\n- Not a regression, I was able to reproduce it on 50.0b4 as well.\n\n[Additional notes]:\n- note that on esr 52.7.3 the Import Wizard migrates only Cookies and Favorites, please let me know if I should file a separate bug for this\n- not reproducible on the current release version of Windows 10, Version 1709 (OS Build 16299.309)", "creation_time": "2018-03-26T16:00:38Z", "time": "2018-03-26T16:00:38Z", "is_private": false}, {"time": "2018-03-26T19:01:52Z", "creation_time": "2018-03-26T19:01:52Z", "raw_text": "(In reply to Ciprian Georgiu, QA [:ciprian_georgiu] from comment #0)\n...\n> [Expected result]:\n> - The Browsing History item is not displayed in the Import Wizard, therefore\n> the history is not imported\n\nI have to make a correction here, as this is the current behavior, alongside with the one already written.\n\nThe right [Expected result]: Browsing History is displayed in the Import Wizard and the history is properly imported from Edge", "attachment_id": null, "creator": "ciprian.georgiu@softvision.com", "is_private": false, "count": 1, "id": 13156709, "tags": [], "bug_id": 1448920, "author": "ciprian.georgiu@softvision.com", "text": "(In reply to Ciprian Georgiu, QA [:ciprian_georgiu] from comment #0)\n...\n> [Expected result]:\n> - The Browsing History item is not displayed in the Import Wizard, therefore\n> the history is not imported\n\nI have to make a correction here, as this is the current behavior, alongside with the one already written.\n\nThe right [Expected result]: Browsing History is displayed in the Import Wizard and the history is properly imported from Edge"}, {"count": 2, "id": 13195972, "tags": [], "bug_id": 1448920, "author": "ryanvm@gmail.com", "text": "Hi Gijs, Microsoft is expected to start rolling out the Spring Creators Update this week. Have you had a chance to look at this more?", "creation_time": "2018-04-10T19:55:04Z", "time": "2018-04-10T19:55:04Z", "raw_text": "Hi Gijs, Microsoft is expected to start rolling out the Spring Creators Update this week. Have you had a chance to look at this more?", "creator": "ryanvm@gmail.com", "attachment_id": null, "is_private": false}, {"is_private": false, "creator": "gijskruitbosch+bugs@gmail.com", "attachment_id": null, "raw_text": "(In reply to Ryan VanderMeulen [:RyanVM] from comment #2)\n> Hi Gijs, Microsoft is expected to start rolling out the Spring Creators\n> Update this week. Have you had a chance to look at this more?\n\nNo. FWIW, I haven't (internally) prioritized this very highly because:\n\n1) we no longer show the import dialog on startup. Ever. The user has to go find it (e.g. via History > Show All history > star button > Import...). I don't think a lot of people coming from Edge would bother going through all those steps. We do still show a prompt to import data from another browser in activity stream for new profiles, but I'm still skeptical that many people would choose to go through that (based on previous use of the import wizard, where the most popular action was to get out of it without any imports). That said, I don't have any *current* data about this.\n2) even before this bug, the only history we imported was typed history (ie full URLs users literally typed into the urlbar - not navigations, or searches, or bookmark items - which for most users would be most of their history). So it was never very useful.\n3) this isn't really manifesting as \"broken\" just as \"it's not there/supported\". So it's not something that users will miss. In that sense, it's almost better than the previous state which would have imported only a subset of what users might expect it to import. (Something about which, fwiw, I don't recall ever seeing complaints / bugs filed by users, which strengthens (1).\n4) I *suspect* (but haven't verified) that the data has moved into the same database where the rest of the history data is. We've had significant difficulty trying to access data in that database (see https://bugzilla.mozilla.org/show_bug.cgi?id=1192034#c6 ). IE used to expose an API for history, and the last time I checked that API didn't return results from Edge. I'd be surprised if that had changed. Despite repeated requests to Microsoft both on non-public mailing lists and via direct email for a way to access this data, I'm not aware of any.\n\nAll of this means this hasn't exactly been at the top of my priority list. I don't think it should track for 60. If by some miracle the data is somewhere useful and it's safe/easy for us to access it, we could consider backporting something. But my tea leaf reading makes me skeptical.\n\nI'll see if I can have a look tomorrow or later this week if relman is anxious to have a resolution here despite the points above.", "creation_time": "2018-04-10T23:09:12Z", "time": "2018-04-10T23:09:12Z", "text": "(In reply to Ryan VanderMeulen [:RyanVM] from comment #2)\n> Hi Gijs, Microsoft is expected to start rolling out the Spring Creators\n> Update this week. Have you had a chance to look at this more?\n\nNo. FWIW, I haven't (internally) prioritized this very highly because:\n\n1) we no longer show the import dialog on startup. Ever. The user has to go find it (e.g. via History > Show All history > star button > Import...). I don't think a lot of people coming from Edge would bother going through all those steps. We do still show a prompt to import data from another browser in activity stream for new profiles, but I'm still skeptical that many people would choose to go through that (based on previous use of the import wizard, where the most popular action was to get out of it without any imports). That said, I don't have any *current* data about this.\n2) even before this bug, the only history we imported was typed history (ie full URLs users literally typed into the urlbar - not navigations, or searches, or bookmark items - which for most users would be most of their history). So it was never very useful.\n3) this isn't really manifesting as \"broken\" just as \"it's not there/supported\". So it's not something that users will miss. In that sense, it's almost better than the previous state which would have imported only a subset of what users might expect it to import. (Something about which, fwiw, I don't recall ever seeing complaints / bugs filed by users, which strengthens (1).\n4) I *suspect* (but haven't verified) that the data has moved into the same database where the rest of the history data is. We've had significant difficulty trying to access data in that database (see https://bugzilla.mozilla.org/show_bug.cgi?id=1192034#c6 ). IE used to expose an API for history, and the last time I checked that API didn't return results from Edge. I'd be surprised if that had changed. Despite repeated requests to Microsoft both on non-public mailing lists and via direct email for a way to access this data, I'm not aware of any.\n\nAll of this means this hasn't exactly been at the top of my priority list. I don't think it should track for 60. If by some miracle the data is somewhere useful and it's safe/easy for us to access it, we could consider backporting something. But my tea leaf reading makes me skeptical.\n\nI'll see if I can have a look tomorrow or later this week if relman is anxious to have a resolution here despite the points above.", "author": "gijskruitbosch+bugs@gmail.com", "bug_id": 1448920, "tags": [], "id": 13196431, "count": 3}, {"bug_id": 1448920, "tags": [], "text": "Thanks, that's a really helpful comment. Agreed that it doesn't sound like this needs to be tracked then.", "author": "ryanvm@gmail.com", "id": 13196441, "count": 4, "is_private": false, "time": "2018-04-10T23:13:12Z", "creation_time": "2018-04-10T23:13:12Z", "attachment_id": null, "creator": "ryanvm@gmail.com", "raw_text": "Thanks, that's a really helpful comment. Agreed that it doesn't sound like this needs to be tracked then."}, {"text": "So the good news is it seems this data has moved into the spartan db that we already read for favourites and reading list items, which at least means we can fix the importer...", "author": "gijskruitbosch+bugs@gmail.com", "bug_id": 1448920, "tags": [], "is_private": false, "creator": "gijskruitbosch+bugs@gmail.com", "attachment_id": null, "raw_text": "So the good news is it seems this data has moved into the spartan db that we already read for favourites and reading list items, which at least means we can fix the importer...", "creation_time": "2018-04-11T10:35:53Z", "id": 13197290, "time": "2018-04-11T10:35:53Z", "count": 5}, {"id": 13215965, "count": 6, "text": "Created attachment 8968962\nBug 1448920 - add support for importing Edge typed URL history from its database instead,\n\nReview commit: https://reviewboard.mozilla.org/r/237662/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/237662/", "author": "gijskruitbosch+bugs@gmail.com", "bug_id": 1448920, "tags": ["mozreview-request"], "creator": "gijskruitbosch+bugs@gmail.com", "attachment_id": 8968962, "raw_text": "Review commit: https://reviewboard.mozilla.org/r/237662/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/237662/", "creation_time": "2018-04-18T16:52:59Z", "time": "2018-04-18T16:52:59Z", "is_private": false}, {"raw_text": "While I would have liked to add a test, I don't have cycles right now to create one, as it'd require using some ESE tools to create/update a test database to use.", "attachment_id": null, "creator": "gijskruitbosch+bugs@gmail.com", "count": 7, "time": "2018-04-18T16:53:53Z", "id": 13215968, "creation_time": "2018-04-18T16:53:53Z", "author": "gijskruitbosch+bugs@gmail.com", "text": "While I would have liked to add a test, I don't have cycles right now to create one, as it'd require using some ESE tools to create/update a test database to use.", "is_private": false, "tags": [], "bug_id": 1448920}, {"count": 8, "id": 13217863, "tags": ["mozreview-review"], "bug_id": 1448920, "author": "mak@mozilla.com", "text": "Comment on attachment 8968962\nBug 1448920 - add support for importing Edge typed URL history from its database instead,\n\nhttps://reviewboard.mozilla.org/r/237662/#review243644\n\n::: browser/components/migration/EdgeProfileMigrator.js:178\n(Diff revision 1)\n> +      {name: \"AccessDateTimeUTC\", type: \"date\"},\n> +    ];\n> +\n> +    let typedUrls = [];\n> +    try {\n> +      typedUrls = readTableFromEdgeDB(\"TypedUrls\", columns, () => true, this.db);\n\nnit: it sounds a bit crazy that filterFn is mandatory it's a pointless function call for each row, when the code in readTableFromEdgeDB could just do:\nif (!filterFn || filterFn(row))\n\nIn all the previous usages the function was used, this is the first case where it's pointless.\n\n::: browser/components/migration/EdgeProfileMigrator.js:184\n(Diff revision 1)\n> +    } catch (ex) {\n> +      // Maybe the table doesn't exist (older versions of Win10).\n> +      // Just fall through and we'll return because there's no data.\n> +    }\n> +    if (!typedUrls.length) {\n> +      return;\n\nCan we somehow make the exception catch more specific, or maybe reportError regardless, because this is hiding any possible errors, that means this could start failing and nobody will notice.\n\nESEDB exposes a tableExists, thus potentially the Error could be customized for that case.\n\n::: browser/components/migration/EdgeProfileMigrator.js:189\n(Diff revision 1)\n> +      return;\n> +    }\n> +\n> +    let pageInfos = [];\n> +    // Sometimes the values are bogus (e.g. 0 becomes some date in 1600),\n> +    // and places will throw *everything* away, not just the bogus ones,\n\nWe could maybe add an option to ignore bogus entries in insertMany, if useful. What happens currently is normal input validation, if one of the entries is bogus, input is bogus and we don't want to hide possible mistakes from the caller.\n\n::: browser/components/migration/EdgeProfileMigrator.js:190\n(Diff revision 1)\n> +    }\n> +\n> +    let pageInfos = [];\n> +    // Sometimes the values are bogus (e.g. 0 becomes some date in 1600),\n> +    // and places will throw *everything* away, not just the bogus ones,\n> +    // so deal with that by having a cutoff date.\n\nTL;DR: I'd probably import only entries more recent than a cutoff date, empty dated entries could be imported with the cutoff date.\n\nFrom the comment (and var name) it looks like we throw away anything that is older than cutoff, rather than converting those dates. Maybe rename to kMinDate, if that's the case?\nAlso, if dates are older than cutoff, maybe they should get the cutoff date, rather than now? Do we have evidence those are new enough to go over entries with a real recent date?\n\nI'd suggest to have a more realistic cutoff date that could either be:\n1. 2016/01/01 - Edge was released half 2016\n2. 6 months ago, because if the Places db is full we'll likely expire anything older as soon as it's added. On the other side, it's unlikely for a user to import into a full Places db, so it may not matter in practice.", "time": "2018-04-19T09:31:01Z", "creation_time": "2018-04-19T09:31:01Z", "raw_text": "https://reviewboard.mozilla.org/r/237662/#review243644\n\n::: browser/components/migration/EdgeProfileMigrator.js:178\n(Diff revision 1)\n> +      {name: \"AccessDateTimeUTC\", type: \"date\"},\n> +    ];\n> +\n> +    let typedUrls = [];\n> +    try {\n> +      typedUrls = readTableFromEdgeDB(\"TypedUrls\", columns, () => true, this.db);\n\nnit: it sounds a bit crazy that filterFn is mandatory it's a pointless function call for each row, when the code in readTableFromEdgeDB could just do:\nif (!filterFn || filterFn(row))\n\nIn all the previous usages the function was used, this is the first case where it's pointless.\n\n::: browser/components/migration/EdgeProfileMigrator.js:184\n(Diff revision 1)\n> +    } catch (ex) {\n> +      // Maybe the table doesn't exist (older versions of Win10).\n> +      // Just fall through and we'll return because there's no data.\n> +    }\n> +    if (!typedUrls.length) {\n> +      return;\n\nCan we somehow make the exception catch more specific, or maybe reportError regardless, because this is hiding any possible errors, that means this could start failing and nobody will notice.\n\nESEDB exposes a tableExists, thus potentially the Error could be customized for that case.\n\n::: browser/components/migration/EdgeProfileMigrator.js:189\n(Diff revision 1)\n> +      return;\n> +    }\n> +\n> +    let pageInfos = [];\n> +    // Sometimes the values are bogus (e.g. 0 becomes some date in 1600),\n> +    // and places will throw *everything* away, not just the bogus ones,\n\nWe could maybe add an option to ignore bogus entries in insertMany, if useful. What happens currently is normal input validation, if one of the entries is bogus, input is bogus and we don't want to hide possible mistakes from the caller.\n\n::: browser/components/migration/EdgeProfileMigrator.js:190\n(Diff revision 1)\n> +    }\n> +\n> +    let pageInfos = [];\n> +    // Sometimes the values are bogus (e.g. 0 becomes some date in 1600),\n> +    // and places will throw *everything* away, not just the bogus ones,\n> +    // so deal with that by having a cutoff date.\n\nTL;DR: I'd probably import only entries more recent than a cutoff date, empty dated entries could be imported with the cutoff date.\n\nFrom the comment (and var name) it looks like we throw away anything that is older than cutoff, rather than converting those dates. Maybe rename to kMinDate, if that's the case?\nAlso, if dates are older than cutoff, maybe they should get the cutoff date, rather than now? Do we have evidence those are new enough to go over entries with a real recent date?\n\nI'd suggest to have a more realistic cutoff date that could either be:\n1. 2016/01/01 - Edge was released half 2016\n2. 6 months ago, because if the Places db is full we'll likely expire anything older as soon as it's added. On the other side, it's unlikely for a user to import into a full Places db, so it may not matter in practice.", "attachment_id": 8968962, "creator": "mak@mozilla.com", "is_private": false}, {"raw_text": "Review request updated; see interdiff: https://reviewboard.mozilla.org/r/237662/diff/1-2/", "attachment_id": 8968962, "creator": "gijskruitbosch+bugs@gmail.com", "time": "2018-04-20T16:52:57Z", "creation_time": "2018-04-20T16:52:57Z", "is_private": false, "count": 9, "id": 13221919, "author": "gijskruitbosch+bugs@gmail.com", "text": "Comment on attachment 8968962\nBug 1448920 - add support for importing Edge typed URL history from its database instead,\n\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/237662/diff/1-2/", "tags": ["mozreview-request"], "bug_id": 1448920}, {"author": "gijskruitbosch+bugs@gmail.com", "text": "Comment on attachment 8968962\nBug 1448920 - add support for importing Edge typed URL history from its database instead,\n\nhttps://reviewboard.mozilla.org/r/237662/#review244260\n\n::: browser/components/migration/EdgeProfileMigrator.js:178\n(Diff revision 1)\n> +      {name: \"AccessDateTimeUTC\", type: \"date\"},\n> +    ];\n> +\n> +    let typedUrls = [];\n> +    try {\n> +      typedUrls = readTableFromEdgeDB(\"TypedUrls\", columns, () => true, this.db);\n\nFixed by making this optional.\n\n::: browser/components/migration/EdgeProfileMigrator.js:184\n(Diff revision 1)\n> +    } catch (ex) {\n> +      // Maybe the table doesn't exist (older versions of Win10).\n> +      // Just fall through and we'll return because there's no data.\n> +    }\n> +    if (!typedUrls.length) {\n> +      return;\n\nThe helper will report the error. I made this clear in the comment. I also made sure the error message was more readable by checking what error code ESE returns if the table doesn't exist.\n\n::: browser/components/migration/EdgeProfileMigrator.js:190\n(Diff revision 1)\n> +    }\n> +\n> +    let pageInfos = [];\n> +    // Sometimes the values are bogus (e.g. 0 becomes some date in 1600),\n> +    // and places will throw *everything* away, not just the bogus ones,\n> +    // so deal with that by having a cutoff date.\n\nIgnoring entries before the cutoff now, and using the cutoff date for entries without a date.", "tags": ["mozreview-review"], "bug_id": 1448920, "count": 10, "id": 13221924, "is_private": false, "raw_text": "https://reviewboard.mozilla.org/r/237662/#review244260\n\n::: browser/components/migration/EdgeProfileMigrator.js:178\n(Diff revision 1)\n> +      {name: \"AccessDateTimeUTC\", type: \"date\"},\n> +    ];\n> +\n> +    let typedUrls = [];\n> +    try {\n> +      typedUrls = readTableFromEdgeDB(\"TypedUrls\", columns, () => true, this.db);\n\nFixed by making this optional.\n\n::: browser/components/migration/EdgeProfileMigrator.js:184\n(Diff revision 1)\n> +    } catch (ex) {\n> +      // Maybe the table doesn't exist (older versions of Win10).\n> +      // Just fall through and we'll return because there's no data.\n> +    }\n> +    if (!typedUrls.length) {\n> +      return;\n\nThe helper will report the error. I made this clear in the comment. I also made sure the error message was more readable by checking what error code ESE returns if the table doesn't exist.\n\n::: browser/components/migration/EdgeProfileMigrator.js:190\n(Diff revision 1)\n> +    }\n> +\n> +    let pageInfos = [];\n> +    // Sometimes the values are bogus (e.g. 0 becomes some date in 1600),\n> +    // and places will throw *everything* away, not just the bogus ones,\n> +    // so deal with that by having a cutoff date.\n\nIgnoring entries before the cutoff now, and using the cutoff date for entries without a date.", "creator": "gijskruitbosch+bugs@gmail.com", "attachment_id": 8968962, "creation_time": "2018-04-20T16:54:14Z", "time": "2018-04-20T16:54:14Z"}, {"attachment_id": null, "creator": "pulsebot@bots.tld", "raw_text": "Pushed by gijskruitbosch@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/1f04da36cb83\nadd support for importing Edge typed URL history from its database instead, r=mak", "time": "2018-04-20T16:55:50Z", "creation_time": "2018-04-20T16:55:50Z", "id": 13221928, "count": 11, "text": "Pushed by gijskruitbosch@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/1f04da36cb83\nadd support for importing Edge typed URL history from its database instead, r=mak", "author": "pulsebot@bots.tld", "bug_id": 1448920, "tags": [], "is_private": false}, {"is_private": false, "creation_time": "2018-04-20T23:01:45Z", "time": "2018-04-20T23:01:45Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/1f04da36cb83", "creator": "dluca@mozilla.com", "attachment_id": null, "tags": ["bugherder"], "bug_id": 1448920, "author": "dluca@mozilla.com", "text": "https://hg.mozilla.org/mozilla-central/rev/1f04da36cb83", "count": 12, "id": 13222799}]}}, "comments": {}}