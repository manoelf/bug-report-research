{"bugs": {"641798": {"comments": [{"is_private": false, "count": 0, "author": "bhearsum@mozilla.com", "time": "2011-03-15T12:31:25Z", "id": 5345504, "attachment_id": null, "tags": [], "creation_time": "2011-03-15T12:31:25Z", "creator": "bhearsum@mozilla.com", "raw_text": "Bug 641325 describes a situation where we stopped PGO optimization all of JS, and didn't catch it. The logs show clearly that it's not being optimized, but we weren't looking for it:\nmozjs.pgd(0) : warning C4961: No profile data was merged into 'mozjs.pgd', profile-guided optimizations disabled\n\nWe should verify these, probably in Buildbot's createSummary(). One idea for doing so:\n- Define a list of DLLs that we expect to be PGO optimized\n- Subclass Compile\n- Override createSummary, search for a line like the above for every DLL that needs optimization\n- If any of them aren't found, turn orange, add a new log, and put something in it that the Tinderbox Summary functions will pick up.\n\nOne tricky part of this is that we can only do this check as part of Win32 opt builds, we'll have to find a way to turn it off for other types.", "bug_id": 641798, "text": "Bug 641325 describes a situation where we stopped PGO optimization all of JS, and didn't catch it. The logs show clearly that it's not being optimized, but we weren't looking for it:\nmozjs.pgd(0) : warning C4961: No profile data was merged into 'mozjs.pgd', profile-guided optimizations disabled\n\nWe should verify these, probably in Buildbot's createSummary(). One idea for doing so:\n- Define a list of DLLs that we expect to be PGO optimized\n- Subclass Compile\n- Override createSummary, search for a line like the above for every DLL that needs optimization\n- If any of them aren't found, turn orange, add a new log, and put something in it that the Tinderbox Summary functions will pick up.\n\nOne tricky part of this is that we can only do this check as part of Win32 opt builds, we'll have to find a way to turn it off for other types."}, {"id": 5345891, "is_private": false, "author": "khuey@kylehuey.com", "bug_id": 641798, "tags": [], "creation_time": "2011-03-15T16:17:02Z", "attachment_id": null, "time": "2011-03-15T16:17:02Z", "count": 1, "text": "We can teach the build system to treat the \"PGO disabled\" warning as an error that stops compilation, which I think is much cleaner than this.", "raw_text": "We can teach the build system to treat the \"PGO disabled\" warning as an error that stops compilation, which I think is much cleaner than this.", "creator": "khuey@kylehuey.com"}, {"time": "2011-03-15T17:42:54Z", "count": 2, "raw_text": "In that case, off to Core: Build Config!", "creator": "bhearsum@mozilla.com", "text": "In that case, off to Core: Build Config!", "author": "bhearsum@mozilla.com", "is_private": false, "id": 5346122, "creation_time": "2011-03-15T17:42:54Z", "tags": [], "attachment_id": null, "bug_id": 641798}, {"author": "mh+mozilla@glandium.org", "is_private": false, "id": 5353407, "attachment_id": null, "creation_time": "2011-03-18T16:04:35Z", "tags": [], "bug_id": 641798, "count": 3, "time": "2011-03-18T16:04:35Z", "creator": "mh+mozilla@glandium.org", "raw_text": "On the other hand, there are plenty of files that don't have profile information because the code is not covered by profiling...", "text": "On the other hand, there are plenty of files that don't have profile information because the code is not covered by profiling..."}, {"author": "khuey@kylehuey.com", "is_private": false, "id": 5353420, "attachment_id": null, "tags": [], "creation_time": "2011-03-18T16:08:36Z", "bug_id": 641798, "count": 4, "time": "2011-03-18T16:08:36Z", "creator": "khuey@kylehuey.com", "raw_text": "There's plugin-container.exe and browsercomps.dll, which are arguably bugs, and then a bunch of test code that we can ignore the warnings on.\n\nWe have to be a little clever about it, certainly.", "text": "There's plugin-container.exe and browsercomps.dll, which are arguably bugs, and then a bunch of test code that we can ignore the warnings on.\n\nWe have to be a little clever about it, certainly."}, {"text": "(In reply to comment #4)\n> There's plugin-container.exe and browsercomps.dll, which are arguably bugs, and\n> then a bunch of test code that we can ignore the warnings on.\n\n... and a lot of code from libjpeg, xpcom, zlib, uconv, etc., etc., and even from js/src.", "raw_text": "(In reply to comment #4)\n> There's plugin-container.exe and browsercomps.dll, which are arguably bugs, and\n> then a bunch of test code that we can ignore the warnings on.\n\n... and a lot of code from libjpeg, xpcom, zlib, uconv, etc., etc., and even from js/src.", "creator": "mh+mozilla@glandium.org", "time": "2011-03-18T16:44:52Z", "count": 5, "bug_id": 641798, "tags": [], "creation_time": "2011-03-18T16:44:52Z", "attachment_id": null, "id": 5353518, "is_private": false, "author": "mh+mozilla@glandium.org"}, {"id": 5354343, "is_private": false, "author": "khuey@kylehuey.com", "time": "2011-03-18T21:28:18Z", "count": 6, "bug_id": 641798, "text": "which ends up in libxul and is PGOd ...", "tags": [], "creation_time": "2011-03-18T21:28:18Z", "attachment_id": null, "raw_text": "which ends up in libxul and is PGOd ...", "creator": "khuey@kylehuey.com"}, {"count": 7, "author": "mh+mozilla@glandium.org", "time": "2011-03-18T21:32:54Z", "is_private": false, "id": 5354357, "creator": "mh+mozilla@glandium.org", "raw_text": "(In reply to comment #6)\n> which ends up in libxul and is PGOd ...\n\nExcept you get the PGO disabled warning way before linking, with gcc. I know the bug has been reported for windows PGO, but since we're going to enable PGO on Linux soonish, this would be nice to have there too.", "attachment_id": null, "tags": [], "creation_time": "2011-03-18T21:32:54Z", "text": "(In reply to comment #6)\n> which ends up in libxul and is PGOd ...\n\nExcept you get the PGO disabled warning way before linking, with gcc. I know the bug has been reported for windows PGO, but since we're going to enable PGO on Linux soonish, this would be nice to have there too.", "bug_id": 641798}, {"is_private": false, "author": "khuey@kylehuey.com", "id": 5354363, "attachment_id": null, "tags": [], "creation_time": "2011-03-18T21:33:40Z", "bug_id": 641798, "count": 8, "time": "2011-03-18T21:33:40Z", "creator": "khuey@kylehuey.com", "raw_text": "Ah ... that explains why we're talking past each other ;-)", "text": "Ah ... that explains why we're talking past each other ;-)"}, {"raw_text": "Sorry, my English is very very poor.\n\nI found something maybe useful.\n\n1.\n\"*.pgd(0) : warning C4961: No profile data was merged into '*.pgd', profile-guided optimizations disabled\"\n\ncomm-release/config/rules.mk\n======\n@@ -937,11 +937,11 @@\n ifneq (,$(SHARED_LIBRARY)$(PROGRAM))\n export::\n ifdef PROGRAM\n\t$(PYTHON) $(MOZILLA_SRCDIR)/build/win32/pgomerge.py \\\n \t  $(PROGRAM:$(BIN_SUFFIX)=) $(DIST)/$(MOZ_APP_NAME)\n endif\n ifdef SHARED_LIBRARY\n-\t$(PYTHON) $(topsrcdir)/build/win32/pgomerge.py \\\n+\t$(PYTHON) $(MOZILLA_SRCDIR)/build/win32/pgomerge.py \\\n \t  $(SHARED_LIBRARY_NAME) $(DIST)/$(MOZ_APP_NAME)\n endif\n endif # SHARED_LIBRARY || PROGRAM\n======\n\nAnd you will see two $(MOZ_APP_NAME) sit there.\n\nThat's mean pgomerge.py will find *.pgc inside dist/seamonkey.\n\nAnd normally *.pgc will place inside dist/bin.\n\nThat's why pgo link phase got no data for optimize.\n\n2. \nSHARED_LIBRARY defined wrong pgomerge.py path.\n\n$(MOZILLA_SRCDIR)=$(topsrcdir)/mozilla\n\nPlease see above rules.mk.\n\nNormally pgomerge.py will be placed here: \ncomm-beta/mozilla/build/win32/pgomerge.py\n\nso use $(topsrcdir) will got wrong path and will got error to stop compile session.", "creator": "s793016@gmail.com", "text": "Sorry, my English is very very poor.\n\nI found something maybe useful.\n\n1.\n\"*.pgd(0) : warning C4961: No profile data was merged into '*.pgd', profile-guided optimizations disabled\"\n\ncomm-release/config/rules.mk\n======\n@@ -937,11 +937,11 @@\n ifneq (,$(SHARED_LIBRARY)$(PROGRAM))\n export::\n ifdef PROGRAM\n\t$(PYTHON) $(MOZILLA_SRCDIR)/build/win32/pgomerge.py \\\n \t  $(PROGRAM:$(BIN_SUFFIX)=) $(DIST)/$(MOZ_APP_NAME)\n endif\n ifdef SHARED_LIBRARY\n-\t$(PYTHON) $(topsrcdir)/build/win32/pgomerge.py \\\n+\t$(PYTHON) $(MOZILLA_SRCDIR)/build/win32/pgomerge.py \\\n \t  $(SHARED_LIBRARY_NAME) $(DIST)/$(MOZ_APP_NAME)\n endif\n endif # SHARED_LIBRARY || PROGRAM\n======\n\nAnd you will see two $(MOZ_APP_NAME) sit there.\n\nThat's mean pgomerge.py will find *.pgc inside dist/seamonkey.\n\nAnd normally *.pgc will place inside dist/bin.\n\nThat's why pgo link phase got no data for optimize.\n\n2. \nSHARED_LIBRARY defined wrong pgomerge.py path.\n\n$(MOZILLA_SRCDIR)=$(topsrcdir)/mozilla\n\nPlease see above rules.mk.\n\nNormally pgomerge.py will be placed here: \ncomm-beta/mozilla/build/win32/pgomerge.py\n\nso use $(topsrcdir) will got wrong path and will got error to stop compile session.", "time": "2011-08-06T19:07:24Z", "count": 9, "tags": [], "creation_time": "2011-08-06T19:07:24Z", "attachment_id": null, "bug_id": 641798, "author": "s793016@gmail.com", "is_private": false, "id": 5637699}]}}, "comments": {}}