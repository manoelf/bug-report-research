{"comments": {}, "bugs": {"680823": {"comments": [{"bug_id": 680823, "is_private": false, "count": 0, "tags": [], "id": 5668561, "text": "It currently doesn't have any effect on iframes.\n\nNeil, do you know why resize wouldn't apply on iframes?", "time": "2011-08-22T03:22:28Z", "attachment_id": null, "raw_text": "It currently doesn't have any effect on iframes.\n\nNeil, do you know why resize wouldn't apply on iframes?", "creation_time": "2011-08-22T03:22:28Z", "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"creator": "enndeakin@gmail.com", "author": "enndeakin@gmail.com", "bug_id": 680823, "count": 1, "is_private": false, "tags": [], "id": 5688519, "text": "Presumably, the resize property has to be passed onto the document loaded in the frame in the same way that the overflow property is. (in nsGfxScrollFrameInner::GetScrollbarStylesFromFrame() I would guess).", "attachment_id": null, "time": "2011-08-30T19:06:50Z", "creation_time": "2011-08-30T19:06:50Z", "raw_text": "Presumably, the resize property has to be passed onto the document loaded in the frame in the same way that the overflow property is. (in nsGfxScrollFrameInner::GetScrollbarStylesFromFrame() I would guess)."}, {"tags": [], "is_private": false, "count": 2, "id": 5703600, "bug_id": 680823, "creation_time": "2011-09-07T00:16:16Z", "raw_text": "So, this WIP patch enables the resizer control to be displayed on the iframe.  But it can't resize the iframe using the mouse.  While I was trying to investigate why this happens, I came across this check: <http://mxr.mozilla.org/mozilla-central/source/layout/xul/base/src/nsResizerFrame.cpp#362> which is explicitly preventing this from working.  This check has been added in bug 489303.\n\nNeil, roc: do you know if it's safe to disable this check?", "text": "Created attachment 558675\nWIP 1\n\nSo, this WIP patch enables the resizer control to be displayed on the iframe.  But it can't resize the iframe using the mouse.  While I was trying to investigate why this happens, I came across this check: <http://mxr.mozilla.org/mozilla-central/source/layout/xul/base/src/nsResizerFrame.cpp#362> which is explicitly preventing this from working.  This check has been added in bug 489303.\n\nNeil, roc: do you know if it's safe to disable this check?", "attachment_id": 558675, "time": "2011-09-07T00:16:16Z", "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"bug_id": 680823, "tags": [], "is_private": false, "count": 3, "id": 5703630, "text": "Does the patch in bug 557049 help here?", "attachment_id": null, "time": "2011-09-07T00:25:42Z", "creation_time": "2011-09-07T00:25:42Z", "raw_text": "Does the patch in bug 557049 help here?", "creator": "enndeakin@gmail.com", "author": "enndeakin@gmail.com"}, {"text": "Sorry, I meany bug 683394.", "attachment_id": null, "time": "2011-09-07T00:26:13Z", "raw_text": "Sorry, I meany bug 683394.", "creation_time": "2011-09-07T00:26:13Z", "bug_id": 680823, "tags": [], "is_private": false, "count": 4, "id": 5703633, "creator": "enndeakin@gmail.com", "author": "enndeakin@gmail.com"}, {"creation_time": "2011-09-07T00:28:50Z", "raw_text": "(In reply to Neil Deakin from comment #4)\n> Sorry, I meany bug 683394.\n\nIt does, in the sense that resizing the iframe does something.  But that thing is resizing the parent window, not the iframe itself.  :(", "attachment_id": null, "time": "2011-09-07T00:28:50Z", "text": "(In reply to Neil Deakin from comment #4)\n> Sorry, I meany bug 683394.\n\nIt does, in the sense that resizing the iframe does something.  But that thing is resizing the parent window, not the iframe itself.  :(", "id": 5703646, "tags": [], "is_private": false, "count": 5, "bug_id": 680823, "author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com"}, {"text": "Note to self: this patch causes this SVG test to crash by doing recursive restyles and running out of stack space: http://mxr.mozilla.org/mozilla-central/source/layout/svg/crashtests/587336-1.html?force=1\n\nSimilar bugs: bug 587336 and bug 601999.  Hoping that Daniel can tell me why...", "time": "2011-09-08T21:27:05Z", "attachment_id": null, "creation_time": "2011-09-08T21:27:05Z", "raw_text": "Note to self: this patch causes this SVG test to crash by doing recursive restyles and running out of stack space: http://mxr.mozilla.org/mozilla-central/source/layout/svg/crashtests/587336-1.html?force=1\n\nSimilar bugs: bug 587336 and bug 601999.  Hoping that Daniel can tell me why...", "bug_id": 680823, "tags": [], "count": 6, "is_private": false, "id": 5709155, "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com", "bug_id": 680823, "count": 7, "is_private": false, "tags": [], "id": 5731309, "text": "dholbert: ping?  (yes, I know that you're on vacation!  this ping is targeted at next week!)", "time": "2011-09-22T17:46:51Z", "attachment_id": null, "creation_time": "2011-09-22T17:46:51Z", "raw_text": "dholbert: ping?  (yes, I know that you're on vacation!  this ping is targeted at next week!)"}, {"author": "dholbert@mozilla.com", "creator": "dholbert@mozilla.com", "time": "2011-09-29T22:26:56Z", "attachment_id": null, "text": "I applied your patch (with fuzz to accommodate the recent bool switchover), and I was able to load 587336-1.html just fine.  (It loads immediately, with little-to-no CPU & memory usage. UI stays responsive, and I don't see any crashes after leaving it open for a minute or so.)\n\nI did notice one odd thing though -- with your patch, that crashtest renders a \"B\" character.  Without the patch, it's blank.", "raw_text": "I applied your patch (with fuzz to accommodate the recent bool switchover), and I was able to load 587336-1.html just fine.  (It loads immediately, with little-to-no CPU & memory usage. UI stays responsive, and I don't see any crashes after leaving it open for a minute or so.)\n\nI did notice one odd thing though -- with your patch, that crashtest renders a \"B\" character.  Without the patch, it's blank.", "creation_time": "2011-09-29T22:26:56Z", "bug_id": 680823, "id": 5747875, "tags": [], "is_private": false, "count": 8}, {"bug_id": 680823, "id": 5747934, "tags": [], "is_private": false, "count": 9, "time": "2011-09-29T22:42:28Z", "attachment_id": null, "text": "(Sorry, disregard comment 8 --I'd disabled scripts in that source tree's test-profile, and had forgotten about it, so the crashtest's onload handler wasn't firing.  Now that I've re-enabled scripts, I do hit the problem - hang & crash-within-a-few-seconds.)", "creation_time": "2011-09-29T22:42:28Z", "raw_text": "(Sorry, disregard comment 8 --I'd disabled scripts in that source tree's test-profile, and had forgotten about it, so the crashtest's onload handler wasn't firing.  Now that I've re-enabled scripts, I do hit the problem - hang & crash-within-a-few-seconds.)", "author": "dholbert@mozilla.com", "creator": "dholbert@mozilla.com"}, {"creator": "dholbert@mozilla.com", "author": "dholbert@mozilla.com", "raw_text": "So, this is sort of the reverse of bug 601999.  There, we've got a parent who uses its child as a filter; in 587336-1.html, we've got a child that uses its parent as a filter.\n\nBasically, what happens here is this:\n - Each reflow of the root scrollframe posts a reflow callback.\n - With current trunk, we service these callbacks asynchronously, so the UI remains responsive and we don't hit any recursion. (though we do get high CPU usage)\n - However, as described below, the patch here ends up making us set \"shouldFlush\" to *true* inside of HandlePostedReflowCallbacks, which makes us synchronously flush the new callback inside of HandlePostedReflowCallbacks, triggering a recursive death-spiral of nested HandlePostedReflowCallbacks / FlushPendingNotifications / ProcessReflowCommands / DidDoReflow calls.\n\nHere's why \"shouldFlush\" ends up being set, with the attached patch:\n (1) This bug's patch tweaks nsHTMLScrollFrame::Reflow to make mInner.mCollapsedResizer default to *false*, instead of the current default of *true*.\n (2) As a result, 'reflowScrollCorner' ends up being true (instead of false as it otherwise would be)\n (3) As a result, we hit the clause that calls mInner.LayoutScrollbars()\n (4) At the end of LayoutScrollbars, we set mUpdateScrollbarAttributes to true.\n (5) As a result, when we reach nsGfxScrollFrameInner::ReflowFinished(), we actually complete that function and return PR_TRUE instead of taking the early PR_FALSE return (due to a \"!mUpdateScrollbarAttributes\" check).\nhttp://mxr.mozilla.org/mozilla-central/source/layout/generic/nsGfxScrollFrame.cpp#3134\n (6) The boolean return-value from the previous step turns out to be all-important -- it tells the caller (HandlePostedReflowCallbacks) whether it needs to flush pending notifications (\"shouldFlush\") synchronously.\nhttp://mxr.mozilla.org/mozilla-central/source/layout/base/nsPresShell.cpp#3859\n (7) As described at the beginning of this comment, we do have a callback posted -- we've got a reflow requrested for the scrolled frame's inner frame.  Since shouldFlush is now *true*, we evaluate that callback synchronously.\n (8) That callback triggers the code-path from (1) (nsHTMLScrollFrame::Reflow), so we end up recursively death-spiraling.\n\nI'm not immediately sure which point the fix should come in, but this at least somewhat explains why this patch makes us fail. :)\n\nehsan: Are you sure that you want to change the default value of mCollapsedResizer (and by extension, the value of \"reflowScrollCorner\")?  If not, we could nip this in the bud up at (1)/(2) in my analysis above. :)  Otherwise, we may have to tweak the filter invalidation a bit... (I'm not sure where or under what conditions, though)", "creation_time": "2011-09-30T23:57:12Z", "text": "So, this is sort of the reverse of bug 601999.  There, we've got a parent who uses its child as a filter; in 587336-1.html, we've got a child that uses its parent as a filter.\n\nBasically, what happens here is this:\n - Each reflow of the root scrollframe posts a reflow callback.\n - With current trunk, we service these callbacks asynchronously, so the UI remains responsive and we don't hit any recursion. (though we do get high CPU usage)\n - However, as described below, the patch here ends up making us set \"shouldFlush\" to *true* inside of HandlePostedReflowCallbacks, which makes us synchronously flush the new callback inside of HandlePostedReflowCallbacks, triggering a recursive death-spiral of nested HandlePostedReflowCallbacks / FlushPendingNotifications / ProcessReflowCommands / DidDoReflow calls.\n\nHere's why \"shouldFlush\" ends up being set, with the attached patch:\n (1) This bug's patch tweaks nsHTMLScrollFrame::Reflow to make mInner.mCollapsedResizer default to *false*, instead of the current default of *true*.\n (2) As a result, 'reflowScrollCorner' ends up being true (instead of false as it otherwise would be)\n (3) As a result, we hit the clause that calls mInner.LayoutScrollbars()\n (4) At the end of LayoutScrollbars, we set mUpdateScrollbarAttributes to true.\n (5) As a result, when we reach nsGfxScrollFrameInner::ReflowFinished(), we actually complete that function and return PR_TRUE instead of taking the early PR_FALSE return (due to a \"!mUpdateScrollbarAttributes\" check).\nhttp://mxr.mozilla.org/mozilla-central/source/layout/generic/nsGfxScrollFrame.cpp#3134\n (6) The boolean return-value from the previous step turns out to be all-important -- it tells the caller (HandlePostedReflowCallbacks) whether it needs to flush pending notifications (\"shouldFlush\") synchronously.\nhttp://mxr.mozilla.org/mozilla-central/source/layout/base/nsPresShell.cpp#3859\n (7) As described at the beginning of this comment, we do have a callback posted -- we've got a reflow requrested for the scrolled frame's inner frame.  Since shouldFlush is now *true*, we evaluate that callback synchronously.\n (8) That callback triggers the code-path from (1) (nsHTMLScrollFrame::Reflow), so we end up recursively death-spiraling.\n\nI'm not immediately sure which point the fix should come in, but this at least somewhat explains why this patch makes us fail. :)\n\nehsan: Are you sure that you want to change the default value of mCollapsedResizer (and by extension, the value of \"reflowScrollCorner\")?  If not, we could nip this in the bud up at (1)/(2) in my analysis above. :)  Otherwise, we may have to tweak the filter invalidation a bit... (I'm not sure where or under what conditions, though)", "time": "2011-09-30T23:57:12Z", "attachment_id": null, "count": 10, "is_private": false, "tags": [], "id": 5751130, "bug_id": 680823}, {"bug_id": 680823, "count": 11, "is_private": false, "tags": [], "id": 5785596, "text": "This is way beyond my knowledge on this code!  Is there somebody else who knows this code better?  The change that I made to mCollapsedResizer makes sense with what I'm doing in the patch, but I'm not sure if these side-effects are expected, and how to fix them... :/", "time": "2011-10-17T04:05:48Z", "attachment_id": null, "raw_text": "This is way beyond my knowledge on this code!  Is there somebody else who knows this code better?  The change that I made to mCollapsedResizer makes sense with what I'm doing in the patch, but I'm not sure if these side-effects are expected, and how to fix them... :/", "creation_time": "2011-10-17T04:05:48Z", "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"creation_time": "2011-10-17T20:32:29Z", "raw_text": "Ehsan, can you explain why you changed the setting of mCollapsedResizer from true to false? Root frames should only show resizers in <browser showresizer=\"true\"/> The showresizer attribute can change and cause the scrollbar to reflow.", "attachment_id": null, "time": "2011-10-17T20:32:29Z", "text": "Ehsan, can you explain why you changed the setting of mCollapsedResizer from true to false? Root frames should only show resizers in <browser showresizer=\"true\"/> The showresizer attribute can change and cause the scrollbar to reflow.", "id": 5787250, "tags": [], "count": 12, "is_private": false, "bug_id": 680823, "author": "enndeakin@gmail.com", "creator": "enndeakin@gmail.com"}, {"bug_id": 680823, "count": 13, "is_private": false, "tags": [], "id": 5788296, "text": "(In reply to Neil Deakin from comment #12)\n> Ehsan, can you explain why you changed the setting of mCollapsedResizer from\n> true to false? Root frames should only show resizers in <browser\n> showresizer=\"true\"/> The showresizer attribute can change and cause the\n> scrollbar to reflow.\n\nBut that changes when we want to make iframes resizable, right?  Please note that this patch was work in progress, and it is completely possible that I've basically missed how this code is supposed to work.  :-)", "attachment_id": null, "time": "2011-10-18T03:57:49Z", "creation_time": "2011-10-18T03:57:49Z", "raw_text": "(In reply to Neil Deakin from comment #12)\n> Ehsan, can you explain why you changed the setting of mCollapsedResizer from\n> true to false? Root frames should only show resizers in <browser\n> showresizer=\"true\"/> The showresizer attribute can change and cause the\n> scrollbar to reflow.\n\nBut that changes when we want to make iframes resizable, right?  Please note that this patch was work in progress, and it is completely possible that I've basically missed how this code is supposed to work.  :-)", "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"creator": "crimsteam@gmail.com", "author": "crimsteam@gmail.com", "bug_id": 680823, "is_private": false, "count": 14, "tags": [], "id": 9785897, "text": "Unfortunately this problem still exists and limited usefulness for CSS resize property (eg. for all tools that return the results to the iframe). So posibility to change the size for this one element requires using another solution. In other browser we see that:\n- Chrome works correctly\n- IE11 doesn't support CSS resize property", "time": "2015-01-13T06:03:48Z", "attachment_id": null, "raw_text": "Unfortunately this problem still exists and limited usefulness for CSS resize property (eg. for all tools that return the results to the iframe). So posibility to change the size for this one element requires using another solution. In other browser we see that:\n- Chrome works correctly\n- IE11 doesn't support CSS resize property", "creation_time": "2015-01-13T06:03:48Z"}, {"creator": "florian@rivoal.net", "author": "florian@rivoal.net", "tags": [], "is_private": false, "count": 15, "id": 12429332, "bug_id": 680823, "creation_time": "2017-06-26T01:35:35Z", "raw_text": "This is now clear in the CSS-UI specification that resizing iframes is allowed regardless of the value of the overflow property. There is a test the CSS-UI-3 test suite for this, passed by Chrome and Safari, but failed by Firefox:\n\nhttps://test.csswg.org/harness/test/css-ui-3_dev/single/resize-012/format/html5/\n\n\nSpec ref: https://drafts.csswg.org/css-ui-3/#resize", "text": "This is now clear in the CSS-UI specification that resizing iframes is allowed regardless of the value of the overflow property. There is a test the CSS-UI-3 test suite for this, passed by Chrome and Safari, but failed by Firefox:\n\nhttps://test.csswg.org/harness/test/css-ui-3_dev/single/resize-012/format/html5/\n\n\nSpec ref: https://drafts.csswg.org/css-ui-3/#resize", "time": "2017-06-26T01:35:35Z", "attachment_id": null}, {"raw_text": "Mass bug change to replace various 'parity' whiteboard flags with the new canonical keywords. (See bug 1443764 comment 13.)", "creation_time": "2018-05-02T15:42:32Z", "attachment_id": null, "time": "2018-05-02T15:42:32Z", "text": "Mass bug change to replace various 'parity' whiteboard flags with the new canonical keywords. (See bug 1443764 comment 13.)", "id": 13249228, "tags": [], "count": 16, "is_private": false, "bug_id": 680823, "author": "jwatt@jwatt.org", "creator": "jwatt@jwatt.org"}, {"bug_id": 680823, "id": 14713629, "is_private": false, "count": 17, "tags": [], "time": "2020-03-24T16:40:05Z", "attachment_id": null, "text": "There seems to be a [workaround by wrapping `iframe` into a resizable `div`](https://stackoverflow.com/a/60803488/490291) using flexbox:\n\n```\n.resizer { display:flex; margin:0; padding:0; resize:both; overflow:hidden }\n.resizer > .resized { flex-grow:1; margin:0; padding:0; border:0 }\n```\n```\n<div class=\"resizer\">\n<iframe class=\"resized\" src=\"https://wikipedia.org/\"></iframe>\n</div>\n```\n\nSo pure CSS can resize an `iframe` even in FF today.  Perhaps it's time to look at this here again.", "raw_text": "There seems to be a [workaround by wrapping `iframe` into a resizable `div`](https://stackoverflow.com/a/60803488/490291) using flexbox:\n\n```\n.resizer { display:flex; margin:0; padding:0; resize:both; overflow:hidden }\n.resizer > .resized { flex-grow:1; margin:0; padding:0; border:0 }\n```\n```\n<div class=\"resizer\">\n<iframe class=\"resized\" src=\"https://wikipedia.org/\"></iframe>\n</div>\n```\n\nSo pure CSS can resize an `iframe` even in FF today.  Perhaps it's time to look at this here again.", "creation_time": "2020-03-24T16:40:05Z", "author": "valentin@hilbig.de", "creator": "valentin@hilbig.de"}]}}}