{"bugs": {"423159": {"comments": [{"author": "mats@mozilla.com", "time": "2008-03-15T16:58:50Z", "text": "STEPS TO REPRODUCE\n1. start Firefox trunk debug build on MacOSX and leave it open for a while\n\nACTUAL RESULTS\nAfter a couple of minutes a few of these warnings appear on the console:\n\nWARNING: Unsafe use of LIKE detected!  Please ensure that you are using mozIStorageConnection::escapeStringForLIKE and that you are binding that result to the statement to prevent SQL injection attacks.: file /Users/mats/ff-dtrace/mozilla/storage/src/mozStorageStatement.cpp, line 176\n\n\nRequesting blocking-firefox3 since bug 419642 was.\nBTW, if this is a condition that never should occur then I suggest\nwe make that warning an error instead.", "creation_time": "2008-03-15T16:58:50Z", "count": 0, "bug_id": 423159, "is_private": false, "creator": "mats@mozilla.com", "raw_text": "STEPS TO REPRODUCE\n1. start Firefox trunk debug build on MacOSX and leave it open for a while\n\nACTUAL RESULTS\nAfter a couple of minutes a few of these warnings appear on the console:\n\nWARNING: Unsafe use of LIKE detected!  Please ensure that you are using mozIStorageConnection::escapeStringForLIKE and that you are binding that result to the statement to prevent SQL injection attacks.: file /Users/mats/ff-dtrace/mozilla/storage/src/mozStorageStatement.cpp, line 176\n\n\nRequesting blocking-firefox3 since bug 419642 was.\nBTW, if this is a condition that never should occur then I suggest\nwe make that warning an error instead.", "tags": [], "id": 3529679, "attachment_id": null}, {"creation_time": "2008-03-15T16:59:54Z", "text": "start = {\n  mStart = 0x1c186d90 \"SELECT name FROM sqlite_master WHERE type = 'index' AND name = 'moz_places_visitcount' AND sql LIKE '%rev_host%'\", \n  mEnd = 0x1c186e00 \"\", \n  mPosition = 0x1c186dee \" LIKE '%rev_host%'\"\n}\n", "author": "mats@mozilla.com", "time": "2008-03-15T16:59:54Z", "attachment_id": null, "id": 3529680, "tags": [], "raw_text": "start = {\n  mStart = 0x1c186d90 \"SELECT name FROM sqlite_master WHERE type = 'index' AND name = 'moz_places_visitcount' AND sql LIKE '%rev_host%'\", \n  mEnd = 0x1c186e00 \"\", \n  mPosition = 0x1c186dee \" LIKE '%rev_host%'\"\n}\n", "creator": "mats@mozilla.com", "is_private": false, "bug_id": 423159, "count": 1}, {"tags": [], "creation_time": "2008-03-15T17:57:04Z", "attachment_id": null, "id": 3529734, "is_private": false, "bug_id": 423159, "count": 2, "time": "2008-03-15T17:57:04Z", "author": "mbeltzner@gmail.com", "raw_text": "Possibly related to bug 420164?", "text": "Possibly related to bug 420164?", "creator": "mbeltzner@gmail.com"}, {"raw_text": "(In reply to comment #2)\n> Possibly related to bug 420164?\nNo, don't think so", "creator": "sdwilsh@forerunnerdesigns.com", "is_private": false, "count": 3, "bug_id": 423159, "attachment_id": null, "id": 3529743, "tags": [], "text": "(In reply to comment #2)\n> Possibly related to bug 420164?\nNo, don't think so", "author": "sdwilsh@forerunnerdesigns.com", "time": "2008-03-15T18:05:33Z", "creation_time": "2008-03-15T18:05:33Z"}, {"tags": [], "id": 3530372, "attachment_id": null, "count": 4, "bug_id": 423159, "is_private": false, "creator": "gavin.sharp@gmail.com", "raw_text": "(In reply to comment #1)\n> start = {\n>   mStart = 0x1c186d90 \"SELECT name FROM sqlite_master WHERE type = 'index' AND\n> name = 'moz_places_visitcount' AND sql LIKE '%rev_host%'\", \n\nThat query was added by bug 402161.\n", "creation_time": "2008-03-16T08:14:55Z", "time": "2008-03-16T08:14:55Z", "author": "gavin.sharp@gmail.com", "text": "(In reply to comment #1)\n> start = {\n>   mStart = 0x1c186d90 \"SELECT name FROM sqlite_master WHERE type = 'index' AND\n> name = 'moz_places_visitcount' AND sql LIKE '%rev_host%'\", \n\nThat query was added by bug 402161.\n"}, {"count": 5, "author": "mak@mozilla.com", "time": "2008-03-16T23:30:05Z", "bug_id": 423159, "is_private": false, "creator": "mak@mozilla.com", "text": "there's no injection possibility there, still we can workaround to avoid the warning", "raw_text": "there's no injection possibility there, still we can workaround to avoid the warning", "creation_time": "2008-03-16T23:30:05Z", "tags": [], "id": 3531056, "attachment_id": null}, {"creator": "mak@mozilla.com", "raw_text": "to clarify, it's a fixed query that is executed on idle, to cleanup bogus data from the db. being a fixed query nobody can inject anything.", "count": 6, "bug_id": 423159, "is_private": false, "id": 3531063, "attachment_id": null, "tags": [], "text": "to clarify, it's a fixed query that is executed on idle, to cleanup bogus data from the db. being a fixed query nobody can inject anything.", "time": "2008-03-16T23:31:34Z", "author": "mak@mozilla.com", "creation_time": "2008-03-16T23:31:34Z"}, {"id": 3532490, "attachment_id": 310035, "tags": [], "creator": "mak@mozilla.com", "raw_text": "", "count": 7, "bug_id": 423159, "is_private": false, "creation_time": "2008-03-17T18:36:06Z", "text": "Created attachment 310035\npatch", "author": "mak@mozilla.com", "time": "2008-03-17T18:36:06Z"}, {"creation_time": "2008-03-18T11:54:12Z", "time": "2008-03-18T11:54:12Z", "author": "ondrej@allpeers.com", "text": "Comment on attachment 310035\npatch\n\nEscaping a constant does not make much sense, we should simply bind the whole string \"%rev_host%\".", "tags": [], "attachment_id": 310035, "id": 3533854, "is_private": false, "bug_id": 423159, "count": 8, "raw_text": "Escaping a constant does not make much sense, we should simply bind the whole string \"%rev_host%\".", "creator": "ondrej@allpeers.com"}, {"attachment_id": 310035, "id": 3533910, "tags": [], "creation_time": "2008-03-18T12:46:57Z", "text": "Comment on attachment 310035\npatch\n\noh well, i thought it was looking for correct use of escapeStringForLike, but from what i see in the source it's only looking for a bind (so ?, :, @)... imho that warning does not make sense at all, i could take a user value and bind it, without even having a warning...\n\nhwv due to that, you're right and i'm going removing that", "raw_text": "oh well, i thought it was looking for correct use of escapeStringForLike, but from what i see in the source it's only looking for a bind (so ?, :, @)... imho that warning does not make sense at all, i could take a user value and bind it, without even having a warning...\n\nhwv due to that, you're right and i'm going removing that", "creator": "mak@mozilla.com", "is_private": false, "author": "mak@mozilla.com", "count": 9, "time": "2008-03-18T12:46:57Z", "bug_id": 423159}, {"time": "2008-03-18T13:28:16Z", "count": 10, "author": "mak@mozilla.com", "bug_id": 423159, "is_private": false, "creator": "mak@mozilla.com", "text": "Created attachment 310246\npatch", "raw_text": "", "creation_time": "2008-03-18T13:28:16Z", "tags": [], "id": 3533949, "attachment_id": 310246}, {"is_private": false, "bug_id": 423159, "author": "ondrej@allpeers.com", "count": 11, "time": "2008-03-18T14:48:51Z", "text": "(In reply to comment #8)\n> (From update of attachment 310035 [details])\n> Escaping a constant does not make much sense, we should simply bind the whole\n> string \"%rev_host%\".\n\nHm, stupid me, you have underscore (as wildchar) in your constant. So the previous patch was correct. I did not realize that when looking at the diff before. So this bug is not just about removing warning, it fixes the problem, that your match was too broad. It looks like the warning is on good place ;-)\n\n", "raw_text": "(In reply to comment #8)\n> (From update of attachment 310035 [details])\n> Escaping a constant does not make much sense, we should simply bind the whole\n> string \"%rev_host%\".\n\nHm, stupid me, you have underscore (as wildchar) in your constant. So the previous patch was correct. I did not realize that when looking at the diff before. So this bug is not just about removing warning, it fixes the problem, that your match was too broad. It looks like the warning is on good place ;-)\n\n", "creator": "ondrej@allpeers.com", "tags": [], "creation_time": "2008-03-18T14:48:51Z", "attachment_id": null, "id": 3534048}, {"tags": [], "creation_time": "2008-03-18T15:06:17Z", "attachment_id": 310035, "id": 3534081, "is_private": false, "bug_id": 423159, "time": "2008-03-18T15:06:17Z", "count": 12, "author": "mak@mozilla.com", "text": "Comment on attachment 310035\npatch\n\ndoh! \"An underscore _ in the pattern matches any single character in the string\"\n\nwell should not be a problem in both cases, we should not have many indexes called visitcount on a rev(a random char)host column. So both of the attached patches are good, perf should not be a problem, is a single query on a compact table on a long idle. let dietrich choose his preferred way", "raw_text": "doh! \"An underscore _ in the pattern matches any single character in the string\"\n\nwell should not be a problem in both cases, we should not have many indexes called visitcount on a rev(a random char)host column. So both of the attached patches are good, perf should not be a problem, is a single query on a compact table on a long idle. let dietrich choose his preferred way", "creator": "mak@mozilla.com"}, {"is_private": false, "count": 13, "author": "hzbz@pm.me", "time": "2008-03-21T20:24:07Z", "bug_id": 423159, "text": "Comment on attachment 310246\npatch\n\nI'd prefer to have the underscore properly escaped. If it's not meant to be a wildcard, don't use it as one. Others, when later modifying this code, may also overlook it, creating the potential for future danger.\n\n(In reply to comment #9)\n> oh well, i thought it was looking for correct use of escapeStringForLike, but\n> from what i see in the source it's only looking for a bind (so ?, :, @)... imho\n> that warning does not make sense at all, i could take a user value and bind it,\n> without even having a warning...\n\nplease file a followup against storage for this. Coding around a pointless warning is a waste of time. We should instead fix the warning to reduce false positives.", "raw_text": "I'd prefer to have the underscore properly escaped. If it's not meant to be a wildcard, don't use it as one. Others, when later modifying this code, may also overlook it, creating the potential for future danger.\n\n(In reply to comment #9)\n> oh well, i thought it was looking for correct use of escapeStringForLike, but\n> from what i see in the source it's only looking for a bind (so ?, :, @)... imho\n> that warning does not make sense at all, i could take a user value and bind it,\n> without even having a warning...\n\nplease file a followup against storage for this. Coding around a pointless warning is a waste of time. We should instead fix the warning to reduce false positives.", "creator": "hzbz@pm.me", "tags": [], "creation_time": "2008-03-21T20:24:07Z", "attachment_id": 310246, "id": 3540155}, {"creator": "mak@mozilla.com", "text": "(In reply to comment #13)\n> (From update of attachment 310246 [details])\n> I'd prefer to have the underscore properly escaped. If it's not meant to be a\n> wildcard, don't use it as one. Others, when later modifying this code, may also\n\nso, the first attachment should be fine :)", "raw_text": "(In reply to comment #13)\n> (From update of attachment 310246 [details])\n> I'd prefer to have the underscore properly escaped. If it's not meant to be a\n> wildcard, don't use it as one. Others, when later modifying this code, may also\n\nso, the first attachment should be fine :)", "time": "2008-03-21T21:17:13Z", "count": 14, "author": "mak@mozilla.com", "bug_id": 423159, "is_private": false, "id": 3540270, "attachment_id": null, "creation_time": "2008-03-21T21:17:13Z", "tags": []}, {"attachment_id": null, "id": 3540390, "tags": [], "creation_time": "2008-03-21T22:21:59Z", "raw_text": "additional cases of WARNING: Unsafe use of LIKE detected! :\n\nmacintel 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=e4x/Regress/regress-319872.js;language=type;text/javascript >\n\nmacintel 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=e4x/Regress/regress-394941.js;language=type;text/javascript>\n\nmacintel 10.5,macppc 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=js1_5/extensions/regress-336409-1.js;language=type;text/javascript>\n\nmacpcc   10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=js1_5/extensions/regress-336410-1.js;language=type;text/javascript>\n\nmacintel 10.4 macppc 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=js1_5/GC/regress-338653.js;language=type;text/javascript>\n\n\n", "text": "additional cases of WARNING: Unsafe use of LIKE detected! :\n\nmacintel 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=e4x/Regress/regress-319872.js;language=type;text/javascript >\n\nmacintel 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=e4x/Regress/regress-394941.js;language=type;text/javascript>\n\nmacintel 10.5,macppc 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=js1_5/extensions/regress-336409-1.js;language=type;text/javascript>\n\nmacpcc   10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=js1_5/extensions/regress-336410-1.js;language=type;text/javascript>\n\nmacintel 10.4 macppc 10.4 \n<http://test.bclary.com/tests/mozilla.org/js/js-test-driver-standards.html?test=js1_5/GC/regress-338653.js;language=type;text/javascript>\n\n\n", "creator": "bob@bclary.com", "is_private": false, "bug_id": 423159, "count": 15, "author": "bob@bclary.com", "time": "2008-03-21T22:21:59Z"}, {"text": "Comment on attachment 310035\npatch\n\nr=me", "time": "2008-03-21T22:23:01Z", "author": "hzbz@pm.me", "creation_time": "2008-03-21T22:23:01Z", "creator": "hzbz@pm.me", "raw_text": "r=me", "bug_id": 423159, "count": 16, "is_private": false, "id": 3540395, "attachment_id": 310035, "tags": []}, {"id": 3540397, "attachment_id": null, "tags": [], "creator": "hzbz@pm.me", "raw_text": "(In reply to comment #15)\n> additional cases of WARNING: Unsafe use of LIKE detected! :\n> \n\nplease file a separate bug for those, assign to the test author.\n", "bug_id": 423159, "count": 17, "is_private": false, "creation_time": "2008-03-21T22:25:10Z", "text": "(In reply to comment #15)\n> additional cases of WARNING: Unsafe use of LIKE detected! :\n> \n\nplease file a separate bug for those, assign to the test author.\n", "time": "2008-03-21T22:25:10Z", "author": "hzbz@pm.me"}, {"attachment_id": null, "id": 3547859, "tags": [], "raw_text": "Checking in toolkit/components/places/src/nsNavHistory.cpp;\n/cvsroot/mozilla/toolkit/components/places/src/nsNavHistory.cpp,v  <--  nsNavHistory.cpp\nnew revision: 1.281; previous revision: 1.280\ndone", "creator": "hzbz@pm.me", "is_private": false, "count": 18, "bug_id": 423159, "creation_time": "2008-03-27T03:34:21Z", "text": "Checking in toolkit/components/places/src/nsNavHistory.cpp;\n/cvsroot/mozilla/toolkit/components/places/src/nsNavHistory.cpp,v  <--  nsNavHistory.cpp\nnew revision: 1.281; previous revision: 1.280\ndone", "author": "hzbz@pm.me", "time": "2008-03-27T03:34:21Z"}, {"creation_time": "2009-11-26T15:12:50Z", "text": "Bug 451915 - move Firefox/Places bugs to Firefox/Bookmarks and History. Remove all bugspam from this move by filtering for the string \"places-to-b-and-h\".\n\nIn Thunderbird 3.0b, you do that as follows:\nTools | Message Filters\nMake sure the correct account is selected. Click \"New\"\nConditions: Body   contains   places-to-b-and-h\nChange the action to \"Delete Message\".\nSelect \"Manually Run\" from the dropdown at the top.\nClick OK.\n\nSelect the filter in the list, make sure \"Inbox\" is selected at the bottom, and click \"Run Now\". This should delete all the bugspam. You can then delete the filter.\n\nGerv", "time": "2009-11-26T15:12:50Z", "author": "gerv@mozilla.org", "id": 4423621, "attachment_id": null, "tags": [], "creator": "gerv@mozilla.org", "raw_text": "Bug 451915 - move Firefox/Places bugs to Firefox/Bookmarks and History. Remove all bugspam from this move by filtering for the string \"places-to-b-and-h\".\n\nIn Thunderbird 3.0b, you do that as follows:\nTools | Message Filters\nMake sure the correct account is selected. Click \"New\"\nConditions: Body   contains   places-to-b-and-h\nChange the action to \"Delete Message\".\nSelect \"Manually Run\" from the dropdown at the top.\nClick OK.\n\nSelect the filter in the list, make sure \"Inbox\" is selected at the bottom, and click \"Run Now\". This should delete all the bugspam. You can then delete the filter.\n\nGerv", "count": 19, "bug_id": 423159, "is_private": false}]}}, "comments": {}}