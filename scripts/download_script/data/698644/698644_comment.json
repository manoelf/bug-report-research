{"bugs": {"698644": {"comments": [{"author": "gal@uci.edu", "time": "2011-11-01T00:21:27Z", "attachment_id": null, "creator": "gal@uci.edu", "text": "Looks to me that all we need that for these days is to keep XPConnect around, which can do with addref/release just as well.", "creation_time": "2011-11-01T00:21:27Z", "raw_text": "Looks to me that all we need that for these days is to keep XPConnect around, which can do with addref/release just as well.", "bug_id": 698644, "id": 5816836, "tags": [], "is_private": false, "count": 0}, {"bug_id": 698644, "is_private": false, "count": 1, "tags": [], "id": 5816842, "text": "Never mind, its not just OnDispatch, its also the context pushing.", "time": "2011-11-01T00:24:38Z", "attachment_id": null, "creation_time": "2011-11-01T00:24:38Z", "raw_text": "Never mind, its not just OnDispatch, its also the context pushing.", "creator": "gal@uci.edu", "author": "gal@uci.edu"}, {"creator": "gal@uci.edu", "author": "gal@uci.edu", "tags": [], "count": 2, "is_private": false, "id": 5816847, "bug_id": 698644, "raw_text": "In which case I can re-purpose this code nicely.", "creation_time": "2011-11-01T00:25:22Z", "text": "In which case I can re-purpose this code nicely.", "attachment_id": null, "time": "2011-11-01T00:25:22Z"}, {"raw_text": "We want to know when an event takes a long time to process, minus processing of content script. I will put some measurement into xpconnect On/AfterProcessNextEvent and cancel the measurement if content script runs.", "creation_time": "2011-11-01T00:26:42Z", "text": "We want to know when an event takes a long time to process, minus processing of content script. I will put some measurement into xpconnect On/AfterProcessNextEvent and cancel the measurement if content script runs.", "creator": "gal@uci.edu", "author": "gal@uci.edu", "attachment_id": null, "time": "2011-11-01T00:26:42Z", "tags": [], "is_private": false, "count": 3, "id": 5816850, "bug_id": 698644}, {"time": "2011-11-01T01:18:26Z", "attachment_id": 570897, "text": "Created attachment 570897\npatch\n\nuntested", "creation_time": "2011-11-01T01:18:26Z", "raw_text": "untested", "bug_id": 698644, "id": 5816957, "tags": [], "is_private": false, "count": 4, "author": "gal@uci.edu", "creator": "gal@uci.edu"}, {"author": "bent.mozilla@gmail.com", "creator": "bent.mozilla@gmail.com", "bug_id": 698644, "id": 5817836, "tags": [], "count": 5, "is_private": false, "attachment_id": 570897, "time": "2011-11-01T14:37:24Z", "text": "Comment on attachment 570897\npatch\n\nReview of attachment 570897:\n-----------------------------------------------------------------\n\nI know this isn't expecting review or anything but I wanted to point out two things before anyone tries it.\n\n::: js/xpconnect/src/nsXPConnect.cpp\n@@ +2355,5 @@\n>  nsXPConnect::OnProcessNextEvent(nsIThreadInternal *aThread, bool aMayWait,\n>                                  PRUint32 aRecursionDepth)\n>  {\n> +    EventProcessingTiming timing = { current, PR_Now() };\n> +    current = &timing;\n\nThis won't work, you're taking address of stack var that you're about to paint over when this function exits.\n\n@@ +2374,5 @@\n>  \n> +    nsresult rv = Pop(nsnull);\n> +\n> +    PRTime now = PR_Now();\n> +    long ms = (now = current->start) / PR_USEC_PER_MSEC;\n\nShould be |(now - current->start)|", "raw_text": "Review of attachment 570897:\n-----------------------------------------------------------------\n\nI know this isn't expecting review or anything but I wanted to point out two things before anyone tries it.\n\n::: js/xpconnect/src/nsXPConnect.cpp\n@@ +2355,5 @@\n>  nsXPConnect::OnProcessNextEvent(nsIThreadInternal *aThread, bool aMayWait,\n>                                  PRUint32 aRecursionDepth)\n>  {\n> +    EventProcessingTiming timing = { current, PR_Now() };\n> +    current = &timing;\n\nThis won't work, you're taking address of stack var that you're about to paint over when this function exits.\n\n@@ +2374,5 @@\n>  \n> +    nsresult rv = Pop(nsnull);\n> +\n> +    PRTime now = PR_Now();\n> +    long ms = (now = current->start) / PR_USEC_PER_MSEC;\n\nShould be |(now - current->start)|", "creation_time": "2011-11-01T14:37:24Z"}, {"author": "gal@uci.edu", "creator": "gal@uci.edu", "bug_id": 698644, "id": 5818007, "tags": [], "is_private": false, "count": 6, "attachment_id": null, "time": "2011-11-01T15:35:40Z", "text": "Yeah I have a new patch will upload when I find network.", "raw_text": "Yeah I have a new patch will upload when I find network.", "creation_time": "2011-11-01T15:35:40Z"}, {"author": "gal@uci.edu", "creator": "gal@uci.edu", "creation_time": "2011-11-01T18:19:47Z", "raw_text": "", "time": "2011-11-01T18:19:47Z", "attachment_id": 571070, "text": "Created attachment 571070\nnew patch", "id": 5818505, "tags": [], "count": 7, "is_private": false, "bug_id": 698644}, {"author": "benjamin@smedbergs.us", "creator": "benjamin@smedbergs.us", "time": "2011-11-02T15:19:40Z", "attachment_id": null, "text": "Note that these global observers only run on *XPCOM* events: the widget thread observer actually does the blocking on native-or-XPCOM events and may dispatch many (or no) native events for each iteration of the main XPCOM event loop (nsThread::ProcessNextEvent). So we really need the instrumentation at the widget layer (or to revamp our main event dispatch mechanism) instead of at the XPCOM layer.\n\nThe data here won't be especially useful, I think.", "creation_time": "2011-11-02T15:19:40Z", "raw_text": "Note that these global observers only run on *XPCOM* events: the widget thread observer actually does the blocking on native-or-XPCOM events and may dispatch many (or no) native events for each iteration of the main XPCOM event loop (nsThread::ProcessNextEvent). So we really need the instrumentation at the widget layer (or to revamp our main event dispatch mechanism) instead of at the XPCOM layer.\n\nThe data here won't be especially useful, I think.", "bug_id": 698644, "id": 5820750, "tags": [], "count": 8, "is_private": false}]}}, "comments": {}}