{"bugs": {"624286": {"comments": [{"is_private": false, "text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\n\nI wouldn't be surprised if this bug boiled down to a boring [sg:dos] null pointer deref, but I think it's security sensitive because it crashes in either:\n\nA post-gc null deref at js_TraceObject\nA null deref at nsAttrAndChildArray::Compact\nOOM\nOne unreproducible EIP overwrite (Illegal instruction at 41414141)\n\nAnd this is all from one testcase.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Load the attached testcase\n\n\n\nThese crashes individually appear safe, but crashing in many places is scary.", "id": 5186070, "time": "2011-01-09T21:51:58Z", "creator": "alexander.miller@sbcglobal.net", "creation_time": "2011-01-09T21:51:58Z", "raw_text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\n\nI wouldn't be surprised if this bug boiled down to a boring [sg:dos] null pointer deref, but I think it's security sensitive because it crashes in either:\n\nA post-gc null deref at js_TraceObject\nA null deref at nsAttrAndChildArray::Compact\nOOM\nOne unreproducible EIP overwrite (Illegal instruction at 41414141)\n\nAnd this is all from one testcase.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Load the attached testcase\n\n\n\nThese crashes individually appear safe, but crashing in many places is scary.", "count": 0, "tags": [], "author": "alexander.miller@sbcglobal.net", "attachment_id": null, "bug_id": 624286}, {"author": "alexander.miller@sbcglobal.net", "tags": [], "bug_id": 624286, "attachment_id": 502382, "raw_text": "", "count": 1, "creator": "alexander.miller@sbcglobal.net", "creation_time": "2011-01-09T22:00:19Z", "time": "2011-01-09T22:00:19Z", "text": "Created attachment 502382\nTestcase (generally a quick crash)", "id": 5186075, "is_private": false}, {"text": "Created attachment 502383\nStack traces\n\nJavascript crash\nLayout crash\nOOM crash", "id": 5186076, "time": "2011-01-09T22:01:01Z", "is_private": false, "creator": "alexander.miller@sbcglobal.net", "creation_time": "2011-01-09T22:01:01Z", "raw_text": "Javascript crash\nLayout crash\nOOM crash", "count": 2, "tags": [], "author": "alexander.miller@sbcglobal.net", "attachment_id": 502383, "bug_id": 624286}, {"creator": "dveditz@mozilla.com", "tags": [], "author": "dveditz@mozilla.com", "attachment_id": null, "bug_id": 624286, "creation_time": "2011-01-13T21:46:18Z", "raw_text": "Crashes trunk as well as 3.6, but so far have only seen safe crashes.", "text": "Crashes trunk as well as 3.6, but so far have only seen safe crashes.", "id": 5197750, "time": "2011-01-13T21:46:18Z", "is_private": false, "count": 3}, {"count": 4, "raw_text": "(In reply to comment #3)\n> Crashes trunk as well as 3.6, but so far have only seen safe crashes.\n\nIt's probably just an sg:dos bug, but crashing in JS, layout, and OOM seemed a bit odd. None of the crashes were exploitable. Should this be opened?", "attachment_id": null, "bug_id": 624286, "tags": [], "author": "alexander.miller@sbcglobal.net", "is_private": false, "text": "(In reply to comment #3)\n> Crashes trunk as well as 3.6, but so far have only seen safe crashes.\n\nIt's probably just an sg:dos bug, but crashing in JS, layout, and OOM seemed a bit odd. None of the crashes were exploitable. Should this be opened?", "id": 5198927, "time": "2011-01-14T04:08:45Z", "creation_time": "2011-01-14T04:08:45Z", "creator": "alexander.miller@sbcglobal.net"}, {"tags": [], "creator": "alexander.miller@sbcglobal.net", "author": "alexander.miller@sbcglobal.net", "attachment_id": null, "bug_id": 624286, "creation_time": "2011-01-15T01:22:36Z", "raw_text": "(In reply to comment #4)\n*With an exception of one oddly exploitable crash", "text": "(In reply to comment #4)\n*With an exception of one oddly exploitable crash", "id": 5201708, "time": "2011-01-15T01:22:36Z", "is_private": false, "count": 5}, {"time": "2011-01-15T07:20:05Z", "id": 5202037, "text": "This seems a bit odd:\n\n001baa2c 6fddc52b KERNELBASE!RaiseException+0x58\n001baa64 6fde4f13 MOZCRT19!_CxxThrowException(void * pExceptionObject = 0x001baa74, struct _s__ThrowInfo * pThrowInfo = 0x6fe4aa34)+0x46 [f:\\sp\\vctools\\crt_bld\\self_x86\\crt\\prebuild\\eh\\throw.cpp @ 161]\n001baa7c 5f7280f5 MOZCRT19!operator new(unsigned int size = 0x5f689e65)+0x73 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\obj-firefox\\memory\\jemalloc\\crtsrc\\new.cpp @ 61]\n001baa98 5f689e65 xul!gfxWindowsFontGroup::MakeTextRun(wchar_t * aString = 0x7edec008 \" undefined\u4141undefinedundefined\u4141undefinedundefinedundefined\u4141undefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedu...\", unsigned int aLength = 0x1fea, struct gfxTextRunFactory::Parameters * aParams = 0x001bab0c, unsigned int aFlags = 0x1100101)+0x24 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxwindowsfonts.cpp @ 1487]\n001bb0f8 5f74a0f2 xul!TextRunWordCache::MakeTextRun(wchar_t * aText = 0x4b27b008 \"undefined\u4141undefinedundefined\u4141undefinedundefinedundefined\u4141undefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedun...\", unsigned int aLength = 0x1fe9, class gfxFontGroup * aFontGroup = 0x00000003, struct gfxTextRunFactory::Parameters * aParams = 0x001bb1d0, unsigned int aFlags = 0x1100100)+0x605 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxtextrunwordcache.cpp @ 685]\n001bb120 5f68c491 xul!MakeTextRun(wchar_t * aText = 0x4b27b008 \"undefined\u4141undefinedundefined\u4141undefinedundefinedundefined\u4141undefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedun...\", unsigned int aLength = 0x1fe9, class gfxFontGroup * aFontGroup = 0x00000003, struct gfxTextRunFactory::Parameters * aParams = 0x001bb1d0, unsigned int aFlags = 0x1100100)+0x39 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 493]\n001bc624 5f6a0ebc xul!BuildTextRunsScanner::BuildTextRunForFrames(void * aTextBuffer = 0x00000003)+0xae1 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 1840]\n001bd654 5f6793ba xul!BuildTextRunsScanner::FlushFrames(int aFlushLineBreaks = <Memory access error>, int aSuppressTrailingBreak = 0n3)+0xac [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 1272]\n001bd684 77963b4e xul!BuildTextRuns(class gfxContext * aContext = 0x646e7564, class nsTextFrame * aForFrame = 0x6e696665, class nsIFrame * aLineContainer = 0x00000003, class nsLineList_iterator * aForFrameLine = 0x6e756465)+0x32a [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 1206]\n001bd714 5f6add05 ntdll32!RtlAllocateHeap+0x23a\n001bd758 5f5e9dea xul!SearchTable(struct PLDHashTable * table = 0x03c02558, void * key = 0x0000000f, unsigned int keyHash = 5, PLDHashOperator op = 0n62927040 (No matching enumerant))+0xf5 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\obj-firefox\\xpcom\\build\\pldhash.c @ 439]\n001bd820 5f6112e7 xul!gfxFontGroup::FontResolverProc(class nsAString_internal * aName = 0x6a5756c3, void * aClosure = 0x8bf18b08)+0x11 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxfont.cpp @ 1522]\n001bd86c 5f6beefd xul!nsPrefBranch::AddRef(void)+0xe [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\modules\\libpref\\src\\nsprefbranch.cpp @ 116]\n001bd8a0 5f7183d0 xul!nsAString_internal::Assign(wchar_t * data = 0x00000000 \"\", unsigned int length = 0x6a5756c3)+0xbd [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\xpcom\\string\\src\\nstsubstring.cpp @ 362]\n001bd8b0 5f6ad07e xul!nsPrefService::Release(void)+0x10 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\modules\\libpref\\src\\nsprefservice.cpp @ 94]\n001bd8b8 5f65dcdf xul!nsCOMPtr_base::~nsCOMPtr_base(void)+0xe [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\obj-firefox\\xpcom\\build\\nscomptr.cpp @ 82]\n001bda6a ffff0727 xul!gfxFontGroup::ForEachFontInternal(class nsAString_internal * aFamilies = 0x1fe9ffff, class nsACString_internal * aLangGroup = 0x00000000, int aResolveGeneric = 0n-1231028224, int aResolveFontName = 0n1831, <function> * fc = 0x00010000, void * closure = 0x00000000)+0x86f [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxfont.cpp @ 1515]\nWARNING: Frame IP not in any known module. Following frames may be wrong.\n001bda6e 1fe9ffff 0xffff0727\n001bda72 00000000 0x1fe9ffff\n\nThose non-function addresses seem weird, and look like corruption. (Why no access violation at ffff0727 though?)", "is_private": false, "creation_time": "2011-01-15T07:20:05Z", "creator": "alexander.miller@sbcglobal.net", "count": 6, "raw_text": "This seems a bit odd:\n\n001baa2c 6fddc52b KERNELBASE!RaiseException+0x58\n001baa64 6fde4f13 MOZCRT19!_CxxThrowException(void * pExceptionObject = 0x001baa74, struct _s__ThrowInfo * pThrowInfo = 0x6fe4aa34)+0x46 [f:\\sp\\vctools\\crt_bld\\self_x86\\crt\\prebuild\\eh\\throw.cpp @ 161]\n001baa7c 5f7280f5 MOZCRT19!operator new(unsigned int size = 0x5f689e65)+0x73 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\obj-firefox\\memory\\jemalloc\\crtsrc\\new.cpp @ 61]\n001baa98 5f689e65 xul!gfxWindowsFontGroup::MakeTextRun(wchar_t * aString = 0x7edec008 \" undefined\u4141undefinedundefined\u4141undefinedundefinedundefined\u4141undefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedu...\", unsigned int aLength = 0x1fea, struct gfxTextRunFactory::Parameters * aParams = 0x001bab0c, unsigned int aFlags = 0x1100101)+0x24 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxwindowsfonts.cpp @ 1487]\n001bb0f8 5f74a0f2 xul!TextRunWordCache::MakeTextRun(wchar_t * aText = 0x4b27b008 \"undefined\u4141undefinedundefined\u4141undefinedundefinedundefined\u4141undefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedun...\", unsigned int aLength = 0x1fe9, class gfxFontGroup * aFontGroup = 0x00000003, struct gfxTextRunFactory::Parameters * aParams = 0x001bb1d0, unsigned int aFlags = 0x1100100)+0x605 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxtextrunwordcache.cpp @ 685]\n001bb120 5f68c491 xul!MakeTextRun(wchar_t * aText = 0x4b27b008 \"undefined\u4141undefinedundefined\u4141undefinedundefinedundefined\u4141undefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined\u4141undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedun...\", unsigned int aLength = 0x1fe9, class gfxFontGroup * aFontGroup = 0x00000003, struct gfxTextRunFactory::Parameters * aParams = 0x001bb1d0, unsigned int aFlags = 0x1100100)+0x39 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 493]\n001bc624 5f6a0ebc xul!BuildTextRunsScanner::BuildTextRunForFrames(void * aTextBuffer = 0x00000003)+0xae1 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 1840]\n001bd654 5f6793ba xul!BuildTextRunsScanner::FlushFrames(int aFlushLineBreaks = <Memory access error>, int aSuppressTrailingBreak = 0n3)+0xac [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 1272]\n001bd684 77963b4e xul!BuildTextRuns(class gfxContext * aContext = 0x646e7564, class nsTextFrame * aForFrame = 0x6e696665, class nsIFrame * aLineContainer = 0x00000003, class nsLineList_iterator * aForFrameLine = 0x6e756465)+0x32a [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\layout\\generic\\nstextframethebes.cpp @ 1206]\n001bd714 5f6add05 ntdll32!RtlAllocateHeap+0x23a\n001bd758 5f5e9dea xul!SearchTable(struct PLDHashTable * table = 0x03c02558, void * key = 0x0000000f, unsigned int keyHash = 5, PLDHashOperator op = 0n62927040 (No matching enumerant))+0xf5 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\obj-firefox\\xpcom\\build\\pldhash.c @ 439]\n001bd820 5f6112e7 xul!gfxFontGroup::FontResolverProc(class nsAString_internal * aName = 0x6a5756c3, void * aClosure = 0x8bf18b08)+0x11 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxfont.cpp @ 1522]\n001bd86c 5f6beefd xul!nsPrefBranch::AddRef(void)+0xe [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\modules\\libpref\\src\\nsprefbranch.cpp @ 116]\n001bd8a0 5f7183d0 xul!nsAString_internal::Assign(wchar_t * data = 0x00000000 \"\", unsigned int length = 0x6a5756c3)+0xbd [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\xpcom\\string\\src\\nstsubstring.cpp @ 362]\n001bd8b0 5f6ad07e xul!nsPrefService::Release(void)+0x10 [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\modules\\libpref\\src\\nsprefservice.cpp @ 94]\n001bd8b8 5f65dcdf xul!nsCOMPtr_base::~nsCOMPtr_base(void)+0xe [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\obj-firefox\\xpcom\\build\\nscomptr.cpp @ 82]\n001bda6a ffff0727 xul!gfxFontGroup::ForEachFontInternal(class nsAString_internal * aFamilies = 0x1fe9ffff, class nsACString_internal * aLangGroup = 0x00000000, int aResolveGeneric = 0n-1231028224, int aResolveFontName = 0n1831, <function> * fc = 0x00010000, void * closure = 0x00000000)+0x86f [e:\\builds\\moz2_slave\\release-mozilla-1.9.2-win32_build\\build\\gfx\\thebes\\src\\gfxfont.cpp @ 1515]\nWARNING: Frame IP not in any known module. Following frames may be wrong.\n001bda6e 1fe9ffff 0xffff0727\n001bda72 00000000 0x1fe9ffff\n\nThose non-function addresses seem weird, and look like corruption. (Why no access violation at ffff0727 though?)", "bug_id": 624286, "attachment_id": null, "author": "alexander.miller@sbcglobal.net", "tags": []}, {"raw_text": "Also, fwiw, |this| is null if the crash occurs in layout, and unsigned int |slots| is a seemingly random invalid address, but the crash isn't because of |slots|.", "count": 7, "tags": [], "author": "alexander.miller@sbcglobal.net", "attachment_id": null, "bug_id": 624286, "is_private": false, "id": 5220577, "text": "Also, fwiw, |this| is null if the crash occurs in layout, and unsigned int |slots| is a seemingly random invalid address, but the crash isn't because of |slots|.", "time": "2011-01-23T18:27:14Z", "creator": "alexander.miller@sbcglobal.net", "creation_time": "2011-01-23T18:27:14Z"}, {"is_private": false, "id": 5221119, "text": "(In reply to comment #3)\n> Crashes trunk as well as 3.6, but so far have only seen safe crashes.\n\nCan you post the stack traces? Or are they oom...", "time": "2011-01-24T04:10:31Z", "creation_time": "2011-01-24T04:10:31Z", "creator": "alexander.miller@sbcglobal.net", "count": 8, "raw_text": "(In reply to comment #3)\n> Crashes trunk as well as 3.6, but so far have only seen safe crashes.\n\nCan you post the stack traces? Or are they oom...", "attachment_id": null, "bug_id": 624286, "tags": [], "author": "alexander.miller@sbcglobal.net"}, {"count": 9, "raw_text": "Also, the traceObject crash is on this line:\n   JSContext *cx = trc->context;\naccording to my debugger, and |trc| shouldn't be nulled. (or |context| shouldn't be nulled? I don't know C++ well)\n\nThe layout crash occurs at:\n   mImpl->mBufferSize = newSize;\nWhich is a little concerning, because a buffer of null bytes is an issue.", "bug_id": 624286, "attachment_id": null, "author": "alexander.miller@sbcglobal.net", "tags": [], "is_private": false, "time": "2011-01-26T23:14:01Z", "text": "Also, the traceObject crash is on this line:\n   JSContext *cx = trc->context;\naccording to my debugger, and |trc| shouldn't be nulled. (or |context| shouldn't be nulled? I don't know C++ well)\n\nThe layout crash occurs at:\n   mImpl->mBufferSize = newSize;\nWhich is a little concerning, because a buffer of null bytes is an issue.", "id": 5230253, "creation_time": "2011-01-26T23:14:01Z", "creator": "alexander.miller@sbcglobal.net"}, {"author": "dveditz@mozilla.com", "tags": [], "bug_id": 624286, "attachment_id": null, "raw_text": "I can confirm the crashes, but so far I've only seen the OOM safe/DoS type crashes. There may be a critical bug hiding in here somewhere based on your description, but given the unreliability of this testcase I can't yet call it critical as it would be an extremely low-success attack.\n\nCan you improve on that? It'd make a better attack, and it would also help us pinpoint where the critical bug is lurking.", "count": 10, "creator": "dveditz@mozilla.com", "creation_time": "2011-01-27T21:27:25Z", "time": "2011-01-27T21:27:25Z", "id": 5233301, "text": "I can confirm the crashes, but so far I've only seen the OOM safe/DoS type crashes. There may be a critical bug hiding in here somewhere based on your description, but given the unreliability of this testcase I can't yet call it critical as it would be an extremely low-success attack.\n\nCan you improve on that? It'd make a better attack, and it would also help us pinpoint where the critical bug is lurking.", "is_private": false}, {"attachment_id": null, "bug_id": 624286, "tags": [], "author": "alexander.miller@sbcglobal.net", "count": 11, "raw_text": "(In reply to comment #10)\n> I can confirm the crashes, but so far I've only seen the OOM safe/DoS type\n> crashes. There may be a critical bug hiding in here somewhere based on your\n> description, but given the unreliability of this testcase I can't yet call it\n> critical as it would be an extremely low-success attack.\n> \n> Can you improve on that? It'd make a better attack, and it would also help us\n> pinpoint where the critical bug is lurking.\nI've tried modifying the testcase, but the one line that causes the crash (document.write) is unreliable in itself. I'll try more though.\n\nAlso, I was discussing this with sicking, and the crash in layout almost certainly isn't a null deref because of oom.\n\nAlso, I've got a crazy theory that the null is because of the constant repetition of undefined.", "creation_time": "2011-01-27T21:50:21Z", "creator": "alexander.miller@sbcglobal.net", "is_private": false, "text": "(In reply to comment #10)\n> I can confirm the crashes, but so far I've only seen the OOM safe/DoS type\n> crashes. There may be a critical bug hiding in here somewhere based on your\n> description, but given the unreliability of this testcase I can't yet call it\n> critical as it would be an extremely low-success attack.\n> \n> Can you improve on that? It'd make a better attack, and it would also help us\n> pinpoint where the critical bug is lurking.\nI've tried modifying the testcase, but the one line that causes the crash (document.write) is unreliable in itself. I'll try more though.\n\nAlso, I was discussing this with sicking, and the crash in layout almost certainly isn't a null deref because of oom.\n\nAlso, I've got a crazy theory that the null is because of the constant repetition of undefined.", "id": 5233410, "time": "2011-01-27T21:50:21Z"}, {"creator": "alexander.miller@sbcglobal.net", "creation_time": "2011-02-05T06:03:13Z", "is_private": false, "time": "2011-02-05T06:03:13Z", "text": "The compact() crashes are almost certainly related to bug 557545, so if the null deref issue there is fixed bug 557545 may actually become sg:critical due to a higher attack success chance. And, fwiw, I continue to be unable to reproduce anything that isn't a null pointer dereference or OOM, so this is really looking sg:dos.", "id": 5257338, "author": "alexander.miller@sbcglobal.net", "tags": [], "bug_id": 624286, "attachment_id": null, "raw_text": "The compact() crashes are almost certainly related to bug 557545, so if the null deref issue there is fixed bug 557545 may actually become sg:critical due to a higher attack success chance. And, fwiw, I continue to be unable to reproduce anything that isn't a null pointer dereference or OOM, so this is really looking sg:dos.", "count": 12}, {"count": 13, "is_private": false, "id": 7075912, "text": "There's no value in keeping this closed, marking this an sg:dos and opening this up.", "raw_text": "There's no value in keeping this closed, marking this an sg:dos and opening this up.", "time": "2013-02-06T15:26:48Z", "creation_time": "2013-02-06T15:26:48Z", "attachment_id": null, "bug_id": 624286, "tags": [], "creator": "jstenback+bmo@gmail.com", "author": "jstenback+bmo@gmail.com"}, {"raw_text": "Closing because no crash reported since 12 weeks.", "count": 14, "tags": [], "author": "sledru@mozilla.com", "attachment_id": null, "bug_id": 624286, "is_private": false, "text": "Closing because no crash reported since 12 weeks.", "id": 13652067, "time": "2018-10-01T12:08:13Z", "creator": "sledru@mozilla.com", "creation_time": "2018-10-01T12:08:13Z"}, {"raw_text": "Reopening because crash bugs **with testcases** should not be resolved **as WONTFIX** based on queries of crash-stats.  Other resolutions may be appropriate for other reasons.\n\n(Crash signatures are not the same as bug identity; they're merely a search aid to find and group similar crashes.  The bug may still be present, but the signature may have changed slightly, or the bug may even still be present with the same signature but there are simply no recent reports of crashes in that function.)", "count": 15, "tags": [], "author": "dbaron@dbaron.org", "attachment_id": null, "bug_id": 624286, "text": "Reopening because crash bugs **with testcases** should not be resolved **as WONTFIX** based on queries of crash-stats.  Other resolutions may be appropriate for other reasons.\n\n(Crash signatures are not the same as bug identity; they're merely a search aid to find and group similar crashes.  The bug may still be present, but the signature may have changed slightly, or the bug may even still be present with the same signature but there are simply no recent reports of crashes in that function.)", "id": 13655282, "time": "2018-10-01T23:55:47Z", "is_private": false, "creator": "dbaron@dbaron.org", "creation_time": "2018-10-01T23:55:47Z"}]}}, "comments": {}}