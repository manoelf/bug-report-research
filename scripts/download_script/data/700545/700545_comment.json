{"bugs": {"700545": {"comments": [{"count": 0, "id": 5833112, "is_private": false, "author": "hughnougher@gmail.com", "time": "2011-11-08T03:37:26Z", "creation_time": "2011-11-08T03:37:26Z", "creator": "hughnougher@gmail.com", "raw_text": "This bug is for getting the uncompressed heap copy an images in windows discarded when the image is sent to the GPU for display.\n\nFrom my observation of latest nightly:\n1. Images in current tab get immediately decoded to uncompressed-heap.\n2. When the image is first drawn after decode a copy is placed in GPU mem as a surface or texture.\n3. Now there is a copy of the uncompressed image in both heap and GPU mem. If there is no dedicated GPU mem the GPU copy is in main memory also (shared memory).\n4. Both copies seem to get discarded at about the same time.\n\nFrom what I am told, linux already does something like this when the image is sent to the X-Server.\n\nWhen this is fixed people with no dedicated GPU memory on windows would be able to save one whole copy of the uncompressed image from being in ram. For people that have dedicated GPU mem they could save the entire copy of uncompressed image in ram once its been sent to the GPU.", "attachment_id": null, "bug_id": 700545, "text": "This bug is for getting the uncompressed heap copy an images in windows discarded when the image is sent to the GPU for display.\n\nFrom my observation of latest nightly:\n1. Images in current tab get immediately decoded to uncompressed-heap.\n2. When the image is first drawn after decode a copy is placed in GPU mem as a surface or texture.\n3. Now there is a copy of the uncompressed image in both heap and GPU mem. If there is no dedicated GPU mem the GPU copy is in main memory also (shared memory).\n4. Both copies seem to get discarded at about the same time.\n\nFrom what I am told, linux already does something like this when the image is sent to the X-Server.\n\nWhen this is fixed people with no dedicated GPU memory on windows would be able to save one whole copy of the uncompressed image from being in ram. For people that have dedicated GPU mem they could save the entire copy of uncompressed image in ram once its been sent to the GPU.", "tags": []}, {"text": "Adding some related bugs/wiki pages where this has been mentioned previously.\n\nhttps://wiki.mozilla.org/Platform/GFX/InternProjects", "bug_id": 700545, "tags": [], "raw_text": "Adding some related bugs/wiki pages where this has been mentioned previously.\n\nhttps://wiki.mozilla.org/Platform/GFX/InternProjects", "attachment_id": null, "author": "matt.woodrow@gmail.com", "creator": "matt.woodrow@gmail.com", "creation_time": "2011-11-08T03:43:04Z", "time": "2011-11-08T03:43:04Z", "is_private": false, "id": 5833121, "count": 1}, {"tags": [], "text": "We're going to do this after we switch to Azure as that will put us in a better position to do this properly.", "bug_id": 700545, "raw_text": "We're going to do this after we switch to Azure as that will put us in a better position to do this properly.", "attachment_id": null, "author": "jmuizelaar@mozilla.com", "creator": "jmuizelaar@mozilla.com", "creation_time": "2011-11-08T22:19:12Z", "time": "2011-11-08T22:19:12Z", "is_private": false, "id": 5835383, "count": 2}, {"text": "Hey, great bug. Please include DOMElementToImageSurface, in WebGLContextGL.cpp, in your list of functions where to hook this into. This is what gets called when an image is passed to WebGL to upload it as a WebGL texture.", "bug_id": 700545, "tags": [], "raw_text": "Hey, great bug. Please include DOMElementToImageSurface, in WebGLContextGL.cpp, in your list of functions where to hook this into. This is what gets called when an image is passed to WebGL to upload it as a WebGL texture.", "attachment_id": null, "author": "jacob.benoit.1@gmail.com", "creator": "jacob.benoit.1@gmail.com", "time": "2012-04-18T06:29:19Z", "creation_time": "2012-04-18T06:29:19Z", "is_private": false, "count": 3, "id": 6232661}]}}, "comments": {}}