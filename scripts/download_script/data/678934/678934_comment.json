{"bugs": {"678934": {"comments": [{"attachment_id": null, "time": "2011-08-15T04:57:29Z", "text": "doublec and I just ran into an issue pushing latest m-c commits to GitHub.\n\nGitHub just turned on committer validation.\n\nThis commit:\n\n---\nchangeset:   74219:d618c3a26cd4\nuser:        Bob Moss <bmoss@mozilla.com\ndate:        Wed Aug 10 15:38:01 2011 -0400\nsummary:     bug 665716 - build breaks when building SUTAgent with sdk level 11, follow up for watcher service r=blassey\n---\n\nhas a malformed user: field. hg-git converts that into:\n\n---\ncommit 776970db2713a3b77770f9ee55eb9e912085c5ef\nAuthor: Bob Moss <bmoss@mozilla.com <none@none>\nDate:   Wed Aug 10 15:38:01 2011 -0400\n\n    bug 665716 - build breaks when building SUTAgent with sdk level 11, follow up for watcher service r=blassey\n---\n\nwhich of course is equally invalid. GitHub rejects that commit (unless you ask them to turn off validation).\n\nPerhaps it would be a good idea to avoid this kind of thing in future by having a validating hook in m-c, and a specified format? I can't imagine we want arbitrary user strings getting into the repo.", "raw_text": "doublec and I just ran into an issue pushing latest m-c commits to GitHub.\n\nGitHub just turned on committer validation.\n\nThis commit:\n\n---\nchangeset:   74219:d618c3a26cd4\nuser:        Bob Moss <bmoss@mozilla.com\ndate:        Wed Aug 10 15:38:01 2011 -0400\nsummary:     bug 665716 - build breaks when building SUTAgent with sdk level 11, follow up for watcher service r=blassey\n---\n\nhas a malformed user: field. hg-git converts that into:\n\n---\ncommit 776970db2713a3b77770f9ee55eb9e912085c5ef\nAuthor: Bob Moss <bmoss@mozilla.com <none@none>\nDate:   Wed Aug 10 15:38:01 2011 -0400\n\n    bug 665716 - build breaks when building SUTAgent with sdk level 11, follow up for watcher service r=blassey\n---\n\nwhich of course is equally invalid. GitHub rejects that commit (unless you ask them to turn off validation).\n\nPerhaps it would be a good idea to avoid this kind of thing in future by having a validating hook in m-c, and a specified format? I can't imagine we want arbitrary user strings getting into the repo.", "creation_time": "2011-08-15T04:57:29Z", "bug_id": 678934, "id": 5653522, "tags": [], "count": 0, "is_private": false, "author": "bugzilla@twinql.com", "creator": "bugzilla@twinql.com"}]}}, "comments": {}}