{"bugs": {"684776": {"comments": [{"attachment_id": null, "tags": [], "creator": "roc@ocallahan.org", "is_private": false, "creation_time": "2011-09-06T01:45:21Z", "raw_text": "On the \"pre-rendered\" test IE9 gets 155K ops/s, we get 25K on my home-made trunk build.\n\nWe're CPU-bound on the main thread. It breaks down like this:\n-- 30% in the Nvidia driver (8.17.12.6658)\n-- 16% in misc stuff (looks like mostly D3D10/dxgi/little bits of kernel)\n-- 3% painting (updating the little progress message I guess)\n-- about 3% in the JS engine, I think\n-- about 3% in quickstubs unwrapping etc\n-- 41% in nsCanvasRenderingContext2DAzure::DrawImage, which breaks down further:\n  -- 27% in nsLayoutUtils::SurfaceFromElement (!)\n  -- 11% in DrawTargetD2D::DrawSurface\n\nSo nsLayoutUtils::SurfaceFromElement looks like the culprit. Our image cache isn't working? Almost all of SurfaceFromElement is spent flushing D2D.", "time": "2011-09-06T01:45:21Z", "author": "roc@ocallahan.org", "count": 0, "text": "On the \"pre-rendered\" test IE9 gets 155K ops/s, we get 25K on my home-made trunk build.\n\nWe're CPU-bound on the main thread. It breaks down like this:\n-- 30% in the Nvidia driver (8.17.12.6658)\n-- 16% in misc stuff (looks like mostly D3D10/dxgi/little bits of kernel)\n-- 3% painting (updating the little progress message I guess)\n-- about 3% in the JS engine, I think\n-- about 3% in quickstubs unwrapping etc\n-- 41% in nsCanvasRenderingContext2DAzure::DrawImage, which breaks down further:\n  -- 27% in nsLayoutUtils::SurfaceFromElement (!)\n  -- 11% in DrawTargetD2D::DrawSurface\n\nSo nsLayoutUtils::SurfaceFromElement looks like the culprit. Our image cache isn't working? Almost all of SurfaceFromElement is spent flushing D2D.", "id": 5701228, "bug_id": 684776}, {"is_private": false, "creation_time": "2011-09-06T01:49:31Z", "creator": "jacob.benoit.1@gmail.com", "tags": [], "attachment_id": null, "id": 5701232, "bug_id": 684776, "text": "FYI, any SurfaceFromElement performance improvement would also benefit WebGL as it's called by webgl.texImage2D(dom element).", "count": 1, "author": "jacob.benoit.1@gmail.com", "time": "2011-09-06T01:49:31Z", "raw_text": "FYI, any SurfaceFromElement performance improvement would also benefit WebGL as it's called by webgl.texImage2D(dom element)."}, {"time": "2011-09-06T02:01:20Z", "raw_text": "OK, so we don't cache canvases in CanvasImageCache...\n\nThe D2D flush under nsLayoutUtils::SurfaceFromElement is 25% of the profile. It's probably happening fromnsCanvasRenderingContext2DAzure::GetThebesSurface (the stack isn't clear). I'm not sure why that flush is so expensive though ... the \"can2\" canvas doesn't get drawn to during the test.\n\nI guess we could optimize it away by maintaining our own dirty-surface flag, but why is that necessary?", "attachment_id": null, "tags": [], "creator": "roc@ocallahan.org", "text": "OK, so we don't cache canvases in CanvasImageCache...\n\nThe D2D flush under nsLayoutUtils::SurfaceFromElement is 25% of the profile. It's probably happening fromnsCanvasRenderingContext2DAzure::GetThebesSurface (the stack isn't clear). I'm not sure why that flush is so expensive though ... the \"can2\" canvas doesn't get drawn to during the test.\n\nI guess we could optimize it away by maintaining our own dirty-surface flag, but why is that necessary?", "count": 2, "author": "roc@ocallahan.org", "bug_id": 684776, "id": 5701239, "is_private": false, "creation_time": "2011-09-06T02:01:20Z"}, {"tags": [], "time": "2011-09-08T01:44:35Z", "raw_text": "> OK, so we don't cache canvases in CanvasImageCache...\n\nWe could likely fix that if we cared, right?  Or is the problem detecting when the surface has changed?", "attachment_id": null, "bug_id": 684776, "id": 5706630, "creation_time": "2011-09-08T01:44:35Z", "is_private": false, "creator": "bzbarsky@mit.edu", "text": "> OK, so we don't cache canvases in CanvasImageCache...\n\nWe could likely fix that if we cared, right?  Or is the problem detecting when the surface has changed?", "count": 3, "author": "bzbarsky@mit.edu"}, {"time": "2011-09-08T02:56:02Z", "raw_text": "We certainly could fix it, but yes, we'd have to be careful about detecting when the canvas has changed and evicting it. That's probably the right way to go, though.", "attachment_id": null, "tags": [], "creator": "roc@ocallahan.org", "text": "We certainly could fix it, but yes, we'd have to be careful about detecting when the canvas has changed and evicting it. That's probably the right way to go, though.", "count": 4, "author": "roc@ocallahan.org", "bug_id": 684776, "id": 5706717, "is_private": false, "creation_time": "2011-09-08T02:56:02Z"}, {"creator": "guijoselito@gmail.com", "count": 5, "text": "Nightly 21\nrender: 13,268 \u00b11.98%\npre-rendered: 85,491 \u00b11.86%\n\nIE9\nrender: 16,349 \u00b13.59%\npre-rendered: 94,864 \u00b11.28%\n\nGC24\nrender: 285,897 \u00b13.58%\npre-rendered: 324,095 \u00b13.10%\n\nFirefox is on par with IE9 but a lot slower then Chrome", "author": "guijoselito@gmail.com", "bug_id": 684776, "id": 7018583, "creation_time": "2013-01-19T00:19:28Z", "is_private": false, "time": "2013-01-19T00:19:28Z", "raw_text": "Nightly 21\nrender: 13,268 \u00b11.98%\npre-rendered: 85,491 \u00b11.86%\n\nIE9\nrender: 16,349 \u00b13.59%\npre-rendered: 94,864 \u00b11.28%\n\nGC24\nrender: 285,897 \u00b13.58%\npre-rendered: 324,095 \u00b13.10%\n\nFirefox is on par with IE9 but a lot slower then Chrome", "attachment_id": null, "tags": []}, {"count": 6, "text": "That's because the benchmark is stupid to the point of uselesness.  A browser can be really fast at it by just not painting, which is what Chrome does in this case.", "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "creation_time": "2013-01-19T01:45:48Z", "is_private": false, "bug_id": 684776, "id": 7018761, "raw_text": "That's because the benchmark is stupid to the point of uselesness.  A browser can be really fast at it by just not painting, which is what Chrome does in this case.", "attachment_id": null, "time": "2013-01-19T01:45:48Z", "tags": []}, {"text": "And how Chrome knows it doesn't have to paint? It this useful in real cases on the web? (asking because I'm a just a user, not a developer)", "count": 7, "author": "guijoselito@gmail.com", "creator": "guijoselito@gmail.com", "creation_time": "2013-01-19T02:20:37Z", "is_private": false, "id": 7018785, "bug_id": 684776, "raw_text": "And how Chrome knows it doesn't have to paint? It this useful in real cases on the web? (asking because I'm a just a user, not a developer)", "attachment_id": null, "time": "2013-01-19T02:20:37Z", "tags": []}, {"author": "roc@ocallahan.org", "count": 8, "text": "(In reply to Boris Zbarsky (:bz) from comment #6)\n> That's because the benchmark is stupid to the point of uselesness.  A\n> browser can be really fast at it by just not painting, which is what Chrome\n> does in this case.\n\nI'm not sure what you meant there.\n\nI think the issue here is that Skia's stroking code is way faster than D2D's, and our canvas->canvas blending path is not very good either.", "creator": "roc@ocallahan.org", "is_private": false, "creation_time": "2013-01-19T12:05:51Z", "id": 7019243, "bug_id": 684776, "attachment_id": null, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #6)\n> That's because the benchmark is stupid to the point of uselesness.  A\n> browser can be really fast at it by just not painting, which is what Chrome\n> does in this case.\n\nI'm not sure what you meant there.\n\nI think the issue here is that Skia's stroking code is way faster than D2D's, and our canvas->canvas blending path is not very good either.", "time": "2013-01-19T12:05:51Z", "tags": []}, {"bug_id": 684776, "id": 7019290, "text": "> I'm not sure what you meant there.\n\nLast I checked, Chrome just records drawing commands and actually draws them sometime later, no?\n\nHow does stroking come in here?  I thought this was a drawImage benchmark?", "count": 9, "author": "bzbarsky@mit.edu", "time": "2013-01-19T13:41:49Z", "raw_text": "> I'm not sure what you meant there.\n\nLast I checked, Chrome just records drawing commands and actually draws them sometime later, no?\n\nHow does stroking come in here?  I thought this was a drawImage benchmark?", "creation_time": "2013-01-19T13:41:49Z", "is_private": false, "creator": "bzbarsky@mit.edu", "tags": [], "attachment_id": null}, {"id": 7019829, "bug_id": 684776, "text": "(In reply to Boris Zbarsky (:bz) from comment #9)\n> > I'm not sure what you meant there.\n> \n> Last I checked, Chrome just records drawing commands and actually draws them\n> sometime later, no?\n\nAh yes, that's a good point. IE10 is doing that too. There actually is a performance win for multicore machines since the canvas rendering can happen on a different thread. So the benchmark isn't entirely bogus if you keep in mind that it measures main-thread utilization rather than actual \"drawing speed\" --- which of course nobody will :-).\n\n> How does stroking come in here?  I thought this was a drawImage benchmark?\n\n\"render\" is doing stroking. \"pre-rendered\" is drawImage with a canvas source.", "count": 10, "author": "roc@ocallahan.org", "time": "2013-01-19T20:24:43Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #9)\n> > I'm not sure what you meant there.\n> \n> Last I checked, Chrome just records drawing commands and actually draws them\n> sometime later, no?\n\nAh yes, that's a good point. IE10 is doing that too. There actually is a performance win for multicore machines since the canvas rendering can happen on a different thread. So the benchmark isn't entirely bogus if you keep in mind that it measures main-thread utilization rather than actual \"drawing speed\" --- which of course nobody will :-).\n\n> How does stroking come in here?  I thought this was a drawImage benchmark?\n\n\"render\" is doing stroking. \"pre-rendered\" is drawImage with a canvas source.", "creation_time": "2013-01-19T20:24:43Z", "is_private": false, "creator": "roc@ocallahan.org", "tags": [], "attachment_id": null}, {"time": "2013-01-20T01:59:49Z", "attachment_id": null, "raw_text": "Ok.  Sounds like we should possibly have three separate bugs blocking this one:\n\n1)  Faster compositing of a canvas\n2)  Faster stroking (possibly covered by existing graphics back-end bugs?)\n3)  Doing that sort of stuff off-thread", "tags": [], "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "count": 11, "text": "Ok.  Sounds like we should possibly have three separate bugs blocking this one:\n\n1)  Faster compositing of a canvas\n2)  Faster stroking (possibly covered by existing graphics back-end bugs?)\n3)  Doing that sort of stuff off-thread", "bug_id": 684776, "id": 7020419, "creation_time": "2013-01-20T01:59:49Z", "is_private": false}, {"author": "roc@ocallahan.org", "count": 12, "text": "Filed bug 832813. That's really all that's needed for this particular benchmark I think.", "creator": "roc@ocallahan.org", "is_private": false, "creation_time": "2013-01-21T02:59:21Z", "id": 7021504, "bug_id": 684776, "attachment_id": null, "raw_text": "Filed bug 832813. That's really all that's needed for this particular benchmark I think.", "time": "2013-01-21T02:59:21Z", "tags": []}]}}, "comments": {}}