{"comments": {}, "bugs": {"709326": {"comments": [{"creator": "nick_whittome@hotmail.com", "author": "nick_whittome@hotmail.com", "bug_id": 709326, "is_private": false, "count": 0, "tags": [], "id": 5905403, "text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:8.0.1) Gecko/20100101 Firefox/8.0.1\nBuild ID: 20111120135848\n\nSteps to reproduce:\n\n- Opened Firefox. Waited for home page to load\n- Started private browsing\n- Navigated to YouTube. Selected random video and played.\n- closed private browsing\n- entered about:memory in the address bar\n\n_\n\n\nActual results:\n\nYouTube was listed in the memory config thus revealing that the site was visited using private browsing\n\n\nExpected results:\n\nThis seems less than optimal. A user should be confident that no record is kept of sites visited using private browsing. However, as long as the browser is kept open, someone else could see which sites were visited", "attachment_id": null, "time": "2011-12-09T22:34:21Z", "raw_text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:8.0.1) Gecko/20100101 Firefox/8.0.1\nBuild ID: 20111120135848\n\nSteps to reproduce:\n\n- Opened Firefox. Waited for home page to load\n- Started private browsing\n- Navigated to YouTube. Selected random video and played.\n- closed private browsing\n- entered about:memory in the address bar\n\n_\n\n\nActual results:\n\nYouTube was listed in the memory config thus revealing that the site was visited using private browsing\n\n\nExpected results:\n\nThis seems less than optimal. A user should be confident that no record is kept of sites visited using private browsing. However, as long as the browser is kept open, someone else could see which sites were visited", "creation_time": "2011-12-09T22:34:21Z"}, {"time": "2011-12-12T02:18:33Z", "attachment_id": null, "text": "I was able to reproduce this, but the compartment disappeared when I reloaded about:memory.  So the compartment gets GC'd, but that doesn't happen immediately.\n\nThe problem isn't really with about:memory, it just presents info about all compartments in memory.  I guess when leaving private browsing a GC could be forced in an attempt to free any compartments created during private browsing?", "raw_text": "I was able to reproduce this, but the compartment disappeared when I reloaded about:memory.  So the compartment gets GC'd, but that doesn't happen immediately.\n\nThe problem isn't really with about:memory, it just presents info about all compartments in memory.  I guess when leaving private browsing a GC could be forced in an attempt to free any compartments created during private browsing?", "creation_time": "2011-12-12T02:18:33Z", "bug_id": 709326, "id": 5907734, "count": 1, "is_private": false, "tags": [], "author": "n.nethercote@gmail.com", "creator": "n.nethercote@gmail.com"}, {"author": "justin.lebar+bug@gmail.com", "creator": "justin.lebar+bug@gmail.com", "time": "2012-01-03T19:51:04Z", "attachment_id": null, "text": "> I guess when leaving private browsing a GC could be forced in an attempt to free any compartments \n> created during private browsing?\n\nBut if you have any extensions which leak compartments, we're in trouble.  :-/\n\nA heavyweight solution would be to assign a generation number to each private-browsing session, then attach that number to the URL in the JS compartment.  If we're not currently in private-browsing or the generation doesn't match, hide the URL.\n\n(This would still leak that you had been in private browsing.  We could instead shove the whole compartment into heap-unclassified.)", "creation_time": "2012-01-03T19:51:04Z", "raw_text": "> I guess when leaving private browsing a GC could be forced in an attempt to free any compartments \n> created during private browsing?\n\nBut if you have any extensions which leak compartments, we're in trouble.  :-/\n\nA heavyweight solution would be to assign a generation number to each private-browsing session, then attach that number to the URL in the JS compartment.  If we're not currently in private-browsing or the generation doesn't match, hide the URL.\n\n(This would still leak that you had been in private browsing.  We could instead shove the whole compartment into heap-unclassified.)", "bug_id": 709326, "id": 5951725, "is_private": false, "count": 2, "tags": []}, {"attachment_id": null, "time": "2012-01-22T10:07:16Z", "text": "*** Bug 675798 has been marked as a duplicate of this bug. ***", "creation_time": "2012-01-22T10:07:16Z", "raw_text": "", "bug_id": 709326, "id": 5998948, "tags": [], "is_private": false, "count": 3, "author": "n.nethercote@gmail.com", "creator": "n.nethercote@gmail.com"}, {"text": "Simple bug to fix; happy to help someone with it.", "attachment_id": null, "time": "2012-02-14T22:30:23Z", "raw_text": "Simple bug to fix; happy to help someone with it.", "creation_time": "2012-02-14T22:30:23Z", "bug_id": 709326, "count": 4, "is_private": false, "tags": [], "id": 6061635, "creator": "justin.lebar+bug@gmail.com", "author": "justin.lebar+bug@gmail.com"}, {"text": "(In reply to Justin Lebar [:jlebar] from comment #4)\n> Simple bug to fix; happy to help someone with it.\n\nIn case it wasn't clear, the simple fix is to force GC/CC when leaving private browsing mode.  That should cover the common cases.  Memory leaks still have the potential to expose private browsing data, but fixing that is much harder so let's try the GC/CC approach first.  That should also help fix bug 724677.", "time": "2012-02-15T00:48:05Z", "attachment_id": null, "raw_text": "(In reply to Justin Lebar [:jlebar] from comment #4)\n> Simple bug to fix; happy to help someone with it.\n\nIn case it wasn't clear, the simple fix is to force GC/CC when leaving private browsing mode.  That should cover the common cases.  Memory leaks still have the potential to expose private browsing data, but fixing that is much harder so let's try the GC/CC approach first.  That should also help fix bug 724677.", "creation_time": "2012-02-15T00:48:05Z", "bug_id": 709326, "tags": [], "count": 5, "is_private": false, "id": 6062130, "creator": "n.nethercote@gmail.com", "author": "n.nethercote@gmail.com"}, {"time": "2012-03-12T21:39:22Z", "attachment_id": null, "author": "u279076@disabled.tld", "text": "I'm going to take a shot at working on this bug -- it's my first Firefox bug so please be patient.", "creator": "u279076@disabled.tld", "creation_time": "2012-03-12T21:39:22Z", "raw_text": "I'm going to take a shot at working on this bug -- it's my first Firefox bug so please be patient.", "bug_id": 709326, "id": 6133879, "is_private": false, "count": 6, "tags": []}, {"author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "attachment_id": 605222, "time": "2012-03-12T23:53:48Z", "text": "Created attachment 605222\nWIP v1\n\nI've been doing some investigation and I'm not sure GC will do anything here.\n\nIf I follow the steps in comment 0 and click Update on about:memory, the youtube compartment disappears. As far as I know this does not trigger a GC.\n\nI also tried adding a Cu.forceGC() call to nsPrivateBrowsingService.js::_onAfterPrivateBrowsingModeChange with no difference.\n\nAttaching a WIP patch so you can see my code change.", "creation_time": "2012-03-12T23:53:48Z", "raw_text": "I've been doing some investigation and I'm not sure GC will do anything here.\n\nIf I follow the steps in comment 0 and click Update on about:memory, the youtube compartment disappears. As far as I know this does not trigger a GC.\n\nI also tried adding a Cu.forceGC() call to nsPrivateBrowsingService.js::_onAfterPrivateBrowsingModeChange with no difference.\n\nAttaching a WIP patch so you can see my code change.", "bug_id": 709326, "id": 6134471, "is_private": false, "count": 7, "tags": []}, {"creator": "u279076@disabled.tld", "author": "u279076@disabled.tld", "bug_id": 709326, "count": 8, "is_private": false, "tags": [], "id": 6134474, "text": "(In reply to Anthony Hughes, Mozilla QA (irc: ashughes) from comment #7)\n> Created attachment 605222\n> WIP v1\n\nNote that it's commented out in this patch to prove the original state.", "attachment_id": null, "time": "2012-03-12T23:54:53Z", "creation_time": "2012-03-12T23:54:53Z", "raw_text": "(In reply to Anthony Hughes, Mozilla QA (irc: ashughes) from comment #7)\n> Created attachment 605222\n> WIP v1\n\nNote that it's commented out in this patch to prove the original state."}, {"creator": "justin.lebar+bug@gmail.com", "author": "justin.lebar+bug@gmail.com", "bug_id": 709326, "tags": [], "count": 9, "is_private": false, "id": 6134602, "text": "> +        // Force GC to clear private session data from about:memory\n> +        var windowsEnum = Services.wm.getEnumerator(\"navigator:browser\");\n> +        while (windowsEnum.hasMoreElements()) {\n\nYou just need to GC on one window, not all of them.\n\n> +          var window = windowsEnum.getNext();\n> +          window.QueryInterface(Ci.nsIInterfaceRequestor)\n> +                .getInterface(Ci.nsIDOMWindowUtils).garbageCollect();\n> +          Cu.forceGC();\n> +        }\n\nBut to actually collect all garbage windows, you need to run at least three cycle collections.  That this code doesn't do any CCs probably explains why it's not behaving as you expect.\n\n  window.QueryInterface(Ci.nsIInterfaceRequestor)\n        .getInterface(Ci.nsIDOMWindowUtils)\n        .cycleCollect();\n\nOr you can do what about:memory does, which is fire heap-minimize notifications.  See function minimizeMemoryUsage3x in toolkit/components/aboutmemory/content/aboutMemory.js.", "attachment_id": null, "time": "2012-03-13T00:37:28Z", "raw_text": "> +        // Force GC to clear private session data from about:memory\n> +        var windowsEnum = Services.wm.getEnumerator(\"navigator:browser\");\n> +        while (windowsEnum.hasMoreElements()) {\n\nYou just need to GC on one window, not all of them.\n\n> +          var window = windowsEnum.getNext();\n> +          window.QueryInterface(Ci.nsIInterfaceRequestor)\n> +                .getInterface(Ci.nsIDOMWindowUtils).garbageCollect();\n> +          Cu.forceGC();\n> +        }\n\nBut to actually collect all garbage windows, you need to run at least three cycle collections.  That this code doesn't do any CCs probably explains why it's not behaving as you expect.\n\n  window.QueryInterface(Ci.nsIInterfaceRequestor)\n        .getInterface(Ci.nsIDOMWindowUtils)\n        .cycleCollect();\n\nOr you can do what about:memory does, which is fire heap-minimize notifications.  See function minimizeMemoryUsage3x in toolkit/components/aboutmemory/content/aboutMemory.js.", "creation_time": "2012-03-13T00:37:28Z"}, {"tags": [], "is_private": false, "count": 10, "id": 6134843, "bug_id": 709326, "creation_time": "2012-03-13T02:54:31Z", "raw_text": "Thanks for taking a look at this, Anthony!\n\n> If I follow the steps in comment 0 and click Update on about:memory, the\n> youtube compartment disappears. As far as I know this does not trigger a GC.\n\n\"Update\" doesn't explicitly trigger a GC, but when the page is regenerated there's a decent chance that enough JS code is run that a GC will occur anyway.\n\n\n> Or you can do what about:memory does, which is fire heap-minimize\n> notifications.  See function minimizeMemoryUsage3x in\n> toolkit/components/aboutmemory/content/aboutMemory.js.\n\nRight.  So you can trigger heap-minimize events, each of which triggers a GC followed by a CC.  Or you can do the GC-followed-by-CC manually yourself.  It's important to return to the event loop each time around, otherwise some garbage may be missed.\n\nhttps://github.com/Nephyrin/MozAreWeSlimYet/blob/master/mozmill_endurance_test/endurance.js#L110 might be instructive.  Note that it's designed to work with old versions of Firefox that didn't have some of the more recently-added GC triggers, so your version can be simpler.", "text": "Thanks for taking a look at this, Anthony!\n\n> If I follow the steps in comment 0 and click Update on about:memory, the\n> youtube compartment disappears. As far as I know this does not trigger a GC.\n\n\"Update\" doesn't explicitly trigger a GC, but when the page is regenerated there's a decent chance that enough JS code is run that a GC will occur anyway.\n\n\n> Or you can do what about:memory does, which is fire heap-minimize\n> notifications.  See function minimizeMemoryUsage3x in\n> toolkit/components/aboutmemory/content/aboutMemory.js.\n\nRight.  So you can trigger heap-minimize events, each of which triggers a GC followed by a CC.  Or you can do the GC-followed-by-CC manually yourself.  It's important to return to the event loop each time around, otherwise some garbage may be missed.\n\nhttps://github.com/Nephyrin/MozAreWeSlimYet/blob/master/mozmill_endurance_test/endurance.js#L110 might be instructive.  Note that it's designed to work with old versions of Firefox that didn't have some of the more recently-added GC triggers, so your version can be simpler.", "time": "2012-03-13T02:54:31Z", "attachment_id": null, "creator": "n.nethercote@gmail.com", "author": "n.nethercote@gmail.com"}, {"author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "id": 6137259, "tags": [], "count": 11, "is_private": false, "bug_id": 709326, "creation_time": "2012-03-13T21:49:38Z", "raw_text": "Okay, thanks for the help guys. This seems to have got it. I'm using heap-minimize as suggested.\n\nNOTE: I did some testing and iterating 3 times was not enough to clear youtube all the time. I've bumped it to 5 and it seems to work. Granted, I've not done exhaustive testing, and I've not checked the case for the memory usage spike.", "attachment_id": 605554, "time": "2012-03-13T21:49:38Z", "text": "Created attachment 605554\nfix v1.0\n\nOkay, thanks for the help guys. This seems to have got it. I'm using heap-minimize as suggested.\n\nNOTE: I did some testing and iterating 3 times was not enough to clear youtube all the time. I've bumped it to 5 and it seems to work. Granted, I've not done exhaustive testing, and I've not checked the case for the memory usage spike."}, {"author": "justin.lebar+bug@gmail.com", "creator": "justin.lebar+bug@gmail.com", "time": "2012-03-14T16:16:51Z", "attachment_id": 605554, "text": "Comment on attachment 605554\nfix v1.0\n\nThis looks basically right; just a few small things.\n\n> +    function runSoon(f) {\n> +      let tm = Cc[\"@mozilla.org/thread-manager;1\"]\n> +              .getService(Ci.nsIThreadManager);\n> +      tm.mainThread.dispatch({ run: f }, Ci.nsIThread.DISPATCH_NORMAL);\n> +    }\n\nI think you should be able to use setTimeout(sendHeapMinNotificationsInner, 0) for this.\n\nI'm also kind of concerned about sending five heap-min notifications back to back like this.  A GC/CC can take 100ms or longer, so five of them could be a half-second hang.\n\nCould you instead send the five notifications with some delay (say, 1s) between each?  setTimeout should make that easy.\n\n(btw, I'm not a browser peer, so we'll have to loop someone else in for the final review.)", "raw_text": "This looks basically right; just a few small things.\n\n> +    function runSoon(f) {\n> +      let tm = Cc[\"@mozilla.org/thread-manager;1\"]\n> +              .getService(Ci.nsIThreadManager);\n> +      tm.mainThread.dispatch({ run: f }, Ci.nsIThread.DISPATCH_NORMAL);\n> +    }\n\nI think you should be able to use setTimeout(sendHeapMinNotificationsInner, 0) for this.\n\nI'm also kind of concerned about sending five heap-min notifications back to back like this.  A GC/CC can take 100ms or longer, so five of them could be a half-second hang.\n\nCould you instead send the five notifications with some delay (say, 1s) between each?  setTimeout should make that easy.\n\n(btw, I'm not a browser peer, so we'll have to loop someone else in for the final review.)", "creation_time": "2012-03-14T16:16:51Z", "bug_id": 709326, "id": 6139210, "count": 12, "is_private": false, "tags": []}, {"creator": "u279076@disabled.tld", "author": "u279076@disabled.tld", "bug_id": 709326, "tags": [], "count": 13, "is_private": false, "id": 6169044, "text": "Created attachment 609070\nwip v2\n\nRunning into a couple of different issues trying to use setTimeout:\n\n> if (++i < 5)\n>   runSoon();\nThis works, but as you said, there are risks for a hang scenario..\n\n> if (++i < 5)\n>  window.setTimeout(sendHeapMinNotificationsInner, 1000);\nThis does not resolve the bug, youtube still appears\n\n> if (++i < 5)\n>  window.setTimeout(sendHeapMinNotificationsInner, 0);\nThis appears to trigger bug 713203 (network-memory-cache of -0.00MB)\n\nAny advice on how I might proceed with this?", "attachment_id": 609070, "time": "2012-03-25T04:16:27Z", "raw_text": "Running into a couple of different issues trying to use setTimeout:\n\n> if (++i < 5)\n>   runSoon();\nThis works, but as you said, there are risks for a hang scenario..\n\n> if (++i < 5)\n>  window.setTimeout(sendHeapMinNotificationsInner, 1000);\nThis does not resolve the bug, youtube still appears\n\n> if (++i < 5)\n>  window.setTimeout(sendHeapMinNotificationsInner, 0);\nThis appears to trigger bug 713203 (network-memory-cache of -0.00MB)\n\nAny advice on how I might proceed with this?", "creation_time": "2012-03-25T04:16:27Z"}, {"author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "creation_time": "2012-03-25T05:44:13Z", "raw_text": "I've retested my original theory of 5 simultaneous \"heap-minimize\" events and this does not work 100%. I'm still able to see youtube in about:memory in some instances. In particular:\n\n1) Load about:memory\n2) Start private browsing\n3) Go to youtube and load a video\n4) Exit private browsing\n5) Repeat from step 2 until youtube appears in private browsing\n\nI'm not sure it's enough to simply force trigger these events.", "time": "2012-03-25T05:44:13Z", "attachment_id": null, "text": "I've retested my original theory of 5 simultaneous \"heap-minimize\" events and this does not work 100%. I'm still able to see youtube in about:memory in some instances. In particular:\n\n1) Load about:memory\n2) Start private browsing\n3) Go to youtube and load a video\n4) Exit private browsing\n5) Repeat from step 2 until youtube appears in private browsing\n\nI'm not sure it's enough to simply force trigger these events.", "id": 6169075, "tags": [], "is_private": false, "count": 14, "bug_id": 709326}, {"attachment_id": null, "time": "2012-03-25T05:45:13Z", "text": "(In reply to Anthony Hughes, Mozilla QA (irc: ashughes) from comment #14)\n> 5) Repeat from step 2 until youtube appears in private browsing\nSorry, this should read \"...until youtube appears in about:memory\"", "creation_time": "2012-03-25T05:45:13Z", "raw_text": "(In reply to Anthony Hughes, Mozilla QA (irc: ashughes) from comment #14)\n> 5) Repeat from step 2 until youtube appears in private browsing\nSorry, this should read \"...until youtube appears in about:memory\"", "bug_id": 709326, "id": 6169076, "tags": [], "is_private": false, "count": 15, "author": "u279076@disabled.tld", "creator": "u279076@disabled.tld"}, {"creator": "justin.lebar+bug@gmail.com", "author": "justin.lebar+bug@gmail.com", "is_private": false, "count": 16, "tags": [], "id": 6169351, "bug_id": 709326, "raw_text": "> > if (++i < 5)\n> >  window.setTimeout(sendHeapMinNotificationsInner, 1000);\n> This does not resolve the bug, youtube still appears\n\nEven after you wait 5 seconds?  Or do you think you're just hitting the non-determinism described in comment 14?\n\n> > if (++i < 5)\n> >  window.setTimeout(sendHeapMinNotificationsInner, 0);\n> This appears to trigger bug 713203 (network-memory-cache of -0.00MB)\n\nCould you post that in bug 713203?  We've been looking for STR in there.  :)\n\n> I've retested my original theory of 5 simultaneous \"heap-minimize\" events and this does \n> not work 100%. I'm still able to see youtube in about:memory in some instances. In \n> particular:\n\nIt could be that even 5 GC/CCs is not sufficient; maybe we simply need to send more heap-minimize notifications.  We may not be able to solve this bug 100% without doing an excessive number of GC/CCs, but we may be able to get most of the way there...\n\n> > 5) Repeat from step 2 until youtube appears in private browsing\n> Sorry, this should read \"...until youtube appears in about:memory\"\n\nOne other thing to check: When you finally see youtube in about:memory, does it go away after a certain amount of time (refreshing about:memory).  Does it go away faster if you click the \"minimize memory usage\" button at the bottom of about:memory?", "creation_time": "2012-03-25T15:16:08Z", "text": "> > if (++i < 5)\n> >  window.setTimeout(sendHeapMinNotificationsInner, 1000);\n> This does not resolve the bug, youtube still appears\n\nEven after you wait 5 seconds?  Or do you think you're just hitting the non-determinism described in comment 14?\n\n> > if (++i < 5)\n> >  window.setTimeout(sendHeapMinNotificationsInner, 0);\n> This appears to trigger bug 713203 (network-memory-cache of -0.00MB)\n\nCould you post that in bug 713203?  We've been looking for STR in there.  :)\n\n> I've retested my original theory of 5 simultaneous \"heap-minimize\" events and this does \n> not work 100%. I'm still able to see youtube in about:memory in some instances. In \n> particular:\n\nIt could be that even 5 GC/CCs is not sufficient; maybe we simply need to send more heap-minimize notifications.  We may not be able to solve this bug 100% without doing an excessive number of GC/CCs, but we may be able to get most of the way there...\n\n> > 5) Repeat from step 2 until youtube appears in private browsing\n> Sorry, this should read \"...until youtube appears in about:memory\"\n\nOne other thing to check: When you finally see youtube in about:memory, does it go away after a certain amount of time (refreshing about:memory).  Does it go away faster if you click the \"minimize memory usage\" button at the bottom of about:memory?", "attachment_id": null, "time": "2012-03-25T15:16:08Z"}, {"author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "id": 6188091, "tags": [], "is_private": false, "count": 17, "bug_id": 709326, "creation_time": "2012-04-01T04:27:01Z", "raw_text": "(In reply to Justin Lebar [:jlebar] from comment #16)\n\nSorry, I've not gotten back to this sooner. I'll try to set aside some time this coming week to respond thoughtfully.", "attachment_id": null, "time": "2012-04-01T04:27:01Z", "text": "(In reply to Justin Lebar [:jlebar] from comment #16)\n\nSorry, I've not gotten back to this sooner. I'll try to set aside some time this coming week to respond thoughtfully."}, {"author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "attachment_id": null, "time": "2012-04-12T16:10:47Z", "text": "(In reply to Justin Lebar [:jlebar] from comment #16)\n> > > if (++i < 5)\n> > >  window.setTimeout(sendHeapMinNotificationsInner, 1000);\n> > This does not resolve the bug, youtube still appears\n> \n> Even after you wait 5 seconds?  Or do you think you're just hitting the\n> non-determinism described in comment 14?\n\nSorry it's taken so long to get back to you on this. I think waiting 5 seconds defeats the purpose of this bug does it not? The solution we are trying to achieve is for no Private Browsing data to leak through to the non-private session (ie. youtube should not be visible from the get-go). Also, without my patch, simply refreshing about:memory after a while clears it up. I'm not sure what I've done here accomplishes anything, it seems more like I'm trying to hack a bandaid together instead of solving the problem.\n\nMaybe if I can get some tips to debug what's actually happening to let the data leak through then we might come to a real solution?", "creation_time": "2012-04-12T16:10:47Z", "raw_text": "(In reply to Justin Lebar [:jlebar] from comment #16)\n> > > if (++i < 5)\n> > >  window.setTimeout(sendHeapMinNotificationsInner, 1000);\n> > This does not resolve the bug, youtube still appears\n> \n> Even after you wait 5 seconds?  Or do you think you're just hitting the\n> non-determinism described in comment 14?\n\nSorry it's taken so long to get back to you on this. I think waiting 5 seconds defeats the purpose of this bug does it not? The solution we are trying to achieve is for no Private Browsing data to leak through to the non-private session (ie. youtube should not be visible from the get-go). Also, without my patch, simply refreshing about:memory after a while clears it up. I'm not sure what I've done here accomplishes anything, it seems more like I'm trying to hack a bandaid together instead of solving the problem.\n\nMaybe if I can get some tips to debug what's actually happening to let the data leak through then we might come to a real solution?", "bug_id": 709326, "id": 6217524, "tags": [], "is_private": false, "count": 18}, {"id": 6217547, "is_private": false, "count": 19, "tags": [], "bug_id": 709326, "raw_text": "Follow up to comment 18...\n\nI'm all for hacking something together to solve this in the interim but I'd much rather spend a bit more energy to find the *right* solution if one can be found. I'd prefer my first mozilla-central contribution to be less of the former and more of the latter.", "creation_time": "2012-04-12T16:16:58Z", "attachment_id": null, "time": "2012-04-12T16:16:58Z", "author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "text": "Follow up to comment 18...\n\nI'm all for hacking something together to solve this in the interim but I'd much rather spend a bit more energy to find the *right* solution if one can be found. I'd prefer my first mozilla-central contribution to be less of the former and more of the latter."}, {"author": "justin.lebar+bug@gmail.com", "creator": "justin.lebar+bug@gmail.com", "creation_time": "2012-04-12T16:39:18Z", "raw_text": "> I think waiting 5 seconds defeats the purpose of this bug does it not?\n\nPerhaps, but what I wanted to know is, is 5 enough GCs?  If we schedule the GCs so they happen over 5 seconds and we don't wait for 5 seconds before checking about:memory, then we're not really testing what we wrote...\n\n> Maybe if I can get some tips to debug what's actually happening to let the data leak through then we \n> might come to a real solution?\n\nIt's no mystery what's going on here.  When you switch into and out of PB, it's the same Firefox process, so it can't immediately forget all objects from PB mode.  about:memory is reporting all window objects in existence.  Window objects don't get cleaned up until they're GC'ed.  It takes multiple GCs to clean up all windows.  And the GC doesn't happen except occasionally.\n\nIf you break any link in the chain above, you solve the problem.  The easiest thing to change here is probably the final element, the frequency of GCs.  But that's hacky, I agree, and maybe you've shown it to be too fragile.\n\nAn alternative way of fixing this bug would be to instruct about:memory to hide URLs from private browsing windows (cutting the second link of the chain).\n\nThat's doable, but it's more complicated.  We need a way to determine whether a window is \"tainted\" by private browsing.  The way I'd do it is to add a new method to nsGlobalWindow which queries the window's docshell, if it has one, to determine if it's in private browsing mode.  And when a window is detached from its docshell (nsGlobalWindow::SetDocShell(NULL)), it remembers its docshell's private browsing mode.  That way, it can return the right thing even after it no longer has a docshell.\n\nI think we'd have to invent a new interface for this is-tainted property to hang off, too.\n\nAnyway, this is getting a lot more complicated.  This is totally doable, but it's not simple, either -- I don't know how deep you want to get into this stuff.", "time": "2012-04-12T16:39:18Z", "attachment_id": null, "text": "> I think waiting 5 seconds defeats the purpose of this bug does it not?\n\nPerhaps, but what I wanted to know is, is 5 enough GCs?  If we schedule the GCs so they happen over 5 seconds and we don't wait for 5 seconds before checking about:memory, then we're not really testing what we wrote...\n\n> Maybe if I can get some tips to debug what's actually happening to let the data leak through then we \n> might come to a real solution?\n\nIt's no mystery what's going on here.  When you switch into and out of PB, it's the same Firefox process, so it can't immediately forget all objects from PB mode.  about:memory is reporting all window objects in existence.  Window objects don't get cleaned up until they're GC'ed.  It takes multiple GCs to clean up all windows.  And the GC doesn't happen except occasionally.\n\nIf you break any link in the chain above, you solve the problem.  The easiest thing to change here is probably the final element, the frequency of GCs.  But that's hacky, I agree, and maybe you've shown it to be too fragile.\n\nAn alternative way of fixing this bug would be to instruct about:memory to hide URLs from private browsing windows (cutting the second link of the chain).\n\nThat's doable, but it's more complicated.  We need a way to determine whether a window is \"tainted\" by private browsing.  The way I'd do it is to add a new method to nsGlobalWindow which queries the window's docshell, if it has one, to determine if it's in private browsing mode.  And when a window is detached from its docshell (nsGlobalWindow::SetDocShell(NULL)), it remembers its docshell's private browsing mode.  That way, it can return the right thing even after it no longer has a docshell.\n\nI think we'd have to invent a new interface for this is-tainted property to hang off, too.\n\nAnyway, this is getting a lot more complicated.  This is totally doable, but it's not simple, either -- I don't know how deep you want to get into this stuff.", "id": 6217631, "count": 20, "is_private": false, "tags": [], "bug_id": 709326}, {"author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "raw_text": "(In reply to Justin Lebar [:jlebar] from comment #20)\n> Anyway, this is getting a lot more complicated.  This is totally doable, but\n> it's not simple, either -- I don't know how deep you want to get into this\n> stuff.\n\nI'd be willing to try providing I have some guidance along the way; at the very least it would be a good learning experience for me. Of course, this will mean a fix will take longer to land than if an *experienced* developer took over. I completely understand if a timely fix is more imporant.", "creation_time": "2012-04-12T16:54:41Z", "attachment_id": null, "time": "2012-04-12T16:54:41Z", "text": "(In reply to Justin Lebar [:jlebar] from comment #20)\n> Anyway, this is getting a lot more complicated.  This is totally doable, but\n> it's not simple, either -- I don't know how deep you want to get into this\n> stuff.\n\nI'd be willing to try providing I have some guidance along the way; at the very least it would be a good learning experience for me. Of course, this will mean a fix will take longer to land than if an *experienced* developer took over. I completely understand if a timely fix is more imporant.", "id": 6217680, "tags": [], "count": 21, "is_private": false, "bug_id": 709326}, {"attachment_id": null, "time": "2012-04-12T17:29:27Z", "text": "Boris, does comment 20 sound reasonable to you?  We may not need to add a new nsGlobalWindow interface after all -- the code which generates the window memory reports has a raw nsGlobalWindow*.\n\n> Of course, this will mean a fix will take longer to land than if an *experienced* developer took \n> over. I completely understand if a timely fix is more imporant.\n\nI'm certainly not in a hurry.\n\nAre you comfortable programming in C++?", "creation_time": "2012-04-12T17:29:27Z", "raw_text": "Boris, does comment 20 sound reasonable to you?  We may not need to add a new nsGlobalWindow interface after all -- the code which generates the window memory reports has a raw nsGlobalWindow*.\n\n> Of course, this will mean a fix will take longer to land than if an *experienced* developer took \n> over. I completely understand if a timely fix is more imporant.\n\nI'm certainly not in a hurry.\n\nAre you comfortable programming in C++?", "bug_id": 709326, "id": 6217916, "tags": [], "is_private": false, "count": 22, "author": "justin.lebar+bug@gmail.com", "creator": "justin.lebar+bug@gmail.com"}, {"raw_text": "It's been a few years since I touched C++ code. It's like riding a bike though; just hop back on the seat and it'll come back to me, right? :)", "creation_time": "2012-04-12T17:32:49Z", "attachment_id": null, "time": "2012-04-12T17:32:49Z", "author": "u279076@disabled.tld", "creator": "u279076@disabled.tld", "text": "It's been a few years since I touched C++ code. It's like riding a bike though; just hop back on the seat and it'll come back to me, right? :)", "id": 6217947, "count": 23, "is_private": false, "tags": [], "bug_id": 709326}, {"time": "2012-04-12T17:46:19Z", "attachment_id": null, "text": "Heh, okay!  Here are some pointers:\n\ndom/base/nsWindowMemoryReporter.cpp::AppendWindowURI is where the URL is put into the string which eventually appears in about:memory.  Our goal is, for windows tainted by PB, not to append the URL there (maybe we append \"(private)\" or something).\n\nTo determine whether a window's URL is private, you'll need to add a public method to dom/base/nsGlobalWindow.h.\n\nCritical for this method is the notion of a window's \"docshell\".  A docshell is a container for a window, and if the window is currently displayed in a tab, its mDocShell field is non-null.  But windows can be alive and have mDocShell == NULL; they're just not in a tab.  mDocShell gets set in nsGlobalWindow::SetDocShell.\n\nPrivate browsing mode is set on a per-docshell basis (bug 722840).  So in this method you're adding to nsGlobalWindow, you can check if we have a docshell.  If so, retrieve its PB flag.  If not, well, we have to remember whether our docshell *was* in PB when SetDocShell(NULL) was last called.\n\nYou can get the private browsing flag out of a docshell by doing something like this:\n\n  nsCOMPtr<nsILoadContext> loadContext = do_QueryInterface(mDocShell);\n  if (loadContext) {\n    bool isPrivateBrowsing = false;\n    loadContext->GetUsePrivateBrowsing(&isPrivateBrowsing);\n  }\n\nThe QueryInterfacce call gives us a different view of the same object -- in this case, it lets us call the nsILoadContext methods, one of which is GetUsePrivateBrowsing.\n\nLet me know if/when you get stuck.  :)", "raw_text": "Heh, okay!  Here are some pointers:\n\ndom/base/nsWindowMemoryReporter.cpp::AppendWindowURI is where the URL is put into the string which eventually appears in about:memory.  Our goal is, for windows tainted by PB, not to append the URL there (maybe we append \"(private)\" or something).\n\nTo determine whether a window's URL is private, you'll need to add a public method to dom/base/nsGlobalWindow.h.\n\nCritical for this method is the notion of a window's \"docshell\".  A docshell is a container for a window, and if the window is currently displayed in a tab, its mDocShell field is non-null.  But windows can be alive and have mDocShell == NULL; they're just not in a tab.  mDocShell gets set in nsGlobalWindow::SetDocShell.\n\nPrivate browsing mode is set on a per-docshell basis (bug 722840).  So in this method you're adding to nsGlobalWindow, you can check if we have a docshell.  If so, retrieve its PB flag.  If not, well, we have to remember whether our docshell *was* in PB when SetDocShell(NULL) was last called.\n\nYou can get the private browsing flag out of a docshell by doing something like this:\n\n  nsCOMPtr<nsILoadContext> loadContext = do_QueryInterface(mDocShell);\n  if (loadContext) {\n    bool isPrivateBrowsing = false;\n    loadContext->GetUsePrivateBrowsing(&isPrivateBrowsing);\n  }\n\nThe QueryInterfacce call gives us a different view of the same object -- in this case, it lets us call the nsILoadContext methods, one of which is GetUsePrivateBrowsing.\n\nLet me know if/when you get stuck.  :)", "creation_time": "2012-04-12T17:46:19Z", "bug_id": 709326, "id": 6218001, "is_private": false, "count": 24, "tags": [], "author": "justin.lebar+bug@gmail.com", "creator": "justin.lebar+bug@gmail.com"}, {"creator": "josh@joshmatthews.net", "author": "josh@joshmatthews.net", "bug_id": 709326, "is_private": false, "count": 25, "tags": [], "id": 6218558, "text": "With regards to nsILoadContext, you can also do |loadContext->UsePrivateBrowsing()| and get a boolean value. It's more pleasant to read and write, in my experience.", "attachment_id": null, "time": "2012-04-12T19:42:34Z", "raw_text": "With regards to nsILoadContext, you can also do |loadContext->UsePrivateBrowsing()| and get a boolean value. It's more pleasant to read and write, in my experience.", "creation_time": "2012-04-12T19:42:34Z"}, {"text": "Comment 20 seems reasonable, yes.", "time": "2012-04-12T20:56:27Z", "attachment_id": null, "creation_time": "2012-04-12T20:56:27Z", "raw_text": "Comment 20 seems reasonable, yes.", "bug_id": 709326, "tags": [], "count": 26, "is_private": false, "id": 6218882, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"tags": [], "count": 27, "is_private": false, "id": 6327991, "bug_id": 709326, "creation_time": "2012-05-22T17:36:28Z", "raw_text": "It's been over a month and I still have not found time to work on this bug. I'm going to remove my name from it for now to let someone with more time to step in. I just don't see myself having any time to even look at this, let alone attempt a fix, in the near future.\n\nRemoving my name from the assignee field will make this available for someone else to attempt. I will re-attempt a fix if I find the time and this is still open.\n\nSorry I couldn't be more useful, and thanks for the assistance and patience.", "text": "It's been over a month and I still have not found time to work on this bug. I'm going to remove my name from it for now to let someone with more time to step in. I just don't see myself having any time to even look at this, let alone attempt a fix, in the near future.\n\nRemoving my name from the assignee field will make this available for someone else to attempt. I will re-attempt a fix if I find the time and this is still open.\n\nSorry I couldn't be more useful, and thanks for the assistance and patience.", "time": "2012-05-22T17:36:28Z", "attachment_id": null, "creator": "u279076@disabled.tld", "author": "u279076@disabled.tld"}, {"author": "kwierso@gmail.com", "creator": "kwierso@gmail.com", "id": 6465447, "is_private": false, "count": 28, "tags": [], "bug_id": 709326, "raw_text": "I *think* this is what comment 24 wanted, but I haven't touched C++ since an introductory programming class in junior high.\n\nI'm willing to work through it, though.", "creation_time": "2012-07-12T07:06:26Z", "attachment_id": 641377, "time": "2012-07-12T07:06:26Z", "text": "Created attachment 641377\nwip v3\n\nI *think* this is what comment 24 wanted, but I haven't touched C++ since an introductory programming class in junior high.\n\nI'm willing to work through it, though."}, {"bug_id": 709326, "tags": [], "is_private": false, "count": 29, "id": 6465913, "text": "Comment on attachment 641377\nwip v3\n\nThese changes won't build. You need to define a method on nsGlobalWindow that returns the private browsing boolean, and call that (via ->) in AppendWindowURI.", "time": "2012-07-12T12:16:21Z", "attachment_id": 641377, "raw_text": "These changes won't build. You need to define a method on nsGlobalWindow that returns the private browsing boolean, and call that (via ->) in AppendWindowURI.", "creation_time": "2012-07-12T12:16:21Z", "creator": "josh@joshmatthews.net", "author": "josh@joshmatthews.net"}, {"author": "justin.lebar+bug@gmail.com", "creator": "justin.lebar+bug@gmail.com", "bug_id": 709326, "id": 6465992, "tags": [], "is_private": false, "count": 30, "attachment_id": null, "time": "2012-07-12T13:07:07Z", "text": "In other words, this isn't a function:\n \n+  // Call this to determine if this window is in private browsing mode\n+  nsCOMPtr<nsILoadContext> loadContext = do_QueryInterface(mDocShell);\n+  if (loadContext) {\n+    bool isPrivateBrowsing = false;\n+    loadContext->GetUsePrivateBrowsing(&isPrivateBrowsing);\n+  }", "creation_time": "2012-07-12T13:07:07Z", "raw_text": "In other words, this isn't a function:\n \n+  // Call this to determine if this window is in private browsing mode\n+  nsCOMPtr<nsILoadContext> loadContext = do_QueryInterface(mDocShell);\n+  if (loadContext) {\n+    bool isPrivateBrowsing = false;\n+    loadContext->GetUsePrivateBrowsing(&isPrivateBrowsing);\n+  }"}, {"author": "n.nethercote@gmail.com", "creator": "n.nethercote@gmail.com", "time": "2012-07-13T00:09:38Z", "attachment_id": 641377, "text": "Comment on attachment 641377\nwip v3\n\nReview of attachment 641377:\n-----------------------------------------------------------------\n\nThis approach will work for windows, which is good.  But it does nothing for JS compartments.  We need a way to mark a JS compartment as having been created by PB.  This flag could be put in the CompartmentPrivate.\n\n::: dom/base/nsWindowMemoryReporter.cpp\n@@ +85,5 @@\n>  \n> +  // Windows from private browsing can be reported in about:memory\n> +  // which can be a leak in privacy.\n> +  if(aWindow.isPrivateBrowsing) {\n> +    aStr += NS_LITERAL_CSTRING(\"[private]\");\n\nI was thinking about this... it reveals the fact that you were using PB.  I think it would be better to simply ignore windows remaining from PB.", "raw_text": "Review of attachment 641377:\n-----------------------------------------------------------------\n\nThis approach will work for windows, which is good.  But it does nothing for JS compartments.  We need a way to mark a JS compartment as having been created by PB.  This flag could be put in the CompartmentPrivate.\n\n::: dom/base/nsWindowMemoryReporter.cpp\n@@ +85,5 @@\n>  \n> +  // Windows from private browsing can be reported in about:memory\n> +  // which can be a leak in privacy.\n> +  if(aWindow.isPrivateBrowsing) {\n> +    aStr += NS_LITERAL_CSTRING(\"[private]\");\n\nI was thinking about this... it reveals the fact that you were using PB.  I think it would be better to simply ignore windows remaining from PB.", "creation_time": "2012-07-13T00:09:38Z", "bug_id": 709326, "id": 6468194, "tags": [], "count": 31, "is_private": false}, {"creation_time": "2012-07-13T06:12:13Z", "raw_text": "> I was thinking about this... it reveals the fact that you were using PB.  I think it would be better \n> to simply ignore windows remaining from PB.\n\nTune in next week for \"Private browsing causes a HUGE heap unclassified leak!\".\n\nI'm not sure what to do about this.", "author": "justin.lebar+bug@gmail.com", "time": "2012-07-13T06:12:13Z", "attachment_id": null, "creator": "justin.lebar+bug@gmail.com", "text": "> I was thinking about this... it reveals the fact that you were using PB.  I think it would be better \n> to simply ignore windows remaining from PB.\n\nTune in next week for \"Private browsing causes a HUGE heap unclassified leak!\".\n\nI'm not sure what to do about this.", "id": 6468798, "tags": [], "count": 32, "is_private": false, "bug_id": 709326}, {"raw_text": "I don't think it is enough of a problem to worry about.", "creation_time": "2012-07-13T13:56:21Z", "attachment_id": null, "time": "2012-07-13T13:56:21Z", "text": "I don't think it is enough of a problem to worry about.", "id": 6469633, "tags": [], "is_private": false, "count": 33, "bug_id": 709326, "author": "continuation@gmail.com", "creator": "continuation@gmail.com"}, {"creator": "nigelh747@gmail.com", "author": "nigelh747@gmail.com", "raw_text": "Occurs within Firefox 16 - resolved by running a minimise Memory - so why not add that function as part of the switch back from Private Browsing.\n\nThis is a fault - and is similar to the bug that meant 15.01 had to be released where Firefox was remembering private browsing.", "creation_time": "2012-10-10T06:39:07Z", "text": "Occurs within Firefox 16 - resolved by running a minimise Memory - so why not add that function as part of the switch back from Private Browsing.\n\nThis is a fault - and is similar to the bug that meant 15.01 had to be released where Firefox was remembering private browsing.", "time": "2012-10-10T06:39:07Z", "attachment_id": null, "count": 34, "is_private": false, "tags": [], "id": 6714299, "bug_id": 709326}, {"creator": "justin.lebar+bug@gmail.com", "author": "justin.lebar+bug@gmail.com", "creation_time": "2012-10-10T14:22:23Z", "raw_text": "> Occurs within Firefox 16 - resolved by running a minimise Memory - so why not add that function as \n> part of the switch back from Private Browsing.\n\nThis was an approach that we considered and tried.  There a few problems:\n\n* Minimize memory usage is slow, which would make coming back from PB slow.\n* Minimize memory usage does not always clear all windows.  If Firefox or and extension leaks memory, minimize memory won't clear the window.", "text": "> Occurs within Firefox 16 - resolved by running a minimise Memory - so why not add that function as \n> part of the switch back from Private Browsing.\n\nThis was an approach that we considered and tried.  There a few problems:\n\n* Minimize memory usage is slow, which would make coming back from PB slow.\n* Minimize memory usage does not always clear all windows.  If Firefox or and extension leaks memory, minimize memory won't clear the window.", "attachment_id": null, "time": "2012-10-10T14:22:23Z", "is_private": false, "count": 35, "tags": [], "id": 6715278, "bug_id": 709326}, {"text": "Unassigning from myself because I probably won't get to it anytime soon. Did this change at all with the per-window pb stuff?", "attachment_id": null, "time": "2013-03-07T20:24:51Z", "creation_time": "2013-03-07T20:24:51Z", "raw_text": "Unassigning from myself because I probably won't get to it anytime soon. Did this change at all with the per-window pb stuff?", "bug_id": 709326, "is_private": false, "count": 36, "tags": [], "id": 7179797, "creator": "kwierso@gmail.com", "author": "kwierso@gmail.com"}, {"author": "gavin.sharp@gmail.com", "creator": "gavin.sharp@gmail.com", "attachment_id": null, "time": "2013-03-25T14:41:35Z", "text": "*** Bug 854059 has been marked as a duplicate of this bug. ***", "raw_text": "", "creation_time": "2013-03-25T14:41:35Z", "bug_id": 709326, "id": 7239932, "tags": [], "is_private": false, "count": 37}, {"author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com", "raw_text": "What's the status of this bug?  I had never seen it until now, and it's sort of embarrassing that this fell off our radar. :(", "creation_time": "2013-04-04T02:56:28Z", "attachment_id": null, "time": "2013-04-04T02:56:28Z", "text": "What's the status of this bug?  I had never seen it until now, and it's sort of embarrassing that this fell off our radar. :(", "id": 7275215, "tags": [], "is_private": false, "count": 38, "bug_id": 709326}, {"time": "2013-04-04T04:56:51Z", "attachment_id": null, "author": "josh@joshmatthews.net", "creator": "josh@joshmatthews.net", "text": "I was under the impression that it wasn't a serious concern. It was deprioritized when it became clear that the potential solution in comment 20 was more involved than original anticipated.", "raw_text": "I was under the impression that it wasn't a serious concern. It was deprioritized when it became clear that the potential solution in comment 20 was more involved than original anticipated.", "creation_time": "2013-04-04T04:56:51Z", "bug_id": 709326, "id": 7275407, "count": 39, "is_private": false, "tags": []}, {"author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com", "creation_time": "2013-04-26T17:21:55Z", "raw_text": "(In reply to Josh Matthews [:jdm] from comment #39)\n> I was under the impression that it wasn't a serious concern. It was\n> deprioritized when it became clear that the potential solution in comment 20\n> was more involved than original anticipated.\n\nThat is very sad to hear.  This can pretty much defeat the purpose of things such as sessionstore forgetting about closed private windows, etc.\n\nDo you have cycles to work on this?", "attachment_id": null, "time": "2013-04-26T17:21:55Z", "text": "(In reply to Josh Matthews [:jdm] from comment #39)\n> I was under the impression that it wasn't a serious concern. It was\n> deprioritized when it became clear that the potential solution in comment 20\n> was more involved than original anticipated.\n\nThat is very sad to hear.  This can pretty much defeat the purpose of things such as sessionstore forgetting about closed private windows, etc.\n\nDo you have cycles to work on this?", "id": 7360064, "tags": [], "count": 40, "is_private": false, "bug_id": 709326}, {"creator": "josh@joshmatthews.net", "author": "josh@joshmatthews.net", "bug_id": 709326, "count": 41, "is_private": false, "tags": [], "id": 7360146, "text": "Not until my b2g work is wrapped up, and definitely not next week.", "time": "2013-04-26T17:41:43Z", "attachment_id": null, "raw_text": "Not until my b2g work is wrapped up, and definitely not next week.", "creation_time": "2013-04-26T17:41:43Z"}, {"author": "guijoselito@gmail.com", "creator": "guijoselito@gmail.com", "creation_time": "2013-06-15T14:31:13Z", "raw_text": "Is it a problem that when you have a private window and a 'non-private'-window, if you open about:memory in the non-private, you see the memory and pages from the private one?", "attachment_id": null, "time": "2013-06-15T14:31:13Z", "text": "Is it a problem that when you have a private window and a 'non-private'-window, if you open about:memory in the non-private, you see the memory and pages from the private one?", "id": 7538747, "count": 42, "is_private": false, "tags": [], "bug_id": 709326}, {"creator": "justin.lebar+bug@gmail.com", "author": "justin.lebar+bug@gmail.com", "count": 43, "is_private": false, "tags": [], "id": 7539148, "bug_id": 709326, "raw_text": "(In reply to Guilherme Lima from comment #42)\n> Is it a problem that when you have a private window and a\n> 'non-private'-window, if you open about:memory in the non-private, you see\n> the memory and pages from the private one?\n\nWhat you describe does happen, but it's not this bug.\n\nThis bug is about the fact that after you close all private windows, URLs that you had open in those windows show up in about:memory in the non-private window until they're GC'ed.  If we have a memory leak, those URLs could stick around until you close the browser.", "creation_time": "2013-06-15T20:18:21Z", "text": "(In reply to Guilherme Lima from comment #42)\n> Is it a problem that when you have a private window and a\n> 'non-private'-window, if you open about:memory in the non-private, you see\n> the memory and pages from the private one?\n\nWhat you describe does happen, but it's not this bug.\n\nThis bug is about the fact that after you close all private windows, URLs that you had open in those windows show up in about:memory in the non-private window until they're GC'ed.  If we have a memory leak, those URLs could stick around until you close the browser.", "time": "2013-06-15T20:18:21Z", "attachment_id": null}, {"creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com", "raw_text": "(In reply to comment #43)\n> (In reply to Guilherme Lima from comment #42)\n> > Is it a problem that when you have a private window and a\n> > 'non-private'-window, if you open about:memory in the non-private, you see\n> > the memory and pages from the private one?\n> \n> What you describe does happen, but it's not this bug.\n> \n> This bug is about the fact that after you close all private windows, URLs that\n> you had open in those windows show up in about:memory in the non-private window\n> until they're GC'ed.  If we have a memory leak, those URLs could stick around\n> until you close the browser.\n\nYes.  More specifically, if you have the non-private window open already, you can just look at those windows directly, and you don't need to go through hoops such as about:memory.", "creation_time": "2013-06-17T18:46:01Z", "text": "(In reply to comment #43)\n> (In reply to Guilherme Lima from comment #42)\n> > Is it a problem that when you have a private window and a\n> > 'non-private'-window, if you open about:memory in the non-private, you see\n> > the memory and pages from the private one?\n> \n> What you describe does happen, but it's not this bug.\n> \n> This bug is about the fact that after you close all private windows, URLs that\n> you had open in those windows show up in about:memory in the non-private window\n> until they're GC'ed.  If we have a memory leak, those URLs could stick around\n> until you close the browser.\n\nYes.  More specifically, if you have the non-private window open already, you can just look at those windows directly, and you don't need to go through hoops such as about:memory.", "time": "2013-06-17T18:46:01Z", "attachment_id": null, "tags": [], "is_private": false, "count": 44, "id": 7543354, "bug_id": 709326}, {"tags": [], "count": 45, "is_private": false, "id": 8952460, "bug_id": 709326, "raw_text": "Ehsan, this bug is looking for a mentor. Would you be willing?", "creation_time": "2014-06-19T15:24:34Z", "text": "Ehsan, this bug is looking for a mentor. Would you be willing?", "attachment_id": null, "time": "2014-06-19T15:24:34Z", "creator": "mhoye@mozilla.com", "author": "mhoye@mozilla.com"}, {"bug_id": 709326, "is_private": false, "count": 46, "tags": [], "id": 8952533, "text": "Sure!", "attachment_id": null, "time": "2014-06-19T15:39:37Z", "raw_text": "Sure!", "creation_time": "2014-06-19T15:39:37Z", "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"attachment_id": null, "time": "2014-12-13T02:57:26Z", "text": "I would like to work on it.\nThanks", "raw_text": "I would like to work on it.\nThanks", "creation_time": "2014-12-13T02:57:26Z", "bug_id": 709326, "id": 9690801, "is_private": false, "count": 47, "tags": [], "author": "harshil158@gmail.com", "creator": "harshil158@gmail.com"}, {"creator": "n.nethercote@gmail.com", "author": "n.nethercote@gmail.com", "text": "I just looked at this a bit. It looks like only top windows have docshells. For non-top windows I guess we can use GetTop() to check if its top window is private. But detached non-top windows (exactly the ones that this bug is about) don't have a top window, and so don't have a docshell, and so there's no easy way to determine if they are private, as far as I can tell. Unless, when the docshell dies, we record the docshell's private status in every window in the relevant window tree.", "time": "2015-01-02T06:23:55Z", "attachment_id": null, "creation_time": "2015-01-02T06:23:55Z", "raw_text": "I just looked at this a bit. It looks like only top windows have docshells. For non-top windows I guess we can use GetTop() to check if its top window is private. But detached non-top windows (exactly the ones that this bug is about) don't have a top window, and so don't have a docshell, and so there's no easy way to determine if they are private, as far as I can tell. Unless, when the docshell dies, we record the docshell's private status in every window in the relevant window tree.", "bug_id": 709326, "tags": [], "is_private": false, "count": 48, "id": 9746063}, {"text": "> It looks like only top windows have docshells\n\nAll windows have docshells while they're actually being rendered.  The docshell pointer is nulled out when the window is torn down (e.g. by being closed or by having the iframe element hosting it be removed from the DOM if it's not a toplevel window)\n\n> For non-top windows I guess we can use GetTop() to check if its top window is private\n\nI would expect GetTop() to not return anything useful after the docshell has gone away, since it goes up the docshell tree to get to the toplevel window....\n\n> But detached non-top windows (exactly the ones that this bug is about) don't have a top\n> window\n\nYep.\n\n> and so don't have a docshell\n\nWell, the causality is reversed.  ;)\n\n> Unless, when the docshell dies, we record the docshell's private status in every window\n> in the relevant window tree\n\nMore precisely, record the private status in the window before nulling out mDocShell in nsGlobalWindow::DetachFromDocShell.  In fact, we should change DetachFromDocShell to take the private browsing state as a boolean arg, since we might be in the docshell destructor by the time we get there, so using mDocShell for anything is chancy.\n\nThe other option is to have nsDocShell::SetPrivateBrowsing eagerly propagate the state to the window so it always has the right boolean and doesn't depend on mDocShell for it at all.", "time": "2015-01-06T02:36:43Z", "attachment_id": null, "creation_time": "2015-01-06T02:36:43Z", "raw_text": "> It looks like only top windows have docshells\n\nAll windows have docshells while they're actually being rendered.  The docshell pointer is nulled out when the window is torn down (e.g. by being closed or by having the iframe element hosting it be removed from the DOM if it's not a toplevel window)\n\n> For non-top windows I guess we can use GetTop() to check if its top window is private\n\nI would expect GetTop() to not return anything useful after the docshell has gone away, since it goes up the docshell tree to get to the toplevel window....\n\n> But detached non-top windows (exactly the ones that this bug is about) don't have a top\n> window\n\nYep.\n\n> and so don't have a docshell\n\nWell, the causality is reversed.  ;)\n\n> Unless, when the docshell dies, we record the docshell's private status in every window\n> in the relevant window tree\n\nMore precisely, record the private status in the window before nulling out mDocShell in nsGlobalWindow::DetachFromDocShell.  In fact, we should change DetachFromDocShell to take the private browsing state as a boolean arg, since we might be in the docshell destructor by the time we get there, so using mDocShell for anything is chancy.\n\nThe other option is to have nsDocShell::SetPrivateBrowsing eagerly propagate the state to the window so it always has the right boolean and doesn't depend on mDocShell for it at all.", "bug_id": 709326, "tags": [], "is_private": false, "count": 49, "id": 9755547, "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"creator": "n.nethercote@gmail.com", "author": "n.nethercote@gmail.com", "bug_id": 709326, "is_private": false, "count": 50, "tags": [], "id": 9755864, "text": "Created attachment 8544356\n(DRAFT)\n\n> The other option is to have nsDocShell::SetPrivateBrowsing eagerly propagate\n> the state to the window so it always has the right boolean and doesn't depend\n> on mDocShell for it at all.\n\nI tried this. It's not working very well... none of the non-top windows are\ngetting the new PB flag set, viz:\n\n> \u2502  \u251c\u2500\u250024,544,088 B (34.22%) -- top(<private-6>::https://www.youtube.com/, id=6)\n> \u2502  \u2502  \u251c\u2500\u250020,325,856 B (28.34%) -- active\n> \u2502  \u2502  \u2502  \u251c\u2500\u250017,359,328 B (24.20%) ++ window(<public-8>::https://www.youtube.com/)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u25001,208,024 B (01.68%) ++ window(<public-16>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500602,592 B (00.84%) ++ window(<public-24>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=386973124)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500564,488 B (00.79%) ++ window(<public-23>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=608379378&forcesecure=1)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500383,168 B (00.53%) ++ window(<public-18>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250096,032 B (00.13%) ++ window(<public-14>::javascript:\"\")\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250094,336 B (00.13%) ++ window(<public-15>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=931354,924622,900245,939985,949006,9406027;ord=9135457893871682?)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25004,912 B (00.01%) ++ window(<public-20>::about:blank)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25004,912 B (00.01%) ++ window(<public-22>::about:blank)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-6>::https://www.youtube.com/)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-11>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=931354,924622,900245,939985,949006,9406027;ord=9135457893871682?)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-13>::javascript:\"\")/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-17>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-19>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=608379378&forcesecure=1)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-21>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=386973124)/dom\n> \u2502  \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-9>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)/dom\n\nMaybe the code I've added to nsDocShell::SetPrivateBrowsing() isn't quite\nright? Alternatively, are we certain that nsDocShell::SetPrivateBrowsing()\nis called for all the non-top windows?", "attachment_id": 8544356, "time": "2015-01-06T04:19:17Z", "creation_time": "2015-01-06T04:19:17Z", "raw_text": "> The other option is to have nsDocShell::SetPrivateBrowsing eagerly propagate\n> the state to the window so it always has the right boolean and doesn't depend\n> on mDocShell for it at all.\n\nI tried this. It's not working very well... none of the non-top windows are\ngetting the new PB flag set, viz:\n\n> \u2502  \u251c\u2500\u250024,544,088 B (34.22%) -- top(<private-6>::https://www.youtube.com/, id=6)\n> \u2502  \u2502  \u251c\u2500\u250020,325,856 B (28.34%) -- active\n> \u2502  \u2502  \u2502  \u251c\u2500\u250017,359,328 B (24.20%) ++ window(<public-8>::https://www.youtube.com/)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u25001,208,024 B (01.68%) ++ window(<public-16>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500602,592 B (00.84%) ++ window(<public-24>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=386973124)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500564,488 B (00.79%) ++ window(<public-23>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=608379378&forcesecure=1)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500383,168 B (00.53%) ++ window(<public-18>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250096,032 B (00.13%) ++ window(<public-14>::javascript:\"\")\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250094,336 B (00.13%) ++ window(<public-15>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=931354,924622,900245,939985,949006,9406027;ord=9135457893871682?)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25004,912 B (00.01%) ++ window(<public-20>::about:blank)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25004,912 B (00.01%) ++ window(<public-22>::about:blank)\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-6>::https://www.youtube.com/)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-11>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=931354,924622,900245,939985,949006,9406027;ord=9135457893871682?)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-13>::javascript:\"\")/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-17>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-19>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=608379378&forcesecure=1)/dom\n> \u2502  \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-21>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=386973124)/dom\n> \u2502  \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<public-9>::https://ad.doubleclick.net/N4061/adi/com.ythome/_default;sz=970x250;tile=1;ssl=1;dc_yt=1;kbsg=HPAU150106;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_1;ytexp=931354,924622,900245,939985,949006,9406027;ord=1543271358475838?)/dom\n\nMaybe the code I've added to nsDocShell::SetPrivateBrowsing() isn't quite\nright? Alternatively, are we certain that nsDocShell::SetPrivateBrowsing()\nis called for all the non-top windows?"}, {"raw_text": "Don't you also need to do something on nsGlobalWindow::SetDocShell?", "creation_time": "2015-01-06T21:00:07Z", "text": "Don't you also need to do something on nsGlobalWindow::SetDocShell?", "time": "2015-01-06T21:00:07Z", "attachment_id": null, "count": 51, "is_private": false, "tags": [], "id": 9759738, "bug_id": 709326, "creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com"}, {"is_private": false, "count": 52, "tags": [], "id": 9760051, "bug_id": 709326, "raw_text": "(In reply to :Ehsan Akhgari (not reading bugmail, needinfo? me!) from comment #51)\n> Don't you also need to do something on nsGlobalWindow::SetDocShell?\n\nYes! Thank you, that helps:\n\n> \u251c\u2500\u250023,202,808 B (29.63%) -- top(<private-6>::https://www.youtube.com/, id=6)\n> \u2502  \u251c\u2500\u250019,468,616 B (24.86%) -- active\n> \u2502  \u2502  \u251c\u2500\u250017,622,024 B (22.50%) ++ window(<public-8>::https://www.youtube.com/)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500797,304 B (01.02%) ++ window(<public-25>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=668978182)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500657,800 B (00.84%) ++ window(<public-24>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=678285121&forcesecure=1)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250097,360 B (00.12%) ++ window(<public-19>::about:blank)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250097,216 B (00.12%) ++ window(<public-14>::javascript:\"\")\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250095,976 B (00.12%) ++ window(<public-21>::about:blank)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250095,176 B (00.12%) ++ window(<public-15>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=942628,940940,955005,938682,913444,916631,933226,9405612;ord=1711107010256295?)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-10>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=942628,940940,955005,938682,913444,916631,933226,9405612;ord=1711107010256295?)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-13>::javascript:\"\")/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-18>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=678285121&forcesecure=1)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-20>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=668978182)/dom\n> \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-6>::https://www.youtube.com/)/dom\n\nSo it's now 7 public and 5 private; it should be all 12 private. I guess there\nmust be more places that need modifying?", "creation_time": "2015-01-06T21:56:29Z", "text": "(In reply to :Ehsan Akhgari (not reading bugmail, needinfo? me!) from comment #51)\n> Don't you also need to do something on nsGlobalWindow::SetDocShell?\n\nYes! Thank you, that helps:\n\n> \u251c\u2500\u250023,202,808 B (29.63%) -- top(<private-6>::https://www.youtube.com/, id=6)\n> \u2502  \u251c\u2500\u250019,468,616 B (24.86%) -- active\n> \u2502  \u2502  \u251c\u2500\u250017,622,024 B (22.50%) ++ window(<public-8>::https://www.youtube.com/)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500797,304 B (01.02%) ++ window(<public-25>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=668978182)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500657,800 B (00.84%) ++ window(<public-24>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=678285121&forcesecure=1)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250097,360 B (00.12%) ++ window(<public-19>::about:blank)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250097,216 B (00.12%) ++ window(<public-14>::javascript:\"\")\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250095,976 B (00.12%) ++ window(<public-21>::about:blank)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250095,176 B (00.12%) ++ window(<public-15>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=942628,940940,955005,938682,913444,916631,933226,9405612;ord=1711107010256295?)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-10>::https://ad.doubleclick.net/N6762/adi/mkt.ythome_1x1/;sz=1x1;tile=3;ssl=1;dc_yt=1;kga=-1;kgg=-1;klg=en;kmyd=ad_creative_3;ytexp=942628,940940,955005,938682,913444,916631,933226,9405612;ord=1711107010256295?)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-13>::javascript:\"\")/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-18>::https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.youtube.com#rpctoken=678285121&forcesecure=1)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-20>::https://content.googleapis.com/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#parent=https%3A%2F%2Fwww.youtube.com&rpctoken=668978182)/dom\n> \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-6>::https://www.youtube.com/)/dom\n\nSo it's now 7 public and 5 private; it should be all 12 private. I guess there\nmust be more places that need modifying?", "attachment_id": null, "time": "2015-01-06T21:56:29Z", "creator": "n.nethercote@gmail.com", "author": "n.nethercote@gmail.com"}, {"creator": "ehsan.akhgari@gmail.com", "author": "ehsan.akhgari@gmail.com", "text": "Sorry I read the patch too quickly.  I think what nsGlobalWindow::UsePrivateBrowsing should do is to look to see if we have a docshell and read the flag off of it, otherwise use the cached value.  Can you please try that?", "attachment_id": null, "time": "2015-01-06T22:53:47Z", "raw_text": "Sorry I read the patch too quickly.  I think what nsGlobalWindow::UsePrivateBrowsing should do is to look to see if we have a docshell and read the flag off of it, otherwise use the cached value.  Can you please try that?", "creation_time": "2015-01-06T22:53:47Z", "bug_id": 709326, "tags": [], "is_private": false, "count": 53, "id": 9760380}, {"author": "n.nethercote@gmail.com", "creator": "n.nethercote@gmail.com", "id": 9760602, "is_private": false, "count": 54, "tags": [], "bug_id": 709326, "creation_time": "2015-01-06T23:54:56Z", "raw_text": "", "attachment_id": 8544873, "time": "2015-01-06T23:54:56Z", "text": "Created attachment 8544873\n(DRAFT)"}, {"bug_id": 709326, "tags": [], "count": 55, "is_private": false, "id": 9760709, "creator": "n.nethercote@gmail.com", "text": "Here's the current status:\n\n- windows with docshells are showing up as privately, correctly\n- windows without docshells are showing up as public, incorrectly\n  - these windows never have SetDocShell() called on them\n\nBut look at this:\n\n> \u251c\u2500\u250028,036,736 B (34.09%) -- top(<private-with-docshell-6>::https://www.youtube.com/watch?v=a1Y73sPHKxw, id=6)\n> \u2502  \u251c\u2500\u250023,163,096 B (28.17%) -- active\n> \u2502  \u2502  \u251c\u2500\u250014,624,272 B (17.78%) ++ window(<public-no-docshell-8>::https://www.youtube.com/watch?v=a1Y73sPHKxw)\n> \u2502  \u2502  \u251c\u2500\u2500\u25007,370,400 B (08.96%) ++ window(<public-no-docshell-19>::https://plus.googleapis.com/u/0/_/widget/render/comments?usegapi=1&first_party_property=YOUTUBE&href=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&owner_id=r1QbZ_vXF-lm8p2kJvrkww&query=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&stream_id=UCr1QbZ_vXF-lm8p2kJvrkww&substream_id=a1Y73sPHKxw&view_type=FILTERED&width=612&youtube_video_acl=PUBLIC&hl=en_US&origin=https%3A%2F%2Fwww.youtube.com&search=%3Fv%3Da1Y73sPHKxw&hash=&gsrc=1p&jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh%2Confirsttimeplusonepromo%2Conthumbsup%2Contimestampclicked%2Conshareboxopen%2Conready%2Conupgradeaccount%2Conallcommentsclicked&id=I0_1420589615777&parent=https%3A%2F%2Fwww.youtube.com&pfname=&rpctoken=44150050)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500832,136 B (01.01%) ++ window(<public-no-docshell-12>::https://www.youtube.com/watch?v=a1Y73sPHKxw)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500233,312 B (00.28%) ++ window(<public-no-docshell-14>::https://googleads.g.doubleclick.net/pagead/html/r20141209/r20141212/zrt_lookup.html)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250097,216 B (00.12%) ++ window(<public-no-docshell-10>::javascript:\"\")\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-11>::https://www.youtube.com/watch?v=a1Y73sPHKxw)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-13>::https://googleads.g.doubleclick.net/pagead/html/r20141209/r20141212/zrt_lookup.html)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-17>::https://plus.googleapis.com/u/0/_/widget/render/comments?usegapi=1&first_party_property=YOUTUBE&href=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&owner_id=r1QbZ_vXF-lm8p2kJvrkww&query=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&stream_id=UCr1QbZ_vXF-lm8p2kJvrkww&substream_id=a1Y73sPHKxw&view_type=FILTERED&width=612&youtube_video_acl=PUBLIC&hl=en_US&origin=https%3A%2F%2Fwww.youtube.com&search=%3Fv%3Da1Y73sPHKxw&hash=&gsrc=1p&jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh%2Confirsttimeplusonepromo%2Conthumbsup%2Contimestampclicked%2Conshareboxopen%2Conready%2Conupgradeaccount%2Conallcommentsclicked&id=I0_1420589615777&parent=https%3A%2F%2Fwww.youtube.com&pfname=&rpctoken=44150050)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-6>::https://www.youtube.com/watch?v=a1Y73sPHKxw)/dom\n> \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-9>::javascript:\"\")/dom\n\nEvery public window has a corresponding private window, and the private ones are tiny. So this looks like an inner vs. outer window issue. It looks like SetDocShell() can only be called on outer windows. So if the window is an inner window we need to call UsePrivateBrowsing() on its outer window.", "author": "n.nethercote@gmail.com", "attachment_id": null, "time": "2015-01-07T00:20:57Z", "raw_text": "Here's the current status:\n\n- windows with docshells are showing up as privately, correctly\n- windows without docshells are showing up as public, incorrectly\n  - these windows never have SetDocShell() called on them\n\nBut look at this:\n\n> \u251c\u2500\u250028,036,736 B (34.09%) -- top(<private-with-docshell-6>::https://www.youtube.com/watch?v=a1Y73sPHKxw, id=6)\n> \u2502  \u251c\u2500\u250023,163,096 B (28.17%) -- active\n> \u2502  \u2502  \u251c\u2500\u250014,624,272 B (17.78%) ++ window(<public-no-docshell-8>::https://www.youtube.com/watch?v=a1Y73sPHKxw)\n> \u2502  \u2502  \u251c\u2500\u2500\u25007,370,400 B (08.96%) ++ window(<public-no-docshell-19>::https://plus.googleapis.com/u/0/_/widget/render/comments?usegapi=1&first_party_property=YOUTUBE&href=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&owner_id=r1QbZ_vXF-lm8p2kJvrkww&query=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&stream_id=UCr1QbZ_vXF-lm8p2kJvrkww&substream_id=a1Y73sPHKxw&view_type=FILTERED&width=612&youtube_video_acl=PUBLIC&hl=en_US&origin=https%3A%2F%2Fwww.youtube.com&search=%3Fv%3Da1Y73sPHKxw&hash=&gsrc=1p&jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh%2Confirsttimeplusonepromo%2Conthumbsup%2Contimestampclicked%2Conshareboxopen%2Conready%2Conupgradeaccount%2Conallcommentsclicked&id=I0_1420589615777&parent=https%3A%2F%2Fwww.youtube.com&pfname=&rpctoken=44150050)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500832,136 B (01.01%) ++ window(<public-no-docshell-12>::https://www.youtube.com/watch?v=a1Y73sPHKxw)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500233,312 B (00.28%) ++ window(<public-no-docshell-14>::https://googleads.g.doubleclick.net/pagead/html/r20141209/r20141212/zrt_lookup.html)\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u250097,216 B (00.12%) ++ window(<public-no-docshell-10>::javascript:\"\")\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-11>::https://www.youtube.com/watch?v=a1Y73sPHKxw)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-13>::https://googleads.g.doubleclick.net/pagead/html/r20141209/r20141212/zrt_lookup.html)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-17>::https://plus.googleapis.com/u/0/_/widget/render/comments?usegapi=1&first_party_property=YOUTUBE&href=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&owner_id=r1QbZ_vXF-lm8p2kJvrkww&query=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Da1Y73sPHKxw&stream_id=UCr1QbZ_vXF-lm8p2kJvrkww&substream_id=a1Y73sPHKxw&view_type=FILTERED&width=612&youtube_video_acl=PUBLIC&hl=en_US&origin=https%3A%2F%2Fwww.youtube.com&search=%3Fv%3Da1Y73sPHKxw&hash=&gsrc=1p&jsh=m%3B%2F_%2Fscs%2Fabc-static%2F_%2Fjs%2Fk%3Dgapi.gapi.en.mDMl48C7FR8.O%2Fm%3D__features__%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTOveVmyqj7FQViAq5Q-ZAhF4tZ22g#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh%2Confirsttimeplusonepromo%2Conthumbsup%2Contimestampclicked%2Conshareboxopen%2Conready%2Conupgradeaccount%2Conallcommentsclicked&id=I0_1420589615777&parent=https%3A%2F%2Fwww.youtube.com&pfname=&rpctoken=44150050)/dom\n> \u2502  \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-6>::https://www.youtube.com/watch?v=a1Y73sPHKxw)/dom\n> \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25001,152 B (00.00%) ++ window(<private-with-docshell-9>::javascript:\"\")/dom\n\nEvery public window has a corresponding private window, and the private ones are tiny. So this looks like an inner vs. outer window issue. It looks like SetDocShell() can only be called on outer windows. So if the window is an inner window we need to call UsePrivateBrowsing() on its outer window.", "creation_time": "2015-01-07T00:20:57Z"}, {"author": "n.nethercote@gmail.com", "attachment_id": null, "time": "2015-01-07T00:21:42Z", "creator": "n.nethercote@gmail.com", "text": "BTW, Ehsan: SetDocShell(nullptr) isn't allowed, judging by the assertion at the top of SetDocShell().", "raw_text": "BTW, Ehsan: SetDocShell(nullptr) isn't allowed, judging by the assertion at the top of SetDocShell().", "creation_time": "2015-01-07T00:21:42Z", "bug_id": 709326, "id": 9760711, "tags": [], "is_private": false, "count": 56}, {"author": "n.nethercote@gmail.com", "creator": "n.nethercote@gmail.com", "bug_id": 709326, "id": 9760750, "count": 57, "is_private": false, "tags": [], "attachment_id": null, "time": "2015-01-07T00:35:13Z", "text": "> So if the window is an inner window we need to call UsePrivateBrowsing() on its outer window.\n\nThis fixes it! Hooray.\n\nEhsan, you asked me to change nsGlobalWindow::UsePrivateBrowsing() to look at the docshell if one is present and otherwise fall back to using the PB flag on the nsGlobalWindow itself. But I don't think this is necessary -- we should be ok so long as we update the nsGlobalWindow flag when (a) its docshell is set, and (b) its docshell's PB flag is updated. Testing so far confirms this hypothesis.\n\nSo, progress. There's still more work to do, e.g. JS compartments are still being reported, so I need to propagate the PB flag into the JS reporters.", "raw_text": "> So if the window is an inner window we need to call UsePrivateBrowsing() on its outer window.\n\nThis fixes it! Hooray.\n\nEhsan, you asked me to change nsGlobalWindow::UsePrivateBrowsing() to look at the docshell if one is present and otherwise fall back to using the PB flag on the nsGlobalWindow itself. But I don't think this is necessary -- we should be ok so long as we update the nsGlobalWindow flag when (a) its docshell is set, and (b) its docshell's PB flag is updated. Testing so far confirms this hypothesis.\n\nSo, progress. There's still more work to do, e.g. JS compartments are still being reported, so I need to propagate the PB flag into the JS reporters.", "creation_time": "2015-01-07T00:35:13Z"}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "bug_id": 709326, "id": 9761197, "tags": [], "is_private": false, "count": 58, "attachment_id": null, "time": "2015-01-07T03:28:33Z", "text": "> I tried this. It's not working very well... \n\nThis patch assumed SetPrivateBrowsing happens after mScriptGlobal has been created.  If the order is reversed, it would not work.  I think we should do what this patch did, plus propagating the state when mScriptGlobal is actually created.\n\n> It looks like SetDocShell() can only be called on outer windows.\n\nCorrect.\n\nI'm somewhat in favor of pushing this state instead of pulling, still, which we could still do; the outer window would just set it on all its inners.", "creation_time": "2015-01-07T03:28:33Z", "raw_text": "> I tried this. It's not working very well... \n\nThis patch assumed SetPrivateBrowsing happens after mScriptGlobal has been created.  If the order is reversed, it would not work.  I think we should do what this patch did, plus propagating the state when mScriptGlobal is actually created.\n\n> It looks like SetDocShell() can only be called on outer windows.\n\nCorrect.\n\nI'm somewhat in favor of pushing this state instead of pulling, still, which we could still do; the outer window would just set it on all its inners."}, {"bug_id": 709326, "id": 9785535, "tags": [], "count": 59, "is_private": false, "attachment_id": null, "time": "2015-01-13T03:35:47Z", "text": "Hmm, the simplest (in one sense) and most reliable way to fix this would be to put the PB window in its own process...", "creation_time": "2015-01-13T03:35:47Z", "raw_text": "Hmm, the simplest (in one sense) and most reliable way to fix this would be to put the PB window in its own process...", "author": "n.nethercote@gmail.com", "creator": "n.nethercote@gmail.com"}, {"bug_id": 709326, "id": 9850113, "tags": [], "is_private": false, "count": 60, "attachment_id": null, "time": "2015-01-27T22:43:02Z", "text": "(In reply to Nicholas Nethercote [:njn] from comment #59)\n> Hmm, the simplest (in one sense) and most reliable way to fix this would be\n> to put the PB window in its own process...\n\nWe can't do that for a host of reasons.", "raw_text": "(In reply to Nicholas Nethercote [:njn] from comment #59)\n> Hmm, the simplest (in one sense) and most reliable way to fix this would be\n> to put the PB window in its own process...\n\nWe can't do that for a host of reasons.", "creation_time": "2015-01-27T22:43:02Z", "author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com"}, {"time": "2016-03-21T16:13:35Z", "attachment_id": null, "author": "aishwarya.naidu95@gmail.com", "text": "Hey, i am aishwarya. I am new to the concept of filing a bug. This is the first time i will be working on this and a little guidance would be great!.", "creator": "aishwarya.naidu95@gmail.com", "raw_text": "Hey, i am aishwarya. I am new to the concept of filing a bug. This is the first time i will be working on this and a little guidance would be great!.", "creation_time": "2016-03-21T16:13:35Z", "bug_id": 709326, "id": 11263996, "is_private": false, "count": 61, "tags": []}, {"bug_id": 709326, "tags": [], "count": 62, "is_private": false, "id": 11265383, "text": "(In reply to aishwarya naidu from comment #61)\n> Hey, i am aishwarya. I am new to the concept of filing a bug. This is the\n> first time i will be working on this and a little guidance would be great!.\n\nHi there. Are you interested in working on this bug? It's a tricky one, so if you are looking to contribute to Firefox it's probably not the best place to start.\n\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Introduction has lots of good information for new contributors.", "time": "2016-03-21T22:28:54Z", "attachment_id": null, "creation_time": "2016-03-21T22:28:54Z", "raw_text": "(In reply to aishwarya naidu from comment #61)\n> Hey, i am aishwarya. I am new to the concept of filing a bug. This is the\n> first time i will be working on this and a little guidance would be great!.\n\nHi there. Are you interested in working on this bug? It's a tricky one, so if you are looking to contribute to Firefox it's probably not the best place to start.\n\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Introduction has lots of good information for new contributors.", "creator": "n.nethercote@gmail.com", "author": "n.nethercote@gmail.com"}, {"attachment_id": null, "time": "2017-08-16T11:52:37Z", "text": "thank you \nyou can download facebook from here : http://www.downloadatystore.com/2014/12/facebook.html", "creation_time": "2017-08-16T11:52:37Z", "raw_text": "thank you \nyou can download facebook from here : http://www.downloadatystore.com/2014/12/facebook.html", "bug_id": 709326, "id": 12571191, "tags": ["spam"], "is_private": false, "count": 63, "author": "ahmedelserafy2016@gmail.com", "creator": "ahmedelserafy2016@gmail.com"}, {"author": "sledru@mozilla.com", "creator": "sledru@mozilla.com", "time": "2018-10-15T08:37:12Z", "attachment_id": null, "text": "No assignee, updating the status.", "creation_time": "2018-10-15T08:37:12Z", "raw_text": "No assignee, updating the status.", "bug_id": 709326, "id": 13685307, "tags": [], "count": 64, "is_private": false}, {"creator": "sledru@mozilla.com", "author": "sledru@mozilla.com", "bug_id": 709326, "count": 65, "is_private": false, "tags": [], "id": 13686228, "text": "No assignee, updating the status.", "time": "2018-10-15T08:44:25Z", "attachment_id": null, "raw_text": "No assignee, updating the status.", "creation_time": "2018-10-15T08:44:25Z"}, {"creation_time": "2020-05-01T06:27:26Z", "raw_text": "Is this still occurring. I cannot replicate it.", "text": "Is this still occurring. I cannot replicate it.", "time": "2020-05-01T06:27:26Z", "attachment_id": null, "count": 66, "is_private": false, "tags": [], "id": 14790597, "bug_id": 709326, "creator": "samo.golez@outlook.com", "author": "samo.golez@outlook.com"}, {"bug_id": 709326, "count": 67, "is_private": false, "tags": [], "id": 14790888, "text": "I was able to produce the issue easily with Firefox that does not save webpages or other data between sessions\n\nSteps \n1 - Open Firefox and go into about:memory\n2- Run Verbose Memory report\n3-Search for website names in Memory that you plan on visiting in the private window - I used bbc.com and techspot.com and searched for bbc and techspot - you will not find it in the memory\n4-Open private browsing window - and open two tabs say for bbc.com and techspot.com and load them\n5-Close the private window\n6-Go into the about memory tab and re-run the verbose memory report\n7-Search for bbc and techspot and you will see information in the memory report as Firefox has not cleared the private browsing memory", "attachment_id": null, "time": "2020-05-01T11:58:30Z", "creation_time": "2020-05-01T11:58:30Z", "raw_text": "I was able to produce the issue easily with Firefox that does not save webpages or other data between sessions\n\nSteps \n1 - Open Firefox and go into about:memory\n2- Run Verbose Memory report\n3-Search for website names in Memory that you plan on visiting in the private window - I used bbc.com and techspot.com and searched for bbc and techspot - you will not find it in the memory\n4-Open private browsing window - and open two tabs say for bbc.com and techspot.com and load them\n5-Close the private window\n6-Go into the about memory tab and re-run the verbose memory report\n7-Search for bbc and techspot and you will see information in the memory report as Firefox has not cleared the private browsing memory", "creator": "nigelh747@gmail.com", "author": "nigelh747@gmail.com"}, {"creator": "nigelh747@gmail.com", "author": "nigelh747@gmail.com", "creation_time": "2020-05-01T12:00:51Z", "raw_text": "Tested with Firefox 75 64 bit on Windows\n\nAfter 9 years Firefox still does not clear up its memory properly after closing private browsing window(s)", "text": "Tested with Firefox 75 64 bit on Windows\n\nAfter 9 years Firefox still does not clear up its memory properly after closing private browsing window(s)", "attachment_id": null, "time": "2020-05-01T12:00:51Z", "tags": [], "is_private": false, "count": 68, "id": 14790890, "bug_id": 709326}, {"creator": "Andreas-GitHub@protonmail.com", "author": "Andreas-GitHub@protonmail.com", "creation_time": "2020-05-08T02:55:22Z", "raw_text": "And here too.   76.0 64bit Linux.  \nThis kind of data should not even be retrievable WHEN 'private' browsing.  Let alone after.   Shouldn't a private window obtain its memory through a dedicated allocator so that the regular memory report doesn't know about it even?  \n\nIt is very worrying that this problem is still here and a 100 times more worrying that not daily it is discussed which design flaw makes this problem so hard to solve.   \n\nYou have given people a false sense of security and safety for more than long enough now;  please get this right.", "text": "And here too.   76.0 64bit Linux.  \nThis kind of data should not even be retrievable WHEN 'private' browsing.  Let alone after.   Shouldn't a private window obtain its memory through a dedicated allocator so that the regular memory report doesn't know about it even?  \n\nIt is very worrying that this problem is still here and a 100 times more worrying that not daily it is discussed which design flaw makes this problem so hard to solve.   \n\nYou have given people a false sense of security and safety for more than long enough now;  please get this right.", "attachment_id": null, "time": "2020-05-08T02:55:22Z", "count": 69, "is_private": false, "tags": [], "id": 14803997, "bug_id": 709326}, {"time": "2020-05-08T13:19:31Z", "attachment_id": null, "text": "Hi, everyone - \n\nWe aren't going to be able to tackle this problem until after the Project Fission work - https://wiki.mozilla.org/Project_Fission - has landed. The architecture that underpins this problem - the \"design flaw makes this problem so hard to solve\" that Andreas mentions - is going to improve dramatically as a result, but for the moment it's changing too much for work on this bug to be viable.\n\nOnce that work is done and Fission lands for good we aren't _quite_ going to get this bugfix for \"free\" - or whatever the right word for \"as a byproduct of a bunch of other hard work\" is - but we'll be in a position where it's structurally much, much simpler to address. \n\nThank you for bearing with us while we get this shipped.", "raw_text": "Hi, everyone - \n\nWe aren't going to be able to tackle this problem until after the Project Fission work - https://wiki.mozilla.org/Project_Fission - has landed. The architecture that underpins this problem - the \"design flaw makes this problem so hard to solve\" that Andreas mentions - is going to improve dramatically as a result, but for the moment it's changing too much for work on this bug to be viable.\n\nOnce that work is done and Fission lands for good we aren't _quite_ going to get this bugfix for \"free\" - or whatever the right word for \"as a byproduct of a bunch of other hard work\" is - but we'll be in a position where it's structurally much, much simpler to address. \n\nThank you for bearing with us while we get this shipped.", "creation_time": "2020-05-08T13:19:31Z", "bug_id": 709326, "id": 14804610, "tags": [], "is_private": false, "count": 70, "author": "mhoye@mozilla.com", "creator": "mhoye@mozilla.com"}, {"bug_id": 709326, "id": 14804926, "count": 71, "is_private": false, "tags": [], "attachment_id": null, "time": "2020-05-08T15:59:54Z", "text": "Under normal circumstances, the private browsing windows will go away in less than a minute, and then stop showing up in about:memory.", "raw_text": "Under normal circumstances, the private browsing windows will go away in less than a minute, and then stop showing up in about:memory.", "creation_time": "2020-05-08T15:59:54Z", "author": "continuation@gmail.com", "creator": "continuation@gmail.com"}, {"creation_time": "2020-05-09T02:14:46Z", "raw_text": "(In reply to Mike Hoye [:mhoye] from comment #70)\n> Hi, everyone - \n> \n> We aren't going to be able to tackle this problem until after the Project Fission work - https://wiki.mozilla.org/Project_Fission - has landed. The architecture that underpins this problem - the \"design flaw makes this problem so hard to solve\" that Andreas mentions - is going to improve dramatically as a result, but for the moment it's changing too much for work on this bug to be viable.\n> \n> Once that work is done and Fission lands for good we aren't _quite_ going to get this bugfix for \"free\" - or whatever the right word for \"as a byproduct of a bunch of other hard work\" is - but we'll be in a position where it's structurally much, much simpler to address. \n> \n> Thank you for bearing with us while we get this shipped.\n\nI note the goals of Project Fission, and hope that the new work will not as a byproduct break Firefox containers functionality", "text": "(In reply to Mike Hoye [:mhoye] from comment #70)\n> Hi, everyone - \n> \n> We aren't going to be able to tackle this problem until after the Project Fission work - https://wiki.mozilla.org/Project_Fission - has landed. The architecture that underpins this problem - the \"design flaw makes this problem so hard to solve\" that Andreas mentions - is going to improve dramatically as a result, but for the moment it's changing too much for work on this bug to be viable.\n> \n> Once that work is done and Fission lands for good we aren't _quite_ going to get this bugfix for \"free\" - or whatever the right word for \"as a byproduct of a bunch of other hard work\" is - but we'll be in a position where it's structurally much, much simpler to address. \n> \n> Thank you for bearing with us while we get this shipped.\n\nI note the goals of Project Fission, and hope that the new work will not as a byproduct break Firefox containers functionality", "time": "2020-05-09T02:14:46Z", "attachment_id": null, "tags": ["offtopic"], "is_private": false, "count": 72, "id": 14805898, "bug_id": 709326, "creator": "nigelh747@gmail.com", "author": "nigelh747@gmail.com"}, {"creator": "Andreas-GitHub@protonmail.com", "author": "Andreas-GitHub@protonmail.com", "bug_id": 709326, "is_private": false, "count": 73, "tags": ["metoo"], "id": 14819220, "text": "Andrew, that was exactly the kind of thing to say to let all alarm bells go off:  I\u2019d call this '(partly) denying that there is a problem'.  It belongs to the problem category that is a 100 times more worrying.\n\nThank you Mike Hoye,  it's reassuring to hear that the problem is quite localized and we're moving in the right direction.", "time": "2020-05-14T12:20:04Z", "attachment_id": null, "creation_time": "2020-05-14T12:20:04Z", "raw_text": "Andrew, that was exactly the kind of thing to say to let all alarm bells go off:  I\u2019d call this '(partly) denying that there is a problem'.  It belongs to the problem category that is a 100 times more worrying.\n\nThank you Mike Hoye,  it's reassuring to hear that the problem is quite localized and we're moving in the right direction."}, {"creator": "jack@pryne.com", "author": "jack@pryne.com", "tags": [], "count": 74, "is_private": false, "id": 14829734, "bug_id": 709326, "creation_time": "2020-05-19T00:15:08Z", "raw_text": "I'm kinda irked about this. I keep a large number of tabs open, and rely upon them being there when I re-open the browser.\nEarlier, when the browser was not running, I opened a private window, surfed a few sites, then closed it.\nWhen I opened the regular browser later, I expected to see my regular tabs, but no, there's the tabs from the private session I ran earlier. To make matters worse, I cannot re-open my regular tabs from the \"History/Recently Closed Windows\" button.", "text": "I'm kinda irked about this. I keep a large number of tabs open, and rely upon them being there when I re-open the browser.\nEarlier, when the browser was not running, I opened a private window, surfed a few sites, then closed it.\nWhen I opened the regular browser later, I expected to see my regular tabs, but no, there's the tabs from the private session I ran earlier. To make matters worse, I cannot re-open my regular tabs from the \"History/Recently Closed Windows\" button.", "attachment_id": null, "time": "2020-05-19T00:15:08Z"}]}}}