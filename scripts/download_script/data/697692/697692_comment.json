{"comments": {}, "bugs": {"697692": {"comments": [{"attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 6.0; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928134238\n\nSteps to reproduce:\n\nDeveloped a site using SVG\n\n\nActual results:\n\nSVG rendering looks too soft on Firefox. Much softer than other browsers and very much softer than Inkscape\n\n\nExpected results:\n\nShould look crisp and sharp with suitable anti-aliasing rather than blurred.", "tags": [], "bug_id": 697692, "text": "User Agent: Mozilla/5.0 (Windows NT 6.0; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928134238\n\nSteps to reproduce:\n\nDeveloped a site using SVG\n\n\nActual results:\n\nSVG rendering looks too soft on Firefox. Much softer than other browsers and very much softer than Inkscape\n\n\nExpected results:\n\nShould look crisp and sharp with suitable anti-aliasing rather than blurred.", "is_private": false, "count": 0, "id": 5808585, "creator": "david@netriver.co.uk", "creation_time": "2011-10-27T12:26:31Z", "time": "2011-10-27T12:26:31Z", "author": "david@netriver.co.uk"}, {"text": "Please provide an example using the Add an attachment link above. Or alternatively a link to the site.", "bug_id": 697692, "tags": [], "raw_text": "Please provide an example using the Add an attachment link above. Or alternatively a link to the site.", "attachment_id": null, "author": "longsonr@gmail.com", "creator": "longsonr@gmail.com", "creation_time": "2011-10-27T12:41:56Z", "time": "2011-10-27T12:41:56Z", "is_private": false, "count": 1, "id": 5808597}, {"text": "Example site http://www.refresh2012.org/\nI'll add screen shots comparing rendering.", "bug_id": 697692, "tags": [], "raw_text": "Example site http://www.refresh2012.org/\nI'll add screen shots comparing rendering.", "attachment_id": null, "author": "david@netriver.co.uk", "creation_time": "2011-10-27T16:12:55Z", "time": "2011-10-27T16:12:55Z", "creator": "david@netriver.co.uk", "id": 5809039, "count": 2, "is_private": false}, {"text": "Created attachment 569998\nSVG image inlined into http://www.refresh2012.org/", "bug_id": 697692, "tags": [], "attachment_id": 569998, "raw_text": "", "time": "2011-10-27T16:14:21Z", "creation_time": "2011-10-27T16:14:21Z", "creator": "david@netriver.co.uk", "author": "david@netriver.co.uk", "id": 5809045, "count": 3, "is_private": false}, {"is_private": false, "count": 4, "id": 5809055, "creator": "david@netriver.co.uk", "creation_time": "2011-10-27T16:16:15Z", "time": "2011-10-27T16:16:15Z", "author": "david@netriver.co.uk", "attachment_id": 570000, "raw_text": "This is the SVG banner image for http://www.refresh2012.org/. This looks very soft, softer than any other browser I've checked.", "text": "Created attachment 570000\nSVG image as rendered in Firefox\n\nThis is the SVG banner image for http://www.refresh2012.org/. This looks very soft, softer than any other browser I've checked.", "bug_id": 697692, "tags": []}, {"raw_text": "This is the SVG image as rendered in Inkscape (used to create the SVG banner). Note that this is only a screenshot and not the ultimate quality it can produce. This is how I would dearly wish it rendered in Firefox.", "is_private": false, "attachment_id": 570002, "id": 5809064, "count": 5, "author": "david@netriver.co.uk", "tags": [], "text": "Created attachment 570002\nSVG image as rendered in Inkscape\n\nThis is the SVG image as rendered in Inkscape (used to create the SVG banner). Note that this is only a screenshot and not the ultimate quality it can produce. This is how I would dearly wish it rendered in Firefox.", "bug_id": 697692, "creator": "david@netriver.co.uk", "creation_time": "2011-10-27T16:19:18Z", "time": "2011-10-27T16:19:18Z"}, {"bug_id": 697692, "text": "You seem to have a filter that is deliberately designed to blur the letters with id=\"filter3406\" on the <g> that surrounds the letter paths. If you remove the filter you get the sharpness you want. I'm not sure I see a firefox bug here.", "tags": [], "attachment_id": null, "raw_text": "You seem to have a filter that is deliberately designed to blur the letters with id=\"filter3406\" on the <g> that surrounds the letter paths. If you remove the filter you get the sharpness you want. I'm not sure I see a firefox bug here.", "creator": "longsonr@gmail.com", "creation_time": "2011-10-27T16:26:45Z", "time": "2011-10-27T16:26:45Z", "author": "longsonr@gmail.com", "is_private": false, "count": 6, "id": 5809086}, {"id": 5809150, "count": 7, "attachment_id": null, "is_private": false, "raw_text": "(In reply to Robert Longson from comment #6)\n> You seem to have a filter that is deliberately designed to blur the letters\n> with id=\"filter3406\" on the <g> that surrounds the letter paths. If you\n> remove the filter you get the sharpness you want. I'm not sure I see a\n> firefox bug here.\n\nThat's very interesting. hacking the SVG in firebug reveals that taking the filter off sharpens up the letters. But, there is a bug - it's not the letters that are blurred.\n\nThe filter consists of:\n1. a blur which is applied to the alpha of the source graphic (the letters)\n2. colour matrix to make the results of (1) black\n3. An offset\n4. A merge, taking the results of (3) and rendering them beneath the source graphic (letters).\n\nIt's a drop shadow. What is making the letters soft is step (4) which shouldn't be the case. That's the bug.\n\nThe spatial sampling frequency of the filter should be at least 2x pixel frequency but it seems that it is less than this, resulting in a soft result.", "creation_time": "2011-10-27T16:42:50Z", "time": "2011-10-27T16:42:50Z", "creator": "david@netriver.co.uk", "tags": [], "text": "(In reply to Robert Longson from comment #6)\n> You seem to have a filter that is deliberately designed to blur the letters\n> with id=\"filter3406\" on the <g> that surrounds the letter paths. If you\n> remove the filter you get the sharpness you want. I'm not sure I see a\n> firefox bug here.\n\nThat's very interesting. hacking the SVG in firebug reveals that taking the filter off sharpens up the letters. But, there is a bug - it's not the letters that are blurred.\n\nThe filter consists of:\n1. a blur which is applied to the alpha of the source graphic (the letters)\n2. colour matrix to make the results of (1) black\n3. An offset\n4. A merge, taking the results of (3) and rendering them beneath the source graphic (letters).\n\nIt's a drop shadow. What is making the letters soft is step (4) which shouldn't be the case. That's the bug.\n\nThe spatial sampling frequency of the filter should be at least 2x pixel frequency but it seems that it is less than this, resulting in a soft result.", "bug_id": 697692, "author": "david@netriver.co.uk"}, {"attachment_id": null, "raw_text": "The sampling frequency is specified by setting filterRes on the filter. The SVG specification simply says: \"If not provided, the user agent will use reasonable values to produce a high-quality result on the output device\" I'm not sure we're going to change our implementation to quadruple the memory we use by default.\n\nSetting filterRes=\"1600 222\" to the filter element should do what you want.", "tags": [], "text": "The sampling frequency is specified by setting filterRes on the filter. The SVG specification simply says: \"If not provided, the user agent will use reasonable values to produce a high-quality result on the output device\" I'm not sure we're going to change our implementation to quadruple the memory we use by default.\n\nSetting filterRes=\"1600 222\" to the filter element should do what you want.", "bug_id": 697692, "id": 5809261, "count": 8, "is_private": false, "creation_time": "2011-10-27T17:13:17Z", "time": "2011-10-27T17:13:17Z", "creator": "longsonr@gmail.com", "author": "longsonr@gmail.com"}, {"raw_text": "Thanks for looking at this Robert.\n\nThe problem with setting filterRes is that it goes against the whole usefulness of SVGs, which is that you can scale them without loss of quality. You effectively turn an element of the graphic into a bitmap of fixed resolution.\n\nAlso, it's a work-around not supported by the graphics packages. I'm using XSLT to process SVGs to make them inline but it's going to be very complex to work out the correct resolution of an item to insert the parameters.\n\nLooking at the problem differently, the in this case merge is just doing a composite just like rendering any other objects on top of each other. Can it be treated in this way?\n\nEven if the memory used for filters has to be increased it would solve the problem that Firefox SVG rendering isn't good quality atm if you apply a drop-shadow or a glow effect.", "attachment_id": null, "tags": [], "text": "Thanks for looking at this Robert.\n\nThe problem with setting filterRes is that it goes against the whole usefulness of SVGs, which is that you can scale them without loss of quality. You effectively turn an element of the graphic into a bitmap of fixed resolution.\n\nAlso, it's a work-around not supported by the graphics packages. I'm using XSLT to process SVGs to make them inline but it's going to be very complex to work out the correct resolution of an item to insert the parameters.\n\nLooking at the problem differently, the in this case merge is just doing a composite just like rendering any other objects on top of each other. Can it be treated in this way?\n\nEven if the memory used for filters has to be increased it would solve the problem that Firefox SVG rendering isn't good quality atm if you apply a drop-shadow or a glow effect.", "bug_id": 697692, "count": 9, "id": 5811172, "is_private": false, "author": "david@netriver.co.uk", "creation_time": "2011-10-28T13:16:44Z", "time": "2011-10-28T13:16:44Z", "creator": "david@netriver.co.uk"}, {"time": "2011-10-28T14:06:02Z", "creation_time": "2011-10-28T14:06:02Z", "creator": "longsonr@gmail.com", "text": "(In reply to David White from comment #9)\n> Looking at the problem differently, the in this case merge is just doing a\n> composite just like rendering any other objects on top of each other. Can it\n> be treated in this way?\n\nThat is how it's done. We render both the inputs to the same output surface.", "bug_id": 697692, "tags": [], "author": "longsonr@gmail.com", "count": 10, "id": 5811256, "is_private": false, "attachment_id": null, "raw_text": "(In reply to David White from comment #9)\n> Looking at the problem differently, the in this case merge is just doing a\n> composite just like rendering any other objects on top of each other. Can it\n> be treated in this way?\n\nThat is how it's done. We render both the inputs to the same output surface."}, {"tags": [], "text": "(In reply to Robert Longson from comment #10)\n> (In reply to David White from comment #9)\n> > Looking at the problem differently, the in this case merge is just doing a\n> > composite just like rendering any other objects on top of each other. Can it\n> > be treated in this way?\n> \n> That is how it's done. We render both the inputs to the same output surface.\n\nI'm perplexed. If the lettering and the drop-shadow are rendered and composited the same as any other shapes in the stack, why does the lettering go soft?", "bug_id": 697692, "attachment_id": null, "raw_text": "(In reply to Robert Longson from comment #10)\n> (In reply to David White from comment #9)\n> > Looking at the problem differently, the in this case merge is just doing a\n> > composite just like rendering any other objects on top of each other. Can it\n> > be treated in this way?\n> \n> That is how it's done. We render both the inputs to the same output surface.\n\nI'm perplexed. If the lettering and the drop-shadow are rendered and composited the same as any other shapes in the stack, why does the lettering go soft?", "creator": "david@netriver.co.uk", "time": "2011-10-28T14:12:57Z", "creation_time": "2011-10-28T14:12:57Z", "author": "david@netriver.co.uk", "is_private": false, "count": 11, "id": 5811274}, {"tags": [], "bug_id": 697692, "text": "Perhaps it's due to the scaling transforms you have on the <g> elements.", "raw_text": "Perhaps it's due to the scaling transforms you have on the <g> elements.", "attachment_id": null, "author": "longsonr@gmail.com", "time": "2011-10-28T14:19:34Z", "creation_time": "2011-10-28T14:19:34Z", "creator": "longsonr@gmail.com", "count": 12, "id": 5811288, "is_private": false}, {"creator": "david@netriver.co.uk", "time": "2011-10-28T14:39:35Z", "creation_time": "2011-10-28T14:39:35Z", "author": "david@netriver.co.uk", "is_private": false, "id": 5811328, "count": 13, "text": "(In reply to Robert Longson from comment #12)\n> Perhaps it's due to the scaling transforms you have on the <g> elements.\n\nJust tried the following in Firebug to see the effect of transform vs. filter independently.\n1) remove transform on group.\n2) reload page\n3) remove the drop-shadown filter on group\n4) reload page\n\nThe result was that removing the transform did nothing to alter the softness of the text. Removing the filter made the text sharp.", "bug_id": 697692, "tags": [], "attachment_id": null, "raw_text": "(In reply to Robert Longson from comment #12)\n> Perhaps it's due to the scaling transforms you have on the <g> elements.\n\nJust tried the following in Firebug to see the effect of transform vs. filter independently.\n1) remove transform on group.\n2) reload page\n3) remove the drop-shadown filter on group\n4) reload page\n\nThe result was that removing the transform did nothing to alter the softness of the text. Removing the filter made the text sharp."}, {"raw_text": "There are 2 <g> elements. Did you remove both transforms? I did and the drawing disappeared.", "attachment_id": null, "text": "There are 2 <g> elements. Did you remove both transforms? I did and the drawing disappeared.", "bug_id": 697692, "tags": [], "is_private": false, "count": 14, "id": 5811335, "author": "longsonr@gmail.com", "creator": "longsonr@gmail.com", "creation_time": "2011-10-28T14:43:05Z", "time": "2011-10-28T14:43:05Z"}, {"creator": "david@netriver.co.uk", "creation_time": "2011-10-28T15:13:40Z", "time": "2011-10-28T15:13:40Z", "author": "david@netriver.co.uk", "is_private": false, "count": 15, "id": 5811408, "text": "(In reply to Robert Longson from comment #14)\n> There are 2 <g> elements. Did you remove both transforms? I did and the\n> drawing disappeared.\n\nThis is the slightly unfortunate way Inkscape does page resizing - it does a transform on the root group to move the items into the new page area. If you take the root transform off everything jumps off the page.\n\nHowever, can take out any scaling by setting the scaling parameters to identity (1). Note that the Y scaling parameter is still negative, I think this is because Inkscape uses cartesian coordinates (origin bottom left). With a bit of jigging around I managed to work out what the translation values should be to the image back in the right place Anyway, I tried following transforms on the root group an the text group using firebug:\n\nmatrix(1, 0, 0, -1, -45, 800) on root group\nmatrix(1, 0, 0, -1, 37, 776) on text group\n\nSo, all scaling is set to identity and all translations to a whole number of pixels.\n\nThe text still looked soft.\n\nI then removed the drop-shadow filter on the text and it became sharp.\n\nI think it's the filter that is causing the softness.", "bug_id": 697692, "tags": [], "attachment_id": null, "raw_text": "(In reply to Robert Longson from comment #14)\n> There are 2 <g> elements. Did you remove both transforms? I did and the\n> drawing disappeared.\n\nThis is the slightly unfortunate way Inkscape does page resizing - it does a transform on the root group to move the items into the new page area. If you take the root transform off everything jumps off the page.\n\nHowever, can take out any scaling by setting the scaling parameters to identity (1). Note that the Y scaling parameter is still negative, I think this is because Inkscape uses cartesian coordinates (origin bottom left). With a bit of jigging around I managed to work out what the translation values should be to the image back in the right place Anyway, I tried following transforms on the root group an the text group using firebug:\n\nmatrix(1, 0, 0, -1, -45, 800) on root group\nmatrix(1, 0, 0, -1, 37, 776) on text group\n\nSo, all scaling is set to identity and all translations to a whole number of pixels.\n\nThe text still looked soft.\n\nI then removed the drop-shadow filter on the text and it became sharp.\n\nI think it's the filter that is causing the softness."}, {"attachment_id": null, "raw_text": "(In reply to David White from comment #15)\n\nFilters, patterns and masks work by drawing the graphic into a raster image, manipulating the image bytes and then drawing the resultant bitmap. Most other things e.g. gradients just get drawn directly to the screen. If the raster gets scaled somehow a bicubic interpolation is used to convert the image from one scale to another. We try to create the surface at the size it needs to be drawn to avoid that.", "tags": [], "text": "(In reply to David White from comment #15)\n\nFilters, patterns and masks work by drawing the graphic into a raster image, manipulating the image bytes and then drawing the resultant bitmap. Most other things e.g. gradients just get drawn directly to the screen. If the raster gets scaled somehow a bicubic interpolation is used to convert the image from one scale to another. We try to create the surface at the size it needs to be drawn to avoid that.", "bug_id": 697692, "count": 16, "id": 5811440, "is_private": false, "creation_time": "2011-10-28T15:26:05Z", "time": "2011-10-28T15:26:05Z", "creator": "longsonr@gmail.com", "author": "longsonr@gmail.com"}, {"tags": [], "text": "Does the interpolation kick in for whole pixel translations or sub-pixel translations as well? How about for scaling by -1? Can the merge be done by writing directly to screen if it is the last filter in a chain?\n\nI might have a look at creating the SVG without any transforms at all to test this but it'll have to be next week now.\n\nCould you consider treating this as a bug anyway? At the moment Firefox is worse than any other browser I've seen (Chrome, IE, Safari). I'd hate to work-around problems in Firefox! Screen shot to follow.", "bug_id": 697692, "attachment_id": null, "raw_text": "Does the interpolation kick in for whole pixel translations or sub-pixel translations as well? How about for scaling by -1? Can the merge be done by writing directly to screen if it is the last filter in a chain?\n\nI might have a look at creating the SVG without any transforms at all to test this but it'll have to be next week now.\n\nCould you consider treating this as a bug anyway? At the moment Firefox is worse than any other browser I've seen (Chrome, IE, Safari). I'd hate to work-around problems in Firefox! Screen shot to follow.", "creator": "david@netriver.co.uk", "time": "2011-10-28T16:19:13Z", "creation_time": "2011-10-28T16:19:13Z", "author": "david@netriver.co.uk", "is_private": false, "id": 5811532, "count": 17}, {"author": "david@netriver.co.uk", "creator": "david@netriver.co.uk", "creation_time": "2011-10-28T16:21:13Z", "time": "2011-10-28T16:21:13Z", "is_private": false, "count": 18, "id": 5811539, "text": "Created attachment 570280\nSVG as rendered on Chrome.\n\nThis is how Chrome manages to render the SVG banner on http://www.refresh2012.org/. The text is nice and sharp.", "bug_id": 697692, "tags": [], "raw_text": "This is how Chrome manages to render the SVG banner on http://www.refresh2012.org/. The text is nice and sharp.", "attachment_id": 570280}, {"text": "(In reply to David White from comment #17)\n\n> Could you consider treating this as a bug anyway? At the moment Firefox is\n> worse than any other browser I've seen (Chrome, IE, Safari). I'd hate to\n> work-around problems in Firefox! Screen shot to follow.\n\nIt's not closed as wontfix so if anyone, including you wants to work on improving things then they are free to do so. Patches are always welcome.", "bug_id": 697692, "tags": [], "raw_text": "(In reply to David White from comment #17)\n\n> Could you consider treating this as a bug anyway? At the moment Firefox is\n> worse than any other browser I've seen (Chrome, IE, Safari). I'd hate to\n> work-around problems in Firefox! Screen shot to follow.\n\nIt's not closed as wontfix so if anyone, including you wants to work on improving things then they are free to do so. Patches are always welcome.", "attachment_id": null, "author": "longsonr@gmail.com", "creator": "longsonr@gmail.com", "creation_time": "2011-10-28T16:31:22Z", "time": "2011-10-28T16:31:22Z", "is_private": false, "id": 5811566, "count": 19}, {"tags": [], "bug_id": 697692, "text": "(In reply to David White from comment #3)\n> Created attachment 569998 [details]\n> SVG image inlined into http://www.refresh2012.org/\n\nFWIW, in this testcase the filter is scaled by 1.2276223.", "attachment_id": null, "raw_text": "(In reply to David White from comment #3)\n> Created attachment 569998 [details]\n> SVG image inlined into http://www.refresh2012.org/\n\nFWIW, in this testcase the filter is scaled by 1.2276223.", "time": "2011-10-28T20:49:39Z", "creation_time": "2011-10-28T20:49:39Z", "creator": "longsonr@gmail.com", "author": "longsonr@gmail.com", "count": 20, "id": 5812314, "is_private": false}, {"id": 5812337, "count": 21, "is_private": false, "author": "longsonr@gmail.com", "time": "2011-10-28T20:57:31Z", "creation_time": "2011-10-28T20:57:31Z", "creator": "longsonr@gmail.com", "raw_text": "And the filter itself does not have an integer size. Its width is 977.49609375000000 for instance. We have to create integer sized surfaces to write the filter data to so that also means there will be some scaling.", "attachment_id": null, "tags": [], "text": "And the filter itself does not have an integer size. Its width is 977.49609375000000 for instance. We have to create integer sized surfaces to write the filter data to so that also means there will be some scaling.", "bug_id": 697692}, {"raw_text": "Actuall comment 12 is the main issue here, not the transforms but the fact that the filter is not quite integer sized. The filter width is \"1.5\" but that's in objectBoundingBox units so that's dependent on the size of the object being filtered.", "attachment_id": null, "text": "Actuall comment 12 is the main issue here, not the transforms but the fact that the filter is not quite integer sized. The filter width is \"1.5\" but that's in objectBoundingBox units so that's dependent on the size of the object being filtered.", "bug_id": 697692, "tags": [], "id": 5812361, "count": 22, "is_private": false, "author": "longsonr@gmail.com", "creation_time": "2011-10-28T21:07:03Z", "time": "2011-10-28T21:07:03Z", "creator": "longsonr@gmail.com"}, {"creation_time": "2011-10-30T22:04:37Z", "time": "2011-10-30T22:04:37Z", "creator": "david@netriver.co.uk", "author": "david@netriver.co.uk", "count": 23, "id": 5814230, "is_private": false, "tags": [], "bug_id": 697692, "text": "Hi Robert. Thanks for spending time on this.\n\nI've a question about the way around the scaling is done. Why is the filter being scaled or translated by floating point amounts? I might have missed something about the filter width but anyway my thinking is like this (I hope this makes sense!):\n\nThere are two ways of implementing filtering and transforms. The first is to render the object to be filtered, filter the result and then apply scaling and translations to the filtered output. This is the logical sequence but it makes the interpolation kick in.\n\nThe second is to calculate the output area for the filtered object by applying all transforms to the object's coordinates. This gives a buffer size and a \"buffer translation\" value. And then modify all coordinates (including the filter parameters) by all transforms including the buffer translation. With these transformed values you can then render the object and filter it using intermediate buffers but these buffers will be pixel-aligned with the screen. What I mean is I think you can transform the parameters so that you don't have to interpolate intermediate buffers.\n\nWhat do you think?", "attachment_id": null, "raw_text": "Hi Robert. Thanks for spending time on this.\n\nI've a question about the way around the scaling is done. Why is the filter being scaled or translated by floating point amounts? I might have missed something about the filter width but anyway my thinking is like this (I hope this makes sense!):\n\nThere are two ways of implementing filtering and transforms. The first is to render the object to be filtered, filter the result and then apply scaling and translations to the filtered output. This is the logical sequence but it makes the interpolation kick in.\n\nThe second is to calculate the output area for the filtered object by applying all transforms to the object's coordinates. This gives a buffer size and a \"buffer translation\" value. And then modify all coordinates (including the filter parameters) by all transforms including the buffer translation. With these transformed values you can then render the object and filter it using intermediate buffers but these buffers will be pixel-aligned with the screen. What I mean is I think you can transform the parameters so that you don't have to interpolate intermediate buffers.\n\nWhat do you think?"}, {"tags": [], "bug_id": 697692, "text": "Firefox implements the second method. The issue is that the filter surface we create internally must be an integer size but the drawing is not an integer size. We then scale the filter to make it a very slightly bigger - a fraction of a pixel bigger so it fits the drawing area.", "attachment_id": null, "raw_text": "Firefox implements the second method. The issue is that the filter surface we create internally must be an integer size but the drawing is not an integer size. We then scale the filter to make it a very slightly bigger - a fraction of a pixel bigger so it fits the drawing area.", "time": "2011-10-30T22:37:19Z", "creation_time": "2011-10-30T22:37:19Z", "creator": "longsonr@gmail.com", "author": "longsonr@gmail.com", "count": 24, "id": 5814263, "is_private": false}, {"raw_text": "Is this an implicit transformation step that also needs to be applied to the coordinates of filtered objects? I guess that the fraction-of-a-pixel scaling can be applied to the object-to-be-filtered's coordinates rather than post-filter.\n\nTo be honest you could probably ignore this scaling effect and just not bother to do the scaling. At a fraction of a pixel size difference, the scaling parameter is probably close enough to unity to just ignore it. Or maybe that would have unforeseen consequences.", "attachment_id": null, "bug_id": 697692, "text": "Is this an implicit transformation step that also needs to be applied to the coordinates of filtered objects? I guess that the fraction-of-a-pixel scaling can be applied to the object-to-be-filtered's coordinates rather than post-filter.\n\nTo be honest you could probably ignore this scaling effect and just not bother to do the scaling. At a fraction of a pixel size difference, the scaling parameter is probably close enough to unity to just ignore it. Or maybe that would have unforeseen consequences.", "tags": [], "is_private": false, "count": 25, "id": 5814727, "author": "david@netriver.co.uk", "creator": "david@netriver.co.uk", "creation_time": "2011-10-31T09:10:50Z", "time": "2011-10-31T09:10:50Z"}, {"text": "It might be significant if the filter area was say 9.5 pixels wide and you put it in a pattern so it was tiled.", "bug_id": 697692, "tags": [], "raw_text": "It might be significant if the filter area was say 9.5 pixels wide and you put it in a pattern so it was tiled.", "attachment_id": null, "author": "longsonr@gmail.com", "time": "2011-10-31T09:56:55Z", "creation_time": "2011-10-31T09:56:55Z", "creator": "longsonr@gmail.com", "id": 5814746, "count": 26, "is_private": false}]}}}