{"bugs": {"707689": {"comments": [{"time": "2011-12-05T15:59:53Z", "bug_id": 707689, "tags": [], "text": "With the objshrink changes, getting the private of a JSObject involves a pointer-chase to the shape to get the index of the private slot.  If we stored the nsISupports pointer in a reserved slot instead, and managed to guarantee that it's a fixed slot, we could get it much faster.", "author": "bzbarsky@mit.edu", "creation_time": "2011-12-05T15:59:53Z", "count": 0, "creator": "bzbarsky@mit.edu", "is_private": false, "id": 5892815, "raw_text": "With the objshrink changes, getting the private of a JSObject involves a pointer-chase to the shape to get the index of the private slot.  If we stored the nsISupports pointer in a reserved slot instead, and managed to guarantee that it's a fixed slot, we could get it much faster.", "attachment_id": null}, {"text": "What about changes GC behavior? Reserved slots are visible to the GC, private slots are not, right?", "tags": [], "time": "2011-12-05T19:13:01Z", "creation_time": "2011-12-05T19:13:01Z", "author": "bholley@mozilla.com", "is_private": false, "creator": "bholley@mozilla.com", "id": 5893439, "raw_text": "What about changes GC behavior? Reserved slots are visible to the GC, private slots are not, right?", "attachment_id": null, "bug_id": 707689, "count": 1}, {"count": 2, "bug_id": 707689, "creator": "bhackett1024@gmail.com", "is_private": false, "tags": [], "time": "2011-12-05T19:18:02Z", "text": "The reserved slot will be seen by the GC, but if it holds a private JS value (PrivateValue or PRIVATE_TO_JSVAL) then the pointer will not actually be traversed (the slot will look like it holds a double).", "author": "bhackett1024@gmail.com", "creation_time": "2011-12-05T19:18:02Z", "raw_text": "The reserved slot will be seen by the GC, but if it holds a private JS value (PrivateValue or PRIVATE_TO_JSVAL) then the pointer will not actually be traversed (the slot will look like it holds a double).", "attachment_id": null, "id": 5893448}, {"raw_text": "Ok, that seems fine then. Is there anything else we need private slots for, or can we kill them entirely?", "attachment_id": null, "id": 5893454, "count": 3, "is_private": false, "creator": "bholley@mozilla.com", "text": "Ok, that seems fine then. Is there anything else we need private slots for, or can we kill them entirely?", "bug_id": 707689, "time": "2011-12-05T19:20:44Z", "tags": [], "creation_time": "2011-12-05T19:20:44Z", "author": "bholley@mozilla.com"}, {"raw_text": "(In reply to Bobby Holley (:bholley) from comment #3)\n> Ok, that seems fine then. Is there anything else we need private slots for,\n> or can we kill them entirely?\n\nThe object's private is still needed when the pointer being stored may be unaligned (the low bit of the pointer stored in private JS values must be clear, for x64), but otherwise it should work to use reserved slots instead.", "attachment_id": null, "id": 5893467, "count": 4, "is_private": false, "creator": "bhackett1024@gmail.com", "text": "(In reply to Bobby Holley (:bholley) from comment #3)\n> Ok, that seems fine then. Is there anything else we need private slots for,\n> or can we kill them entirely?\n\nThe object's private is still needed when the pointer being stored may be unaligned (the low bit of the pointer stored in private JS values must be clear, for x64), but otherwise it should work to use reserved slots instead.", "tags": [], "time": "2011-12-05T19:25:39Z", "bug_id": 707689, "creation_time": "2011-12-05T19:25:39Z", "author": "bhackett1024@gmail.com"}, {"attachment_id": null, "raw_text": "An open question is whether to do this for just new bindings or for old xpconnect code too...", "id": 5893732, "creator": "bzbarsky@mit.edu", "is_private": false, "count": 5, "author": "bzbarsky@mit.edu", "creation_time": "2011-12-05T21:55:57Z", "bug_id": 707689, "tags": [], "time": "2011-12-05T21:55:57Z", "text": "An open question is whether to do this for just new bindings or for old xpconnect code too..."}, {"id": 13336837, "attachment_id": null, "raw_text": "Per policy at https://wiki.mozilla.org/Bug_Triage/Projects/Bug_Handling/Bug_Husbandry#Inactive_Bugs. If this bug is not an enhancement request or a bug not present in a supported release of Firefox, then it may be reopened.", "creation_time": "2018-05-24T10:27:59Z", "author": "automation@bmo.tld", "text": "Per policy at https://wiki.mozilla.org/Bug_Triage/Projects/Bug_Handling/Bug_Husbandry#Inactive_Bugs. If this bug is not an enhancement request or a bug not present in a supported release of Firefox, then it may be reopened.", "tags": [], "bug_id": 707689, "time": "2018-05-24T10:27:59Z", "is_private": false, "creator": "automation@bmo.tld", "count": 6}, {"count": 7, "bug_id": 707689, "creator": "bzbarsky@mit.edu", "is_private": false, "author": "bzbarsky@mit.edu", "creation_time": "2018-05-25T21:53:07Z", "time": "2018-05-25T21:53:07Z", "tags": [], "text": "New bindings use a fixed slot.\n\nFor xpconnect we might still want to do it.", "attachment_id": null, "raw_text": "New bindings use a fixed slot.\n\nFor xpconnect we might still want to do it.", "id": 13365301}]}}, "comments": {}}