{"bugs": {"699791": {"comments": [{"author": "luc.traonmilin@gmail.com", "creator": "luc.traonmilin@gmail.com", "attachment_id": 571966, "time": "2011-11-04T14:31:33Z", "text": "Created attachment 571966\nScreenshot of the issue\n\nUser Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.106 Safari/535.2\n\nSteps to reproduce:\n\nI use an iFrame tag to embed an MJPEG stream into a web page.\n\n\nActual results:\n\nAfter working fine for a while, the file download dialog pops up once or more. The file type in the dialog is cgi, or application/octet-stream or Document, I assume it is related to the stream URL file extension because the server sends correct headers (multipart/x-mixed-replace). The stream still displays while the dialogs pop up.\n\n\nExpected results:\n\nNo pop up. To reproduce the bug, simply create an iframe and use the stream URL as src (works fine in Chrome).", "raw_text": "User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.106 Safari/535.2\n\nSteps to reproduce:\n\nI use an iFrame tag to embed an MJPEG stream into a web page.\n\n\nActual results:\n\nAfter working fine for a while, the file download dialog pops up once or more. The file type in the dialog is cgi, or application/octet-stream or Document, I assume it is related to the stream URL file extension because the server sends correct headers (multipart/x-mixed-replace). The stream still displays while the dialogs pop up.\n\n\nExpected results:\n\nNo pop up. To reproduce the bug, simply create an iframe and use the stream URL as src (works fine in Chrome).", "creation_time": "2011-11-04T14:31:33Z", "bug_id": 699791, "id": 5826352, "tags": [], "is_private": false, "count": 0}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "time": "2011-11-04T15:33:14Z", "attachment_id": null, "text": "Is is possible that one of the parts of your stream doesn't list a Content-Type for that one part?\n\n> and use the stream URL as src\n\nWhich URL?\n\nIn any case, this is a multipart decoder issue or a server issue, not a frames issue...", "creation_time": "2011-11-04T15:33:14Z", "raw_text": "Is is possible that one of the parts of your stream doesn't list a Content-Type for that one part?\n\n> and use the stream URL as src\n\nWhich URL?\n\nIn any case, this is a multipart decoder issue or a server issue, not a frames issue...", "bug_id": 699791, "id": 5826486, "tags": [], "is_private": false, "count": 1}, {"bug_id": 699791, "id": 5828317, "tags": [], "count": 2, "is_private": false, "author": "luc.traonmilin@gmail.com", "time": "2011-11-05T11:05:45Z", "attachment_id": null, "text": "It's possible that some Content-Type fields are missing however I don't think it should affect the decoding process (unless some standard requires that): I have had instances of MJPEG streams from IP cameras whith no header fields for individual parts, only the boundaries.\n\nI will try and put together a standalone runnable test case ASAP so that we can narrow it down.", "creator": "luc.traonmilin@gmail.com", "creation_time": "2011-11-05T11:05:45Z", "raw_text": "It's possible that some Content-Type fields are missing however I don't think it should affect the decoding process (unless some standard requires that): I have had instances of MJPEG streams from IP cameras whith no header fields for individual parts, only the boundaries.\n\nI will try and put together a standalone runnable test case ASAP so that we can narrow it down."}, {"creation_time": "2011-11-06T02:38:11Z", "raw_text": "> unless some standard requires that\n\nBoth standards and web compatibility require that every part of a multipart response be processed per the type for that part when loaded in an iframe.  So if you have a multipart response with two parts where the first part is application/x-msword and the second part is text/html, that should open the helper application for application/x-msword with the data in the first part and render the second part in the browser.\n\nThat said, even if the Content-Type is missing for part of a multipart JPEG stream, I would thing type sniffing would pick up the JPEG magic number and hence render as JPEG.  If you're getting application/octet-stream out, then it sounds like some part is not only missing the Content-Type header but also has non-JPEG data, which would be pretty odd.  The odds of a bug in our multipart decoder are almost higher than that...\n\nI'd really appreciate a test case if you can get one together!  Something is definitely fishy here.", "time": "2011-11-06T02:38:11Z", "attachment_id": null, "text": "> unless some standard requires that\n\nBoth standards and web compatibility require that every part of a multipart response be processed per the type for that part when loaded in an iframe.  So if you have a multipart response with two parts where the first part is application/x-msword and the second part is text/html, that should open the helper application for application/x-msword with the data in the first part and render the second part in the browser.\n\nThat said, even if the Content-Type is missing for part of a multipart JPEG stream, I would thing type sniffing would pick up the JPEG magic number and hence render as JPEG.  If you're getting application/octet-stream out, then it sounds like some part is not only missing the Content-Type header but also has non-JPEG data, which would be pretty odd.  The odds of a bug in our multipart decoder are almost higher than that...\n\nI'd really appreciate a test case if you can get one together!  Something is definitely fishy here.", "id": 5828987, "tags": [], "is_private": false, "count": 3, "bug_id": 699791, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu"}, {"creator": "luc.traonmilin@gmail.com", "author": "luc.traonmilin@gmail.com", "raw_text": "I investigated the issue further and came up with the following:\n- it is definitely not an iframe issue, it also occurs when the stream is accessed directly,\n- I wrote a server that generates a valid (I think so) MJPEG stream and cannot reproduce the issue,\n- I captured a few minutes (the issue usually happens within first minute) of the stream I have issues with (from an IP camera on a VPN), streamed it back from the same server I wrote and could not reproduce the issue either.\n- I ran a Wireshark session (I can upload the capture file if it helps) until issue occured, the shape of the stream looked correct so I extracted all images from capture and checked that they all display correctly (I am on a Windows 7 machine), which is the case.\n\nWhat can I do next?", "creation_time": "2011-11-07T22:17:12Z", "text": "I investigated the issue further and came up with the following:\n- it is definitely not an iframe issue, it also occurs when the stream is accessed directly,\n- I wrote a server that generates a valid (I think so) MJPEG stream and cannot reproduce the issue,\n- I captured a few minutes (the issue usually happens within first minute) of the stream I have issues with (from an IP camera on a VPN), streamed it back from the same server I wrote and could not reproduce the issue either.\n- I ran a Wireshark session (I can upload the capture file if it helps) until issue occured, the shape of the stream looked correct so I extracted all images from capture and checked that they all display correctly (I am on a Windows 7 machine), which is the case.\n\nWhat can I do next?", "attachment_id": null, "time": "2011-11-07T22:17:12Z", "count": 4, "is_private": false, "tags": [], "id": 5832258, "bug_id": 699791}, {"author": "bzbarsky@mit.edu", "time": "2011-11-07T22:26:21Z", "attachment_id": null, "text": "> - it is definitely not an iframe issue, it also occurs when the stream is accessed\n> directly,\n\nRight.  The same code runs for those cases.\n\nI would assume the exact packet boundaries in the original stream are relevant...  Patrick, do we have something that would be able to replay a packet stream given the Wireshark session and see if we can reproduce with that?", "creator": "bzbarsky@mit.edu", "raw_text": "> - it is definitely not an iframe issue, it also occurs when the stream is accessed\n> directly,\n\nRight.  The same code runs for those cases.\n\nI would assume the exact packet boundaries in the original stream are relevant...  Patrick, do we have something that would be able to replay a packet stream given the Wireshark session and see if we can reproduce with that?", "creation_time": "2011-11-07T22:26:21Z", "bug_id": 699791, "id": 5832289, "tags": [], "is_private": false, "count": 5}, {"creation_time": "2011-11-07T22:44:54Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #5)\n> > - it is definitely not an iframe issue, it also occurs when the stream is accessed\n> > directly,\n> \n> Right.  The same code runs for those cases.\n> \n> I would assume the exact packet boundaries in the original stream are\n> relevant...  Patrick, do we have something that would be able to replay a\n> packet stream given the Wireshark session and see if we can reproduce with\n> that?\n\nI've never seen anything that effectively replays at the packet level because of the stateful nature of it. You can replay captures for doing tests on routers and such, but the sequence numbers get all messed up if trying to be a server.\n\nI think looking at the multipart headers of the uploaded capture more closely either in wireshark or after processing with tcpflow might be useful.\n\nIt could be that empty 0.9 thing we fixed a little while back. That wasn't on 7.\n\nLuc, can you confirm it reproduces on nightly?", "attachment_id": null, "time": "2011-11-07T22:44:54Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #5)\n> > - it is definitely not an iframe issue, it also occurs when the stream is accessed\n> > directly,\n> \n> Right.  The same code runs for those cases.\n> \n> I would assume the exact packet boundaries in the original stream are\n> relevant...  Patrick, do we have something that would be able to replay a\n> packet stream given the Wireshark session and see if we can reproduce with\n> that?\n\nI've never seen anything that effectively replays at the packet level because of the stateful nature of it. You can replay captures for doing tests on routers and such, but the sequence numbers get all messed up if trying to be a server.\n\nI think looking at the multipart headers of the uploaded capture more closely either in wireshark or after processing with tcpflow might be useful.\n\nIt could be that empty 0.9 thing we fixed a little while back. That wasn't on 7.\n\nLuc, can you confirm it reproduces on nightly?", "id": 5832349, "tags": [], "count": 6, "is_private": false, "bug_id": 699791, "author": "mcmanus@ducksong.com", "creator": "mcmanus@ducksong.com"}, {"author": "luc.traonmilin@gmail.com", "creator": "luc.traonmilin@gmail.com", "raw_text": "Yes it still occurs on 10.0a1 (2011-11-08).\n\nI'll upload the capture file.\n\nThanks.", "creation_time": "2011-11-08T14:38:31Z", "time": "2011-11-08T14:38:31Z", "attachment_id": null, "text": "Yes it still occurs on 10.0a1 (2011-11-08).\n\nI'll upload the capture file.\n\nThanks.", "id": 5833930, "count": 7, "is_private": false, "tags": [], "bug_id": 699791}, {"raw_text": "", "creation_time": "2011-11-08T14:41:18Z", "time": "2011-11-08T14:41:18Z", "attachment_id": 572803, "text": "Created attachment 572803\nBuggy stream capture file", "id": 5833941, "tags": [], "count": 8, "is_private": false, "bug_id": 699791, "author": "luc.traonmilin@gmail.com", "creator": "luc.traonmilin@gmail.com"}, {"author": "bug-husbandry-bot@mozilla.bugs", "creator": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2017-09-13T18:36:26Z", "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "time": "2017-09-13T18:36:26Z", "attachment_id": null, "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "id": 12658102, "is_private": false, "count": 9, "tags": [], "bug_id": 699791}, {"author": "bug-husbandry-bot@mozilla.bugs", "creator": "bug-husbandry-bot@mozilla.bugs", "id": 12659660, "tags": [], "count": 10, "is_private": false, "bug_id": 699791, "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "creation_time": "2017-09-13T18:48:34Z", "attachment_id": null, "time": "2017-09-13T18:48:34Z", "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258"}]}}, "comments": {}}