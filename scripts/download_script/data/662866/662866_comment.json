{"comments": {}, "bugs": {"662866": {"comments": [{"tags": [], "time": "2011-06-08T18:22:15Z", "raw_text": "User-Agent:       Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C)\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nWhen restoring a previous session, form values that should not be overwritten are (the values come from a freshly generated dataset for each page load).\n\nFiles for a simplified test case provided.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Start Firefox\n2. If Firebug is installed open the Firebug console (enable if necessary) - Note: Firebug is not necessary to reproduce the bug\n3. Open outer.htm and notate the value in the input box. Notice that the input box value matches the string in the console/alert.\n4. Click the Next button. This should change the value in the input box to 'Second.'\n5. Restart Firefox (restoring the previous session)\n\n\nActual Results:  \nThe value of the input box is either 'Second' or the original value notated in step 3.\n\nExpected Results:  \nThe value in the input box matches the string in the console/alert.", "attachment_id": null, "bug_id": 662866, "id": 5520321, "creation_time": "2011-06-08T18:22:15Z", "is_private": false, "creator": "amartin@insidesales.com", "count": 0, "text": "User-Agent:       Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C)\nBuild Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\n\nWhen restoring a previous session, form values that should not be overwritten are (the values come from a freshly generated dataset for each page load).\n\nFiles for a simplified test case provided.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Start Firefox\n2. If Firebug is installed open the Firebug console (enable if necessary) - Note: Firebug is not necessary to reproduce the bug\n3. Open outer.htm and notate the value in the input box. Notice that the input box value matches the string in the console/alert.\n4. Click the Next button. This should change the value in the input box to 'Second.'\n5. Restart Firefox (restoring the previous session)\n\n\nActual Results:  \nThe value of the input box is either 'Second' or the original value notated in step 3.\n\nExpected Results:  \nThe value in the input box matches the string in the console/alert.", "author": "amartin@insidesales.com"}, {"time": "2011-06-08T19:48:06Z", "attachment_id": null, "raw_text": "I think I know what you mean, but can you attach your test case?", "tags": [], "creator": "paul@oshannessy.com", "author": "paul@oshannessy.com", "text": "I think I know what you mean, but can you attach your test case?", "count": 1, "bug_id": 662866, "id": 5520616, "creation_time": "2011-06-08T19:48:06Z", "is_private": false}, {"time": "2011-06-08T19:48:09Z", "raw_text": "", "author": "amartin@insidesales.com", "text": "Created attachment 538099\nParent document for reproduction steps (outer.htm)", "count": 2, "id": 5520618, "bug_id": 662866, "attachment_id": 538099, "tags": [], "creator": "amartin@insidesales.com", "creation_time": "2011-06-08T19:48:09Z", "is_private": false}, {"attachment_id": 538100, "tags": [], "creator": "amartin@insidesales.com", "is_private": false, "creation_time": "2011-06-08T19:51:00Z", "time": "2011-06-08T19:51:00Z", "raw_text": "", "text": "Created attachment 538100\nInner Iframe for reproduction steps (inner.htm)", "count": 3, "author": "amartin@insidesales.com", "bug_id": 662866, "id": 5520622}, {"tags": [], "raw_text": "Sorry about forgetting to attach the test case files. Should be there now.", "attachment_id": null, "time": "2011-06-08T19:52:44Z", "is_private": false, "creation_time": "2011-06-08T19:52:44Z", "bug_id": 662866, "id": 5520632, "text": "Sorry about forgetting to attach the test case files. Should be there now.", "count": 4, "author": "amartin@insidesales.com", "creator": "amartin@insidesales.com"}, {"raw_text": "Additional setup instructions: download both attached .htm files, outer.htm & inner.htm, to the same local directory.", "time": "2011-06-08T20:01:45Z", "count": 5, "text": "Additional setup instructions: download both attached .htm files, outer.htm & inner.htm, to the same local directory.", "author": "amartin@insidesales.com", "bug_id": 662866, "id": 5520656, "attachment_id": null, "tags": [], "creator": "amartin@insidesales.com", "is_private": false, "creation_time": "2011-06-08T20:01:45Z"}, {"author": "u279076@disabled.tld", "text": "Unable to confirm -- I tested this in Firefox 5.0b3 on Ubuntu 10.10...\n\n1. Open outer.htm, input box contains '14:24:17'\n2. Append 'a' to the string, input box contains '14:24:17a'\n3. Click next, input box contains 'Second'\n4. Quit and restart Firefox via the File menu\n5. Click 'Restore Previous Session' from about:home\n\nResult:\nInput box contains '14:24:17a', as expected.\n\nAny chance this is a Windows-only bug? Can you try this in Firefox 5?\nftp://ftp.mozilla.org/pub/firefox/releases/5.0b3/", "count": 6, "creator": "u279076@disabled.tld", "creation_time": "2011-06-08T21:30:43Z", "is_private": false, "bug_id": 662866, "id": 5520883, "attachment_id": null, "raw_text": "Unable to confirm -- I tested this in Firefox 5.0b3 on Ubuntu 10.10...\n\n1. Open outer.htm, input box contains '14:24:17'\n2. Append 'a' to the string, input box contains '14:24:17a'\n3. Click next, input box contains 'Second'\n4. Quit and restart Firefox via the File menu\n5. Click 'Restore Previous Session' from about:home\n\nResult:\nInput box contains '14:24:17a', as expected.\n\nAny chance this is a Windows-only bug? Can you try this in Firefox 5?\nftp://ftp.mozilla.org/pub/firefox/releases/5.0b3/", "time": "2011-06-08T21:30:43Z", "tags": []}, {"count": 7, "text": "The problem that I'm having with the Session Restore is that it isn't respecting the newly generated value in the input element. So, I'm not able to ensure that a specific value is pre-populate into the input element. The Restore is clobbering it.\n\nIs there a way to restrict/exclude the Restore for specific input elements? I've tried setting the autocomplete attribute to \"off\" for the input element and its parent form element but that doesn't seem to work.", "author": "amartin@insidesales.com", "creator": "amartin@insidesales.com", "is_private": false, "creation_time": "2011-06-08T21:45:10Z", "bug_id": 662866, "id": 5520915, "raw_text": "The problem that I'm having with the Session Restore is that it isn't respecting the newly generated value in the input element. So, I'm not able to ensure that a specific value is pre-populate into the input element. The Restore is clobbering it.\n\nIs there a way to restrict/exclude the Restore for specific input elements? I've tried setting the autocomplete attribute to \"off\" for the input element and its parent form element but that doesn't seem to work.", "attachment_id": null, "time": "2011-06-08T21:45:10Z", "tags": []}, {"attachment_id": null, "raw_text": "I tested in Ubuntu 10.10 with FF v3.6.17 and I was able to reproduce. I haven't tried v5 yet. Doesn't appear to be specific to Windows or FF4.\n\n@ashughes... based on your comment, you were able to reproduce the problem that I'm having: Session Restore is overwriting newly generated values. In a situation where each page load contains a form with data different than the last, as a developer I am unable to ensure that the user has the correct data because Session Restore is taking over.", "time": "2011-06-13T15:44:01Z", "tags": [], "author": "amartin@insidesales.com", "text": "I tested in Ubuntu 10.10 with FF v3.6.17 and I was able to reproduce. I haven't tried v5 yet. Doesn't appear to be specific to Windows or FF4.\n\n@ashughes... based on your comment, you were able to reproduce the problem that I'm having: Session Restore is overwriting newly generated values. In a situation where each page load contains a form with data different than the last, as a developer I am unable to ensure that the user has the correct data because Session Restore is taking over.", "count": 8, "creator": "amartin@insidesales.com", "creation_time": "2011-06-13T15:44:01Z", "is_private": false, "bug_id": 662866, "id": 5528816}, {"raw_text": "Thanks for the feedback amartin. \n\nMy results in comment 6 are exactly what I would expect to have happen for users with Session Restore enabled. I have no idea how to approach that from a web development methodology standpoint. However, I suspect this is as-designed behaviour from a Firefox standpoint.\n\nAgain, I'll defer to Paul for any final decisions on this bug since he is the lead Session Store developer.", "time": "2011-06-13T17:01:50Z", "author": "u279076@disabled.tld", "text": "Thanks for the feedback amartin. \n\nMy results in comment 6 are exactly what I would expect to have happen for users with Session Restore enabled. I have no idea how to approach that from a web development methodology standpoint. However, I suspect this is as-designed behaviour from a Firefox standpoint.\n\nAgain, I'll defer to Paul for any final decisions on this bug since he is the lead Session Store developer.", "count": 9, "id": 5529016, "bug_id": 662866, "attachment_id": null, "tags": [], "creator": "u279076@disabled.tld", "creation_time": "2011-06-13T17:01:50Z", "is_private": false}, {"author": "amartin@insidesales.com", "text": "OK. Thanks for the update Anthony.\n\n@Paul: is there is any kind of prevention mechanism that I can employ or perhaps some sort of a pre-restore js event I can listen for that would allow me to handle the restore in a way that's safe for my application?", "count": 10, "id": 5529076, "bug_id": 662866, "raw_text": "OK. Thanks for the update Anthony.\n\n@Paul: is there is any kind of prevention mechanism that I can employ or perhaps some sort of a pre-restore js event I can listen for that would allow me to handle the restore in a way that's safe for my application?", "time": "2011-06-13T17:18:02Z", "creator": "amartin@insidesales.com", "is_private": false, "creation_time": "2011-06-13T17:18:02Z", "attachment_id": null, "tags": []}, {"attachment_id": null, "tags": [], "creator": "paul@oshannessy.com", "is_private": false, "creation_time": "2011-10-10T18:55:13Z", "raw_text": "Sorry for the delay here...\n\nI can't think of a good prevention mechanism and we don't have any web-accessible events. We do fire an input event for many form fields after we fill them (akin to what happens when a real person types in the field). There's a bug to fire the events for <select> elements too (though that doesn't help you here).\n\nOne thing you may be able to do is put the default value setting in a timeout. We re-fill form data (essentially) onload so you could beat that by waiting. Not a perfect solution but it may help.\n\nA couple ideas that could work (but would be a bit datalossy for people)...\n1. store the default value of the form field, and only refill if the default's match (see bug 662743 where we're doing something like this for <select>s)\n2. check to see if the <input> already doesn't match the default when re-filling the form. It would be a timing thing here as we're competing for onload.\n\nI'm not really wild about either and I'm much more inclined to just leave things as they are. An event accessible to the web isn't a bad idea though.\n\nSee also, bug 464691 (this isn't quite a dupe, that's about changes to the default value of a form field, like idea #1 above).", "time": "2011-10-10T18:55:13Z", "author": "paul@oshannessy.com", "count": 11, "text": "Sorry for the delay here...\n\nI can't think of a good prevention mechanism and we don't have any web-accessible events. We do fire an input event for many form fields after we fill them (akin to what happens when a real person types in the field). There's a bug to fire the events for <select> elements too (though that doesn't help you here).\n\nOne thing you may be able to do is put the default value setting in a timeout. We re-fill form data (essentially) onload so you could beat that by waiting. Not a perfect solution but it may help.\n\nA couple ideas that could work (but would be a bit datalossy for people)...\n1. store the default value of the form field, and only refill if the default's match (see bug 662743 where we're doing something like this for <select>s)\n2. check to see if the <input> already doesn't match the default when re-filling the form. It would be a timing thing here as we're competing for onload.\n\nI'm not really wild about either and I'm much more inclined to just leave things as they are. An event accessible to the web isn't a bad idea though.\n\nSee also, bug 464691 (this isn't quite a dupe, that's about changes to the default value of a form field, like idea #1 above).", "bug_id": 662866, "id": 5772213}]}}}