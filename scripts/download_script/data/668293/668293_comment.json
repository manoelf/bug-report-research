{"comments": {}, "bugs": {"668293": {"comments": [{"creation_time": "2011-06-29T18:57:36Z", "is_private": false, "id": 5565170, "bug_id": 668293, "text": "Clean targets would be one the obvious candidate.  When a requested make target is of type clean define macros whose value can be used to conditionally inhibit all generation and build activities:\n  o skip autoconf\n  o skip autogen\n  o ...\n\n\nInitially the setup could be based on MAKECMDGOALS but that answer will need a special case as \"gmake clean build\" would not work properly until all cases could be handled.\n\ntmp = $(filter clean%,$(MAKECMDGOALS))\ntmp += $(filter %clean,$(MAKECMDGOALS))\ntmp := $(sort $(strip tmp))\nifneq (,$(tmp))\n  ifneq ($(words $(MAKECMDGOALS)),$(words $(tmp)))\n    isCleanTarget := $(tmp)\n  endif\nendif\nundefine tmp\n\n\nifndef isCleanTarget\nconfigure-files:\nendif", "count": 0, "author": "joey@mozilla.com", "creator": "joey@mozilla.com", "tags": [], "raw_text": "Clean targets would be one the obvious candidate.  When a requested make target is of type clean define macros whose value can be used to conditionally inhibit all generation and build activities:\n  o skip autoconf\n  o skip autogen\n  o ...\n\n\nInitially the setup could be based on MAKECMDGOALS but that answer will need a special case as \"gmake clean build\" would not work properly until all cases could be handled.\n\ntmp = $(filter clean%,$(MAKECMDGOALS))\ntmp += $(filter %clean,$(MAKECMDGOALS))\ntmp := $(sort $(strip tmp))\nifneq (,$(tmp))\n  ifneq ($(words $(MAKECMDGOALS)),$(words $(tmp)))\n    isCleanTarget := $(tmp)\n  endif\nendif\nundefine tmp\n\n\nifndef isCleanTarget\nconfigure-files:\nendif", "attachment_id": null, "time": "2011-06-29T18:57:36Z"}]}}}