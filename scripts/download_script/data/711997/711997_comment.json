{"comments": {}, "bugs": {"711997": {"comments": [{"id": 5926732, "attachment_id": null, "raw_text": "Let's say we're animating a scale transform from scale factors <sx_0, sy_0> to <sx_1, sy_1>.  If we render the frame at <max(sx_0, sx_1), max(sy_0, sy_1)>, then we don't need to redraw it again during the animation, only resample.  This might look strange in the cases where sx_0 < sx_1 and sy_0 > sy_1, or vice versa.  Maybe we want to limit this fast-path to rescales where sx_i == sy_i.\n\nThis is intended to be another fast-path alongside bug 702739.\n\nI'm guessing it will be argued that we should rely on the logarithmic repainting instead of adding a special case here.  Perf will be a bit worse in theory, and that approach seems like it will complicate the layers animation setup.  But I guess we'll see.", "creation_time": "2011-12-19T15:55:00Z", "author": "cjones.bugs@gmail.com", "text": "Let's say we're animating a scale transform from scale factors <sx_0, sy_0> to <sx_1, sy_1>.  If we render the frame at <max(sx_0, sx_1), max(sy_0, sy_1)>, then we don't need to redraw it again during the animation, only resample.  This might look strange in the cases where sx_0 < sx_1 and sy_0 > sy_1, or vice versa.  Maybe we want to limit this fast-path to rescales where sx_i == sy_i.\n\nThis is intended to be another fast-path alongside bug 702739.\n\nI'm guessing it will be argued that we should rely on the logarithmic repainting instead of adding a special case here.  Perf will be a bit worse in theory, and that approach seems like it will complicate the layers animation setup.  But I guess we'll see.", "tags": [], "time": "2011-12-19T15:55:00Z", "bug_id": 711997, "is_private": false, "creator": "cjones.bugs@gmail.com", "count": 0}, {"count": 1, "is_private": false, "creator": "roc@ocallahan.org", "text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #0)\n> This is intended to be another fast-path alongside bug 702739.\n\nBug 702739 doesn't depend on knowing the end-state of any animation. This does, which would make this harder and a bit more fragile.", "time": "2011-12-20T04:14:27Z", "tags": [], "bug_id": 711997, "creation_time": "2011-12-20T04:14:27Z", "author": "roc@ocallahan.org", "raw_text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #0)\n> This is intended to be another fast-path alongside bug 702739.\n\nBug 702739 doesn't depend on knowing the end-state of any animation. This does, which would make this harder and a bit more fragile.", "attachment_id": null, "id": 5928779}, {"attachment_id": null, "raw_text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #0)\n> I'm guessing it will be argued that we should rely on the logarithmic\n> repainting instead of adding a special case here.  Perf will be a bit worse\n> in theory, and that approach seems like it will complicate the layers\n> animation setup.\n\nShouldn't be too bad. Currently we clamp the scale factors to the smallest power of 2 that's greater than or equal to the true scale factor. When animating with OMTC, the true scale factor known to layout will lag behind a bit, so in some cases we might be drawing with a scale factor that's a bit bigger than the clamped-power-of-two scale factor used by layout, so we'll be scaling up a bit instead of scaling down. I don't expect that to be a big deal. We'll have to see.", "id": 5928839, "creator": "roc@ocallahan.org", "is_private": false, "count": 2, "author": "roc@ocallahan.org", "creation_time": "2011-12-20T05:14:17Z", "bug_id": 711997, "time": "2011-12-20T05:14:17Z", "tags": [], "text": "(In reply to Chris Jones [:cjones] [:warhammer] from comment #0)\n> I'm guessing it will be argued that we should rely on the logarithmic\n> repainting instead of adding a special case here.  Perf will be a bit worse\n> in theory, and that approach seems like it will complicate the layers\n> animation setup.\n\nShouldn't be too bad. Currently we clamp the scale factors to the smallest power of 2 that's greater than or equal to the true scale factor. When animating with OMTC, the true scale factor known to layout will lag behind a bit, so in some cases we might be drawing with a scale factor that's a bit bigger than the clamped-power-of-two scale factor used by layout, so we'll be scaling up a bit instead of scaling down. I don't expect that to be a big deal. We'll have to see."}, {"text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #1)\n> (In reply to Chris Jones [:cjones] [:warhammer] from comment #0)\n> > This is intended to be another fast-path alongside bug 702739.\n> \n> Bug 702739 doesn't depend on knowing the end-state of any animation. This\n> does, which would make this harder and a bit more fragile.\n\n\"fast-path alongside\" isn't meant to be particularly deep, but wrt this work, I think of bug 702739 as providing a fast-path for animated translations, as long as the animation code doesn't accidentally invalidate too much.\n\n(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #2)\n> When\n> animating with OMTC, the true scale factor known to layout will lag behind a\n> bit, so in some cases we might be drawing with a scale factor that's a bit\n> bigger than the clamped-power-of-two scale factor used by layout, so we'll\n> be scaling up a bit instead of scaling down. I don't expect that to be a big\n> deal. We'll have to see.\n\nI could imagine things getting a bit tricky if we have to recalibrate the animation if/when layout re-renders.  But maybe we should implement bug 711991 in such a way that that's not a problem ;).  Fwiw, we learned how to do that for the fennec async scale/transform stuff.\n\nThere are some cases where I don't expect clamping to behave well, but sure, we'll see.", "bug_id": 711997, "time": "2011-12-20T06:57:57Z", "tags": [], "creation_time": "2011-12-20T06:57:57Z", "author": "cjones.bugs@gmail.com", "count": 3, "is_private": false, "creator": "cjones.bugs@gmail.com", "id": 5928937, "raw_text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #1)\n> (In reply to Chris Jones [:cjones] [:warhammer] from comment #0)\n> > This is intended to be another fast-path alongside bug 702739.\n> \n> Bug 702739 doesn't depend on knowing the end-state of any animation. This\n> does, which would make this harder and a bit more fragile.\n\n\"fast-path alongside\" isn't meant to be particularly deep, but wrt this work, I think of bug 702739 as providing a fast-path for animated translations, as long as the animation code doesn't accidentally invalidate too much.\n\n(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #2)\n> When\n> animating with OMTC, the true scale factor known to layout will lag behind a\n> bit, so in some cases we might be drawing with a scale factor that's a bit\n> bigger than the clamped-power-of-two scale factor used by layout, so we'll\n> be scaling up a bit instead of scaling down. I don't expect that to be a big\n> deal. We'll have to see.\n\nI could imagine things getting a bit tricky if we have to recalibrate the animation if/when layout re-renders.  But maybe we should implement bug 711991 in such a way that that's not a problem ;).  Fwiw, we learned how to do that for the fennec async scale/transform stuff.\n\nThere are some cases where I don't expect clamping to behave well, but sure, we'll see.", "attachment_id": null}, {"is_private": false, "creator": "cjones.bugs@gmail.com", "count": 4, "creation_time": "2011-12-20T09:24:10Z", "author": "cjones.bugs@gmail.com", "text": "I wonder if mipmapping from highest resolution is a good compromise, for GPU composited backends.", "tags": [], "time": "2011-12-20T09:24:10Z", "bug_id": 711997, "attachment_id": null, "raw_text": "I wonder if mipmapping from highest resolution is a good compromise, for GPU composited backends.", "id": 5929028}]}}}