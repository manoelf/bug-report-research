{"comments": {}, "bugs": {"680968": {"comments": [{"creator": "gps@mozilla.com", "is_private": false, "author": "gps@mozilla.com", "creation_time": "2011-08-22T17:59:34Z", "tags": [], "time": "2011-08-22T17:59:34Z", "text": "This is a follow-up from bug 680636 to have the Python version of nsinstall, nsinstall.py, have feature parity with the original C version with regards to symlinks.\n\nCurrently, nsinstall.py ignores symlinks options. It should be made to honor them.", "attachment_id": null, "raw_text": "This is a follow-up from bug 680636 to have the Python version of nsinstall, nsinstall.py, have feature parity with the original C version with regards to symlinks.\n\nCurrently, nsinstall.py ignores symlinks options. It should be made to honor them.", "id": 5669683, "count": 0, "bug_id": 680968}, {"bug_id": 680968, "count": 1, "text": "I think I fat fingered the bug number when I created this bug.", "time": "2012-01-24T00:14:22Z", "tags": [], "creation_time": "2012-01-24T00:14:22Z", "author": "gps@mozilla.com", "is_private": false, "creator": "gps@mozilla.com", "id": 6002704, "raw_text": "I think I fat fingered the bug number when I created this bug.", "attachment_id": null}, {"attachment_id": 590971, "raw_text": "This patch adds basic symlink support to nsinstall.py. If -l, -L, or -R are specified, it creates symlinks instead of copying files. The expected behavior of -R is ignored. I /think/ this is acceptable. If you think it is needed and can explain how it is supposed to work, I can code it up.\n\nIn nsinstall.c, the mtime of the symlink and its source are compared when determining whether to unlink the existing symlink. I did not port this. This /could/ have an impact on makefile freshness determination. But, I /think/ that would only come into play if the tester were using lstat() instead of stat(). I'm not sure what make/pymake uses internally. If you don't want to risk it, I could certainly port this logic forward.\n\nI have this patch applied on top of one for bug 680636 and the tree appears to mostly build fine! Although, I did discover that nsinstall.py isn't performing thread-safe directory creation (os.mkdir will raise if the path exists and multiple nsinstall.py invocations could happen in parallel). I can make the necessary changes in this patch or deal with it elsewhere.\n\nFinally, I don't like the Python style used in this patch. But, it matches what existed previously. To fix the style would require rewriting the entire file. I'm not about to make Ted review a completely new nsinstall.py ;)", "id": 6003013, "is_private": false, "creator": "gps@mozilla.com", "count": 2, "creation_time": "2012-01-24T02:27:22Z", "author": "gps@mozilla.com", "text": "Created attachment 590971\nBasic symlink support in nsinstall.py\n\nThis patch adds basic symlink support to nsinstall.py. If -l, -L, or -R are specified, it creates symlinks instead of copying files. The expected behavior of -R is ignored. I /think/ this is acceptable. If you think it is needed and can explain how it is supposed to work, I can code it up.\n\nIn nsinstall.c, the mtime of the symlink and its source are compared when determining whether to unlink the existing symlink. I did not port this. This /could/ have an impact on makefile freshness determination. But, I /think/ that would only come into play if the tester were using lstat() instead of stat(). I'm not sure what make/pymake uses internally. If you don't want to risk it, I could certainly port this logic forward.\n\nI have this patch applied on top of one for bug 680636 and the tree appears to mostly build fine! Although, I did discover that nsinstall.py isn't performing thread-safe directory creation (os.mkdir will raise if the path exists and multiple nsinstall.py invocations could happen in parallel). I can make the necessary changes in this patch or deal with it elsewhere.\n\nFinally, I don't like the Python style used in this patch. But, it matches what existed previously. To fix the style would require rewriting the entire file. I'm not about to make Ted review a completely new nsinstall.py ;)", "time": "2012-01-24T02:27:22Z", "tags": [], "bug_id": 680968}, {"id": 6051513, "attachment_id": 596146, "raw_text": "I've added a \"win32\" Python module dir and moved all the win32 junk we had in JarMaker.py into modules in there.", "creation_time": "2012-02-10T20:36:39Z", "author": "rain@sunshowers.io", "text": "Created attachment 596146\npatch including Windows support for junctioning dirs (WIP)\n\nI've added a \"win32\" Python module dir and moved all the win32 junk we had in JarMaker.py into modules in there.", "tags": [], "bug_id": 680968, "time": "2012-02-10T20:36:39Z", "is_private": false, "creator": "rain@sunshowers.io", "count": 3}, {"id": 6052242, "raw_text": "Ugh, this is never going to work on Windows. rm -rf follows junctions :(", "attachment_id": null, "tags": [], "time": "2012-02-10T23:58:18Z", "text": "Ugh, this is never going to work on Windows. rm -rf follows junctions :(", "author": "rain@sunshowers.io", "creation_time": "2012-02-10T23:58:18Z", "creator": "rain@sunshowers.io", "is_private": false, "bug_id": 680968, "count": 4}, {"creator": "rain@sunshowers.io", "is_private": false, "count": 5, "author": "rain@sunshowers.io", "creation_time": "2012-02-11T00:00:43Z", "tags": [], "bug_id": 680968, "time": "2012-02-11T00:00:43Z", "text": "Created attachment 596207\nupdated patch including Windows support (for posterity, shouldn't be used)", "attachment_id": 596207, "raw_text": "", "id": 6052251}, {"creator": "vladimir@pobox.com", "is_private": false, "count": 6, "author": "vladimir@pobox.com", "creation_time": "2013-07-31T16:04:09Z", "time": "2013-07-31T16:04:09Z", "bug_id": 680968, "tags": [], "text": "Note, should this come up again -- doing this with junctions isn't the right way.  NTFS has real symbolic links since Vista; see http://msdn.microsoft.com/en-us/library/windows/desktop/aa365682%28v=vs.85%29.aspx for details.", "attachment_id": null, "raw_text": "Note, should this come up again -- doing this with junctions isn't the right way.  NTFS has real symbolic links since Vista; see http://msdn.microsoft.com/en-us/library/windows/desktop/aa365682%28v=vs.85%29.aspx for details.", "id": 7697586}, {"creator": "gps@mozilla.com", "is_private": false, "count": 7, "author": "gps@mozilla.com", "creation_time": "2013-07-31T17:47:54Z", "tags": [], "bug_id": 680968, "time": "2013-07-31T17:47:54Z", "text": "In my ideal world nsinstall and its Python variant are obsoleted in favor of the installation code in mozpack (python/mozbuild/mozpack). The code in the latter is more intelligent about copying only when things change, etc.", "attachment_id": null, "raw_text": "In my ideal world nsinstall and its Python variant are obsoleted in favor of the installation code in mozpack (python/mozbuild/mozpack). The code in the latter is more intelligent about copying only when things change, etc.", "id": 7698132}, {"author": "vladimir@pobox.com", "creation_time": "2013-07-31T17:50:27Z", "tags": [], "time": "2013-07-31T17:50:27Z", "text": "Copying doesn't help; we need actual symlinks for developers so that dependencies on header files work properly.", "creator": "vladimir@pobox.com", "is_private": false, "id": 7698152, "attachment_id": null, "raw_text": "Copying doesn't help; we need actual symlinks for developers so that dependencies on header files work properly.", "bug_id": 680968, "count": 8}, {"id": 7698187, "raw_text": "(In reply to Vladimir Vukicevic [:vlad] [:vladv] from comment #8)\n> Copying doesn't help; we need actual symlinks for developers so that\n> dependencies on header files work properly.\n\nThat's why we are switching to using manifests for managing header installs (bug 896797). Up until bug 884587, we completely blew away dist/include at the top of builds, forcing file re-copy. We now maintain manifests of which files actually belong so as to not incur unnecessary copying. The next step is to actually install these files with install manifests instead of nsinstall.", "attachment_id": null, "text": "(In reply to Vladimir Vukicevic [:vlad] [:vladv] from comment #8)\n> Copying doesn't help; we need actual symlinks for developers so that\n> dependencies on header files work properly.\n\nThat's why we are switching to using manifests for managing header installs (bug 896797). Up until bug 884587, we completely blew away dist/include at the top of builds, forcing file re-copy. We now maintain manifests of which files actually belong so as to not incur unnecessary copying. The next step is to actually install these files with install manifests instead of nsinstall.", "bug_id": 680968, "time": "2013-07-31T17:58:23Z", "tags": [], "creation_time": "2013-07-31T17:58:23Z", "author": "gps@mozilla.com", "count": 9, "is_private": false, "creator": "gps@mozilla.com"}, {"time": "2013-07-31T21:40:29Z", "tags": [], "text": "(In reply to comment #9)\n> (In reply to Vladimir Vukicevic [:vlad] [:vladv] from comment #8)\n> > Copying doesn't help; we need actual symlinks for developers so that\n> > dependencies on header files work properly.\n> \n> That's why we are switching to using manifests for managing header installs\n> (bug 896797). Up until bug 884587, we completely blew away dist/include at the\n> top of builds, forcing file re-copy. We now maintain manifests of which files\n> actually belong so as to not incur unnecessary copying. The next step is to\n> actually install these files with install manifests instead of nsinstall.\n\nThe point is that we want to avoid the copy stage necessary to make the change made to a header in your srcdir be visible in the version in objdir/dist/include.", "author": "ehsan.akhgari@gmail.com", "creation_time": "2013-07-31T21:40:29Z", "creator": "ehsan.akhgari@gmail.com", "is_private": false, "id": 7699263, "raw_text": "(In reply to comment #9)\n> (In reply to Vladimir Vukicevic [:vlad] [:vladv] from comment #8)\n> > Copying doesn't help; we need actual symlinks for developers so that\n> > dependencies on header files work properly.\n> \n> That's why we are switching to using manifests for managing header installs\n> (bug 896797). Up until bug 884587, we completely blew away dist/include at the\n> top of builds, forcing file re-copy. We now maintain manifests of which files\n> actually belong so as to not incur unnecessary copying. The next step is to\n> actually install these files with install manifests instead of nsinstall.\n\nThe point is that we want to avoid the copy stage necessary to make the change made to a header in your srcdir be visible in the version in objdir/dist/include.", "attachment_id": null, "bug_id": 680968, "count": 10}, {"author": "gps@mozilla.com", "creation_time": "2018-11-07T20:16:35Z", "time": "2018-11-07T20:16:35Z", "tags": [], "bug_id": 680968, "text": "I have patches in bug 1382697 that support this.", "creator": "gps@mozilla.com", "is_private": false, "count": 11, "id": 13742811, "attachment_id": null, "raw_text": "I have patches in bug 1382697 that support this."}]}}}