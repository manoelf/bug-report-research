{"bugs": {"709738": {"comments": [{"creator": "richard@vdberg.org", "is_private": false, "count": 0, "author": "richard@vdberg.org", "creation_time": "2011-12-12T10:05:20Z", "time": "2011-12-12T10:05:20Z", "tags": [], "bug_id": 709738, "text": "User Agent: Mozilla/5.0 (Windows NT 6.1; rv:8.0) Gecko/20100101 Firefox/8.0\nBuild ID: 20111104165243\n\nSteps to reproduce:\n\nAfter being prompted by FF to set it as the default browser, I clicked \"yes\".\n\n\n\nActual results:\n\nFF runs \"C:\\Program Files\\Mozilla Firefox\\uninstall\\helper.exe\" /SetAsDefaultAppUser\nThe helper.exe drops system.dll in a %TEMP%\\nsxxxxx.tmp\\ folder \n\n\nExpected results:\n\nIn environments where executables are restricted by AppLocker, loading DLLs from %TEMP% is not allowed. Please install system.dll in C:\\Program Files\\Mozilla Firefox\\uninstall\\ instead of dropping it in %TEMP%", "attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 6.1; rv:8.0) Gecko/20100101 Firefox/8.0\nBuild ID: 20111104165243\n\nSteps to reproduce:\n\nAfter being prompted by FF to set it as the default browser, I clicked \"yes\".\n\n\n\nActual results:\n\nFF runs \"C:\\Program Files\\Mozilla Firefox\\uninstall\\helper.exe\" /SetAsDefaultAppUser\nThe helper.exe drops system.dll in a %TEMP%\\nsxxxxx.tmp\\ folder \n\n\nExpected results:\n\nIn environments where executables are restricted by AppLocker, loading DLLs from %TEMP% is not allowed. Please install system.dll in C:\\Program Files\\Mozilla Firefox\\uninstall\\ instead of dropping it in %TEMP%", "id": 5908166}, {"bug_id": 709738, "count": 1, "creation_time": "2011-12-12T21:38:47Z", "author": "fmdevelopertim@gmail.com", "text": "Robert -> Is this installer related?", "time": "2011-12-12T21:38:47Z", "tags": [], "is_private": false, "creator": "fmdevelopertim@gmail.com", "id": 5909993, "attachment_id": null, "raw_text": "Robert -> Is this installer related?"}, {"count": 2, "bug_id": 709738, "raw_text": "Yes and it has always been done this way. Though on the surface it seems like something that is simple to fix it won't be.", "attachment_id": null, "id": 5912712, "creator": "robert.strong.bugs@gmail.com", "is_private": false, "tags": [], "time": "2011-12-13T18:44:42Z", "text": "Yes and it has always been done this way. Though on the surface it seems like something that is simple to fix it won't be.", "author": "robert.strong.bugs@gmail.com", "creation_time": "2011-12-13T18:44:42Z"}, {"raw_text": "Are you saying the system.dll is uniquely generated every time it is needed? Loading DLL's from %TEMP% post-install is very bad practice IMHO.", "attachment_id": null, "id": 5912911, "count": 3, "is_private": false, "creator": "richard@vdberg.org", "text": "Are you saying the system.dll is uniquely generated every time it is needed? Loading DLL's from %TEMP% post-install is very bad practice IMHO.", "time": "2011-12-13T19:28:42Z", "bug_id": 709738, "tags": [], "creation_time": "2011-12-13T19:28:42Z", "author": "richard@vdberg.org"}, {"id": 5912919, "raw_text": "It is extracted every time it is needed and this is how NSIS works.", "attachment_id": null, "text": "It is extracted every time it is needed and this is how NSIS works.", "bug_id": 709738, "time": "2011-12-13T19:31:11Z", "tags": [], "creation_time": "2011-12-13T19:31:11Z", "author": "robert.strong.bugs@gmail.com", "count": 4, "is_private": false, "creator": "robert.strong.bugs@gmail.com"}, {"raw_text": "So the underlying issue is that setting the default browser (a post-install operation) is using the Nullsoft Scriptable Install System. I have no problem with installers, their scripts and temporary DLL's they might call during installation. We ignore those and build our own MSI to distribute to our users. We cannot however allow any arbitrary DLL to be loaded from %TEMP%.\n\nHow can we allow our users to select Firefox as their default browser, without compromising security?", "attachment_id": null, "id": 5912945, "count": 5, "is_private": false, "creator": "richard@vdberg.org", "text": "So the underlying issue is that setting the default browser (a post-install operation) is using the Nullsoft Scriptable Install System. I have no problem with installers, their scripts and temporary DLL's they might call during installation. We ignore those and build our own MSI to distribute to our users. We cannot however allow any arbitrary DLL to be loaded from %TEMP%.\n\nHow can we allow our users to select Firefox as their default browser, without compromising security?", "time": "2011-12-13T19:37:47Z", "bug_id": 709738, "tags": [], "creation_time": "2011-12-13T19:37:47Z", "author": "richard@vdberg.org"}, {"id": 5912957, "attachment_id": null, "raw_text": "I'm not asking you to and I'm not saying this bug shouldn't be fixed.", "creation_time": "2011-12-13T19:40:12Z", "author": "robert.strong.bugs@gmail.com", "text": "I'm not asking you to and I'm not saying this bug shouldn't be fixed.", "bug_id": 709738, "tags": [], "time": "2011-12-13T19:40:12Z", "is_private": false, "creator": "robert.strong.bugs@gmail.com", "count": 6}, {"count": 7, "bug_id": 709738, "raw_text": "This behavior makes helper.exe look very suspicious. The security application our company uses asks the user for permission to execute or load DLLs under certain conditions. This appears as \"helper.exe\", loading \"system.dll\" from \"C:\\Windows\\Temp\\nsxxxxx.tmp\\\". There are a handful of malwares that user a name like \"helper.exe\", and it is not clear that this is a Firefox process, so many users will block access to system.dll.", "attachment_id": null, "id": 9678858, "creator": "matt.idzik1@gmail.com", "is_private": false, "tags": [], "time": "2014-12-10T18:01:55Z", "text": "This behavior makes helper.exe look very suspicious. The security application our company uses asks the user for permission to execute or load DLLs under certain conditions. This appears as \"helper.exe\", loading \"system.dll\" from \"C:\\Windows\\Temp\\nsxxxxx.tmp\\\". There are a handful of malwares that user a name like \"helper.exe\", and it is not clear that this is a Firefox process, so many users will block access to system.dll.", "author": "matt.idzik1@gmail.com", "creation_time": "2014-12-10T18:01:55Z"}, {"count": 8, "is_private": false, "creator": "stefan.kanthak@nexgo.de", "text": "(In reply to Robert Strong [:rstrong] (use needinfo to contact me) from comment #4)\n> It is extracted every time it is needed and this is how NSIS works.\n\nNSIS is a security nightmare. DUMP IT, NOW!", "tags": [], "time": "2015-10-29T21:23:52Z", "bug_id": 709738, "creation_time": "2015-10-29T21:23:52Z", "author": "stefan.kanthak@nexgo.de", "raw_text": "(In reply to Robert Strong [:rstrong] (use needinfo to contact me) from comment #4)\n> It is extracted every time it is needed and this is how NSIS works.\n\nNSIS is a security nightmare. DUMP IT, NOW!", "attachment_id": null, "id": 10887104}, {"id": 10887137, "attachment_id": null, "raw_text": "(In reply to Matt Idzik from comment #7)\n> This behavior makes helper.exe look very suspicious. The security\n> application our company uses asks the user for permission to execute or load\n> DLLs under certain conditions. This appears as \"helper.exe\", loading\n> \"system.dll\" from \"C:\\Windows\\Temp\\nsxxxxx.tmp\\\". There are a handful of\n> malwares that user a name like \"helper.exe\", and it is not clear that this\n> is a Firefox process, so many users will block access to system.dll.\n\nIt's worse: unprivileged users can (overwrite) \"C:\\Windows\\Temp\\nsxxxxx.tmp\\system.dll\" and gain administrative or even SYSTEM privileges when their malicious DLL is loaded/executed.", "creation_time": "2015-10-29T21:30:41Z", "author": "stefan.kanthak@nexgo.de", "text": "(In reply to Matt Idzik from comment #7)\n> This behavior makes helper.exe look very suspicious. The security\n> application our company uses asks the user for permission to execute or load\n> DLLs under certain conditions. This appears as \"helper.exe\", loading\n> \"system.dll\" from \"C:\\Windows\\Temp\\nsxxxxx.tmp\\\". There are a handful of\n> malwares that user a name like \"helper.exe\", and it is not clear that this\n> is a Firefox process, so many users will block access to system.dll.\n\nIt's worse: unprivileged users can (overwrite) \"C:\\Windows\\Temp\\nsxxxxx.tmp\\system.dll\" and gain administrative or even SYSTEM privileges when their malicious DLL is loaded/executed.", "time": "2015-10-29T21:30:41Z", "bug_id": 709738, "tags": [], "is_private": false, "creator": "stefan.kanthak@nexgo.de", "count": 9}, {"count": 10, "bug_id": 709738, "is_private": false, "creator": "stefan.kanthak@nexgo.de", "creation_time": "2015-10-29T23:11:16Z", "author": "stefan.kanthak@nexgo.de", "text": "(In reply to Richard van den Berg from comment #3)\n> Are you saying the system.dll is uniquely generated every time it is needed?\n> Loading DLL's from %TEMP% post-install is very bad practice IMHO.\n\nNot only in your opinion.\n\nTake a look at <http://home.arcor.de/skanthak/download/GMAIL.INF>: this script installs a \"mailto:\" URL handler and handles the show/hide icons and reinstall commands itself.", "tags": [], "time": "2015-10-29T23:11:16Z", "attachment_id": null, "raw_text": "(In reply to Richard van den Berg from comment #3)\n> Are you saying the system.dll is uniquely generated every time it is needed?\n> Loading DLL's from %TEMP% post-install is very bad practice IMHO.\n\nNot only in your opinion.\n\nTake a look at <http://home.arcor.de/skanthak/download/GMAIL.INF>: this script installs a \"mailto:\" URL handler and handles the show/hide icons and reinstall commands itself.", "id": 10887478}, {"attachment_id": null, "raw_text": "Why is this \"bug\", or should I say, bad programming practice, still around, more than five years later, with FF version 45?\n\nOf what use is the mozilla maintenance service, if it is not working smoothly on a computer with applocker or software restriction policies enforced?", "id": 11232548, "creator": "rudiruesseltierchen@gmail.com", "is_private": false, "author": "rudiruesseltierchen@gmail.com", "creation_time": "2016-03-09T18:11:56Z", "tags": [], "time": "2016-03-09T18:11:56Z", "text": "Why is this \"bug\", or should I say, bad programming practice, still around, more than five years later, with FF version 45?\n\nOf what use is the mozilla maintenance service, if it is not working smoothly on a computer with applocker or software restriction policies enforced?", "count": 11, "bug_id": 709738}, {"count": 12, "bug_id": 709738, "attachment_id": null, "raw_text": "I think this is the same thing I asked about in the support forums https://support.mozilla.org/en-US/questions/1254989#answer-1210474.  Today I am seeing AppLocker catch 5 different DLLs running in %TEMP%:\nSHELLLINK.DLL\nSYSTEM.DLL\nCITYHASH.DLL\nUSERINFO.DLL\nAPPLICATIONID.DLL\n\nCan someone confirm what all of these are related to?  They apparently aren't signed as I tried to whitelist with a publisher rule.  If they really only have to do with setting the default browser I'll probably just continue blocking.  My main concern is that this behavior has something to do with updates and I want to make sure that part is working properly.", "id": 14027440, "is_private": false, "creator": "taylor.dixon@kimballmidwest.com", "creation_time": "2019-04-02T13:05:29Z", "author": "taylor.dixon@kimballmidwest.com", "text": "I think this is the same thing I asked about in the support forums https://support.mozilla.org/en-US/questions/1254989#answer-1210474.  Today I am seeing AppLocker catch 5 different DLLs running in %TEMP%:\nSHELLLINK.DLL\nSYSTEM.DLL\nCITYHASH.DLL\nUSERINFO.DLL\nAPPLICATIONID.DLL\n\nCan someone confirm what all of these are related to?  They apparently aren't signed as I tried to whitelist with a publisher rule.  If they really only have to do with setting the default browser I'll probably just continue blocking.  My main concern is that this behavior has something to do with updates and I want to make sure that part is working properly.", "tags": [], "time": "2019-04-02T13:05:29Z"}, {"id": 14027895, "attachment_id": null, "raw_text": "(In reply to user20190402 from comment #12)\n\n> I think this is the same thing I asked about in the support forums https://support.mozilla.org/en-US/questions/1254989#answer-1210474.\n\nYes, what you're seeing appears to be the same thing this bug is about.\n\n> Today I am seeing AppLocker catch 5 different DLLs running in %TEMP%:\n> SHELLLINK.DLL\n> SYSTEM.DLL\n> CITYHASH.DLL\n> USERINFO.DLL\n> APPLICATIONID.DLL\n> \n> Can someone confirm what all of these are related to?  They apparently aren't signed as I tried to whitelist with a publisher rule.  If they really only have to do with setting the default browser I'll probably just continue blocking.  My main concern is that this behavior has something to do with updates and I want to make sure that part is working properly.\n\nThese are all used by part of the update procedure (as well as by the installer); if they're blocked you'll get a partially complete update, but I can't really make any guarantees about how well that installation will work after that as we don't test or support that scenario at all.", "author": "mhowell@mozilla.com", "creation_time": "2019-04-02T16:09:30Z", "tags": [], "time": "2019-04-02T16:09:30Z", "text": "(In reply to user20190402 from comment #12)\n\n> I think this is the same thing I asked about in the support forums https://support.mozilla.org/en-US/questions/1254989#answer-1210474.\n\nYes, what you're seeing appears to be the same thing this bug is about.\n\n> Today I am seeing AppLocker catch 5 different DLLs running in %TEMP%:\n> SHELLLINK.DLL\n> SYSTEM.DLL\n> CITYHASH.DLL\n> USERINFO.DLL\n> APPLICATIONID.DLL\n> \n> Can someone confirm what all of these are related to?  They apparently aren't signed as I tried to whitelist with a publisher rule.  If they really only have to do with setting the default browser I'll probably just continue blocking.  My main concern is that this behavior has something to do with updates and I want to make sure that part is working properly.\n\nThese are all used by part of the update procedure (as well as by the installer); if they're blocked you'll get a partially complete update, but I can't really make any guarantees about how well that installation will work after that as we don't test or support that scenario at all.", "creator": "mhowell@mozilla.com", "is_private": false, "bug_id": 709738, "count": 13}, {"creator": "mhowell@mozilla.com", "is_private": false, "author": "mhowell@mozilla.com", "creation_time": "2019-04-02T16:29:46Z", "tags": [], "time": "2019-04-02T16:29:46Z", "text": "Note that since this bug was filed, NSIS has started configuring the permissions on the temporary directory in question to only grant any access to the Administrators group (assuming the process is running with admin privileges, as all the relevant processes typically are). I believe this should effectively mitigate the possibility for privilege escalation here.", "attachment_id": null, "raw_text": "Note that since this bug was filed, NSIS has started configuring the permissions on the temporary directory in question to only grant any access to the Administrators group (assuming the process is running with admin privileges, as all the relevant processes typically are). I believe this should effectively mitigate the possibility for privilege escalation here.", "id": 14027954, "count": 14, "bug_id": 709738}, {"raw_text": "Thanks for the response, Matt.  I can't speak to NSIS as I have no experience there, but I don't think they are running as admin.  If they were, AppLocker would be allowing them based off the default rule set.  As well, I know that Firefox allows a non-administrative user to install the entire application in their AppData.  So in that case, how would an administrative hook for maintenance purposes ever get created?  That is beside the point really.  I have come to accept that certain programs are going to install in this manner, even MS OneDrive does.  Therefore a big reason why to use AppLocker.\n\nWhat you are basically telling me is that in my current state, I should consider Firefox unstable, so I need to get those DLLs whitelisted.  I have tried a publisher rule like this:\nPublisher: O=MOZILLA CORPORATION, L=MOUNTAIN VIEW, S=CALIFORNIA, C=US\nProduct name: *\nFile name: *\nFile version: *\n\nAnd the DLLs are still blocked.  Does anyone know if these files are digitally signed by anyone?  I am going to test hash rules next, but I don't like the prospect of chasing my tail every time the files are updated.  This is also not a straightforward process as I have to retrieve the hash from the log, then manually edit the AppLocker xml because the files disappear too quickly to get a copy.", "attachment_id": null, "id": 14028566, "count": 15, "creator": "taylor.dixon@kimballmidwest.com", "is_private": false, "time": "2019-04-02T18:19:24Z", "tags": [], "bug_id": 709738, "text": "Thanks for the response, Matt.  I can't speak to NSIS as I have no experience there, but I don't think they are running as admin.  If they were, AppLocker would be allowing them based off the default rule set.  As well, I know that Firefox allows a non-administrative user to install the entire application in their AppData.  So in that case, how would an administrative hook for maintenance purposes ever get created?  That is beside the point really.  I have come to accept that certain programs are going to install in this manner, even MS OneDrive does.  Therefore a big reason why to use AppLocker.\n\nWhat you are basically telling me is that in my current state, I should consider Firefox unstable, so I need to get those DLLs whitelisted.  I have tried a publisher rule like this:\nPublisher: O=MOZILLA CORPORATION, L=MOUNTAIN VIEW, S=CALIFORNIA, C=US\nProduct name: *\nFile name: *\nFile version: *\n\nAnd the DLLs are still blocked.  Does anyone know if these files are digitally signed by anyone?  I am going to test hash rules next, but I don't like the prospect of chasing my tail every time the files are updated.  This is also not a straightforward process as I have to retrieve the hash from the log, then manually edit the AppLocker xml because the files disappear too quickly to get a copy.", "author": "taylor.dixon@kimballmidwest.com", "creation_time": "2019-04-02T18:19:24Z"}, {"raw_text": "My initial report is not on install or upgrade (users are not allowed to do that in a controlled environment) but upon selecting Firefox as their default browser. That should not require running EXE's and DLL's from %TEMP% at all. If EXE's and DLL's are required for this task please load them from %PROGRAMFILES%.", "attachment_id": null, "id": 14028630, "count": 16, "creator": "richard@vdberg.org", "is_private": false, "bug_id": 709738, "time": "2019-04-02T18:43:21Z", "tags": [], "text": "My initial report is not on install or upgrade (users are not allowed to do that in a controlled environment) but upon selecting Firefox as their default browser. That should not require running EXE's and DLL's from %TEMP% at all. If EXE's and DLL's are required for this task please load them from %PROGRAMFILES%.", "author": "richard@vdberg.org", "creation_time": "2019-04-02T18:43:21Z"}, {"id": 14133254, "attachment_id": null, "raw_text": "", "author": "mhowell@mozilla.com", "creation_time": "2019-05-22T15:20:12Z", "time": "2019-05-22T15:20:12Z", "tags": [], "bug_id": 709738, "text": "*** Bug 1553415 has been marked as a duplicate of this bug. ***", "creator": "mhowell@mozilla.com", "is_private": false, "count": 17}]}}, "comments": {}}