{"bugs": {"627047": {"comments": [{"tags": [], "author": "honzab.moz@firemni.cz", "attachment_id": null, "bug_id": 627047, "raw_text": "Not sure this is a valid bug, if this is not something very special in the spec, but the file I attach will popup the \"This website (%S) is asking to store data on your computer for offline use\" prompt, even it doesn't have a manifest defined on the root html element.\n\nIt happens because condition on line [1] is true (the manifest attribute is present in the array of attributes of the html root element).\n\n[1] http://hg.mozilla.org/mozilla-central/annotate/809aded51aad/content/base/src/nsDocument.cpp#l4185", "count": 0, "creator": "honzab.moz@firemni.cz", "creation_time": "2011-01-19T17:01:10Z", "is_private": false, "id": 5210675, "text": "Not sure this is a valid bug, if this is not something very special in the spec, but the file I attach will popup the \"This website (%S) is asking to store data on your computer for offline use\" prompt, even it doesn't have a manifest defined on the root html element.\n\nIt happens because condition on line [1] is true (the manifest attribute is present in the array of attributes of the html root element).\n\n[1] http://hg.mozilla.org/mozilla-central/annotate/809aded51aad/content/base/src/nsDocument.cpp#l4185", "time": "2011-01-19T17:01:10Z"}, {"is_private": false, "time": "2011-01-19T17:01:58Z", "id": 5210677, "raw_text": "", "text": "Created attachment 505082\nTest case", "count": 1, "author": "honzab.moz@firemni.cz", "creator": "honzab.moz@firemni.cz", "tags": [], "creation_time": "2011-01-19T17:01:58Z", "bug_id": 627047, "attachment_id": 505082}, {"bug_id": 627047, "attachment_id": null, "author": "bzbarsky@mit.edu", "tags": [], "count": 2, "raw_text": "Yeah, this is the behavior the spec requires.  Attributes on later <body> and <html> are moved to the \"canonical\" <body> and <html>.  Websites actually depend on that.   :(", "creation_time": "2011-01-19T17:52:15Z", "creator": "bzbarsky@mit.edu", "time": "2011-01-19T17:52:15Z", "text": "Yeah, this is the behavior the spec requires.  Attributes on later <body> and <html> are moved to the \"canonical\" <body> and <html>.  Websites actually depend on that.   :(", "id": 5210850, "is_private": false}, {"bug_id": 627047, "attachment_id": null, "author": "honzab.moz@firemni.cz", "tags": [], "count": 3, "raw_text": "Ah, OK, then INVALIDATING this.  It just really surprised me...", "creation_time": "2011-01-19T18:06:00Z", "creator": "honzab.moz@firemni.cz", "is_private": false, "time": "2011-01-19T18:06:00Z", "text": "Ah, OK, then INVALIDATING this.  It just really surprised me...", "id": 5210909}, {"author": "hsivonen@mozilla.com", "tags": [], "bug_id": 627047, "attachment_id": null, "raw_text": "(In reply to comment #2)\n> Yeah, this is the behavior the spec requires.  Attributes on later <body> and\n> <html> are moved to the \"canonical\" <body> and <html>.\n\nBut that case isn't supposed to run the cache selection algorithm. Only the normal case runs it:\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#the-before-html-insertion-mode", "count": 4, "creator": "hsivonen@mozilla.com", "creation_time": "2011-01-20T10:38:28Z", "time": "2011-01-20T10:38:28Z", "text": "(In reply to comment #2)\n> Yeah, this is the behavior the spec requires.  Attributes on later <body> and\n> <html> are moved to the \"canonical\" <body> and <html>.\n\nBut that case isn't supposed to run the cache selection algorithm. Only the normal case runs it:\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#the-before-html-insertion-mode", "id": 5213146, "is_private": false}, {"author": "bzbarsky@mit.edu", "tags": [], "bug_id": 627047, "attachment_id": null, "raw_text": "The cache selection kickoff doesn't happen in network....", "count": 5, "creator": "bzbarsky@mit.edu", "creation_time": "2011-01-20T14:49:48Z", "time": "2011-01-20T14:49:48Z", "id": 5213413, "text": "The cache selection kickoff doesn't happen in network....", "is_private": false}, {"time": "2011-01-20T14:53:44Z", "text": "And in fact, it happens in the parser when it calls ProcessOfflineManifest, no?", "id": 5213419, "is_private": false, "creator": "bzbarsky@mit.edu", "creation_time": "2011-01-20T14:53:44Z", "raw_text": "And in fact, it happens in the parser when it calls ProcessOfflineManifest, no?", "count": 6, "author": "bzbarsky@mit.edu", "tags": [], "bug_id": 627047, "attachment_id": null}, {"count": 7, "time": "2011-01-21T03:19:23Z", "id": 5215851, "text": "It's scheduled in ProcessOfflineManifest to happen after document load (on STATE_STOP state flag).\n\n\nAnd I can confirm an update is triggered by the test case.", "raw_text": "It's scheduled in ProcessOfflineManifest to happen after document load (on STATE_STOP state flag).\n\n\nAnd I can confirm an update is triggered by the test case.", "is_private": false, "bug_id": 627047, "attachment_id": null, "creation_time": "2011-01-21T03:19:23Z", "author": "honzab.moz@firemni.cz", "creator": "honzab.moz@firemni.cz", "tags": []}, {"is_private": false, "text": "If it happens after document load, then the DOM code certainly has no idea where the attr value came from... (not that it ever does, really).  Honza, does ProcessOfflineManifest happen early enough?  Should we be caching the then-current value of the attribute when it happens?", "id": 5215887, "time": "2011-01-21T03:40:43Z", "creation_time": "2011-01-21T03:40:43Z", "creator": "bzbarsky@mit.edu", "count": 8, "raw_text": "If it happens after document load, then the DOM code certainly has no idea where the attr value came from... (not that it ever does, really).  Honza, does ProcessOfflineManifest happen early enough?  Should we be caching the then-current value of the attribute when it happens?", "attachment_id": null, "bug_id": 627047, "tags": [], "author": "bzbarsky@mit.edu"}, {"author": "hsivonen@mozilla.com", "creator": "hsivonen@mozilla.com", "tags": [], "creation_time": "2011-01-21T12:28:35Z", "bug_id": 627047, "attachment_id": null, "is_private": false, "time": "2011-01-21T12:28:35Z", "raw_text": "(In reply to comment #8)\n> If it happens after document load, then the DOM code certainly has no idea\n> where the attr value came from...\n\nThe DOM code should pay no attention to the attribute:\nhttp://www.whatwg.org/specs/web-apps/current-work/#attr-html-manifest\n\nThe only way to register a manifest should be via nsContentSink as called by the parser.", "text": "(In reply to comment #8)\n> If it happens after document load, then the DOM code certainly has no idea\n> where the attr value came from...\n\nThe DOM code should pay no attention to the attribute:\nhttp://www.whatwg.org/specs/web-apps/current-work/#attr-html-manifest\n\nThe only way to register a manifest should be via nsContentSink as called by the parser.", "id": 5216499, "count": 9}, {"author": "honzab.moz@firemni.cz", "tags": [], "bug_id": 627047, "attachment_id": null, "raw_text": "(In reply to comment #9)\n> The DOM code should pay no attention to the attribute:\n> http://www.whatwg.org/specs/web-apps/current-work/#attr-html-manifest\n\nNot sure what you mean.  The spec says the attribute cannot be later changed by js code (dynamically).  But in this case the modification comes from the parser.\n\n(In reply to comment #8)\n> Honza, does\n> ProcessOfflineManifest happen early enough?  \n\nIt is, AFAIK, sequentially processed with other html/dom nodes and attributes coming.  So we could say it is early enough.  But, ProcessOfflineManifest is not called in case there is no manifest attrib at all.\n\n> Should we be caching the\n> then-current value of the attribute when it happens?\n\nI'd say we should \"close\" modifications to this attribute after we process the first occurrence of the <html> opening tag.  This may happen in the parser or content sink, if it has knowledge of finishing <html> opening tag processing.\n\n\nBut, as noted above, the spec allows more then one occurrence of the <html> tag.  So the question is, if we should rather allow the manifest attribute processing on the second (third, etc.) occurrence of the <html> tag.  This is not against the offline application selection algorithm spec, at least I don't about anything we break with allowing it.  We are only missing a protection against multiple occurrences of the manifest attribute.", "count": 10, "creator": "honzab.moz@firemni.cz", "creation_time": "2011-01-23T20:29:08Z", "is_private": false, "time": "2011-01-23T20:29:08Z", "text": "(In reply to comment #9)\n> The DOM code should pay no attention to the attribute:\n> http://www.whatwg.org/specs/web-apps/current-work/#attr-html-manifest\n\nNot sure what you mean.  The spec says the attribute cannot be later changed by js code (dynamically).  But in this case the modification comes from the parser.\n\n(In reply to comment #8)\n> Honza, does\n> ProcessOfflineManifest happen early enough?  \n\nIt is, AFAIK, sequentially processed with other html/dom nodes and attributes coming.  So we could say it is early enough.  But, ProcessOfflineManifest is not called in case there is no manifest attrib at all.\n\n> Should we be caching the\n> then-current value of the attribute when it happens?\n\nI'd say we should \"close\" modifications to this attribute after we process the first occurrence of the <html> opening tag.  This may happen in the parser or content sink, if it has knowledge of finishing <html> opening tag processing.\n\n\nBut, as noted above, the spec allows more then one occurrence of the <html> tag.  So the question is, if we should rather allow the manifest attribute processing on the second (third, etc.) occurrence of the <html> tag.  This is not against the offline application selection algorithm spec, at least I don't about anything we break with allowing it.  We are only missing a protection against multiple occurrences of the manifest attribute.", "id": 5220679}, {"creator": "bzbarsky@mit.edu", "creation_time": "2011-01-26T04:42:57Z", "text": "> But in this case the modification comes from the parser.\n\nHow do we tell the two apart?  And why?\n\n> This may happen in the parser or content sink, if it has knowledge of finishing\n> <html> opening tag processing.\n\nIt does, sure....\n\n> But, as noted above, the spec allows more then one occurrence\n\nSee comment 4.\n\nIt really sounds like the cache selection code is not running at the time the spec says to run it, which is why we run into this problem.", "id": 5227749, "time": "2011-01-26T04:42:57Z", "is_private": false, "tags": [], "author": "bzbarsky@mit.edu", "attachment_id": null, "bug_id": 627047, "raw_text": "> But in this case the modification comes from the parser.\n\nHow do we tell the two apart?  And why?\n\n> This may happen in the parser or content sink, if it has knowledge of finishing\n> <html> opening tag processing.\n\nIt does, sure....\n\n> But, as noted above, the spec allows more then one occurrence\n\nSee comment 4.\n\nIt really sounds like the cache selection code is not running at the time the spec says to run it, which is why we run into this problem.", "count": 11}, {"id": 5230135, "text": "Now I understand.  We call the cache selection algorithm also for other occurrences of opening html tag.  Does HTMLContentSink::OpenContainer know we are in state other then \"before html\"?  If so, we can just bypass call to ProcessOfflineManifest() that is actually the cache selection algorithm implementation.\n\nWhen html opening tag is found during state \"in body\", the attributes have to be merged, we do that correctly.  However, that leads to the prompt for offline apps privileges.", "time": "2011-01-26T22:44:54Z", "is_private": false, "creator": "honzab.moz@firemni.cz", "creation_time": "2011-01-26T22:44:54Z", "raw_text": "Now I understand.  We call the cache selection algorithm also for other occurrences of opening html tag.  Does HTMLContentSink::OpenContainer know we are in state other then \"before html\"?  If so, we can just bypass call to ProcessOfflineManifest() that is actually the cache selection algorithm implementation.\n\nWhen html opening tag is found during state \"in body\", the attributes have to be merged, we do that correctly.  However, that leads to the prompt for offline apps privileges.", "count": 12, "tags": [], "author": "honzab.moz@firemni.cz", "attachment_id": null, "bug_id": 627047}, {"tags": [], "author": "honzab.moz@firemni.cz", "attachment_id": null, "bug_id": 627047, "raw_text": "It means: I would expect the prompt will raise only when there is a valid manifest attribute value on the first occurrence of the html tag.  Other occurrences, even empty, should not be considering to pop the prompt up.", "count": 13, "creator": "honzab.moz@firemni.cz", "creation_time": "2011-01-26T22:48:23Z", "is_private": false, "id": 5230154, "text": "It means: I would expect the prompt will raise only when there is a valid manifest attribute value on the first occurrence of the html tag.  Other occurrences, even empty, should not be considering to pop the prompt up.", "time": "2011-01-26T22:48:23Z"}, {"raw_text": "With the HTML5 parser we shouldn't be ending up in HTMLContentSink::OpenContainer....", "count": 14, "author": "bzbarsky@mit.edu", "tags": [], "bug_id": 627047, "attachment_id": null, "is_private": false, "time": "2011-01-27T02:12:30Z", "text": "With the HTML5 parser we shouldn't be ending up in HTMLContentSink::OpenContainer....", "id": 5230851, "creator": "bzbarsky@mit.edu", "creation_time": "2011-01-27T02:12:30Z"}, {"author": "hsivonen@mozilla.com", "tags": [], "creator": "hsivonen@mozilla.com", "creation_time": "2011-01-31T08:24:32Z", "bug_id": 627047, "attachment_id": null, "is_private": false, "time": "2011-01-31T08:24:32Z", "raw_text": "So per spec:\n 1) The content tree should never trigger the cache selection algorithm.\n 2) The parser should trigger the cache selection algorithm but only when it is actually creating the root element (*not* when it sees an <html> token later).", "text": "So per spec:\n 1) The content tree should never trigger the cache selection algorithm.\n 2) The parser should trigger the cache selection algorithm but only when it is actually creating the root element (*not* when it sees an <html> token later).", "id": 5239354, "count": 15}, {"raw_text": "Henri, did you mean to change the component and target milestone?", "count": 16, "author": "bzbarsky@mit.edu", "tags": [], "bug_id": 627047, "attachment_id": null, "is_private": false, "time": "2011-01-31T13:13:14Z", "id": 5239579, "text": "Henri, did you mean to change the component and target milestone?", "creator": "bzbarsky@mit.edu", "creation_time": "2011-01-31T13:13:14Z"}, {"count": 17, "is_private": false, "time": "2011-01-31T14:04:04Z", "raw_text": "(In reply to comment #16)\n> Henri, did you mean to change the component and target milestone?\n\nNo. And this isn't the first time Minefield has spontaneously changed Bugzilla components for me. I wonder what exactly makes this happen.", "text": "(In reply to comment #16)\n> Henri, did you mean to change the component and target milestone?\n\nNo. And this isn't the first time Minefield has spontaneously changed Bugzilla components for me. I wonder what exactly makes this happen.", "id": 5239664, "creation_time": "2011-01-31T14:04:04Z", "bug_id": 627047, "attachment_id": null, "author": "hsivonen@mozilla.com", "creator": "hsivonen@mozilla.com", "tags": []}, {"tags": [], "author": "hsivonen@mozilla.com", "attachment_id": null, "bug_id": 627047, "raw_text": "(In reply to comment #0)\n> It happens because condition on line [1] is true (the manifest attribute is\n> present in the array of attributes of the html root element).\n> \n> [1]\n> http://hg.mozilla.org/mozilla-central/annotate/809aded51aad/content/base/src/nsDocument.cpp#l4185\n\nThat's where the bug is. That code shouldn't be reading the attributes. Instead, nsContentSink::ProcessOfflineManifest should set a flag on nsIDocument and then that code should check the flag.", "count": 18, "creator": "hsivonen@mozilla.com", "creation_time": "2011-01-31T15:48:18Z", "id": 5239845, "text": "(In reply to comment #0)\n> It happens because condition on line [1] is true (the manifest attribute is\n> present in the array of attributes of the html root element).\n> \n> [1]\n> http://hg.mozilla.org/mozilla-central/annotate/809aded51aad/content/base/src/nsDocument.cpp#l4185\n\nThat's where the bug is. That code shouldn't be reading the attributes. Instead, nsContentSink::ProcessOfflineManifest should set a flag on nsIDocument and then that code should check the flag.", "time": "2011-01-31T15:48:18Z", "is_private": false}, {"attachment_id": 508408, "bug_id": 627047, "tags": [], "author": "hsivonen@mozilla.com", "count": 19, "raw_text": "Hasn't been through the tryserver yet.", "creation_time": "2011-01-31T16:12:58Z", "creator": "hsivonen@mozilla.com", "is_private": false, "text": "Created attachment 508408\nFirst attempt at a fix\n\nHasn't been through the tryserver yet.", "id": 5239898, "time": "2011-01-31T16:12:58Z"}, {"tags": [], "creator": "honzab.moz@firemni.cz", "author": "honzab.moz@firemni.cz", "creation_time": "2011-01-31T18:05:15Z", "attachment_id": 508408, "bug_id": 627047, "is_private": false, "text": "Comment on attachment 508408\nFirst attempt at a fix\n\nThis is fix for one part of the problem.  We also have to bypass nsContentSink::ProcessOfflineManifest when this new flag has been set (to not trigger the cache selection algorithm again).  Also please don't forget to initialize it in all constructors of nsContentSink.", "id": 5240223, "raw_text": "This is fix for one part of the problem.  We also have to bypass nsContentSink::ProcessOfflineManifest when this new flag has been set (to not trigger the cache selection algorithm again).  Also please don't forget to initialize it in all constructors of nsContentSink.", "time": "2011-01-31T18:05:15Z", "count": 20}, {"author": "hsivonen@mozilla.com", "tags": [], "bug_id": 627047, "attachment_id": null, "raw_text": "(In reply to comment #20)\n> Comment on attachment 508408 [details]\n> First attempt at a fix\n> \n> This is fix for one part of the problem.  We also have to bypass\n> nsContentSink::ProcessOfflineManifest when this new flag has been set (to not\n> trigger the cache selection algorithm again).\n\nI believe the HTML parser calls nsContentSink::ProcessOfflineManifest at most once. (Might be worth adding an assertion to that effect.)\n\nI didn't check what the XML content sink does. I'll check.\n\n> Also please don't forget to\n> initialize it in all constructors of nsContentSink.\n\nDid you mean the constructor of nsIDocument? I didn't add anything to the constructor there, because the class seemed to have zeroing operator new.", "count": 21, "creator": "hsivonen@mozilla.com", "creation_time": "2011-02-01T11:09:49Z", "is_private": false, "time": "2011-02-01T11:09:49Z", "text": "(In reply to comment #20)\n> Comment on attachment 508408 [details]\n> First attempt at a fix\n> \n> This is fix for one part of the problem.  We also have to bypass\n> nsContentSink::ProcessOfflineManifest when this new flag has been set (to not\n> trigger the cache selection algorithm again).\n\nI believe the HTML parser calls nsContentSink::ProcessOfflineManifest at most once. (Might be worth adding an assertion to that effect.)\n\nI didn't check what the XML content sink does. I'll check.\n\n> Also please don't forget to\n> initialize it in all constructors of nsContentSink.\n\nDid you mean the constructor of nsIDocument? I didn't add anything to the constructor there, because the class seemed to have zeroing operator new.", "id": 5242432}, {"count": 22, "raw_text": "(In reply to comment #21)\n> I didn't check what the XML content sink does. I'll check.\n\nLooks OK.\n\nHowever, on tryserver, these two fail:\n1095 ERROR TEST-UNEXPECTED-FAIL | /tests/browser/base/content/test/test_offlineNotification.html | [SimpleTest/SimpleTest.js, window.onerror] An error occurred - notification is null at http://mochi.test:8888/tests/browser/base/content/test/test_offlineNotification.html:108\n1098 ERROR TEST-UNEXPECTED-FAIL | /tests/browser/base/content/test/test_offline_gzip.html | [SimpleTest/SimpleTest.js, window.onerror] An error occurred - notification is null at http://mochi.test:8888/tests/browser/base/content/test/test_offline_gzip.html:107\n\nNot sure yet why the tests don't see the notification bar.", "bug_id": 627047, "attachment_id": null, "author": "hsivonen@mozilla.com", "tags": [], "time": "2011-02-01T16:47:02Z", "text": "(In reply to comment #21)\n> I didn't check what the XML content sink does. I'll check.\n\nLooks OK.\n\nHowever, on tryserver, these two fail:\n1095 ERROR TEST-UNEXPECTED-FAIL | /tests/browser/base/content/test/test_offlineNotification.html | [SimpleTest/SimpleTest.js, window.onerror] An error occurred - notification is null at http://mochi.test:8888/tests/browser/base/content/test/test_offlineNotification.html:108\n1098 ERROR TEST-UNEXPECTED-FAIL | /tests/browser/base/content/test/test_offline_gzip.html | [SimpleTest/SimpleTest.js, window.onerror] An error occurred - notification is null at http://mochi.test:8888/tests/browser/base/content/test/test_offline_gzip.html:107\n\nNot sure yet why the tests don't see the notification bar.", "id": 5243025, "is_private": false, "creation_time": "2011-02-01T16:47:02Z", "creator": "hsivonen@mozilla.com"}, {"raw_text": "(In reply to comment #22)\n> Not sure yet why the tests don't see the notification bar.\n\nI've seen this also when I broke scheduleUpdate of nsOfflineCacheUpdateService.  But your case might be different.\n\n\n\n(In reply to comment #21)\n> I believe the HTML parser calls nsContentSink::ProcessOfflineManifest at most\n> once. (Might be worth adding an assertion to that effect.)\n\nI was testing that and I think it's called more then ones with the test case.  Worth to add an assertion.  I'll try this ones again my self anyway.", "count": 23, "author": "honzab.moz@firemni.cz", "tags": [], "bug_id": 627047, "attachment_id": null, "is_private": false, "time": "2011-02-01T20:08:20Z", "id": 5243789, "text": "(In reply to comment #22)\n> Not sure yet why the tests don't see the notification bar.\n\nI've seen this also when I broke scheduleUpdate of nsOfflineCacheUpdateService.  But your case might be different.\n\n\n\n(In reply to comment #21)\n> I believe the HTML parser calls nsContentSink::ProcessOfflineManifest at most\n> once. (Might be worth adding an assertion to that effect.)\n\nI was testing that and I think it's called more then ones with the test case.  Worth to add an assertion.  I'll try this ones again my self anyway.", "creator": "honzab.moz@firemni.cz", "creation_time": "2011-02-01T20:08:20Z"}, {"creator": "honzab.moz@firemni.cz", "creation_time": "2011-02-01T20:31:08Z", "is_private": false, "time": "2011-02-01T20:31:08Z", "id": 5243877, "text": "(In reply to comment #23)\n> I was testing that and I think it's called more then ones with the test case. \n> Worth to add an assertion.  I'll try this ones again my self anyway.\n\nOk, not with the attached test case, but with a test case modified like this:\n\n<!DOCTYPE html>\n<html manifest=\"manifest.cacheManifest\">\n  <body>\n    <html manifest=\"manifest.cacheManifest\">\n..\n\nI get three (3) calls to nsContentSink::ProcessOfflineManifest, all of them invoke an update.", "author": "honzab.moz@firemni.cz", "tags": [], "bug_id": 627047, "attachment_id": null, "raw_text": "(In reply to comment #23)\n> I was testing that and I think it's called more then ones with the test case. \n> Worth to add an assertion.  I'll try this ones again my self anyway.\n\nOk, not with the attached test case, but with a test case modified like this:\n\n<!DOCTYPE html>\n<html manifest=\"manifest.cacheManifest\">\n  <body>\n    <html manifest=\"manifest.cacheManifest\">\n..\n\nI get three (3) calls to nsContentSink::ProcessOfflineManifest, all of them invoke an update.", "count": 24}, {"tags": [], "author": "hsivonen@mozilla.com", "attachment_id": null, "bug_id": 627047, "raw_text": "Leaving this open until AppCache is removed but not actively working on this.", "count": 25, "creator": "hsivonen@mozilla.com", "creation_time": "2018-09-27T12:50:21Z", "is_private": false, "text": "Leaving this open until AppCache is removed but not actively working on this.", "id": 13644897, "time": "2018-09-27T12:50:21Z"}]}}, "comments": {}}