{"comments": {}, "bugs": {"713532": {"comments": [{"attachment_id": null, "raw_text": "http://hakim.se/experiments/css/domtree/ is very smooth in Chrome but is 1-2 fps in Firefox. I see a lot of calls to widget and Cairo in the profile, so it looks like we aren't layerizing enough.", "time": "2011-12-26T16:51:14Z", "tags": [], "author": "pwalton@mozilla.com", "text": "http://hakim.se/experiments/css/domtree/ is very smooth in Chrome but is 1-2 fps in Firefox. I see a lot of calls to widget and Cairo in the profile, so it looks like we aren't layerizing enough.", "count": 0, "creator": "pwalton@mozilla.com", "creation_time": "2011-12-26T16:51:14Z", "is_private": false, "bug_id": 713532, "id": 5940009}, {"author": "ryanvm@gmail.com", "text": "Crappy on Windows w/ D2D as well.", "count": 1, "bug_id": 713532, "id": 5940289, "raw_text": "Crappy on Windows w/ D2D as well.", "time": "2011-12-27T00:27:07Z", "creator": "ryanvm@gmail.com", "is_private": false, "creation_time": "2011-12-27T00:27:07Z", "attachment_id": null, "tags": []}, {"id": 5942200, "bug_id": 713532, "is_private": false, "creation_time": "2011-12-28T04:09:56Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "count": 2, "text": "Chrome renders it incorrectly. Notice that the radio buttons have a white square background in Chrome, which shouldn't be there. In Firefox the radio buttons are correctly transparent outside the button. That may have something to do with it...", "tags": [], "time": "2011-12-28T04:09:56Z", "attachment_id": null, "raw_text": "Chrome renders it incorrectly. Notice that the radio buttons have a white square background in Chrome, which shouldn't be there. In Firefox the radio buttons are correctly transparent outside the button. That may have something to do with it..."}, {"tags": [], "raw_text": "Did a profile on Windows.\n\n4% reresolving style.\n7% doing reflows. That would be improved by bug 524925.\nAt least 83% painting:\n  5% building display lists\n  9% optimizing display lists\n  12% building layer tree\n    mostly in nsIntRegion::Or called by ProcessDisplayItems, that needs more investigation\n  48% in EndTransaction\n    46% in ThebesLayerD3D10::DrawRegion\n      22% in nsNativeThemeWin::DrawWidgetBackground, which does a whole bunch of temporary surface stuff, especially filling them, plus actual theme drawing. Surprisingly less than 1% in actual alpha recovery computation.\n      11% flushing while destroying gfxContexts. Probably because we have a lot of layers and they're small so flushing for each layer really hurts\n  At least 9% in the Nvidia driver doing who knows what\n\nMaybe some of the layer invalidation is unnecessary and could be avoided, but a lot of the widgets in the tree are animated so must be rerendered.\n\nOMTC with animation would really help here since the animation would be smooth, even if the widget contents updated at a lower rate.", "attachment_id": null, "time": "2011-12-28T05:47:22Z", "creation_time": "2011-12-28T05:47:22Z", "is_private": false, "bug_id": 713532, "id": 5942275, "text": "Did a profile on Windows.\n\n4% reresolving style.\n7% doing reflows. That would be improved by bug 524925.\nAt least 83% painting:\n  5% building display lists\n  9% optimizing display lists\n  12% building layer tree\n    mostly in nsIntRegion::Or called by ProcessDisplayItems, that needs more investigation\n  48% in EndTransaction\n    46% in ThebesLayerD3D10::DrawRegion\n      22% in nsNativeThemeWin::DrawWidgetBackground, which does a whole bunch of temporary surface stuff, especially filling them, plus actual theme drawing. Surprisingly less than 1% in actual alpha recovery computation.\n      11% flushing while destroying gfxContexts. Probably because we have a lot of layers and they're small so flushing for each layer really hurts\n  At least 9% in the Nvidia driver doing who knows what\n\nMaybe some of the layer invalidation is unnecessary and could be avoided, but a lot of the widgets in the tree are animated so must be rerendered.\n\nOMTC with animation would really help here since the animation would be smooth, even if the widget contents updated at a lower rate.", "count": 3, "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org"}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-12-28T05:51:28Z", "creator": "roc@ocallahan.org", "time": "2011-12-28T05:51:28Z", "raw_text": "Bas, I wonder if the D2D flush we do in ThebesLayerD3D10::DrawRegion destroying the gfxContext(s) could be deferred somehow? Seems like we don't actually need the flush to complete until we actually reach RenderLayer?", "id": 5942279, "bug_id": 713532, "text": "Bas, I wonder if the D2D flush we do in ThebesLayerD3D10::DrawRegion destroying the gfxContext(s) could be deferred somehow? Seems like we don't actually need the flush to complete until we actually reach RenderLayer?", "count": 4, "author": "roc@ocallahan.org"}, {"time": "2011-12-30T03:53:47Z", "raw_text": "Many of the layers use component alpha, which is dumb since we're transforming those layers in ways that will mess up the assumptions behind component alpha. Basically we should not use component alpha when the effective transform is not just a translation. That would make the content look better and speed things up.", "bug_id": 713532, "id": 5946367, "author": "roc@ocallahan.org", "count": 5, "text": "Many of the layers use component alpha, which is dumb since we're transforming those layers in ways that will mess up the assumptions behind component alpha. Basically we should not use component alpha when the effective transform is not just a translation. That would make the content look better and speed things up.", "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-12-30T03:53:47Z", "creator": "roc@ocallahan.org"}, {"creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #4)\n> Bas, I wonder if the D2D flush we do in ThebesLayerD3D10::DrawRegion\n> destroying the gfxContext(s) could be deferred somehow?\n\nBas explained that this wouldn't help. There's no way to avoid the D2D flush work being performed on the thread where we call it.", "count": 6, "bug_id": 713532, "id": 5946416, "creation_time": "2011-12-30T04:35:06Z", "is_private": false, "time": "2011-12-30T04:35:06Z", "attachment_id": null, "raw_text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #4)\n> Bas, I wonder if the D2D flush we do in ThebesLayerD3D10::DrawRegion\n> destroying the gfxContext(s) could be deferred somehow?\n\nBas explained that this wouldn't help. There's no way to avoid the D2D flush work being performed on the thread where we call it.", "tags": []}, {"tags": [], "attachment_id": 584916, "raw_text": "", "time": "2011-12-30T04:41:30Z", "creation_time": "2011-12-30T04:41:30Z", "is_private": false, "bug_id": 713532, "id": 5946419, "author": "roc@ocallahan.org", "text": "Created attachment 584916\npart 1: disable component alpha when ancestor layers have non-integer-translation transforms", "count": 7, "creator": "roc@ocallahan.org"}, {"author": "roc@ocallahan.org", "text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #2)\n> Chrome renders it incorrectly.\n\nThat was on Windows BTW. Mac might well be different since Quartz can draw to transparent surfaces sanely.\n\nSome of the performance issues here are likely to be platform-specific.", "count": 8, "creator": "roc@ocallahan.org", "is_private": false, "creation_time": "2011-12-30T05:17:27Z", "bug_id": 713532, "id": 5946440, "attachment_id": null, "raw_text": "(In reply to Robert O'Callahan (:roc) (Mozilla Corporation) from comment #2)\n> Chrome renders it incorrectly.\n\nThat was on Windows BTW. Mac might well be different since Quartz can draw to transparent surfaces sanely.\n\nSome of the performance issues here are likely to be platform-specific.", "time": "2011-12-30T05:17:27Z", "tags": []}, {"creator": "roc@ocallahan.org", "creation_time": "2011-12-30T07:08:10Z", "is_private": false, "attachment_id": 584921, "tags": [], "count": 9, "text": "Created attachment 584921\npart 1 v2\n\nI decided to redo this patch as an explicit control for subpixel AA. It seems clearer. Also, only disable subpixel AA for descendants of transformed *retained* layers. Temporary nonretained layers don't need to disable subpixel AA since we won't use transformed intermediate buffers for them in general.", "author": "roc@ocallahan.org", "bug_id": 713532, "id": 5946511, "raw_text": "I decided to redo this patch as an explicit control for subpixel AA. It seems clearer. Also, only disable subpixel AA for descendants of transformed *retained* layers. Temporary nonretained layers don't need to disable subpixel AA since we won't use transformed intermediate buffers for them in general.", "time": "2011-12-30T07:08:10Z"}, {"raw_text": "I think this helps but I haven't verified it yet.", "time": "2011-12-30T13:26:25Z", "author": "roc@ocallahan.org", "count": 10, "text": "Created attachment 584946\nPart 2: add surface cache for gfxWindowsNativeDrawing\n\nI think this helps but I haven't verified it yet.", "bug_id": 713532, "id": 5946737, "attachment_id": 584946, "tags": [], "creator": "roc@ocallahan.org", "creation_time": "2011-12-30T13:26:25Z", "is_private": false}, {"creator": "roc@ocallahan.org", "creation_time": "2011-12-30T13:27:22Z", "is_private": false, "attachment_id": 584947, "tags": [], "author": "roc@ocallahan.org", "text": "Created attachment 584947\nPart 3: use SimplifyOutward to avoid regions getting too complex\n\nThis fixes the layer construction hotspot that I mentioned in comment #3.", "count": 11, "bug_id": 713532, "id": 5946739, "raw_text": "This fixes the layer construction hotspot that I mentioned in comment #3.", "time": "2011-12-30T13:27:22Z"}, {"id": 5946743, "bug_id": 713532, "is_private": false, "creation_time": "2011-12-30T13:28:50Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "count": 12, "text": "I noticed that we're frequently repainting layers containing only form elements such as checkboxes and textfields that aren't animated so shouldn't need to be repainted. I'll look into that next.", "tags": [], "time": "2011-12-30T13:28:50Z", "attachment_id": null, "raw_text": "I noticed that we're frequently repainting layers containing only form elements such as checkboxes and textfields that aren't animated so shouldn't need to be repainted. I'll look into that next."}, {"id": 5946759, "bug_id": 713532, "author": "roc@ocallahan.org", "text": "That's happening because when the transform for the checkbox etc changes, its overflow area relative to its parent block changes, which changes the line overflow area, which nsBlockFrame::ReflowLine uses as a cue to invalidate the frame subtree for all the frames on the line...\n\nBug 524925 would avoid that. We need to focus on getting that finished and landed, then revisit this to see how we're doing. Patches 1 and 3 at least are still good though.", "count": 13, "raw_text": "That's happening because when the transform for the checkbox etc changes, its overflow area relative to its parent block changes, which changes the line overflow area, which nsBlockFrame::ReflowLine uses as a cue to invalidate the frame subtree for all the frames on the line...\n\nBug 524925 would avoid that. We need to focus on getting that finished and landed, then revisit this to see how we're doing. Patches 1 and 3 at least are still good though.", "time": "2011-12-30T13:51:22Z", "creation_time": "2011-12-30T13:51:22Z", "is_private": false, "creator": "roc@ocallahan.org", "tags": [], "attachment_id": null}, {"tags": [], "attachment_id": 584947, "raw_text": ">     /**\n>      * The region containing the bounds of all display items in the layer,\n>      * regardless of visbility.\n>      * Same coordinate system as mVisibleRegion.\n>+     * This is a conservative approximation: it contains the true region.\n>      */\n>     nsIntRegion  mDrawRegion;\n\nThis comment is on mDrawRegion not mDrawAboveRegion.\n\nSo this patch could have negative consequences in ContainerState::FindOpaqueBackgroundColorFor where if we fluff out the region we may fail to find an opaque background color and in ContainerState::FindThebesLayerFor where we may create more thebes layers due to a fluffed out region. Do we think this is a reasonable trade off to take?", "time": "2011-12-31T07:04:29Z", "creation_time": "2011-12-31T07:04:29Z", "is_private": false, "id": 5948165, "bug_id": 713532, "author": "tnikkel@gmail.com", "count": 14, "text": "Comment on attachment 584947\nPart 3: use SimplifyOutward to avoid regions getting too complex\n\n>     /**\n>      * The region containing the bounds of all display items in the layer,\n>      * regardless of visbility.\n>      * Same coordinate system as mVisibleRegion.\n>+     * This is a conservative approximation: it contains the true region.\n>      */\n>     nsIntRegion  mDrawRegion;\n\nThis comment is on mDrawRegion not mDrawAboveRegion.\n\nSo this patch could have negative consequences in ContainerState::FindOpaqueBackgroundColorFor where if we fluff out the region we may fail to find an opaque background color and in ContainerState::FindThebesLayerFor where we may create more thebes layers due to a fluffed out region. Do we think this is a reasonable trade off to take?", "creator": "tnikkel@gmail.com"}, {"time": "2011-12-31T08:54:00Z", "raw_text": "(In reply to Timothy Nikkel (:tn) from comment #14)\n> Comment on attachment 584947\n> Part 3: use SimplifyOutward to avoid regions getting too complex\n> \n> >     /**\n> >      * The region containing the bounds of all display items in the layer,\n> >      * regardless of visbility.\n> >      * Same coordinate system as mVisibleRegion.\n> >+     * This is a conservative approximation: it contains the true region.\n> >      */\n> >     nsIntRegion  mDrawRegion;\n> \n> This comment is on mDrawRegion not mDrawAboveRegion.\n\nI'll move it.\n\n> So this patch could have negative consequences in\n> ContainerState::FindOpaqueBackgroundColorFor where if we fluff out the\n> region we may fail to find an opaque background color and in\n> ContainerState::FindThebesLayerFor where we may create more thebes layers\n> due to a fluffed out region. Do we think this is a reasonable trade off to\n> take?\n\nWe have to take it, since otherwise we have O(N^2) behavior in ProcessDisplayItems.", "bug_id": 713532, "id": 5948201, "author": "roc@ocallahan.org", "text": "(In reply to Timothy Nikkel (:tn) from comment #14)\n> Comment on attachment 584947\n> Part 3: use SimplifyOutward to avoid regions getting too complex\n> \n> >     /**\n> >      * The region containing the bounds of all display items in the layer,\n> >      * regardless of visbility.\n> >      * Same coordinate system as mVisibleRegion.\n> >+     * This is a conservative approximation: it contains the true region.\n> >      */\n> >     nsIntRegion  mDrawRegion;\n> \n> This comment is on mDrawRegion not mDrawAboveRegion.\n\nI'll move it.\n\n> So this patch could have negative consequences in\n> ContainerState::FindOpaqueBackgroundColorFor where if we fluff out the\n> region we may fail to find an opaque background color and in\n> ContainerState::FindThebesLayerFor where we may create more thebes layers\n> due to a fluffed out region. Do we think this is a reasonable trade off to\n> take?\n\nWe have to take it, since otherwise we have O(N^2) behavior in ProcessDisplayItems.", "count": 15, "tags": [], "attachment_id": null, "creation_time": "2011-12-31T08:54:00Z", "is_private": false, "creator": "roc@ocallahan.org"}, {"attachment_id": null, "raw_text": "Landed the two reviewed patches:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/2ddeb63ac2d9\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/27cc07ec8b88\nMarked an UNEXPECTED-PASS test as passing:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7c9a9e02b08c\n\nThis bug is not fixed yet, please don't close after merging inbound.", "time": "2012-01-11T11:36:33Z", "tags": [], "author": "roc@ocallahan.org", "text": "Landed the two reviewed patches:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/2ddeb63ac2d9\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/27cc07ec8b88\nMarked an UNEXPECTED-PASS test as passing:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7c9a9e02b08c\n\nThis bug is not fixed yet, please don't close after merging inbound.", "count": 16, "creator": "roc@ocallahan.org", "creation_time": "2012-01-11T11:36:33Z", "is_private": false, "id": 5971638, "bug_id": 713532}, {"time": "2012-01-12T02:02:02Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/2ddeb63ac2d9\nhttps://hg.mozilla.org/mozilla-central/rev/27cc07ec8b88\nhttps://hg.mozilla.org/mozilla-central/rev/7c9a9e02b08c", "bug_id": 713532, "id": 5974236, "author": "emorley@mozilla.com", "text": "https://hg.mozilla.org/mozilla-central/rev/2ddeb63ac2d9\nhttps://hg.mozilla.org/mozilla-central/rev/27cc07ec8b88\nhttps://hg.mozilla.org/mozilla-central/rev/7c9a9e02b08c", "count": 17, "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2012-01-12T02:02:02Z", "creator": "emorley@mozilla.com"}, {"attachment_id": null, "tags": [], "creator": "roc@ocallahan.org", "creation_time": "2012-01-19T20:27:56Z", "is_private": false, "raw_text": "This is a lot faster now that bug 524925 has landed. It still slows down a lot when you move the mouse in the window.\n\nOff-main-thread CSS animation is probably the next big thing needed to make this smoother.", "time": "2012-01-19T20:27:56Z", "text": "This is a lot faster now that bug 524925 has landed. It still slows down a lot when you move the mouse in the window.\n\nOff-main-thread CSS animation is probably the next big thing needed to make this smoother.", "count": 18, "author": "roc@ocallahan.org", "bug_id": 713532, "id": 5993112}, {"creator": "guijoselito@gmail.com", "count": 19, "text": "Firefox uses a full core but it's smooth and pretty.\nChrome uses almost 2 cores, and the radio button has a white box background... very ugly.\nI'm on win7 HWA ON.", "author": "guijoselito@gmail.com", "id": 7827483, "bug_id": 713532, "creation_time": "2013-09-05T17:26:20Z", "is_private": false, "time": "2013-09-05T17:26:20Z", "raw_text": "Firefox uses a full core but it's smooth and pretty.\nChrome uses almost 2 cores, and the radio button has a white box background... very ugly.\nI'm on win7 HWA ON.", "attachment_id": null, "tags": []}]}}}