{"comments": {}, "bugs": {"698841": {"comments": [{"bug_id": 698841, "id": 5818663, "is_private": false, "creation_time": "2011-11-01T19:05:10Z", "creator": "jimb@mozilla.com", "author": "jimb@mozilla.com", "text": "In our remote debugging protocol client, packets arriving from the server all go through DC_onPacket. That function manages request/reply-style interactions, but also has special cases for the more complicated exchanges with thread actors. As other patterns appear in the protocol, DC_onPacket will become unweildy.\n\nInstead of having a single piece of code that understands all actors' patterns of communication, we should have a distinct client-side JS object acting as a 'front' for each actor. A front would be responsible for making sense of its actor's state, and providing a reasonable interface for UI widgets to interact with. The front will be the only thing that sends messages to its actor, and the front will handle all messages from the server for its actor. DC_onPacket should simply forward packets to the appropriate front.\n\nWe should create fronts only on demand. For example, the stack frame for a function call has a callee; the front for the stack frame should avoid creating a front for the callee until someone actually asks for it.", "count": 0, "tags": [], "time": "2011-11-01T19:05:10Z", "attachment_id": null, "raw_text": "In our remote debugging protocol client, packets arriving from the server all go through DC_onPacket. That function manages request/reply-style interactions, but also has special cases for the more complicated exchanges with thread actors. As other patterns appear in the protocol, DC_onPacket will become unweildy.\n\nInstead of having a single piece of code that understands all actors' patterns of communication, we should have a distinct client-side JS object acting as a 'front' for each actor. A front would be responsible for making sense of its actor's state, and providing a reasonable interface for UI widgets to interact with. The front will be the only thing that sends messages to its actor, and the front will handle all messages from the server for its actor. DC_onPacket should simply forward packets to the appropriate front.\n\nWe should create fronts only on demand. For example, the stack frame for a function call has a callee; the front for the stack frame should avoid creating a front for the callee until someone actually asks for it."}, {"time": "2011-12-23T14:29:07Z", "attachment_id": null, "raw_text": "I think this makes sense. I want to call this Front object a Stage.\n\nAlso, the summary describes a \"Front\" for each actor. Is this the case or should we have a single front/stage object that knows about all the actors?", "tags": [], "creator": "rcampbell@mozilla.com", "author": "rcampbell@mozilla.com", "text": "I think this makes sense. I want to call this Front object a Stage.\n\nAlso, the summary describes a \"Front\" for each actor. Is this the case or should we have a single front/stage object that knows about all the actors?", "count": 1, "bug_id": 698841, "id": 5937392, "creation_time": "2011-12-23T14:29:07Z", "is_private": false}, {"creator": "dave.camp@gmail.com", "is_private": false, "creation_time": "2012-01-04T22:53:42Z", "attachment_id": null, "tags": [], "count": 2, "text": "The intention is a frontobject-per-actor.\n\nActors are objects, it feels more natural to let the client treat them as such by giving the client objects.\n\nWe also have been throwing around the idea of a special jsclass that we can use to notice when a front object is no longer in use, and send a 'release' request to the server if one hasn't been sent already.", "author": "dave.camp@gmail.com", "id": 5955591, "bug_id": 698841, "time": "2012-01-04T22:53:42Z", "raw_text": "The intention is a frontobject-per-actor.\n\nActors are objects, it feels more natural to let the client treat them as such by giving the client objects.\n\nWe also have been throwing around the idea of a special jsclass that we can use to notice when a front object is no longer in use, and send a 'release' request to the server if one hasn't been sent already."}, {"id": 8200560, "bug_id": 698841, "text": "After protocol.js the plan have changed. I think we should morph this bug into a \"convert our old-style actors to protocol.js\" bug. Bug 910141 is about starting with the ObjectActor, and after that we can proceed with the rest.", "count": 3, "author": "pastith@gmail.com", "raw_text": "After protocol.js the plan have changed. I think we should morph this bug into a \"convert our old-style actors to protocol.js\" bug. Bug 910141 is about starting with the ObjectActor, and after that we can proceed with the rest.", "time": "2013-12-16T16:29:19Z", "creation_time": "2013-12-16T16:29:19Z", "is_private": false, "creator": "pastith@gmail.com", "tags": [], "attachment_id": null}, {"creator": "nfitzgerald@mozilla.com", "author": "nfitzgerald@mozilla.com", "text": "*** Bug 882802 has been marked as a duplicate of this bug. ***", "count": 4, "bug_id": 698841, "id": 8501999, "is_private": false, "creation_time": "2014-03-06T21:07:08Z", "time": "2014-03-06T21:07:08Z", "attachment_id": null, "raw_text": "", "tags": []}, {"attachment_id": null, "tags": [], "creator": "nfitzgerald@mozilla.com", "creation_time": "2014-03-06T21:50:44Z", "is_private": false, "time": "2014-03-06T21:50:44Z", "raw_text": "", "author": "nfitzgerald@mozilla.com", "text": "*** Bug 904739 has been marked as a duplicate of this bug. ***", "count": 5, "id": 8502267, "bug_id": 698841}, {"creator": "nfitzgerald@mozilla.com", "creation_time": "2014-03-06T21:53:28Z", "is_private": false, "attachment_id": null, "tags": [], "count": 6, "text": "*** Bug 906202 has been marked as a duplicate of this bug. ***", "author": "nfitzgerald@mozilla.com", "bug_id": 698841, "id": 8502280, "time": "2014-03-06T21:53:28Z", "raw_text": ""}, {"time": "2014-03-07T14:01:50Z", "raw_text": "Note that old actors include the web console, profiler, tracer and webapps actors, too.", "attachment_id": null, "tags": [], "creator": "pastith@gmail.com", "count": 7, "text": "Note that old actors include the web console, profiler, tracer and webapps actors, too.", "author": "pastith@gmail.com", "bug_id": 698841, "id": 8505482, "is_private": false, "creation_time": "2014-03-07T14:01:50Z"}]}}}