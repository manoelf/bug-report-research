{"comments": {}, "bugs": {"669461": {"comments": [{"time": "2011-07-05T21:10:07Z", "attachment_id": null, "text": "For a number of types of object, the error \"deleting.used.entity\" is returned if deletion is attempted but the object is referenced by other objects. It is often not feasible for the UI to determine in advance whether an object is \"in use\" by other objects (in some cases it would be possible, but would require numerous API calls per object), which leaves us with no option but to display the deletion icon in all cases, and the user will get an error if they try to delete a used object.\n\nIt's poor UI to give the user an action icon they can't actually use successfully; it'd be better if the user knew in advance which items are deletable and which are not. This would require the platform to return with each object something like a \"deletable\" or \"in_use\" boolean data attribute.", "raw_text": "For a number of types of object, the error \"deleting.used.entity\" is returned if deletion is attempted but the object is referenced by other objects. It is often not feasible for the UI to determine in advance whether an object is \"in use\" by other objects (in some cases it would be possible, but would require numerous API calls per object), which leaves us with no option but to display the deletion icon in all cases, and the user will get an error if they try to delete a used object.\n\nIt's poor UI to give the user an action icon they can't actually use successfully; it'd be better if the user knew in advance which items are deletable and which are not. This would require the platform to return with each object something like a \"deletable\" or \"in_use\" boolean data attribute.", "creation_time": "2011-07-05T21:10:07Z", "bug_id": 669461, "id": 5574868, "count": 0, "is_private": false, "tags": [], "author": "carl@oddbird.net", "creator": "carl@oddbird.net"}, {"author": "vadimk@utest.com", "creator": "vadimk@utest.com", "id": 5574983, "count": 1, "is_private": false, "tags": [], "bug_id": 669461, "creation_time": "2011-07-05T21:48:18Z", "raw_text": "Since getting to this information requires multiple calls to various entities, it's not feasible to implement ahead of time for every retrieved entity. Because ratio of gets vs updates is, probably, going to be 100 to 1 or even more over time, this enhancement will bring down overall performance, and, therefore, won't be implemented...", "attachment_id": null, "time": "2011-07-05T21:48:18Z", "text": "Since getting to this information requires multiple calls to various entities, it's not feasible to implement ahead of time for every retrieved entity. Because ratio of gets vs updates is, probably, going to be 100 to 1 or even more over time, this enhancement will bring down overall performance, and, therefore, won't be implemented..."}, {"creator": "carl@oddbird.net", "author": "carl@oddbird.net", "count": 2, "is_private": false, "tags": [], "id": 5575016, "bug_id": 669461, "raw_text": "Fair enough. If acquiring this information on the platform side is expensive, the alternative would be to provide a call to specifically get this information when it is needed, without risking an actual deletion. \n\nOr we just live with the poor UI.", "creation_time": "2011-07-05T21:57:07Z", "text": "Fair enough. If acquiring this information on the platform side is expensive, the alternative would be to provide a call to specifically get this information when it is needed, without risking an actual deletion. \n\nOr we just live with the poor UI.", "attachment_id": null, "time": "2011-07-05T21:57:07Z"}, {"bug_id": 669461, "tags": [], "count": 3, "is_private": false, "id": 5575058, "text": "Sure, we can do something like that...", "time": "2011-07-05T22:14:51Z", "attachment_id": null, "creation_time": "2011-07-05T22:14:51Z", "raw_text": "Sure, we can do something like that...", "creator": "vadimk@utest.com", "author": "vadimk@utest.com"}]}}}