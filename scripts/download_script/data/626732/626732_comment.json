{"comments": {}, "bugs": {"626732": {"comments": [{"creator": "bent.mozilla@gmail.com", "raw_text": "nsNullPrincipal::CheckMayLoad uses nsScriptSecurityManager in a thread-unsafe way (since it uses string bundles).\n\nI guess we want nsNullPrincipal to be threadsafe, so we need to fix this somehow.", "attachment_id": null, "author": "bent.mozilla@gmail.com", "count": 0, "creation_time": "2011-01-18T20:05:32Z", "time": "2011-01-18T20:05:32Z", "is_private": false, "tags": [], "text": "nsNullPrincipal::CheckMayLoad uses nsScriptSecurityManager in a thread-unsafe way (since it uses string bundles).\n\nI guess we want nsNullPrincipal to be threadsafe, so we need to fix this somehow.", "id": 5208171, "bug_id": 626732}, {"time": "2011-01-18T20:22:34Z", "is_private": false, "creation_time": "2011-01-18T20:22:34Z", "bug_id": 626732, "id": 5208244, "text": "> I guess we want nsNullPrincipal to be threadsafe\n\nWe do?  Why?  What operations on it do we want to be threadsafe?\n\nIn general, principals and the security manager are not threadsafe last I checked....", "tags": [], "attachment_id": null, "raw_text": "> I guess we want nsNullPrincipal to be threadsafe\n\nWe do?  Why?  What operations on it do we want to be threadsafe?\n\nIn general, principals and the security manager are not threadsafe last I checked....", "creator": "bzbarsky@mit.edu", "count": 1, "author": "bzbarsky@mit.edu"}, {"creation_time": "2011-01-18T20:28:13Z", "time": "2011-01-18T20:28:13Z", "text": "See bug 626301, shaver wants us to use nsNullPrincipal for Workers.", "bug_id": 626732, "creator": "bent.mozilla@gmail.com", "raw_text": "See bug 626301, shaver wants us to use nsNullPrincipal for Workers.", "attachment_id": null, "is_private": false, "tags": [], "id": 5208269, "author": "bent.mozilla@gmail.com", "count": 2}]}}}