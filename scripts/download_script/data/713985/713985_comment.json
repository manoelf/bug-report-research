{"comments": {}, "bugs": {"713985": {"comments": [{"creation_time": "2011-12-29T01:01:00Z", "is_private": false, "creator": "dvander@alliedmods.net", "tags": [], "attachment_id": 584672, "bug_id": 713985, "id": 5944139, "text": "Created attachment 584672\nstack of main thread\n\nA friend has been reporting random crashes and deadlocks on Firefox 8 and 9 (possibly earlier too, I don't know). Today we managed to get a stack of a deadlock/hang, which is attached. The relevant part:\n\n \tnspr4.dll!PR_WaitCondVar(PRCondVar * cvar, unsigned int timeout)  Line 547 + 0xdc bytes\tC\n \tmozjs.dll!js::gc::ArenaLists::allocateFromArena(JSCompartment * comp, js::gc::AllocKind thingKind)  Line 1222 + 0x21 bytes\tC++\n \tmozjs.dll!js::gc::ArenaLists::refillFreeList(JSContext * cx, js::gc::AllocKind thingKind)  Line 1492\tC++\n \tmozjs.dll!js_NewGCFunction(JSContext * cx)  Line 390 + 0x37 bytes\tC++\n\nI'll try to get dumps of the other threads.", "count": 0, "author": "dvander@alliedmods.net", "raw_text": "A friend has been reporting random crashes and deadlocks on Firefox 8 and 9 (possibly earlier too, I don't know). Today we managed to get a stack of a deadlock/hang, which is attached. The relevant part:\n\n \tnspr4.dll!PR_WaitCondVar(PRCondVar * cvar, unsigned int timeout)  Line 547 + 0xdc bytes\tC\n \tmozjs.dll!js::gc::ArenaLists::allocateFromArena(JSCompartment * comp, js::gc::AllocKind thingKind)  Line 1222 + 0x21 bytes\tC++\n \tmozjs.dll!js::gc::ArenaLists::refillFreeList(JSContext * cx, js::gc::AllocKind thingKind)  Line 1492\tC++\n \tmozjs.dll!js_NewGCFunction(JSContext * cx)  Line 390 + 0x37 bytes\tC++\n\nI'll try to get dumps of the other threads.", "time": "2011-12-29T01:01:00Z"}, {"author": "dvander@alliedmods.net", "count": 1, "text": "The user says that there are over 20 threads that look like this:\n\n>\tntdll.dll!_KiFastSystemCallRet@0() \t\n \tntdll.dll!_ZwWaitForSingleObject@12()  + 0xc bytes\t\n \tkernel32.dll!_WaitForSingleObjectEx@12()  + 0x8b bytes\t\n \tkernel32.dll!_WaitForSingleObject@8()  + 0x12 bytes\t\n \tnspr4.dll!PR_WaitCondVar(PRCondVar * cvar, unsigned int timeout)  Line 547 + 0xdc bytes\tC\n \tmozjs.dll!js::GCHelperThread::threadLoop(JSRuntime * rt)  Line 2054 + 0xc bytes\tC++\n \tmozjs.dll!js::GCHelperThread::threadMain(void * arg)  Line 2041\tC++\n \tnspr4.dll!_PR_NativeRunThread(void * arg)  Line 448\tC\n \tnspr4.dll!pr_root(void * arg)  Line 122 + 0xd bytes\tC\n \tmsvcr80.dll!_callthreadstartex()  Line 348 + 0x6 bytes\tC\n \tmsvcr80.dll!_threadstartex(void * ptd)  Line 326 + 0x5 bytes\tC\n \tkernel32.dll!_BaseThreadStart@8()  + 0x37 bytes\n\n(And that there are 311 threads total.)", "id": 5944168, "bug_id": 713985, "time": "2011-12-29T01:10:30Z", "raw_text": "The user says that there are over 20 threads that look like this:\n\n>\tntdll.dll!_KiFastSystemCallRet@0() \t\n \tntdll.dll!_ZwWaitForSingleObject@12()  + 0xc bytes\t\n \tkernel32.dll!_WaitForSingleObjectEx@12()  + 0x8b bytes\t\n \tkernel32.dll!_WaitForSingleObject@8()  + 0x12 bytes\t\n \tnspr4.dll!PR_WaitCondVar(PRCondVar * cvar, unsigned int timeout)  Line 547 + 0xdc bytes\tC\n \tmozjs.dll!js::GCHelperThread::threadLoop(JSRuntime * rt)  Line 2054 + 0xc bytes\tC++\n \tmozjs.dll!js::GCHelperThread::threadMain(void * arg)  Line 2041\tC++\n \tnspr4.dll!_PR_NativeRunThread(void * arg)  Line 448\tC\n \tnspr4.dll!pr_root(void * arg)  Line 122 + 0xd bytes\tC\n \tmsvcr80.dll!_callthreadstartex()  Line 348 + 0x6 bytes\tC\n \tmsvcr80.dll!_threadstartex(void * ptd)  Line 326 + 0x5 bytes\tC\n \tkernel32.dll!_BaseThreadStart@8()  + 0x37 bytes\n\n(And that there are 311 threads total.)", "creator": "dvander@alliedmods.net", "creation_time": "2011-12-29T01:10:30Z", "is_private": false, "attachment_id": null, "tags": []}, {"raw_text": "Here we go.", "time": "2011-12-29T01:15:58Z", "bug_id": 713985, "id": 5944182, "author": "dvander@alliedmods.net", "count": 2, "text": "Created attachment 584675\ndump of all stacks\n\nHere we go.", "tags": [], "attachment_id": 584675, "is_private": false, "creation_time": "2011-12-29T01:15:58Z", "creator": "dvander@alliedmods.net"}, {"raw_text": "Oh that's funny, about 2 weeks back, Firefox started to hang randomly, I think most of the time I had some Flash App running. Once I got the clever Idea to backtrace it, I only remember seeing PR_WaitCondVar, and getting very suspicious. Sadly something crashed and a I lost the backtrace, but I haven't had any problems since then. So this was also on Linux with a Nightly build.", "attachment_id": null, "time": "2011-12-29T01:19:10Z", "tags": [], "text": "Oh that's funny, about 2 weeks back, Firefox started to hang randomly, I think most of the time I had some Flash App running. Once I got the clever Idea to backtrace it, I only remember seeing PR_WaitCondVar, and getting very suspicious. Sadly something crashed and a I lost the backtrace, but I haven't had any problems since then. So this was also on Linux with a Nightly build.", "count": 3, "author": "evilpies@gmail.com", "creator": "evilpies@gmail.com", "is_private": false, "creation_time": "2011-12-29T01:19:10Z", "id": 5944187, "bug_id": 713985}, {"is_private": false, "creation_time": "2011-12-29T01:47:27Z", "id": 5944230, "bug_id": 713985, "author": "igor@mir2.org", "text": "(In reply to David Anderson [:dvander] from comment #1)\n> The user says that there are over 20 threads that look like this:\n\nThose threads are GC helper threads for web worker runtimes. They normally should be waiting. The interesting case is the main thread waiting for its gc helper thread to finish while that helper thread also waiting.", "count": 4, "creator": "igor@mir2.org", "tags": [], "attachment_id": null, "raw_text": "(In reply to David Anderson [:dvander] from comment #1)\n> The user says that there are over 20 threads that look like this:\n\nThose threads are GC helper threads for web worker runtimes. They normally should be waiting. The interesting case is the main thread waiting for its gc helper thread to finish while that helper thread also waiting.", "time": "2011-12-29T01:47:27Z"}, {"tags": [], "attachment_id": null, "raw_text": "Some more info:\nThis is from Firefox 9.0.1, so the line numbers match up with:\n    http://hg.mozilla.org/releases/mozilla-release/file/8f75d0ba542c/js/src/jsgc.cpp\nFor the main runtime, rt->gcHelperThread.sweeping is true.\nThe address of the main runtime is 0x03315000\nUser says he has a pile of reddit tabs open.\n\nThe cause of all the worker runtimes is this add-on:\n  http://code.google.com/p/itadaki/\nIt seems to create a new worker per document.\nIt's not clear if all the workers are related to the deadlock. But the add-on might make the deadlock more likely to happen.\n\nIgor, could you audit the background thread code to see if there's any subtle weirdness here?", "time": "2011-12-29T01:57:55Z", "creation_time": "2011-12-29T01:57:55Z", "is_private": false, "id": 5944240, "bug_id": 713985, "author": "bill.mccloskey@gmail.com", "count": 5, "text": "Some more info:\nThis is from Firefox 9.0.1, so the line numbers match up with:\n    http://hg.mozilla.org/releases/mozilla-release/file/8f75d0ba542c/js/src/jsgc.cpp\nFor the main runtime, rt->gcHelperThread.sweeping is true.\nThe address of the main runtime is 0x03315000\nUser says he has a pile of reddit tabs open.\n\nThe cause of all the worker runtimes is this add-on:\n  http://code.google.com/p/itadaki/\nIt seems to create a new worker per document.\nIt's not clear if all the workers are related to the deadlock. But the add-on might make the deadlock more likely to happen.\n\nIgor, could you audit the background thread code to see if there's any subtle weirdness here?", "creator": "bill.mccloskey@gmail.com"}, {"attachment_id": null, "tags": [], "creator": "bent.mozilla@gmail.com", "creation_time": "2011-12-29T02:32:18Z", "is_private": false, "raw_text": "Also, if we don't decide to do it here, I think we should file a followup to make workers not need a GC thread per runtime (hence, per worker). They should be able to free on a single thread shared among all worker threads or simply not use the additional thread at all.", "time": "2011-12-29T02:32:18Z", "text": "Also, if we don't decide to do it here, I think we should file a followup to make workers not need a GC thread per runtime (hence, per worker). They should be able to free on a single thread shared among all worker threads or simply not use the additional thread at all.", "count": 6, "author": "bent.mozilla@gmail.com", "bug_id": 713985, "id": 5944264}, {"raw_text": "Also, we could decrease the default stack size for the GC thread in GCHelperThread::init, \n\nhttps://mxr.mozilla.org/mozilla-central/source/js/src/jsgc.cpp#2212\n\n0 means \"default depending on platform\" which I think is 8mb for pthreads and 1mb for windows.", "attachment_id": null, "time": "2011-12-29T02:45:34Z", "tags": [], "text": "Also, we could decrease the default stack size for the GC thread in GCHelperThread::init, \n\nhttps://mxr.mozilla.org/mozilla-central/source/js/src/jsgc.cpp#2212\n\n0 means \"default depending on platform\" which I think is 8mb for pthreads and 1mb for windows.", "count": 7, "author": "bent.mozilla@gmail.com", "creator": "bent.mozilla@gmail.com", "creation_time": "2011-12-29T02:45:34Z", "is_private": false, "id": 5944277, "bug_id": 713985}, {"tags": [], "attachment_id": null, "creation_time": "2012-01-03T23:28:29Z", "is_private": false, "creator": "dmandelin@mozilla.com", "raw_text": "Igor, what's your strategy for fixing this up? Bug 714050 obviously addresses comment 7, but what about the deadlock itself?", "time": "2012-01-03T23:28:29Z", "id": 5952524, "bug_id": 713985, "author": "dmandelin@mozilla.com", "count": 8, "text": "Igor, what's your strategy for fixing this up? Bug 714050 obviously addresses comment 7, but what about the deadlock itself?"}, {"tags": [], "time": "2012-01-03T23:52:28Z", "attachment_id": null, "raw_text": "(In reply to David Mandelin from comment #8)\n> Igor, what's your strategy for fixing this up? Bug 714050 obviously\n> addresses comment 7, but what about the deadlock itself?\n\nI could not find a code path that leads to the deadlock. Unless I have missed something it could be a memory corruption problem. Do we have a crash stack?", "id": 5952631, "bug_id": 713985, "creation_time": "2012-01-03T23:52:28Z", "is_private": false, "creator": "igor@mir2.org", "author": "igor@mir2.org", "text": "(In reply to David Mandelin from comment #8)\n> Igor, what's your strategy for fixing this up? Bug 714050 obviously\n> addresses comment 7, but what about the deadlock itself?\n\nI could not find a code path that leads to the deadlock. Unless I have missed something it could be a memory corruption problem. Do we have a crash stack?", "count": 9}, {"time": "2012-01-03T23:56:19Z", "raw_text": "It seems like we'll have to wait and see if this happens again. If it does, we'll have access to a release-mode browser from within a debugger. Maybe we should try to think up what sort of information would be useful to have if that happens.", "attachment_id": null, "tags": [], "creator": "bill.mccloskey@gmail.com", "count": 10, "text": "It seems like we'll have to wait and see if this happens again. If it does, we'll have access to a release-mode browser from within a debugger. Maybe we should try to think up what sort of information would be useful to have if that happens.", "author": "bill.mccloskey@gmail.com", "bug_id": 713985, "id": 5952647, "creation_time": "2012-01-03T23:56:19Z", "is_private": false}, {"time": "2012-01-05T11:46:43Z", "attachment_id": null, "raw_text": "I'm the user who experienced this. To add to dvander's first comment, I'm not sure when I first installed FuriganaInserter/HTML Ruby recently; it may have only coincided rougly with Firefox 8. I had been running without it for a while but I have used it in the past. \n\nI ran Firefox with MSVC attached after the freeze happened since dvander said it could help if I caught another freeze but I only experienced an OOM crash. I disabled FuriganaInserter and the HTML Ruby extensions and I haven't crashed in the last few days. I can re-enable them if wanted, but I don't know if that would help reproduce a freeze since the current opinion is the OOM/GC/threads situation is unrelated?\n\nI have mini and full dumps from when I attached MSVC after Firefox froze. I'm not sure if they're useful or if dvander passed along the minidump. I can poke around the full dump if you can tell me what's interesting, but uploading it would take several days at least.", "tags": [], "creator": "fyrenmoo@gmail.com", "author": "fyrenmoo@gmail.com", "text": "I'm the user who experienced this. To add to dvander's first comment, I'm not sure when I first installed FuriganaInserter/HTML Ruby recently; it may have only coincided rougly with Firefox 8. I had been running without it for a while but I have used it in the past. \n\nI ran Firefox with MSVC attached after the freeze happened since dvander said it could help if I caught another freeze but I only experienced an OOM crash. I disabled FuriganaInserter and the HTML Ruby extensions and I haven't crashed in the last few days. I can re-enable them if wanted, but I don't know if that would help reproduce a freeze since the current opinion is the OOM/GC/threads situation is unrelated?\n\nI have mini and full dumps from when I attached MSVC after Firefox froze. I'm not sure if they're useful or if dvander passed along the minidump. I can poke around the full dump if you can tell me what's interesting, but uploading it would take several days at least.", "count": 11, "bug_id": 713985, "id": 5956722, "is_private": false, "creation_time": "2012-01-05T11:46:43Z"}]}}}