{"bugs": {"625052": {"comments": [{"is_private": false, "time": "2011-01-12T15:32:02Z", "raw_text": "Shaver suggests that we scan the stack a bit in the exception handler looking for JIT pages and include some memory from them in the minidump. As a heuristic, any address on the stack that's in executable memory but not backed by a module could count for this.\n\nSome info about how implementing this might work:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/nsExceptionHandler.cpp#743\n\nThe ExceptionHandler object has a pre-minidump filter callback on all platforms:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/windows/handler/exception_handler.h#144\nhttp://code.google.com/p/google-breakpad/source/browse/trunk/src/client/linux/handler/exception_handler.h#122\nhttp://code.google.com/p/google-breakpad/source/browse/trunk/src/client/mac/handler/exception_handler.h#96\n\non Windows we use this to filter out floating point exceptions that can be caused by third-party code re-enabling FP exceptions. It's called before Breakpad writes the minidump, so this would be the ideal place to scan the stack for memory to include. Note that anything that happens in this callback needs to be carefully written since it's executing in a compromised process. That means no calling malloc, and on Linux no calling into functions from other shared libraries (to avoid invoking the dynamic linker). The Breakpad headers have some utility functions to make life easier in this situation.\n\nOn Mac and Linux, the memory region info would need to be communicated back to the minidump generation code somehow, likely via the ExceptionHandler, since that's the only API entry we use right now. Mac and Linux both have a routine to write out memory regions to the dump, so the actual implementation once you get the data where you want it is easy:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/mac/handler/minidump_generator.cc#749\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/linux/minidump_writer/minidump_writer.cc#956\n\non Windows, it's a little bit trickier. When we call MinidumpWriteDump:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/windows/handler/exception_handler.cc#971\n\nwe need to pass a callback function:\nhttp://msdn.microsoft.com/en-us/library/ms680360%28VS.85%29.aspx\nhttp://msdn.microsoft.com/en-us/library/ms680358%28v=VS.85%29.aspx\n\nwhich lets you specify additional memory regions to include in the dump:\nhttp://msdn.microsoft.com/en-us/library/ms680363%28v=VS.85%29.aspx", "text": "Shaver suggests that we scan the stack a bit in the exception handler looking for JIT pages and include some memory from them in the minidump. As a heuristic, any address on the stack that's in executable memory but not backed by a module could count for this.\n\nSome info about how implementing this might work:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/nsExceptionHandler.cpp#743\n\nThe ExceptionHandler object has a pre-minidump filter callback on all platforms:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/windows/handler/exception_handler.h#144\nhttp://code.google.com/p/google-breakpad/source/browse/trunk/src/client/linux/handler/exception_handler.h#122\nhttp://code.google.com/p/google-breakpad/source/browse/trunk/src/client/mac/handler/exception_handler.h#96\n\non Windows we use this to filter out floating point exceptions that can be caused by third-party code re-enabling FP exceptions. It's called before Breakpad writes the minidump, so this would be the ideal place to scan the stack for memory to include. Note that anything that happens in this callback needs to be carefully written since it's executing in a compromised process. That means no calling malloc, and on Linux no calling into functions from other shared libraries (to avoid invoking the dynamic linker). The Breakpad headers have some utility functions to make life easier in this situation.\n\nOn Mac and Linux, the memory region info would need to be communicated back to the minidump generation code somehow, likely via the ExceptionHandler, since that's the only API entry we use right now. Mac and Linux both have a routine to write out memory regions to the dump, so the actual implementation once you get the data where you want it is easy:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/mac/handler/minidump_generator.cc#749\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/linux/minidump_writer/minidump_writer.cc#956\n\non Windows, it's a little bit trickier. When we call MinidumpWriteDump:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/crashreporter/google-breakpad/src/client/windows/handler/exception_handler.cc#971\n\nwe need to pass a callback function:\nhttp://msdn.microsoft.com/en-us/library/ms680360%28VS.85%29.aspx\nhttp://msdn.microsoft.com/en-us/library/ms680358%28v=VS.85%29.aspx\n\nwhich lets you specify additional memory regions to include in the dump:\nhttp://msdn.microsoft.com/en-us/library/ms680363%28v=VS.85%29.aspx", "id": 5193475, "count": 0, "author": "ted@mielczarek.org", "creator": "ted@mielczarek.org", "tags": [], "creation_time": "2011-01-12T15:32:02Z", "bug_id": 625052, "attachment_id": null}, {"count": 1, "raw_text": "FWIW, I had to wedge that Windows callback function into Breakpad to fix bug 599301, so at least that part is not so bad now, it'd just be a matter of adding more regions to the list and reporting them all in the existing callback.", "attachment_id": null, "bug_id": 625052, "tags": [], "author": "ted@mielczarek.org", "is_private": false, "text": "FWIW, I had to wedge that Windows callback function into Breakpad to fix bug 599301, so at least that part is not so bad now, it'd just be a matter of adding more regions to the list and reporting them all in the existing callback.", "id": 5251594, "time": "2011-02-03T16:20:44Z", "creation_time": "2011-02-03T16:20:44Z", "creator": "ted@mielczarek.org"}]}}, "comments": {}}