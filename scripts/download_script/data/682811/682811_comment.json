{"bugs": {"682811": {"comments": [{"tags": [], "bug_id": 682811, "text": "These events are issued for root of changed subtree, if menupopup/alert accessibles are inside of the subtree then these events aren't emitted. We did that for menupopup_end events prior bug 570275, this behavior should be returned back.\n\nExample for missed alert event for ARIA alerts is http://archive.dojotoolkit.org/nightly/dojotoolkit/dijit/tests/test_TooltipDialog.html", "raw_text": "These events are issued for root of changed subtree, if menupopup/alert accessibles are inside of the subtree then these events aren't emitted. We did that for menupopup_end events prior bug 570275, this behavior should be returned back.\n\nExample for missed alert event for ARIA alerts is http://archive.dojotoolkit.org/nightly/dojotoolkit/dijit/tests/test_TooltipDialog.html", "attachment_id": null, "author": "surkov.alexander@gmail.com", "creation_time": "2011-08-29T09:57:42Z", "time": "2011-08-29T09:57:42Z", "creator": "surkov.alexander@gmail.com", "id": 5684432, "count": 0, "is_private": false}, {"is_private": false, "count": 1, "id": 5817795, "creator": "dbolter@mozilla.com", "time": "2011-11-01T14:26:30Z", "creation_time": "2011-11-01T14:26:30Z", "author": "dbolter@mozilla.com", "attachment_id": null, "raw_text": "Jamie, are you working around this bug currently?", "tags": [], "bug_id": 682811, "text": "Jamie, are you working around this bug currently?"}, {"author": "jteh@mozilla.com", "creation_time": "2011-11-02T00:48:22Z", "time": "2011-11-02T00:48:22Z", "creator": "jteh@mozilla.com", "id": 5819768, "count": 2, "is_private": false, "bug_id": 682811, "text": "We're not working around this bug at present; no one has reported this with NVDA.\n\nThis test case works fine with NVDA because a descendant of the dialogs gets focus. (Imo, a dialog shouldn't fire an alert event if it gets focus anyway, but that's a different issue.)", "tags": [], "raw_text": "We're not working around this bug at present; no one has reported this with NVDA.\n\nThis test case works fine with NVDA because a descendant of the dialogs gets focus. (Imo, a dialog shouldn't fire an alert event if it gets focus anyway, but that's a different issue.)", "attachment_id": null}, {"tags": [], "text": "what files should be firing the alert events?", "bug_id": 682811, "raw_text": "what files should be firing the alert events?", "attachment_id": null, "author": "Jennyherrera.19@gmail.com", "creator": "Jennyherrera.19@gmail.com", "time": "2012-05-16T00:20:16Z", "creation_time": "2012-05-16T00:20:16Z", "is_private": false, "id": 6311007, "count": 3}, {"creation_time": "2012-05-16T02:41:10Z", "time": "2012-05-16T02:41:10Z", "creator": "surkov.alexander@gmail.com", "author": "surkov.alexander@gmail.com", "count": 4, "id": 6311220, "is_private": false, "tags": [], "text": "(In reply to Jenny from comment #3)\n> what files should be firing the alert events?\n\nwhat do you mean by 'files'?", "bug_id": 682811, "attachment_id": null, "raw_text": "(In reply to Jenny from comment #3)\n> what files should be firing the alert events?\n\nwhat do you mean by 'files'?"}, {"text": "(In reply to alexander :surkov from comment #4)\n> (In reply to Jenny from comment #3)\n> > what files should be firing the alert events?\n> \n> what do you mean by 'files'?\n\nI believe shes asking what classes should be firing the events.", "bug_id": 682811, "tags": [], "attachment_id": null, "raw_text": "(In reply to alexander :surkov from comment #4)\n> (In reply to Jenny from comment #3)\n> > what files should be firing the alert events?\n> \n> what do you mean by 'files'?\n\nI believe shes asking what classes should be firing the events.", "time": "2012-05-16T06:01:44Z", "creation_time": "2012-05-16T06:01:44Z", "creator": "djgoodrich@csupomona.edu", "author": "djgoodrich@csupomona.edu", "count": 5, "id": 6311444, "is_private": false}, {"id": 6311461, "count": 6, "is_private": false, "time": "2012-05-16T06:08:57Z", "creation_time": "2012-05-16T06:08:57Z", "creator": "surkov.alexander@gmail.com", "author": "surkov.alexander@gmail.com", "attachment_id": null, "raw_text": "(In reply to Daniel Goodrich from comment #5)\n> (In reply to alexander :surkov from comment #4)\n> > (In reply to Jenny from comment #3)\n> > > what files should be firing the alert events?\n> > \n> > what do you mean by 'files'?\n> \n> I believe shes asking what classes should be firing the events.\n\nsimple search shows that EVENT_MENUPOPUP_END for example is fired by base/nsDocAccessible and generic/RootAccessible, see http://mxr.mozilla.org/mozilla-central/ident?i=EVENT_MENUPOPUP_END&filter=", "tags": [], "text": "(In reply to Daniel Goodrich from comment #5)\n> (In reply to alexander :surkov from comment #4)\n> > (In reply to Jenny from comment #3)\n> > > what files should be firing the alert events?\n> > \n> > what do you mean by 'files'?\n> \n> I believe shes asking what classes should be firing the events.\n\nsimple search shows that EVENT_MENUPOPUP_END for example is fired by base/nsDocAccessible and generic/RootAccessible, see http://mxr.mozilla.org/mozilla-central/ident?i=EVENT_MENUPOPUP_END&filter=", "bug_id": 682811}, {"tags": [], "text": "Can you fully explain what this bug is not doing but should be doing?\n\nLooking into it, we have an idea that adds the firing of events to the starting / closing of the subtree, but \n\n(from comment #2)\n> This test case works fine with NVDA because a descendant of the dialogs gets\n> focus. (Imo, a dialog shouldn't fire an alert event if it gets focus anyway,\n> but that's a different issue.)\n\nso we do not know if this should be taken out and replaced.  As it sits right now, the DOMi addon shows everything being fired correctly.", "bug_id": 682811, "raw_text": "Can you fully explain what this bug is not doing but should be doing?\n\nLooking into it, we have an idea that adds the firing of events to the starting / closing of the subtree, but \n\n(from comment #2)\n> This test case works fine with NVDA because a descendant of the dialogs gets\n> focus. (Imo, a dialog shouldn't fire an alert event if it gets focus anyway,\n> but that's a different issue.)\n\nso we do not know if this should be taken out and replaced.  As it sits right now, the DOMi addon shows everything being fired correctly.", "attachment_id": null, "author": "djgoodrich@csupomona.edu", "creator": "djgoodrich@csupomona.edu", "time": "2012-05-17T22:51:21Z", "creation_time": "2012-05-17T22:51:21Z", "is_private": false, "count": 7, "id": 6317270}, {"id": 6317910, "count": 8, "is_private": false, "time": "2012-05-18T04:00:22Z", "creation_time": "2012-05-18T04:00:22Z", "creator": "surkov.alexander@gmail.com", "author": "surkov.alexander@gmail.com", "attachment_id": null, "raw_text": "(In reply to Daniel Goodrich from comment #7)\n> Can you fully explain what this bug is not doing but should be doing?\n\nreal example:\n\nyou have the page like:\n<html>\n  <script>\n    function onload()\n    {\n      var div = document.createElement(\"div\");\n      div.setAttribute(\"role\", \"alert\");\n      div.textContent = \"This is alert\";\n      document.body.appendChild(div);\n    }\n  </script>\n  <body>\n    my document\n  </body>\n</html>\n\nwhen the page is loaded then alert appears. In this case we should fire alert event, we don't and that's a bug. We don't fire alert event because we construct accessible tree after div is inserted into DOM tree (i.e. we don't process content insertion notification for inserted div where we used to fire alert event).\n\ndemo example:\n<script>\nfunction addContent()\n{\n  var div = document.createElement(\"div\");\n  var alertDiv = document.createElement(\"div\");\n  alertDiv.setAttribute(\"role\", \"alert\");\n  alertDiv.textContent = \"Hello\";\n  div.appendChild(alertDiv);\n  document.body.appendChild(div);\n}\n</script>\n\nin this case the alert is part of inserted subtree so we don't fire alert event because we don't look deep into inserted subtree. It's a bug as well.\n\n> Looking into it, we have an idea that adds the firing of events to the\n> starting / closing of the subtree, but \n\nyes\n\n> (from comment #2)\n> > This test case works fine with NVDA because a descendant of the dialogs gets\n> > focus. (Imo, a dialog shouldn't fire an alert event if it gets focus anyway,\n> > but that's a different issue.)\n> \n> so we do not know if this should be taken out and replaced.  As it sits\n> right now, the DOMi addon shows everything being fired correctly.\n\ndialogs don't have alert role (which is used to detect whether we should fire alert event or shouldn't) so we don't touch this behavior here.", "tags": [], "text": "(In reply to Daniel Goodrich from comment #7)\n> Can you fully explain what this bug is not doing but should be doing?\n\nreal example:\n\nyou have the page like:\n<html>\n  <script>\n    function onload()\n    {\n      var div = document.createElement(\"div\");\n      div.setAttribute(\"role\", \"alert\");\n      div.textContent = \"This is alert\";\n      document.body.appendChild(div);\n    }\n  </script>\n  <body>\n    my document\n  </body>\n</html>\n\nwhen the page is loaded then alert appears. In this case we should fire alert event, we don't and that's a bug. We don't fire alert event because we construct accessible tree after div is inserted into DOM tree (i.e. we don't process content insertion notification for inserted div where we used to fire alert event).\n\ndemo example:\n<script>\nfunction addContent()\n{\n  var div = document.createElement(\"div\");\n  var alertDiv = document.createElement(\"div\");\n  alertDiv.setAttribute(\"role\", \"alert\");\n  alertDiv.textContent = \"Hello\";\n  div.appendChild(alertDiv);\n  document.body.appendChild(div);\n}\n</script>\n\nin this case the alert is part of inserted subtree so we don't fire alert event because we don't look deep into inserted subtree. It's a bug as well.\n\n> Looking into it, we have an idea that adds the firing of events to the\n> starting / closing of the subtree, but \n\nyes\n\n> (from comment #2)\n> > This test case works fine with NVDA because a descendant of the dialogs gets\n> > focus. (Imo, a dialog shouldn't fire an alert event if it gets focus anyway,\n> > but that's a different issue.)\n> \n> so we do not know if this should be taken out and replaced.  As it sits\n> right now, the DOMi addon shows everything being fired correctly.\n\ndialogs don't have alert role (which is used to detect whether we should fire alert event or shouldn't) so we don't touch this behavior here.", "bug_id": 682811}, {"is_private": false, "count": 9, "id": 6319913, "creator": "djgoodrich@csupomona.edu", "creation_time": "2012-05-18T19:51:34Z", "time": "2012-05-18T19:51:34Z", "author": "djgoodrich@csupomona.edu", "attachment_id": null, "raw_text": "If we add an iterative loop inside if (aChild->ARIARole() == roles::MENUPOPUP)(line 1911 of nsDocAcessible.cpp) to check each child and call nsDocAccessible::UpdateTreeInternal for each child passing aIsInsert as false each time, that would fire the end and hide events for each child.  Is this correct and would it work for showing all of the menu_popup_end events?", "bug_id": 682811, "text": "If we add an iterative loop inside if (aChild->ARIARole() == roles::MENUPOPUP)(line 1911 of nsDocAcessible.cpp) to check each child and call nsDocAccessible::UpdateTreeInternal for each child passing aIsInsert as false each time, that would fire the end and hide events for each child.  Is this correct and would it work for showing all of the menu_popup_end events?", "tags": []}, {"id": 6321616, "count": 10, "is_private": false, "creation_time": "2012-05-19T17:09:59Z", "time": "2012-05-19T17:09:59Z", "creator": "tbsaunde+mozbugs@tbsaunde.org", "author": "tbsaunde+mozbugs@tbsaunde.org", "attachment_id": null, "raw_text": "(In reply to Daniel Goodrich from comment #9)\n> If we add an iterative loop inside if (aChild->ARIARole() ==\n> roles::MENUPOPUP)(line 1911 of nsDocAcessible.cpp) to check each child and\n> call nsDocAccessible::UpdateTreeInternal for each child passing aIsInsert as\n> false each time, that would fire the end and hide events for each child.  Is\n> this correct and would it work for showing all of the menu_popup_end events?\n\nin general the approach is fine, but you'd be better off moving the code to fire the events to CacheChildrenInSubTree() / UnCacheChildrenInSubTree() which are the next methods in the file, because they already recurse through the subtree.", "tags": [], "bug_id": 682811, "text": "(In reply to Daniel Goodrich from comment #9)\n> If we add an iterative loop inside if (aChild->ARIARole() ==\n> roles::MENUPOPUP)(line 1911 of nsDocAcessible.cpp) to check each child and\n> call nsDocAccessible::UpdateTreeInternal for each child passing aIsInsert as\n> false each time, that would fire the end and hide events for each child.  Is\n> this correct and would it work for showing all of the menu_popup_end events?\n\nin general the approach is fine, but you'd be better off moving the code to fire the events to CacheChildrenInSubTree() / UnCacheChildrenInSubTree() which are the next methods in the file, because they already recurse through the subtree."}, {"creator": "djgoodrich@csupomona.edu", "time": "2012-05-19T20:19:04Z", "creation_time": "2012-05-19T20:19:04Z", "author": "djgoodrich@csupomona.edu", "is_private": false, "id": 6321778, "count": 11, "text": "Created attachment 625439\npatch", "bug_id": 682811, "tags": [], "attachment_id": 625439, "raw_text": ""}, {"text": "Comment on attachment 625439\npatch\n\nReview of attachment 625439:\n-----------------------------------------------------------------\n\n::: accessible/src/base/nsDocAccessible.cpp\n@@ +1972,5 @@\n> +\t\t} else if (ariaRole == roles::ALERT) {\n> +\t\t  // Fire EVENT_ALERT if ARIA alert appears.\n> +\t\t  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_ALERT, child->GetNode(),\n> +\t\t\t\t\t\t\t\t\t AccEvent::eRemoveDupes);\n> +\t\t}\n\nthis makes event fired before show event what is not right (show event means for AT that accessible is created)\n\n@@ +1995,5 @@\n> +\n> +      if (event)\n> +        FireDelayedAccessibleEvent(event);\n> +    }\n> +    UncacheChildrenInSubtree(child);\n\nthis makes it fire after hide event (hide event means for AT accessible is destroyed)", "bug_id": 682811, "tags": [], "raw_text": "Review of attachment 625439:\n-----------------------------------------------------------------\n\n::: accessible/src/base/nsDocAccessible.cpp\n@@ +1972,5 @@\n> +\t\t} else if (ariaRole == roles::ALERT) {\n> +\t\t  // Fire EVENT_ALERT if ARIA alert appears.\n> +\t\t  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_ALERT, child->GetNode(),\n> +\t\t\t\t\t\t\t\t\t AccEvent::eRemoveDupes);\n> +\t\t}\n\nthis makes event fired before show event what is not right (show event means for AT that accessible is created)\n\n@@ +1995,5 @@\n> +\n> +      if (event)\n> +        FireDelayedAccessibleEvent(event);\n> +    }\n> +    UncacheChildrenInSubtree(child);\n\nthis makes it fire after hide event (hide event means for AT accessible is destroyed)", "attachment_id": 625439, "author": "surkov.alexander@gmail.com", "creator": "surkov.alexander@gmail.com", "creation_time": "2012-05-20T02:04:31Z", "time": "2012-05-20T02:04:31Z", "is_private": false, "count": 12, "id": 6322027}, {"tags": [], "bug_id": 682811, "text": "Created attachment 626071\nPatch 2", "raw_text": "", "attachment_id": 626071, "author": "djgoodrich@csupomona.edu", "creator": "djgoodrich@csupomona.edu", "creation_time": "2012-05-22T17:15:56Z", "time": "2012-05-22T17:15:56Z", "is_private": false, "id": 6327874, "count": 13}, {"text": "Comment on attachment 626071\nPatch 2\n\nReview of attachment 626071:\n-----------------------------------------------------------------\n\nbtw, could you fix your editor to not use tabs and use 2 spaces for indentation please? and it's better to ask somebody for feedback explicitly (use feedback flag) to make sure your patch isn't lost in bug spam.", "bug_id": 682811, "tags": [], "raw_text": "Review of attachment 626071:\n-----------------------------------------------------------------\n\nbtw, could you fix your editor to not use tabs and use 2 spaces for indentation please? and it's better to ask somebody for feedback explicitly (use feedback flag) to make sure your patch isn't lost in bug spam.", "attachment_id": 626071, "author": "surkov.alexander@gmail.com", "time": "2012-05-22T17:23:22Z", "creation_time": "2012-05-22T17:23:22Z", "creator": "surkov.alexander@gmail.com", "id": 6327914, "count": 14, "is_private": false}, {"tags": [], "bug_id": 682811, "text": "Comment on attachment 626071\nPatch 2\n\n>diff --git a/accessible/src/base/nsDocAccessible.cpp b/accessible/src/base/nsDocAccessible.cpp\n>--- a/accessible/src/base/nsDocAccessible.cpp\n>+++ b/accessible/src/base/nsDocAccessible.cpp\n>@@ -1881,48 +1881,34 @@ nsDocAccessible::UpdateTree(nsAccessible\n> \n> PRUint32\n> nsDocAccessible::UpdateTreeInternal(nsAccessible* aChild, bool aIsInsert)\n> {\n>   PRUint32 updateFlags = eAccessible;\n> \n>   nsINode* node = aChild->GetNode();\n>   if (aIsInsert) {\n>+\t// Fire show event.\n>+\tnsRefPtr<AccEvent> event = new AccShowEvent(aChild, node);\n>+\tif (event)\n>+\t  FireDelayedAccessibleEvent(event);\n>     // Create accessible tree for shown accessible.\n>     CacheChildrenInSubtree(aChild);\n\nreorganizing this method a little might be nice, but you should spend a little more timing sure that you do the same things in the case of insert and removal as happened before.  Order also matters here, you should fire this event after you call CacheSubTreeInternal()\n\n>+\tnsRefPtr<AccEvent> event = new AccHideEvent(aChild, node);\n>+\tif (event)\n>+\t  FireDelayedAccessibleEvent(event);\n\na general comment, we made new be infalible a while ago, but haven't touched this code since, so you should remove nolonger needed null checks when you touch code anyway.\n\n> nsDocAccessible::CacheChildrenInSubtree(nsAccessible* aRoot)\n> {\n>   aRoot->EnsureChildren();\n> \n>   // Make sure we create accessible tree defined in DOM only, i.e. if accessible\n>   // provides specific tree (like XUL trees) then tree creation is handled by\n>   // this accessible.\n>   PRUint32 count = aRoot->ContentChildCount();\n>   for (PRUint32 idx = 0; idx < count; idx++) {\n>-    nsAccessible* child = aRoot->ContentChildAt(idx);\n>+\tnsAccessible* child = aRoot->ContentChildAt(idx);\n>     NS_ASSERTION(child, \"Illicit tree change while tree is created!\");\n>     // Don't cross document boundaries.\n>-    if (child && child->IsContent())\n>+    if (child && child->IsContent()){\n>+\t\troles::Role ariaRole = child->ARIARole();\n>+\t\tif (ariaRole == roles::MENUPOPUP) {\n>+\t\t  // Fire EVENT_MENUPOPUP_START if ARIA menu appears.\n>+\t\t  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_START,\n>+\t\t\t\t\t\t\t\t\t child->GetNode(), AccEvent::eRemoveDupes);\n\nI'd suggest handling this after the loop, and letting recursion take care of visiting all the nodes of the tree, so the root isn't a special case.\n\n>-  for (PRUint32 idx = 0; idx < count; idx++)\n>-    UncacheChildrenInSubtree(aRoot->ContentChildAt(idx));\n>+  for (PRUint32 idx = 0; idx < count; idx++) {\n>+    nsAccessible* child = aRoot->ContentChildAt(idx);\n>+\t// Fire EVENT_MENUPOPUP_END \n>+    if (child->ARIARole() == roles::MENUPOPUP) {\n>+      nsRefPtr<AccEvent> event =\n>+        new AccEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_END, child);\n\nsimilar here.", "raw_text": ">diff --git a/accessible/src/base/nsDocAccessible.cpp b/accessible/src/base/nsDocAccessible.cpp\n>--- a/accessible/src/base/nsDocAccessible.cpp\n>+++ b/accessible/src/base/nsDocAccessible.cpp\n>@@ -1881,48 +1881,34 @@ nsDocAccessible::UpdateTree(nsAccessible\n> \n> PRUint32\n> nsDocAccessible::UpdateTreeInternal(nsAccessible* aChild, bool aIsInsert)\n> {\n>   PRUint32 updateFlags = eAccessible;\n> \n>   nsINode* node = aChild->GetNode();\n>   if (aIsInsert) {\n>+\t// Fire show event.\n>+\tnsRefPtr<AccEvent> event = new AccShowEvent(aChild, node);\n>+\tif (event)\n>+\t  FireDelayedAccessibleEvent(event);\n>     // Create accessible tree for shown accessible.\n>     CacheChildrenInSubtree(aChild);\n\nreorganizing this method a little might be nice, but you should spend a little more timing sure that you do the same things in the case of insert and removal as happened before.  Order also matters here, you should fire this event after you call CacheSubTreeInternal()\n\n>+\tnsRefPtr<AccEvent> event = new AccHideEvent(aChild, node);\n>+\tif (event)\n>+\t  FireDelayedAccessibleEvent(event);\n\na general comment, we made new be infalible a while ago, but haven't touched this code since, so you should remove nolonger needed null checks when you touch code anyway.\n\n> nsDocAccessible::CacheChildrenInSubtree(nsAccessible* aRoot)\n> {\n>   aRoot->EnsureChildren();\n> \n>   // Make sure we create accessible tree defined in DOM only, i.e. if accessible\n>   // provides specific tree (like XUL trees) then tree creation is handled by\n>   // this accessible.\n>   PRUint32 count = aRoot->ContentChildCount();\n>   for (PRUint32 idx = 0; idx < count; idx++) {\n>-    nsAccessible* child = aRoot->ContentChildAt(idx);\n>+\tnsAccessible* child = aRoot->ContentChildAt(idx);\n>     NS_ASSERTION(child, \"Illicit tree change while tree is created!\");\n>     // Don't cross document boundaries.\n>-    if (child && child->IsContent())\n>+    if (child && child->IsContent()){\n>+\t\troles::Role ariaRole = child->ARIARole();\n>+\t\tif (ariaRole == roles::MENUPOPUP) {\n>+\t\t  // Fire EVENT_MENUPOPUP_START if ARIA menu appears.\n>+\t\t  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_START,\n>+\t\t\t\t\t\t\t\t\t child->GetNode(), AccEvent::eRemoveDupes);\n\nI'd suggest handling this after the loop, and letting recursion take care of visiting all the nodes of the tree, so the root isn't a special case.\n\n>-  for (PRUint32 idx = 0; idx < count; idx++)\n>-    UncacheChildrenInSubtree(aRoot->ContentChildAt(idx));\n>+  for (PRUint32 idx = 0; idx < count; idx++) {\n>+    nsAccessible* child = aRoot->ContentChildAt(idx);\n>+\t// Fire EVENT_MENUPOPUP_END \n>+    if (child->ARIARole() == roles::MENUPOPUP) {\n>+      nsRefPtr<AccEvent> event =\n>+        new AccEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_END, child);\n\nsimilar here.", "attachment_id": 626071, "author": "tbsaunde+mozbugs@tbsaunde.org", "creator": "tbsaunde+mozbugs@tbsaunde.org", "creation_time": "2012-05-22T18:02:28Z", "time": "2012-05-22T18:02:28Z", "is_private": false, "count": 15, "id": 6328082}, {"creation_time": "2012-05-23T00:29:42Z", "time": "2012-05-23T00:29:42Z", "creator": "djgoodrich@csupomona.edu", "author": "djgoodrich@csupomona.edu", "count": 16, "id": 6329564, "is_private": false, "bug_id": 682811, "text": "Created attachment 626264\nPatch 3\n\nRemoved firing of events in updateTreeInternal and moved them to cache and uncache subtree methods.  cleaned up code to remove creation checks (i.e. if(event) after event was created by new).", "tags": [], "attachment_id": 626264, "raw_text": "Removed firing of events in updateTreeInternal and moved them to cache and uncache subtree methods.  cleaned up code to remove creation checks (i.e. if(event) after event was created by new)."}, {"raw_text": ">diff --git a/accessible/src/base/nsDocAccessible.cpp b/accessible/src/base/nsDocAccessible.cpp\n>--- a/accessible/src/base/nsDocAccessible.cpp\n>+++ b/accessible/src/base/nsDocAccessible.cpp\n>@@ -1881,61 +1881,25 @@ nsDocAccessible::UpdateTree(nsAccessible\n> \n> PRUint32\n> nsDocAccessible::UpdateTreeInternal(nsAccessible* aChild, bool aIsInsert)\n> {\n>   PRUint32 updateFlags = eAccessible;\n> \n>   nsINode* node = aChild->GetNode();\n>   if (aIsInsert) {\n>+\t// Fire show event.\n>+    nsRefPtr<AccEvent> event = new AccShowEvent(aChild, node);\n>+    FireDelayedAccessibleEvent(event);\n>+    \n>     // Create accessible tree for shown accessible.\n>     CacheChildrenInSubtree(aChild);\n\nI think you shouldn't change behavior here by moving the event firing to before caching the subtree.\n\n>     UncacheChildrenInSubtree(aChild);\n>+    \n>+    // Fire hide event.\n>+    nsRefPtr<AccEvent> event = new AccHideEvent(aChild, node);\n>+    FireDelayedAccessibleEvent(event);\n\nsimilarly its a change to fire hide event after uncacing, not sure if this is good or bad, but I'd tend to say not to change it here.\n\n>+  // Fire EVENT for root then children\n\ncomment is sort of funny, you only fire event for what actually is a menupopup\n\n>+  if (aRoot->ARIARole() == roles::MENUPOPUP) {\n>+  // Fire EVENT_MENUPOPUP_START if ARIA menu appears.\n>+  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_START,\n>+                              aRoot->GetNode(), AccEvent::eRemoveDupes);\n>+\n>+  } else if (aRoot->ARIARole() == roles::ALERT) {\n\nnot sure you should change alert logic too\n\nI noticed you introduced some whitespace at the end of lines, please configure editor to not do tht.\n\notherwise this seems fine, please have surkov review next version.", "attachment_id": 626264, "text": "Comment on attachment 626264\nPatch 3\n\n>diff --git a/accessible/src/base/nsDocAccessible.cpp b/accessible/src/base/nsDocAccessible.cpp\n>--- a/accessible/src/base/nsDocAccessible.cpp\n>+++ b/accessible/src/base/nsDocAccessible.cpp\n>@@ -1881,61 +1881,25 @@ nsDocAccessible::UpdateTree(nsAccessible\n> \n> PRUint32\n> nsDocAccessible::UpdateTreeInternal(nsAccessible* aChild, bool aIsInsert)\n> {\n>   PRUint32 updateFlags = eAccessible;\n> \n>   nsINode* node = aChild->GetNode();\n>   if (aIsInsert) {\n>+\t// Fire show event.\n>+    nsRefPtr<AccEvent> event = new AccShowEvent(aChild, node);\n>+    FireDelayedAccessibleEvent(event);\n>+    \n>     // Create accessible tree for shown accessible.\n>     CacheChildrenInSubtree(aChild);\n\nI think you shouldn't change behavior here by moving the event firing to before caching the subtree.\n\n>     UncacheChildrenInSubtree(aChild);\n>+    \n>+    // Fire hide event.\n>+    nsRefPtr<AccEvent> event = new AccHideEvent(aChild, node);\n>+    FireDelayedAccessibleEvent(event);\n\nsimilarly its a change to fire hide event after uncacing, not sure if this is good or bad, but I'd tend to say not to change it here.\n\n>+  // Fire EVENT for root then children\n\ncomment is sort of funny, you only fire event for what actually is a menupopup\n\n>+  if (aRoot->ARIARole() == roles::MENUPOPUP) {\n>+  // Fire EVENT_MENUPOPUP_START if ARIA menu appears.\n>+  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_START,\n>+                              aRoot->GetNode(), AccEvent::eRemoveDupes);\n>+\n>+  } else if (aRoot->ARIARole() == roles::ALERT) {\n\nnot sure you should change alert logic too\n\nI noticed you introduced some whitespace at the end of lines, please configure editor to not do tht.\n\notherwise this seems fine, please have surkov review next version.", "bug_id": 682811, "tags": [], "is_private": false, "count": 17, "id": 6329705, "author": "tbsaunde+mozbugs@tbsaunde.org", "creator": "tbsaunde+mozbugs@tbsaunde.org", "creation_time": "2012-05-23T01:17:12Z", "time": "2012-05-23T01:17:12Z"}, {"tags": [], "text": "Comment on attachment 626264\nPatch 3\n\nReview of attachment 626264:\n-----------------------------------------------------------------\n\n1) please fix Trevor's comment\n2) add mochitests for examples I described in comment #8 (replace example 1 on loading a document containing ARIA alert into iframe), you can extend events/test_aria_alert.html  and events/test_aria_menu.html to test new logic\n3) upload the patch and ask for review\n\n::: accessible/src/base/nsDocAccessible.cpp\n@@ +1885,5 @@\n>    PRUint32 updateFlags = eAccessible;\n>  \n>    nsINode* node = aChild->GetNode();\n>    if (aIsInsert) {\n> +\t// Fire show event.\n\nnit: wrong indentation", "bug_id": 682811, "attachment_id": 626264, "raw_text": "Review of attachment 626264:\n-----------------------------------------------------------------\n\n1) please fix Trevor's comment\n2) add mochitests for examples I described in comment #8 (replace example 1 on loading a document containing ARIA alert into iframe), you can extend events/test_aria_alert.html  and events/test_aria_menu.html to test new logic\n3) upload the patch and ask for review\n\n::: accessible/src/base/nsDocAccessible.cpp\n@@ +1885,5 @@\n>    PRUint32 updateFlags = eAccessible;\n>  \n>    nsINode* node = aChild->GetNode();\n>    if (aIsInsert) {\n> +\t// Fire show event.\n\nnit: wrong indentation", "time": "2012-05-23T02:49:48Z", "creation_time": "2012-05-23T02:49:48Z", "creator": "surkov.alexander@gmail.com", "author": "surkov.alexander@gmail.com", "id": 6329871, "count": 18, "is_private": false}, {"is_private": false, "count": 19, "id": 6331406, "creator": "djgoodrich@csupomona.edu", "creation_time": "2012-05-23T16:06:05Z", "time": "2012-05-23T16:06:05Z", "author": "djgoodrich@csupomona.edu", "attachment_id": null, "raw_text": "(In reply to Trevor Saunders (:tbsaunde) from comment #17)\n> Comment on attachment 626264\n> Patch 3\n> \n> >diff --git a/accessible/src/base/nsDocAccessible.cpp b/accessible/src/base/nsDocAccessible.cpp\n> >--- a/accessible/src/base/nsDocAccessible.cpp\n> >+++ b/accessible/src/base/nsDocAccessible.cpp\n> >@@ -1881,61 +1881,25 @@ nsDocAccessible::UpdateTree(nsAccessible\n> > \n> > PRUint32\n> > nsDocAccessible::UpdateTreeInternal(nsAccessible* aChild, bool aIsInsert)\n> > {\n> >   PRUint32 updateFlags = eAccessible;\n> > \n> >   nsINode* node = aChild->GetNode();\n> >   if (aIsInsert) {\n> >+\t// Fire show event.\n> >+    nsRefPtr<AccEvent> event = new AccShowEvent(aChild, node);\n> >+    FireDelayedAccessibleEvent(event);\n> >+    \n> >     // Create accessible tree for shown accessible.\n> >     CacheChildrenInSubtree(aChild);\n> \n> I think you shouldn't change behavior here by moving the event firing to\n> before caching the subtree.\n\nThis was done to accommodate:\n\n(In reply to alexander :surkov from comment #12)\n> Comment on attachment 625439\n> patch\n> \n> Review of attachment 625439:\n> -----------------------------------------------------------------\n> \n> ::: accessible/src/base/nsDocAccessible.cpp\n> @@ +1972,5 @@\n> > +\t\t} else if (ariaRole == roles::ALERT) {\n> > +\t\t  // Fire EVENT_ALERT if ARIA alert appears.\n> > +\t\t  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_ALERT, child->GetNode(),\n> > +\t\t\t\t\t\t\t\t\t AccEvent::eRemoveDupes);\n> > +\t\t}\n> \n> this makes event fired before show event what is not right (show event means\n> for AT that accessible is created)\n> \n> @@ +1995,5 @@\n> > +\n> > +      if (event)\n> > +        FireDelayedAccessibleEvent(event);\n> > +    }\n> > +    UncacheChildrenInSubtree(child);\n> \n> this makes it fire after hide event (hide event means for AT accessible is\n> destroyed)\n\nIf there is another way that I should do it, please let me know otherwise the firing order will not be changed from what it currently is at.", "bug_id": 682811, "text": "(In reply to Trevor Saunders (:tbsaunde) from comment #17)\n> Comment on attachment 626264\n> Patch 3\n> \n> >diff --git a/accessible/src/base/nsDocAccessible.cpp b/accessible/src/base/nsDocAccessible.cpp\n> >--- a/accessible/src/base/nsDocAccessible.cpp\n> >+++ b/accessible/src/base/nsDocAccessible.cpp\n> >@@ -1881,61 +1881,25 @@ nsDocAccessible::UpdateTree(nsAccessible\n> > \n> > PRUint32\n> > nsDocAccessible::UpdateTreeInternal(nsAccessible* aChild, bool aIsInsert)\n> > {\n> >   PRUint32 updateFlags = eAccessible;\n> > \n> >   nsINode* node = aChild->GetNode();\n> >   if (aIsInsert) {\n> >+\t// Fire show event.\n> >+    nsRefPtr<AccEvent> event = new AccShowEvent(aChild, node);\n> >+    FireDelayedAccessibleEvent(event);\n> >+    \n> >     // Create accessible tree for shown accessible.\n> >     CacheChildrenInSubtree(aChild);\n> \n> I think you shouldn't change behavior here by moving the event firing to\n> before caching the subtree.\n\nThis was done to accommodate:\n\n(In reply to alexander :surkov from comment #12)\n> Comment on attachment 625439\n> patch\n> \n> Review of attachment 625439:\n> -----------------------------------------------------------------\n> \n> ::: accessible/src/base/nsDocAccessible.cpp\n> @@ +1972,5 @@\n> > +\t\t} else if (ariaRole == roles::ALERT) {\n> > +\t\t  // Fire EVENT_ALERT if ARIA alert appears.\n> > +\t\t  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_ALERT, child->GetNode(),\n> > +\t\t\t\t\t\t\t\t\t AccEvent::eRemoveDupes);\n> > +\t\t}\n> \n> this makes event fired before show event what is not right (show event means\n> for AT that accessible is created)\n> \n> @@ +1995,5 @@\n> > +\n> > +      if (event)\n> > +        FireDelayedAccessibleEvent(event);\n> > +    }\n> > +    UncacheChildrenInSubtree(child);\n> \n> this makes it fire after hide event (hide event means for AT accessible is\n> destroyed)\n\nIf there is another way that I should do it, please let me know otherwise the firing order will not be changed from what it currently is at.", "tags": []}, {"text": "(In reply to Trevor Saunders (:tbsaunde) from comment #17)\n> Comment on attachment 626264\n> Patch 3\n> >+  // Fire EVENT for root then children\n> \n> comment is sort of funny, you only fire event for what actually is a\n> menupopup\n> \n\nComment has been removed as the recursion is self explanitory\n\n> >+  if (aRoot->ARIARole() == roles::MENUPOPUP) {\n> >+  // Fire EVENT_MENUPOPUP_START if ARIA menu appears.\n> >+  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_START,\n> >+                              aRoot->GetNode(), AccEvent::eRemoveDupes);\n> >+\n> >+  } else if (aRoot->ARIARole() == roles::ALERT) {\n> \n> not sure you should change alert logic too\n> \n> I noticed you introduced some whitespace at the end of lines, please\n> configure editor to not do tht.\n> \n\nAlert logic has been taken from the updateTreeInternal method before the changes.", "bug_id": 682811, "tags": [], "attachment_id": null, "raw_text": "(In reply to Trevor Saunders (:tbsaunde) from comment #17)\n> Comment on attachment 626264\n> Patch 3\n> >+  // Fire EVENT for root then children\n> \n> comment is sort of funny, you only fire event for what actually is a\n> menupopup\n> \n\nComment has been removed as the recursion is self explanitory\n\n> >+  if (aRoot->ARIARole() == roles::MENUPOPUP) {\n> >+  // Fire EVENT_MENUPOPUP_START if ARIA menu appears.\n> >+  FireDelayedAccessibleEvent(nsIAccessibleEvent::EVENT_MENUPOPUP_START,\n> >+                              aRoot->GetNode(), AccEvent::eRemoveDupes);\n> >+\n> >+  } else if (aRoot->ARIARole() == roles::ALERT) {\n> \n> not sure you should change alert logic too\n> \n> I noticed you introduced some whitespace at the end of lines, please\n> configure editor to not do tht.\n> \n\nAlert logic has been taken from the updateTreeInternal method before the changes.", "time": "2012-05-24T00:18:19Z", "creation_time": "2012-05-24T00:18:19Z", "creator": "djgoodrich@csupomona.edu", "author": "djgoodrich@csupomona.edu", "id": 6333241, "count": 20, "is_private": false}, {"attachment_id": 628574, "raw_text": "No mochitests were added as the current mochitests seem to be sufficient.", "text": "Created attachment 628574\nPatch 4 - on new DocAccessible.cpp file - no mochitests\n\nNo mochitests were added as the current mochitests seem to be sufficient.", "bug_id": 682811, "tags": [], "is_private": false, "count": 21, "id": 6350893, "creator": "djgoodrich@csupomona.edu", "time": "2012-05-31T02:49:39Z", "creation_time": "2012-05-31T02:49:39Z", "author": "djgoodrich@csupomona.edu"}, {"tags": [], "bug_id": 682811, "text": "(In reply to Daniel Goodrich from comment #21)\n\n> No mochitests were added as the current mochitests seem to be sufficient.\n\nIf they are sufficient then why they don't fail?", "raw_text": "(In reply to Daniel Goodrich from comment #21)\n\n> No mochitests were added as the current mochitests seem to be sufficient.\n\nIf they are sufficient then why they don't fail?", "attachment_id": null, "author": "surkov.alexander@gmail.com", "creator": "surkov.alexander@gmail.com", "time": "2012-05-31T04:38:56Z", "creation_time": "2012-05-31T04:38:56Z", "is_private": false, "count": 22, "id": 6351066}, {"id": 6351090, "count": 23, "is_private": false, "author": "Jennyherrera.19@gmail.com", "time": "2012-05-31T04:50:47Z", "creation_time": "2012-05-31T04:50:47Z", "creator": "Jennyherrera.19@gmail.com", "raw_text": "(In reply to alexander :surkov from comment #22)\n> (In reply to Daniel Goodrich from comment #21)\n> \n> > No mochitests were added as the current mochitests seem to be sufficient.\n> \n> If they are sufficient then why they don't fail?\n\nSo they are suppose to fail?", "attachment_id": null, "tags": [], "bug_id": 682811, "text": "(In reply to alexander :surkov from comment #22)\n> (In reply to Daniel Goodrich from comment #21)\n> \n> > No mochitests were added as the current mochitests seem to be sufficient.\n> \n> If they are sufficient then why they don't fail?\n\nSo they are suppose to fail?"}, {"raw_text": "(In reply to alexander :surkov from comment #22)\n> (In reply to Daniel Goodrich from comment #21)\n> \n> > No mochitests were added as the current mochitests seem to be sufficient.\n> \n> If they are sufficient then why they don't fail?\n\nSo they are suppose to fail?", "attachment_id": null, "tags": [], "text": "(In reply to alexander :surkov from comment #22)\n> (In reply to Daniel Goodrich from comment #21)\n> \n> > No mochitests were added as the current mochitests seem to be sufficient.\n> \n> If they are sufficient then why they don't fail?\n\nSo they are suppose to fail?", "bug_id": 682811, "is_private": false, "count": 24, "id": 6351092, "author": "Jennyherrera.19@gmail.com", "creator": "Jennyherrera.19@gmail.com", "time": "2012-05-31T04:51:15Z", "creation_time": "2012-05-31T04:51:15Z"}, {"creator": "surkov.alexander@gmail.com", "creation_time": "2012-05-31T05:02:12Z", "time": "2012-05-31T05:02:12Z", "author": "surkov.alexander@gmail.com", "is_private": false, "count": 25, "id": 6351117, "tags": [], "bug_id": 682811, "text": "say you have a bug which is covered by automated test. When you fix a bug then that test should fail, if it doesn't then bug is not covered by that test. Sounds correct?", "attachment_id": null, "raw_text": "say you have a bug which is covered by automated test. When you fix a bug then that test should fail, if it doesn't then bug is not covered by that test. Sounds correct?"}, {"author": "Jennyherrera.19@gmail.com", "creator": "Jennyherrera.19@gmail.com", "creation_time": "2012-06-02T04:09:44Z", "time": "2012-06-02T04:09:44Z", "is_private": false, "id": 6357675, "count": 26, "tags": [], "text": "(In reply to alexander :surkov from comment #25)\n> say you have a bug which is covered by automated test. When you fix a bug\n> then that test should fail, if it doesn't then bug is not covered by that\n> test. Sounds correct?\n\nOk, I understand this but I have a question, I made the changes to the DocAccessible and added tests to events/test_aria_alert.html, which passes, but if I revert the changes of DocAccessible to the original from the repository and keep the added tests, should it fail?", "bug_id": 682811, "raw_text": "(In reply to alexander :surkov from comment #25)\n> say you have a bug which is covered by automated test. When you fix a bug\n> then that test should fail, if it doesn't then bug is not covered by that\n> test. Sounds correct?\n\nOk, I understand this but I have a question, I made the changes to the DocAccessible and added tests to events/test_aria_alert.html, which passes, but if I revert the changes of DocAccessible to the original from the repository and keep the added tests, should it fail?", "attachment_id": null}, {"count": 27, "id": 6357683, "is_private": false, "author": "surkov.alexander@gmail.com", "creation_time": "2012-06-02T04:18:13Z", "time": "2012-06-02T04:18:13Z", "creator": "surkov.alexander@gmail.com", "raw_text": "(In reply to Jenny from comment #26)\n> (In reply to alexander :surkov from comment #25)\n\n> Ok, I understand this but I have a question, I made the changes to the\n> DocAccessible and added tests to events/test_aria_alert.html, which passes,\n> but if I revert the changes of DocAccessible to the original from the\n> repository and keep the added tests, should it fail?\n\nif test is correct then yes", "attachment_id": null, "bug_id": 682811, "text": "(In reply to Jenny from comment #26)\n> (In reply to alexander :surkov from comment #25)\n\n> Ok, I understand this but I have a question, I made the changes to the\n> DocAccessible and added tests to events/test_aria_alert.html, which passes,\n> but if I revert the changes of DocAccessible to the original from the\n> repository and keep the added tests, should it fail?\n\nif test is correct then yes", "tags": []}, {"is_private": false, "count": 28, "id": 6360305, "author": "surkov.alexander@gmail.com", "creator": "surkov.alexander@gmail.com", "creation_time": "2012-06-04T05:34:27Z", "time": "2012-06-04T05:34:27Z", "raw_text": "Any success on mochitest? If you run into problems then you might want to show it for feedback.", "attachment_id": null, "bug_id": 682811, "text": "Any success on mochitest? If you run into problems then you might want to show it for feedback.", "tags": []}, {"raw_text": "It is finals week for us, so we are concentrating on that more than this bug.", "attachment_id": null, "text": "It is finals week for us, so we are concentrating on that more than this bug.", "bug_id": 682811, "tags": [], "count": 29, "id": 6360334, "is_private": false, "author": "djgoodrich@csupomona.edu", "time": "2012-06-04T06:10:13Z", "creation_time": "2012-06-04T06:10:13Z", "creator": "djgoodrich@csupomona.edu"}, {"creator": "surkov.alexander@gmail.com", "time": "2012-06-04T06:17:13Z", "creation_time": "2012-06-04T06:17:13Z", "author": "surkov.alexander@gmail.com", "is_private": false, "count": 30, "id": 6360348, "tags": [], "text": "(In reply to Daniel Goodrich from comment #29)\n> It is finals week for us, so we are concentrating on that more than this bug.\n\nsure, please take your time", "bug_id": 682811, "attachment_id": null, "raw_text": "(In reply to Daniel Goodrich from comment #29)\n> It is finals week for us, so we are concentrating on that more than this bug.\n\nsure, please take your time"}, {"bug_id": 682811, "text": "Comment on attachment 628574\nPatch 4 - on new DocAccessible.cpp file - no mochitests\n\ncancelling feedback until comments are addressed", "tags": [], "raw_text": "cancelling feedback until comments are addressed", "attachment_id": 628574, "author": "surkov.alexander@gmail.com", "creation_time": "2012-06-10T11:49:47Z", "time": "2012-06-10T11:49:47Z", "creator": "surkov.alexander@gmail.com", "id": 6378678, "count": 31, "is_private": false}]}}, "comments": {}}