{"comments": {}, "bugs": {"699321": {"comments": [{"tags": [], "attachment_id": null, "creation_time": "2011-11-03T03:40:03Z", "is_private": false, "creator": "bzbarsky@mit.edu", "raw_text": "In particular, unlinking removes all the kids without notifying, so observers that depend on state being consistent until NodeWillBeDestroyed can get all confused., unless I'm missing something.  See bug 620122 comment 23.\n\n_Am_ I missing something?", "time": "2011-11-03T03:40:03Z", "bug_id": 699321, "id": 5822789, "text": "In particular, unlinking removes all the kids without notifying, so observers that depend on state being consistent until NodeWillBeDestroyed can get all confused., unless I'm missing something.  See bug 620122 comment 23.\n\n_Am_ I missing something?", "count": 0, "author": "bzbarsky@mit.edu"}, {"raw_text": "NodeWillBeDestroyed does get fired for all the nodes in nsNodeUtils::LastRelease().\nIt can be called when CC unroots objects, or it can happen during unlink\nor outside CC - whenever refcount drops to 0.\nIt would be wrong to fire it in other cases.\n\nUnlinking does fire ParentChainChanged (via unbind).\n\nSo, I'm not sure what kind of notification your thinking about.", "time": "2011-11-03T11:56:05Z", "text": "NodeWillBeDestroyed does get fired for all the nodes in nsNodeUtils::LastRelease().\nIt can be called when CC unroots objects, or it can happen during unlink\nor outside CC - whenever refcount drops to 0.\nIt would be wrong to fire it in other cases.\n\nUnlinking does fire ParentChainChanged (via unbind).\n\nSo, I'm not sure what kind of notification your thinking about.", "count": 1, "author": "bugs@pettay.fi", "bug_id": 699321, "id": 5823217, "attachment_id": null, "tags": [], "creator": "bugs@pettay.fi", "creation_time": "2011-11-03T11:56:05Z", "is_private": false}, {"bug_id": 699321, "id": 5823296, "is_private": false, "creation_time": "2011-11-03T13:09:09Z", "creator": "bzbarsky@mit.edu", "text": "> NodeWillBeDestroyed does get fired for all the nodes in nsNodeUtils::LastRelease().\n\nYes, that's too late.\n\n> Unlinking does fire ParentChainChanged (via unbind).\n\nThat's not good enough.  It doesn't fire ContentRemoved on the child nodes, in particular.\n\nIf a nodelist Y has node X as a root and X gets unlinked before Y, then it's possible for X to drop its child nodes without notifying Y (no ContentRemoved), then those child nodes to ask Y to walk the DOM while being unbound.  At this point Y expects that those child nodes are still descendants of X and will crash if they're not.\n\nNormally when Y gets NodeWillBeDestroyed it will stop trying to walk the DOM.  But in this case that notification just comes too late.\n\nWhat Y _really_ needs in this case is either for unlink on X to fire ContentRemoved or for some other notification that X is starting unlink and that Y should therefore stop assuming that DOM state is consistent.", "count": 2, "author": "bzbarsky@mit.edu", "tags": [], "time": "2011-11-03T13:09:09Z", "raw_text": "> NodeWillBeDestroyed does get fired for all the nodes in nsNodeUtils::LastRelease().\n\nYes, that's too late.\n\n> Unlinking does fire ParentChainChanged (via unbind).\n\nThat's not good enough.  It doesn't fire ContentRemoved on the child nodes, in particular.\n\nIf a nodelist Y has node X as a root and X gets unlinked before Y, then it's possible for X to drop its child nodes without notifying Y (no ContentRemoved), then those child nodes to ask Y to walk the DOM while being unbound.  At this point Y expects that those child nodes are still descendants of X and will crash if they're not.\n\nNormally when Y gets NodeWillBeDestroyed it will stop trying to walk the DOM.  But in this case that notification just comes too late.\n\nWhat Y _really_ needs in this case is either for unlink on X to fire ContentRemoved or for some other notification that X is starting unlink and that Y should therefore stop assuming that DOM state is consistent.", "attachment_id": null}, {"creation_time": "2011-11-03T14:17:31Z", "is_private": false, "id": 5823417, "bug_id": 699321, "text": "So unlinking should notify ContentRemoved. That sounds the right thing to do, IMO.\n(I hope that doesn't get too slow. I'm already worried about nsIMutationObserver notification performance)", "count": 3, "author": "bugs@pettay.fi", "creator": "bugs@pettay.fi", "tags": [], "raw_text": "So unlinking should notify ContentRemoved. That sounds the right thing to do, IMO.\n(I hope that doesn't get too slow. I'm already worried about nsIMutationObserver notification performance)", "attachment_id": null, "time": "2011-11-03T14:17:31Z"}, {"author": "bzbarsky@mit.edu", "text": "> So unlinking should notify ContentRemoved.\n\nI'm really worried by the performance aspects there...\n\nOn the other hand, I guess depending on the order the unlink happens in for nodes in the subtree being unlinked, things could end up disconnected before the nodelist's root is unlinked.  So we probably do need to just notify ContentRemoved.  :(  Any ways you see around that?", "count": 4, "bug_id": 699321, "id": 5823436, "raw_text": "> So unlinking should notify ContentRemoved.\n\nI'm really worried by the performance aspects there...\n\nOn the other hand, I guess depending on the order the unlink happens in for nodes in the subtree being unlinked, things could end up disconnected before the nodelist's root is unlinked.  So we probably do need to just notify ContentRemoved.  :(  Any ways you see around that?", "time": "2011-11-03T14:27:57Z", "creator": "bzbarsky@mit.edu", "creation_time": "2011-11-03T14:27:57Z", "is_private": false, "attachment_id": null, "tags": []}, {"creator": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2018-06-29T04:59:40Z", "is_private": false, "attachment_id": null, "tags": [], "author": "bug-husbandry-bot@mozilla.bugs", "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "count": 5, "bug_id": 699321, "id": 13437072, "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "time": "2018-06-29T04:59:40Z"}]}}}