{"bugs": {"686235": {"comments": [{"creator": "honzab.moz@firemni.cz", "author": "honzab.moz@firemni.cz", "creation_time": "2011-09-11T22:09:13Z", "raw_text": "See the test case (just unpack the archive, index.html loaded as a local file is enough to reproduce, no need for a server).  \n\nSTR: Simply load the page, set Firefox to remember open windows, close it and start again.  \n\nResult: The small image in the iframe will be shown as broken.  The request for it is never made, until I hit Ctrl-F5!\nThis is very old bug, I wanted to report it at least a year ago since I was experiencing it since the old 3.0 branch.  I confirmed this is reproducible since 3.6.22 till current mozilla-central.\n\nIn the log I can see following errors when I pres just F5:\n\n2011-09-11 21:59:38.655000 UTC - 0[32c7f8]: WARNING: Subdocument container has no frame: file c:/Mozilla/src/mozilla-central/layout/base/nsDocumentViewer.cpp, line 2422\n2011-09-11 21:59:38.671000 UTC - 0[32c7f8]: WARNING: NS_ENSURE_SUCCESS(rv, rv) failed with result 0x804B000A: file c:/Mozilla/src/mozilla-central/content/base/src/nsImageLoadingContent.cpp, line 632\n\n[1], nsImageLoadingContent::StringToURI fails because |baseURI| is nsNestedAboutURI and not the document URI.  aSpec is in this case just a relative URI.\n\n\nPreview of the code to reproduce:\n\n<!DOCTYPE html>\n<html>\n<head>\n<script>\n/*\n Body of this page has an empty (src=\"\") iframe.\n It is filled with a simple html (innerHTML) with an image inside.\n\n After restart, the image is displayed as broken.\n */\nfunction test()\n{\n  var frm = document.getElementById(\"_frm\");\n  frm.contentDocument.body.innerHTML = \n    \"<html><body><img src='some.gif' /></body></html>\";\n}\n</script>\n</head>\n<body onload=\"test()\">\n<iframe src=\"\" id=\"_frm\"></iframe>\n</body>\n</html>\n\n\n[1] http://hg.mozilla.org/mozilla-central/annotate/b384cfab8b1d/content/base/src/nsImageLoadingContent.cpp#l871", "text": "Created attachment 559794\nTest case archive\n\nSee the test case (just unpack the archive, index.html loaded as a local file is enough to reproduce, no need for a server).  \n\nSTR: Simply load the page, set Firefox to remember open windows, close it and start again.  \n\nResult: The small image in the iframe will be shown as broken.  The request for it is never made, until I hit Ctrl-F5!\nThis is very old bug, I wanted to report it at least a year ago since I was experiencing it since the old 3.0 branch.  I confirmed this is reproducible since 3.6.22 till current mozilla-central.\n\nIn the log I can see following errors when I pres just F5:\n\n2011-09-11 21:59:38.655000 UTC - 0[32c7f8]: WARNING: Subdocument container has no frame: file c:/Mozilla/src/mozilla-central/layout/base/nsDocumentViewer.cpp, line 2422\n2011-09-11 21:59:38.671000 UTC - 0[32c7f8]: WARNING: NS_ENSURE_SUCCESS(rv, rv) failed with result 0x804B000A: file c:/Mozilla/src/mozilla-central/content/base/src/nsImageLoadingContent.cpp, line 632\n\n[1], nsImageLoadingContent::StringToURI fails because |baseURI| is nsNestedAboutURI and not the document URI.  aSpec is in this case just a relative URI.\n\n\nPreview of the code to reproduce:\n\n<!DOCTYPE html>\n<html>\n<head>\n<script>\n/*\n Body of this page has an empty (src=\"\") iframe.\n It is filled with a simple html (innerHTML) with an image inside.\n\n After restart, the image is displayed as broken.\n */\nfunction test()\n{\n  var frm = document.getElementById(\"_frm\");\n  frm.contentDocument.body.innerHTML = \n    \"<html><body><img src='some.gif' /></body></html>\";\n}\n</script>\n</head>\n<body onload=\"test()\">\n<iframe src=\"\" id=\"_frm\"></iframe>\n</body>\n</html>\n\n\n[1] http://hg.mozilla.org/mozilla-central/annotate/b384cfab8b1d/content/base/src/nsImageLoadingContent.cpp#l871", "time": "2011-09-11T22:09:13Z", "attachment_id": 559794, "tags": [], "count": 0, "is_private": false, "id": 5713488, "bug_id": 686235}, {"creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "bug_id": 686235, "tags": [], "is_private": false, "count": 1, "id": 5713847, "text": "So the point is that the dynamically added iframe has the wrong base URI after restore, right?\n\nRight now, the base URI of an about: document is set via the baseURI channel property.  And this is set from the base URI used to resolve the about: URI.\n\nUnfortunately, I expect session restore doesn't go through loading APIs that take an nsIURI, right?", "attachment_id": null, "time": "2011-09-12T07:17:26Z", "creation_time": "2011-09-12T07:17:26Z", "raw_text": "So the point is that the dynamically added iframe has the wrong base URI after restore, right?\n\nRight now, the base URI of an about: document is set via the baseURI channel property.  And this is set from the base URI used to resolve the about: URI.\n\nUnfortunately, I expect session restore doesn't go through loading APIs that take an nsIURI, right?"}, {"bug_id": 686235, "id": 5714569, "tags": [], "is_private": false, "count": 2, "time": "2011-09-12T20:54:26Z", "attachment_id": null, "text": "(In reply to Boris Zbarsky (:bz) from comment #1)\n> So the point is that the dynamically added iframe has the wrong base URI\n> after restore, right?\n\nExactly.\n\n> \n> Right now, the base URI of an about: document is set via the baseURI channel\n> property.  And this is set from the base URI used to resolve the about: URI.\n> \n> Unfortunately, I expect session restore doesn't go through loading APIs that\n> take an nsIURI, right?\n\nI don't know this code very well, what exactly should I look for?", "creation_time": "2011-09-12T20:54:26Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #1)\n> So the point is that the dynamically added iframe has the wrong base URI\n> after restore, right?\n\nExactly.\n\n> \n> Right now, the base URI of an about: document is set via the baseURI channel\n> property.  And this is set from the base URI used to resolve the about: URI.\n> \n> Unfortunately, I expect session restore doesn't go through loading APIs that\n> take an nsIURI, right?\n\nI don't know this code very well, what exactly should I look for?", "author": "honzab.moz@firemni.cz", "creator": "honzab.moz@firemni.cz"}, {"creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "bug_id": 686235, "tags": [], "count": 3, "is_private": false, "id": 5714819, "text": "How exactly does session restore load its subframes?", "attachment_id": null, "time": "2011-09-12T23:41:27Z", "raw_text": "How exactly does session restore load its subframes?", "creation_time": "2011-09-12T23:41:27Z"}, {"creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "bug_id": 686235, "is_private": false, "count": 4, "tags": [], "id": 5714821, "text": "Actually, the best thing to look for is what session restore does with nsIPrincipals it deserializes from the session data.  Presumably those get passed to the subframe loads somehow.", "time": "2011-09-12T23:42:12Z", "attachment_id": null, "creation_time": "2011-09-12T23:42:12Z", "raw_text": "Actually, the best thing to look for is what session restore does with nsIPrincipals it deserializes from the session data.  Presumably those get passed to the subframe loads somehow."}, {"author": "honzab.moz@firemni.cz", "creator": "honzab.moz@firemni.cz", "attachment_id": null, "time": "2011-09-13T18:32:42Z", "text": "I think this falls to my \"later\" list.  But it annoys me because it breaks my web app, so I'll try to give it some effort.", "raw_text": "I think this falls to my \"later\" list.  But it annoys me because it breaks my web app, so I'll try to give it some effort.", "creation_time": "2011-09-13T18:32:42Z", "bug_id": 686235, "id": 5715756, "tags": [], "is_private": false, "count": 5}]}}, "comments": {}}