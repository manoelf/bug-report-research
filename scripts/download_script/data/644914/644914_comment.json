{"comments": {}, "bugs": {"644914": {"comments": [{"id": 5368520, "time": "2011-03-25T06:05:53Z", "author": "roguethunderbird@gmail.com", "count": 0, "text": "User-Agent:       Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\n\nPretty much the summary,\n\nTry pinning a shortcut named \"Firefox 1\" and then use it, firefox will partially seperate itself from the icon leaving the icon in the W7 taskbar AND adding a window of firefox.\n\nEspecially undesirable if like me, you use 3 instances of firefox. (2 of which run -no-remote -p profile1( and profile2 and profile3) but irritating even with a single instance...\n\nWorked fine in Firefox 3.5(Possibly newer pre4.0, I forget exactly what I was updated to but I've been doing this since 3.0), a shortcut named \"Mozilla Firefox 1\" would stay bonded to the firefox instance it started if pinned.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Make shortcut named anything other than Mozilla Firefox that starts firefox\n2. Drag to Windows 7 taskbar to pin. \n3. left-click said pinned item, watch the wrongness\nActual Results:  \nFirefox starts, but creates a new taskbar item instead of replacing the pinned item, leaving a pinned item laying around.\n\nExpected Results:  \nThe pinned icon should have expanded into a window-taskbar item.\n\nRunning default theme. Happens even running a single instance, just is more irritating if running multiple.", "is_private": false, "attachment_id": null, "tags": [], "creator": "roguethunderbird@gmail.com", "creation_time": "2011-03-25T06:05:53Z", "bug_id": 644914, "raw_text": "User-Agent:       Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\nBuild Identifier: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0) Gecko/20100101 Firefox/4.0\n\nPretty much the summary,\n\nTry pinning a shortcut named \"Firefox 1\" and then use it, firefox will partially seperate itself from the icon leaving the icon in the W7 taskbar AND adding a window of firefox.\n\nEspecially undesirable if like me, you use 3 instances of firefox. (2 of which run -no-remote -p profile1( and profile2 and profile3) but irritating even with a single instance...\n\nWorked fine in Firefox 3.5(Possibly newer pre4.0, I forget exactly what I was updated to but I've been doing this since 3.0), a shortcut named \"Mozilla Firefox 1\" would stay bonded to the firefox instance it started if pinned.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Make shortcut named anything other than Mozilla Firefox that starts firefox\n2. Drag to Windows 7 taskbar to pin. \n3. left-click said pinned item, watch the wrongness\nActual Results:  \nFirefox starts, but creates a new taskbar item instead of replacing the pinned item, leaving a pinned item laying around.\n\nExpected Results:  \nThe pinned icon should have expanded into a window-taskbar item.\n\nRunning default theme. Happens even running a single instance, just is more irritating if running multiple."}, {"author": "bebe@mozilla.ro", "text": "I can't pin on my taskbar tow shortcuts with a different name as the only diference.\n\n\nIf I pin the default firefox shortcut and one containing the \"-no-remote -p profile1\" option, the \"-no-remote -p profile1\" shortcut, if opened, finally becomes only firefox.exe which is the other shortcut \"default\" one and it is recognized by the taskbar as that shortcut(default).\n\n\nI personally think it is a windows problem not firefox", "count": 1, "attachment_id": null, "creator": "bebe@mozilla.ro", "id": 5369030, "time": "2011-03-25T13:15:45Z", "is_private": false, "tags": [], "raw_text": "I can't pin on my taskbar tow shortcuts with a different name as the only diference.\n\n\nIf I pin the default firefox shortcut and one containing the \"-no-remote -p profile1\" option, the \"-no-remote -p profile1\" shortcut, if opened, finally becomes only firefox.exe which is the other shortcut \"default\" one and it is recognized by the taskbar as that shortcut(default).\n\n\nI personally think it is a windows problem not firefox", "bug_id": 644914, "creation_time": "2011-03-25T13:15:45Z"}, {"time": "2011-03-25T22:58:29Z", "id": 5370977, "creation_time": "2011-03-25T22:58:29Z", "bug_id": 644914, "raw_text": "(In reply to comment #1)\n> I can't pin on my taskbar tow shortcuts with a different name as the only\n> diference.\n> \n> \n> If I pin the default firefox shortcut and one containing the \"-no-remote -p\n> profile1\" option, the \"-no-remote -p profile1\" shortcut, if opened, finally\n> becomes only firefox.exe which is the other shortcut \"default\" one and it is\n> recognized by the taskbar as that shortcut(default).\n> \n> \n> I personally think it is a windows problem not firefox\n\nExcept earlier versions of firefox work fine in this regard as long as the names of the shortcuts are different. Besides, you don't even need a \"-no-remote -p profile1\" second instance to hit this bug. As I noted.", "tags": [], "is_private": false, "count": 2, "text": "(In reply to comment #1)\n> I can't pin on my taskbar tow shortcuts with a different name as the only\n> diference.\n> \n> \n> If I pin the default firefox shortcut and one containing the \"-no-remote -p\n> profile1\" option, the \"-no-remote -p profile1\" shortcut, if opened, finally\n> becomes only firefox.exe which is the other shortcut \"default\" one and it is\n> recognized by the taskbar as that shortcut(default).\n> \n> \n> I personally think it is a windows problem not firefox\n\nExcept earlier versions of firefox work fine in this regard as long as the names of the shortcuts are different. Besides, you don't even need a \"-no-remote -p profile1\" second instance to hit this bug. As I noted.", "author": "roguethunderbird@gmail.com", "creator": "roguethunderbird@gmail.com", "attachment_id": null}, {"attachment_id": null, "is_private": false, "bug_id": 644914, "creation_time": "2011-03-25T23:01:50Z", "raw_text": "Gah. Comments really need editability.\n\nI'm fairly certain whats happening is that Firefox 4 windows are not taking on the title of the shortcut that starts them. Prevous versions did this. W7 combines task-bar items in part based on this from what I can tell.", "tags": [], "creator": "roguethunderbird@gmail.com", "time": "2011-03-25T23:01:50Z", "author": "roguethunderbird@gmail.com", "id": 5370985, "text": "Gah. Comments really need editability.\n\nI'm fairly certain whats happening is that Firefox 4 windows are not taking on the title of the shortcut that starts them. Prevous versions did this. W7 combines task-bar items in part based on this from what I can tell.", "count": 3}, {"text": "Shortcuts have an internal ID associated with them for the taskbar. Without that set on the shortcut you pin, grouping won't work. This is by design via win7. If you want to do this, copy a shortcut we create through the installer, rename it, and pin it. Grouping will work correctly.", "count": 4, "author": "jmathies@mozilla.com", "creator": "jmathies@mozilla.com", "attachment_id": null, "id": 5371397, "time": "2011-03-26T02:38:20Z", "tags": [], "raw_text": "Shortcuts have an internal ID associated with them for the taskbar. Without that set on the shortcut you pin, grouping won't work. This is by design via win7. If you want to do this, copy a shortcut we create through the installer, rename it, and pin it. Grouping will work correctly.", "creation_time": "2011-03-26T02:38:20Z", "bug_id": 644914, "is_private": false}, {"author": "abhinav.kumar.in@gmail.com", "text": "After updating 4.0 to 4.0.1, I pinned the original shortcut \"Mozilla Firefox\" to the taskbar. Now it is acting the same. After launching the pinned one, one more icon appears which is apparently the running one.\n\nNow if I pin the running Firefox icon. I could see in %appdata%\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar, there are two items:\n\nFirefox - this is the one which is running all the time (Modified date: the day I updated to 4.0.1)\nMozilla Firefox - this is the one I pinned earlier and which now merely acts a launcher (Modified date: the day I insntalled 4.0)\n\nAs a side note: If someone has already pinned the shortcut taskbar and then updates to 4.0.1. The Mozilla Firefox icon reappears in the \"Start menu's Recent Programs List\" which shouldn't happen if an item is pinned to taskbar.\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=653633", "count": 5, "attachment_id": null, "creator": "abhinav.kumar.in@gmail.com", "time": "2011-04-29T02:34:47Z", "id": 5438800, "is_private": false, "raw_text": "After updating 4.0 to 4.0.1, I pinned the original shortcut \"Mozilla Firefox\" to the taskbar. Now it is acting the same. After launching the pinned one, one more icon appears which is apparently the running one.\n\nNow if I pin the running Firefox icon. I could see in %appdata%\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar, there are two items:\n\nFirefox - this is the one which is running all the time (Modified date: the day I updated to 4.0.1)\nMozilla Firefox - this is the one I pinned earlier and which now merely acts a launcher (Modified date: the day I insntalled 4.0)\n\nAs a side note: If someone has already pinned the shortcut taskbar and then updates to 4.0.1. The Mozilla Firefox icon reappears in the \"Start menu's Recent Programs List\" which shouldn't happen if an item is pinned to taskbar.\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=653633", "bug_id": 644914, "creation_time": "2011-04-29T02:34:47Z", "tags": []}, {"bug_id": 644914, "creation_time": "2012-02-23T15:10:33Z", "raw_text": "> Shortcuts have an internal ID associated with them for the taskbar. Without that set on the shortcut you pin, grouping won't work. This is by design via win7. If you want to do this, copy a shortcut we create through the installer, rename it, and pin it. Grouping will work correctly.\n\nThat's not my experience.\n\nUsing Chrome as an example.\n\nIt's not on my taskbar.\nI start it from some other mechanism.\nWhile it is running, I right click and Pin it.\nSubsequent chrome window now get stacked with the icon.\nAnd it opens properly from the icon.", "tags": [], "creator": "mozilla@kaply.com", "attachment_id": null, "is_private": false, "text": "> Shortcuts have an internal ID associated with them for the taskbar. Without that set on the shortcut you pin, grouping won't work. This is by design via win7. If you want to do this, copy a shortcut we create through the installer, rename it, and pin it. Grouping will work correctly.\n\nThat's not my experience.\n\nUsing Chrome as an example.\n\nIt's not on my taskbar.\nI start it from some other mechanism.\nWhile it is running, I right click and Pin it.\nSubsequent chrome window now get stacked with the icon.\nAnd it opens properly from the icon.", "count": 6, "time": "2012-02-23T15:10:33Z", "author": "mozilla@kaply.com", "id": 6086446}, {"author": "jmathies@mozilla.com", "count": 7, "text": "(In reply to Michael Kaply (mkaply) from comment #6)\n> It's not on my taskbar.\n> I start it from some other mechanism.\n> While it is running, I right click and Pin it.\n> Subsequent chrome window now get stacked with the icon.\n> And it opens properly from the icon.\n\nThis should work just fine for any running instance of fx version 10+.\n\nSTR:\n\n1) unpin all fx icons from the taskbar\n2) launch an install\n3) right click the fx taskbar icon and select pin\n\nThat icon will now launch that particular install.\n\nIf you have multiple installs, you can pin each and they will group individually.", "attachment_id": null, "creator": "jmathies@mozilla.com", "time": "2012-02-23T15:23:56Z", "id": 6086484, "is_private": false, "raw_text": "(In reply to Michael Kaply (mkaply) from comment #6)\n> It's not on my taskbar.\n> I start it from some other mechanism.\n> While it is running, I right click and Pin it.\n> Subsequent chrome window now get stacked with the icon.\n> And it opens properly from the icon.\n\nThis should work just fine for any running instance of fx version 10+.\n\nSTR:\n\n1) unpin all fx icons from the taskbar\n2) launch an install\n3) right click the fx taskbar icon and select pin\n\nThat icon will now launch that particular install.\n\nIf you have multiple installs, you can pin each and they will group individually.", "creation_time": "2012-02-23T15:23:56Z", "bug_id": 644914, "tags": []}, {"author": "mozilla@kaply.com", "text": "So how do you get in a scenario where you have a pinned icon and when you click on it, it opens a different icon (see bug 729930).\n\nI'm in that state right now and I don't want to mess with anything just in case there's something that can be debugged.", "count": 8, "attachment_id": null, "creator": "mozilla@kaply.com", "time": "2012-02-23T15:26:03Z", "id": 6086491, "is_private": false, "raw_text": "So how do you get in a scenario where you have a pinned icon and when you click on it, it opens a different icon (see bug 729930).\n\nI'm in that state right now and I don't want to mess with anything just in case there's something that can be debugged.", "creation_time": "2012-02-23T15:26:03Z", "bug_id": 644914, "tags": []}, {"text": "(In reply to Michael Kaply (mkaply) from comment #8)\n> So how do you get in a scenario where you have a pinned icon and when you\n> click on it, it opens a different icon (see bug 729930).\n> \n> I'm in that state right now and I don't want to mess with anything just in\n> case there's something that can be debugged.\n\nThe shortcut you have pinned doesn't have the right id. I would suggest you just unpin that, launch fx, and repin the running instance.", "count": 9, "author": "jmathies@mozilla.com", "time": "2012-02-23T15:32:48Z", "id": 6086519, "raw_text": "(In reply to Michael Kaply (mkaply) from comment #8)\n> So how do you get in a scenario where you have a pinned icon and when you\n> click on it, it opens a different icon (see bug 729930).\n> \n> I'm in that state right now and I don't want to mess with anything just in\n> case there's something that can be debugged.\n\nThe shortcut you have pinned doesn't have the right id. I would suggest you just unpin that, launch fx, and repin the running instance.", "bug_id": 644914, "creation_time": "2012-02-23T15:32:48Z", "creator": "jmathies@mozilla.com", "tags": [], "attachment_id": null, "is_private": false}, {"tags": [], "creator": "mozilla@kaply.com", "creation_time": "2012-02-23T15:35:49Z", "bug_id": 644914, "raw_text": "> The shortcut you have pinned doesn't have the right id. I would suggest you just unpin that, launch fx, and repin the running instance.\n\nSo does each Firefox.exe have a unique ID?\n\nHow do upgrades work since the firefox.exe is a different EXE? Does it have to be removed and readded?", "attachment_id": null, "is_private": false, "text": "> The shortcut you have pinned doesn't have the right id. I would suggest you just unpin that, launch fx, and repin the running instance.\n\nSo does each Firefox.exe have a unique ID?\n\nHow do upgrades work since the firefox.exe is a different EXE? Does it have to be removed and readded?", "count": 10, "id": 6086528, "time": "2012-02-23T15:35:49Z", "author": "mozilla@kaply.com"}, {"text": "(In reply to Michael Kaply (mkaply) from comment #10)\n> > The shortcut you have pinned doesn't have the right id. I would suggest you just unpin that, launch fx, and repin the running instance.\n> \n> So does each Firefox.exe have a unique ID?\n> \n> How do upgrades work since the firefox.exe is a different EXE? Does it have\n> to be removed and readded?\n\nVersions prior to 10 had ids that were based on the release version and the installer would update this id on each upgrade. In 10, we switched to a hash of the install directory for the id, which remains constant and never needs to be updated. We set this id on every install shortcut we create *except* the desktop shortcut the installer creates.", "count": 11, "id": 6086671, "author": "jmathies@mozilla.com", "time": "2012-02-23T16:14:16Z", "creator": "jmathies@mozilla.com", "tags": [], "raw_text": "(In reply to Michael Kaply (mkaply) from comment #10)\n> > The shortcut you have pinned doesn't have the right id. I would suggest you just unpin that, launch fx, and repin the running instance.\n> \n> So does each Firefox.exe have a unique ID?\n> \n> How do upgrades work since the firefox.exe is a different EXE? Does it have\n> to be removed and readded?\n\nVersions prior to 10 had ids that were based on the release version and the installer would update this id on each upgrade. In 10, we switched to a hash of the install directory for the id, which remains constant and never needs to be updated. We set this id on every install shortcut we create *except* the desktop shortcut the installer creates.", "creation_time": "2012-02-23T16:14:16Z", "bug_id": 644914, "attachment_id": null, "is_private": false}, {"attachment_id": null, "creator": "jmathies@mozilla.com", "author": "jmathies@mozilla.com", "count": 12, "text": "Bug 577867 encompassed the changes in 10.", "is_private": false, "creation_time": "2012-02-23T16:15:11Z", "bug_id": 644914, "raw_text": "Bug 577867 encompassed the changes in 10.", "tags": [], "time": "2012-02-23T16:15:11Z", "id": 6086675}, {"is_private": false, "tags": [], "raw_text": "Wow. No offence? But the pinning behavior in 10 is ~bad~. It worked, as far as I could tell, perfectly waaay back in 3.5 and I think up until 3.6. (Even if it may have been *implemented* wrong, it worked right...)\n\nPinning my active firefox run from a shortcut called \"Firefox A\" doesn't retain the run settings from \"Firefox A\" in this case -P \"Firefox1\" it instead runs  the default profile. This pin *does* combine with a running instance of firefox...\nDirectly dragging and pinning the \"Firefox A\" shortcut does succeed in pinning the shortcut itself, but does not combine with the running instance itself O.o...\nMore strange, I can pin the active instance. I can simultaneously pin my shortcut \"Firefox A\", but another shortcut called \"Firefox B\" with the settings -p \"Firefox2\" -no-remote cannot be pinned at the same time as \"Firefox A\". \n\nThese are both brand new shortcuts, made by going to the firefox.exe itself, right clicking, and selecting create shortcut(and, well, renaming and adding the settings to them of course.)\n\n\nThe better functional behavior was *way* back on Firefox 3.5, where Firefox A and Firefox B would both have pinned as \"separate programs\"(either by dragging the shortcut *or* telling it to pin the running task-bar object) and would combine with each of their respective pinnings. Firefox 4-10 (Not sure about 3.6-3.9ish, skipped right over them. I think 3.6 behaves the same as 3.5) behave horribly in this respect...\n\nIt sounds like that if I bother to make multiple separate Firefox installs my shortcuts *might* behave correctly now as of 10. I don't mind this too much, but that it was unnecessary in a previous version is... interesting. Backwards progress isn't exactly a great thing.", "bug_id": 644914, "creation_time": "2012-02-23T17:58:50Z", "id": 6087030, "time": "2012-02-23T17:58:50Z", "attachment_id": null, "creator": "roguethunderbird@gmail.com", "author": "roguethunderbird@gmail.com", "text": "Wow. No offence? But the pinning behavior in 10 is ~bad~. It worked, as far as I could tell, perfectly waaay back in 3.5 and I think up until 3.6. (Even if it may have been *implemented* wrong, it worked right...)\n\nPinning my active firefox run from a shortcut called \"Firefox A\" doesn't retain the run settings from \"Firefox A\" in this case -P \"Firefox1\" it instead runs  the default profile. This pin *does* combine with a running instance of firefox...\nDirectly dragging and pinning the \"Firefox A\" shortcut does succeed in pinning the shortcut itself, but does not combine with the running instance itself O.o...\nMore strange, I can pin the active instance. I can simultaneously pin my shortcut \"Firefox A\", but another shortcut called \"Firefox B\" with the settings -p \"Firefox2\" -no-remote cannot be pinned at the same time as \"Firefox A\". \n\nThese are both brand new shortcuts, made by going to the firefox.exe itself, right clicking, and selecting create shortcut(and, well, renaming and adding the settings to them of course.)\n\n\nThe better functional behavior was *way* back on Firefox 3.5, where Firefox A and Firefox B would both have pinned as \"separate programs\"(either by dragging the shortcut *or* telling it to pin the running task-bar object) and would combine with each of their respective pinnings. Firefox 4-10 (Not sure about 3.6-3.9ish, skipped right over them. I think 3.6 behaves the same as 3.5) behave horribly in this respect...\n\nIt sounds like that if I bother to make multiple separate Firefox installs my shortcuts *might* behave correctly now as of 10. I don't mind this too much, but that it was unnecessary in a previous version is... interesting. Backwards progress isn't exactly a great thing.", "count": 13}, {"is_private": false, "tags": [], "bug_id": 644914, "creation_time": "2012-02-23T18:51:17Z", "raw_text": "Just clarifying, on the first scenario I listed I ran the shortcut, then pinned by right clicking the running program on the taskbar. Somewhat clear if you pay attention to the second scenario but... yeah.\n\nSummary:\nThe bug that multiple INSTALLS identify as the same? Sounds fixed, though I haven't confirmed. Nifty I suppose.\n\nThe bug that pinnings from active copies don't retain settings such as non-default profile? Meep, that's a new one I think... And kinda bad.\n\nThe bug that multiple differently configured shortcuts cannot be pinned and act in a logical and normal behavior? Still there. (But worked fine in 3.5...)", "id": 6087251, "time": "2012-02-23T18:51:17Z", "attachment_id": null, "creator": "roguethunderbird@gmail.com", "author": "roguethunderbird@gmail.com", "count": 14, "text": "Just clarifying, on the first scenario I listed I ran the shortcut, then pinned by right clicking the running program on the taskbar. Somewhat clear if you pay attention to the second scenario but... yeah.\n\nSummary:\nThe bug that multiple INSTALLS identify as the same? Sounds fixed, though I haven't confirmed. Nifty I suppose.\n\nThe bug that pinnings from active copies don't retain settings such as non-default profile? Meep, that's a new one I think... And kinda bad.\n\nThe bug that multiple differently configured shortcuts cannot be pinned and act in a logical and normal behavior? Still there. (But worked fine in 3.5...)"}, {"time": "2012-02-23T20:01:20Z", "id": 6087573, "raw_text": "You can add command line parameters to pinned shortcuts by editing the shortcut file - \n\nC:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar\n\nAs for grouping by profile instead of install location, we added an option for that in Bug 577867. Add a boolean pref named |taskbar.grouping.useprofile| and set it to true.", "bug_id": 644914, "creation_time": "2012-02-23T20:01:20Z", "tags": [], "is_private": false, "text": "You can add command line parameters to pinned shortcuts by editing the shortcut file - \n\nC:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar\n\nAs for grouping by profile instead of install location, we added an option for that in Bug 577867. Add a boolean pref named |taskbar.grouping.useprofile| and set it to true.", "count": 15, "author": "jmathies@mozilla.com", "creator": "jmathies@mozilla.com", "attachment_id": null}, {"attachment_id": null, "creator": "roguethunderbird@gmail.com", "author": "roguethunderbird@gmail.com", "count": 16, "text": "(In reply to Jim Mathies [:jimm] from comment #15)\n> You can add command line parameters to pinned shortcuts by editing the\n> shortcut file - \n> \n> C:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick\n> Launch\\User Pinned\\TaskBar\nHmmm. I had tried that once and it caused it to unpin, though retrying it it seems to work ok for the most part.\n> As for grouping by profile instead of install location, we added an option\n> for that in Bug 577867. Add a boolean pref named\n> |taskbar.grouping.useprofile| and set it to true.\nWell that's nice to know. It'd still make more sense for it to do so by BOTH profile and install location. \nBut again. Good to know. Only problem with that is knowing that said exists... Well ;P yeah.\n\nAppreciating the warmer welcome than when I first reported problems in 4.0 tho! Suppose ya guys are more used to the super-wonkyness of pinning in W7 now :P\n\n\nIt's still bad that pinning the wrong way causes it to not remember the options it was run with. I know it remembered said in 3.5, but if plus or minus a setting that's all that is left of this bug really. Progress!", "is_private": false, "raw_text": "(In reply to Jim Mathies [:jimm] from comment #15)\n> You can add command line parameters to pinned shortcuts by editing the\n> shortcut file - \n> \n> C:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick\n> Launch\\User Pinned\\TaskBar\nHmmm. I had tried that once and it caused it to unpin, though retrying it it seems to work ok for the most part.\n> As for grouping by profile instead of install location, we added an option\n> for that in Bug 577867. Add a boolean pref named\n> |taskbar.grouping.useprofile| and set it to true.\nWell that's nice to know. It'd still make more sense for it to do so by BOTH profile and install location. \nBut again. Good to know. Only problem with that is knowing that said exists... Well ;P yeah.\n\nAppreciating the warmer welcome than when I first reported problems in 4.0 tho! Suppose ya guys are more used to the super-wonkyness of pinning in W7 now :P\n\n\nIt's still bad that pinning the wrong way causes it to not remember the options it was run with. I know it remembered said in 3.5, but if plus or minus a setting that's all that is left of this bug really. Progress!", "creation_time": "2012-02-24T07:57:03Z", "bug_id": 644914, "tags": [], "time": "2012-02-24T07:57:03Z", "id": 6089420}, {"count": 17, "text": "Having tried the aforementioned |taskbar.grouping.useprofile| theres one notable caviat. To actually make it work one has to pin the RUNNING copies of firefox... and THEN go to C:\\Users\\username\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar and edit them to have the appopriate -p profile and -no-remote which. Is rather counter-intuitive.\n\nStill not up to par with Firefox 3.5's behavior where shortcuts could be pinned outright, retained their settings, and bunched accordingly(all on their own!).\nEspecially since in 3.5, each pin retained the shortcuts name. I can't see any simple way to rename them given this... roundabout solution.\n\nAn improvement though! Certainly!", "id": 6089430, "time": "2012-02-24T08:11:49Z", "author": "roguethunderbird@gmail.com", "tags": [], "creator": "roguethunderbird@gmail.com", "bug_id": 644914, "creation_time": "2012-02-24T08:11:49Z", "raw_text": "Having tried the aforementioned |taskbar.grouping.useprofile| theres one notable caviat. To actually make it work one has to pin the RUNNING copies of firefox... and THEN go to C:\\Users\\username\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar and edit them to have the appopriate -p profile and -no-remote which. Is rather counter-intuitive.\n\nStill not up to par with Firefox 3.5's behavior where shortcuts could be pinned outright, retained their settings, and bunched accordingly(all on their own!).\nEspecially since in 3.5, each pin retained the shortcuts name. I can't see any simple way to rename them given this... roundabout solution.\n\nAn improvement though! Certainly!", "attachment_id": null, "is_private": false}, {"count": 18, "text": "AH! Apparently they'll... somewhat update names if renamed in the userpinned taskbar folder apon restart/relog to the bar. Though some odd behaviors there. But those are more... *windows* bugs I suspect. Not your deal.\n\nStill. Getting back the intuitive and logical behavior of 3.5 would be nice. It seems to be slowly returning.", "author": "roguethunderbird@gmail.com", "creator": "roguethunderbird@gmail.com", "attachment_id": null, "time": "2012-02-24T08:17:22Z", "id": 6089438, "raw_text": "AH! Apparently they'll... somewhat update names if renamed in the userpinned taskbar folder apon restart/relog to the bar. Though some odd behaviors there. But those are more... *windows* bugs I suspect. Not your deal.\n\nStill. Getting back the intuitive and logical behavior of 3.5 would be nice. It seems to be slowly returning.", "creation_time": "2012-02-24T08:17:22Z", "bug_id": 644914, "tags": [], "is_private": false}, {"author": "noitidart@gmail.com", "count": 19, "text": "Update on this bug. Using Win7: I created a shortcut to firefox.exe and gave it command line options `-P unn -no-remote` because I want it to launch my profile straight away. I also changed the icon.So it does this. And I pinned it. However if its pinned, all the windows open in a seperate group. Its weird. See image please: http://img.photobucket.com/albums/v135/noitidart/bugzilla20showing20the20separate20l_zps8dd5419d.png", "attachment_id": null, "creator": "noitidart@gmail.com", "id": 8881520, "time": "2014-06-04T07:51:30Z", "is_private": false, "tags": [], "raw_text": "Update on this bug. Using Win7: I created a shortcut to firefox.exe and gave it command line options `-P unn -no-remote` because I want it to launch my profile straight away. I also changed the icon.So it does this. And I pinned it. However if its pinned, all the windows open in a seperate group. Its weird. See image please: http://img.photobucket.com/albums/v135/noitidart/bugzilla20showing20the20separate20l_zps8dd5419d.png", "bug_id": 644914, "creation_time": "2014-06-04T07:51:30Z"}, {"attachment_id": null, "is_private": false, "raw_text": "Good luck man, far more major features have been disregarded lately. This little quirk... is unlikely to be fixed. \nEver.\nIronically worked perfectly, under what I ascertain to be the \"incorrect\" implementation.... (3.5 and earlier)", "bug_id": 644914, "creation_time": "2014-06-04T10:10:58Z", "creator": "roguethunderbird@gmail.com", "tags": [], "author": "roguethunderbird@gmail.com", "time": "2014-06-04T10:10:58Z", "id": 8882034, "count": 20, "text": "Good luck man, far more major features have been disregarded lately. This little quirk... is unlikely to be fixed. \nEver.\nIronically worked perfectly, under what I ascertain to be the \"incorrect\" implementation.... (3.5 and earlier)"}, {"text": "(In reply to Jim Mathies [:jimm] from comment #15)\n> You can add command line parameters to pinned shortcuts by editing the\n> shortcut file - \n> \n> C:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick\n> Launch\\User Pinned\\TaskBar\n> \n> As for grouping by profile instead of install location, we added an option\n> for that in Bug 577867. Add a boolean pref named\n> |taskbar.grouping.useprofile| and set it to true.\n\nI went to about:config created \"taskbar.grouping.useprofile\" and set it to true. I use WinXP, will it seperate the instances by profile? It doesn't seem to be working.", "count": 21, "author": "noitidart@gmail.com", "creator": "noitidart@gmail.com", "attachment_id": null, "id": 8883302, "time": "2014-06-04T15:09:45Z", "tags": [], "raw_text": "(In reply to Jim Mathies [:jimm] from comment #15)\n> You can add command line parameters to pinned shortcuts by editing the\n> shortcut file - \n> \n> C:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick\n> Launch\\User Pinned\\TaskBar\n> \n> As for grouping by profile instead of install location, we added an option\n> for that in Bug 577867. Add a boolean pref named\n> |taskbar.grouping.useprofile| and set it to true.\n\nI went to about:config created \"taskbar.grouping.useprofile\" and set it to true. I use WinXP, will it seperate the instances by profile? It doesn't seem to be working.", "creation_time": "2014-06-04T15:09:45Z", "bug_id": 644914, "is_private": false}, {"time": "2014-06-04T15:10:29Z", "id": 8883307, "is_private": false, "raw_text": "btw i set that preference in all my firefox profiles", "creation_time": "2014-06-04T15:10:29Z", "bug_id": 644914, "tags": [], "author": "noitidart@gmail.com", "text": "btw i set that preference in all my firefox profiles", "count": 22, "attachment_id": null, "creator": "noitidart@gmail.com"}, {"text": "Setting the pref `taskbar.grouping.userprofile` in all profiles and restarting all browsers of profiles it works in Win7. HOWEVER if firefox.exe was pinned before i started creating that pref that that pinned one always sits there and all profile windows will never be in it. The proflie marked as `Default=1` in `profiles.ini` should not use a different `defaultGroupId` (`Cc[\"@mozilla.org/windows-taskbar;1\"].getService(Ci.nsIWinTaskbar).defaultGroupId`), this would fix the issue.", "count": 23, "author": "noitidart@gmail.com", "creator": "noitidart@gmail.com", "attachment_id": null, "time": "2014-06-08T02:42:08Z", "id": 8900270, "raw_text": "Setting the pref `taskbar.grouping.userprofile` in all profiles and restarting all browsers of profiles it works in Win7. HOWEVER if firefox.exe was pinned before i started creating that pref that that pinned one always sits there and all profile windows will never be in it. The proflie marked as `Default=1` in `profiles.ini` should not use a different `defaultGroupId` (`Cc[\"@mozilla.org/windows-taskbar;1\"].getService(Ci.nsIWinTaskbar).defaultGroupId`), this would fix the issue.", "bug_id": 644914, "creation_time": "2014-06-08T02:42:08Z", "tags": [], "is_private": false}, {"is_private": false, "attachment_id": null, "creator": "noitidart@gmail.com", "tags": [], "raw_text": "I'm asking for help on how to get defaultGroupId of the firefox.exe before the pref is set from a profile which has the pref set: http://stackoverflow.com/questions/24102520/get-defaultgroupid-of-firefox-exe-win7", "creation_time": "2014-06-08T08:38:28Z", "bug_id": 644914, "id": 8900514, "author": "noitidart@gmail.com", "time": "2014-06-08T08:38:28Z", "text": "I'm asking for help on how to get defaultGroupId of the firefox.exe before the pref is set from a profile which has the pref set: http://stackoverflow.com/questions/24102520/get-defaultgroupid-of-firefox-exe-win7", "count": 24}, {"creator": "noitidart@gmail.com", "attachment_id": null, "text": "Also a curious thing:\nhttp://mxr.mozilla.org/mozilla-central/source/widget/windows/WinTaskbar.cpp#245\n\"For win8 metro builds, we can't set this. The value is static\"\n\nI hope that in Win8 that profiles are seperate, I can't test Win8, does anyone know if setting this param to true will make the profile windows be grouped seperately (like mac os)?", "count": 25, "author": "noitidart@gmail.com", "bug_id": 644914, "creation_time": "2014-06-09T05:49:05Z", "raw_text": "Also a curious thing:\nhttp://mxr.mozilla.org/mozilla-central/source/widget/windows/WinTaskbar.cpp#245\n\"For win8 metro builds, we can't set this. The value is static\"\n\nI hope that in Win8 that profiles are seperate, I can't test Win8, does anyone know if setting this param to true will make the profile windows be grouped seperately (like mac os)?", "tags": [], "is_private": false, "time": "2014-06-09T05:49:05Z", "id": 8902017}, {"count": 26, "text": "(In reply to noitidart from comment #25)\n> Also a curious thing:\n> http://mxr.mozilla.org/mozilla-central/source/widget/windows/WinTaskbar.\n> cpp#245\n> \"For win8 metro builds, we can't set this. The value is static\"\n> \n> I hope that in Win8 that profiles are seperate, I can't test Win8, does\n> anyone know if setting this param to true will make the profile windows be\n> grouped seperately (like mac os)?\n\nI don't think that applies - we are no longer working on a \"metro\" build for windows 8.", "id": 8909292, "author": "markh@mozilla.com", "time": "2014-06-10T12:29:29Z", "creator": "markh@mozilla.com", "tags": [], "raw_text": "(In reply to noitidart from comment #25)\n> Also a curious thing:\n> http://mxr.mozilla.org/mozilla-central/source/widget/windows/WinTaskbar.\n> cpp#245\n> \"For win8 metro builds, we can't set this. The value is static\"\n> \n> I hope that in Win8 that profiles are seperate, I can't test Win8, does\n> anyone know if setting this param to true will make the profile windows be\n> grouped seperately (like mac os)?\n\nI don't think that applies - we are no longer working on a \"metro\" build for windows 8.", "bug_id": 644914, "creation_time": "2014-06-10T12:29:29Z", "attachment_id": null, "is_private": false}, {"text": "Ah cool ok thanks man!", "count": 27, "id": 8909966, "author": "noitidart@gmail.com", "time": "2014-06-10T14:49:41Z", "creator": "noitidart@gmail.com", "tags": [], "raw_text": "Ah cool ok thanks man!", "bug_id": 644914, "creation_time": "2014-06-10T14:49:41Z", "is_private": false, "attachment_id": null}, {"count": 28, "text": "It looks like no one is going to take this. So Ill take it and deploy it via addon.\n\nBut I need help please.\nIts hardcore js-ctypes so os dependent. I don't know C or C++ and have been bugging a guy on stackoverflow but I feel like I'm annoying him.\n\n\nI got all the ground work done, as in I got the C code, i even converted it all to ctypes to the best i can which is pretty dang buggy. Is there anyone that can help me out with the c to ctypes conversion, basically they just have to look at my js-ctypes conversion and fix that please.\n\nAnyone available?", "id": 8985691, "time": "2014-06-27T08:20:01Z", "author": "noitidart@gmail.com", "tags": [], "creator": "noitidart@gmail.com", "bug_id": 644914, "creation_time": "2014-06-27T08:20:01Z", "raw_text": "It looks like no one is going to take this. So Ill take it and deploy it via addon.\n\nBut I need help please.\nIts hardcore js-ctypes so os dependent. I don't know C or C++ and have been bugging a guy on stackoverflow but I feel like I'm annoying him.\n\n\nI got all the ground work done, as in I got the C code, i even converted it all to ctypes to the best i can which is pretty dang buggy. Is there anyone that can help me out with the c to ctypes conversion, basically they just have to look at my js-ctypes conversion and fix that please.\n\nAnyone available?", "is_private": false, "attachment_id": null}, {"raw_text": "Btw if anyone wants to actually fix this in the firefox codebase you would set the RelaunchCommand property: http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\n\nIm doing that via js-ctypes and need help.", "bug_id": 644914, "creation_time": "2014-06-27T08:22:27Z", "tags": [], "is_private": false, "time": "2014-06-27T08:22:27Z", "id": 8985700, "creator": "noitidart@gmail.com", "attachment_id": null, "text": "Btw if anyone wants to actually fix this in the firefox codebase you would set the RelaunchCommand property: http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\n\nIm doing that via js-ctypes and need help.", "count": 29, "author": "noitidart@gmail.com"}, {"author": "jmathies@mozilla.com", "text": "(In reply to noitidart from comment #21)\n> I went to about:config created \"taskbar.grouping.useprofile\" and set it to\n> true. I use WinXP, will it seperate the instances by profile? It doesn't\n> seem to be working.\n\nTaskbar grouping relies on Win7 operating system features to work, WinXP will ignore this stuff. Sorry :/\n\n(In reply to noitidart from comment #25)\n> Also a curious thing:\n> http://mxr.mozilla.org/mozilla-central/source/widget/windows/WinTaskbar.\n> cpp#245\n> \"For win8 metro builds, we can't set this. The value is static\"\n> \n> I hope that in Win8 that profiles are seperate, I can't test Win8, does\n> anyone know if setting this param to true will make the profile windows be\n> grouped seperately (like mac os)?\n\nWin8 should work just like Win7 when you're running the desktop app.\n\nNote though the profile chooser window is created early in startup before the profile opens and will rely on Windows default behavior for grouping. Testing locally the profile chooser groups with my default shortcut, which seems right to me.\n\n(In reply to noitidart from comment #28)\n> It looks like no one is going to take this. So Ill take it and deploy it via\n> addon.\n> \n> But I need help please.\n> Its hardcore js-ctypes so os dependent. I don't know C or C++ and have been\n> bugging a guy on stackoverflow but I feel like I'm annoying him.\n> \n> \n> I got all the ground work done, as in I got the C code, i even converted it\n> all to ctypes to the best i can which is pretty dang buggy. Is there anyone\n> that can help me out with the c to ctypes conversion, basically they just\n> have to look at my js-ctypes conversion and fix that please.\n> \n> Anyone available?\n\nI don't understand what you're trying to fix here. Could you provide a summary or maybe some steps to reproduce the issue you are seeing?", "count": 30, "attachment_id": null, "creator": "jmathies@mozilla.com", "id": 8986372, "time": "2014-06-27T12:03:42Z", "is_private": false, "tags": [], "creation_time": "2014-06-27T12:03:42Z", "bug_id": 644914, "raw_text": "(In reply to noitidart from comment #21)\n> I went to about:config created \"taskbar.grouping.useprofile\" and set it to\n> true. I use WinXP, will it seperate the instances by profile? It doesn't\n> seem to be working.\n\nTaskbar grouping relies on Win7 operating system features to work, WinXP will ignore this stuff. Sorry :/\n\n(In reply to noitidart from comment #25)\n> Also a curious thing:\n> http://mxr.mozilla.org/mozilla-central/source/widget/windows/WinTaskbar.\n> cpp#245\n> \"For win8 metro builds, we can't set this. The value is static\"\n> \n> I hope that in Win8 that profiles are seperate, I can't test Win8, does\n> anyone know if setting this param to true will make the profile windows be\n> grouped seperately (like mac os)?\n\nWin8 should work just like Win7 when you're running the desktop app.\n\nNote though the profile chooser window is created early in startup before the profile opens and will rely on Windows default behavior for grouping. Testing locally the profile chooser groups with my default shortcut, which seems right to me.\n\n(In reply to noitidart from comment #28)\n> It looks like no one is going to take this. So Ill take it and deploy it via\n> addon.\n> \n> But I need help please.\n> Its hardcore js-ctypes so os dependent. I don't know C or C++ and have been\n> bugging a guy on stackoverflow but I feel like I'm annoying him.\n> \n> \n> I got all the ground work done, as in I got the C code, i even converted it\n> all to ctypes to the best i can which is pretty dang buggy. Is there anyone\n> that can help me out with the c to ctypes conversion, basically they just\n> have to look at my js-ctypes conversion and fix that please.\n> \n> Anyone available?\n\nI don't understand what you're trying to fix here. Could you provide a summary or maybe some steps to reproduce the issue you are seeing?"}, {"tags": [], "creator": "noitidart@gmail.com", "bug_id": 644914, "creation_time": "2014-06-27T14:38:34Z", "raw_text": "Hi Jim! Thanks so much for the reply I'm real excited. :P\n\nYep no worries I did all the research and already started on a WinXP solution to seperate groups. I'm in process of converting this here: http://w-shadow.com/blog/2006/10/01/manipulating-taskbar-buttons/comment-page-2/#comment-467865\n\nThis is what I have so far for xp: https://gist.github.com/Noitidart/1fc56b28be82d45a245d\n\n\nFor Win7 I'm working on RelaunchCommand so when I open the new profile, if the user pins it, it will pin with command line arguments. (http://stackoverflow.com/questions/24377859/make-window-think-its-exe-file-is-something-else-trying-to-pin-with-command-li)\n\nThis is what I have so far on js-cytpes conversion: https://gist.github.com/yajd/862832b07a1d46caef8b\n\n\n\nFor all os'es im working on bonus of allowing user to badge their icons you can see image of my progress here, right now just xp and win7+ (i dont have vista so i cant test on it)\nhttps://github.com/Noitidart/Profilist/issues/18#issuecomment-46795390\n\n:)", "is_private": false, "attachment_id": null, "text": "Hi Jim! Thanks so much for the reply I'm real excited. :P\n\nYep no worries I did all the research and already started on a WinXP solution to seperate groups. I'm in process of converting this here: http://w-shadow.com/blog/2006/10/01/manipulating-taskbar-buttons/comment-page-2/#comment-467865\n\nThis is what I have so far for xp: https://gist.github.com/Noitidart/1fc56b28be82d45a245d\n\n\nFor Win7 I'm working on RelaunchCommand so when I open the new profile, if the user pins it, it will pin with command line arguments. (http://stackoverflow.com/questions/24377859/make-window-think-its-exe-file-is-something-else-trying-to-pin-with-command-li)\n\nThis is what I have so far on js-cytpes conversion: https://gist.github.com/yajd/862832b07a1d46caef8b\n\n\n\nFor all os'es im working on bonus of allowing user to badge their icons you can see image of my progress here, right now just xp and win7+ (i dont have vista so i cant test on it)\nhttps://github.com/Noitidart/Profilist/issues/18#issuecomment-46795390\n\n:)", "count": 31, "id": 8987047, "time": "2014-06-27T14:38:34Z", "author": "noitidart@gmail.com"}, {"attachment_id": null, "is_private": false, "creator": "noitidart@gmail.com", "tags": [], "raw_text": "So basically on those gists i linked above, I'm having the hardest time converting code to js-ctypes because I'm trying to read and convert from C++ code samples, incredibly hard for me. Nmaier is helping me but I pester him too much :(\nhttp://stackoverflow.com/questions/24350386/address-to-wchar-t-to-pass-to-readprocessmemory/\nhttps://ask.mozilla.org/question/781/sendmessage-with-tb_getbutton-pointer-crashes-explorerexe-winxp/\n\na bunch of topics here: http://stackoverflow.com/questions/tagged/jsctypes\n\nand some in the winapi section but the winapi SO users are not as friendly as nmaier :(\nhttp://stackoverflow.com/questions/tagged/winapi", "creation_time": "2014-06-27T14:45:25Z", "bug_id": 644914, "id": 8987080, "author": "noitidart@gmail.com", "time": "2014-06-27T14:45:25Z", "count": 32, "text": "So basically on those gists i linked above, I'm having the hardest time converting code to js-ctypes because I'm trying to read and convert from C++ code samples, incredibly hard for me. Nmaier is helping me but I pester him too much :(\nhttp://stackoverflow.com/questions/24350386/address-to-wchar-t-to-pass-to-readprocessmemory/\nhttps://ask.mozilla.org/question/781/sendmessage-with-tb_getbutton-pointer-crashes-explorerexe-winxp/\n\na bunch of topics here: http://stackoverflow.com/questions/tagged/jsctypes\n\nand some in the winapi section but the winapi SO users are not as friendly as nmaier :(\nhttp://stackoverflow.com/questions/tagged/winapi"}, {"tags": [], "raw_text": "(In reply to Jim Mathies [:jimm] from comment #30)\n> I don't understand what you're trying to fix here. Could you provide a\n> summary or maybe some steps to reproduce the issue you are seeing?\n\nIf you want to see the original bug of this post. Install Firefox 3.5, set up for multiple instances, give each a different profile.\nEach profile will properly group with its own pin, and combine with said pin when run. And so on. Occasionally an update would break the fingerprint and the pins would need to be remade I think, but that was about it.\n\nFor some reason in FF3.7, the implementation was changed to be ?\"more correct\"?, and pretty much completely broke this intuitive function. It's been tweaked with a few times since, but pinning multiple different firefox configs is pretty painful, unintuitive, and irritating now. And as far as I can tell, only one pin will ever combine, out of multiple firefoxes now. Multiple usually causes the pin to un-combine...\n\nNice to see someone attacking this as a plugin I guess, real pity the base function was ?intentionally broken?... \n\nThose of us running multiple instances are a fringe group. I suppose. But still.", "creation_time": "2014-06-27T21:04:22Z", "bug_id": 644914, "is_private": false, "id": 8989072, "time": "2014-06-27T21:04:22Z", "creator": "roguethunderbird@gmail.com", "attachment_id": null, "count": 33, "text": "(In reply to Jim Mathies [:jimm] from comment #30)\n> I don't understand what you're trying to fix here. Could you provide a\n> summary or maybe some steps to reproduce the issue you are seeing?\n\nIf you want to see the original bug of this post. Install Firefox 3.5, set up for multiple instances, give each a different profile.\nEach profile will properly group with its own pin, and combine with said pin when run. And so on. Occasionally an update would break the fingerprint and the pins would need to be remade I think, but that was about it.\n\nFor some reason in FF3.7, the implementation was changed to be ?\"more correct\"?, and pretty much completely broke this intuitive function. It's been tweaked with a few times since, but pinning multiple different firefox configs is pretty painful, unintuitive, and irritating now. And as far as I can tell, only one pin will ever combine, out of multiple firefoxes now. Multiple usually causes the pin to un-combine...\n\nNice to see someone attacking this as a plugin I guess, real pity the base function was ?intentionally broken?... \n\nThose of us running multiple instances are a fringe group. I suppose. But still.", "author": "roguethunderbird@gmail.com"}, {"is_private": false, "tags": [], "raw_text": "Oh yeah. And it frequently breaks with a single one after 3.5 too ;P that was definitely part of it.", "creation_time": "2014-06-27T21:05:53Z", "bug_id": 644914, "id": 8989082, "time": "2014-06-27T21:05:53Z", "attachment_id": null, "creator": "roguethunderbird@gmail.com", "author": "roguethunderbird@gmail.com", "count": 34, "text": "Oh yeah. And it frequently breaks with a single one after 3.5 too ;P that was definitely part of it."}, {"is_private": false, "creation_time": "2014-06-27T21:07:20Z", "bug_id": 644914, "raw_text": "I've been working on it for the past 24 days lol. Struggling real hard. But almost got Windows covered. Then I'll cover mac then linux. But I need help converting to js-ctypes :(", "tags": [], "time": "2014-06-27T21:07:20Z", "id": 8989089, "attachment_id": null, "creator": "noitidart@gmail.com", "author": "noitidart@gmail.com", "text": "I've been working on it for the past 24 days lol. Struggling real hard. But almost got Windows covered. Then I'll cover mac then linux. But I need help converting to js-ctypes :(", "count": 35}, {"id": 9192982, "time": "2014-08-17T20:43:56Z", "tags": [], "bug_id": 644914, "creation_time": "2014-08-17T20:43:56Z", "raw_text": "Hey guys I got stuck, it looks like in js-ctypes i can't do IPropertyStore interface. If anyone is willing to fix this I can talk you through what needs to be done.\n\nBasically the issue right now are many. If you want me to list I can. But here's the solution:\n\nhttp://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\n\nTo each window in a profile (i think, maybe can just do on the process id im not sure) do the following:\n\n    IPropertyStore_SetValue(pps, PKEY_AppUserModel_RelaunchCommand, L\"notepad.exe %windir%\\\\system.ini\");\n    IPropertyStore_SetValue(pps, PKEY_AppUserModel_RelaunchIconResource, L\"notepad.exe %windir%\\\\system.ini\");\n\nbecause we are setting RelaunchIconResource we have to set the RelaunchDisplayNameResource. But just keep RelaunchDisplayNameResource as \"Firefox\".\n\n\n\nAlso the GroupID of the default profile should remain at what is default given to firefox, before setting the about:config preference of `taskbar.grouping.useprofile`. If defaut profile is currently running, and while its running users change the default profile then this currently running profiles group id should be updated away from the default groupID of Firefox. THIS fixes the issue if a user had pinned firefox to the taskbar before setting `taskbar.grouping.useprofile` to true. Otherwise after setting this to true users have this useless firefox logo pinned to the taskbar.\n\n\nAlso is it possible to make `taskbar.grouping.useprofile` restartless?\n\n\nWhy isn't this `taskbar.grouping.useprofile` pref set to true by default?", "is_private": false, "text": "Hey guys I got stuck, it looks like in js-ctypes i can't do IPropertyStore interface. If anyone is willing to fix this I can talk you through what needs to be done.\n\nBasically the issue right now are many. If you want me to list I can. But here's the solution:\n\nhttp://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\n\nTo each window in a profile (i think, maybe can just do on the process id im not sure) do the following:\n\n    IPropertyStore_SetValue(pps, PKEY_AppUserModel_RelaunchCommand, L\"notepad.exe %windir%\\\\system.ini\");\n    IPropertyStore_SetValue(pps, PKEY_AppUserModel_RelaunchIconResource, L\"notepad.exe %windir%\\\\system.ini\");\n\nbecause we are setting RelaunchIconResource we have to set the RelaunchDisplayNameResource. But just keep RelaunchDisplayNameResource as \"Firefox\".\n\n\n\nAlso the GroupID of the default profile should remain at what is default given to firefox, before setting the about:config preference of `taskbar.grouping.useprofile`. If defaut profile is currently running, and while its running users change the default profile then this currently running profiles group id should be updated away from the default groupID of Firefox. THIS fixes the issue if a user had pinned firefox to the taskbar before setting `taskbar.grouping.useprofile` to true. Otherwise after setting this to true users have this useless firefox logo pinned to the taskbar.\n\n\nAlso is it possible to make `taskbar.grouping.useprofile` restartless?\n\n\nWhy isn't this `taskbar.grouping.useprofile` pref set to true by default?", "count": 36, "author": "noitidart@neocodex.us", "creator": "noitidart@neocodex.us", "attachment_id": null}, {"author": "noitidart@neocodex.us", "time": "2014-08-17T20:45:52Z", "id": 9192983, "count": 37, "text": "I messed up the code in previous post for setting `RelaunchIconResource` anyways it should be set to whatever is the most common icon across the windows of the profile.\n\nAlso you can detect when a user changes the default profile by using file watcher (which is in dev) here: https://bugzilla.mozilla.org/show_bug.cgi?id=958280", "is_private": false, "attachment_id": null, "raw_text": "I messed up the code in previous post for setting `RelaunchIconResource` anyways it should be set to whatever is the most common icon across the windows of the profile.\n\nAlso you can detect when a user changes the default profile by using file watcher (which is in dev) here: https://bugzilla.mozilla.org/show_bug.cgi?id=958280", "bug_id": 644914, "creation_time": "2014-08-17T20:45:52Z", "creator": "noitidart@neocodex.us", "tags": []}, {"attachment_id": null, "creator": "noitidart@neocodex.us", "author": "noitidart@neocodex.us", "text": "Feedback from users showing that if we fix this bug it will be consistent with Mac OS. This feedback here shows how it works in Mac OS:\nhttps://github.com/evacchi/firefox-custom-badge/issues/1#issuecomment-44571081", "count": 38, "is_private": false, "creation_time": "2014-08-21T09:09:20Z", "bug_id": 644914, "raw_text": "Feedback from users showing that if we fix this bug it will be consistent with Mac OS. This feedback here shows how it works in Mac OS:\nhttps://github.com/evacchi/firefox-custom-badge/issues/1#issuecomment-44571081", "tags": [], "time": "2014-08-21T09:09:20Z", "id": 9211240}, {"time": "2014-09-06T03:40:12Z", "id": 9278813, "raw_text": "I had this problem too (Win 8.1) and solved it by;\n-removing all pinned shortcuts\n-starting firefox\n-right click the running icon in the taskbar and select to pin it\n-right click some empty space on the taskbar, select properties, and choose always combine taskbar buttons.\n>> new instances all combine under the original pinned icon\n\nI'm not sure if this is a generalised solution, but hope it's some help.", "creation_time": "2014-09-06T03:40:12Z", "bug_id": 644914, "tags": [], "is_private": false, "text": "I had this problem too (Win 8.1) and solved it by;\n-removing all pinned shortcuts\n-starting firefox\n-right click the running icon in the taskbar and select to pin it\n-right click some empty space on the taskbar, select properties, and choose always combine taskbar buttons.\n>> new instances all combine under the original pinned icon\n\nI'm not sure if this is a generalised solution, but hope it's some help.", "count": 39, "author": "ferric.au@gmail.com", "creator": "ferric.au@gmail.com", "attachment_id": null}, {"time": "2014-09-06T03:49:41Z", "id": 9278823, "is_private": false, "raw_text": "Thanks Brad for sharing. Our hope of this topic is that things work straightforward for a non hacky user. So the average just right clicks to pin. So we need to change the RelaunchCommand via IPropertyStore interface. So you don't have to do any weird things.\n\n\nAlso @Brad try doing Ctrl+N, will new windows group in that pinned icon? Or are they all lumping into another icon on the taskbar?", "bug_id": 644914, "creation_time": "2014-09-06T03:49:41Z", "tags": [], "author": "noitidart@gmail.com", "text": "Thanks Brad for sharing. Our hope of this topic is that things work straightforward for a non hacky user. So the average just right clicks to pin. So we need to change the RelaunchCommand via IPropertyStore interface. So you don't have to do any weird things.\n\n\nAlso @Brad try doing Ctrl+N, will new windows group in that pinned icon? Or are they all lumping into another icon on the taskbar?", "count": 40, "attachment_id": null, "creator": "noitidart@gmail.com"}, {"text": "I would just like to note. The behaviors (In reply to Brad from comment #39)\n> I had this problem too (Win 8.1) and solved it by;\n> -removing all pinned shortcuts\n> -starting firefox\n> -right click the running icon in the taskbar and select to pin it\n> -right click some empty space on the taskbar, select properties, and choose\n> always combine taskbar buttons.\n> >> new instances all combine under the original pinned icon\n> \n> I'm not sure if this is a generalised solution, but hope it's some help.\nI find this unlikely, if you're talking about actual seperate instances rather than just separate windows. As the original report was about. But just to be sure...\n\nLast I checked. Pins will only work for one such. Period. Back in 3.5, we could have multiple setup as noted below, and each have a separate pin it would combine into.\n\nAre you running multiple processes of firefox simultaneously? Because doing so breaks the grouping function horribly post-3.5 still I would bet. (This entails setting up shortcuts with separate profiles, and -no-remote on all but one or all of them. To be fair not a common configuration.)\n\nSounds more like you're talking about the grouping with a single pin breaking--which yeah that happens too and requires resetting the pin. Something that should really be a higher priority bug as it effects normal users not using advanced configurations... But not the bug in this report.", "count": 41, "time": "2014-09-06T05:43:00Z", "author": "roguethunderbird@gmail.com", "id": 9278918, "creation_time": "2014-09-06T05:43:00Z", "bug_id": 644914, "raw_text": "I would just like to note. The behaviors (In reply to Brad from comment #39)\n> I had this problem too (Win 8.1) and solved it by;\n> -removing all pinned shortcuts\n> -starting firefox\n> -right click the running icon in the taskbar and select to pin it\n> -right click some empty space on the taskbar, select properties, and choose\n> always combine taskbar buttons.\n> >> new instances all combine under the original pinned icon\n> \n> I'm not sure if this is a generalised solution, but hope it's some help.\nI find this unlikely, if you're talking about actual seperate instances rather than just separate windows. As the original report was about. But just to be sure...\n\nLast I checked. Pins will only work for one such. Period. Back in 3.5, we could have multiple setup as noted below, and each have a separate pin it would combine into.\n\nAre you running multiple processes of firefox simultaneously? Because doing so breaks the grouping function horribly post-3.5 still I would bet. (This entails setting up shortcuts with separate profiles, and -no-remote on all but one or all of them. To be fair not a common configuration.)\n\nSounds more like you're talking about the grouping with a single pin breaking--which yeah that happens too and requires resetting the pin. Something that should really be a higher priority bug as it effects normal users not using advanced configurations... But not the bug in this report.", "tags": [], "creator": "roguethunderbird@gmail.com", "is_private": false, "attachment_id": null}, {"time": "2014-09-06T07:54:33Z", "id": 9278965, "raw_text": "Yes sorry, it is a different situation to the OP (I'm also using Win 8.1 not Win 7).\n\nTo expand on/clarify my situation a bit, after what I describe above, if I open FF (31.0) from cmd.exe [top left in screenshot], open another from cmd.exe with -no-remote -P [top right] and then do Ctrl-N [bottom right] they all still appear under one icon in the taskbar. The first and second copies have different PIDs.\n\nHere a screenshot, hovering over the icon for preview \nhttp://i57.tinypic.com/2nba63o.png\n\nI should point out at all of this was (infuriatingly) broken for a long time, before I chanced upon where I am now.", "bug_id": 644914, "creation_time": "2014-09-06T07:54:33Z", "tags": [], "is_private": false, "count": 42, "text": "Yes sorry, it is a different situation to the OP (I'm also using Win 8.1 not Win 7).\n\nTo expand on/clarify my situation a bit, after what I describe above, if I open FF (31.0) from cmd.exe [top left in screenshot], open another from cmd.exe with -no-remote -P [top right] and then do Ctrl-N [bottom right] they all still appear under one icon in the taskbar. The first and second copies have different PIDs.\n\nHere a screenshot, hovering over the icon for preview \nhttp://i57.tinypic.com/2nba63o.png\n\nI should point out at all of this was (infuriatingly) broken for a long time, before I chanced upon where I am now.", "author": "ferric.au@gmail.com", "creator": "ferric.au@gmail.com", "attachment_id": null}, {"attachment_id": null, "creator": "noitidart@gmail.com", "author": "noitidart@gmail.com", "count": 43, "text": "There's a workaround for it. I prefer this bug to fix it so we don't need work around.\n\nBut this is what you do: In each of your profiles go to about:config and set taskbar.grouping.useprofile to true. Then restart the browsers. They should seperate. Now you can pin them after they have seperated.", "is_private": false, "tags": [], "creation_time": "2014-09-06T07:59:05Z", "bug_id": 644914, "raw_text": "There's a workaround for it. I prefer this bug to fix it so we don't need work around.\n\nBut this is what you do: In each of your profiles go to about:config and set taskbar.grouping.useprofile to true. Then restart the browsers. They should seperate. Now you can pin them after they have seperated.", "id": 9278968, "time": "2014-09-06T07:59:05Z"}, {"time": "2014-09-06T08:08:40Z", "id": 9278986, "creation_time": "2014-09-06T08:08:40Z", "bug_id": 644914, "raw_text": "Yes, a bug. I agree.\n\nAdditionally the update to FF 32.0, just broke it again. \n\nFixed by going through the steps again.", "tags": [], "is_private": false, "count": 44, "text": "Yes, a bug. I agree.\n\nAdditionally the update to FF 32.0, just broke it again. \n\nFixed by going through the steps again.", "author": "ferric.au@gmail.com", "creator": "ferric.au@gmail.com", "attachment_id": null}, {"raw_text": "I'm extremely close to solving this with js-ctypes:\n\nmy code: https://github.com/Noitidart/_scratchpad/blob/master/IPropertyStore%20COM%20jsctypes.js\n\nthe code is all correct and copied from C here:  http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\n\nand Firefox does the same thing with nsIWintTaskBar.setGroupIdForWindow: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIWinTaskbar?redirectlocale=en-US&redirectslug=nsIWinTaskbar#setGroupIdForWindow%28%29\n\nMXR for this: http://mxr.mozilla.org/mozilla-release/source/widget/windows/WinTaskbar.cpp#101\n\nMy code right now is trying to mimic nsIWintTaskBar.setGroupIdForWindow as soon as that works then I'll move to modifying RelaunchCommand and RelaunchIconResource which will fix this bugzilla topic.\n\n\nSo anyways the issue: my code is trying to does exactly what nsIWinTaskbar.setGroupIdForWindow ( i shared snippet below), my code is not erroring, but result is not same as setGroupIdForWindow, my IPropretyStore :: SetValue function is evening returning a good hr value.\n\nI'm trying to review the code and figure out why it's not working, would appreciate if someone that knows jctypes and IPropertyStore http://msdn.microsoft.com/en-us/library/windows/desktop/bb761475%28v=vs.85%29.aspx\n\nthat could help out.\n\n\nDoes anyone know who wrote this code here on MXR: \n\n68 SetWindowAppUserModelProp(nsIDOMWindow *aParent,\n69                           const nsString & aIdentifier) {\n70   NS_ENSURE_ARG_POINTER(aParent);\n71 \n72   if (aIdentifier.IsEmpty())\n73     return NS_ERROR_INVALID_ARG;\n74 \n75   HWND toplevelHWND = ::GetAncestor(GetHWNDFromDOMWindow(aParent), GA_ROOT);\n76 \n77   if (!toplevelHWND)\n78     return NS_ERROR_INVALID_ARG;\n79 \n80   typedef HRESULT (WINAPI * SHGetPropertyStoreForWindowPtr)\n81                     (HWND hwnd, REFIID riid, void** ppv);\n82   SHGetPropertyStoreForWindowPtr funcGetProStore = nullptr;\n83 \n84   HMODULE hDLL = ::LoadLibraryW(kShellLibraryName);\n85   funcGetProStore = (SHGetPropertyStoreForWindowPtr)\n86     GetProcAddress(hDLL, \"SHGetPropertyStoreForWindow\");\n87 \n88   if (!funcGetProStore) {\n89     FreeLibrary(hDLL);\n90     return NS_ERROR_NO_INTERFACE;\n91   }\n92 \n93   IPropertyStore* pPropStore;\n94   if (FAILED(funcGetProStore(toplevelHWND,\n95                              IID_PPV_ARGS(&pPropStore)))) {\n96     FreeLibrary(hDLL);\n97     return NS_ERROR_INVALID_ARG;\n98   }\n99 \n100   PROPVARIANT pv;\n101   if (FAILED(InitPropVariantFromString(aIdentifier.get(), &pv))) {\n102     pPropStore->Release();\n103     FreeLibrary(hDLL);\n104     return NS_ERROR_UNEXPECTED;\n105   }\n106 \n107   nsresult rv = NS_OK;\n108   if (FAILED(pPropStore->SetValue(PKEY_AppUserModel_ID, pv)) ||\n109       FAILED(pPropStore->Commit())) {\n110     rv = NS_ERROR_FAILURE;\n111   }\n112 \n113   PropVariantClear(&pv);\n114   pPropStore->Release();\n115   FreeLibrary(hDLL);\n116 \n117   return rv;\n118 }\n\n\nHe's the guy that if I talked to it would help A TON A TON. Because I'm doing the same thing, changing System.AppUserModel properties.", "bug_id": 644914, "creation_time": "2015-01-11T23:19:48Z", "creator": "noitidart@gmail.com", "tags": [], "attachment_id": null, "is_private": false, "count": 45, "text": "I'm extremely close to solving this with js-ctypes:\n\nmy code: https://github.com/Noitidart/_scratchpad/blob/master/IPropertyStore%20COM%20jsctypes.js\n\nthe code is all correct and copied from C here:  http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\n\nand Firefox does the same thing with nsIWintTaskBar.setGroupIdForWindow: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIWinTaskbar?redirectlocale=en-US&redirectslug=nsIWinTaskbar#setGroupIdForWindow%28%29\n\nMXR for this: http://mxr.mozilla.org/mozilla-release/source/widget/windows/WinTaskbar.cpp#101\n\nMy code right now is trying to mimic nsIWintTaskBar.setGroupIdForWindow as soon as that works then I'll move to modifying RelaunchCommand and RelaunchIconResource which will fix this bugzilla topic.\n\n\nSo anyways the issue: my code is trying to does exactly what nsIWinTaskbar.setGroupIdForWindow ( i shared snippet below), my code is not erroring, but result is not same as setGroupIdForWindow, my IPropretyStore :: SetValue function is evening returning a good hr value.\n\nI'm trying to review the code and figure out why it's not working, would appreciate if someone that knows jctypes and IPropertyStore http://msdn.microsoft.com/en-us/library/windows/desktop/bb761475%28v=vs.85%29.aspx\n\nthat could help out.\n\n\nDoes anyone know who wrote this code here on MXR: \n\n68 SetWindowAppUserModelProp(nsIDOMWindow *aParent,\n69                           const nsString & aIdentifier) {\n70   NS_ENSURE_ARG_POINTER(aParent);\n71 \n72   if (aIdentifier.IsEmpty())\n73     return NS_ERROR_INVALID_ARG;\n74 \n75   HWND toplevelHWND = ::GetAncestor(GetHWNDFromDOMWindow(aParent), GA_ROOT);\n76 \n77   if (!toplevelHWND)\n78     return NS_ERROR_INVALID_ARG;\n79 \n80   typedef HRESULT (WINAPI * SHGetPropertyStoreForWindowPtr)\n81                     (HWND hwnd, REFIID riid, void** ppv);\n82   SHGetPropertyStoreForWindowPtr funcGetProStore = nullptr;\n83 \n84   HMODULE hDLL = ::LoadLibraryW(kShellLibraryName);\n85   funcGetProStore = (SHGetPropertyStoreForWindowPtr)\n86     GetProcAddress(hDLL, \"SHGetPropertyStoreForWindow\");\n87 \n88   if (!funcGetProStore) {\n89     FreeLibrary(hDLL);\n90     return NS_ERROR_NO_INTERFACE;\n91   }\n92 \n93   IPropertyStore* pPropStore;\n94   if (FAILED(funcGetProStore(toplevelHWND,\n95                              IID_PPV_ARGS(&pPropStore)))) {\n96     FreeLibrary(hDLL);\n97     return NS_ERROR_INVALID_ARG;\n98   }\n99 \n100   PROPVARIANT pv;\n101   if (FAILED(InitPropVariantFromString(aIdentifier.get(), &pv))) {\n102     pPropStore->Release();\n103     FreeLibrary(hDLL);\n104     return NS_ERROR_UNEXPECTED;\n105   }\n106 \n107   nsresult rv = NS_OK;\n108   if (FAILED(pPropStore->SetValue(PKEY_AppUserModel_ID, pv)) ||\n109       FAILED(pPropStore->Commit())) {\n110     rv = NS_ERROR_FAILURE;\n111   }\n112 \n113   PropVariantClear(&pv);\n114   pPropStore->Release();\n115   FreeLibrary(hDLL);\n116 \n117   return rv;\n118 }\n\n\nHe's the guy that if I talked to it would help A TON A TON. Because I'm doing the same thing, changing System.AppUserModel properties.", "author": "noitidart@gmail.com", "time": "2015-01-11T23:19:48Z", "id": 9779538}, {"creator": "noitidart@gmail.com", "attachment_id": null, "text": "Alright all SOLVED!!!!!!\n\nOk make sure you set the pref first:\n\n1) Go to about:config\n2) Set `taskbar.grouping.useprofile` to `true` (cretae pref if its not there)\n3) Then restart browser\n4) Enable developer preferences so you can run browser context code from scratchpad (see here: \n5) Open scratchpad\n6) Go to menu toolbar of scratchpad called \"Environment\" and then click \"Browser\".\n7) Copy paste into scratchpad the code at end of this poast\n8) Hit \"Run\" button in scratchpad\n9) You can now right click on the icon in the taskbar and pin it\n10) Close firefox and click the icon you just pinned, it will launch your profile\n\nbonus) Click on the shortcut you had that launched your profile, it will open all of them in this tab group. However dont drag your shortcut to the taskbar to pin it, ill release an addon that detects if the tile is draged from a shortcut and then it will change the System.UserModel.ID on the shortcut too so shortcuts stay togather.\n\n\nHere is the code to paste:\n-------------------\n\nCu.import('resource://gre/modules/ctypes.jsm')\n\nvar wintypesInit = function() {\t\n\t// BASIC TYPES (ones that arent equal to something predefined by me)\n\tthis.BOOL = ctypes.int;\n\tthis.BOOLEAN = ctypes.char; // http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx // not used in this jsctypes code but just putting it here as i may need in future search as i have the documentation around this (the blog) in my mind right now and commented it here\n\tthis.DWORD = ctypes.unsigned_long;\n\tthis.HRESULT = ctypes.long;\n\tthis.HWND = ctypes.voidptr_t;\n\tthis.INT = ctypes.int;\n\tthis.LPUNKNOWN = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm\n\tthis.LPVOID = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm\n\tthis.PCIDLIST_ABSOLUTE = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L115\n\tthis.PCWSTR = new ctypes.PointerType(ctypes.jschar); // https://github.com/FunkMonkey/Loomo/blob/06a5881a4f520ede092059a4115bf117568b914f/Loomo/chrome/content/modules/Utils/COM/COM.jsm#L35\n\tthis.PIDLIST_ABSOLUTE = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L106\n\tthis.UINT = ctypes.unsigned_int;\n\tthis.ULONG = ctypes.unsigned_long;\n\tthis.VARIANT_BOOL = ctypes.short; //http://msdn.microsoft.com/en-us/library/cc235510.aspx // http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx\n\tthis.VARTYPE = ctypes.unsigned_short;\n\tthis.VOID = ctypes.void_t;\n\tthis.VOIDPTR = ctypes.voidptr_t\n\tthis.WCHAR = ctypes.jschar;\n\tthis.WIN32_FIND_DATA = ctypes.voidptr_t;\n\tthis.WINOLEAPI = ctypes.voidptr_t; // i guessed on this one\n\tthis.WORD = ctypes.unsigned_short;\n\t\n\t// ADVANCED TYPES (ones that are based on the basic types)\n\tthis.LPTSTR = new ctypes.PointerType(this.WCHAR);\n\tthis.LPCTSTR = this.LPTSTR;\n\tthis.LPWSTR = new ctypes.PointerType(this.WCHAR);\n\tthis.LPCWSTR = this.LPWSTR;\n\tthis.LPOLESTR = this.LPWSTR;\n\tthis.LPCOLESTR = this.LPOLESTR;\n\t \n\t// BASIC STRUCTURES\n\tthis.GUID = ctypes.StructType('GUID', [ // http://msdn.microsoft.com/en-us/library/ff718266%28v=prot.10%29.aspx\n\t\t{ 'Data1': ctypes.unsigned_long },\n\t\t{ 'Data2': ctypes.unsigned_short },\n\t\t{ 'Data3': ctypes.unsigned_short },\n\t\t{ 'Data4': ctypes.char.array(8) }\n\t]);\n\t\n\t// ADVANCED STRUCTURES\n\tthis.IID = this.GUID; // http://msdn.microsoft.com/en-us/library/cc237652%28v=prot.13%29.aspx\n\tthis.REFIID = new ctypes.PointerType(this.IID); // http://msdn.microsoft.com/en-us/library/cc237816%28v=prot.13%29.aspx\n\t\n\tthis.CLSID = this.GUID; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L52\n\tthis.REFCLSID = new ctypes.PointerType(this.CLSID); // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L53\n\t\n\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb773381%28v=vs.85%29.aspx\n\t* typedef struct {\n\t*   GUID  fmtid;\n\t*   DWORD pid;\n\t* } PROPERTYKEY;\n\t*/\n\tthis.PROPERTYKEY = new ctypes.StructType('PROPERTYKEY', [\n\t\t{ 'fmtid': this.GUID },\n\t\t{ 'pid': this.DWORD }\n\t]);\n\tthis.REFPROPERTYKEY = new ctypes.PointerType(this.PROPERTYKEY);\t// note: if you use any REF... (like this.REFPROPERTYKEY) as an arg to a declare, that arg expects a ptr. this is basically like\n\t\n\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb773381%28v=vs.85%29.aspx\n\t* typedef struct PROPVARIANT {\n\t*   VARTYPE vt;\n\t*   WORD    wReserved1;\n\t*   WORD    wReserved2;\n\t*   WORD    wReserved3;\n\t*   union {\n\t*     CHAR              cVal;\n\t*     UCHAR             bVal;\n\t*     SHORT             iVal;\n\t*     USHORT            uiVal;\n\t*     LONG              lVal;\n\t*     ULONG             ulVal;\n\t*     INT               intVal;\n\t*     UINT              uintVal;\n\t*     LARGE_INTEGER     hVal;\n\t*     ULARGE_INTEGER    uhVal;\n\t*     FLOAT             fltVal;\n\t*     DOUBLE            dblVal;\n\t*     VARIANT_BOOL      boolVal;\n\t*     SCODE             scode;\n\t*     CY                cyVal;\n\t*     DATE              date;\n\t*     FILETIME          filetime;\n\t*     CLSID             *puuid;\n\t*     CLIPDATA          *pclipdata;\n\t*     BSTR              bstrVal;\n\t*     BSTRBLOB          bstrblobVal;\n\t*     BLOB              blob;\n\t*     LPSTR             pszVal;\n\t*     LPWSTR            pwszVal;\n\t*     IUnknown          *punkVal;\n\t*     IDispatch         *pdispVal;\n\t*     IStream           *pStream;\n\t*     IStorage          *pStorage;\n\t*     LPVERSIONEDSTREAM pVersionedStream;\n\t*     LPSAFEARRAY       parray;\n\t*     CAC               cac;\n\t*     CAUB              caub;\n\t*     CAI               cai;\n\t*     CAUI              caui;\n\t*     CAL               cal;\n\t*     CAUL              caul;\n\t*     CAH               cah;\n\t*     CAUH              cauh;\n\t*     CAFLT             caflt;\n\t*     CADBL             cadbl;\n\t*     CABOOL            cabool;\n\t*     CASCODE           cascode;\n\t*     CACY              cacy;\n\t*     CADATE            cadate;\n\t*     CAFILETIME        cafiletime;\n\t*     CACLSID           cauuid;\n\t*     CACLIPDATA        caclipdata;\n\t*     CABSTR            cabstr;\n\t*     CABSTRBLOB        cabstrblob;\n\t*     CALPSTR           calpstr;\n\t*     CALPWSTR          calpwstr;\n\t*     CAPROPVARIANT     capropvar;\n\t*     CHAR              *pcVal;\n\t*     UCHAR             *pbVal;\n\t*     SHORT             *piVal;\n\t*     USHORT            *puiVal;\n\t*     LONG              *plVal;\n\t*     ULONG             *pulVal;\n\t*     INT               *pintVal;\n\t*     UINT              *puintVal;\n\t*     FLOAT             *pfltVal;\n\t*     DOUBLE            *pdblVal;\n\t*     VARIANT_BOOL      *pboolVal;\n\t*     DECIMAL           *pdecVal;\n\t*     SCODE             *pscode;\n\t*     CY                *pcyVal;\n\t*     DATE              *pdate;\n\t*     BSTR              *pbstrVal;\n\t*     IUnknown          **ppunkVal;\n\t*     IDispatch         **ppdispVal;\n\t*     LPSAFEARRAY       *pparray;\n\t*     PROPVARIANT       *pvarVal;\n\t*   };\n\t* } PROPVARIANT;\n\t*/\n\tthis.PROPVARIANT = new ctypes.StructType('PROPVARIANT', [\n\t\t{'vt': this.VARTYPE},\t\t// constants for this are available at MSDN: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380072%28v=vs.85%29.aspx\n\t\t{'wReserved1': this.WORD},\n\t\t{'wReserved2': this.WORD},\n\t\t{'wReserved3': this.WORD},\n\t\t// union not supported by js-ctypes\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=535378 \"You can always\n\t\t// typecast pointers, at least as long as you know which type is the biggest\"\n\t\t//note: important: pick one of the below and comment out the others: (because js-ctypes doesnt support union)\n\t\t{ 'pwszVal': this.LPWSTR } // for InitPropVariantFromString // when using this see notes on MSDN doc page chat of PROPVARIANT ( http://msdn.microsoft.com/en-us/library/windows/desktop/aa380072%28v=vs.85%29.aspx )this guy says: \"VT_LPWSTR must be allocated with CoTaskMemAlloc :: (Presumably this also applies to VT_LPSTR) VT_LPWSTR is described as being a string pointer with no information on how it is allocated. You might then assume that the PROPVARIANT doesn't own the string and just has a pointer to it, but you'd be wrong. In fact, the string stored in a VT_LPWSTR PROPVARIANT must be allocated using CoTaskMemAlloc and be freed using CoTaskMemFree. Evidence for this: Look at what the inline InitPropVariantFromString function does: It sets a VT_LPWSTR using SHStrDupW, which in turn allocates the string using CoTaskMemAlloc. Knowing that, it's obvious that PropVariantClear is expected to free the string using CoTaskMemFree. I can't find this explicitly documented anywhere, which is a shame, but step through this code in a debugger and you can confirm that the string is freed by PropVariantClear: ```#include <Propvarutil.h>\tint wmain(int argc, TCHAR *lpszArgv[])\t{\tPROPVARIANT pv;\tInitPropVariantFromString(L\"Moo\", &pv);\t::PropVariantClear(&pv);\t}```  If  you put some other kind of string pointer into a VT_LPWSTR PROPVARIANT your program is probably going to crash.\"\n\t\t//{ 'boolVal:', this.VARIANT_BOOL } // for use with InitPropVariantFromBoolean\n\t]);\n\tthis.REFPROPVARIANT = new ctypes.PointerType(this.PROPVARIANT);\n\t\n\t// VTABLE's\n\tvar IPropertyStoreVtbl = new ctypes.StructType('IPropertyStoreVtbl');\n\tvar IPropertyStore = new ctypes.StructType('IPropertyStore', [{\n\t\t'lpVtbl': IPropertyStoreVtbl.ptr\n\t}]);\n\tthis.IPropertyStorePtr = new ctypes.PointerType(IPropertyStore);\n\n\tIPropertyStoreVtbl.define(\n\t\t[{ //start inherit from IUnknown\n\t\t\t'QueryInterface': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.REFIID,\t// riid\n\t\t\t\t\tthis.VOIDPTR\t// **ppvObject\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'AddRef': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.ULONG, [\n\t\t\t\t\tIPropertyStore.ptr\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'Release': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.ULONG, [\n\t\t\t\t\tIPropertyStore.ptr\n\t\t\t\t]).ptr\n\t\t}, { //end inherit from IUnknown //start IPropertyStore\n\t\t\t'GetCount': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.DWORD.ptr\t// *cProps\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'GetAt': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.DWORD,\t\t\t\t// iProp\n\t\t\t\t\tthis.PROPERTYKEY.ptr\t//*pkey\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'GetValue': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.REFPROPERTYKEY,\t// key\n\t\t\t\t\tthis.PROPVARIANT.ptr\t// *pv\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'SetValue': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.REFPROPERTYKEY,\t// key\n\t\t\t\t\tthis.REFPROPVARIANT\t\t// propvar\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'Commit': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr\n\t\t\t\t]).ptr\n\t\t}]\n\t);\n\t\n\t// CONSTANTS\n\tthis.COINIT_APARTMENTTHREADED = 0x2; //https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm\n\tthis.CLSCTX_INPROC_SERVER = 0x1;\n\tthis.GA_ROOT = 2;\n\tthis.S_OK = new this.HRESULT(0); // http://msdn.microsoft.com/en-us/library/windows/desktop/aa378137%28v=vs.85%29.aspx\n\tthis.S_FALSE = new this.HRESULT(1); // http://msdn.microsoft.com/en-us/library/windows/desktop/aa378137%28v=vs.85%29.aspx\n\tthis.VARIANT_FALSE = this.VARIANT_BOOL(0); //http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx\n\tthis.VARIANT_TRUE = this.VARIANT_BOOL(-1); //http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx // im not doing new this.VARIANT_BOOL becuase as we see in this shortcut js-ctypes they simply do HRESULT(value) ( https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L389 )\n\tthis.VT_BOOL = 0x000B; // 11\n\tthis.VT_LPWSTR = 0x001F; // 31\n}\nvar ostypes = new wintypesInit();\n\n// start - skeleton, shouldn't have to edit\nvar lib = {};\nfunction _lib(path) {\n\t//ensures path is in lib, if its in lib then its open, if its not then it adds it to lib and opens it. returns lib\n\t//path is path to open library\n\t//returns lib so can use straight away\n\n\tif (!(path in lib)) {\n\t\t//need to open the library\n\t\t//default it opens the path, but some things are special like libc in mac is different then linux or like x11 needs to be located based on linux version\n\t\tswitch (path) {\n\t\t\tcase 'x11':\n\t\t\t\ttry {\n\t\t\t\t\tlib[path] = ctypes.open('libX11.so.6');\n\t\t\t\t} catch (e) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar libName = ctypes.libraryName('X11');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Integration Level 1: Could not get libX11 name; not activating', 'e:' + e);\n\t\t\t\t\t\tthrow new Error('Integration Level 1: Could not get libX11 name; not activating, e:' + e);\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlib[path] = ctypes.open(libName);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Integration Level 2: Could not get libX11 name; not activating', 'e:' + e);\n\t\t\t\t\t\tthrow new Error('Integration Level 2: Could not get libX11 name; not activating, e:' + e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttry {\n\t\t\t\t\tlib[path] = ctypes.open(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('Integration Level 1: Could not get open path:', path, 'e:' + e);\n\t\t\t\t\tthrow new Error('Integration Level 1: Could not get open path:\"' + path + '\" e: \"' + e + '\"');\n\t\t\t\t}\n\t\t}\n\t}\n\treturn lib[path];\n}\n\nvar dec = {};\nfunction _dec(declaration) { // it means ensureDeclared and return declare. if its not declared it declares it. else it returns the previously declared.\n\tif (!(declaration in dec)) {\n\t\tdec[declaration] = preDec[declaration](); //if declaration is not in preDec then dev messed up\n\t}\n\treturn dec[declaration];\n}\n// end - skeleton, shouldn't have to edit\n\n// start - predefine your declares here\nvar preDec = { //stands for pre-declare (so its just lazy stuff) //this must be pre-populated by dev // do it alphabateized by key so its ez to look through\n\tCLSIDFromString: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms680589%28v=vs.85%29.aspx\n\t\t * HRESULT CLSIDFromString(\n\t\t *   __in_ LPCOLESTR lpsz,\n\t\t *   __out_ LPCLSID pclsid\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CLSIDFromString', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.LPCOLESTR,\t// lpsz\n\t\t\tostypes.GUID.ptr\t// pclsid\n\t\t); \n\t},\n\tCoCreateInstance: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms686615%28v=vs.85%29.aspx\n\t\t * HRESULT CoCreateInstance(\n\t\t *   __in_   REFCLSID rclsid,\n\t\t *   __in_   LPUNKNOWN pUnkOuter,\n\t\t *   __in_   DWORD dwClsContext,\n\t\t *   __in_   REFIID riid,\n\t\t *   __out_  LPVOID *ppv\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoCreateInstance', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.REFCLSID,\t// rclsid\n\t\t\tostypes.LPUNKNOWN,\t// pUnkOuter\n\t\t\tostypes.DWORD,\t\t// dwClsContext\n\t\t\tostypes.REFIID,\t\t// riid\n\t\t\tostypes.LPVOID\t\t// *ppv\n\t\t);\n\t},\n\tCoInitializeEx: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms695279%28v=vs.85%29.aspx\n\t\t * HRESULT CoInitializeEx(\n\t\t *   __in_opt_  LPVOID pvReserved,\n\t\t *   __in_      DWORD dwCoInit\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoInitializeEx', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// result\n\t\t\tostypes.LPVOID,\t\t// pvReserved\n\t\t\tostypes.DWORD\t\t// dwCoInit\n\t\t);\n\t},\n\tCoTaskMemFree: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms680722%28v=vs.85%29.aspx\n\t\t * void CoTaskMemFree(\n\t\t *   __in_opt_  LPVOID pv\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoTaskMemFree', ctypes.winapi_abi,\n\t\t\tostypes.LPVOID\t// pv\n\t\t);\n\t},\n\tCoUninitialize: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms688715%28v=vs.85%29.aspx\n\t\t * void CoUninitialize(void);\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoUninitialize', ctypes.winapi_abi,\n\t\t\tostypes.VOID\t// return\n\t\t);\n\t},\n\tGetAncestor: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms633502%28v=vs.85%29.aspx\n\t\t * HWND WINAPI GetAncestor(\n\t\t *   __in_ HWND hwnd,\n\t\t *   __in_ UINT gaFlags\n\t\t * );\n\t\t */\n\t\treturn _lib('user32').declare('GetAncestor', ctypes.winapi_abi,\n\t\t\tostypes.HWND,\t// return\n\t\t\tostypes.HWND,\t// hwnd\n\t\t\tostypes.UINT\t// gaFlags\n\t\t); \n\t},\n\tPropVariantClear: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/aa380073%28v=vs.85%29.aspx\n\t\t * WINOLEAPI PropVariantClear(\n\t\t * __in_ PROPVARIANT *pvar\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('PropVariantClear', ctypes.winapi_abi,\n\t\t\tostypes.WINOLEAPI,\t\t\t// return\n\t\t\tostypes.PROPVARIANT.ptr\t\t// *pvar\n\t\t);\n\t},\n\tSHGetPropertyStoreForWindow: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/dd378430%28v=vs.85%29.aspx\n\t\t * HRESULT SHGetPropertyStoreForWindow(\n\t\t * __in_ HWND hwnd,\n\t\t * __in_ REFIID riid,\n\t\t * __out_ void **ppv\n\t\t * );\n\t\t */\n\t\treturn _lib('shell32').declare('SHGetPropertyStoreForWindow', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.HWND,\t\t// hwnd\n\t\t\tostypes.REFIID,\t\t// riid\n\t\t\tostypes.VOIDPTR\t\t// **ppv // arai on irc 1/11/2015 // 01:21\tnoida\they arrai capella would void** be ctypes.voidptr_t? or ctypes.voidptr_t.ptr? // 01:23\tarai\tI think they are totally different types, and it should be ctypes.voidptr_t.ptr\n\t\t\t// actually scratch what arai said, like `SHGetPropertyStoreForWindow` third argument is out `void**` the `QueryInterface` also has out argument `void**` and he used `ctypes.voidptr_t` (https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L74)\n\t\t);\n\t},\n\tSHStrDup: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb759924%28v=vs.85%29.aspx\n\t\t* HRESULT SHStrDup(\n\t\t* __in_ LPCTSTR pszSource,\n\t\t* __out_ LPTSTR *ppwsz\n\t\t* );\n\t\t*/\n\t\treturn _lib('Shlwapi.dll').declare('SHStrDupW', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.LPCTSTR,\t// pszSource\t// old val from old Gist of mine RelunchCommand@yajd `ctypes.voidptr_t` and the notes from then: // can possibly also make this ctypes.char.ptr // im trying to pass PCWSTR here, i am making it as `ctypes.jschar.array()('blah blah').address()`\n\t\t\tostypes.LPTSTR.ptr\t// *ppwsz\t \t// old val from old Gist of mine RelunchCommand@yajd `ctypes.voidptr_t` and the notes from then: // can possibly also make this ctypes.char.ptr\n\t\t); \n\t}\n}\n// end - predefine your declares here\n\n// start - helper functions\nfunction checkHRESULT(hr, funcName) {\n\tif(hr < 0) {\n\t\tthrow 'HRESULT ' + hr + ' returned from function ' + funcName;\n\t}\n}\n\n/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb762305%28v=vs.85%29.aspx\n * NOTE1: I have to write my own InitPropVariantFromString because its not in a dll its defined in a header\n * I looked at wine's implementation ( https://github.com/wine-mirror/wine/blob/master/include/propvarutil.h#L88 ) and compared\n * it to the usage example on MSDN doc page linked here, and Raymond's example of \"I set the PROP\u00adVARIANT manually instead of using Init\u00adProp\u00adVariant\u00adFrom\u00adBoolean just to emphasize that the boolVal must be VARIANT_TRUE and not TRUE.\" ( http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx )\n * HRESULT InitPropVariantFromString(\n *   __in_   BOOL fVal,\n *   __out_  PROPVARIANT *ppropvar\n * );\n */\nfunction InitPropVariantFromBoolean(fVal/*jsbool*/, ppropvar/*ostypes.PROPVARIANT.ptr*/) {\n\t// returns ostypes.HRESULT\n\tppropvar.vt = ostypes.VT_BOOL;\n\tppropvar.boolVal = fVal ? ostypes.VARIANT_TRUE : ostypes.VARIANT_FALSE;\n\treturn ostypes.S_OK;\n}\n\n/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb762305%28v=vs.85%29.aspx\n * NOTE1: I have to write my own InitPropVariantFromString because its not in a dll its defined in a header\n * NOTE2: When using this see notes on MSDN doc page chat of PROPVARIANT ( http://msdn.microsoft.com/en-us/library/windows/desktop/aa380072%28v=vs.85%29.aspx )this guy says: \"VT_LPWSTR must be allocated with CoTaskMemAlloc :: (Presumably this also applies to VT_LPSTR) VT_LPWSTR is described as being a string pointer with no information on how it is allocated. You might then assume that the PROPVARIANT doesn't own the string and just has a pointer to it, but you'd be wrong. In fact, the string stored in a VT_LPWSTR PROPVARIANT must be allocated using CoTaskMemAlloc and be freed using CoTaskMemFree. Evidence for this: Look at what the inline InitPropVariantFromString function does: It sets a VT_LPWSTR using SHStrDupW, which in turn allocates the string using CoTaskMemAlloc. Knowing that, it's obvious that PropVariantClear is expected to free the string using CoTaskMemFree. I can't find this explicitly documented anywhere, which is a shame, but step through this code in a debugger and you can confirm that the string is freed by PropVariantClear: ```#include <Propvarutil.h>\tint wmain(int argc, TCHAR *lpszArgv[])\t{\tPROPVARIANT pv;\tInitPropVariantFromString(L\"Moo\", &pv);\t::PropVariantClear(&pv);\t}```  If  you put some other kind of string pointer into a VT_LPWSTR PROPVARIANT your program is probably going to crash.\"\n * HRESULT InitPropVariantFromString(\n *   __in_   PCWSTR psz,\n *   __out_  PROPVARIANT *ppropvar\n * );\n */\nfunction InitPropVariantFromString(psz/*ostypes.PCWSTR*/, ppropvar/*ostypes.PROPVARIANT.ptr*/) {\n\t//console.log('propvarPtr.contents.pwszVal', propvarPtr.contents.pwszVal, propvarPtr.contents.pwszVal.toSource(), uneval(propvarPtr.contents.pwszVal));\n\t//console.log('propvarPtr', propvarPtr);\n\t// console.log('propvarPtr.contents.pwszVal', propvarPtr.contents.pwszVal);\n\t// console.log('propvarPtr.contents.pwszVal.address()', propvarPtr.contents.pwszVal.address());\n\t\n\tvar hr_SHStrDup = _dec('SHStrDup')(psz, ppropvar.contents.pwszVal.address()); //note in PROPVARIANT defintion `pwszVal` is defined as `LPWSTR` and `SHStrDup` expects second arg as `LPTSTR.ptr` but both `LPTSTR` and `LPWSTR` are defined the same with `ctypes.jschar` so this should be no problem\n\tconsole.info('hr_SHStrDup:', hr_SHStrDup, hr_SHStrDup.toString(), uneval(hr_SHStrDup));\n\t\n\t// console.log('propvarPtr.contents.pwszVal', propvarPtr.contents.pwszVal);\n\tcheckHRESULT(hr_SHStrDup, 'InitPropVariantFromString -> hr_SHStrDup'); // this will throw if HRESULT is bad\n\n\tppropvar.contents.vt = ostypes.VT_LPWSTR;\n\n\treturn hr_SHStrDup;\n}\n\n// from: http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\nfunction IPropertyStore_SetValue(vtblPpsPtr, pps/*IPropertyStore*/, pkey/*ostypes.REFPROPERTYKEY*/, pszValue/*ostypes.PCWSTR*/) { // i introduced vtblPpsPtr as i need it for js-ctypes\n\t// returns hr of SetValue, but if hr of it failed it will throw, so i dont have to check the return value\n\t\n\tvar ppropvar = ostypes.PROPVARIANT();\n\n\tvar hr_InitPropVariantFromString = InitPropVariantFromString(pszValue, ppropvar.address());\n\tcheckHRESULT(hr_InitPropVariantFromString, 'failed InitPropVariantFromString'); //this will throw if HRESULT is bad\n\n\tconsole.info('pps.SetValue', pps.SetValue);\n\tvar hr_SetValue = pps.SetValue(vtblPpsPtr, pkey, ppropvar.address());\n\tcheckHRESULT(hr_SetValue, 'IPropertyStore_SetValue');\n\t\n\tvar rez_PropVariantClear = _dec('PropVariantClear')(ppropvar.address());\n\tconsole.info('rez_PropVariantClear:', rez_PropVariantClear, rez_PropVariantClear.toString(), uneval(rez_PropVariantClear));\n\n\treturn hr_SetValue;\n}\n\nfunction IPropertyStore_GetValue(vtblPpsPtr, pps/*IPropertyStore*/, pkey/*ostypes.REFPROPERTYKEY*/, ppropvar /*ostypes.PROPVARIANT*/ /* OR NULL if you want jsstr returned */) {\n\t// currently setup for String propvariants only, meaning  key pwszVal is populated\n\t// returns hr of GetValue if a ostypes.PROPVARIANT() is supplied as ppropvar arg\n\t// returns jsstr if ppropvar arg is not supplied (creates a temp propvariant and clears it for function use)\n\t\n\tvar ret_js = false;\n\tif (!ppropvar) {\n\t\tppropvar = ostypes.PROPVARIANT();\n\t\tret_js = true;\n\t}\n\t\n\tconsole.info('pps.GetValue', pps.GetValue);\n\tvar hr_GetValue = pps.GetValue(vtblPpsPtr, pkey, ppropvar.address());\n\tcheckHRESULT(hr_GetValue, 'IPropertyStore_GetValue');\n\t\n\tconsole.info('ppropvar:', ppropvar, ppropvar.toString(), uneval(ppropvar));\n\t\n\tif (ret_js) {\n\t\tconsole.info('ppropvar.pwszVal:', ppropvar.pwszVal, ppropvar.pwszVal.toString(), uneval(ppropvar.pwszVal));\n\t\tvar jsstr = ppropvar.pwszVal.readString();\n\t\t\n\t\tvar rez_PropVariantClear = _dec('PropVariantClear')(ppropvar.address());\n\t\tconsole.info('rez_PropVariantClear:', rez_PropVariantClear, rez_PropVariantClear.toString(), uneval(rez_PropVariantClear));\n\n\t\treturn jsstr;\n\t} else {\n\t\tconsole.warn('remember to clear the PROPVARIANT yourself then');\n\t\treturn hr_GetValue;\n\t}\n}\n// end - helper functions\n\nfunction shutdown() {\n\t// do in here what you want to do before shutdown\n\tfor (var l in lib) {\n\t\ttry {\n\t\t\tlib[l].close();\n\t\t} catch (ex) {\n\t\t\tthrow new Error('Failure closing \"' + l + '\": ' + ex);\n\t\t}\n\t}\n}\n\nfunction main() {\n\t//do code here\n\n\t// start - looks like something i would run in _dec or just in main\n\tvar IID_IPropertyStore = new ostypes.GUID();\n\tvar hr_CLSIDFromString_IIDIPropertyStore = _dec('CLSIDFromString')('{886d8eeb-8cf2-4446-8d02-cdba1dbdcf99}', IID_IPropertyStore.address()); // IID_IPersistFile was on the MSDN page (http://msdn.microsoft.com/en-us/library/windows/desktop/ms687223%28v=vs.85%29.aspx) under Requirements however IID_IPropertyStore was not on its MSDN page (http://msdn.microsoft.com/en-us/library/windows/desktop/bb761474%28v=vs.85%29.aspx) so I got this from github\n\tconsole.info('hr_CLSIDFromString_IIDIPropertyStore:', hr_CLSIDFromString_IIDIPropertyStore, hr_CLSIDFromString_IIDIPropertyStore.toString(), uneval(hr_CLSIDFromString_IIDIPropertyStore));\n\tcheckHRESULT(hr_CLSIDFromString_IIDIPropertyStore, 'CLSIDFromString (IID_IPropertyStore)');\n\n\tvar tWin = Services.wm.getMostRecentWindow('navigator:browser');\n\tvar tBaseWin = tWin.QueryInterface(Ci.nsIInterfaceRequestor)\n\t\t\t\t\t\t.getInterface(Ci.nsIWebNavigation)\n\t\t\t\t\t\t.QueryInterface(Ci.nsIDocShellTreeItem)\n\t\t\t\t\t\t.treeOwner.QueryInterface(Ci.nsIInterfaceRequestor)\n\t\t\t\t\t\t.getInterface(Ci.nsIBaseWindow);\n\tvar tHwnd = ostypes.HWND(ctypes.UInt64(tBaseWin.nativeHandle));\n\tconsole.info('tHwnd:', tHwnd, tHwnd.toString(), uneval(tHwnd));\n\t\n\tvar tTopLevelHwnd = _dec('GetAncestor')(tHwnd, ostypes.GA_ROOT); // should make sure we have topLevelHWND per MXR: http://mxr.mozilla.org/mozilla-release/source/widget/windows/WinTaskbar.cpp#75\n\tconsole.info('tTopLevelHwnd:', tTopLevelHwnd, tTopLevelHwnd.toString(), uneval(tTopLevelHwnd));\n\t\n\ttry {\n\t\tvar ppsPtr = new ostypes.IPropertyStorePtr(); // i have to use new event though ostypes.IPropertyStorePtr is defined as `new ...` this is how TimAbradles did it: https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L422  this is probably because its not a new StructType but a new PointerType. probably only `new StructType`'s dont need the `new` when created in js runtime stuff like this line\n\t\tvar hr_SHGetPropertyStoreForWindow = _dec('SHGetPropertyStoreForWindow')(tTopLevelHwnd, IID_IPropertyStore.address(), ppsPtr.address()); //I figured out IID_IPropertyStore in the calls above, `CLSIDFromString`, I do this in place of the `IID_PPV_ARGS` macro, I could just make those two lines I did above the `IID_PPV_ARGS` function. Also see this Stackoverflow topic about IID_PPV_ARGS: http://stackoverflow.com/questions/24542806/can-iid-ppv-args-be-skipped-in-jsctypes-win7\n\t\tconsole.info('hr_SHGetPropertyStoreForWindow:', hr_SHGetPropertyStoreForWindow, hr_SHGetPropertyStoreForWindow.toString(), uneval(hr_SHGetPropertyStoreForWindow));\n\t\tcheckHRESULT(hr_SHGetPropertyStoreForWindow, 'SHGetPropertyStoreForWindow') //this throws so no need to do an if on hr brelow here are my notes from the old gist: //im not sure that was possible anyways as hr is now `-2147467262` and its throwing, before thi, with my `if (hr)` it would continue thinking it passed\n\n\t\tvar pps = ppsPtr.contents.lpVtbl.contents;\n\t\t\n\t\t// start get PKEY's\n\t\tvar fmtid_ID = fmtid_RelaunchCommand = fmtid_RelaunchDisplayNameResource = fmtid_RelaunchIconResource = new ostypes.GUID();\n\t\tvar hr_fmtid = _dec('CLSIDFromString')('{9F4C2855-9F79-4B39-A8D0-E1D42DE1D5F3}', fmtid_ID.address()); // same for guid for: ID, RelaunchCommand, RelaunchDisplayNameResourche, RelaunchIconResource, and IsDestListSeparator // source1: msdn, see links to respective msdn pages on the comment on the PKEY's below //source2: https://github.com/truonghinh/TnX/blob/260a8a623751ffbce14bad6018ea48febbc21bc6/TnX-v8/Microsoft.Windows.Shell/Standard/ShellProvider.cs#L358\n\t\tcheckHRESULT(hr_fmtid, 'hr_fmtid'); //this throws on error\n\t\t\n\t\t// doing these console.info's to make sure when i do CLSIDFromString on fmtid_ID that its going to the others as reference // test is as expected, ah!\n\t\tconsole.info('fmtid_ID:', fmtid_ID, fmtid_ID.toString(), uneval(fmtid_ID));\n\t\tconsole.info('fmtid_RelaunchCommand:', fmtid_RelaunchCommand, fmtid_RelaunchCommand.toString(), uneval(fmtid_RelaunchCommand));\n\t\t\n\t\tvar PKEY_AppUserModel_ID = ostypes.PROPERTYKEY(fmtid_ID, 5); // guid and pid from: http://msdn.microsoft.com/en-us/library/dd391569%28v=vs.85%29.aspx\n\t\tvar PKEY_AppUserModel_RelaunchCommand = ostypes.PROPERTYKEY(fmtid_RelaunchCommand, 2);// guid and pid from: http://msdn.microsoft.com/en-us/library/dd391571%28v=vs.85%29.aspx\n\t\tvar PKEY_AppUserModel_RelaunchDisplayNameResource = ostypes.PROPERTYKEY(fmtid_RelaunchDisplayNameResource, 4); // guid and pid from: http://msdn.microsoft.com/en-us/library/dd391572%28v=vs.85%29.aspx\n\t\tvar PKEY_AppUserModel_RelaunchIconResource = ostypes.PROPERTYKEY(fmtid_RelaunchIconResource, 3); // guid and pid from: http://msdn.microsoft.com/en-us/library/dd391573%28v=vs.85%29.aspx\n\n\t\t// end get PKEY's\n\t\t///*\n\t\t// can use `ostypes.WCHAR.array()('Contoso.Scratch')` or just use jsstring `'Contoso.Scratch'`, i verified this by finding the default id, and then setting window id to `Contoso.Scratch` which moved the window out, then I set the window back to default id of `'E7CF176E110C211B'` and it went back to original group. THEN I moved it back out by setting to `'Contoso.Scratch'` and then set it to `ostypes.WCHAR.array()('E7CF176E110C211B')` and it put it back into the original group // the helper function `IPropertyStore_SetValue` already checks hr and throws error if it fails so no need to check return value here\n\t\tvar hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_ID.address(), Services.prefs.getCharPref('browser.taskbar.lastgroupid'));\n\t\tvar hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_RelaunchCommand.address(), '\"' + FileUtils.getFile('XREExeF', []).path + '\" -profile \"' + OS.Constants.Path.profileDir + '\" -no-remote');\n\t\tvar hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_RelaunchDisplayNameResource.address(), 'Firefox - ' + Services.prefs.getCharPref('browser.taskbar.lastgroupid'));\n\t\t//var hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_RelaunchIconResource.address(), OS.Path.join(OS.Constants.Path.desktopDir, 'ppbeta.ico'));\n\n\t\t/*\n\t\tvar hr_Commit = pps.Commit(ppsPtr);\n\t\tconsole.info('hr_Commit:', hr_Commit, hr_Commit.toString(), uneval(hr_Commit));\n\t\tcheckHRESULT(hr_Commit, 'hr_Commit');\n\t\t*/\n\t\t\n\t\t//*/\n\t\t/*\n\t\t//var myPPV = ostypes.PROPVARIANT();\n\t\tvar jsstr_IPSGetValue = IPropertyStore_GetValue(ppsPtr, pps, PKEY_AppUserModel_ID.address(), null);\n\t\tconsole.info('jsstr_IPSGetValue:', jsstr_IPSGetValue, jsstr_IPSGetValue.toString(), uneval(jsstr_IPSGetValue));\n\t\t*/\n\t\t//IPropertyStore_SetValue(ppsPtr, pps.address(), PKEY_AppUserModel_RelaunchCommand, ostypes.WCHAR.array()('Contoso.Scratch')); // the helper function `IPropertyStore_SetValue` already checks hr and throws error if it fails so no need to check return value here\n\t\t//IPropertyStore_SetValue(ppsPtr, pps.address(), PKEY_AppUserModel_RelaunchDisplayNameResource, ostypes.WCHAR.array()('C:\\\\full\\\\path\\\\to\\\\scratch.exe,-1'));\n\t\t\n\t} catch(ex) {\n\t\tconsole.error(ex);\n\t} finally {\n\t\tif (pps) {\n\t\t\ttry {\n\t\t\t\tpps.Release(ppsPtr);\n\t\t\t\tconsole.log('released');\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.error('Failure releasing pps: ', ex);\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n\n// start - globals for my main stuff\n\n// end - globals\n\ntry {\n\tmain();\n} catch(ex) {\n\tthrow ex;\n} finally {\n\tshutdown();\n}", "count": 46, "author": "noitidart@gmail.com", "raw_text": "Alright all SOLVED!!!!!!\n\nOk make sure you set the pref first:\n\n1) Go to about:config\n2) Set `taskbar.grouping.useprofile` to `true` (cretae pref if its not there)\n3) Then restart browser\n4) Enable developer preferences so you can run browser context code from scratchpad (see here: \n5) Open scratchpad\n6) Go to menu toolbar of scratchpad called \"Environment\" and then click \"Browser\".\n7) Copy paste into scratchpad the code at end of this poast\n8) Hit \"Run\" button in scratchpad\n9) You can now right click on the icon in the taskbar and pin it\n10) Close firefox and click the icon you just pinned, it will launch your profile\n\nbonus) Click on the shortcut you had that launched your profile, it will open all of them in this tab group. However dont drag your shortcut to the taskbar to pin it, ill release an addon that detects if the tile is draged from a shortcut and then it will change the System.UserModel.ID on the shortcut too so shortcuts stay togather.\n\n\nHere is the code to paste:\n-------------------\n\nCu.import('resource://gre/modules/ctypes.jsm')\n\nvar wintypesInit = function() {\t\n\t// BASIC TYPES (ones that arent equal to something predefined by me)\n\tthis.BOOL = ctypes.int;\n\tthis.BOOLEAN = ctypes.char; // http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx // not used in this jsctypes code but just putting it here as i may need in future search as i have the documentation around this (the blog) in my mind right now and commented it here\n\tthis.DWORD = ctypes.unsigned_long;\n\tthis.HRESULT = ctypes.long;\n\tthis.HWND = ctypes.voidptr_t;\n\tthis.INT = ctypes.int;\n\tthis.LPUNKNOWN = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm\n\tthis.LPVOID = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm\n\tthis.PCIDLIST_ABSOLUTE = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L115\n\tthis.PCWSTR = new ctypes.PointerType(ctypes.jschar); // https://github.com/FunkMonkey/Loomo/blob/06a5881a4f520ede092059a4115bf117568b914f/Loomo/chrome/content/modules/Utils/COM/COM.jsm#L35\n\tthis.PIDLIST_ABSOLUTE = ctypes.voidptr_t; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L106\n\tthis.UINT = ctypes.unsigned_int;\n\tthis.ULONG = ctypes.unsigned_long;\n\tthis.VARIANT_BOOL = ctypes.short; //http://msdn.microsoft.com/en-us/library/cc235510.aspx // http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx\n\tthis.VARTYPE = ctypes.unsigned_short;\n\tthis.VOID = ctypes.void_t;\n\tthis.VOIDPTR = ctypes.voidptr_t\n\tthis.WCHAR = ctypes.jschar;\n\tthis.WIN32_FIND_DATA = ctypes.voidptr_t;\n\tthis.WINOLEAPI = ctypes.voidptr_t; // i guessed on this one\n\tthis.WORD = ctypes.unsigned_short;\n\t\n\t// ADVANCED TYPES (ones that are based on the basic types)\n\tthis.LPTSTR = new ctypes.PointerType(this.WCHAR);\n\tthis.LPCTSTR = this.LPTSTR;\n\tthis.LPWSTR = new ctypes.PointerType(this.WCHAR);\n\tthis.LPCWSTR = this.LPWSTR;\n\tthis.LPOLESTR = this.LPWSTR;\n\tthis.LPCOLESTR = this.LPOLESTR;\n\t \n\t// BASIC STRUCTURES\n\tthis.GUID = ctypes.StructType('GUID', [ // http://msdn.microsoft.com/en-us/library/ff718266%28v=prot.10%29.aspx\n\t\t{ 'Data1': ctypes.unsigned_long },\n\t\t{ 'Data2': ctypes.unsigned_short },\n\t\t{ 'Data3': ctypes.unsigned_short },\n\t\t{ 'Data4': ctypes.char.array(8) }\n\t]);\n\t\n\t// ADVANCED STRUCTURES\n\tthis.IID = this.GUID; // http://msdn.microsoft.com/en-us/library/cc237652%28v=prot.13%29.aspx\n\tthis.REFIID = new ctypes.PointerType(this.IID); // http://msdn.microsoft.com/en-us/library/cc237816%28v=prot.13%29.aspx\n\t\n\tthis.CLSID = this.GUID; // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L52\n\tthis.REFCLSID = new ctypes.PointerType(this.CLSID); // https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L53\n\t\n\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb773381%28v=vs.85%29.aspx\n\t* typedef struct {\n\t*   GUID  fmtid;\n\t*   DWORD pid;\n\t* } PROPERTYKEY;\n\t*/\n\tthis.PROPERTYKEY = new ctypes.StructType('PROPERTYKEY', [\n\t\t{ 'fmtid': this.GUID },\n\t\t{ 'pid': this.DWORD }\n\t]);\n\tthis.REFPROPERTYKEY = new ctypes.PointerType(this.PROPERTYKEY);\t// note: if you use any REF... (like this.REFPROPERTYKEY) as an arg to a declare, that arg expects a ptr. this is basically like\n\t\n\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb773381%28v=vs.85%29.aspx\n\t* typedef struct PROPVARIANT {\n\t*   VARTYPE vt;\n\t*   WORD    wReserved1;\n\t*   WORD    wReserved2;\n\t*   WORD    wReserved3;\n\t*   union {\n\t*     CHAR              cVal;\n\t*     UCHAR             bVal;\n\t*     SHORT             iVal;\n\t*     USHORT            uiVal;\n\t*     LONG              lVal;\n\t*     ULONG             ulVal;\n\t*     INT               intVal;\n\t*     UINT              uintVal;\n\t*     LARGE_INTEGER     hVal;\n\t*     ULARGE_INTEGER    uhVal;\n\t*     FLOAT             fltVal;\n\t*     DOUBLE            dblVal;\n\t*     VARIANT_BOOL      boolVal;\n\t*     SCODE             scode;\n\t*     CY                cyVal;\n\t*     DATE              date;\n\t*     FILETIME          filetime;\n\t*     CLSID             *puuid;\n\t*     CLIPDATA          *pclipdata;\n\t*     BSTR              bstrVal;\n\t*     BSTRBLOB          bstrblobVal;\n\t*     BLOB              blob;\n\t*     LPSTR             pszVal;\n\t*     LPWSTR            pwszVal;\n\t*     IUnknown          *punkVal;\n\t*     IDispatch         *pdispVal;\n\t*     IStream           *pStream;\n\t*     IStorage          *pStorage;\n\t*     LPVERSIONEDSTREAM pVersionedStream;\n\t*     LPSAFEARRAY       parray;\n\t*     CAC               cac;\n\t*     CAUB              caub;\n\t*     CAI               cai;\n\t*     CAUI              caui;\n\t*     CAL               cal;\n\t*     CAUL              caul;\n\t*     CAH               cah;\n\t*     CAUH              cauh;\n\t*     CAFLT             caflt;\n\t*     CADBL             cadbl;\n\t*     CABOOL            cabool;\n\t*     CASCODE           cascode;\n\t*     CACY              cacy;\n\t*     CADATE            cadate;\n\t*     CAFILETIME        cafiletime;\n\t*     CACLSID           cauuid;\n\t*     CACLIPDATA        caclipdata;\n\t*     CABSTR            cabstr;\n\t*     CABSTRBLOB        cabstrblob;\n\t*     CALPSTR           calpstr;\n\t*     CALPWSTR          calpwstr;\n\t*     CAPROPVARIANT     capropvar;\n\t*     CHAR              *pcVal;\n\t*     UCHAR             *pbVal;\n\t*     SHORT             *piVal;\n\t*     USHORT            *puiVal;\n\t*     LONG              *plVal;\n\t*     ULONG             *pulVal;\n\t*     INT               *pintVal;\n\t*     UINT              *puintVal;\n\t*     FLOAT             *pfltVal;\n\t*     DOUBLE            *pdblVal;\n\t*     VARIANT_BOOL      *pboolVal;\n\t*     DECIMAL           *pdecVal;\n\t*     SCODE             *pscode;\n\t*     CY                *pcyVal;\n\t*     DATE              *pdate;\n\t*     BSTR              *pbstrVal;\n\t*     IUnknown          **ppunkVal;\n\t*     IDispatch         **ppdispVal;\n\t*     LPSAFEARRAY       *pparray;\n\t*     PROPVARIANT       *pvarVal;\n\t*   };\n\t* } PROPVARIANT;\n\t*/\n\tthis.PROPVARIANT = new ctypes.StructType('PROPVARIANT', [\n\t\t{'vt': this.VARTYPE},\t\t// constants for this are available at MSDN: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380072%28v=vs.85%29.aspx\n\t\t{'wReserved1': this.WORD},\n\t\t{'wReserved2': this.WORD},\n\t\t{'wReserved3': this.WORD},\n\t\t// union not supported by js-ctypes\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=535378 \"You can always\n\t\t// typecast pointers, at least as long as you know which type is the biggest\"\n\t\t//note: important: pick one of the below and comment out the others: (because js-ctypes doesnt support union)\n\t\t{ 'pwszVal': this.LPWSTR } // for InitPropVariantFromString // when using this see notes on MSDN doc page chat of PROPVARIANT ( http://msdn.microsoft.com/en-us/library/windows/desktop/aa380072%28v=vs.85%29.aspx )this guy says: \"VT_LPWSTR must be allocated with CoTaskMemAlloc :: (Presumably this also applies to VT_LPSTR) VT_LPWSTR is described as being a string pointer with no information on how it is allocated. You might then assume that the PROPVARIANT doesn't own the string and just has a pointer to it, but you'd be wrong. In fact, the string stored in a VT_LPWSTR PROPVARIANT must be allocated using CoTaskMemAlloc and be freed using CoTaskMemFree. Evidence for this: Look at what the inline InitPropVariantFromString function does: It sets a VT_LPWSTR using SHStrDupW, which in turn allocates the string using CoTaskMemAlloc. Knowing that, it's obvious that PropVariantClear is expected to free the string using CoTaskMemFree. I can't find this explicitly documented anywhere, which is a shame, but step through this code in a debugger and you can confirm that the string is freed by PropVariantClear: ```#include <Propvarutil.h>\tint wmain(int argc, TCHAR *lpszArgv[])\t{\tPROPVARIANT pv;\tInitPropVariantFromString(L\"Moo\", &pv);\t::PropVariantClear(&pv);\t}```  If  you put some other kind of string pointer into a VT_LPWSTR PROPVARIANT your program is probably going to crash.\"\n\t\t//{ 'boolVal:', this.VARIANT_BOOL } // for use with InitPropVariantFromBoolean\n\t]);\n\tthis.REFPROPVARIANT = new ctypes.PointerType(this.PROPVARIANT);\n\t\n\t// VTABLE's\n\tvar IPropertyStoreVtbl = new ctypes.StructType('IPropertyStoreVtbl');\n\tvar IPropertyStore = new ctypes.StructType('IPropertyStore', [{\n\t\t'lpVtbl': IPropertyStoreVtbl.ptr\n\t}]);\n\tthis.IPropertyStorePtr = new ctypes.PointerType(IPropertyStore);\n\n\tIPropertyStoreVtbl.define(\n\t\t[{ //start inherit from IUnknown\n\t\t\t'QueryInterface': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.REFIID,\t// riid\n\t\t\t\t\tthis.VOIDPTR\t// **ppvObject\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'AddRef': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.ULONG, [\n\t\t\t\t\tIPropertyStore.ptr\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'Release': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.ULONG, [\n\t\t\t\t\tIPropertyStore.ptr\n\t\t\t\t]).ptr\n\t\t}, { //end inherit from IUnknown //start IPropertyStore\n\t\t\t'GetCount': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.DWORD.ptr\t// *cProps\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'GetAt': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.DWORD,\t\t\t\t// iProp\n\t\t\t\t\tthis.PROPERTYKEY.ptr\t//*pkey\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'GetValue': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.REFPROPERTYKEY,\t// key\n\t\t\t\t\tthis.PROPVARIANT.ptr\t// *pv\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'SetValue': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr,\n\t\t\t\t\tthis.REFPROPERTYKEY,\t// key\n\t\t\t\t\tthis.REFPROPVARIANT\t\t// propvar\n\t\t\t\t]).ptr\n\t\t}, {\n\t\t\t'Commit': ctypes.FunctionType(ctypes.stdcall_abi,\n\t\t\t\tthis.HRESULT, [\n\t\t\t\t\tIPropertyStore.ptr\n\t\t\t\t]).ptr\n\t\t}]\n\t);\n\t\n\t// CONSTANTS\n\tthis.COINIT_APARTMENTTHREADED = 0x2; //https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm\n\tthis.CLSCTX_INPROC_SERVER = 0x1;\n\tthis.GA_ROOT = 2;\n\tthis.S_OK = new this.HRESULT(0); // http://msdn.microsoft.com/en-us/library/windows/desktop/aa378137%28v=vs.85%29.aspx\n\tthis.S_FALSE = new this.HRESULT(1); // http://msdn.microsoft.com/en-us/library/windows/desktop/aa378137%28v=vs.85%29.aspx\n\tthis.VARIANT_FALSE = this.VARIANT_BOOL(0); //http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx\n\tthis.VARIANT_TRUE = this.VARIANT_BOOL(-1); //http://blogs.msdn.com/b/oldnewthing/archive/2004/12/22/329884.aspx // im not doing new this.VARIANT_BOOL becuase as we see in this shortcut js-ctypes they simply do HRESULT(value) ( https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L389 )\n\tthis.VT_BOOL = 0x000B; // 11\n\tthis.VT_LPWSTR = 0x001F; // 31\n}\nvar ostypes = new wintypesInit();\n\n// start - skeleton, shouldn't have to edit\nvar lib = {};\nfunction _lib(path) {\n\t//ensures path is in lib, if its in lib then its open, if its not then it adds it to lib and opens it. returns lib\n\t//path is path to open library\n\t//returns lib so can use straight away\n\n\tif (!(path in lib)) {\n\t\t//need to open the library\n\t\t//default it opens the path, but some things are special like libc in mac is different then linux or like x11 needs to be located based on linux version\n\t\tswitch (path) {\n\t\t\tcase 'x11':\n\t\t\t\ttry {\n\t\t\t\t\tlib[path] = ctypes.open('libX11.so.6');\n\t\t\t\t} catch (e) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar libName = ctypes.libraryName('X11');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Integration Level 1: Could not get libX11 name; not activating', 'e:' + e);\n\t\t\t\t\t\tthrow new Error('Integration Level 1: Could not get libX11 name; not activating, e:' + e);\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlib[path] = ctypes.open(libName);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Integration Level 2: Could not get libX11 name; not activating', 'e:' + e);\n\t\t\t\t\t\tthrow new Error('Integration Level 2: Could not get libX11 name; not activating, e:' + e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttry {\n\t\t\t\t\tlib[path] = ctypes.open(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('Integration Level 1: Could not get open path:', path, 'e:' + e);\n\t\t\t\t\tthrow new Error('Integration Level 1: Could not get open path:\"' + path + '\" e: \"' + e + '\"');\n\t\t\t\t}\n\t\t}\n\t}\n\treturn lib[path];\n}\n\nvar dec = {};\nfunction _dec(declaration) { // it means ensureDeclared and return declare. if its not declared it declares it. else it returns the previously declared.\n\tif (!(declaration in dec)) {\n\t\tdec[declaration] = preDec[declaration](); //if declaration is not in preDec then dev messed up\n\t}\n\treturn dec[declaration];\n}\n// end - skeleton, shouldn't have to edit\n\n// start - predefine your declares here\nvar preDec = { //stands for pre-declare (so its just lazy stuff) //this must be pre-populated by dev // do it alphabateized by key so its ez to look through\n\tCLSIDFromString: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms680589%28v=vs.85%29.aspx\n\t\t * HRESULT CLSIDFromString(\n\t\t *   __in_ LPCOLESTR lpsz,\n\t\t *   __out_ LPCLSID pclsid\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CLSIDFromString', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.LPCOLESTR,\t// lpsz\n\t\t\tostypes.GUID.ptr\t// pclsid\n\t\t); \n\t},\n\tCoCreateInstance: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms686615%28v=vs.85%29.aspx\n\t\t * HRESULT CoCreateInstance(\n\t\t *   __in_   REFCLSID rclsid,\n\t\t *   __in_   LPUNKNOWN pUnkOuter,\n\t\t *   __in_   DWORD dwClsContext,\n\t\t *   __in_   REFIID riid,\n\t\t *   __out_  LPVOID *ppv\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoCreateInstance', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.REFCLSID,\t// rclsid\n\t\t\tostypes.LPUNKNOWN,\t// pUnkOuter\n\t\t\tostypes.DWORD,\t\t// dwClsContext\n\t\t\tostypes.REFIID,\t\t// riid\n\t\t\tostypes.LPVOID\t\t// *ppv\n\t\t);\n\t},\n\tCoInitializeEx: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms695279%28v=vs.85%29.aspx\n\t\t * HRESULT CoInitializeEx(\n\t\t *   __in_opt_  LPVOID pvReserved,\n\t\t *   __in_      DWORD dwCoInit\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoInitializeEx', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// result\n\t\t\tostypes.LPVOID,\t\t// pvReserved\n\t\t\tostypes.DWORD\t\t// dwCoInit\n\t\t);\n\t},\n\tCoTaskMemFree: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms680722%28v=vs.85%29.aspx\n\t\t * void CoTaskMemFree(\n\t\t *   __in_opt_  LPVOID pv\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoTaskMemFree', ctypes.winapi_abi,\n\t\t\tostypes.LPVOID\t// pv\n\t\t);\n\t},\n\tCoUninitialize: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms688715%28v=vs.85%29.aspx\n\t\t * void CoUninitialize(void);\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('CoUninitialize', ctypes.winapi_abi,\n\t\t\tostypes.VOID\t// return\n\t\t);\n\t},\n\tGetAncestor: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/ms633502%28v=vs.85%29.aspx\n\t\t * HWND WINAPI GetAncestor(\n\t\t *   __in_ HWND hwnd,\n\t\t *   __in_ UINT gaFlags\n\t\t * );\n\t\t */\n\t\treturn _lib('user32').declare('GetAncestor', ctypes.winapi_abi,\n\t\t\tostypes.HWND,\t// return\n\t\t\tostypes.HWND,\t// hwnd\n\t\t\tostypes.UINT\t// gaFlags\n\t\t); \n\t},\n\tPropVariantClear: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/aa380073%28v=vs.85%29.aspx\n\t\t * WINOLEAPI PropVariantClear(\n\t\t * __in_ PROPVARIANT *pvar\n\t\t * );\n\t\t */\n\t\treturn _lib('Ole32.dll').declare('PropVariantClear', ctypes.winapi_abi,\n\t\t\tostypes.WINOLEAPI,\t\t\t// return\n\t\t\tostypes.PROPVARIANT.ptr\t\t// *pvar\n\t\t);\n\t},\n\tSHGetPropertyStoreForWindow: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/dd378430%28v=vs.85%29.aspx\n\t\t * HRESULT SHGetPropertyStoreForWindow(\n\t\t * __in_ HWND hwnd,\n\t\t * __in_ REFIID riid,\n\t\t * __out_ void **ppv\n\t\t * );\n\t\t */\n\t\treturn _lib('shell32').declare('SHGetPropertyStoreForWindow', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.HWND,\t\t// hwnd\n\t\t\tostypes.REFIID,\t\t// riid\n\t\t\tostypes.VOIDPTR\t\t// **ppv // arai on irc 1/11/2015 // 01:21\tnoida\they arrai capella would void** be ctypes.voidptr_t? or ctypes.voidptr_t.ptr? // 01:23\tarai\tI think they are totally different types, and it should be ctypes.voidptr_t.ptr\n\t\t\t// actually scratch what arai said, like `SHGetPropertyStoreForWindow` third argument is out `void**` the `QueryInterface` also has out argument `void**` and he used `ctypes.voidptr_t` (https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L74)\n\t\t);\n\t},\n\tSHStrDup: function() {\n\t\t/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb759924%28v=vs.85%29.aspx\n\t\t* HRESULT SHStrDup(\n\t\t* __in_ LPCTSTR pszSource,\n\t\t* __out_ LPTSTR *ppwsz\n\t\t* );\n\t\t*/\n\t\treturn _lib('Shlwapi.dll').declare('SHStrDupW', ctypes.winapi_abi,\n\t\t\tostypes.HRESULT,\t// return\n\t\t\tostypes.LPCTSTR,\t// pszSource\t// old val from old Gist of mine RelunchCommand@yajd `ctypes.voidptr_t` and the notes from then: // can possibly also make this ctypes.char.ptr // im trying to pass PCWSTR here, i am making it as `ctypes.jschar.array()('blah blah').address()`\n\t\t\tostypes.LPTSTR.ptr\t// *ppwsz\t \t// old val from old Gist of mine RelunchCommand@yajd `ctypes.voidptr_t` and the notes from then: // can possibly also make this ctypes.char.ptr\n\t\t); \n\t}\n}\n// end - predefine your declares here\n\n// start - helper functions\nfunction checkHRESULT(hr, funcName) {\n\tif(hr < 0) {\n\t\tthrow 'HRESULT ' + hr + ' returned from function ' + funcName;\n\t}\n}\n\n/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb762305%28v=vs.85%29.aspx\n * NOTE1: I have to write my own InitPropVariantFromString because its not in a dll its defined in a header\n * I looked at wine's implementation ( https://github.com/wine-mirror/wine/blob/master/include/propvarutil.h#L88 ) and compared\n * it to the usage example on MSDN doc page linked here, and Raymond's example of \"I set the PROP\u00adVARIANT manually instead of using Init\u00adProp\u00adVariant\u00adFrom\u00adBoolean just to emphasize that the boolVal must be VARIANT_TRUE and not TRUE.\" ( http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx )\n * HRESULT InitPropVariantFromString(\n *   __in_   BOOL fVal,\n *   __out_  PROPVARIANT *ppropvar\n * );\n */\nfunction InitPropVariantFromBoolean(fVal/*jsbool*/, ppropvar/*ostypes.PROPVARIANT.ptr*/) {\n\t// returns ostypes.HRESULT\n\tppropvar.vt = ostypes.VT_BOOL;\n\tppropvar.boolVal = fVal ? ostypes.VARIANT_TRUE : ostypes.VARIANT_FALSE;\n\treturn ostypes.S_OK;\n}\n\n/* http://msdn.microsoft.com/en-us/library/windows/desktop/bb762305%28v=vs.85%29.aspx\n * NOTE1: I have to write my own InitPropVariantFromString because its not in a dll its defined in a header\n * NOTE2: When using this see notes on MSDN doc page chat of PROPVARIANT ( http://msdn.microsoft.com/en-us/library/windows/desktop/aa380072%28v=vs.85%29.aspx )this guy says: \"VT_LPWSTR must be allocated with CoTaskMemAlloc :: (Presumably this also applies to VT_LPSTR) VT_LPWSTR is described as being a string pointer with no information on how it is allocated. You might then assume that the PROPVARIANT doesn't own the string and just has a pointer to it, but you'd be wrong. In fact, the string stored in a VT_LPWSTR PROPVARIANT must be allocated using CoTaskMemAlloc and be freed using CoTaskMemFree. Evidence for this: Look at what the inline InitPropVariantFromString function does: It sets a VT_LPWSTR using SHStrDupW, which in turn allocates the string using CoTaskMemAlloc. Knowing that, it's obvious that PropVariantClear is expected to free the string using CoTaskMemFree. I can't find this explicitly documented anywhere, which is a shame, but step through this code in a debugger and you can confirm that the string is freed by PropVariantClear: ```#include <Propvarutil.h>\tint wmain(int argc, TCHAR *lpszArgv[])\t{\tPROPVARIANT pv;\tInitPropVariantFromString(L\"Moo\", &pv);\t::PropVariantClear(&pv);\t}```  If  you put some other kind of string pointer into a VT_LPWSTR PROPVARIANT your program is probably going to crash.\"\n * HRESULT InitPropVariantFromString(\n *   __in_   PCWSTR psz,\n *   __out_  PROPVARIANT *ppropvar\n * );\n */\nfunction InitPropVariantFromString(psz/*ostypes.PCWSTR*/, ppropvar/*ostypes.PROPVARIANT.ptr*/) {\n\t//console.log('propvarPtr.contents.pwszVal', propvarPtr.contents.pwszVal, propvarPtr.contents.pwszVal.toSource(), uneval(propvarPtr.contents.pwszVal));\n\t//console.log('propvarPtr', propvarPtr);\n\t// console.log('propvarPtr.contents.pwszVal', propvarPtr.contents.pwszVal);\n\t// console.log('propvarPtr.contents.pwszVal.address()', propvarPtr.contents.pwszVal.address());\n\t\n\tvar hr_SHStrDup = _dec('SHStrDup')(psz, ppropvar.contents.pwszVal.address()); //note in PROPVARIANT defintion `pwszVal` is defined as `LPWSTR` and `SHStrDup` expects second arg as `LPTSTR.ptr` but both `LPTSTR` and `LPWSTR` are defined the same with `ctypes.jschar` so this should be no problem\n\tconsole.info('hr_SHStrDup:', hr_SHStrDup, hr_SHStrDup.toString(), uneval(hr_SHStrDup));\n\t\n\t// console.log('propvarPtr.contents.pwszVal', propvarPtr.contents.pwszVal);\n\tcheckHRESULT(hr_SHStrDup, 'InitPropVariantFromString -> hr_SHStrDup'); // this will throw if HRESULT is bad\n\n\tppropvar.contents.vt = ostypes.VT_LPWSTR;\n\n\treturn hr_SHStrDup;\n}\n\n// from: http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx\nfunction IPropertyStore_SetValue(vtblPpsPtr, pps/*IPropertyStore*/, pkey/*ostypes.REFPROPERTYKEY*/, pszValue/*ostypes.PCWSTR*/) { // i introduced vtblPpsPtr as i need it for js-ctypes\n\t// returns hr of SetValue, but if hr of it failed it will throw, so i dont have to check the return value\n\t\n\tvar ppropvar = ostypes.PROPVARIANT();\n\n\tvar hr_InitPropVariantFromString = InitPropVariantFromString(pszValue, ppropvar.address());\n\tcheckHRESULT(hr_InitPropVariantFromString, 'failed InitPropVariantFromString'); //this will throw if HRESULT is bad\n\n\tconsole.info('pps.SetValue', pps.SetValue);\n\tvar hr_SetValue = pps.SetValue(vtblPpsPtr, pkey, ppropvar.address());\n\tcheckHRESULT(hr_SetValue, 'IPropertyStore_SetValue');\n\t\n\tvar rez_PropVariantClear = _dec('PropVariantClear')(ppropvar.address());\n\tconsole.info('rez_PropVariantClear:', rez_PropVariantClear, rez_PropVariantClear.toString(), uneval(rez_PropVariantClear));\n\n\treturn hr_SetValue;\n}\n\nfunction IPropertyStore_GetValue(vtblPpsPtr, pps/*IPropertyStore*/, pkey/*ostypes.REFPROPERTYKEY*/, ppropvar /*ostypes.PROPVARIANT*/ /* OR NULL if you want jsstr returned */) {\n\t// currently setup for String propvariants only, meaning  key pwszVal is populated\n\t// returns hr of GetValue if a ostypes.PROPVARIANT() is supplied as ppropvar arg\n\t// returns jsstr if ppropvar arg is not supplied (creates a temp propvariant and clears it for function use)\n\t\n\tvar ret_js = false;\n\tif (!ppropvar) {\n\t\tppropvar = ostypes.PROPVARIANT();\n\t\tret_js = true;\n\t}\n\t\n\tconsole.info('pps.GetValue', pps.GetValue);\n\tvar hr_GetValue = pps.GetValue(vtblPpsPtr, pkey, ppropvar.address());\n\tcheckHRESULT(hr_GetValue, 'IPropertyStore_GetValue');\n\t\n\tconsole.info('ppropvar:', ppropvar, ppropvar.toString(), uneval(ppropvar));\n\t\n\tif (ret_js) {\n\t\tconsole.info('ppropvar.pwszVal:', ppropvar.pwszVal, ppropvar.pwszVal.toString(), uneval(ppropvar.pwszVal));\n\t\tvar jsstr = ppropvar.pwszVal.readString();\n\t\t\n\t\tvar rez_PropVariantClear = _dec('PropVariantClear')(ppropvar.address());\n\t\tconsole.info('rez_PropVariantClear:', rez_PropVariantClear, rez_PropVariantClear.toString(), uneval(rez_PropVariantClear));\n\n\t\treturn jsstr;\n\t} else {\n\t\tconsole.warn('remember to clear the PROPVARIANT yourself then');\n\t\treturn hr_GetValue;\n\t}\n}\n// end - helper functions\n\nfunction shutdown() {\n\t// do in here what you want to do before shutdown\n\tfor (var l in lib) {\n\t\ttry {\n\t\t\tlib[l].close();\n\t\t} catch (ex) {\n\t\t\tthrow new Error('Failure closing \"' + l + '\": ' + ex);\n\t\t}\n\t}\n}\n\nfunction main() {\n\t//do code here\n\n\t// start - looks like something i would run in _dec or just in main\n\tvar IID_IPropertyStore = new ostypes.GUID();\n\tvar hr_CLSIDFromString_IIDIPropertyStore = _dec('CLSIDFromString')('{886d8eeb-8cf2-4446-8d02-cdba1dbdcf99}', IID_IPropertyStore.address()); // IID_IPersistFile was on the MSDN page (http://msdn.microsoft.com/en-us/library/windows/desktop/ms687223%28v=vs.85%29.aspx) under Requirements however IID_IPropertyStore was not on its MSDN page (http://msdn.microsoft.com/en-us/library/windows/desktop/bb761474%28v=vs.85%29.aspx) so I got this from github\n\tconsole.info('hr_CLSIDFromString_IIDIPropertyStore:', hr_CLSIDFromString_IIDIPropertyStore, hr_CLSIDFromString_IIDIPropertyStore.toString(), uneval(hr_CLSIDFromString_IIDIPropertyStore));\n\tcheckHRESULT(hr_CLSIDFromString_IIDIPropertyStore, 'CLSIDFromString (IID_IPropertyStore)');\n\n\tvar tWin = Services.wm.getMostRecentWindow('navigator:browser');\n\tvar tBaseWin = tWin.QueryInterface(Ci.nsIInterfaceRequestor)\n\t\t\t\t\t\t.getInterface(Ci.nsIWebNavigation)\n\t\t\t\t\t\t.QueryInterface(Ci.nsIDocShellTreeItem)\n\t\t\t\t\t\t.treeOwner.QueryInterface(Ci.nsIInterfaceRequestor)\n\t\t\t\t\t\t.getInterface(Ci.nsIBaseWindow);\n\tvar tHwnd = ostypes.HWND(ctypes.UInt64(tBaseWin.nativeHandle));\n\tconsole.info('tHwnd:', tHwnd, tHwnd.toString(), uneval(tHwnd));\n\t\n\tvar tTopLevelHwnd = _dec('GetAncestor')(tHwnd, ostypes.GA_ROOT); // should make sure we have topLevelHWND per MXR: http://mxr.mozilla.org/mozilla-release/source/widget/windows/WinTaskbar.cpp#75\n\tconsole.info('tTopLevelHwnd:', tTopLevelHwnd, tTopLevelHwnd.toString(), uneval(tTopLevelHwnd));\n\t\n\ttry {\n\t\tvar ppsPtr = new ostypes.IPropertyStorePtr(); // i have to use new event though ostypes.IPropertyStorePtr is defined as `new ...` this is how TimAbradles did it: https://github.com/west-mt/ssbrowser/blob/452e21d728706945ad00f696f84c2f52e8638d08/chrome/content/modules/WindowsShortcutService.jsm#L422  this is probably because its not a new StructType but a new PointerType. probably only `new StructType`'s dont need the `new` when created in js runtime stuff like this line\n\t\tvar hr_SHGetPropertyStoreForWindow = _dec('SHGetPropertyStoreForWindow')(tTopLevelHwnd, IID_IPropertyStore.address(), ppsPtr.address()); //I figured out IID_IPropertyStore in the calls above, `CLSIDFromString`, I do this in place of the `IID_PPV_ARGS` macro, I could just make those two lines I did above the `IID_PPV_ARGS` function. Also see this Stackoverflow topic about IID_PPV_ARGS: http://stackoverflow.com/questions/24542806/can-iid-ppv-args-be-skipped-in-jsctypes-win7\n\t\tconsole.info('hr_SHGetPropertyStoreForWindow:', hr_SHGetPropertyStoreForWindow, hr_SHGetPropertyStoreForWindow.toString(), uneval(hr_SHGetPropertyStoreForWindow));\n\t\tcheckHRESULT(hr_SHGetPropertyStoreForWindow, 'SHGetPropertyStoreForWindow') //this throws so no need to do an if on hr brelow here are my notes from the old gist: //im not sure that was possible anyways as hr is now `-2147467262` and its throwing, before thi, with my `if (hr)` it would continue thinking it passed\n\n\t\tvar pps = ppsPtr.contents.lpVtbl.contents;\n\t\t\n\t\t// start get PKEY's\n\t\tvar fmtid_ID = fmtid_RelaunchCommand = fmtid_RelaunchDisplayNameResource = fmtid_RelaunchIconResource = new ostypes.GUID();\n\t\tvar hr_fmtid = _dec('CLSIDFromString')('{9F4C2855-9F79-4B39-A8D0-E1D42DE1D5F3}', fmtid_ID.address()); // same for guid for: ID, RelaunchCommand, RelaunchDisplayNameResourche, RelaunchIconResource, and IsDestListSeparator // source1: msdn, see links to respective msdn pages on the comment on the PKEY's below //source2: https://github.com/truonghinh/TnX/blob/260a8a623751ffbce14bad6018ea48febbc21bc6/TnX-v8/Microsoft.Windows.Shell/Standard/ShellProvider.cs#L358\n\t\tcheckHRESULT(hr_fmtid, 'hr_fmtid'); //this throws on error\n\t\t\n\t\t// doing these console.info's to make sure when i do CLSIDFromString on fmtid_ID that its going to the others as reference // test is as expected, ah!\n\t\tconsole.info('fmtid_ID:', fmtid_ID, fmtid_ID.toString(), uneval(fmtid_ID));\n\t\tconsole.info('fmtid_RelaunchCommand:', fmtid_RelaunchCommand, fmtid_RelaunchCommand.toString(), uneval(fmtid_RelaunchCommand));\n\t\t\n\t\tvar PKEY_AppUserModel_ID = ostypes.PROPERTYKEY(fmtid_ID, 5); // guid and pid from: http://msdn.microsoft.com/en-us/library/dd391569%28v=vs.85%29.aspx\n\t\tvar PKEY_AppUserModel_RelaunchCommand = ostypes.PROPERTYKEY(fmtid_RelaunchCommand, 2);// guid and pid from: http://msdn.microsoft.com/en-us/library/dd391571%28v=vs.85%29.aspx\n\t\tvar PKEY_AppUserModel_RelaunchDisplayNameResource = ostypes.PROPERTYKEY(fmtid_RelaunchDisplayNameResource, 4); // guid and pid from: http://msdn.microsoft.com/en-us/library/dd391572%28v=vs.85%29.aspx\n\t\tvar PKEY_AppUserModel_RelaunchIconResource = ostypes.PROPERTYKEY(fmtid_RelaunchIconResource, 3); // guid and pid from: http://msdn.microsoft.com/en-us/library/dd391573%28v=vs.85%29.aspx\n\n\t\t// end get PKEY's\n\t\t///*\n\t\t// can use `ostypes.WCHAR.array()('Contoso.Scratch')` or just use jsstring `'Contoso.Scratch'`, i verified this by finding the default id, and then setting window id to `Contoso.Scratch` which moved the window out, then I set the window back to default id of `'E7CF176E110C211B'` and it went back to original group. THEN I moved it back out by setting to `'Contoso.Scratch'` and then set it to `ostypes.WCHAR.array()('E7CF176E110C211B')` and it put it back into the original group // the helper function `IPropertyStore_SetValue` already checks hr and throws error if it fails so no need to check return value here\n\t\tvar hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_ID.address(), Services.prefs.getCharPref('browser.taskbar.lastgroupid'));\n\t\tvar hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_RelaunchCommand.address(), '\"' + FileUtils.getFile('XREExeF', []).path + '\" -profile \"' + OS.Constants.Path.profileDir + '\" -no-remote');\n\t\tvar hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_RelaunchDisplayNameResource.address(), 'Firefox - ' + Services.prefs.getCharPref('browser.taskbar.lastgroupid'));\n\t\t//var hr_IPSSetValue = IPropertyStore_SetValue(ppsPtr, pps, PKEY_AppUserModel_RelaunchIconResource.address(), OS.Path.join(OS.Constants.Path.desktopDir, 'ppbeta.ico'));\n\n\t\t/*\n\t\tvar hr_Commit = pps.Commit(ppsPtr);\n\t\tconsole.info('hr_Commit:', hr_Commit, hr_Commit.toString(), uneval(hr_Commit));\n\t\tcheckHRESULT(hr_Commit, 'hr_Commit');\n\t\t*/\n\t\t\n\t\t//*/\n\t\t/*\n\t\t//var myPPV = ostypes.PROPVARIANT();\n\t\tvar jsstr_IPSGetValue = IPropertyStore_GetValue(ppsPtr, pps, PKEY_AppUserModel_ID.address(), null);\n\t\tconsole.info('jsstr_IPSGetValue:', jsstr_IPSGetValue, jsstr_IPSGetValue.toString(), uneval(jsstr_IPSGetValue));\n\t\t*/\n\t\t//IPropertyStore_SetValue(ppsPtr, pps.address(), PKEY_AppUserModel_RelaunchCommand, ostypes.WCHAR.array()('Contoso.Scratch')); // the helper function `IPropertyStore_SetValue` already checks hr and throws error if it fails so no need to check return value here\n\t\t//IPropertyStore_SetValue(ppsPtr, pps.address(), PKEY_AppUserModel_RelaunchDisplayNameResource, ostypes.WCHAR.array()('C:\\\\full\\\\path\\\\to\\\\scratch.exe,-1'));\n\t\t\n\t} catch(ex) {\n\t\tconsole.error(ex);\n\t} finally {\n\t\tif (pps) {\n\t\t\ttry {\n\t\t\t\tpps.Release(ppsPtr);\n\t\t\t\tconsole.log('released');\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.error('Failure releasing pps: ', ex);\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n\n// start - globals for my main stuff\n\n// end - globals\n\ntry {\n\tmain();\n} catch(ex) {\n\tthrow ex;\n} finally {\n\tshutdown();\n}", "bug_id": 644914, "creation_time": "2015-01-30T08:28:34Z", "tags": [], "is_private": false, "time": "2015-01-30T08:28:34Z", "id": 9861836}, {"id": 9861856, "time": "2015-01-30T08:37:36Z", "author": "noitidart@gmail.com", "count": 47, "text": "Btw my previous reply is just to share the solution. I'm releasing my addon Profilist which will have this built in and will also allow you to badge the icon (the icon will show badged in taskbar, alt+tab menu, and all windows) cool stuff :) Took only 6 months to figure out HAHAHA!!", "attachment_id": null, "is_private": false, "tags": [], "creator": "noitidart@gmail.com", "creation_time": "2015-01-30T08:37:36Z", "bug_id": 644914, "raw_text": "Btw my previous reply is just to share the solution. I'm releasing my addon Profilist which will have this built in and will also allow you to badge the icon (the icon will show badged in taskbar, alt+tab menu, and all windows) cool stuff :) Took only 6 months to figure out HAHAHA!!"}, {"is_private": false, "tags": [], "raw_text": "Ok forget the copy paste code above i put it into an addon real fast.\n\nBEFORE running this addon, make sure you create a boolean pref named `taskbar.grouping.useprofile` and set it to true then restart. THEN install the attached addon, then remove the addon. then right click on the icon in taskbar and pin it. now future clicks will relaunch the proper profile and shortcuts that open this profile will open into this group.", "bug_id": 644914, "creation_time": "2015-01-30T09:00:25Z", "id": 9861950, "time": "2015-01-30T09:00:25Z", "attachment_id": 8556989, "creator": "noitidart@gmail.com", "author": "noitidart@gmail.com", "text": "Created attachment 8556989\nBugzilla-644914-Solution.xpi\n\nOk forget the copy paste code above i put it into an addon real fast.\n\nBEFORE running this addon, make sure you create a boolean pref named `taskbar.grouping.useprofile` and set it to true then restart. THEN install the attached addon, then remove the addon. then right click on the icon in taskbar and pin it. now future clicks will relaunch the proper profile and shortcuts that open this profile will open into this group.", "count": 48}, {"id": 9861962, "time": "2015-01-30T09:02:06Z", "tags": [], "raw_text": "by restart i of course mean restart the specific browser. not the computer or anything else.\n\nman bugzilla needs comment edit :(", "bug_id": 644914, "creation_time": "2015-01-30T09:02:06Z", "is_private": false, "count": 49, "text": "by restart i of course mean restart the specific browser. not the computer or anything else.\n\nman bugzilla needs comment edit :(", "author": "noitidart@gmail.com", "creator": "noitidart@gmail.com", "attachment_id": null}, {"author": "noitidart@gmail.com", "text": "If you guys want you can find the respective shortcut after pinning and change the name from \"Firefox - ########\" to be like \"Firefox - My Profile Name\" and you can also change the icon there. Fun stuff. The shortcuts after pinning are located here: %APPDATA%\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\ImplicitAppShortcuts just look through the folders till you find your matching name.\n\nOr if you want to set the name and icon via the code, its just a couple lines:\nedit name here: https://github.com/Noitidart/Bugzilla-644914-Solution/blob/master/bootstrap.js#L571\nuncomment and set path to icon on this line: https://github.com/Noitidart/Bugzilla-644914-Solution/blob/master/bootstrap.js#L572", "count": 50, "attachment_id": null, "creator": "noitidart@gmail.com", "id": 9861991, "time": "2015-01-30T09:14:19Z", "is_private": false, "tags": [], "creation_time": "2015-01-30T09:14:19Z", "bug_id": 644914, "raw_text": "If you guys want you can find the respective shortcut after pinning and change the name from \"Firefox - ########\" to be like \"Firefox - My Profile Name\" and you can also change the icon there. Fun stuff. The shortcuts after pinning are located here: %APPDATA%\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\ImplicitAppShortcuts just look through the folders till you find your matching name.\n\nOr if you want to set the name and icon via the code, its just a couple lines:\nedit name here: https://github.com/Noitidart/Bugzilla-644914-Solution/blob/master/bootstrap.js#L571\nuncomment and set path to icon on this line: https://github.com/Noitidart/Bugzilla-644914-Solution/blob/master/bootstrap.js#L572"}, {"creator": "noitidart@gmail.com", "attachment_id": null, "text": "Ok I got a bit hyper there as I learned COM via js-ctypes. Anyways solution implemented with Profilist. The addon is in beta right now as OSX and Linux implementation isn't complete. Here's a screencast: https://www.youtube.com/watch?v=fKw-BNWMyQM\n\n@rogue, you can right click on the icon running in the taskbar and click pin/unpin. And the shortcuts created from the options panel with this are pinnable to the dock or start screen (Win8+) via drag or whatever other operations.\n\nhttps://github.com/Noitidart/Profilist/", "count": 51, "author": "noitidart@gmail.com", "creation_time": "2015-06-13T05:43:41Z", "bug_id": 644914, "raw_text": "Ok I got a bit hyper there as I learned COM via js-ctypes. Anyways solution implemented with Profilist. The addon is in beta right now as OSX and Linux implementation isn't complete. Here's a screencast: https://www.youtube.com/watch?v=fKw-BNWMyQM\n\n@rogue, you can right click on the icon running in the taskbar and click pin/unpin. And the shortcuts created from the options panel with this are pinnable to the dock or start screen (Win8+) via drag or whatever other operations.\n\nhttps://github.com/Noitidart/Profilist/", "tags": [], "is_private": false, "time": "2015-06-13T05:43:41Z", "id": 10384944}, {"creation_time": "2016-03-10T09:37:32Z", "bug_id": 644914, "raw_text": "I have been searching for the way of pin two shortcuts for two different profiles for more than 3 days and this topic was the most useful for me so that I'll post my solution here.\nSo, if you want to run two instances of Firefox at the same time and you don't want to see them combined, follow my instructions.\n1. Create two profiles (win+ r -> firefox -p -> and so on)\n2. Create a link to your current firefox folder (for me it's C:\\Program Files\\Mozilla Firefox). You can do it using commandline: mklink /d \"C:\\Program Files\\Mozilla Firefox 2\" \"C:\\Program Files\\Mozilla Firefox\".\n3. Instead of creating a link you can just create new folder \"Firefox 2\" and copy to it everything from original Firefox folder.\n4. Create new application2.ini file and paste to it everything from original application.ini (this file is located in the firefox's folder).\n5. Change Vendor=Mozilla Name=Firefox to Vendor=Mozilla2 Name=Firefox2 in application2.ini\n6. Create two shortcuts for the firefox.exe (one from the original folder and one from the linked folder)\n7. Edit the properties of first shortcut. Make sure that work folder is set to original folder and, what is the most importnat, add to the object field \"-app application.ini\" -p YourFirstProfile -no-remote\n8. Edit the properties of second shortcut - add to the odject field \"-app application2.ini\" -p YourFirstProfile -no-remote\n9. Pin both of the shortcuts to the taskbar.\n10. Launch both instances. Each of them will run separate.", "tags": [], "is_private": false, "time": "2016-03-10T09:37:32Z", "id": 11234864, "creator": "teddiaps@gmail.com", "attachment_id": null, "text": "I have been searching for the way of pin two shortcuts for two different profiles for more than 3 days and this topic was the most useful for me so that I'll post my solution here.\nSo, if you want to run two instances of Firefox at the same time and you don't want to see them combined, follow my instructions.\n1. Create two profiles (win+ r -> firefox -p -> and so on)\n2. Create a link to your current firefox folder (for me it's C:\\Program Files\\Mozilla Firefox). You can do it using commandline: mklink /d \"C:\\Program Files\\Mozilla Firefox 2\" \"C:\\Program Files\\Mozilla Firefox\".\n3. Instead of creating a link you can just create new folder \"Firefox 2\" and copy to it everything from original Firefox folder.\n4. Create new application2.ini file and paste to it everything from original application.ini (this file is located in the firefox's folder).\n5. Change Vendor=Mozilla Name=Firefox to Vendor=Mozilla2 Name=Firefox2 in application2.ini\n6. Create two shortcuts for the firefox.exe (one from the original folder and one from the linked folder)\n7. Edit the properties of first shortcut. Make sure that work folder is set to original folder and, what is the most importnat, add to the object field \"-app application.ini\" -p YourFirstProfile -no-remote\n8. Edit the properties of second shortcut - add to the odject field \"-app application2.ini\" -p YourFirstProfile -no-remote\n9. Pin both of the shortcuts to the taskbar.\n10. Launch both instances. Each of them will run separate.", "count": 52, "author": "teddiaps@gmail.com"}, {"id": 11234908, "time": "2016-03-10T09:54:52Z", "is_private": false, "tags": [], "creation_time": "2016-03-10T09:54:52Z", "bug_id": 644914, "raw_text": "Hi teddiaps@gmail.com you can use Profilist beta, create a desktop shortcut and then drag those to the start bar - https://addons.mozilla.org/en-US/firefox/addon/profilist/", "author": "noitidart@gmail.com", "count": 53, "text": "Hi teddiaps@gmail.com you can use Profilist beta, create a desktop shortcut and then drag those to the start bar - https://addons.mozilla.org/en-US/firefox/addon/profilist/", "attachment_id": null, "creator": "noitidart@gmail.com"}, {"attachment_id": null, "creator": "teddiaps@gmail.com", "author": "teddiaps@gmail.com", "count": 54, "text": "Hey guys, I got an update.\nI tried to create another one profile but everything went wrong and all my profiles started to launch in new windows instead of pinned.\nIf you encountered this, don't panic.\nAt first, unpin every shortcut related to the firefox and restart your PC.\nAt second, make a new shortcut from original FF folder and place it somewhere.\nNext, modify it - add \"-app application.ini\" -p YourFirstProfile -no-remote to the object field. Run Firefox using this shotcut.\nA new Firefox window will open - you'll have to pin it. After that, go to shortcut folder (%appdata%\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar) and find your new pinned shortcut (it will be named like Firefox or Mozilla Firefox). Edit his properties (\"-app application.ini\" -p YourFirstProfile -no-remote).\nFinally, reboot your PC in order to see the change of an icon of the shortcut (if you changed it before) and launch your new profile by clicking on pinned shortcut. Firefox should create a new windows using pinned shortcut.\nIf everything went ok, you should repeat all the steps with another profiles.\nP.S. I don't know why, but the profile launched from linked \" MozillaFirefox 2\" folder may have some problems. So, just avoid this number and link original folder with \"mozilla firefox 3\", for example.", "is_private": false, "tags": [], "raw_text": "Hey guys, I got an update.\nI tried to create another one profile but everything went wrong and all my profiles started to launch in new windows instead of pinned.\nIf you encountered this, don't panic.\nAt first, unpin every shortcut related to the firefox and restart your PC.\nAt second, make a new shortcut from original FF folder and place it somewhere.\nNext, modify it - add \"-app application.ini\" -p YourFirstProfile -no-remote to the object field. Run Firefox using this shotcut.\nA new Firefox window will open - you'll have to pin it. After that, go to shortcut folder (%appdata%\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar) and find your new pinned shortcut (it will be named like Firefox or Mozilla Firefox). Edit his properties (\"-app application.ini\" -p YourFirstProfile -no-remote).\nFinally, reboot your PC in order to see the change of an icon of the shortcut (if you changed it before) and launch your new profile by clicking on pinned shortcut. Firefox should create a new windows using pinned shortcut.\nIf everything went ok, you should repeat all the steps with another profiles.\nP.S. I don't know why, but the profile launched from linked \" MozillaFirefox 2\" folder may have some problems. So, just avoid this number and link original folder with \"mozilla firefox 3\", for example.", "creation_time": "2016-03-10T22:15:02Z", "bug_id": 644914, "id": 11237321, "time": "2016-03-10T22:15:02Z"}, {"count": 55, "text": "If this is still an issue, with fresh installs with the latest Firefox, it might be useful for an update and a clear description as to what the issue is and what isn't working. As it currently stands, this issue is unlikely to move forward.", "author": "standard8@mozilla.com", "creator": "standard8@mozilla.com", "attachment_id": null, "time": "2019-10-17T19:45:31Z", "id": 14430926, "creation_time": "2019-10-17T19:45:31Z", "bug_id": 644914, "raw_text": "If this is still an issue, with fresh installs with the latest Firefox, it might be useful for an update and a clear description as to what the issue is and what isn't working. As it currently stands, this issue is unlikely to move forward.", "tags": [], "is_private": false}]}}}