{"comments": {}, "bugs": {"692574": {"comments": [{"bug_id": 692574, "count": 0, "is_private": false, "tags": [], "id": 5764560, "text": "See \n\n  http://greenbytes.de/tech/tc2231/#attwithfn2231singleqmissing\n\nonly FF is tolerant here. We should ignore the param instead.", "time": "2011-10-06T20:42:57Z", "attachment_id": null, "creation_time": "2011-10-06T20:42:57Z", "raw_text": "See \n\n  http://greenbytes.de/tech/tc2231/#attwithfn2231singleqmissing\n\nonly FF is tolerant here. We should ignore the param instead.", "creator": "julian.reschke@gmx.de", "author": "julian.reschke@gmx.de"}, {"creator": "julian.reschke@gmx.de", "author": "julian.reschke@gmx.de", "text": "Created attachment 565797\nProposed patch, incl test case\n\ndepends on patch for 686429", "time": "2011-10-09T12:52:17Z", "attachment_id": 565797, "raw_text": "depends on patch for 686429", "creation_time": "2011-10-09T12:52:17Z", "bug_id": 692574, "is_private": false, "count": 1, "tags": [], "id": 5769929}, {"tags": [], "is_private": false, "count": 2, "id": 5776585, "bug_id": 692574, "creation_time": "2011-10-12T03:41:38Z", "raw_text": "This code seems to be pretty purposeful.  Have you checked the history to see when/why it was added?\n\nAlso why is the aCharset null-check ok to remove?", "text": "This code seems to be pretty purposeful.  Have you checked the history to see when/why it was added?\n\nAlso why is the aCharset null-check ok to remove?", "attachment_id": null, "time": "2011-10-12T03:41:38Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"bug_id": 692574, "id": 5777278, "is_private": false, "count": 3, "tags": [], "time": "2011-10-12T13:49:20Z", "attachment_id": null, "text": "(In reply to Boris Zbarsky (:bz) from comment #2)\n> This code seems to be pretty purposeful.  Have you checked the history to\n> see when/why it was added?\n\nApparently it predates 2003/2004, when the code was moved over from the mail component. I can't find anything specific to this in Bugzilla.\n\n> Also why is the aCharset null-check ok to remove?\n\nIt's not (unfortunately this is something we can't test from JS, right?). Will update the patch. (And thanks for checking!)", "creation_time": "2011-10-12T13:49:20Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #2)\n> This code seems to be pretty purposeful.  Have you checked the history to\n> see when/why it was added?\n\nApparently it predates 2003/2004, when the code was moved over from the mail component. I can't find anything specific to this in Bugzilla.\n\n> Also why is the aCharset null-check ok to remove?\n\nIt's not (unfortunately this is something we can't test from JS, right?). Will update the patch. (And thanks for checking!)", "author": "julian.reschke@gmx.de", "creator": "julian.reschke@gmx.de"}, {"text": "(In reply to Julian Reschke from comment #3)\n> (In reply to Boris Zbarsky (:bz) from comment #2)\n> > This code seems to be pretty purposeful.  Have you checked the history to\n> > see when/why it was added?\n> \n> Apparently it predates 2003/2004, when the code was moved over from the mail\n> component. I can't find anything specific to this in Bugzilla.\n> ...\n\nAs far as I can tell, this has been around in the initial checkin for bug 162765. I *assume* it was done in the spirit of being lenient, but as far as I can tell, it doesn't need to, and being lenient in only one implementation actually is bad for interop.", "time": "2011-10-12T14:30:43Z", "attachment_id": null, "raw_text": "(In reply to Julian Reschke from comment #3)\n> (In reply to Boris Zbarsky (:bz) from comment #2)\n> > This code seems to be pretty purposeful.  Have you checked the history to\n> > see when/why it was added?\n> \n> Apparently it predates 2003/2004, when the code was moved over from the mail\n> component. I can't find anything specific to this in Bugzilla.\n> ...\n\nAs far as I can tell, this has been around in the initial checkin for bug 162765. I *assume* it was done in the spirit of being lenient, but as far as I can tell, it doesn't need to, and being lenient in only one implementation actually is bad for interop.", "creation_time": "2011-10-12T14:30:43Z", "bug_id": 692574, "is_private": false, "count": 4, "tags": [], "id": 5777358, "creator": "julian.reschke@gmx.de", "author": "julian.reschke@gmx.de"}, {"author": "julian.reschke@gmx.de", "creator": "julian.reschke@gmx.de", "raw_text": "(restores the missing aCharset check)", "creation_time": "2011-10-12T15:41:39Z", "time": "2011-10-12T15:41:39Z", "attachment_id": 566546, "text": "Created attachment 566546\nProposed patch, incl test case\n\n(restores the missing aCharset check)", "id": 5777557, "count": 5, "is_private": false, "tags": [], "bug_id": 692574}, {"author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "creation_time": "2011-10-12T17:22:14Z", "raw_text": "> As far as I can tell, this has been around in the initial checkin for bug 162765\n\nPerfect, thanks.  The mailnews code that was removed in that checkin looked like this:\n\n-  const char *s_quote1 = PL_strchr(value_start, 0x27);\n-  const char *s_quote2 = (char *) (s_quote1 ? PL_strchr(s_quote1+1, 0x27) : NULL);\n-  NS_ASSERTION(s_quote1 && s_quote2, \"1.1 <rhp@netscape.com> 19 Mar 1999 12:00\");\n-  if (charset && s_quote1 > value_start && s_quote1 < value_end)\n-    /* set *charset */\n....\n-  if (language && s_quote1 && sa_quote2 && s_quote2 > s_quote1+1 &&\n-    s_quote2 < value_end)\n-    /* set *language */\n...\n-  if (s_quote2 && s_quote2+1 < value_end)\n-    /* set s, etc */\n\nSo it looks like it set *charset no matter what, but asserted if there wasn't a second quote and pressed on.  <sigh>.\n\nLet's hope that mail doesn't depend on this behavior...\n\n> unfortunately this is something we can't test from JS, right?\n\nThat's correct.", "time": "2011-10-12T17:22:14Z", "attachment_id": null, "text": "> As far as I can tell, this has been around in the initial checkin for bug 162765\n\nPerfect, thanks.  The mailnews code that was removed in that checkin looked like this:\n\n-  const char *s_quote1 = PL_strchr(value_start, 0x27);\n-  const char *s_quote2 = (char *) (s_quote1 ? PL_strchr(s_quote1+1, 0x27) : NULL);\n-  NS_ASSERTION(s_quote1 && s_quote2, \"1.1 <rhp@netscape.com> 19 Mar 1999 12:00\");\n-  if (charset && s_quote1 > value_start && s_quote1 < value_end)\n-    /* set *charset */\n....\n-  if (language && s_quote1 && sa_quote2 && s_quote2 > s_quote1+1 &&\n-    s_quote2 < value_end)\n-    /* set *language */\n...\n-  if (s_quote2 && s_quote2+1 < value_end)\n-    /* set s, etc */\n\nSo it looks like it set *charset no matter what, but asserted if there wasn't a second quote and pressed on.  <sigh>.\n\nLet's hope that mail doesn't depend on this behavior...\n\n> unfortunately this is something we can't test from JS, right?\n\nThat's correct.", "id": 5777850, "count": 6, "is_private": false, "tags": [], "bug_id": 692574}, {"creator": "bzbarsky@mit.edu", "text": "Comment on attachment 566546\nProposed patch, incl test case\n\nr=me", "author": "bzbarsky@mit.edu", "attachment_id": 566546, "time": "2011-10-12T17:22:43Z", "creation_time": "2011-10-12T17:22:43Z", "raw_text": "r=me", "bug_id": 692574, "tags": [], "count": 7, "is_private": false, "id": 5777853}, {"author": "dao+bmo@mozilla.com", "creator": "dao+bmo@mozilla.com", "attachment_id": null, "time": "2011-10-14T09:37:12Z", "text": "http://hg.mozilla.org/integration/mozilla-inbound/rev/4b87afed1d1c", "raw_text": "http://hg.mozilla.org/integration/mozilla-inbound/rev/4b87afed1d1c", "creation_time": "2011-10-14T09:37:12Z", "bug_id": 692574, "id": 5782253, "tags": [], "is_private": false, "count": 8}, {"raw_text": "https://hg.mozilla.org/mozilla-central/rev/4b87afed1d1c", "creation_time": "2011-10-14T15:09:07Z", "attachment_id": null, "time": "2011-10-14T15:09:07Z", "text": "https://hg.mozilla.org/mozilla-central/rev/4b87afed1d1c", "id": 5782756, "tags": [], "is_private": false, "count": 9, "bug_id": 692574, "author": "ehsan.akhgari@gmail.com", "creator": "ehsan.akhgari@gmail.com"}, {"attachment_id": null, "time": "2011-11-28T12:50:27Z", "author": "julian.reschke@gmx.de", "text": "Reopened because the change was backed out for now due to bug 704989.", "creator": "julian.reschke@gmx.de", "creation_time": "2011-11-28T12:50:27Z", "raw_text": "Reopened because the change was backed out for now due to bug 704989.", "bug_id": 692574, "id": 5875283, "is_private": false, "count": 10, "tags": []}]}}}