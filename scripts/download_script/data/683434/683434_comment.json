{"bugs": {"683434": {"comments": [{"bug_id": 683434, "tags": [], "is_private": false, "count": 0, "id": 5689920, "text": "In order to prepare a plan for Firebug transition to e10s we want to utilize a logging-feature introduced in bug 666713 (Dynamic analysis of chrome->content operations in Firefox) and identify all places in Firebug where chrome touches the content. \n\nAs expected, I am getting huge log file. Only starting Firefox and reloading the home page produces: 4MB, 60K+ lines\n\nI would like to redirect the logging into Firebug Tracing Console that we also use to see all logs coming from Firebug itself (often the only way how to debug a debugger).\n\nWould it be possible to expose a simple XPCOM (service) that Firebug could access in JS, register a listener into it and handle all logs dynamically?\n\nThe listener could get following parameters:\n\nfunction contentAccessListener(accessDesc, jscontext, object, property, stack)\n{\n}\n\nHonza", "time": "2011-08-31T06:44:04Z", "attachment_id": null, "creation_time": "2011-08-31T06:44:04Z", "raw_text": "In order to prepare a plan for Firebug transition to e10s we want to utilize a logging-feature introduced in bug 666713 (Dynamic analysis of chrome->content operations in Firefox) and identify all places in Firebug where chrome touches the content. \n\nAs expected, I am getting huge log file. Only starting Firefox and reloading the home page produces: 4MB, 60K+ lines\n\nI would like to redirect the logging into Firebug Tracing Console that we also use to see all logs coming from Firebug itself (often the only way how to debug a debugger).\n\nWould it be possible to expose a simple XPCOM (service) that Firebug could access in JS, register a listener into it and handle all logs dynamically?\n\nThe listener could get following parameters:\n\nfunction contentAccessListener(accessDesc, jscontext, object, property, stack)\n{\n}\n\nHonza", "creator": "odvarko@gmail.com", "author": "odvarko@gmail.com"}, {"creation_time": "2011-08-31T15:37:26Z", "raw_text": "We could, but I suspect that the logs aren't really going to be useful in the Firebug case. I think that's just going to involve straight-up engineering so that code which touches content is run in the correct process.", "time": "2011-08-31T15:37:26Z", "attachment_id": null, "text": "We could, but I suspect that the logs aren't really going to be useful in the Firebug case. I think that's just going to involve straight-up engineering so that code which touches content is run in the correct process.", "id": 5690896, "is_private": false, "count": 1, "tags": [], "bug_id": 683434, "author": "benjamin@smedbergs.us", "creator": "benjamin@smedbergs.us"}, {"author": "odvarko@gmail.com", "creator": "odvarko@gmail.com", "raw_text": "(In reply to Benjamin Smedberg  [:bsmedberg] from comment #1)\n> We could, but I suspect that the logs aren't really going to be useful in\n> the Firebug case. I think that's just going to involve straight-up\n> engineering so that code which touches content is run in the correct process.\nYes, but before we start refactoring of Firebug architecture it would be great to have an overview which could help us to prepare a better plan.\n\nFor example, we could adapt entire Firebug panel by panel and start with the simpler ones.\n\nHonza", "creation_time": "2011-08-31T15:50:53Z", "time": "2011-08-31T15:50:53Z", "attachment_id": null, "text": "(In reply to Benjamin Smedberg  [:bsmedberg] from comment #1)\n> We could, but I suspect that the logs aren't really going to be useful in\n> the Firebug case. I think that's just going to involve straight-up\n> engineering so that code which touches content is run in the correct process.\nYes, but before we start refactoring of Firebug architecture it would be great to have an overview which could help us to prepare a better plan.\n\nFor example, we could adapt entire Firebug panel by panel and start with the simpler ones.\n\nHonza", "id": 5690949, "count": 2, "is_private": false, "tags": [], "bug_id": 683434}]}}, "comments": {}}