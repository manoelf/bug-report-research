{"bugs": {"667260": {"comments": [{"time": "2011-06-26T03:16:33Z", "creation_time": "2011-06-26T03:16:33Z", "creator": "mrmazda@earthlink.net", "author": "mrmazda@earthlink.net", "id": 5556571, "count": 0, "is_private": false, "text": "Created attachment 541982\n96 DPI WinXP screenshot of multiple browsers rendering page that uses mozmm sizing\n\nI have several web pages designed to display an image one inch wide for purpose of determining how much DTE pixel density deviates from device pixel density. These were useful until the fixed ratio of 16px per 12pt was implemented via bug 537890. That bug provided a Gecko-specific workaround for those wishing to maintain the ability to produce accurate physical sizes on a display device according to the device's pixel density, as long as the DTE was able to match that density, in the form of the mozmm unit. I rewrote some of those pages to make use of the mozmm unit, and they work as expected opened in most old non-Gecko browsers and in all tested Gecko browsers running on Linux. On Windows XP, post-537890 Geckos don't have any mozmm meaning I'm able to relate to anything. Gecko ignores the desktop's DPI setting, and displays mozmm according apparently to some formula related to device size in px without regard to the device's physical size, as follows:\n\nScreen Width\tReported DPI\n800\t\t64\n1024\t\t81\n1152\t\t91\n1280\t\t102\n1400\t\t111\n1600\t\t127\n1792\t\t142\n1856\t\t147\n1920\t\t152\n2048\t163\n\nPages making use of mozmm include:\nhttp://fm.no-ip.com/Auth/Font/fonts-comps-droid.html\nhttp://fm.no-ip.com/Auth/Font/fonts-ptdemo.html\nhttp://fm.no-ip.com/Auth/dpi-screen-window.html\nhttp://fm.no-ip.com/Auth/dpi-screen-sample.html\n\nand more. They all work as expected on Linux DTEs whether or not locked to 96. The screenshot shows post-537890 Geckos (rv2b13 & rv5 shown, rv7a1 tested but not shown) can't get expected results from mozmm on Windows desktops even when set to 96 DPI. They should, even when not set to 96. If I'm misunderstanding something about mozmm and it's Linux that gets it wrong rather than Windows, then versions for Linux should be fixed. In any event, mozmm should produce results that only depend on physics, not on choice of OS software.", "bug_id": 667260, "tags": [], "attachment_id": 541982, "raw_text": "I have several web pages designed to display an image one inch wide for purpose of determining how much DTE pixel density deviates from device pixel density. These were useful until the fixed ratio of 16px per 12pt was implemented via bug 537890. That bug provided a Gecko-specific workaround for those wishing to maintain the ability to produce accurate physical sizes on a display device according to the device's pixel density, as long as the DTE was able to match that density, in the form of the mozmm unit. I rewrote some of those pages to make use of the mozmm unit, and they work as expected opened in most old non-Gecko browsers and in all tested Gecko browsers running on Linux. On Windows XP, post-537890 Geckos don't have any mozmm meaning I'm able to relate to anything. Gecko ignores the desktop's DPI setting, and displays mozmm according apparently to some formula related to device size in px without regard to the device's physical size, as follows:\n\nScreen Width\tReported DPI\n800\t\t64\n1024\t\t81\n1152\t\t91\n1280\t\t102\n1400\t\t111\n1600\t\t127\n1792\t\t142\n1856\t\t147\n1920\t\t152\n2048\t163\n\nPages making use of mozmm include:\nhttp://fm.no-ip.com/Auth/Font/fonts-comps-droid.html\nhttp://fm.no-ip.com/Auth/Font/fonts-ptdemo.html\nhttp://fm.no-ip.com/Auth/dpi-screen-window.html\nhttp://fm.no-ip.com/Auth/dpi-screen-sample.html\n\nand more. They all work as expected on Linux DTEs whether or not locked to 96. The screenshot shows post-537890 Geckos (rv2b13 & rv5 shown, rv7a1 tested but not shown) can't get expected results from mozmm on Windows desktops even when set to 96 DPI. They should, even when not set to 96. If I'm misunderstanding something about mozmm and it's Linux that gets it wrong rather than Windows, then versions for Linux should be fixed. In any event, mozmm should produce results that only depend on physics, not on choice of OS software."}, {"count": 1, "id": 5557841, "is_private": false, "author": "roc@ocallahan.org", "creation_time": "2011-06-27T02:52:20Z", "time": "2011-06-27T02:52:20Z", "creator": "roc@ocallahan.org", "raw_text": "We calculate the DPI as the screen height in pixels divided by the screen height in inches, so assuming you're not changing monitor size there, I would indeed expect the DPI to increase as you switch to higher resolutions.", "attachment_id": null, "bug_id": 667260, "text": "We calculate the DPI as the screen height in pixels divided by the screen height in inches, so assuming you're not changing monitor size there, I would indeed expect the DPI to increase as you switch to higher resolutions.", "tags": []}, {"tags": [], "text": "(In reply to comment #1)\n> We calculate the DPI as the screen height in pixels divided by the screen\n> height in inches,\n\n1-Why?\n2-Why differently from on Linux (which gets it from the DTE IIUC) & (AFAICT) WebKit, Opera & IE?\n3-Where, if at all, is it used internally?\n\n> so assuming you're not changing monitor size there, I\n> would indeed expect the DPI to increase as you switch to higher resolutions.\n\nOf course, but the table in comment 0 is a subset (columns 5 & 7) of the following actual observations:\n                                  DPI   DPI  DPI Native\n\"Size\" AspectX mm Y mm X px Y px WgeckoActualDTE  Res\n  15    4:3   305  229  800  600    64  66.6  96      LCD\n  15    4:3   305  229 1024  768    81  85.2  96   Y  LCD\n  18    4:3   366  274 1152  864    91  80.1  96      CRT\n  18    4:3   366  274 1152  864    91  80.1 120      CRT\n  20    4:3   406  305 1152  864    91    72  96      CRT\n  18    4:3   366  274 1280  960   102    89  96      CRT\n  17    5:4   337  270 1280 1024   102  96.3  96   Y  LCD\n  14    4:3   284  213 1400 1050   111 125.2  96   Y  LCD\n  18    4:3   366  274 1400 1050   111  97.3  96      CRT\n  18    4:3   366  274 1400 1050   111  97.3  96      CRT\n  20    4:3   406  305 1400 1050   111  87.4 120      CRT\n  32    16:9  406  305 1920 1080   152  89.9  96   Y  LCD\n  18    4:3   366  274 1600 1200   127 111.2  96   Y  CRT\n  20    4:3   406  305 1600 1200   127  99.9  96   Y  LCD\n  20    4:3   406  305 1600 1200   127  99.9  96   Y  CRT\n  20    4:3   406  305 1792 1344   142 111.9  96      CRT\n  20    4:3   406  305 1856 1392   147 115.9  96      CRT\n  18    4:3   366  274 1920 1440   152 133.5  96      CRT\n  18    4:3   366  274 1920 1440   152 133.5 120      CRT\n  18    4:3   366  305 2048 1536   163 127.9  96      CRT\n  20    4:3   406  305 2048 1536   163 127.9  96      CRT\n\nWhere does \"screen height in inches\" come from on Windows?", "bug_id": 667260, "attachment_id": null, "raw_text": "(In reply to comment #1)\n> We calculate the DPI as the screen height in pixels divided by the screen\n> height in inches,\n\n1-Why?\n2-Why differently from on Linux (which gets it from the DTE IIUC) & (AFAICT) WebKit, Opera & IE?\n3-Where, if at all, is it used internally?\n\n> so assuming you're not changing monitor size there, I\n> would indeed expect the DPI to increase as you switch to higher resolutions.\n\nOf course, but the table in comment 0 is a subset (columns 5 & 7) of the following actual observations:\n                                  DPI   DPI  DPI Native\n\"Size\" AspectX mm Y mm X px Y px WgeckoActualDTE  Res\n  15    4:3   305  229  800  600    64  66.6  96      LCD\n  15    4:3   305  229 1024  768    81  85.2  96   Y  LCD\n  18    4:3   366  274 1152  864    91  80.1  96      CRT\n  18    4:3   366  274 1152  864    91  80.1 120      CRT\n  20    4:3   406  305 1152  864    91    72  96      CRT\n  18    4:3   366  274 1280  960   102    89  96      CRT\n  17    5:4   337  270 1280 1024   102  96.3  96   Y  LCD\n  14    4:3   284  213 1400 1050   111 125.2  96   Y  LCD\n  18    4:3   366  274 1400 1050   111  97.3  96      CRT\n  18    4:3   366  274 1400 1050   111  97.3  96      CRT\n  20    4:3   406  305 1400 1050   111  87.4 120      CRT\n  32    16:9  406  305 1920 1080   152  89.9  96   Y  LCD\n  18    4:3   366  274 1600 1200   127 111.2  96   Y  CRT\n  20    4:3   406  305 1600 1200   127  99.9  96   Y  LCD\n  20    4:3   406  305 1600 1200   127  99.9  96   Y  CRT\n  20    4:3   406  305 1792 1344   142 111.9  96      CRT\n  20    4:3   406  305 1856 1392   147 115.9  96      CRT\n  18    4:3   366  274 1920 1440   152 133.5  96      CRT\n  18    4:3   366  274 1920 1440   152 133.5 120      CRT\n  18    4:3   366  305 2048 1536   163 127.9  96      CRT\n  20    4:3   406  305 2048 1536   163 127.9  96      CRT\n\nWhere does \"screen height in inches\" come from on Windows?", "creator": "mrmazda@earthlink.net", "time": "2011-06-27T05:15:26Z", "creation_time": "2011-06-27T05:15:26Z", "author": "mrmazda@earthlink.net", "is_private": false, "id": 5558018, "count": 2}, {"author": "roc@ocallahan.org", "creation_time": "2011-06-27T05:22:53Z", "time": "2011-06-27T05:22:53Z", "creator": "roc@ocallahan.org", "count": 3, "id": 5558028, "is_private": false, "text": "(In reply to comment #2)\n> (In reply to comment #1)\n> > We calculate the DPI as the screen height in pixels divided by the screen\n> > height in inches,\n> \n> 1-Why?\n\nBecause it's simple to do and it makes sense.\n\n> 2-Why differently from on Linux (which gets it from the DTE IIUC) & (AFAICT)\n> WebKit, Opera & IE?\n\nHow would you test it in Webkit, Opera and IE?\n\nWe calculate it very much the same way on Linux:\n    double heightInches = DisplayHeightMM(dpy, defaultScreen)/MM_PER_INCH_FLOAT;\n    ...\n    return float(DisplayHeight(dpy, defaultScreen)/heightInches);\nMaybe X calculates DisplayHeightMM in a very different way than Windows does. That's beyond our control.\n\n> 3-Where, if at all, is it used internally?\n\nOnly for mozmm AFAIK.\n\n> Where does \"screen height in inches\" come from on Windows?\n\nI don't know.", "bug_id": 667260, "tags": [], "raw_text": "(In reply to comment #2)\n> (In reply to comment #1)\n> > We calculate the DPI as the screen height in pixels divided by the screen\n> > height in inches,\n> \n> 1-Why?\n\nBecause it's simple to do and it makes sense.\n\n> 2-Why differently from on Linux (which gets it from the DTE IIUC) & (AFAICT)\n> WebKit, Opera & IE?\n\nHow would you test it in Webkit, Opera and IE?\n\nWe calculate it very much the same way on Linux:\n    double heightInches = DisplayHeightMM(dpy, defaultScreen)/MM_PER_INCH_FLOAT;\n    ...\n    return float(DisplayHeight(dpy, defaultScreen)/heightInches);\nMaybe X calculates DisplayHeightMM in a very different way than Windows does. That's beyond our control.\n\n> 3-Where, if at all, is it used internally?\n\nOnly for mozmm AFAIK.\n\n> Where does \"screen height in inches\" come from on Windows?\n\nI don't know.", "attachment_id": null}, {"attachment_id": null, "raw_text": "This is the code we use on Windows:\n\n  HDC dc = ::GetDC(mWnd);\n  ...\n  double heightInches = ::GetDeviceCaps(dc, VERTSIZE)/MM_PER_INCH_FLOAT;\n  int heightPx = ::GetDeviceCaps(dc, VERTRES);\n  ...\n  return float(heightPx/heightInches);\n\nPretty straightforward.", "text": "This is the code we use on Windows:\n\n  HDC dc = ::GetDC(mWnd);\n  ...\n  double heightInches = ::GetDeviceCaps(dc, VERTSIZE)/MM_PER_INCH_FLOAT;\n  int heightPx = ::GetDeviceCaps(dc, VERTRES);\n  ...\n  return float(heightPx/heightInches);\n\nPretty straightforward.", "bug_id": 667260, "tags": [], "count": 4, "id": 5558032, "is_private": false, "creation_time": "2011-06-27T05:23:56Z", "time": "2011-06-27T05:23:56Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org"}, {"author": "mrmazda@earthlink.net", "creator": "mrmazda@earthlink.net", "creation_time": "2011-06-27T06:51:02Z", "time": "2011-06-27T06:51:02Z", "is_private": false, "id": 5558117, "count": 5, "tags": [], "text": "(In reply to comments #3 & #4)\n...\n> Because it's simple to do and it makes sense.\n\nIf both pixel height and screen height in inches are not bogus...\n \n> We calculate it very much the same way on Linux:\n>     double heightInches = DisplayHeightMM(dpy,\n> defaultScreen)/MM_PER_INCH_FLOAT;\n>     ...\n>     return float(DisplayHeight(dpy, defaultScreen)/heightInches);\n> Maybe X calculates DisplayHeightMM in a very different way than Windows\n> does. That's beyond our control.\n... \n> Pretty straightforward.\n\nSeems like it should be, but maybe there's another label for what you need to query for on Windows so as not to be using an arbitrary value for screen height in inches (or mm)? Maybe Windows thinks an app isn't supposed to be able to know such a thing, and provides junk instead of nothing? Maybe it knows DPI and can provide a correct result if given the right query?\n\nhttp://home.browsercam.com/public.aspx?proj_id=555757 indicates Mac doesn't have this problem either.\n\nCould this be related to why bug 69205 was not fixed before browser.display.screen_resolution was replaced by layout.css.dpi?", "bug_id": 667260, "raw_text": "(In reply to comments #3 & #4)\n...\n> Because it's simple to do and it makes sense.\n\nIf both pixel height and screen height in inches are not bogus...\n \n> We calculate it very much the same way on Linux:\n>     double heightInches = DisplayHeightMM(dpy,\n> defaultScreen)/MM_PER_INCH_FLOAT;\n>     ...\n>     return float(DisplayHeight(dpy, defaultScreen)/heightInches);\n> Maybe X calculates DisplayHeightMM in a very different way than Windows\n> does. That's beyond our control.\n... \n> Pretty straightforward.\n\nSeems like it should be, but maybe there's another label for what you need to query for on Windows so as not to be using an arbitrary value for screen height in inches (or mm)? Maybe Windows thinks an app isn't supposed to be able to know such a thing, and provides junk instead of nothing? Maybe it knows DPI and can provide a correct result if given the right query?\n\nhttp://home.browsercam.com/public.aspx?proj_id=555757 indicates Mac doesn't have this problem either.\n\nCould this be related to why bug 69205 was not fixed before browser.display.screen_resolution was replaced by layout.css.dpi?", "attachment_id": null}, {"attachment_id": 551780, "raw_text": "", "bug_id": 667260, "text": "Created attachment 551780\nprovide URI-without-ref and test for existance of a ref", "tags": [], "id": 5642323, "count": 6, "is_private": false, "time": "2011-08-09T15:44:30Z", "creation_time": "2011-08-09T15:44:30Z", "creator": "rjesup@jesup.org", "author": "rjesup@jesup.org"}, {"raw_text": "Sorry, wrong bug", "attachment_id": 551780, "tags": [], "bug_id": 667260, "text": "Comment on attachment 551780\nprovide URI-without-ref and test for existance of a ref\n\nSorry, wrong bug", "id": 5642338, "count": 7, "is_private": false, "author": "rjesup@jesup.org", "time": "2011-08-09T15:47:48Z", "creation_time": "2011-08-09T15:47:48Z", "creator": "rjesup@jesup.org"}, {"is_private": false, "id": 6242631, "count": 8, "creator": "mrmazda@earthlink.net", "time": "2012-04-21T00:13:17Z", "creation_time": "2012-04-21T00:13:17Z", "author": "mrmazda@earthlink.net", "attachment_id": 617151, "raw_text": "", "tags": [], "bug_id": 667260, "text": "Created attachment 617151\ntestcase to substitute for URL used in screenshot 541982 & comment 0 URLs"}, {"is_private": false, "count": 9, "id": 8990611, "creator": "mrmazda@earthlink.net", "time": "2014-06-28T18:52:46Z", "creation_time": "2014-06-28T18:52:46Z", "author": "mrmazda@earthlink.net", "attachment_id": 8447674, "raw_text": "Summary of selected about:config settings not apparent in viewport content:\n\t\t\t\t\trv1.9.x\trv17\trv28\trv30\nlayout.css.devPixelsPerPx\t\t1.0\t1.0\t1.0\t1.0\nlayout.css.dpi\t\t\t\t0\t0\t0\t0\n\nNote that only rv1.9.x renders everything in the viewport and in the UI sized the way it ought to be.", "tags": [], "bug_id": 667260, "text": "Created attachment 8447674\nscreenshot: current state of affairs on 144 DPI WinXP\n\nSummary of selected about:config settings not apparent in viewport content:\n\t\t\t\t\trv1.9.x\trv17\trv28\trv30\nlayout.css.devPixelsPerPx\t\t1.0\t1.0\t1.0\t1.0\nlayout.css.dpi\t\t\t\t0\t0\t0\t0\n\nNote that only rv1.9.x renders everything in the viewport and in the UI sized the way it ought to be."}, {"attachment_id": 8447675, "is_private": false, "id": 8990612, "count": 10, "raw_text": "In contrast to WinXP, except for trivial rounding error in the ancient KHTML browser, everything on the Linux desktop is as expected in both the viewports and the UI.", "creator": "mrmazda@earthlink.net", "creation_time": "2014-06-28T18:52:56Z", "time": "2014-06-28T18:52:56Z", "author": "mrmazda@earthlink.net", "bug_id": 667260, "text": "Created attachment 8447675\nscreenshot: current state of affairs on 144 DPI Linux/KDE\n\nIn contrast to WinXP, except for trivial rounding error in the ancient KHTML browser, everything on the Linux desktop is as expected in both the viewports and the UI.", "tags": []}]}}, "comments": {}}