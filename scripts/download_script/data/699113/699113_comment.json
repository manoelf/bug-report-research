{"bugs": {"699113": {"comments": [{"raw_text": "Both their implementation falls back to |spec|.  Followup to bug 525468.", "attachment_id": null, "id": 5821036, "is_private": false, "creator": "honzab.moz@firemni.cz", "text": "Both their implementation falls back to |spec|.  Followup to bug 525468.", "time": "2011-11-02T16:30:22Z", "tags": [], "creation_time": "2011-11-02T16:30:22Z", "author": "honzab.moz@firemni.cz", "count": 0, "bug_id": 699113}, {"id": 6036352, "attachment_id": 594598, "raw_text": "", "author": "andrew.quartey@gmail.com", "creation_time": "2012-02-05T22:53:11Z", "time": "2012-02-05T22:53:11Z", "tags": [], "text": "Created attachment 594598\npatch v1", "creator": "andrew.quartey@gmail.com", "is_private": false, "bug_id": 699113, "count": 1}, {"attachment_id": null, "raw_text": "How was this tested?  Is %-escaping non-ASCII hostnames in a jar: URI really what we want?  Will it do the right thing if the resulting string is then passed to newURI?\n\nSomeone familiar with the icon URI impl should probably review that change...", "id": 6037557, "is_private": false, "creator": "bzbarsky@mit.edu", "count": 2, "creation_time": "2012-02-06T17:18:46Z", "author": "bzbarsky@mit.edu", "text": "How was this tested?  Is %-escaping non-ASCII hostnames in a jar: URI really what we want?  Will it do the right thing if the resulting string is then passed to newURI?\n\nSomeone familiar with the icon URI impl should probably review that change...", "time": "2012-02-06T17:18:46Z", "tags": [], "bug_id": 699113}, {"raw_text": "r- pending answers to my questions....", "attachment_id": 594598, "id": 6092295, "count": 3, "creator": "bzbarsky@mit.edu", "is_private": false, "time": "2012-02-25T04:08:08Z", "bug_id": 699113, "tags": [], "text": "Comment on attachment 594598\npatch v1\n\nr- pending answers to my questions....", "author": "bzbarsky@mit.edu", "creation_time": "2012-02-25T04:08:08Z"}, {"count": 4, "is_private": false, "creator": "andrew.quartey@gmail.com", "text": "Created attachment 602409\nPatch v2\n\nSorry for the late response. I added tests albeit in a different way from what you asked.", "tags": [], "time": "2012-03-02T18:49:31Z", "bug_id": 699113, "creation_time": "2012-03-02T18:49:31Z", "author": "andrew.quartey@gmail.com", "raw_text": "Sorry for the late response. I added tests albeit in a different way from what you asked.", "attachment_id": 602409, "id": 6109996}, {"count": 5, "is_private": false, "creator": "bzbarsky@mit.edu", "text": "That test doesn't address my concern.  %-escaping is obviously fine for the file path.  My question was about the hostname.  You need to test a jar:http://some-idn-hostname/!/ URI for that.", "bug_id": 699113, "time": "2012-03-02T20:15:06Z", "tags": [], "creation_time": "2012-03-02T20:15:06Z", "author": "bzbarsky@mit.edu", "raw_text": "That test doesn't address my concern.  %-escaping is obviously fine for the file path.  My question was about the hostname.  You need to test a jar:http://some-idn-hostname/!/ URI for that.", "attachment_id": null, "id": 6110390}, {"id": 6123170, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #5)\n>  You need to test a jar:http://some-idn-hostname/!/ URI for that.\n\nDoes this have to be a valid URI?", "attachment_id": null, "tags": [], "time": "2012-03-08T01:10:50Z", "bug_id": 699113, "text": "(In reply to Boris Zbarsky (:bz) from comment #5)\n>  You need to test a jar:http://some-idn-hostname/!/ URI for that.\n\nDoes this have to be a valid URI?", "author": "andrew.quartey@gmail.com", "creation_time": "2012-03-08T01:10:50Z", "count": 6, "creator": "andrew.quartey@gmail.com", "is_private": false}, {"count": 7, "is_private": false, "creator": "bzbarsky@mit.edu", "text": "It needs to be valid in the sense of syntactically correct.  It doesn't need a corresponding DNS entry, if that's what you were asking.", "time": "2012-03-08T02:55:41Z", "tags": [], "bug_id": 699113, "creation_time": "2012-03-08T02:55:41Z", "author": "bzbarsky@mit.edu", "raw_text": "It needs to be valid in the sense of syntactically correct.  It doesn't need a corresponding DNS entry, if that's what you were asking.", "attachment_id": null, "id": 6123361}, {"raw_text": "Changes to nsJARURI test.", "attachment_id": 604496, "id": 6128499, "count": 8, "is_private": false, "creator": "andrew.quartey@gmail.com", "text": "Created attachment 604496\nPatch v3\n\nChanges to nsJARURI test.", "bug_id": 699113, "tags": [], "time": "2012-03-09T20:48:27Z", "creation_time": "2012-03-09T20:48:27Z", "author": "andrew.quartey@gmail.com"}, {"raw_text": "That test isn't testing what I want it to test.  It needs to:\n\n1)  Use non-ASCII in the hostname part of the jar: URI.\n2)  Verify that creating a URI from the resulting string gives a URI does the right thing.", "attachment_id": null, "id": 6128598, "count": 9, "is_private": false, "creator": "bzbarsky@mit.edu", "text": "That test isn't testing what I want it to test.  It needs to:\n\n1)  Use non-ASCII in the hostname part of the jar: URI.\n2)  Verify that creating a URI from the resulting string gives a URI does the right thing.", "tags": [], "time": "2012-03-09T21:26:53Z", "bug_id": 699113, "creation_time": "2012-03-09T21:26:53Z", "author": "bzbarsky@mit.edu"}, {"bug_id": 699113, "count": 10, "author": "andrew.quartey@gmail.com", "creation_time": "2012-03-14T00:11:50Z", "tags": [], "time": "2012-03-14T00:11:50Z", "text": "This patch doesn't work in its present form. I will have to rework the patch and resubmit it. You were right about the %-escaping in jar:uri. If we have a non-ASCII hostname and create a new URI from that, it fails with the test that it should equal the original via equals().", "creator": "andrew.quartey@gmail.com", "is_private": false, "id": 6137738, "attachment_id": null, "raw_text": "This patch doesn't work in its present form. I will have to rework the patch and resubmit it. You were right about the %-escaping in jar:uri. If we have a non-ASCII hostname and create a new URI from that, it fails with the test that it should equal the original via equals()."}, {"text": "Comment on attachment 604496\nPatch v3\n\nPer comment 10...", "tags": [], "bug_id": 699113, "time": "2012-03-14T12:06:08Z", "creation_time": "2012-03-14T12:06:08Z", "author": "bzbarsky@mit.edu", "count": 11, "is_private": false, "creator": "bzbarsky@mit.edu", "id": 6138673, "raw_text": "Per comment 10...", "attachment_id": 604496}, {"creator": "andrew.quartey@gmail.com", "is_private": false, "count": 12, "author": "andrew.quartey@gmail.com", "creation_time": "2012-03-15T04:20:35Z", "bug_id": 699113, "time": "2012-03-15T04:20:35Z", "tags": [], "text": "Created attachment 606107\nPatch v4\n\nDeferred to using the asciispecs of the JARFile and IconURL to reconstruct the spec for both nsJARURI and nsMozIconURI respectively.", "attachment_id": 606107, "raw_text": "Deferred to using the asciispecs of the JARFile and IconURL to reconstruct the spec for both nsJARURI and nsMozIconURI respectively.", "id": 6141749}, {"creator": "bzbarsky@mit.edu", "is_private": false, "count": 13, "author": "bzbarsky@mit.edu", "creation_time": "2012-03-16T03:42:47Z", "time": "2012-03-16T03:42:47Z", "tags": [], "bug_id": 699113, "text": "Comment on attachment 606107\nPatch v4\n\nFor the icon URI, don't we need to %-escape mFileName?  That's assuming mStockIcon is always ASCII.\n\nFor the jar URI, we need to %-escape jarEntry....", "attachment_id": 606107, "raw_text": "For the icon URI, don't we need to %-escape mFileName?  That's assuming mStockIcon is always ASCII.\n\nFor the jar URI, we need to %-escape jarEntry....", "id": 6145210}, {"attachment_id": 606906, "raw_text": "> For the jar URI, we need to %-escape jarEntry....\n\nJAREntry is already %-escaped when non-ASCII. http://mxr.mozilla.org/mozilla-central/source/modules/libjar/nsIJARURI.idl\n\n> For the icon URI, don't we need to %-escape mFileName?  That's assuming\n> mStockIcon is always ASCII.\n\nI %-escaped both the stockIcon and filename in their initialization and then un-%-escaped them in GetSpec. This was to ensure the value of, say mFileName, assigned in GetSpec was the complete 'reversal' of the one that will be assigned in GetAsciiSpec. The alternative of just %-escaping them in GetAsciiSpec lead to test failures as the lengths & content of the assigned values of the mStockIcon and mFileName in GetSpec appeared arbitrary (after a new uri is created from uri.asciiSpec). Debugging efforts couldn't pin down the reason why. This only happened when dealing with non-ASCII stock and file name icon uris.", "id": 6149150, "creator": "andrew.quartey@gmail.com", "is_private": false, "author": "andrew.quartey@gmail.com", "creation_time": "2012-03-17T22:11:26Z", "tags": [], "time": "2012-03-17T22:11:26Z", "text": "Created attachment 606906\nPatch v5\n\n> For the jar URI, we need to %-escape jarEntry....\n\nJAREntry is already %-escaped when non-ASCII. http://mxr.mozilla.org/mozilla-central/source/modules/libjar/nsIJARURI.idl\n\n> For the icon URI, don't we need to %-escape mFileName?  That's assuming\n> mStockIcon is always ASCII.\n\nI %-escaped both the stockIcon and filename in their initialization and then un-%-escaped them in GetSpec. This was to ensure the value of, say mFileName, assigned in GetSpec was the complete 'reversal' of the one that will be assigned in GetAsciiSpec. The alternative of just %-escaping them in GetAsciiSpec lead to test failures as the lengths & content of the assigned values of the mStockIcon and mFileName in GetSpec appeared arbitrary (after a new uri is created from uri.asciiSpec). Debugging efforts couldn't pin down the reason why. This only happened when dealing with non-ASCII stock and file name icon uris.", "count": 14, "bug_id": 699113}, {"id": 6155566, "attachment_id": null, "raw_text": "> JAREntry is already %-escaped when non-ASCII.\n\nThe comment you linked to just says that it _may_ contain %-escapes, not that it must.\n\nI see nothing in the JAR code that would do such %-escaping for non-ASCII; have you actually tested this?\n\nAs far as the icon uri changes, you really need to get someone familiar with icon URIs to review them, if you're going to change the stored representation.  In particular, if you %-escape things and then %-unescape them you can get a different string than you started with, if the original string already contained %-escapes....", "creation_time": "2012-03-20T16:48:34Z", "author": "bzbarsky@mit.edu", "text": "> JAREntry is already %-escaped when non-ASCII.\n\nThe comment you linked to just says that it _may_ contain %-escapes, not that it must.\n\nI see nothing in the JAR code that would do such %-escaping for non-ASCII; have you actually tested this?\n\nAs far as the icon uri changes, you really need to get someone familiar with icon URIs to review them, if you're going to change the stored representation.  In particular, if you %-escape things and then %-unescape them you can get a different string than you started with, if the original string already contained %-escapes....", "time": "2012-03-20T16:48:34Z", "bug_id": 699113, "tags": [], "is_private": false, "creator": "bzbarsky@mit.edu", "count": 15}, {"text": "\n> I see nothing in the JAR code that would do such %-escaping for non-ASCII;\n> have you actually tested this?\n\nI have tested it. The %-escaping isn't done within the JAR code. Rather it's in nsStandardURL.The call chain when creating a JARURI:\nSetJAREntry->CreateEntryURL->Init->SetSpec->BuildNormalizedSpec. \nhttp://mxr.mozilla.org/mozilla-central/source/netwerk/base/src/nsStandardURL.cpp#549\n\nThe JAREntry is then set when the resulting nsIStandardURL is QI'd and assigned. \nhttp://mxr.mozilla.org/mozilla-central/source/modules/libjar/nsJARURI.cpp#138", "time": "2012-03-22T19:26:15Z", "tags": [], "bug_id": 699113, "creation_time": "2012-03-22T19:26:15Z", "author": "andrew.quartey@gmail.com", "count": 16, "is_private": false, "creator": "andrew.quartey@gmail.com", "id": 6163355, "raw_text": "\n> I see nothing in the JAR code that would do such %-escaping for non-ASCII;\n> have you actually tested this?\n\nI have tested it. The %-escaping isn't done within the JAR code. Rather it's in nsStandardURL.The call chain when creating a JARURI:\nSetJAREntry->CreateEntryURL->Init->SetSpec->BuildNormalizedSpec. \nhttp://mxr.mozilla.org/mozilla-central/source/netwerk/base/src/nsStandardURL.cpp#549\n\nThe JAREntry is then set when the resulting nsIStandardURL is QI'd and assigned. \nhttp://mxr.mozilla.org/mozilla-central/source/modules/libjar/nsJARURI.cpp#138", "attachment_id": null}, {"bug_id": 699113, "count": 17, "id": 6163379, "attachment_id": null, "raw_text": "Johnny Stenback, see comment 15.", "creation_time": "2012-03-22T19:35:05Z", "author": "andrew.quartey@gmail.com", "text": "Johnny Stenback, see comment 15.", "time": "2012-03-22T19:35:05Z", "tags": [], "is_private": false, "creator": "andrew.quartey@gmail.com"}, {"count": 18, "creator": "bzbarsky@mit.edu", "is_private": false, "tags": [], "bug_id": 699113, "time": "2012-03-22T19:58:27Z", "text": "> SetJAREntry->CreateEntryURL->Init->SetSpec->BuildNormalizedSpec. \n\nWhether this escapes UTF-8 chars is pref-controlled, and the pref is set to false in at least some locales.", "author": "bzbarsky@mit.edu", "creation_time": "2012-03-22T19:58:27Z", "raw_text": "> SetJAREntry->CreateEntryURL->Init->SetSpec->BuildNormalizedSpec. \n\nWhether this escapes UTF-8 chars is pref-controlled, and the pref is set to false in at least some locales.", "attachment_id": null, "id": 6163441}, {"tags": [], "bug_id": 699113, "time": "2012-04-11T16:47:40Z", "text": "Comment on attachment 606906\nPatch v5\n\nClearing review request as this already got r- from Boris.", "author": "jstenback+bmo@gmail.com", "creation_time": "2012-04-11T16:47:40Z", "count": 19, "creator": "jstenback+bmo@gmail.com", "is_private": false, "id": 6214215, "raw_text": "Clearing review request as this already got r- from Boris.", "attachment_id": 606906}, {"id": 12659190, "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "attachment_id": null, "time": "2017-09-13T18:42:02Z", "tags": [], "bug_id": 699113, "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "author": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2017-09-13T18:42:02Z", "count": 20, "creator": "bug-husbandry-bot@mozilla.bugs", "is_private": false}]}}, "comments": {}}