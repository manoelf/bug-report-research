{"bugs": {"314280": {"comments": [{"id": 2681511, "count": 0, "text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.12) Gecko/20050920 Firefox/1.0.7\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.12) Gecko/20050920 Firefox/1.0.7\n\nWhen trying to access any property or anything else under the HTMLDocument (contentDocument) in an iframe with javascript, javascript breaks with:\n\nError: uncaught exception: Permission denied to get property HTMLDocument.title\n(using 'title' as an example).\n \nHowever the same property is crearly shown in the DOM Inspector under \"Tools\" >> \"DOM Inspector\" from the menu. \nBelow detailed information to easily reproduce the bug.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Create an empty html document and use the information below to create a sample page:\n\n<html>\n<head>\n<title>test</title>\n</head>\n<body>\n<iframe id=\"testF\" src=\"http://www.mozilla.org\" width=\"100%\" height=\"300\"></iframe>\n<script type=\"text/javascript\">\nfunction test() {\nvar page =  document.getElementById(\"testF\");\n\n//working:\nalert(page.nodeName);\n\n//working:\nalert(page.contentDocument);\n\n//broken; even though it shows up in the DOM inspector!\n//everything past page.contentDocument is broken!\n//it does not matter what you use; here 'title' is shown as an example\nalert(page.contentDocument.title);\n\n}\n\n//delayed function to give the iframe a chance to load\nsetTimeout(\"test()\", 2000);\n</script>\n</body>\n</html>\n\n2. Load the page into the browser.\n\n3. You will see the error if you open the Javascript Console. (Wait for the javascript alerts to be displayed.\n\n4. From the Firefox menu, go to \"Tools\" >> \"DOM Inspector\"\n\n5. In the DOM Inspector, switch to \"Javascript Object\" (small icon to the right of \"Document - DOM Nodes;\" \"Document - DOM Nodes\" should say \"Document - Javascript Object\" now.\n\n6. Expand \"target\". Now look for \"body\" and expand. Underneath \"body,\" look for \"childNodes\" and expand. Expand \"1\" under \"childNodes;\" this paticular childNode will have a value of \"[object HTMLIFrameElement]\". Expand \"contentDocument\" inside such childNode to find that \"title\" shows up with no problems. Javascript will break for any property past the \"contentDocument\", no matter which one you use, using the DOM Inspector as a reference.\n\nActual Results:  \nYou will see the error:\nError: uncaught exception: Permission denied to get property HTMLDocument.title\nin the Javascript Console. And javascript breaks.\n\nExpected Results:  \nThe software should have acted as expected per the DOM Inspector and have displayed the resquested property.\n\nThis error is mentioned many times if you search in a mayor search engine for \"Error: uncaught exception: Permission denied to get property HTMLDocument\"\nHowever I could not find another complete example that could be duplicated easily.\nOther similar DOM areas in javascript many cause the javascript parser to break too.", "author": "hector@w3develop.com", "bug_id": 314280, "tags": [], "attachment_id": null, "creator": "hector@w3develop.com", "raw_text": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.12) Gecko/20050920 Firefox/1.0.7\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.12) Gecko/20050920 Firefox/1.0.7\n\nWhen trying to access any property or anything else under the HTMLDocument (contentDocument) in an iframe with javascript, javascript breaks with:\n\nError: uncaught exception: Permission denied to get property HTMLDocument.title\n(using 'title' as an example).\n \nHowever the same property is crearly shown in the DOM Inspector under \"Tools\" >> \"DOM Inspector\" from the menu. \nBelow detailed information to easily reproduce the bug.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Create an empty html document and use the information below to create a sample page:\n\n<html>\n<head>\n<title>test</title>\n</head>\n<body>\n<iframe id=\"testF\" src=\"http://www.mozilla.org\" width=\"100%\" height=\"300\"></iframe>\n<script type=\"text/javascript\">\nfunction test() {\nvar page =  document.getElementById(\"testF\");\n\n//working:\nalert(page.nodeName);\n\n//working:\nalert(page.contentDocument);\n\n//broken; even though it shows up in the DOM inspector!\n//everything past page.contentDocument is broken!\n//it does not matter what you use; here 'title' is shown as an example\nalert(page.contentDocument.title);\n\n}\n\n//delayed function to give the iframe a chance to load\nsetTimeout(\"test()\", 2000);\n</script>\n</body>\n</html>\n\n2. Load the page into the browser.\n\n3. You will see the error if you open the Javascript Console. (Wait for the javascript alerts to be displayed.\n\n4. From the Firefox menu, go to \"Tools\" >> \"DOM Inspector\"\n\n5. In the DOM Inspector, switch to \"Javascript Object\" (small icon to the right of \"Document - DOM Nodes;\" \"Document - DOM Nodes\" should say \"Document - Javascript Object\" now.\n\n6. Expand \"target\". Now look for \"body\" and expand. Underneath \"body,\" look for \"childNodes\" and expand. Expand \"1\" under \"childNodes;\" this paticular childNode will have a value of \"[object HTMLIFrameElement]\". Expand \"contentDocument\" inside such childNode to find that \"title\" shows up with no problems. Javascript will break for any property past the \"contentDocument\", no matter which one you use, using the DOM Inspector as a reference.\n\nActual Results:  \nYou will see the error:\nError: uncaught exception: Permission denied to get property HTMLDocument.title\nin the Javascript Console. And javascript breaks.\n\nExpected Results:  \nThe software should have acted as expected per the DOM Inspector and have displayed the resquested property.\n\nThis error is mentioned many times if you search in a mayor search engine for \"Error: uncaught exception: Permission denied to get property HTMLDocument\"\nHowever I could not find another complete example that could be duplicated easily.\nOther similar DOM areas in javascript many cause the javascript parser to break too.", "time": "2005-10-29T02:40:22Z", "creation_time": "2005-10-29T02:40:22Z", "is_private": false}, {"creator": "sync2d@gmail.com", "attachment_id": null, "raw_text": "> var page =  document.getElementById(\"testF\");\n> //working:\n> alert(page.nodeName);\n\nYou can access the |nodeName| property because\nthe DOM node |page| belongs to the current domain.\n\n> //working:\n> alert(page.contentDocument);\n\nAlthough the |contentDocument| property refers to the document of the different\ndomain, you can access it because |page| belongs to the current domain\nand document objects are treated specially (to allow document.open()).\n\n> //broken; even though it shows up in the DOM inspector!\n> //everything past page.contentDocument is broken!\n> //it does not matter what you use; here 'title' is shown as an example\n> alert(page.contentDocument.title);\n\nBecause |contentDocument| is the document of the different domain,\nFirefox's security feature denies to get/set its |title| property.\n\nThis behavior is by design. This bug should be resolved as INVALID.", "id": 2681536, "creation_time": "2005-10-29T03:39:24Z", "time": "2005-10-29T03:39:24Z", "count": 1, "text": "> var page =  document.getElementById(\"testF\");\n> //working:\n> alert(page.nodeName);\n\nYou can access the |nodeName| property because\nthe DOM node |page| belongs to the current domain.\n\n> //working:\n> alert(page.contentDocument);\n\nAlthough the |contentDocument| property refers to the document of the different\ndomain, you can access it because |page| belongs to the current domain\nand document objects are treated specially (to allow document.open()).\n\n> //broken; even though it shows up in the DOM inspector!\n> //everything past page.contentDocument is broken!\n> //it does not matter what you use; here 'title' is shown as an example\n> alert(page.contentDocument.title);\n\nBecause |contentDocument| is the document of the different domain,\nFirefox's security feature denies to get/set its |title| property.\n\nThis behavior is by design. This bug should be resolved as INVALID.", "author": "sync2d@gmail.com", "bug_id": 314280, "is_private": false, "tags": []}, {"creator": "jruderman@gmail.com", "attachment_id": null, "raw_text": "Shutdown is correct.  See http://www.mozilla.org/projects/security/components/same-origin.html.\n\nDOM Inspector is chrome, so it is allowed to see properties of elements in all domains.", "creation_time": "2005-10-29T10:09:36Z", "time": "2005-10-29T10:09:36Z", "is_private": false, "id": 2681664, "count": 2, "text": "Shutdown is correct.  See http://www.mozilla.org/projects/security/components/same-origin.html.\n\nDOM Inspector is chrome, so it is allowed to see properties of elements in all domains.", "author": "jruderman@gmail.com", "bug_id": 314280, "tags": []}]}}, "comments": {}}