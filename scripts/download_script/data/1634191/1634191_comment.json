{"comments": {}, "bugs": {"1634191": {"comments": [{"tags": [], "author": "lina@yakshaving.ninja", "attachment_id": null, "text": "Now that we've vendored `webext_storage` and have a shiny XPCOM component for our new Rust extension storage area, let's make it implement `mozIBridgedSyncEngine`, and wire up its methods to call into the `BridgedSyncEngine` on the Rust side. This depends on getting Mark's [sync infrastructure patch](https://github.com/mozilla/application-services/pull/2892) landed on the a-s side, and bumping our vendored version to pick up those changes.\n\nWhile we're here, we can also add a JS Sync engine for the new Rust extension storage.", "creation_time": "2020-04-29T22:25:25Z", "creator": "lina@yakshaving.ninja", "id": 14787325, "bug_id": 1634191, "count": 0, "is_private": false, "time": "2020-04-29T22:25:25Z", "raw_text": "Now that we've vendored `webext_storage` and have a shiny XPCOM component for our new Rust extension storage area, let's make it implement `mozIBridgedSyncEngine`, and wire up its methods to call into the `BridgedSyncEngine` on the Rust side. This depends on getting Mark's [sync infrastructure patch](https://github.com/mozilla/application-services/pull/2892) landed on the a-s side, and bumping our vendored version to pick up those changes.\n\nWhile we're here, we can also add a JS Sync engine for the new Rust extension storage."}, {"text": "We'll need to vendor https://github.com/mozilla/application-services/pull/3064 as part of this.", "time": "2020-05-01T05:32:15Z", "creation_time": "2020-05-01T05:32:15Z", "raw_text": "We'll need to vendor https://github.com/mozilla/application-services/pull/3064 as part of this.", "is_private": false, "count": 1, "bug_id": 1634191, "id": 14790557, "attachment_id": null, "creator": "lina@yakshaving.ninja", "tags": [], "author": "lina@yakshaving.ninja"}, {"is_private": false, "raw_text": "\nThis commit adds syncing support to the `StorageSyncArea` class, via\nthe Golden Gate library.", "time": "2020-05-01T05:33:08Z", "creation_time": "2020-05-01T05:33:08Z", "text": "Created attachment 9144955\nBug 1634191 - Wire up Golden Gate to the new Rust extension storage interface. r?markh!\n\n\nThis commit adds syncing support to the `StorageSyncArea` class, via\nthe Golden Gate library.", "count": 2, "id": 14790558, "bug_id": 1634191, "author": "lina@yakshaving.ninja", "tags": [], "creator": "lina@yakshaving.ninja", "attachment_id": 9144955}, {"count": 3, "is_private": false, "raw_text": "I haven't done the JS side of this yet (adding a `class ExtensionStorageEngine extends BridgedEngine`), and it's going to need some changes to the JS code so that we can pass `modified` and `deleted` through on the JSON records\u2014but I wanted to get the Rust side up for review! I'll finish off the JS tomorrow, and maybe by then we'll have landed https://github.com/mozilla/application-services/pull/2892 and https://github.com/mozilla/application-services/pull/3064, and we can vendor everything in one go and have a full syncing implementation working! \ud83c\udf89\n\nWe could even do the JS side later, if we want...but then we'd have to make another intermediate bug blocking 1634615. \ud83d\ude01", "text": "I haven't done the JS side of this yet (adding a `class ExtensionStorageEngine extends BridgedEngine`), and it's going to need some changes to the JS code so that we can pass `modified` and `deleted` through on the JSON records\u2014but I wanted to get the Rust side up for review! I'll finish off the JS tomorrow, and maybe by then we'll have landed https://github.com/mozilla/application-services/pull/2892 and https://github.com/mozilla/application-services/pull/3064, and we can vendor everything in one go and have a full syncing implementation working! \ud83c\udf89\n\nWe could even do the JS side later, if we want...but then we'd have to make another intermediate bug blocking 1634615. \ud83d\ude01", "time": "2020-05-01T05:36:06Z", "creation_time": "2020-05-01T05:36:06Z", "author": "lina@yakshaving.ninja", "tags": [], "creator": "lina@yakshaving.ninja", "attachment_id": null, "id": 14790560, "bug_id": 1634191}, {"author": "lina@yakshaving.ninja", "tags": [], "creator": "lina@yakshaving.ninja", "attachment_id": 9145329, "id": 14793400, "bug_id": 1634191, "count": 4, "is_private": false, "raw_text": "\nThis commit splits `CryptoWrapper` into a base `RawCryptoWrapper`\nclass, which only handles encryption and decryption without\nparsing the cleartext's contents, and the existing `CryptoWrapper`\nclass, which works like before.\n\nOur bridged engine subclasses `RawCryptoWrapper`, and\nimplements some methods to convert records to and from envelopes.\nEnvelopes are a concept we introduced in `sync15_traits` to pass\nalong metadata from the BSO wrapper (like the modified time from the\nserver, and ID, to ensure they match) in addition to the cleartext.\nThis lets us reuse `sync15_traits::Payload` to parse record payloads\nin Rust, and avoids parsing the cleartext in JS, only to stringify it\nagain when we pass it to the bridged Rust engine.", "creation_time": "2020-05-03T22:07:47Z", "text": "Created attachment 9145329\nBug 1634191 - Pass BSO fields along with Sync record payloads to bridged Rust engines. r?markh!\n\n\nThis commit splits `CryptoWrapper` into a base `RawCryptoWrapper`\nclass, which only handles encryption and decryption without\nparsing the cleartext's contents, and the existing `CryptoWrapper`\nclass, which works like before.\n\nOur bridged engine subclasses `RawCryptoWrapper`, and\nimplements some methods to convert records to and from envelopes.\nEnvelopes are a concept we introduced in `sync15_traits` to pass\nalong metadata from the BSO wrapper (like the modified time from the\nserver, and ID, to ensure they match) in addition to the cleartext.\nThis lets us reuse `sync15_traits::Payload` to parse record payloads\nin Rust, and avoids parsing the cleartext in JS, only to stringify it\nagain when we pass it to the bridged Rust engine.", "time": "2020-05-03T22:07:47Z"}, {"count": 5, "raw_text": "> adding a `class ExtensionStorageEngine extends BridgedEngine`)\n\nI still haven't done this...\n\n> and it's going to need some changes to the JS code so that we can pass `modified` and `deleted` through on the JSON records.\n\nBut I did that. The a-s side is in https://github.com/mozilla/application-services/pull/3067. It's a little complicated (of course! \ud83d\ude02\ud83d\ude2d) because I wanted to reuse the existing `Payload` type in `sync15_traits` for the cleartext, and pass the metadata fields in a wrapper in a more generic way.", "creation_time": "2020-05-03T22:12:55Z", "text": "> adding a `class ExtensionStorageEngine extends BridgedEngine`)\n\nI still haven't done this...\n\n> and it's going to need some changes to the JS code so that we can pass `modified` and `deleted` through on the JSON records.\n\nBut I did that. The a-s side is in https://github.com/mozilla/application-services/pull/3067. It's a little complicated (of course! \ud83d\ude02\ud83d\ude2d) because I wanted to reuse the existing `Payload` type in `sync15_traits` for the cleartext, and pass the metadata fields in a wrapper in a more generic way.", "time": "2020-05-03T22:12:55Z", "is_private": false, "creator": "lina@yakshaving.ninja", "attachment_id": null, "author": "lina@yakshaving.ninja", "tags": [], "bug_id": 1634191, "id": 14793401}, {"is_private": false, "time": "2020-05-04T22:27:02Z", "text": "Try for part 1: https://treeherder.mozilla.org/#/jobs?repo=try&revision=a5514e1f99d8ad97b77731a34ab8cbb0b278ca55", "creation_time": "2020-05-04T22:27:02Z", "raw_text": "Try for part 1: https://treeherder.mozilla.org/#/jobs?repo=try&revision=a5514e1f99d8ad97b77731a34ab8cbb0b278ca55", "count": 6, "id": 14796767, "bug_id": 1634191, "tags": [], "author": "lina@yakshaving.ninja", "attachment_id": null, "creator": "lina@yakshaving.ninja"}, {"time": "2020-05-04T22:27:16Z", "creation_time": "2020-05-04T22:27:16Z", "text": "Pushed by kcambridge@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/427d247d7c2f\nPass BSO fields along with Sync record payloads to bridged Rust engines. r=markh", "raw_text": "Pushed by kcambridge@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/427d247d7c2f\nPass BSO fields along with Sync record payloads to bridged Rust engines. r=markh", "is_private": false, "count": 7, "bug_id": 1634191, "id": 14796770, "attachment_id": null, "creator": "pulsebot@bots.tld", "tags": [], "author": "pulsebot@bots.tld"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/427d247d7c2f", "creation_time": "2020-05-05T03:54:57Z", "author": "ccoroiu@mozilla.com", "tags": ["bugherder"], "attachment_id": null, "is_private": false, "raw_text": "https://hg.mozilla.org/mozilla-central/rev/427d247d7c2f", "time": "2020-05-05T03:54:57Z", "count": 8, "id": 14797057, "bug_id": 1634191, "creator": "ccoroiu@mozilla.com"}, {"time": "2020-05-05T07:01:39Z", "raw_text": "Pushed by kcambridge@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/aec4fe84eabf\nWire up Golden Gate to the new Rust extension storage interface. r=markh", "is_private": false, "count": 9, "bug_id": 1634191, "id": 14797218, "creator": "pulsebot@bots.tld", "text": "Pushed by kcambridge@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/aec4fe84eabf\nWire up Golden Gate to the new Rust extension storage interface. r=markh", "creation_time": "2020-05-05T07:01:39Z", "attachment_id": null, "tags": [], "author": "pulsebot@bots.tld"}, {"count": 10, "creation_time": "2020-05-05T15:36:31Z", "text": "https://hg.mozilla.org/mozilla-central/rev/aec4fe84eabf", "time": "2020-05-05T15:36:31Z", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/aec4fe84eabf", "is_private": false, "attachment_id": null, "creator": "apavel@mozilla.com", "tags": ["bugherder"], "author": "apavel@mozilla.com", "bug_id": 1634191, "id": 14798052}]}}}