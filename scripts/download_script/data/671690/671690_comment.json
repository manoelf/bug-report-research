{"comments": {}, "bugs": {"671690": {"comments": [{"count": 0, "is_private": false, "tags": [], "id": 5592527, "bug_id": 671690, "creation_time": "2011-07-14T23:05:28Z", "raw_text": "User Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.18) Gecko/20110614 Firefox/3.6.18\nBuild ID: 20110614230723\n\nSteps to reproduce:\n\nTry to use window dimension properties to obtain the location and size of the\nbrowser window relative to the entire computer screen.  This is via javascript:\n\nvar x = window.screenX;\nvar y = window.screenY;\nvar w = window.outerWidth;\nvar y = window.outerHeight;\n\n\n\nActual results:\n\nIf the browser zoom level is anything but 100%, the dimension sizes returned\nare wrong wrt to the absolute screen coordinates. \n\nThis happens in FF 3.6 and FF 5.0.\n\n\nExpected results:\n\nReal pixel values should have been returned based on the computer screen itself.  Instead, the \"logical\" values were provided, so the numbers do not reflect the real browser coordinates.\n\nThe MDN documents for the listed methods clearly imply they should return\ncomputer screen-based pixel coordinates and NOT the logical ones based\non the current zoom level.\n\nThe bugzilla comment: https://bugzilla.mozilla.org/show_bug.cgi?id=486200#c31\nmentions that mozScreenPixelsPerCSSPixel was explicitly not exposed to the\nwindow object, but I think the reasons are weak.  IE makes it possible to\ndetermine the zoom level so it can be applied to the window dimension values to\nget the real browser geometry (IE also returns skewed dimensions but I can\ncompensate based on the known zoom factore).  For FF 3.6, this appears to be\nimpossible and for FF 5, very ugly to do based on what I found on the Net.\n\nThere are legitimate reasons for getting the real geometry.  Also, assuming the\nlogic in the cited comment above, then window.screen[XY] and\nwindow.outer{Width,Height} should not be made available since they do not\nreliably (if any zoom is in effect) provide the values that the caller expects.\n\nI've attached a simple page that provides a link, that when activated, shows the (x,y,w,h) values of the browser based on the aforementioned window properties.\nTo see how they differ, clink on the link with different browser zoom settings to\nsee how the number differ each time.", "text": "Created attachment 546033\nHTML page to show browser geometry\n\nUser Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.18) Gecko/20110614 Firefox/3.6.18\nBuild ID: 20110614230723\n\nSteps to reproduce:\n\nTry to use window dimension properties to obtain the location and size of the\nbrowser window relative to the entire computer screen.  This is via javascript:\n\nvar x = window.screenX;\nvar y = window.screenY;\nvar w = window.outerWidth;\nvar y = window.outerHeight;\n\n\n\nActual results:\n\nIf the browser zoom level is anything but 100%, the dimension sizes returned\nare wrong wrt to the absolute screen coordinates. \n\nThis happens in FF 3.6 and FF 5.0.\n\n\nExpected results:\n\nReal pixel values should have been returned based on the computer screen itself.  Instead, the \"logical\" values were provided, so the numbers do not reflect the real browser coordinates.\n\nThe MDN documents for the listed methods clearly imply they should return\ncomputer screen-based pixel coordinates and NOT the logical ones based\non the current zoom level.\n\nThe bugzilla comment: https://bugzilla.mozilla.org/show_bug.cgi?id=486200#c31\nmentions that mozScreenPixelsPerCSSPixel was explicitly not exposed to the\nwindow object, but I think the reasons are weak.  IE makes it possible to\ndetermine the zoom level so it can be applied to the window dimension values to\nget the real browser geometry (IE also returns skewed dimensions but I can\ncompensate based on the known zoom factore).  For FF 3.6, this appears to be\nimpossible and for FF 5, very ugly to do based on what I found on the Net.\n\nThere are legitimate reasons for getting the real geometry.  Also, assuming the\nlogic in the cited comment above, then window.screen[XY] and\nwindow.outer{Width,Height} should not be made available since they do not\nreliably (if any zoom is in effect) provide the values that the caller expects.\n\nI've attached a simple page that provides a link, that when activated, shows the (x,y,w,h) values of the browser based on the aforementioned window properties.\nTo see how they differ, clink on the link with different browser zoom settings to\nsee how the number differ each time.", "time": "2011-07-14T23:05:28Z", "attachment_id": 546033, "creator": "earl@earlhood.com", "author": "earl@earlhood.com"}, {"author": "oliver@g7.org", "creator": "oliver@g7.org", "raw_text": "Two examples of why knowing browser's true screen position is useful:\n- I have an application that cooperatively positions itself alongside the browser window.  The browser indicates its own position via a script tag request on a local web server run by the application.\n- I have  a web site that will zoom images to 1:1 for best clarity, where space is available (normally they are shown much smaller, in a mosaic).  The correct zoom cannot be calculated without knowing the zoom level of the browser.", "creation_time": "2011-07-31T22:31:56Z", "time": "2011-07-31T22:31:56Z", "attachment_id": null, "text": "Two examples of why knowing browser's true screen position is useful:\n- I have an application that cooperatively positions itself alongside the browser window.  The browser indicates its own position via a script tag request on a local web server run by the application.\n- I have  a web site that will zoom images to 1:1 for best clarity, where space is available (normally they are shown much smaller, in a mosaic).  The correct zoom cannot be calculated without knowing the zoom level of the browser.", "id": 5624489, "count": 1, "is_private": false, "tags": [], "bug_id": 671690}, {"bug_id": 671690, "count": 2, "is_private": false, "tags": [], "id": 5953392, "text": "roc, what do you think of the second use case in comment 1?\n\nOliver, note that \"1:1\" is a fuzzy concept.  Would you want to do that in print too (as in, have one image pixel take up a single dot in the 1200dpi printout)?", "attachment_id": null, "time": "2012-01-04T08:05:07Z", "raw_text": "roc, what do you think of the second use case in comment 1?\n\nOliver, note that \"1:1\" is a fuzzy concept.  Would you want to do that in print too (as in, have one image pixel take up a single dot in the 1200dpi printout)?", "creation_time": "2012-01-04T08:05:07Z", "creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu"}, {"author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "id": 5953506, "tags": [], "is_private": false, "count": 3, "bug_id": 671690, "creation_time": "2012-01-04T09:56:27Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #2)\n> roc, what do you think of the second use case in comment 1?\n> \n> Oliver, note that \"1:1\" is a fuzzy concept.  Would you want to do that in\n> print too (as in, have one image pixel take up a single dot in the 1200dpi\n> printout)?\n\nYeah, that's what I think about it too :-).", "attachment_id": null, "time": "2012-01-04T09:56:27Z", "text": "(In reply to Boris Zbarsky (:bz) from comment #2)\n> roc, what do you think of the second use case in comment 1?\n> \n> Oliver, note that \"1:1\" is a fuzzy concept.  Would you want to do that in\n> print too (as in, have one image pixel take up a single dot in the 1200dpi\n> printout)?\n\nYeah, that's what I think about it too :-)."}, {"creator": "bug-husbandry-bot@mozilla.bugs", "author": "bug-husbandry-bot@mozilla.bugs", "raw_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "creation_time": "2018-06-29T04:48:53Z", "text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1472046\n\nMove all DOM bugs that haven\u2019t been updated in more than 3 years and has no one currently assigned to P5.\n\nIf you have questions, please contact :mdaly.", "attachment_id": null, "time": "2018-06-29T04:48:53Z", "tags": [], "is_private": false, "count": 4, "id": 13435986, "bug_id": 671690}]}}}