{"comments": {}, "bugs": {"653928": {"comments": [{"tags": [], "creator": "dr.o.hoffmann@gmx.de", "count": 0, "bug_id": 653928, "creation_time": "2011-04-30T16:19:45Z", "text": "User-Agent:       Mozilla/5.0 (X11; Linux i686; rv:6.0a1) Gecko/20110430 Firefox/6.0a1\nBuild Identifier: Mozilla/5.0 (X11; Linux i686; rv:6.0a1) Gecko/20110430 Firefox/6.0a1\n\nIf flags in elliptical arc commands change, Gecko switches from continuous to\ndiscrete animation for path d attribute.\n\nSVG 1.1 notes clearly about the d attribute:\n\"Animatable: yes. Path data animation is only possible when each path data specification within an animation specification has exactly the same list of path data commands as the 'd' attribute.\"\nhttp://www.w3.org/TR/SVG11/paths.html#PathElement\n\nThis is obviously the case for the samples.\nHow to manage the flags, if they are neither 0 or 1 (what appears typically, if between 0 and 1 is \ninterpolated), is explained in the implementation notes:\nhttp://www.w3.org/TR/SVG11/implnote.html#ArcOutOfRangeParameters\n\n\"Any nonzero value for either of the flags fA or fS is taken to mean the value 1.\"\n\nThis results finally in some discrete switch effect between zero and non zero,\nbut not for the complete path, only for the elliptical arc segment the flag\nchanges. And it is not related to calcMode, because this appears only due to\nthe specific interpretation of the flags. This is similar to the effect of\nanimating for example stroke-miterlimit - the animation can be continuous, nevertheless the effect from switching between miter and bevel will be discrete.\n\n\nAbout the provided example:\nanimate animation test of the d attribute of the path-element\n(represented by a blue curve). \nThe curve changes from the dark gray curve to the light gray curve in 10s.\nThe yellow and orange circles belong to the initial\ncurve and the cyan and cyan-green circles belong to the final curve.\nd contains the commands M, A, a corresponding to elliptical arcs.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Try the given sample\n2. Compare with recommendations (citation is included above)\n3. Compare with current versions of Opera\n\nActual Results:  \ndiscrete Animation for the complete path\n\nAdditionally in the alpha version given as build identifier above, at least one\nelliptical arc seems to be degenerated to a cubic curve, this seems to be a\nregression compared to firefox 4 for example - but this seems to be another\nbug related to an attempt to approximate elliptical arcs with cubic curves, that fails here, anyway even with this bug the animation remains discrete.\n\nExpected Results:  \nContinuous animation including a switch/jump in presentation related to a change\nbetween nonzero to zero for flags.\n\nAnd of course elliptical arcs, no cubic curves here ;o)\n\nAnimation of elliptical arcs seems to be difficult for many viewers, however \nafter some attempts at least Opera manages this for some time now.", "id": 5441335, "raw_text": "User-Agent:       Mozilla/5.0 (X11; Linux i686; rv:6.0a1) Gecko/20110430 Firefox/6.0a1\nBuild Identifier: Mozilla/5.0 (X11; Linux i686; rv:6.0a1) Gecko/20110430 Firefox/6.0a1\n\nIf flags in elliptical arc commands change, Gecko switches from continuous to\ndiscrete animation for path d attribute.\n\nSVG 1.1 notes clearly about the d attribute:\n\"Animatable: yes. Path data animation is only possible when each path data specification within an animation specification has exactly the same list of path data commands as the 'd' attribute.\"\nhttp://www.w3.org/TR/SVG11/paths.html#PathElement\n\nThis is obviously the case for the samples.\nHow to manage the flags, if they are neither 0 or 1 (what appears typically, if between 0 and 1 is \ninterpolated), is explained in the implementation notes:\nhttp://www.w3.org/TR/SVG11/implnote.html#ArcOutOfRangeParameters\n\n\"Any nonzero value for either of the flags fA or fS is taken to mean the value 1.\"\n\nThis results finally in some discrete switch effect between zero and non zero,\nbut not for the complete path, only for the elliptical arc segment the flag\nchanges. And it is not related to calcMode, because this appears only due to\nthe specific interpretation of the flags. This is similar to the effect of\nanimating for example stroke-miterlimit - the animation can be continuous, nevertheless the effect from switching between miter and bevel will be discrete.\n\n\nAbout the provided example:\nanimate animation test of the d attribute of the path-element\n(represented by a blue curve). \nThe curve changes from the dark gray curve to the light gray curve in 10s.\nThe yellow and orange circles belong to the initial\ncurve and the cyan and cyan-green circles belong to the final curve.\nd contains the commands M, A, a corresponding to elliptical arcs.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Try the given sample\n2. Compare with recommendations (citation is included above)\n3. Compare with current versions of Opera\n\nActual Results:  \ndiscrete Animation for the complete path\n\nAdditionally in the alpha version given as build identifier above, at least one\nelliptical arc seems to be degenerated to a cubic curve, this seems to be a\nregression compared to firefox 4 for example - but this seems to be another\nbug related to an attempt to approximate elliptical arcs with cubic curves, that fails here, anyway even with this bug the animation remains discrete.\n\nExpected Results:  \nContinuous animation including a switch/jump in presentation related to a change\nbetween nonzero to zero for flags.\n\nAnd of course elliptical arcs, no cubic curves here ;o)\n\nAnimation of elliptical arcs seems to be difficult for many viewers, however \nafter some attempts at least Opera manages this for some time now.", "author": "dr.o.hoffmann@gmx.de", "time": "2011-04-30T16:19:45Z", "is_private": false, "attachment_id": null}, {"author": "dholbert@mozilla.com", "raw_text": "(In reply to comment #0)\n> SVG 1.1 notes clearly about the d attribute:\n> \"Animatable: yes. Path data animation is only possible when each path data\n> specification within an animation specification has exactly the same list of\n> path data commands as the 'd' attribute.\"\n\nThe spec says (paraphrasing the last chunk):\n \"Path data animation is only possible when [the commands are the same]\"\n\nIt sounds like you're interpreting that to mean:\n \"Path data animation is *always* possible when [the commands are the same]\"\n\n...but I don't agree with your interpretation.  (It's a logically different statement.)\n\nRather, I read the spec as saying \"animation isn't possible when the commands differ\", with no blanket statement about what happens when the commands are the same.", "id": 5441350, "text": "(In reply to comment #0)\n> SVG 1.1 notes clearly about the d attribute:\n> \"Animatable: yes. Path data animation is only possible when each path data\n> specification within an animation specification has exactly the same list of\n> path data commands as the 'd' attribute.\"\n\nThe spec says (paraphrasing the last chunk):\n \"Path data animation is only possible when [the commands are the same]\"\n\nIt sounds like you're interpreting that to mean:\n \"Path data animation is *always* possible when [the commands are the same]\"\n\n...but I don't agree with your interpretation.  (It's a logically different statement.)\n\nRather, I read the spec as saying \"animation isn't possible when the commands differ\", with no blanket statement about what happens when the commands are the same.", "creation_time": "2011-04-30T16:43:41Z", "bug_id": 653928, "tags": [], "creator": "dholbert@mozilla.com", "count": 1, "attachment_id": null, "is_private": false, "time": "2011-04-30T16:43:41Z"}, {"attachment_id": null, "time": "2011-04-30T17:00:03Z", "is_private": false, "author": "dr.o.hoffmann@gmx.de", "tags": [], "count": 2, "creator": "dr.o.hoffmann@gmx.de", "bug_id": 653928, "id": 5441357, "raw_text": "What happens depends mainly on the calcMode.\nIf the attribute is not explictly provided by the author, indeed the viewer\nhas to find out, if discrete or linear applies (for animateMotion paced).\nFor some situations, for example for polygon or polyline with points lists of\ndifferent length, the calcMode becomes discrete, because there is no \ncontinuous animation possible.\nFor the path d attribute one can interpolate between the numbers, therefore\ncalcMode linear is the default, resulting in a continuous animation.\nOnly the flag switch between non zero and zero implicates some discrete behaviour,\nbut this is not much related to the calculation of the animation effect function,\nonly to the presentation.\n\n\nAnd note, that SVG tiny 1.2 already allows different commands as animation\nvalues, in this case this means discrete animation (In SVG 1.1 this means an\nerror message). But here the commands are the same, only the numbers are different.\n\nAnd that it is possible, you can see with current Opera versions - no question,\nthat it is possible to interpolate between 0 and 1, whatever this means for\nthe rendering (what is defined as well in the implementation notes).\n\nAnother question is, whether the correct effect will be, what some authors may\nexpect, but I think, they will expect a discrete animation even less ;o)", "creation_time": "2011-04-30T17:00:03Z", "text": "What happens depends mainly on the calcMode.\nIf the attribute is not explictly provided by the author, indeed the viewer\nhas to find out, if discrete or linear applies (for animateMotion paced).\nFor some situations, for example for polygon or polyline with points lists of\ndifferent length, the calcMode becomes discrete, because there is no \ncontinuous animation possible.\nFor the path d attribute one can interpolate between the numbers, therefore\ncalcMode linear is the default, resulting in a continuous animation.\nOnly the flag switch between non zero and zero implicates some discrete behaviour,\nbut this is not much related to the calculation of the animation effect function,\nonly to the presentation.\n\n\nAnd note, that SVG tiny 1.2 already allows different commands as animation\nvalues, in this case this means discrete animation (In SVG 1.1 this means an\nerror message). But here the commands are the same, only the numbers are different.\n\nAnd that it is possible, you can see with current Opera versions - no question,\nthat it is possible to interpolate between 0 and 1, whatever this means for\nthe rendering (what is defined as well in the implementation notes).\n\nAnother question is, whether the correct effect will be, what some authors may\nexpect, but I think, they will expect a discrete animation even less ;o)"}, {"is_private": false, "creation_time": "2011-04-30T17:08:00Z", "text": "(In reply to comment #2)\n> For some situations, for example for polygon or polyline with points lists of\n> different length, the calcMode becomes discrete, because there is no \n> continuous animation possible.\n\nRight, that's somewhat equivalent to what we're doing here. (We detect that we can't interpolate, so we fall back to discrete animation.)\n\n(In reply to comment #0)\n> \"Any nonzero value for either of the flags fA or fS is taken to mean the value\n> 1.\"\n\nThis^ is interesting... I'd previously assumed that these boolean flags *had* to be 0 or 1,  but I guess that's not true.\n\nSo that means that (at least in theory) we can interpolate these flags like any other path data parameter, and it will just turn out that every non-zero interpolated-value will yield the \"1\" behavior.  I suspect that's the outcome that falls most logically out of the spec.\n\nThat should simplify the code a good bit, and it'd make Dr. Hoffman's testcase here work (albeit with a sudden jump in rendering when the flag hits 0).  jwatt, heycam, what do you guys think?", "id": 5441360, "raw_text": "(In reply to comment #2)\n> For some situations, for example for polygon or polyline with points lists of\n> different length, the calcMode becomes discrete, because there is no \n> continuous animation possible.\n\nRight, that's somewhat equivalent to what we're doing here. (We detect that we can't interpolate, so we fall back to discrete animation.)\n\n(In reply to comment #0)\n> \"Any nonzero value for either of the flags fA or fS is taken to mean the value\n> 1.\"\n\nThis^ is interesting... I'd previously assumed that these boolean flags *had* to be 0 or 1,  but I guess that's not true.\n\nSo that means that (at least in theory) we can interpolate these flags like any other path data parameter, and it will just turn out that every non-zero interpolated-value will yield the \"1\" behavior.  I suspect that's the outcome that falls most logically out of the spec.\n\nThat should simplify the code a good bit, and it'd make Dr. Hoffman's testcase here work (albeit with a sudden jump in rendering when the flag hits 0).  jwatt, heycam, what do you guys think?", "creator": "dholbert@mozilla.com", "time": "2011-04-30T17:08:00Z", "tags": [], "count": 3, "bug_id": 653928, "attachment_id": null, "author": "dholbert@mozilla.com"}, {"creator": "dr.o.hoffmann@gmx.de", "tags": [], "time": "2011-04-30T17:29:51Z", "count": 4, "bug_id": 653928, "is_private": false, "creation_time": "2011-04-30T17:29:51Z", "text": "Well, just to show, that there is some minor stress itself within the\nrecommendation, the BNF notes for flags 0|1, therefore authors should not note\nanything different, but the implementation notes seem to be slightly more gentle\nwith inattentive authors or it considers situations as here with animation, \nwhere it gets possible to have other values than 0|1 for other reasons, not just\nbecause an author did something nasty - or it is simply not completely consistent here. Or because it is only mentioned in the implementation notes,\nthis is really only intended for implementation to keep things working, not for\nsomething, that authors should note within documents. \nSome intermediate result within animation is not noted by the author directly,\ntherefore the author is not guilty here not to follow the BNF\n(what would be an error in SVG 1.1 documents).", "id": 5441372, "raw_text": "Well, just to show, that there is some minor stress itself within the\nrecommendation, the BNF notes for flags 0|1, therefore authors should not note\nanything different, but the implementation notes seem to be slightly more gentle\nwith inattentive authors or it considers situations as here with animation, \nwhere it gets possible to have other values than 0|1 for other reasons, not just\nbecause an author did something nasty - or it is simply not completely consistent here. Or because it is only mentioned in the implementation notes,\nthis is really only intended for implementation to keep things working, not for\nsomething, that authors should note within documents. \nSome intermediate result within animation is not noted by the author directly,\ntherefore the author is not guilty here not to follow the BNF\n(what would be an error in SVG 1.1 documents).", "attachment_id": null, "author": "dr.o.hoffmann@gmx.de"}, {"is_private": false, "time": "2011-05-09T00:17:46Z", "attachment_id": null, "id": 5456309, "raw_text": "Yes, I think we should allow continuous animation between arc flag values.", "creation_time": "2011-05-09T00:17:46Z", "text": "Yes, I think we should allow continuous animation between arc flag values.", "count": 5, "tags": [], "creator": "cam@mcc.id.au", "bug_id": 653928, "author": "cam@mcc.id.au"}, {"is_private": false, "time": "2011-10-23T12:21:11Z", "attachment_id": 568943, "creation_time": "2011-10-23T12:21:11Z", "text": "Created attachment 568943\npatch", "id": 5799325, "raw_text": "", "creator": "longsonr@gmail.com", "tags": [], "count": 6, "bug_id": 653928, "author": "longsonr@gmail.com"}, {"author": "dholbert@mozilla.com", "attachment_id": 568943, "raw_text": ">+  // SECOND: ensure non-zero flags become 1.\n>+  if (SVGPathSegUtils::IsArcType(segType)) {\n>+    if (aResultSeg[LARGE_ARC_FLAG_IDX] != 0) {\n>+      aResultSeg[LARGE_ARC_FLAG_IDX] = 1;\n>+    }\n>+    if (aResultSeg[SWEEP_FLAG_IDX] != 0) {\n>+      aResultSeg[SWEEP_FLAG_IDX] = 1;\n\ns/0/0.0f/\ns/1/1.0f/\n\nr=me with that", "id": 5801314, "text": "Comment on attachment 568943\npatch\n\n>+  // SECOND: ensure non-zero flags become 1.\n>+  if (SVGPathSegUtils::IsArcType(segType)) {\n>+    if (aResultSeg[LARGE_ARC_FLAG_IDX] != 0) {\n>+      aResultSeg[LARGE_ARC_FLAG_IDX] = 1;\n>+    }\n>+    if (aResultSeg[SWEEP_FLAG_IDX] != 0) {\n>+      aResultSeg[SWEEP_FLAG_IDX] = 1;\n\ns/0/0.0f/\ns/1/1.0f/\n\nr=me with that", "creation_time": "2011-10-24T20:12:27Z", "is_private": false, "bug_id": 653928, "time": "2011-10-24T20:12:27Z", "creator": "dholbert@mozilla.com", "tags": [], "count": 7}, {"creation_time": "2011-10-24T20:12:49Z", "text": "(Thanks for picking this up, BTW -- I'd forgotten about this bug!)", "id": 5801315, "raw_text": "(Thanks for picking this up, BTW -- I'd forgotten about this bug!)", "count": 8, "creator": "dholbert@mozilla.com", "tags": [], "bug_id": 653928, "author": "dholbert@mozilla.com", "is_private": false, "time": "2011-10-24T20:12:49Z", "attachment_id": null}, {"raw_text": "pushed https://hg.mozilla.org/integration/mozilla-inbound/rev/12b227a42623", "id": 5802580, "text": "pushed https://hg.mozilla.org/integration/mozilla-inbound/rev/12b227a42623", "creation_time": "2011-10-25T08:20:40Z", "bug_id": 653928, "count": 9, "tags": [], "creator": "longsonr@gmail.com", "author": "longsonr@gmail.com", "is_private": false, "time": "2011-10-25T08:20:40Z", "attachment_id": null}, {"author": "mak@mozilla.com", "bug_id": 653928, "tags": [], "count": 10, "creator": "mak@mozilla.com", "raw_text": "https://hg.mozilla.org/mozilla-central/rev/12b227a42623", "id": 5802829, "text": "https://hg.mozilla.org/mozilla-central/rev/12b227a42623", "creation_time": "2011-10-25T12:05:22Z", "attachment_id": null, "time": "2011-10-25T12:05:22Z", "is_private": false}, {"bug_id": 653928, "count": 11, "tags": [], "creator": "jwatt@jwatt.org", "raw_text": "I missed this bugmail. I actually deliberately had the code not interpolate because the flipping of the flag isn't useful, IMO, and I wanted to prevent anyone coming to rely on non-useful flipping behavior when the spec could define something useful. One case when I can imagine you would want to animate from an arc with a large arc to small, is when animating a pie slice and changing its size through the 180 degrees. You would want the flat to be flipped intelligently when the pie is about to pass the 180 degree point though. Basically I wanted to wait until we worked out some spec text to describe how that should be done (I found it quite tricky so didn't do it while implementing path animation) and implement that behavior once spec'ed.", "id": 5817541, "text": "I missed this bugmail. I actually deliberately had the code not interpolate because the flipping of the flag isn't useful, IMO, and I wanted to prevent anyone coming to rely on non-useful flipping behavior when the spec could define something useful. One case when I can imagine you would want to animate from an arc with a large arc to small, is when animating a pie slice and changing its size through the 180 degrees. You would want the flat to be flipped intelligently when the pie is about to pass the 180 degree point though. Basically I wanted to wait until we worked out some spec text to describe how that should be done (I found it quite tricky so didn't do it while implementing path animation) and implement that behavior once spec'ed.", "creation_time": "2011-11-01T11:25:57Z", "author": "jwatt@jwatt.org", "time": "2011-11-01T11:25:57Z", "is_private": false, "attachment_id": null}, {"time": "2011-11-01T12:05:11Z", "is_private": false, "attachment_id": null, "bug_id": 653928, "count": 12, "tags": [], "creator": "longsonr@gmail.com", "text": "Webkit and Opera have this functionality.", "creation_time": "2011-11-01T12:05:11Z", "raw_text": "Webkit and Opera have this functionality.", "id": 5817581, "author": "longsonr@gmail.com"}, {"tags": [], "creator": "dholbert@mozilla.com", "count": 13, "bug_id": 653928, "id": 5818982, "raw_text": "Branch date is in a week, so if we end up needing to back this out, we'd need to do it by then to keep this from making it to Aurora.\n\nHaving said that, I agree with Robert that matching Webkit/Opera on this is nice, and per comment 3, I think this behavior is what the existing spec text calls for.  I also worry a little about having special-interpolation-behavior for special number values, when all other numbers are treated the same.\n\nBut I suspect this behavior isn't used / exercised thoroughly on the web, so I don't really feel strongly about this, if there really is a Better Way coming.", "creation_time": "2011-11-01T20:49:40Z", "text": "Branch date is in a week, so if we end up needing to back this out, we'd need to do it by then to keep this from making it to Aurora.\n\nHaving said that, I agree with Robert that matching Webkit/Opera on this is nice, and per comment 3, I think this behavior is what the existing spec text calls for.  I also worry a little about having special-interpolation-behavior for special number values, when all other numbers are treated the same.\n\nBut I suspect this behavior isn't used / exercised thoroughly on the web, so I don't really feel strongly about this, if there really is a Better Way coming.", "author": "dholbert@mozilla.com", "time": "2011-11-01T20:49:40Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "author": "longsonr@gmail.com", "id": 5820275, "raw_text": "Jonathan, if you still can't live with this then back it out. As a group the Peers must operate with consensus regarding patches.", "is_private": false, "creation_time": "2011-11-02T09:59:32Z", "text": "Jonathan, if you still can't live with this then back it out. As a group the Peers must operate with consensus regarding patches.", "creator": "longsonr@gmail.com", "tags": [], "count": 14, "time": "2011-11-02T09:59:32Z", "bug_id": 653928}, {"bug_id": 653928, "count": 15, "creator": "jwatt@jwatt.org", "tags": [], "text": "Well let me try again in explaining my thinking first. :)\n\nImagine you're doing some data visualization by animating the proportion that a pie chart's slices take up, and one slice has to pass through the 180 degree angle. With this patch it's impossible to do with a single SMIL animation, since you can't make the largeArc flag flip at the right point, so your chart graphic will completely screw up. Even with script or script assisted SMIL animation it's virtually impossible, because of the way arc segments are parametrized on end points (the maths is too hard for most people). To me this seems like something that should be relatively easy for authors to do though. While the new behavior may be consistent and easy on implementers, to me it seems like it's useless, and in fact is just going to immensely frustrate content authors that need to animate through 180 degrees, and lead them to waste time trying to figure out how to work around it (the vast majority of whom will have to give up).\n\nThat Webkit/Opera do what the patch makes us do is an argument against the patch, for me. If implementations are inconsistent, the SVG WG tends to be open to standardizing on the most useful behavior, even if that's something new. (The rational being that authors are less likely to be relying on any existing behavior.) If implementations are consistent, then there is a lot more reluctance to change even brain dead useless behavior. (The rational being that people may be relying on it anyway in some stupid way.)\n\nHopefully that makes sense, even if you don't agree.", "creation_time": "2011-11-02T10:44:44Z", "raw_text": "Well let me try again in explaining my thinking first. :)\n\nImagine you're doing some data visualization by animating the proportion that a pie chart's slices take up, and one slice has to pass through the 180 degree angle. With this patch it's impossible to do with a single SMIL animation, since you can't make the largeArc flag flip at the right point, so your chart graphic will completely screw up. Even with script or script assisted SMIL animation it's virtually impossible, because of the way arc segments are parametrized on end points (the maths is too hard for most people). To me this seems like something that should be relatively easy for authors to do though. While the new behavior may be consistent and easy on implementers, to me it seems like it's useless, and in fact is just going to immensely frustrate content authors that need to animate through 180 degrees, and lead them to waste time trying to figure out how to work around it (the vast majority of whom will have to give up).\n\nThat Webkit/Opera do what the patch makes us do is an argument against the patch, for me. If implementations are inconsistent, the SVG WG tends to be open to standardizing on the most useful behavior, even if that's something new. (The rational being that authors are less likely to be relying on any existing behavior.) If implementations are consistent, then there is a lot more reluctance to change even brain dead useless behavior. (The rational being that people may be relying on it anyway in some stupid way.)\n\nHopefully that makes sense, even if you don't agree.", "id": 5820322, "author": "jwatt@jwatt.org", "time": "2011-11-02T10:44:44Z", "is_private": false, "attachment_id": null}, {"author": "longsonr@gmail.com", "attachment_id": null, "text": "If you back it out I'll live, I think this is a rather an edge case feature really.\n\nIt's more difficult to see how you'd implement your idea with discrete animations.", "is_private": false, "creation_time": "2011-11-02T11:10:42Z", "raw_text": "If you back it out I'll live, I think this is a rather an edge case feature really.\n\nIt's more difficult to see how you'd implement your idea with discrete animations.", "id": 5820344, "bug_id": 653928, "time": "2011-11-02T11:10:42Z", "count": 16, "creator": "longsonr@gmail.com", "tags": []}, {"author": "dr.o.hoffmann@gmx.de", "creator": "dr.o.hoffmann@gmx.de", "count": 17, "tags": [], "bug_id": 653928, "id": 5820420, "raw_text": "I think, if authors need to animate a circle segment (pie chart), it will be much simpler to animate a circle element. (if user agents had no accuracy problems or bugs, one could simply use stroke-dasharray for a pie chart ;o).\n\nIf you animate an elliptical arc with the SVG endpoint notation, the result will be typically surprising, with and without this flag switching. Due to this and current bugs of viewers, typically authors have to approximate the arc anyway with a larger set of cubic curves to get a more smooth animation and not the typical elliptical arc drama, resulting from the endpoint notation mainly.\nHowever, apart from boring (and maybe meaningless applications like elliptical pie charts) applications, the funny behaviour of elliptical arc animation\ncan be pretty interesting for animated art works, because it is not trivial to simulate such a behaviour with cubic curves (but of course - who cares about arts today? ;o)\n\nTo get an intuitive and simple behaviour for authors, one needs a notation in polar coordinates. I provided already a proposal about this to the W3C-SVG-group, but as far as I have seen, there is no decision about this yet. And I'm not sure, if there are really enough use cases for the majority of authors, if \npie charts are the only application ;o) Obviously one could propose a new circle segment element for such specific applications like pie charts, if it turns out, that many authors need to use them in a simple way.", "creation_time": "2011-11-02T12:31:34Z", "text": "I think, if authors need to animate a circle segment (pie chart), it will be much simpler to animate a circle element. (if user agents had no accuracy problems or bugs, one could simply use stroke-dasharray for a pie chart ;o).\n\nIf you animate an elliptical arc with the SVG endpoint notation, the result will be typically surprising, with and without this flag switching. Due to this and current bugs of viewers, typically authors have to approximate the arc anyway with a larger set of cubic curves to get a more smooth animation and not the typical elliptical arc drama, resulting from the endpoint notation mainly.\nHowever, apart from boring (and maybe meaningless applications like elliptical pie charts) applications, the funny behaviour of elliptical arc animation\ncan be pretty interesting for animated art works, because it is not trivial to simulate such a behaviour with cubic curves (but of course - who cares about arts today? ;o)\n\nTo get an intuitive and simple behaviour for authors, one needs a notation in polar coordinates. I provided already a proposal about this to the W3C-SVG-group, but as far as I have seen, there is no decision about this yet. And I'm not sure, if there are really enough use cases for the majority of authors, if \npie charts are the only application ;o) Obviously one could propose a new circle segment element for such specific applications like pie charts, if it turns out, that many authors need to use them in a simple way.", "attachment_id": null, "time": "2011-11-02T12:31:34Z", "is_private": false}, {"creation_time": "2011-11-02T18:18:57Z", "is_private": false, "text": "(summing up discussion w/ jwatt in #svg just now):\nSo presumably, there's not really any \"nice\" time to flip the sweep-flag, except when the path is 0-length. (that's the clockwise-vs-counterclockwise-ish flag IIUC)\n\nBut for large-arc-flag, **if our arc is animating across a 180-degree boundary**, I can see that this would be really nice time to transition the flag for the pie-chart case. I worry a little that it'd be computationally tough to compute whether/when a 180-degree crossover will take place (particularly since we'd have to do it every sample, to recompute the world).  And also, if there's no 180-degree-crossover, there's not really any intuitive time to transition the large-arc-flag aside from what this bug already does.\n\nSo I suppose any spec clarification on this would be have to end up very special-casey, for the pie-chart example, with fallback behavior being something clunky like what this bug's patch already does.  Maybe that's OK, though, since I agree that it'd be nice for pie-charts to animate nicely. :)\n\nSo, I'm OK with backing this out, given comment 15.", "id": 5821402, "raw_text": "(summing up discussion w/ jwatt in #svg just now):\nSo presumably, there's not really any \"nice\" time to flip the sweep-flag, except when the path is 0-length. (that's the clockwise-vs-counterclockwise-ish flag IIUC)\n\nBut for large-arc-flag, **if our arc is animating across a 180-degree boundary**, I can see that this would be really nice time to transition the flag for the pie-chart case. I worry a little that it'd be computationally tough to compute whether/when a 180-degree crossover will take place (particularly since we'd have to do it every sample, to recompute the world).  And also, if there's no 180-degree-crossover, there's not really any intuitive time to transition the large-arc-flag aside from what this bug already does.\n\nSo I suppose any spec clarification on this would be have to end up very special-casey, for the pie-chart example, with fallback behavior being something clunky like what this bug's patch already does.  Maybe that's OK, though, since I agree that it'd be nice for pie-charts to animate nicely. :)\n\nSo, I'm OK with backing this out, given comment 15.", "count": 18, "creator": "dholbert@mozilla.com", "time": "2011-11-02T18:18:57Z", "tags": [], "bug_id": 653928, "attachment_id": null, "author": "dholbert@mozilla.com"}, {"author": "jwatt@jwatt.org", "id": 5821579, "raw_text": "Backed out in https://hg.mozilla.org/integration/mozilla-inbound/rev/ae79993b6eb9 to allow the SVG WG to consider this issue at some point for SVG 2.\n\nDr. Hoffmann, I'd like to see support for ellipse segments in polar coords, but as you say, it may not have enough demand.", "creation_time": "2011-11-02T19:19:34Z", "text": "Backed out in https://hg.mozilla.org/integration/mozilla-inbound/rev/ae79993b6eb9 to allow the SVG WG to consider this issue at some point for SVG 2.\n\nDr. Hoffmann, I'd like to see support for ellipse segments in polar coords, but as you say, it may not have enough demand.", "count": 19, "tags": [], "creator": "jwatt@jwatt.org", "bug_id": 653928, "attachment_id": null, "is_private": false, "time": "2011-11-02T19:19:34Z"}, {"attachment_id": null, "is_private": false, "time": "2018-09-17T20:17:09Z", "author": "boris.chiou@gmail.com", "raw_text": "https://github.com/w3c/svgwg/issues/543 has a new update for this:\n\nRESOLUTION: Flipping boolean and integers half way for path interpolation\n\nThis will be added in SVG 2, I think.", "id": 13621500, "text": "https://github.com/w3c/svgwg/issues/543 has a new update for this:\n\nRESOLUTION: Flipping boolean and integers half way for path interpolation\n\nThis will be added in SVG 2, I think.", "creation_time": "2018-09-17T20:17:09Z", "bug_id": 653928, "tags": [], "creator": "boris.chiou@gmail.com", "count": 20}]}}}