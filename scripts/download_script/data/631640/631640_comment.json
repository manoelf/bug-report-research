{"comments": {}, "bugs": {"631640": {"comments": [{"text": "We added the notion of context options for WebGL, but we can use them for 2D as well.  We have moz-opaque as an attribute, but we can also define it as a getContext option, e.g. { alpha: false }, just like WebGL.\n\nAn additional one to consider would be something like optimizeForPixelManipulation, which would optimize for getImageData/putImageData by creating an image surface instead of a d2d surface on windows.", "creator": "vladimir@pobox.com", "attachment_id": null, "id": 5256137, "author": "vladimir@pobox.com", "creation_time": "2011-02-04T20:54:22Z", "time": "2011-02-04T20:54:22Z", "tags": [], "is_private": false, "bug_id": 631640, "raw_text": "We added the notion of context options for WebGL, but we can use them for 2D as well.  We have moz-opaque as an attribute, but we can also define it as a getContext option, e.g. { alpha: false }, just like WebGL.\n\nAn additional one to consider would be something like optimizeForPixelManipulation, which would optimize for getImageData/putImageData by creating an image surface instead of a d2d surface on windows.", "count": 0}, {"count": 1, "raw_text": "This has happened. The second argument to getContext is declared in WebIDL as \"any\", but when the first argument is \"2d\", the second argument is treated by C++ as a \"dictionary ContextAttributes2D\".\n\nCurrently, the dictionary has willReadFrequently (added in bug 884226) and alpha (added in bug 982480).\n\nThe first argument is logically an enum; I don't know why it's declared as a string. The second argument is logically a \"ContextAttributes2D or WebGLContextAttributes\", but maybe it has to be \"any\" for implementation reasons.", "bug_id": 631640, "is_private": false, "tags": [], "time": "2014-06-12T05:31:42Z", "creation_time": "2014-06-12T05:31:42Z", "author": "jruderman@gmail.com", "id": 8920075, "attachment_id": null, "text": "This has happened. The second argument to getContext is declared in WebIDL as \"any\", but when the first argument is \"2d\", the second argument is treated by C++ as a \"dictionary ContextAttributes2D\".\n\nCurrently, the dictionary has willReadFrequently (added in bug 884226) and alpha (added in bug 982480).\n\nThe first argument is logically an enum; I don't know why it's declared as a string. The second argument is logically a \"ContextAttributes2D or WebGLContextAttributes\", but maybe it has to be \"any\" for implementation reasons.", "creator": "jruderman@gmail.com"}, {"count": 2, "raw_text": "What Jesse mentions has happened indeed.\n\nWhat about implementing context.getContextAttributes() to retrieve the context's attributes here?\n\ninterface Canvas2DRenderingContext {\n    ...\n    Canvas2DContextAttributes? getContextAttributes();\n}\n\nhttp://wiki.whatwg.org/wiki/CanvasOpaque\nInspired by WebGL: https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14.2\n\nImplemented and enabled in Chrome 32: https://code.google.com/p/chromium/issues/detail?id=234297\nWebKit bug: https://bugs.webkit.org/show_bug.cgi?id=112628", "bug_id": 631640, "is_private": false, "tags": [], "time": "2014-11-18T12:51:27Z", "creation_time": "2014-11-18T12:51:27Z", "author": "fs@florianscholz.com", "attachment_id": null, "id": 9604763, "text": "What Jesse mentions has happened indeed.\n\nWhat about implementing context.getContextAttributes() to retrieve the context's attributes here?\n\ninterface Canvas2DRenderingContext {\n    ...\n    Canvas2DContextAttributes? getContextAttributes();\n}\n\nhttp://wiki.whatwg.org/wiki/CanvasOpaque\nInspired by WebGL: https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14.2\n\nImplemented and enabled in Chrome 32: https://code.google.com/p/chromium/issues/detail?id=234297\nWebKit bug: https://bugs.webkit.org/show_bug.cgi?id=112628", "creator": "fs@florianscholz.com"}]}}}