{"bugs": {"706457": {"comments": [{"text": "Created attachment 577935\nmouse hover bug.mov\n\nUser Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:8.0.1) Gecko/20100101 Firefox/8.0.1\nBuild ID: 20111120135848\n\nSteps to reproduce:\n\nI was moving the mouse pointer over an area that should get highlighted using a :hover CSS selector (see attached video).\n\n\nActual results:\n\nthe underlying elements disappeared completely and when I inspected the DOM with Firebug, I could see that the element to which the :hover selector applies has been made invisible. When the mouse pointer left the area, the underlying elements did not appear again.\n\n\nExpected results:\n\nJust the normal hover behavior, when the mouse hovers an area the expected effect takes place, when the pointer leaves the area, the standard effect applies.\nNote that this problem started with Firefox 7.0 and continues through version 8.0.1.\nThis happens randomly, my gut feeling is that there is some sort of \"interference\" with other ongoing javascript events, although this is hard to reproduce.", "bug_id": 706457, "tags": [], "author": "cflav@tin.it", "creation_time": "2011-11-30T14:06:31Z", "time": "2011-11-30T14:06:31Z", "creator": "cflav@tin.it", "raw_text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:8.0.1) Gecko/20100101 Firefox/8.0.1\nBuild ID: 20111120135848\n\nSteps to reproduce:\n\nI was moving the mouse pointer over an area that should get highlighted using a :hover CSS selector (see attached video).\n\n\nActual results:\n\nthe underlying elements disappeared completely and when I inspected the DOM with Firebug, I could see that the element to which the :hover selector applies has been made invisible. When the mouse pointer left the area, the underlying elements did not appear again.\n\n\nExpected results:\n\nJust the normal hover behavior, when the mouse hovers an area the expected effect takes place, when the pointer leaves the area, the standard effect applies.\nNote that this problem started with Firefox 7.0 and continues through version 8.0.1.\nThis happens randomly, my gut feeling is that there is some sort of \"interference\" with other ongoing javascript events, although this is hard to reproduce.", "id": 5881911, "count": 0, "is_private": false, "attachment_id": 577935}, {"count": 1, "id": 5917478, "is_private": false, "time": "2011-12-14T23:58:10Z", "creation_time": "2011-12-14T23:58:10Z", "creator": "fmdevelopertim@gmail.com", "author": "fmdevelopertim@gmail.com", "attachment_id": null, "raw_text": "Falvio -> Please provide a public URL or reduced test case that exhibits this issue.", "tags": [], "text": "Falvio -> Please provide a public URL or reduced test case that exhibits this issue.", "bug_id": 706457}, {"bug_id": 706457, "text": "Tim,\nI haven't seen this happening elsewhere, so it must be caused by a combination of factors.\nThis is further complicated by the fact that it happens not so frequently, fortunately, so one could spend a whole day without incurring in the problem.\nI'll try to disable the hover CSS box shadow effect and see if it goes away, I am suspecting that this visual effect might be the culprit.\nThanks", "tags": [], "raw_text": "Tim,\nI haven't seen this happening elsewhere, so it must be caused by a combination of factors.\nThis is further complicated by the fact that it happens not so frequently, fortunately, so one could spend a whole day without incurring in the problem.\nI'll try to disable the hover CSS box shadow effect and see if it goes away, I am suspecting that this visual effect might be the culprit.\nThanks", "attachment_id": null, "author": "cflav@tin.it", "creator": "cflav@tin.it", "creation_time": "2011-12-21T11:53:41Z", "time": "2011-12-21T11:53:41Z", "is_private": false, "count": 2, "id": 5932225}, {"attachment_id": null, "raw_text": "Flavio -> Any update?", "text": "Flavio -> Any update?", "bug_id": 706457, "tags": [], "id": 5984506, "count": 3, "is_private": false, "time": "2012-01-17T06:44:16Z", "creation_time": "2012-01-17T06:44:16Z", "creator": "fmdevelopertim@gmail.com", "author": "fmdevelopertim@gmail.com"}, {"id": 5984597, "count": 4, "is_private": false, "author": "cflav@tin.it", "creation_time": "2012-01-17T08:08:39Z", "time": "2012-01-17T08:08:39Z", "creator": "cflav@tin.it", "raw_text": "I modified the application that was exhibiting the problem and the strange behavior is almost entirely gone, but I'll explain what I think was going on, then you should tell if the scenario is applicable to the case.\n\nMy actions:\n\nI click on a page element that executes a javascript snippet that does a setTimeout of a function updating something in a remote database via Ajax.\nThe user can perform various of this actions that will queue up in the event handler.\nFor some reason the update action may take longer than usual because the database is busy (even 30 seconds in the worst case).\nThe problem seems to happen when the long-running update occurs in between the mouse begins hovering above an element with a :hover pseudo-class and out of it.\nThis makes me think that Firefox is rendering elements via a series of setInterval and if for some reason the event handler cannot keep up with these intervals, it drops them, leaving certain elements in a hidden state.\nSo, with this kind of scenario in mind I tried to modify the application so that the database never stops responding in case of long updates and after this change the problem has almost completely disappeared, which makes me think that the speculative scenario depicted above is not that far from reality, even if I don't know exactly how Firefox is rendering page elements.\n\nI hope this makes sense to you.", "attachment_id": null, "text": "I modified the application that was exhibiting the problem and the strange behavior is almost entirely gone, but I'll explain what I think was going on, then you should tell if the scenario is applicable to the case.\n\nMy actions:\n\nI click on a page element that executes a javascript snippet that does a setTimeout of a function updating something in a remote database via Ajax.\nThe user can perform various of this actions that will queue up in the event handler.\nFor some reason the update action may take longer than usual because the database is busy (even 30 seconds in the worst case).\nThe problem seems to happen when the long-running update occurs in between the mouse begins hovering above an element with a :hover pseudo-class and out of it.\nThis makes me think that Firefox is rendering elements via a series of setInterval and if for some reason the event handler cannot keep up with these intervals, it drops them, leaving certain elements in a hidden state.\nSo, with this kind of scenario in mind I tried to modify the application so that the database never stops responding in case of long updates and after this change the problem has almost completely disappeared, which makes me think that the speculative scenario depicted above is not that far from reality, even if I don't know exactly how Firefox is rendering page elements.\n\nI hope this makes sense to you.", "bug_id": 706457, "tags": []}]}}, "comments": {}}