{"comments": {}, "bugs": {"712240": {"comments": [{"attachment_id": null, "raw_text": "Rewriting the Safari profile migrator in JS, I found out the the cookies in my Cookies.plist file we're trying to import are quite old. They're the cookies I had back when I used Snow Leopard.\n\nThe new cookies is named cookies.binarycookies, and its format isn't documented. This is not a change in Mac Safari itself, but an OS-level change. The new format is used even if you run old versions of Safari on 10.7 (with old WebKit framework etc.).\n\nWhile there's an a objective-c api for reading these cookies, we probably can't and shouldn't use it. Can't, because I'm pretty sure ctypes cannot handle obj-c apis at this point.  Shouldn't, because the new migrator I'm writing doesn't use native mac apis at all. I wrote our own plist readers so the migrator can be adopted to support the the Windows version for Safari as well.  Speaking of Windows Safari, it also uses the new cookies format, starting with version 5.1, apparently.\n\nI'm not likely to fix this as part of the initial rewrite. This bug will cover that later.", "text": "Rewriting the Safari profile migrator in JS, I found out the the cookies in my Cookies.plist file we're trying to import are quite old. They're the cookies I had back when I used Snow Leopard.\n\nThe new cookies is named cookies.binarycookies, and its format isn't documented. This is not a change in Mac Safari itself, but an OS-level change. The new format is used even if you run old versions of Safari on 10.7 (with old WebKit framework etc.).\n\nWhile there's an a objective-c api for reading these cookies, we probably can't and shouldn't use it. Can't, because I'm pretty sure ctypes cannot handle obj-c apis at this point.  Shouldn't, because the new migrator I'm writing doesn't use native mac apis at all. I wrote our own plist readers so the migrator can be adopted to support the the Windows version for Safari as well.  Speaking of Windows Safari, it also uses the new cookies format, starting with version 5.1, apparently.\n\nI'm not likely to fix this as part of the initial rewrite. This bug will cover that later.", "bug_id": 712240, "tags": [], "count": 0, "id": 5929066, "is_private": false, "creation_time": "2011-12-20T10:01:35Z", "time": "2011-12-20T10:01:35Z", "creator": "asaf@sent.com", "author": "asaf@sent.com"}, {"is_private": false, "attachment_id": null, "count": 1, "id": 6224104, "raw_text": "Support for the previous format (Cookies.plist) was dropped in the new migrator.\n\nWe can fix this on Mac by using Cocoa apis. Fixing this on windows would involve some reverse engineering we don't want to do.", "creator": "asaf@sent.com", "creation_time": "2012-04-15T14:04:21Z", "time": "2012-04-15T14:04:21Z", "author": "asaf@sent.com", "tags": [], "text": "Support for the previous format (Cookies.plist) was dropped in the new migrator.\n\nWe can fix this on Mac by using Cocoa apis. Fixing this on windows would involve some reverse engineering we don't want to do.", "bug_id": 712240}, {"author": "asaf@sent.com", "time": "2012-05-08T12:31:07Z", "creation_time": "2012-05-08T12:31:07Z", "creator": "asaf@sent.com", "id": 6288956, "count": 2, "is_private": false, "tags": [], "bug_id": 712240, "text": "Some notes:\n\n1. I've a working solution for quite a while. It uses the ObjC API as noted above (namely NSHTTPCookie). Patch to be posted once I decide which unwanted xpcom api for this is most wanted, and once I figure out if it's worth spawning a thread.\n\n About that:\n   - Initially, I used nsISimpleEnumerator, as we now do for ie-history, but this solution doesn't play nice with ObjC's fast enumeration ( http://developer.apple.com/library/ios/#documentation/cocoa/conceptual/objectivec/Chapters/ocFastEnumeration.html ), which requires us to do the iteration in the form of a simple for...in loop, with no enumerator object exposed. I'm kinda-sorta surprised there's no general-purpose xpcom interface with one doYourJob method, taking no arguments... I could use nsIObserver, or a new interface.\n   - Spawning a thread: so, given that all cookies have to be read synchronously, and, on the other hand, that cookies have to be stored through the main thread, it might be a good idea to read the cookies in a background thread.  However, it may be too complex to manage.\n\n2. Windows #1: Over the internet the file structure has been already described in detail, and there are at least two Windows apps which take advantage of this (both are not open source, so I'm speculating). I'm not saying we should that too, but, if Safari ever gains more market share on Windows, we should re-evaluate the decision I made here. This comment also applies to next note.\n\n3. Windows #2: Alternatively, Safari's CFNetwork.dll could be used on windows, which, while not exactly documented, has open-sourced consumers (CookieJarWin.cpp at apple).", "raw_text": "Some notes:\n\n1. I've a working solution for quite a while. It uses the ObjC API as noted above (namely NSHTTPCookie). Patch to be posted once I decide which unwanted xpcom api for this is most wanted, and once I figure out if it's worth spawning a thread.\n\n About that:\n   - Initially, I used nsISimpleEnumerator, as we now do for ie-history, but this solution doesn't play nice with ObjC's fast enumeration ( http://developer.apple.com/library/ios/#documentation/cocoa/conceptual/objectivec/Chapters/ocFastEnumeration.html ), which requires us to do the iteration in the form of a simple for...in loop, with no enumerator object exposed. I'm kinda-sorta surprised there's no general-purpose xpcom interface with one doYourJob method, taking no arguments... I could use nsIObserver, or a new interface.\n   - Spawning a thread: so, given that all cookies have to be read synchronously, and, on the other hand, that cookies have to be stored through the main thread, it might be a good idea to read the cookies in a background thread.  However, it may be too complex to manage.\n\n2. Windows #1: Over the internet the file structure has been already described in detail, and there are at least two Windows apps which take advantage of this (both are not open source, so I'm speculating). I'm not saying we should that too, but, if Safari ever gains more market share on Windows, we should re-evaluate the decision I made here. This comment also applies to next note.\n\n3. Windows #2: Alternatively, Safari's CFNetwork.dll could be used on windows, which, while not exactly documented, has open-sourced consumers (CookieJarWin.cpp at apple).", "attachment_id": null}, {"raw_text": "No idea how I forgot to post this after all, *ugh*.\n\nIt Just Works, as they say, but my Cocoa-foo isn't great, thus asking Steven for feedback ahead of finalizing the interface and requesting review from Marco.\n\nSteven: The feedback request is only for the code in the new file, nsSafariMigratorCocoaUtils.mm. Thanks much!", "attachment_id": 652189, "is_private": false, "id": 6557793, "count": 3, "author": "asaf@sent.com", "tags": [], "text": "Created attachment 652189\npatch that works nicely, but the interface isn't final\n\nNo idea how I forgot to post this after all, *ugh*.\n\nIt Just Works, as they say, but my Cocoa-foo isn't great, thus asking Steven for feedback ahead of finalizing the interface and requesting review from Marco.\n\nSteven: The feedback request is only for the code in the new file, nsSafariMigratorCocoaUtils.mm. Thanks much!", "bug_id": 712240, "creator": "asaf@sent.com", "creation_time": "2012-08-15T20:03:42Z", "time": "2012-08-15T20:03:42Z"}, {"bug_id": 712240, "text": "Comment on attachment 652189\npatch that works nicely, but the interface isn't final\n\nThis basically looks fine to me.\n\n> +  for (NSHTTPCookie* cookie in cookies) {\n\nBut this (new style) syntax might not work in gcc on OS X 10.6.X.  Let me check it out.\n\nDo you mind if I take a week or so to get to it?", "tags": [], "attachment_id": 652189, "raw_text": "This basically looks fine to me.\n\n> +  for (NSHTTPCookie* cookie in cookies) {\n\nBut this (new style) syntax might not work in gcc on OS X 10.6.X.  Let me check it out.\n\nDo you mind if I take a week or so to get to it?", "creation_time": "2012-08-15T20:17:27Z", "time": "2012-08-15T20:17:27Z", "creator": "smichaud@pobox.com", "author": "smichaud@pobox.com", "id": 6557833, "count": 4, "is_private": false}, {"raw_text": "Sure thing!\n\nI don't have any 10.6 build box to test the syntax issue by myself, but i'll let you know If I figured that somehow.", "attachment_id": null, "tags": [], "text": "Sure thing!\n\nI don't have any 10.6 build box to test the syntax issue by myself, but i'll let you know If I figured that somehow.", "bug_id": 712240, "is_private": false, "count": 5, "id": 6557860, "author": "asaf@sent.com", "creator": "asaf@sent.com", "time": "2012-08-15T20:26:17Z", "creation_time": "2012-08-15T20:26:17Z"}, {"text": "Steven?", "bug_id": 712240, "tags": [], "attachment_id": null, "raw_text": "Steven?", "creator": "asaf@sent.com", "creation_time": "2012-10-30T17:25:00Z", "time": "2012-10-30T17:25:00Z", "author": "asaf@sent.com", "is_private": false, "id": 6776659, "count": 6}, {"author": "smichaud@pobox.com", "creation_time": "2012-10-31T15:08:10Z", "time": "2012-10-31T15:08:10Z", "creator": "smichaud@pobox.com", "id": 6779872, "count": 7, "is_private": false, "text": "Sorry for the delay :-(\n\n> +  for (NSHTTPCookie* cookie in cookies) {\n\nNow I realize it's much easier to rewrite this part of your patch using syntax that I know works properly in all of our build configurations.  Something like this:\n\nNSEnumerator *enum = [cookies objectEnumerator];\nwhile (NSHTTPCookie* cookie = [enum nextObject]) {", "bug_id": 712240, "tags": [], "raw_text": "Sorry for the delay :-(\n\n> +  for (NSHTTPCookie* cookie in cookies) {\n\nNow I realize it's much easier to rewrite this part of your patch using syntax that I know works properly in all of our build configurations.  Something like this:\n\nNSEnumerator *enum = [cookies objectEnumerator];\nwhile (NSHTTPCookie* cookie = [enum nextObject]) {", "attachment_id": null}, {"author": "asaf@sent.com", "creator": "asaf@sent.com", "creation_time": "2012-10-31T15:49:35Z", "time": "2012-10-31T15:49:35Z", "is_private": false, "count": 8, "id": 6780085, "text": "NP.\n\nSo, just that?", "bug_id": 712240, "tags": [], "raw_text": "NP.\n\nSo, just that?", "attachment_id": null}, {"raw_text": "> So, just that?\n\nYes.", "attachment_id": 652189, "tags": [], "bug_id": 712240, "text": "Comment on attachment 652189\npatch that works nicely, but the interface isn't final\n\n> So, just that?\n\nYes.", "is_private": false, "count": 9, "id": 6780269, "author": "smichaud@pobox.com", "creator": "smichaud@pobox.com", "creation_time": "2012-10-31T16:33:50Z", "time": "2012-10-31T16:33:50Z"}, {"author": "bugzilla@mversen.de", "creation_time": "2012-11-26T11:29:53Z", "time": "2012-11-26T11:29:53Z", "creator": "bugzilla@mversen.de", "id": 6850911, "count": 10, "is_private": false, "tags": [], "bug_id": 712240, "text": "*** Bug 546097 has been marked as a duplicate of this bug. ***", "raw_text": "", "attachment_id": null}, {"tags": [], "text": "Moving to p3 because no activity for at least 1 year(s).\nSee https://github.com/mozilla/bug-handling/blob/master/policy/triage-bugzilla.md#how-do-you-triage for more information", "bug_id": 712240, "attachment_id": null, "raw_text": "Moving to p3 because no activity for at least 1 year(s).\nSee https://github.com/mozilla/bug-handling/blob/master/policy/triage-bugzilla.md#how-do-you-triage for more information", "creator": "sledru@mozilla.com", "creation_time": "2018-11-05T12:52:41Z", "time": "2018-11-05T12:52:41Z", "author": "sledru@mozilla.com", "is_private": false, "id": 13735542, "count": 11}, {"tags": [], "text": "Moving to p3 because no activity for at least 1 year(s).\nSee https://github.com/mozilla/bug-handling/blob/master/policy/triage-bugzilla.md#how-do-you-triage for more information", "bug_id": 712240, "raw_text": "Moving to p3 because no activity for at least 1 year(s).\nSee https://github.com/mozilla/bug-handling/blob/master/policy/triage-bugzilla.md#how-do-you-triage for more information", "attachment_id": null, "author": "sledru@mozilla.com", "time": "2018-11-05T12:53:11Z", "creation_time": "2018-11-05T12:53:11Z", "creator": "sledru@mozilla.com", "id": 13735575, "count": 12, "is_private": false}]}}}