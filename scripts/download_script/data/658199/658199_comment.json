{"comments": {}, "bugs": {"658199": {"comments": [{"time": "2011-05-19T08:02:06Z", "author": "adamdabr@poczta.onet.pl", "id": 5479450, "text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.0; pl; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 ( .NET CLR 3.5.30729; .NET4.0E)\nBuild Identifier: 2.0 (xulrunner src)\n\nThere's a bug with resizer XUL element (as created with a <resizer .. > tag):\n\n1) No mouseup, mouseclick and command events are fired when window resizer (target=\"window\" or no target specified) is operated with mouse (mousedown fires properly). I would expect these events to fire, as resizer spec found here https://dev.mozilla.jp/localmdc/localmdc_8343.html states that command event is fired. \n2) All event are fired properly when resizer has non-window target (like a button, target=\"button\").\n\nMy theory:\nNo command event is fired, 'cause no mouseclick is captured (no mouseup also). No mouseup/mouseclick is captured, becouse mouse capture is disabled for window resizer as soon as mousedown is processed. That is invalid, even though a code comment states it was done to allow resizing behavior. \n\nAt least change the spec pls to indicate that no command event is fired for window resizers..\n\nReproducible: Always\n\nSteps to Reproduce:\n<window id=\"main\" title=\"GG protocol test application\" width=\"300\" height=\"40\" \nxmlns:html=\"http://www.w3.org/1999/xhtml\" \nxmlns=\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\">\n\n  <script type=\"application/javascript\" src=\"chrome://myapp/content/eventCatchingCode.js\"/>\n  <vbox flex=\"1\" style=\"background-color: red;\" width=\"20\">\n  <resizer id=\"resizer1\" dir=\"bottomright\" height=\"2\" style=\"cursor: sw-resize;\" />\n  </vbox>\n  <button id=\"button\" label=\"Resizable\" left=\"18\" top=\"18\" right=\"18\" bottom=\"18\"/>\n  <resizer id=\"resizer2\" dir=\"topleft\" style=\"background: black; -moz-appearance: none;\" element=\"button\" left=\"0\" top=\"0\" width=\"16\" height=\"16\"/>\n\n  <caption label=\"Test\"/>\n  <separator/>\n  <button label=\"Test >>\" oncommand=\"eventCatchingFunction();\"/>\n  <separator/>\n</window>\n\neventCatching dumb example:\n\nvar console = Components.classes[\"@mozilla.org/consoleservice;1\"].getService(Components.interfaces.nsIConsoleService);\n\ndocument.getElementById('resizer').addEventListener('mouseup', \n\t\tfunction(event) \n\t\t{\n               console.logStringMessage('resizer mouse up');\n\t\t},\n\t    false);\n\t\t\ndocument.getElementById('resizer2').addEventListener('mouseup', \n\t\tfunction(event) \n\t\t{\n               console.logStringMessage('resizer2 mouseup');\n\t\t},\n\t    false);\n\n1) Run\n2) Click Test button.\n2) Resize using both resizer (one is for window, the other for a button).\n3) See console logs\n\nActual Results:  \none mouseup logged only (for button resizer)\n\nExpected Results:  \ntwo mouseups logged\n\nCan workaround it with resize events on window (and a timer). However, it's not a perfect workaround as we have no information on mouse movements and clicks.", "count": 0, "is_private": false, "attachment_id": null, "creation_time": "2011-05-19T08:02:06Z", "bug_id": 658199, "raw_text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.0; pl; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 ( .NET CLR 3.5.30729; .NET4.0E)\nBuild Identifier: 2.0 (xulrunner src)\n\nThere's a bug with resizer XUL element (as created with a <resizer .. > tag):\n\n1) No mouseup, mouseclick and command events are fired when window resizer (target=\"window\" or no target specified) is operated with mouse (mousedown fires properly). I would expect these events to fire, as resizer spec found here https://dev.mozilla.jp/localmdc/localmdc_8343.html states that command event is fired. \n2) All event are fired properly when resizer has non-window target (like a button, target=\"button\").\n\nMy theory:\nNo command event is fired, 'cause no mouseclick is captured (no mouseup also). No mouseup/mouseclick is captured, becouse mouse capture is disabled for window resizer as soon as mousedown is processed. That is invalid, even though a code comment states it was done to allow resizing behavior. \n\nAt least change the spec pls to indicate that no command event is fired for window resizers..\n\nReproducible: Always\n\nSteps to Reproduce:\n<window id=\"main\" title=\"GG protocol test application\" width=\"300\" height=\"40\" \nxmlns:html=\"http://www.w3.org/1999/xhtml\" \nxmlns=\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\">\n\n  <script type=\"application/javascript\" src=\"chrome://myapp/content/eventCatchingCode.js\"/>\n  <vbox flex=\"1\" style=\"background-color: red;\" width=\"20\">\n  <resizer id=\"resizer1\" dir=\"bottomright\" height=\"2\" style=\"cursor: sw-resize;\" />\n  </vbox>\n  <button id=\"button\" label=\"Resizable\" left=\"18\" top=\"18\" right=\"18\" bottom=\"18\"/>\n  <resizer id=\"resizer2\" dir=\"topleft\" style=\"background: black; -moz-appearance: none;\" element=\"button\" left=\"0\" top=\"0\" width=\"16\" height=\"16\"/>\n\n  <caption label=\"Test\"/>\n  <separator/>\n  <button label=\"Test >>\" oncommand=\"eventCatchingFunction();\"/>\n  <separator/>\n</window>\n\neventCatching dumb example:\n\nvar console = Components.classes[\"@mozilla.org/consoleservice;1\"].getService(Components.interfaces.nsIConsoleService);\n\ndocument.getElementById('resizer').addEventListener('mouseup', \n\t\tfunction(event) \n\t\t{\n               console.logStringMessage('resizer mouse up');\n\t\t},\n\t    false);\n\t\t\ndocument.getElementById('resizer2').addEventListener('mouseup', \n\t\tfunction(event) \n\t\t{\n               console.logStringMessage('resizer2 mouseup');\n\t\t},\n\t    false);\n\n1) Run\n2) Click Test button.\n2) Resize using both resizer (one is for window, the other for a button).\n3) See console logs\n\nActual Results:  \none mouseup logged only (for button resizer)\n\nExpected Results:  \ntwo mouseups logged\n\nCan workaround it with resize events on window (and a timer). However, it's not a perfect workaround as we have no information on mouse movements and clicks.", "tags": [], "creator": "adamdabr@poczta.onet.pl"}, {"text": "I also think that #620625 has the same (evil) root", "count": 1, "id": 5479454, "time": "2011-05-19T08:04:44Z", "author": "adamdabr@poczta.onet.pl", "tags": [], "creator": "adamdabr@poczta.onet.pl", "creation_time": "2011-05-19T08:04:44Z", "bug_id": 658199, "raw_text": "I also think that #620625 has the same (evil) root", "is_private": false, "attachment_id": null}]}}}