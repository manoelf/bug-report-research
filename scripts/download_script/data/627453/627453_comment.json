{"comments": {}, "bugs": {"627453": {"comments": [{"text": "For QA purposes, it would be good to have a way to disable ES5 strict mode to see whether a site is breaking because of its opt-in to strict mode.", "raw_text": "For QA purposes, it would be good to have a way to disable ES5 strict mode to see whether a site is breaking because of its opt-in to strict mode.", "is_private": false, "bug_id": 627453, "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 5214279, "count": 0, "creation_time": "2011-01-20T19:33:17Z", "author": "bzbarsky@mit.edu", "time": "2011-01-20T19:33:17Z", "tags": []}, {"tags": [], "count": 1, "creation_time": "2011-01-20T23:28:55Z", "author": "jwalden@mit.edu", "time": "2011-01-20T23:28:55Z", "creator": "jwalden@mit.edu", "attachment_id": null, "id": 5215099, "text": "Are you assuming sites won't also rely on the semantic changes in strict mode and thus also sometimes break if you disable strict mode?  Strict mode is syntactically backwards-compatible but semantically backwards-incompatible, c'est la vie.", "raw_text": "Are you assuming sites won't also rely on the semantic changes in strict mode and thus also sometimes break if you disable strict mode?  Strict mode is syntactically backwards-compatible but semantically backwards-incompatible, c'est la vie.", "bug_id": 627453, "is_private": false}, {"id": 5215718, "attachment_id": null, "creator": "bzbarsky@mit.edu", "bug_id": 627453, "is_private": false, "raw_text": "I think the frequency of that will be much lower, over the next year, than sites that toss use strict in and then assign to undeclared variables, yes.\n\nAnd yes, it could be that the site will remain broken in non-strict mode because it relied on the strict mode semantics, but if it _doesn't_, then we know we just need to evangelize.  That's all this is about: being able to tell apart the \"you misused strict mode\" evang bugs from bugs that need more investigation, with minimal effort.", "text": "I think the frequency of that will be much lower, over the next year, than sites that toss use strict in and then assign to undeclared variables, yes.\n\nAnd yes, it could be that the site will remain broken in non-strict mode because it relied on the strict mode semantics, but if it _doesn't_, then we know we just need to evangelize.  That's all this is about: being able to tell apart the \"you misused strict mode\" evang bugs from bugs that need more investigation, with minimal effort.", "tags": [], "time": "2011-01-21T02:15:21Z", "author": "bzbarsky@mit.edu", "creation_time": "2011-01-21T02:15:21Z", "count": 2}]}}}