{"bugs": {"687122": {"comments": [{"id": 5720496, "bug_id": 687122, "count": 0, "text": "The JS shell (the thing in js/src/shell) is a very useful entity containing a (arguably) well-defined and understood JavaScript environment. Unfortunately, the only way to obtain this environment is by invoking the `js` binary.\n\nI would like to pull out the bits that define the js shell environment into a library such that other programs may re-create similar environments without invoking `js`. After this is done, the environment could be utilized by custom drivers (other 'int main()'s) (e.g. a more efficient xpcshell test executor, custom debugger, etc).\n\nI'm thinking that we create a new library/module under js/src. We lift functions from js.cpp (and possibly other files in js/src/shell) to this new library. We build this library as a separate shared library and then configure `js` to link against it. As part of this, we probably invent a new \"JS Shell\" API that allows instances to be created easily and with many (if not all) the options currently specified as `js` arguments.\n\nWith any new API/library, we'll have to tackle backwards compatibility guarantees, etc. This being a new library that is independent of the existing main JS one, I'm hoping that these guarantees will initially be very loose as to enable rapid prototyping and experimentation. After time, these guarantees can be made more in-line with existing ones.", "author": "gps@mozilla.com", "time": "2011-09-16T18:10:03Z", "raw_text": "The JS shell (the thing in js/src/shell) is a very useful entity containing a (arguably) well-defined and understood JavaScript environment. Unfortunately, the only way to obtain this environment is by invoking the `js` binary.\n\nI would like to pull out the bits that define the js shell environment into a library such that other programs may re-create similar environments without invoking `js`. After this is done, the environment could be utilized by custom drivers (other 'int main()'s) (e.g. a more efficient xpcshell test executor, custom debugger, etc).\n\nI'm thinking that we create a new library/module under js/src. We lift functions from js.cpp (and possibly other files in js/src/shell) to this new library. We build this library as a separate shared library and then configure `js` to link against it. As part of this, we probably invent a new \"JS Shell\" API that allows instances to be created easily and with many (if not all) the options currently specified as `js` arguments.\n\nWith any new API/library, we'll have to tackle backwards compatibility guarantees, etc. This being a new library that is independent of the existing main JS one, I'm hoping that these guarantees will initially be very loose as to enable rapid prototyping and experimentation. After time, these guarantees can be made more in-line with existing ones.", "creation_time": "2011-09-16T18:10:03Z", "is_private": false, "creator": "gps@mozilla.com", "tags": [], "attachment_id": null}, {"time": "2011-09-16T18:14:30Z", "raw_text": "This sounds more focused than bug 209176 which Han Chang is ostensibly working on (that's not meant to be a judgement; I just haven't heard of any specific progress there). Probably worth syncing up and coordinating efforts.", "attachment_id": null, "tags": [], "creator": "josh@joshmatthews.net", "text": "This sounds more focused than bug 209176 which Han Chang is ostensibly working on (that's not meant to be a judgement; I just haven't heard of any specific progress there). Probably worth syncing up and coordinating efforts.", "count": 1, "author": "josh@joshmatthews.net", "bug_id": 687122, "id": 5720511, "is_private": false, "creation_time": "2011-09-16T18:14:30Z"}, {"time": "2011-09-18T02:36:59Z", "raw_text": "Yes, after reading this bug I'd like to reconsider the scope of bug 209176; this bug's fix (bug 687122) should be to extract JS shell into its own library with an API.\n\nThe goal of bug 209176 would then be to implement XPC shell using the new JS shell API. I'll mark bug 209176 as depending on bug 687122 then.\n\nIf this is not okay, my apologies ahead of time, please change it to be in accordance with the Mozilla standard operating procedure, I'm just doing what I think is logical.", "author": "szu.han.chang@gmail.com", "count": 2, "text": "Yes, after reading this bug I'd like to reconsider the scope of bug 209176; this bug's fix (bug 687122) should be to extract JS shell into its own library with an API.\n\nThe goal of bug 209176 would then be to implement XPC shell using the new JS shell API. I'll mark bug 209176 as depending on bug 687122 then.\n\nIf this is not okay, my apologies ahead of time, please change it to be in accordance with the Mozilla standard operating procedure, I'm just doing what I think is logical.", "bug_id": 687122, "id": 5721847, "attachment_id": null, "tags": [], "creator": "szu.han.chang@gmail.com", "is_private": false, "creation_time": "2011-09-18T02:36:59Z"}, {"tags": [], "time": "2011-09-19T09:10:53Z", "raw_text": "Han, Josh, et. al: after seeing both bugs, I too agree that it makes sense to refactor JS shell into a library then refactor xpcshell to utilize this new library.\n\nSpeaking of refactoring JS shell into a library, the new code will be more easily testable. While we don't appear to have any explicit unit tests for JS shell today, I'm guessing we will want some as part of this refactoring. Could a likely reviewer please indicate how extensive these tests should be? And, since I am new to the C++ side of m-c, could you please steer me towards \"good\" C++ test code worth emulating?", "attachment_id": null, "bug_id": 687122, "id": 5722642, "is_private": false, "creation_time": "2011-09-19T09:10:53Z", "creator": "gps@mozilla.com", "count": 3, "text": "Han, Josh, et. al: after seeing both bugs, I too agree that it makes sense to refactor JS shell into a library then refactor xpcshell to utilize this new library.\n\nSpeaking of refactoring JS shell into a library, the new code will be more easily testable. While we don't appear to have any explicit unit tests for JS shell today, I'm guessing we will want some as part of this refactoring. Could a likely reviewer please indicate how extensive these tests should be? And, since I am new to the C++ side of m-c, could you please steer me towards \"good\" C++ test code worth emulating?", "author": "gps@mozilla.com"}, {"creator": "jorendorff@mozilla.com", "is_private": false, "creation_time": "2011-09-22T15:52:08Z", "attachment_id": null, "tags": [], "count": 4, "text": "Gregory, don't worry about tests. Write the patch and let's see what it looks like.\n\nAs far as I know, the set of correctness properties we care about for the JS shell is pretty much just whatever the existing JS tests use.\n\nTo run those tests, build the shell, then do\n\n  cd tests\n  python jstests.py --args=\"-m -n\" $BUILDDIR/js\n\n  cd ../jit-test\n  python jit-test.py --jitflags=mn -f --no-slow $BUILDDIR/js\n\nWe also have a simple homemade C++ test framework; see jsapi-tests/README for details.", "author": "jorendorff@mozilla.com", "bug_id": 687122, "id": 5730976, "raw_text": "Gregory, don't worry about tests. Write the patch and let's see what it looks like.\n\nAs far as I know, the set of correctness properties we care about for the JS shell is pretty much just whatever the existing JS tests use.\n\nTo run those tests, build the shell, then do\n\n  cd tests\n  python jstests.py --args=\"-m -n\" $BUILDDIR/js\n\n  cd ../jit-test\n  python jit-test.py --jitflags=mn -f --no-slow $BUILDDIR/js\n\nWe also have a simple homemade C++ test framework; see jsapi-tests/README for details.", "time": "2011-09-22T15:52:08Z"}, {"bug_id": 687122, "id": 5739342, "is_private": false, "creation_time": "2011-09-27T06:34:42Z", "creator": "gps@mozilla.com", "author": "gps@mozilla.com", "count": 5, "text": "I have more pressing matters on my plate and don't think I'll get around to this soon.\n\nHan: do you have interest in taking the bug?", "tags": [], "time": "2011-09-27T06:34:42Z", "attachment_id": null, "raw_text": "I have more pressing matters on my plate and don't think I'll get around to this soon.\n\nHan: do you have interest in taking the bug?"}, {"creation_time": "2011-09-27T10:09:54Z", "is_private": false, "creator": "szu.han.chang@gmail.com", "tags": [], "attachment_id": null, "id": 5739613, "bug_id": 687122, "author": "szu.han.chang@gmail.com", "count": 6, "text": "I definitely am but progress will be slow as I'm out of the country for the next two weeks and have limited time; when I get back though it'll be a top priority.", "time": "2011-09-27T10:09:54Z", "raw_text": "I definitely am but progress will be slow as I'm out of the country for the next two weeks and have limited time; when I get back though it'll be a top priority."}]}}, "comments": {}}