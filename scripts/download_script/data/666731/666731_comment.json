{"comments": {}, "bugs": {"666731": {"comments": [{"attachment_id": null, "raw_text": "Once the master language tag list (bug 666662) gets implemented, tying in the spellchecker language detector interface in with it will have the least risk and highest reward. It should cause little disruption while also resolving any outstanding bugs regarding a particular language showing only its language code (not its name) when its spellchecker is installed.", "id": 5552109, "is_private": false, "creator": "gphemsley@gphemsley.org", "count": 0, "creation_time": "2011-06-23T20:34:01Z", "author": "gphemsley@gphemsley.org", "text": "Once the master language tag list (bug 666662) gets implemented, tying in the spellchecker language detector interface in with it will have the least risk and highest reward. It should cause little disruption while also resolving any outstanding bugs regarding a particular language showing only its language code (not its name) when its spellchecker is installed.", "time": "2011-06-23T20:34:01Z", "bug_id": 666731, "tags": []}, {"attachment_id": null, "raw_text": "The spellchecker automatically ties in to the list of language names, but it doesn't tie in to the list of region or script names. It appears that script subtags are stripped and region subtags are displayed as literals.\n\nWe'll need to modify the code (wherever it is\u2014haven't looked for it yet) to fully parse the language tag.", "id": 5602888, "is_private": false, "creator": "gphemsley@gphemsley.org", "count": 1, "creation_time": "2011-07-20T21:37:15Z", "author": "gphemsley@gphemsley.org", "text": "The spellchecker automatically ties in to the list of language names, but it doesn't tie in to the list of region or script names. It appears that script subtags are stripped and region subtags are displayed as literals.\n\nWe'll need to modify the code (wherever it is\u2014haven't looked for it yet) to fully parse the language tag.", "bug_id": 666731, "tags": [], "time": "2011-07-20T21:37:15Z"}, {"raw_text": "Hmm... it appears that the code may be taking whatever comes last in the hyphenated tag and displaying it as a literal. Macedonian takes advantage of this in order to display both the Latin and Cyrillic variants of their spellchecker, but they do it by using the invalid tags 'mk-MK-Latn' and 'mk-MK-Cyrl'.\n\nMoving this to the spellchecking component, since it seems like it may be better categorized there.", "attachment_id": null, "id": 5602919, "count": 2, "is_private": false, "creator": "gphemsley@gphemsley.org", "text": "Hmm... it appears that the code may be taking whatever comes last in the hyphenated tag and displaying it as a literal. Macedonian takes advantage of this in order to display both the Latin and Cyrillic variants of their spellchecker, but they do it by using the invalid tags 'mk-MK-Latn' and 'mk-MK-Cyrl'.\n\nMoving this to the spellchecking component, since it seems like it may be better categorized there.", "tags": [], "bug_id": 666731, "time": "2011-07-20T21:44:57Z", "creation_time": "2011-07-20T21:44:57Z", "author": "gphemsley@gphemsley.org"}, {"author": "kscanne@gmail.com", "creation_time": "2011-07-20T21:45:15Z", "time": "2011-07-20T21:45:15Z", "tags": [], "text": "Just recording an observation from our chat just now; Macedonian spell checker has files named \"mk-MK-Cyrl.aff\" and in my 6.0 ga-IE build it shows up in the context menu as \"Macad\u00f3inis / An Mhacad\u00f3in (Cyrl)\".   That is, \"Macedonian / Macedonia (Cyrl)\" probably in en-US.", "creator": "kscanne@gmail.com", "is_private": false, "id": 5602921, "attachment_id": null, "raw_text": "Just recording an observation from our chat just now; Macedonian spell checker has files named \"mk-MK-Cyrl.aff\" and in my 6.0 ga-IE build it shows up in the context menu as \"Macad\u00f3inis / An Mhacad\u00f3in (Cyrl)\".   That is, \"Macedonian / Macedonia (Cyrl)\" probably in en-US.", "bug_id": 666731, "count": 3}, {"id": 5603590, "raw_text": "I believe this is the code that decides what language (sub)tag is used to pick the dictionary:\nhttp://mxr.mozilla.org/mozilla-central/source/extensions/spellcheck/hunspell/src/mozHunspell.cpp#129\n\nAIUI, it basically just takes a substring of the filename from the start to the first occurrence of a '-' character (or a '_' character, if '-' is not found).\n\nHowever, I've been on an unfruitful wild goose chase that sent me around in circles trying to track down all the different definitions and uses of mDictionary, aDictionary, mLanguage, aLanguage, etc. I don't really know how to read C/C++ code or what it does, so I can't figure out where the values of the variables originally start. Nor can I figure out where it trades the language code for the (localized) language name.", "attachment_id": null, "text": "I believe this is the code that decides what language (sub)tag is used to pick the dictionary:\nhttp://mxr.mozilla.org/mozilla-central/source/extensions/spellcheck/hunspell/src/mozHunspell.cpp#129\n\nAIUI, it basically just takes a substring of the filename from the start to the first occurrence of a '-' character (or a '_' character, if '-' is not found).\n\nHowever, I've been on an unfruitful wild goose chase that sent me around in circles trying to track down all the different definitions and uses of mDictionary, aDictionary, mLanguage, aLanguage, etc. I don't really know how to read C/C++ code or what it does, so I can't figure out where the values of the variables originally start. Nor can I figure out where it trades the language code for the (localized) language name.", "tags": [], "bug_id": 666731, "time": "2011-07-21T05:26:30Z", "creation_time": "2011-07-21T05:26:30Z", "author": "gphemsley@gphemsley.org", "count": 4, "is_private": false, "creator": "gphemsley@gphemsley.org"}, {"attachment_id": null, "raw_text": "In that code, the desired dictionary comes in as the argument aDictionary.  The SetDictionary method gets called from mozSpellChecker::SetCurrentDictionary:\nhttp://mxr.mozilla.org/mozilla-central/source/extensions/spellcheck/src/mozSpellChecker.cpp#367\nwhich is called from the editor code various places, e.g. here:\nhttp://mxr.mozilla.org/mozilla-central/source/editor/composer/src/nsEditorSpellCheck.cpp#112\nThis function implements the logic for choosing the spell checker - it looks at the pref spellchecker.dictionary, then falls back to current locale, then falls back to en-US.", "id": 5604070, "is_private": false, "creator": "kscanne@gmail.com", "count": 5, "creation_time": "2011-07-21T13:13:54Z", "author": "kscanne@gmail.com", "text": "In that code, the desired dictionary comes in as the argument aDictionary.  The SetDictionary method gets called from mozSpellChecker::SetCurrentDictionary:\nhttp://mxr.mozilla.org/mozilla-central/source/extensions/spellcheck/src/mozSpellChecker.cpp#367\nwhich is called from the editor code various places, e.g. here:\nhttp://mxr.mozilla.org/mozilla-central/source/editor/composer/src/nsEditorSpellCheck.cpp#112\nThis function implements the logic for choosing the spell checker - it looks at the pref spellchecker.dictionary, then falls back to current locale, then falls back to en-US.", "time": "2011-07-21T13:13:54Z", "tags": [], "bug_id": 666731}, {"creation_time": "2011-07-21T13:30:48Z", "author": "kscanne@gmail.com", "text": "Gordon, here's the code for building the localized list of dictionaries: language names + region names:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/content/InlineSpellChecker.jsm#172\nLooks pretty straightforward, and it's clear why it's broken; assumes region comes second, and tacks on anything after a second component in parens (explaining the Macedonian weirdness).", "tags": [], "time": "2011-07-21T13:30:48Z", "bug_id": 666731, "is_private": false, "creator": "kscanne@gmail.com", "count": 6, "id": 5604110, "attachment_id": null, "raw_text": "Gordon, here's the code for building the localized list of dictionaries: language names + region names:\nhttp://mxr.mozilla.org/mozilla-central/source/toolkit/content/InlineSpellChecker.jsm#172\nLooks pretty straightforward, and it's clear why it's broken; assumes region comes second, and tacks on anything after a second component in parens (explaining the Macedonian weirdness)."}]}}}