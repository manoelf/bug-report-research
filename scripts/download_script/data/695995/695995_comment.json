{"bugs": {"695995": {"comments": [{"attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928134238\n\nSteps to reproduce:\n\nUpload a file named p\u00f6\u00f6.txt through HTML Upload <input type=file ...>\n\n\nActual results:\n\nOn server-side the file is stored as: po%CC%88o%CC%88.txt.\n\n\nExpected results:\n\nFile should have been stored as: p%C3%B6%C3%B6.txt. This encoding is used with Chrome and Safari on OS X and also IE and FF on Windows7", "id": 5793917, "creator": "ari.rantalainen@kronodoc.com", "is_private": false, "count": 0, "author": "ari.rantalainen@kronodoc.com", "creation_time": "2011-10-20T07:26:35Z", "bug_id": 695995, "tags": [], "time": "2011-10-20T07:26:35Z", "text": "User Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\nBuild ID: 20110928134238\n\nSteps to reproduce:\n\nUpload a file named p\u00f6\u00f6.txt through HTML Upload <input type=file ...>\n\n\nActual results:\n\nOn server-side the file is stored as: po%CC%88o%CC%88.txt.\n\n\nExpected results:\n\nFile should have been stored as: p%C3%B6%C3%B6.txt. This encoding is used with Chrome and Safari on OS X and also IE and FF on Windows7"}, {"id": 5793919, "raw_text": "The bug is also reported by someone in FF 6.0.2 on OS X in https://support.mozilla.com/fi/questions/874246", "attachment_id": null, "bug_id": 695995, "time": "2011-10-20T07:27:56Z", "tags": [], "text": "The bug is also reported by someone in FF 6.0.2 on OS X in https://support.mozilla.com/fi/questions/874246", "author": "ari.rantalainen@kronodoc.com", "creation_time": "2011-10-20T07:27:56Z", "count": 1, "creator": "ari.rantalainen@kronodoc.com", "is_private": false}, {"creation_time": "2011-10-20T09:00:49Z", "author": "acelists@atlas.sk", "text": "Does the HTML code specify any encoding?", "tags": [], "time": "2011-10-20T09:00:49Z", "bug_id": 695995, "is_private": false, "creator": "acelists@atlas.sk", "count": 2, "id": 5794005, "attachment_id": null, "raw_text": "Does the HTML code specify any encoding?"}, {"id": 5794134, "raw_text": "From the page source:\n<input type=\"file\" name=\"filename1\" value=\"\" size=\"25\" maxlength=\"200\"/>\n\nI'm also able to repeat this problem on FF8b3 and 4.2a1pre (2011-03-31).\n\nIn FF3.6.23 it works correctly.", "attachment_id": null, "text": "From the page source:\n<input type=\"file\" name=\"filename1\" value=\"\" size=\"25\" maxlength=\"200\"/>\n\nI'm also able to repeat this problem on FF8b3 and 4.2a1pre (2011-03-31).\n\nIn FF3.6.23 it works correctly.", "time": "2011-10-20T11:09:24Z", "tags": [], "creation_time": "2011-10-20T11:09:24Z", "author": "ari.rantalainen@kronodoc.com", "is_private": false, "creator": "ari.rantalainen@kronodoc.com", "bug_id": 695995, "count": 3}, {"attachment_id": null, "raw_text": "That didn't quite answer my question. Does the page set the encoding (codepage/charset), like utf-8 or iso-8859-1, anywhere? What does Page Info say about the encoding?", "id": 5794179, "is_private": false, "creator": "acelists@atlas.sk", "creation_time": "2011-10-20T11:49:58Z", "author": "acelists@atlas.sk", "text": "That didn't quite answer my question. Does the page set the encoding (codepage/charset), like utf-8 or iso-8859-1, anywhere? What does Page Info say about the encoding?", "time": "2011-10-20T11:49:58Z", "tags": [], "count": 4, "bug_id": 695995}, {"is_private": false, "creator": "ari.rantalainen@kronodoc.com", "count": 5, "creation_time": "2011-10-20T11:59:05Z", "author": "ari.rantalainen@kronodoc.com", "text": "Page begins with:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "bug_id": 695995, "tags": [], "time": "2011-10-20T11:59:05Z", "attachment_id": null, "raw_text": "Page begins with:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "id": 5794187}, {"id": 5794511, "attachment_id": null, "raw_text": "> Page begins with:\n\nThat actually doesn't matter; in HTML the XML encoding declaration is ignored.\n\nIn any case, this is not an issue with the character encoding per se.  %CC%88 is the URL-encoded UTF-8 encoding of U+0308 COMBINING DIAERESIS.  So all you're seeing is the difference between precomposed forms (which is what the expected results above show) and decomposed forms.\n\nThe native filename encoding on Mac for HFS+ is in fact decomposed Unicode.\n\nJosh, I assume this is fallout from the change to use nsLocalFileUnix on Mac?", "creation_time": "2011-10-20T15:23:05Z", "author": "bzbarsky@mit.edu", "text": "> Page begins with:\n\nThat actually doesn't matter; in HTML the XML encoding declaration is ignored.\n\nIn any case, this is not an issue with the character encoding per se.  %CC%88 is the URL-encoded UTF-8 encoding of U+0308 COMBINING DIAERESIS.  So all you're seeing is the difference between precomposed forms (which is what the expected results above show) and decomposed forms.\n\nThe native filename encoding on Mac for HFS+ is in fact decomposed Unicode.\n\nJosh, I assume this is fallout from the change to use nsLocalFileUnix on Mac?", "bug_id": 695995, "tags": [], "time": "2011-10-20T15:23:05Z", "is_private": false, "creator": "bzbarsky@mit.edu", "count": 6}, {"id": 5794524, "raw_text": "I should add that 'o' followed by U+0308 is a perfectly valid way of expressing '\u00f6' in Unicode, so I'm not sure why the behavior change here is a problem in the first place...", "attachment_id": null, "text": "I should add that 'o' followed by U+0308 is a perfectly valid way of expressing '\u00f6' in Unicode, so I'm not sure why the behavior change here is a problem in the first place...", "time": "2011-10-20T15:28:25Z", "tags": [], "bug_id": 695995, "creation_time": "2011-10-20T15:28:25Z", "author": "bzbarsky@mit.edu", "count": 7, "is_private": false, "creator": "bzbarsky@mit.edu"}, {"time": "2011-10-20T16:55:20Z", "tags": [], "text": "(In reply to Boris Zbarsky (:bz) from comment #6)\n\n> Josh, I assume this is fallout from the change to use nsLocalFileUnix on Mac?\n\nPossibly, but I worked on that a long time ago and I have little to no memory of what I did that might be related to this.", "author": "jaas@kflag.net", "creation_time": "2011-10-20T16:55:20Z", "creator": "jaas@kflag.net", "is_private": false, "id": 5794758, "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #6)\n\n> Josh, I assume this is fallout from the change to use nsLocalFileUnix on Mac?\n\nPossibly, but I worked on that a long time ago and I have little to no memory of what I did that might be related to this.", "attachment_id": null, "bug_id": 695995, "count": 8}, {"creator": "bzbarsky@mit.edu", "is_private": false, "count": 9, "author": "bzbarsky@mit.edu", "creation_time": "2011-10-20T17:09:12Z", "time": "2011-10-20T17:09:12Z", "bug_id": 695995, "tags": [], "text": "I doubt it's something you did; more likely MacOS hands out slightly different information to different APIs...", "attachment_id": null, "raw_text": "I doubt it's something you did; more likely MacOS hands out slightly different information to different APIs...", "id": 5794808}, {"id": 5794922, "raw_text": "It'd be nice to have a regression range on this ... if there is one (if the problem hasn't always existed).", "attachment_id": null, "text": "It'd be nice to have a regression range on this ... if there is one (if the problem hasn't always existed).", "bug_id": 695995, "tags": [], "time": "2011-10-20T17:46:29Z", "creation_time": "2011-10-20T17:46:29Z", "author": "smichaud@pobox.com", "count": 10, "is_private": false, "creator": "smichaud@pobox.com"}, {"id": 5796407, "raw_text": "By going through quite a lot of nightlies and come to the conclusion that it still works as I'm expecting it to work on: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b3pre) Gecko/20100721 Minefield/4.0b3pre. \n\nFirst version where this bug is present is: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b3pre) Gecko/20100722 Minefield/4.0b3pre", "attachment_id": null, "text": "By going through quite a lot of nightlies and come to the conclusion that it still works as I'm expecting it to work on: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b3pre) Gecko/20100721 Minefield/4.0b3pre. \n\nFirst version where this bug is present is: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0b3pre) Gecko/20100722 Minefield/4.0b3pre", "bug_id": 695995, "time": "2011-10-21T08:53:17Z", "tags": [], "creation_time": "2011-10-21T08:53:17Z", "author": "ari.rantalainen@kronodoc.com", "count": 11, "is_private": false, "creator": "ari.rantalainen@kronodoc.com"}, {"attachment_id": null, "raw_text": "Steven, comment 3 is very clear that the behavior changed from 3.6 to 4.\n\nThe regression range from comment 11 is roughly http://hg.mozilla.org/mozilla-central/pushloghtml?startdate=2010-07-21&enddate=2010-07-23 (roughly because dates are hard to work with; the changeset ids from about:buildconfig would be a lot more useful).  That does in fact include the fix for bug 571193.\n\nArei, I still don't understand what problems this causes in practice.  Can you explain that, please?  In particular, see discussion in http://www.w3.org/Bugs/Public/show_bug.cgi?id=14526", "id": 5797088, "creator": "bzbarsky@mit.edu", "is_private": false, "count": 12, "author": "bzbarsky@mit.edu", "creation_time": "2011-10-21T16:46:22Z", "bug_id": 695995, "time": "2011-10-21T16:46:22Z", "tags": [], "text": "Steven, comment 3 is very clear that the behavior changed from 3.6 to 4.\n\nThe regression range from comment 11 is roughly http://hg.mozilla.org/mozilla-central/pushloghtml?startdate=2010-07-21&enddate=2010-07-23 (roughly because dates are hard to work with; the changeset ids from about:buildconfig would be a lot more useful).  That does in fact include the fix for bug 571193.\n\nArei, I still don't understand what problems this causes in practice.  Can you explain that, please?  In particular, see discussion in http://www.w3.org/Bugs/Public/show_bug.cgi?id=14526"}, {"text": "As to the w3 bug report my applications is storing the files in objects. Object can only hold one file with a distinct name. In this case the object will house two files with different names (p\u00f6\u00f6.txt vs. po\u00a8po\u00a8.txt) but which show as having the same name.\n\nIt works as I'm expecting: http://hg.mozilla.org/mozilla-central/rev/1ac07fe5f6c9\nIt doesn't work as I'm expecting: http://hg.mozilla.org/mozilla-central/rev/0f5fc40c6a0f\n\nI'm not an expert in how the non-basic characters are handled. I'm reporting this bug as it works in a different way than FF on other OS's (Windows7 and Ubuntu 11.10) in addition it working differently than other browsers I tested on OSX (Safari 5.1, Chrome 14.0).\n\nSo is this a bug or a feature?", "bug_id": 695995, "tags": [], "time": "2011-10-22T04:01:49Z", "creation_time": "2011-10-22T04:01:49Z", "author": "ari.rantalainen@kronodoc.com", "count": 13, "is_private": false, "creator": "ari.rantalainen@kronodoc.com", "id": 5798363, "raw_text": "As to the w3 bug report my applications is storing the files in objects. Object can only hold one file with a distinct name. In this case the object will house two files with different names (p\u00f6\u00f6.txt vs. po\u00a8po\u00a8.txt) but which show as having the same name.\n\nIt works as I'm expecting: http://hg.mozilla.org/mozilla-central/rev/1ac07fe5f6c9\nIt doesn't work as I'm expecting: http://hg.mozilla.org/mozilla-central/rev/0f5fc40c6a0f\n\nI'm not an expert in how the non-basic characters are handled. I'm reporting this bug as it works in a different way than FF on other OS's (Windows7 and Ubuntu 11.10) in addition it working differently than other browsers I tested on OSX (Safari 5.1, Chrome 14.0).\n\nSo is this a bug or a feature?", "attachment_id": null}, {"bug_id": 695995, "count": 14, "id": 5798373, "raw_text": "> In this case the object will house two files with different names \n\nAh, and the comparison algorithm is not really doing Unicode string comparisons correctly?  See http://unicode.org/faq/normalization.html for info....\n\n> So is this a bug or a feature?\n\nIt wasn't a purposeful behavior change, for sure.\n\nSo we're treating it as a bug for the moment.  But whatever comparison routine you're using that doesn't normalize before comparing is definitely broken, and might break in other browsers on other OSes any time.  That is, unless the W3C standardizes behavior here.", "attachment_id": null, "text": "> In this case the object will house two files with different names \n\nAh, and the comparison algorithm is not really doing Unicode string comparisons correctly?  See http://unicode.org/faq/normalization.html for info....\n\n> So is this a bug or a feature?\n\nIt wasn't a purposeful behavior change, for sure.\n\nSo we're treating it as a bug for the moment.  But whatever comparison routine you're using that doesn't normalize before comparing is definitely broken, and might break in other browsers on other OSes any time.  That is, unless the W3C standardizes behavior here.", "tags": [], "time": "2011-10-22T04:29:13Z", "creation_time": "2011-10-22T04:29:13Z", "author": "bzbarsky@mit.edu", "is_private": false, "creator": "bzbarsky@mit.edu"}, {"id": 5798382, "attachment_id": null, "raw_text": "> Ah, and the comparison algorithm is not really doing Unicode string\n> comparisons correctly?  See http://unicode.org/faq/normalization.html for\n\nYes, I finally understand that this is the case.\n\n> So we're treating it as a bug for the moment.  But whatever comparison\n\nOk. I'll stay tuned to this bug report but will start to fix my code.\n\nThank you all very much for this triage and help with this. I learned a thing or two.", "creation_time": "2011-10-22T04:57:43Z", "author": "ari.rantalainen@kronodoc.com", "text": "> Ah, and the comparison algorithm is not really doing Unicode string\n> comparisons correctly?  See http://unicode.org/faq/normalization.html for\n\nYes, I finally understand that this is the case.\n\n> So we're treating it as a bug for the moment.  But whatever comparison\n\nOk. I'll stay tuned to this bug report but will start to fix my code.\n\nThank you all very much for this triage and help with this. I learned a thing or two.", "tags": [], "time": "2011-10-22T04:57:43Z", "bug_id": 695995, "is_private": false, "creator": "ari.rantalainen@kronodoc.com", "count": 15}, {"text": "OK, so it seems like in practice we and Opera and IE all send whatever is on disk as the filename.  WebKit normalizes to NFC.\n\nLooks like on Windows filenames usually end up as NFC if typed in directly, though there's no guarantee of that.  So windows browsers will _usually_ end up sending NFC.\n\nIan is going to make the spec require NFC here (and in the DOM filename APIs).\n\nWe're probably not going to change our nsIFile code to do that, so need to handle this on the DOM end.  Jonas, Kyle, any objections?", "bug_id": 695995, "time": "2011-11-01T18:53:38Z", "tags": [], "creation_time": "2011-11-01T18:53:38Z", "author": "bzbarsky@mit.edu", "count": 16, "is_private": false, "creator": "bzbarsky@mit.edu", "id": 5818619, "raw_text": "OK, so it seems like in practice we and Opera and IE all send whatever is on disk as the filename.  WebKit normalizes to NFC.\n\nLooks like on Windows filenames usually end up as NFC if typed in directly, though there's no guarantee of that.  So windows browsers will _usually_ end up sending NFC.\n\nIan is going to make the spec require NFC here (and in the DOM filename APIs).\n\nWe're probably not going to change our nsIFile code to do that, so need to handle this on the DOM end.  Jonas, Kyle, any objections?", "attachment_id": null}, {"id": 5818630, "raw_text": "Seems reasonable to me.", "attachment_id": null, "tags": [], "time": "2011-11-01T18:55:32Z", "text": "Seems reasonable to me.", "author": "khuey@kylehuey.com", "creation_time": "2011-11-01T18:55:32Z", "creator": "khuey@kylehuey.com", "is_private": false, "bug_id": 695995, "count": 17}, {"attachment_id": null, "raw_text": "Please don't require normalizing to NFC. It will break CJK Compatibility Ideographs in the filename which is popular in Japan because our goverment certified to use those characters for personal names.\nFilename normalization should be a platform convention rather than a DOM spec. Mac supports a dedicated API to normalize filenames to avoid breaking Compatibility Ideographs.\nhttps://developer.apple.com/jp/technotes/tn1150.html#UnicodeSubtleties\n(Sorry for Japanese, I couldn't find a corresponding English technote.)", "id": 5819922, "creator": "VYV03354@nifty.ne.jp", "is_private": false, "count": 18, "author": "VYV03354@nifty.ne.jp", "creation_time": "2011-11-02T02:48:08Z", "tags": [], "time": "2011-11-02T02:48:08Z", "bug_id": 695995, "text": "Please don't require normalizing to NFC. It will break CJK Compatibility Ideographs in the filename which is popular in Japan because our goverment certified to use those characters for personal names.\nFilename normalization should be a platform convention rather than a DOM spec. Mac supports a dedicated API to normalize filenames to avoid breaking Compatibility Ideographs.\nhttps://developer.apple.com/jp/technotes/tn1150.html#UnicodeSubtleties\n(Sorry for Japanese, I couldn't find a corresponding English technote.)"}, {"is_private": false, "creator": "bzbarsky@mit.edu", "count": 19, "creation_time": "2011-11-02T02:51:14Z", "author": "bzbarsky@mit.edu", "text": "OK.  Can you please escalate that to the spec, then?  See link in url field.  I can do it if you really prefer, but having me pipe things back and forth is a little silly....\n\nAlso, does webkit not actually do full NFC normalization, then?", "bug_id": 695995, "time": "2011-11-02T02:51:14Z", "tags": [], "attachment_id": null, "raw_text": "OK.  Can you please escalate that to the spec, then?  See link in url field.  I can do it if you really prefer, but having me pipe things back and forth is a little silly....\n\nAlso, does webkit not actually do full NFC normalization, then?", "id": 5819925}, {"creation_time": "2011-11-02T03:05:45Z", "author": "VYV03354@nifty.ne.jp", "text": "Will do, I can't log in to W3C Bugzilla right now.\n> Also, does webkit not actually do full NFC normalization, then?\nI have no working Mac. I'll hear Japanese Mac users.", "time": "2011-11-02T03:05:45Z", "tags": [], "bug_id": 695995, "is_private": false, "creator": "VYV03354@nifty.ne.jp", "count": 20, "id": 5819937, "attachment_id": null, "raw_text": "Will do, I can't log in to W3C Bugzilla right now.\n> Also, does webkit not actually do full NFC normalization, then?\nI have no working Mac. I'll hear Japanese Mac users."}, {"attachment_id": null, "raw_text": "> I have no working Mac. \n\nhttp://www.w3.org/Bugs/Public/show_bug.cgi?id=14526#c11 says Safari and Chrome do some sort of normalization on Windows too.", "id": 5819963, "creator": "bzbarsky@mit.edu", "is_private": false, "author": "bzbarsky@mit.edu", "creation_time": "2011-11-02T03:37:49Z", "tags": [], "time": "2011-11-02T03:37:49Z", "text": "> I have no working Mac. \n\nhttp://www.w3.org/Bugs/Public/show_bug.cgi?id=14526#c11 says Safari and Chrome do some sort of normalization on Windows too.", "count": 21, "bug_id": 695995}, {"id": 5820414, "attachment_id": null, "raw_text": "Safari and Chrome normalized Compatibility Ideographs at least on Windows...", "author": "VYV03354@nifty.ne.jp", "creation_time": "2011-11-02T12:29:11Z", "tags": [], "time": "2011-11-02T12:29:11Z", "text": "Safari and Chrome normalized Compatibility Ideographs at least on Windows...", "creator": "VYV03354@nifty.ne.jp", "is_private": false, "bug_id": 695995, "count": 22}, {"id": 5820485, "attachment_id": null, "raw_text": "So their behavior there is broken in the way comment 18 says we should avoid?", "author": "bzbarsky@mit.edu", "creation_time": "2011-11-02T13:24:18Z", "time": "2011-11-02T13:24:18Z", "bug_id": 695995, "tags": [], "text": "So their behavior there is broken in the way comment 18 says we should avoid?", "creator": "bzbarsky@mit.edu", "is_private": false, "count": 23}, {"id": 5820526, "attachment_id": null, "raw_text": "Yes. Now I'm not sure I can convince them to pay the cost of non-standard normalization behavior.", "author": "VYV03354@nifty.ne.jp", "creation_time": "2011-11-02T13:40:26Z", "tags": [], "time": "2011-11-02T13:40:26Z", "text": "Yes. Now I'm not sure I can convince them to pay the cost of non-standard normalization behavior.", "creator": "VYV03354@nifty.ne.jp", "is_private": false, "bug_id": 695995, "count": 24}, {"creation_time": "2011-11-02T17:04:55Z", "author": "ian@hixie.ch", "text": "emk: Please add a comment to http://www.w3.org/Bugs/Public/show_bug.cgi?id=14526 describing what normalisation you think we should do. (I'm afraid I can't read Japanese so the link you cited above is not helpful to me. :-( )", "bug_id": 695995, "tags": [], "time": "2011-11-02T17:04:55Z", "is_private": false, "creator": "ian@hixie.ch", "count": 25, "id": 5821131, "attachment_id": null, "raw_text": "emk: Please add a comment to http://www.w3.org/Bugs/Public/show_bug.cgi?id=14526 describing what normalisation you think we should do. (I'm afraid I can't read Japanese so the link you cited above is not helpful to me. :-( )"}, {"id": 12557076, "raw_text": "I'm pretty sure Chrome removed this, but I can't find a reference. It also seems like it hasn't been a problem in the past five years?", "attachment_id": null, "tags": [], "bug_id": 695995, "time": "2017-08-11T08:16:06Z", "text": "I'm pretty sure Chrome removed this, but I can't find a reference. It also seems like it hasn't been a problem in the past five years?", "author": "annevk@annevk.nl", "creation_time": "2017-08-11T08:16:06Z", "count": 26, "creator": "annevk@annevk.nl", "is_private": false}, {"id": 12574969, "raw_text": "Re-testing the original case again with Firefox 55.0.2 (64-bit) and the behaviour is as it was when reported. Chrome has indeed moved to work the same on OS X but Safari is still using \"C3 B6\" as is all Windows browsers that I have tested.\n\nI have come to live with this over the years and then reported it as it was a sudden change in Firefox behaviour (and not intended like stated in comment 14).", "attachment_id": null, "tags": [], "time": "2017-08-17T13:25:17Z", "bug_id": 695995, "text": "Re-testing the original case again with Firefox 55.0.2 (64-bit) and the behaviour is as it was when reported. Chrome has indeed moved to work the same on OS X but Safari is still using \"C3 B6\" as is all Windows browsers that I have tested.\n\nI have come to live with this over the years and then reported it as it was a sudden change in Firefox behaviour (and not intended like stated in comment 14).", "author": "ari.rantalainen@kronodoc.com", "creation_time": "2017-08-17T13:25:17Z", "count": 27, "creator": "ari.rantalainen@kronodoc.com", "is_private": false}, {"count": 28, "is_private": false, "creator": "bsittler@gmail.com", "text": "I believe this may be the relevant part of that (now-ancient) Tech Note was this, quoting from the English version at https://developer.apple.com/legacy/library/technotes/tn/tn1150.html#CanonicalDecomposition :\n\n> The characters in the range u+F900 through u+FAFF are CJK compatibility ideographs, and are not decomposed in HFS Plus strings.\n\nThis does indeed reduce breakage (in comparison to NFC/NFD/NFKC/NFKD) for some characters used in Japanese names. You might be able to approximate its effect these days in script like this:\n\nconst betterCompose = str => str.replace(/[^\\uF900-\\uFAFF]+/u, s => s.normalize('NFC'));\n\nNote however that some of the characters in that range are visually indistinguishable from the characters with which normalization unifies them, and that this presence or absence of visual distinction furthermore varies both by locale and by font.", "bug_id": 695995, "time": "2017-12-09T05:00:41Z", "tags": [], "creation_time": "2017-12-09T05:00:41Z", "author": "bsittler@gmail.com", "raw_text": "I believe this may be the relevant part of that (now-ancient) Tech Note was this, quoting from the English version at https://developer.apple.com/legacy/library/technotes/tn/tn1150.html#CanonicalDecomposition :\n\n> The characters in the range u+F900 through u+FAFF are CJK compatibility ideographs, and are not decomposed in HFS Plus strings.\n\nThis does indeed reduce breakage (in comparison to NFC/NFD/NFKC/NFKD) for some characters used in Japanese names. You might be able to approximate its effect these days in script like this:\n\nconst betterCompose = str => str.replace(/[^\\uF900-\\uFAFF]+/u, s => s.normalize('NFC'));\n\nNote however that some of the characters in that range are visually indistinguishable from the characters with which normalization unifies them, and that this presence or absence of visual distinction furthermore varies both by locale and by font.", "attachment_id": null, "id": 12910582}, {"bug_id": 695995, "count": 29, "time": "2017-12-09T05:05:30Z", "tags": [], "text": "Oops! Missed the g when retyping that here:\n\nconst betterCompose = str => str.replace(/[^\\uF900-\\uFAFF]+/gu, s => s.normalize('NFC'));", "author": "bsittler@gmail.com", "creation_time": "2017-12-09T05:05:30Z", "creator": "bsittler@gmail.com", "is_private": false, "id": 12910588, "raw_text": "Oops! Missed the g when retyping that here:\n\nconst betterCompose = str => str.replace(/[^\\uF900-\\uFAFF]+/gu, s => s.normalize('NFC'));", "attachment_id": null}, {"bug_id": 695995, "count": 30, "author": "gijskruitbosch+bugs@gmail.com", "creation_time": "2020-08-24T09:36:30Z", "tags": [], "time": "2020-08-24T09:36:30Z", "text": "*** Bug 1656720 has been marked as a duplicate of this bug. ***", "creator": "gijskruitbosch+bugs@gmail.com", "is_private": false, "id": 15002636, "attachment_id": null, "raw_text": ""}]}}, "comments": {}}