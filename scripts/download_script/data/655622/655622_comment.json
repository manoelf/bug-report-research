{"bugs": {"655622": {"comments": [{"time": "2011-05-08T21:38:16Z", "is_private": false, "tags": [], "raw_text": "We should consider adding SpecialPowers to reftests. See bug 612214 comment 134.", "bug_id": 655622, "count": 0, "attachment_id": null, "id": 5456207, "creator": "jwatt@jwatt.org", "text": "We should consider adding SpecialPowers to reftests. See bug 612214 comment 134.", "author": "jwatt@jwatt.org", "creation_time": "2011-05-08T21:38:16Z"}, {"author": "dbaron@dbaron.org", "creator": "dbaron@dbaron.org", "count": 1, "bug_id": 655622, "time": "2011-05-08T23:53:45Z", "creation_time": "2011-05-08T23:53:45Z", "text": "My inclination has always been not to do this, because I want reftests to be largely something that can be used across browsers.", "id": 5456276, "attachment_id": null, "raw_text": "My inclination has always been not to do this, because I want reftests to be largely something that can be used across browsers.", "tags": [], "is_private": false}, {"count": 2, "raw_text": "I understand that, but currently that means that anything that wants privileges but a reftest-style test winds up as a chrome mochitest, which is not a great fit for reftest-style testing. It also means that the tests wind up not being usable across browsers anyway.\n\nWould you feel better if we added a reftest manifest flag to enable it on a test-by-test basis? Or if we split these tests off into another set of manifests and called them \"chrome reftests\" or something like that? (We could do that and have the entire set of tests be loaded from chrome:// URLs, obviating the need for SpecialPowers.)", "bug_id": 655622, "is_private": false, "tags": [], "time": "2011-05-09T11:49:05Z", "creation_time": "2011-05-09T11:49:05Z", "author": "ted@mielczarek.org", "attachment_id": null, "id": 5456751, "creator": "ted@mielczarek.org", "text": "I understand that, but currently that means that anything that wants privileges but a reftest-style test winds up as a chrome mochitest, which is not a great fit for reftest-style testing. It also means that the tests wind up not being usable across browsers anyway.\n\nWould you feel better if we added a reftest manifest flag to enable it on a test-by-test basis? Or if we split these tests off into another set of manifests and called them \"chrome reftests\" or something like that? (We could do that and have the entire set of tests be loaded from chrome:// URLs, obviating the need for SpecialPowers.)"}, {"text": "FWIW I talked to the Opera and IE guys on the SVG WG and they were for standardizing something like SpecialPowers so that we could share tests that need to do things that normal content can't. They even seemed positive about adding a pref or command line arg to turn it on in release builds (on a per domain basis) so that third parties could write/run tests and have transparency into the results in their respective implementations.", "creator": "jwatt@jwatt.org", "attachment_id": null, "id": 5456779, "author": "jwatt@jwatt.org", "creation_time": "2011-05-09T12:10:19Z", "time": "2011-05-09T12:10:19Z", "tags": [], "is_private": false, "bug_id": 655622, "raw_text": "FWIW I talked to the Opera and IE guys on the SVG WG and they were for standardizing something like SpecialPowers so that we could share tests that need to do things that normal content can't. They even seemed positive about adding a pref or command line arg to turn it on in release builds (on a per domain basis) so that third parties could write/run tests and have transparency into the results in their respective implementations.", "count": 3}, {"creation_time": "2011-05-09T15:53:28Z", "text": "I'd be a lot more comfortable with a limited set of special powers custom-designed for reftest (and which other browsers agree should be exposed) than with the large set we expose to mochitests.\n\n(In reply to comment #2)\n> I understand that, but currently that means that anything that wants\n> privileges but a reftest-style test winds up as a chrome mochitest, which is\n> not a great fit for reftest-style testing.\n\nI think saying \"anything\" here is too strong.  Some of the time, test authors realize that they don't actually need the special privilege to write the test, and they write the test another way.  My point is to encourage that.", "creator": "dbaron@dbaron.org", "attachment_id": null, "id": 5457202, "author": "dbaron@dbaron.org", "bug_id": 655622, "raw_text": "I'd be a lot more comfortable with a limited set of special powers custom-designed for reftest (and which other browsers agree should be exposed) than with the large set we expose to mochitests.\n\n(In reply to comment #2)\n> I understand that, but currently that means that anything that wants\n> privileges but a reftest-style test winds up as a chrome mochitest, which is\n> not a great fit for reftest-style testing.\n\nI think saying \"anything\" here is too strong.  Some of the time, test authors realize that they don't actually need the special privilege to write the test, and they write the test another way.  My point is to encourage that.", "count": 4, "time": "2011-05-09T15:53:28Z", "tags": [], "is_private": false}, {"raw_text": "I'd like to use SpecialPowers in a reftest to use DOMWindowUtils.sendMouseEvent() instead of Element.dispatchEvent(). As far as I can see we don't invoke PresShell::HandleEvent() by dispatchEvent().  A reftest I had been trying to write in bug 1381420 needs a call of FlushThrottledStyles() which is invoked inside PresShell::HandleEvent().", "tags": [], "is_private": false, "creation_time": "2017-07-26T01:04:30Z", "text": "I'd like to use SpecialPowers in a reftest to use DOMWindowUtils.sendMouseEvent() instead of Element.dispatchEvent(). As far as I can see we don't invoke PresShell::HandleEvent() by dispatchEvent().  A reftest I had been trying to write in bug 1381420 needs a call of FlushThrottledStyles() which is invoked inside PresShell::HandleEvent().", "id": 12506238, "attachment_id": null, "bug_id": 655622, "count": 5, "time": "2017-07-26T01:04:30Z", "creator": "hikezoe.birchill@mozilla.com", "author": "hikezoe.birchill@mozilla.com"}]}}, "comments": {}}