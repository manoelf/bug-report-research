{"bugs": {"624083": {"comments": [{"creator": "mrlint+bugzilla@gmail.com", "raw_text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: 3.1.8\n\nTB is eating the first 2 bytes of attachments that are appledouble encoded and the email contains encoded resource fork data. Saving or opening the attached file expresses this data loss. Emails that have appledouble data but no encoded resfork data decode the file correctly. Saving the mime coded file and doing an external decode produces a correct file.\n\nIf the email with 2 parts is forwarded, the temp files made in ~/Library/Caches/TemporaryItems, contains a properly decoded file of the main payload.\n\nThis is expressing itself as a consequences of mime encoded email of a MS word Doc made with Mac version 10 (which has resource fork data) send from a user using Lotus Notes 7. TB for windows ignores the apple data and correctly makes the decoded file.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Receive an email with a an appledouble encoded attachment.\n2. Attempt to open or save the attachment.\nActual Results:  \nIn the case of a word doc, the file is corrupt.\n\nExpected Results:  \nCorrectly decoded file\n\nIf the resoruce fork is manually removed form the file prior to sending ($ cp /dev/null foo5/rsrc), the file is decoded correctly with TB although there is still an applefile mime part, but it's contents are null.\n\nAgain the decoding used when forwarding makes 2 separate files and the main playload is decoded correctly.\n\nI am attempting to create a testing environment to duplicate the source to do further testing, however the saved file out of the main UI is 2 bytes short at the beginning of the main payload file. At this time I cannot tell if the data is put in the decoded resource portion or merely lost.", "attachment_id": null, "count": 0, "author": "mrlint+bugzilla@gmail.com", "is_private": false, "time": "2011-01-08T02:43:15Z", "creation_time": "2011-01-08T02:43:15Z", "id": 5184314, "bug_id": 624083, "tags": [], "text": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\nBuild Identifier: 3.1.8\n\nTB is eating the first 2 bytes of attachments that are appledouble encoded and the email contains encoded resource fork data. Saving or opening the attached file expresses this data loss. Emails that have appledouble data but no encoded resfork data decode the file correctly. Saving the mime coded file and doing an external decode produces a correct file.\n\nIf the email with 2 parts is forwarded, the temp files made in ~/Library/Caches/TemporaryItems, contains a properly decoded file of the main payload.\n\nThis is expressing itself as a consequences of mime encoded email of a MS word Doc made with Mac version 10 (which has resource fork data) send from a user using Lotus Notes 7. TB for windows ignores the apple data and correctly makes the decoded file.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Receive an email with a an appledouble encoded attachment.\n2. Attempt to open or save the attachment.\nActual Results:  \nIn the case of a word doc, the file is corrupt.\n\nExpected Results:  \nCorrectly decoded file\n\nIf the resoruce fork is manually removed form the file prior to sending ($ cp /dev/null foo5/rsrc), the file is decoded correctly with TB although there is still an applefile mime part, but it's contents are null.\n\nAgain the decoding used when forwarding makes 2 separate files and the main playload is decoded correctly.\n\nI am attempting to create a testing environment to duplicate the source to do further testing, however the saved file out of the main UI is 2 bytes short at the beginning of the main payload file. At this time I cannot tell if the data is put in the decoded resource portion or merely lost."}, {"text": "Can you provide us with a testcase email ?", "tags": [], "bug_id": 624083, "id": 5192977, "creation_time": "2011-01-12T09:04:17Z", "time": "2011-01-12T09:04:17Z", "is_private": false, "author": "ludovic@hirlimann.net", "count": 1, "attachment_id": null, "creator": "ludovic@hirlimann.net", "raw_text": "Can you provide us with a testcase email ?"}, {"bug_id": 624083, "text": "Created attachment 503174\nTest case for mime decoding issue\n\nThis (scrubbed) email file contains 3 plain text attachments:\ntext.txt, which contains a custom icon in the encoded resource fork\ntest1.txt, which has a small encoded resource fork but no icon\ntest2.txt, which contains no resource fork.\n\nIf these files are saved, you will see lots of extra data in them. The original data loss occurred on an MS Word doc. However I have generated text files as to start with a simpler case.", "time": "2011-01-12T16:54:51Z", "creation_time": "2011-01-12T16:54:51Z", "raw_text": "This (scrubbed) email file contains 3 plain text attachments:\ntext.txt, which contains a custom icon in the encoded resource fork\ntest1.txt, which has a small encoded resource fork but no icon\ntest2.txt, which contains no resource fork.\n\nIf these files are saved, you will see lots of extra data in them. The original data loss occurred on an MS Word doc. However I have generated text files as to start with a simpler case.", "creator": "mrlint+bugzilla@gmail.com", "attachment_id": 503174, "id": 5193680, "tags": [], "is_private": false, "count": 2, "author": "mrlint+bugzilla@gmail.com"}, {"author": "mrlint+bugzilla@gmail.com", "count": 3, "attachment_id": null, "raw_text": "So as an update, shredder 3.3a2pre is saving all the data into the 'data' fork of the file system. TB 3.1.7 is saving them ok. But this seems to be because they are text. I will be making a test case with a MS Word Doc as soon as possible.", "creator": "mrlint+bugzilla@gmail.com", "text": "So as an update, shredder 3.3a2pre is saving all the data into the 'data' fork of the file system. TB 3.1.7 is saving them ok. But this seems to be because they are text. I will be making a test case with a MS Word Doc as soon as possible.", "tags": [], "bug_id": 624083, "id": 5193705, "creation_time": "2011-01-12T17:01:23Z", "time": "2011-01-12T17:01:23Z", "is_private": false}, {"is_private": false, "id": 5194237, "tags": [], "count": 4, "author": "mrlint+bugzilla@gmail.com", "time": "2011-01-12T19:28:24Z", "creation_time": "2011-01-12T19:28:24Z", "bug_id": 624083, "text": "Created attachment 503236\nTest case with a MSO Doc file\n\nIn this case an attached MSO Doc file is attached. When saved in Windows, the file size of 23,040 bytes is retained. When saved on Mac OS X the file size is 23,324. However a hex dump of the datafork (Used by MS Word) shows that 2 bytes are missing from the head of the file, in the binary header of the file (D0CF).\n\nCoincidentally, D0CF, ends up as the last 2 bytes of the resource fork on the decoded file.", "attachment_id": 503236, "creator": "mrlint+bugzilla@gmail.com", "raw_text": "In this case an attached MSO Doc file is attached. When saved in Windows, the file size of 23,040 bytes is retained. When saved on Mac OS X the file size is 23,324. However a hex dump of the datafork (Used by MS Word) shows that 2 bytes are missing from the head of the file, in the binary header of the file (D0CF).\n\nCoincidentally, D0CF, ends up as the last 2 bytes of the resource fork on the decoded file."}, {"attachment_id": null, "raw_text": "If this is a regression, what was the last version it worked in?", "creator": "mozilla@davidbienvenu.org", "text": "If this is a regression, what was the last version it worked in?", "bug_id": 624083, "creation_time": "2011-01-13T16:19:03Z", "time": "2011-01-13T16:19:03Z", "author": "mozilla@davidbienvenu.org", "count": 5, "tags": [], "id": 5196760, "is_private": false}, {"author": "mrlint+bugzilla@gmail.com", "count": 6, "raw_text": "David, I'm sorry but I don't know if/when this ever worked. I am merely acting on a trouble ticket put in by one of my users. I've never experience this issue myself outside of direct attempts to make this occur. Post Mac OS 9, resource fork use has dropped significantly, and most email apps don't even encode it.", "creator": "mrlint+bugzilla@gmail.com", "attachment_id": null, "tags": [], "text": "David, I'm sorry but I don't know if/when this ever worked. I am merely acting on a trouble ticket put in by one of my users. I've never experience this issue myself outside of direct attempts to make this occur. Post Mac OS 9, resource fork use has dropped significantly, and most email apps don't even encode it.", "id": 5196834, "bug_id": 624083, "creation_time": "2011-01-13T16:42:31Z", "is_private": false, "time": "2011-01-13T16:42:31Z"}, {"count": 7, "author": "mozilla@davidbienvenu.org", "is_private": false, "id": 5196842, "tags": [], "attachment_id": null, "creator": "mozilla@davidbienvenu.org", "raw_text": "(In reply to comment #6)\n> David, I'm sorry but I don't know if/when this ever worked. I am merely acting\n> on a trouble ticket put in by one of my users. I've never experience this issue\n> myself outside of direct attempts to make this occur. Post Mac OS 9, resource\n> fork use has dropped significantly, and most email apps don't even encode it.\n\nThx, I think ludo marked it as a regression, so I was mainly asking him...", "time": "2011-01-13T16:43:53Z", "creation_time": "2011-01-13T16:43:53Z", "bug_id": 624083, "text": "(In reply to comment #6)\n> David, I'm sorry but I don't know if/when this ever worked. I am merely acting\n> on a trouble ticket put in by one of my users. I've never experience this issue\n> myself outside of direct attempts to make this occur. Post Mac OS 9, resource\n> fork use has dropped significantly, and most email apps don't even encode it.\n\nThx, I think ludo marked it as a regression, so I was mainly asking him..."}, {"count": 8, "author": "ludovic@hirlimann.net", "attachment_id": null, "raw_text": "I based that on shredder 3.3a2pre is saving all the data into the 'data' fork\nof the file system. TB 3.1.7 is saving them ok.", "creator": "ludovic@hirlimann.net", "bug_id": 624083, "id": 5196929, "text": "I based that on shredder 3.3a2pre is saving all the data into the 'data' fork\nof the file system. TB 3.1.7 is saving them ok.", "tags": [], "time": "2011-01-13T17:19:03Z", "is_private": false, "creation_time": "2011-01-13T17:19:03Z"}, {"attachment_id": null, "raw_text": "(In reply to comment #8)\n> I based that on shredder 3.3a2pre is saving all the data into the 'data' fork\n> of the file system. TB 3.1.7 is saving them ok.\n\nI think that's describing a different bug, but perhaps I'm just confused.", "creator": "mozilla@davidbienvenu.org", "count": 9, "author": "mozilla@davidbienvenu.org", "is_private": false, "time": "2011-01-13T17:22:19Z", "creation_time": "2011-01-13T17:22:19Z", "bug_id": 624083, "id": 5196936, "text": "(In reply to comment #8)\n> I based that on shredder 3.3a2pre is saving all the data into the 'data' fork\n> of the file system. TB 3.1.7 is saving them ok.\n\nI think that's describing a different bug, but perhaps I'm just confused.", "tags": []}, {"id": 5197227, "bug_id": 624083, "tags": [], "text": "(In reply to comment #8)\n> I based that on shredder 3.3a2pre is saving all the data into the 'data' fork\n> of the file system. TB 3.1.7 is saving them ok.\n\nOk, I went back over things, I will attempt to clarify.\n\nWith 3.1.7, using the word doc (2nd attachment) [sent with encoded resource fork data], causes a 2 byte shift from the datafork (file payload) to the resource fork (finder data), corrupting the MS Word binary header, effectively making it a file unopenable to MS Word.\n\nWith 3.3a2pre 2010113 using the word doc (2nd attachment) [sent with encoded resource fork data] everything is decoded into the payload file, resource and data. The MS word header starts 430 bytes in. (this amount will change based on the side of the encoded resource data. (i'll follow up more in a later reply. I actually have normal work I have to do. :)", "time": "2011-01-13T19:02:48Z", "is_private": false, "creation_time": "2011-01-13T19:02:48Z", "count": 10, "author": "mrlint+bugzilla@gmail.com", "raw_text": "(In reply to comment #8)\n> I based that on shredder 3.3a2pre is saving all the data into the 'data' fork\n> of the file system. TB 3.1.7 is saving them ok.\n\nOk, I went back over things, I will attempt to clarify.\n\nWith 3.1.7, using the word doc (2nd attachment) [sent with encoded resource fork data], causes a 2 byte shift from the datafork (file payload) to the resource fork (finder data), corrupting the MS Word binary header, effectively making it a file unopenable to MS Word.\n\nWith 3.3a2pre 2010113 using the word doc (2nd attachment) [sent with encoded resource fork data] everything is decoded into the payload file, resource and data. The MS word header starts 430 bytes in. (this amount will change based on the side of the encoded resource data. (i'll follow up more in a later reply. I actually have normal work I have to do. :)", "creator": "mrlint+bugzilla@gmail.com", "attachment_id": null}, {"bug_id": 624083, "id": 5457213, "text": "Not blocking on this at the current time.", "tags": [], "time": "2011-05-09T15:56:26Z", "is_private": false, "creation_time": "2011-05-09T15:56:26Z", "count": 11, "author": "standard8@mozilla.com", "attachment_id": null, "creator": "standard8@mozilla.com", "raw_text": "Not blocking on this at the current time."}, {"id": 7873822, "tags": [], "is_private": false, "count": 12, "author": "bugzilla2007@duellmann24.net", "bug_id": 624083, "text": "*** Bug 510893 has been marked as a duplicate of this bug. ***", "time": "2013-09-18T10:19:58Z", "creation_time": "2013-09-18T10:19:58Z", "attachment_id": null, "creator": "bugzilla2007@duellmann24.net", "raw_text": ""}]}}, "comments": {}}