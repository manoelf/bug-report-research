{"comments": {}, "bugs": {"686264": {"comments": [{"id": 5713729, "attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.30 (KHTML, like Gecko) Ubuntu/11.04 Chromium/12.0.742.112 Chrome/12.0.742.112 Safari/534.30\n\nSteps to reproduce:\n\nmake a page with following html\n#link must point to same host as one where the page is located\n\n<head>\n\t<base href=\"http://hostname/some/base/dir/\" />\n</head>\n<body>\n\t<a id=\"link\" href =\"http://hostname/test.html\">link</a>\n\t<div id=\"content\" contenteditable=\"true\">\n\t\t<div style=\"border: solid 1px black; width:300px; height:300px;\">  \n\t\t\tsome text\n\t\t</div>\n    </div>\n</body>\n\nopen page\nselect link containg \"link\" text with mouse\nclick copy in context menu\nclick into div with id=content\nclick paste from context menu\n\n\nActual results:\n\nhtml inside the div with content-editable=true contains \n\n<a href=\"../../../test.html\" _moz_dirty=\"\">link</a>\n\n\nExpected results:\n\nhtml inside the div with content-editable=true should contain\n\n<a href =\"http://hostname/test.html\">link</a>", "creation_time": "2011-09-12T04:44:35Z", "author": "hsalkaline@gmail.com", "text": "User Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.30 (KHTML, like Gecko) Ubuntu/11.04 Chromium/12.0.742.112 Chrome/12.0.742.112 Safari/534.30\n\nSteps to reproduce:\n\nmake a page with following html\n#link must point to same host as one where the page is located\n\n<head>\n\t<base href=\"http://hostname/some/base/dir/\" />\n</head>\n<body>\n\t<a id=\"link\" href =\"http://hostname/test.html\">link</a>\n\t<div id=\"content\" contenteditable=\"true\">\n\t\t<div style=\"border: solid 1px black; width:300px; height:300px;\">  \n\t\t\tsome text\n\t\t</div>\n    </div>\n</body>\n\nopen page\nselect link containg \"link\" text with mouse\nclick copy in context menu\nclick into div with id=content\nclick paste from context menu\n\n\nActual results:\n\nhtml inside the div with content-editable=true contains \n\n<a href=\"../../../test.html\" _moz_dirty=\"\">link</a>\n\n\nExpected results:\n\nhtml inside the div with content-editable=true should contain\n\n<a href =\"http://hostname/test.html\">link</a>", "bug_id": 686264, "tags": [], "time": "2011-09-12T04:44:35Z", "is_private": false, "creator": "hsalkaline@gmail.com", "count": 0}, {"count": 1, "bug_id": 686264, "attachment_id": null, "raw_text": "Alexey, which version of Firefox did you test this with?\n\nAryeh, this is probably something worth handling in the spec...", "id": 5714088, "is_private": false, "creator": "ehsan.akhgari@gmail.com", "creation_time": "2011-09-12T14:33:54Z", "author": "ehsan.akhgari@gmail.com", "text": "Alexey, which version of Firefox did you test this with?\n\nAryeh, this is probably something worth handling in the spec...", "time": "2011-09-12T14:33:54Z", "tags": []}, {"raw_text": "Currently the spec doesn't handle copy/paste at all.  I assume the right way to fix this would be that when you copy HTML, all URLs should be made absolute.  But it's nonstandard for now.", "attachment_id": null, "id": 5714561, "count": 2, "is_private": false, "creator": "ayg@aryeh.name", "text": "Currently the spec doesn't handle copy/paste at all.  I assume the right way to fix this would be that when you copy HTML, all URLs should be made absolute.  But it's nonstandard for now.", "bug_id": 686264, "tags": [], "time": "2011-09-12T20:51:48Z", "creation_time": "2011-09-12T20:51:48Z", "author": "ayg@aryeh.name"}, {"raw_text": "This is also an issue for the \"inserthtml\" command, so I think it needs to be specified in the spec.", "attachment_id": null, "id": 5714609, "creator": "ehsan.akhgari@gmail.com", "is_private": false, "time": "2011-09-12T21:26:44Z", "tags": [], "text": "This is also an issue for the \"inserthtml\" command, so I think it needs to be specified in the spec.", "author": "ehsan.akhgari@gmail.com", "creation_time": "2011-09-12T21:26:44Z", "count": 3, "bug_id": 686264}, {"count": 4, "bug_id": 686264, "attachment_id": null, "raw_text": "Firefox 5.0, Ubuntu 11.04", "id": 5714985, "is_private": false, "creator": "hsalkaline@gmail.com", "creation_time": "2011-09-13T03:32:30Z", "author": "hsalkaline@gmail.com", "text": "Firefox 5.0, Ubuntu 11.04", "time": "2011-09-13T03:32:30Z", "tags": []}, {"count": 5, "bug_id": 686264, "attachment_id": null, "raw_text": "I don't think the issue is with paste/insertHTML, it's with cut/copy.  By the time you get to paste or insertHTML, you don't know what the original page's URL was, so you can't do anything about relative URLs in attributes.  You want to resolve relative URLs at cut/copy time.\n\nAlso, my philosophy with insertHTML is that it should do only minimal cleanup.  I'm intending it to be used as a low-level tool for authors to insert exactly the markup they want.  I don't think it should do things like strip script tags, although I'll update the spec to require that if browsers actually do it in practice (do they?).", "id": 5715912, "creator": "ayg@aryeh.name", "is_private": false, "author": "ayg@aryeh.name", "creation_time": "2011-09-13T20:30:33Z", "time": "2011-09-13T20:30:33Z", "tags": [], "text": "I don't think the issue is with paste/insertHTML, it's with cut/copy.  By the time you get to paste or insertHTML, you don't know what the original page's URL was, so you can't do anything about relative URLs in attributes.  You want to resolve relative URLs at cut/copy time.\n\nAlso, my philosophy with insertHTML is that it should do only minimal cleanup.  I'm intending it to be used as a low-level tool for authors to insert exactly the markup they want.  I don't think it should do things like strip script tags, although I'll update the spec to require that if browsers actually do it in practice (do they?)."}, {"id": 5715962, "raw_text": "(In reply to Aryeh Gregor from comment #5)\n> I don't think the issue is with paste/insertHTML, it's with cut/copy.  By\n> the time you get to paste or insertHTML, you don't know what the original\n> page's URL was, so you can't do anything about relative URLs in attributes. \n> You want to resolve relative URLs at cut/copy time.\n\nThere is also the corresponding case of injecting relative URL hrefs, but I guess we can make it up to the authors to inject stuff which makes sense.  I agree that the situation with paste is a bit different since the web page author doesn't know a lot about what things are going to be pasted (except with the \"aftereditaction\" event...)\n\n> Also, my philosophy with insertHTML is that it should do only minimal\n> cleanup.  I'm intending it to be used as a low-level tool for authors to\n> insert exactly the markup they want.  I don't think it should do things like\n> strip script tags, although I'll update the spec to require that if browsers\n> actually do it in practice (do they?).\n\nGecko doesn't, and it doesn't really make sense to do so.  Any script using inserthtml to inject things like script tags can just set the innerHTML property and do that directly, so handling those stuff especially in the case of inserthtml is not useful.", "attachment_id": null, "bug_id": 686264, "tags": [], "time": "2011-09-13T21:00:06Z", "text": "(In reply to Aryeh Gregor from comment #5)\n> I don't think the issue is with paste/insertHTML, it's with cut/copy.  By\n> the time you get to paste or insertHTML, you don't know what the original\n> page's URL was, so you can't do anything about relative URLs in attributes. \n> You want to resolve relative URLs at cut/copy time.\n\nThere is also the corresponding case of injecting relative URL hrefs, but I guess we can make it up to the authors to inject stuff which makes sense.  I agree that the situation with paste is a bit different since the web page author doesn't know a lot about what things are going to be pasted (except with the \"aftereditaction\" event...)\n\n> Also, my philosophy with insertHTML is that it should do only minimal\n> cleanup.  I'm intending it to be used as a low-level tool for authors to\n> insert exactly the markup they want.  I don't think it should do things like\n> strip script tags, although I'll update the spec to require that if browsers\n> actually do it in practice (do they?).\n\nGecko doesn't, and it doesn't really make sense to do so.  Any script using inserthtml to inject things like script tags can just set the innerHTML property and do that directly, so handling those stuff especially in the case of inserthtml is not useful.", "author": "ehsan.akhgari@gmail.com", "creation_time": "2011-09-13T21:00:06Z", "count": 6, "creator": "ehsan.akhgari@gmail.com", "is_private": false}, {"creator": "jstutte@mozilla.com", "is_private": false, "count": 7, "author": "jstutte@mozilla.com", "creation_time": "2020-12-15T07:14:59Z", "tags": [], "time": "2020-12-15T07:14:59Z", "bug_id": 686264, "text": "Bulk-downgrade of unassigned, >=5 years untouched DOM/Storage bugs' priority and severity.\n\nIf you have reason to believe this is wrong, please write a comment and ni :jstutte.", "attachment_id": null, "raw_text": "Bulk-downgrade of unassigned, >=5 years untouched DOM/Storage bugs' priority and severity.\n\nIf you have reason to believe this is wrong, please write a comment and ni :jstutte.", "id": 15175624}]}}}