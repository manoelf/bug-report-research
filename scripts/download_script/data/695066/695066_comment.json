{"comments": {}, "bugs": {"695066": {"comments": [{"creator": "brian@briansmith.org", "author": "brian@briansmith.org", "is_private": false, "count": 0, "tags": [], "id": 5786830, "bug_id": 695066, "raw_text": "Right now, we silently ignore unsuccessful attempts to load CSS, Javascript, and other subresources. Should we have some indication that the subresources failed to load and/or why? Should we automatically retry to load subresources in certain error conditions (e.g. failure to connect and/or a truncated or corrupted response)?\n\nUntil recently, we would show a modal dialog box in the event that an SSL-specific error caused us to fail to load a subresource. Bug 682329 removed this dialog box, so that SSL-related errors are treated like other networking errors.", "creation_time": "2011-10-17T18:15:29Z", "text": "Right now, we silently ignore unsuccessful attempts to load CSS, Javascript, and other subresources. Should we have some indication that the subresources failed to load and/or why? Should we automatically retry to load subresources in certain error conditions (e.g. failure to connect and/or a truncated or corrupted response)?\n\nUntil recently, we would show a modal dialog box in the event that an SSL-specific error caused us to fail to load a subresource. Bug 682329 removed this dialog box, so that SSL-related errors are treated like other networking errors.", "attachment_id": null, "time": "2011-10-17T18:15:29Z"}, {"raw_text": "As I have spotted, Chrome shows an error in the content in place of the resource - a nice frame with the chrome icon and text: \"resource failed to load because blah blah\".  That is a perfect and pretty logical way to show an error for both developers AND common users.  We should have something like that too, not just for the main page but for iframes, images with respect to dimensions of an object on the rendered page.  Error dialogs are for common users useless - there is no context a dialog is bound to, so no one probably knows where from the error comes and what has actually failed.\n\nNot sure what to do for resources non-visible in the content like CSS/JS.  IE 6 to 8 used to show an /!\\ icon in status bar telling the user that something went wrong.  It used to be displayed almost every time because almost all sites were broken.  So not much information.\n\nAny current browser (IE9,Chrome) don't have an identification that some hidden subresource were not loaded.", "creation_time": "2011-10-17T21:13:17Z", "text": "As I have spotted, Chrome shows an error in the content in place of the resource - a nice frame with the chrome icon and text: \"resource failed to load because blah blah\".  That is a perfect and pretty logical way to show an error for both developers AND common users.  We should have something like that too, not just for the main page but for iframes, images with respect to dimensions of an object on the rendered page.  Error dialogs are for common users useless - there is no context a dialog is bound to, so no one probably knows where from the error comes and what has actually failed.\n\nNot sure what to do for resources non-visible in the content like CSS/JS.  IE 6 to 8 used to show an /!\\ icon in status bar telling the user that something went wrong.  It used to be displayed almost every time because almost all sites were broken.  So not much information.\n\nAny current browser (IE9,Chrome) don't have an identification that some hidden subresource were not loaded.", "attachment_id": null, "time": "2011-10-17T21:13:17Z", "is_private": false, "count": 1, "tags": [], "id": 5787396, "bug_id": 695066, "creator": "honzab.moz@firemni.cz", "author": "honzab.moz@firemni.cz"}, {"text": "This sounds like a good thing to fix.  I'm having trouble finding a place to reproduce the problem, though: Brian or Honza, do you have a link with failing resources to use as a test here?", "attachment_id": null, "time": "2012-01-20T23:30:27Z", "raw_text": "This sounds like a good thing to fix.  I'm having trouble finding a place to reproduce the problem, though: Brian or Honza, do you have a link with failing resources to use as a test here?", "creation_time": "2012-01-20T23:30:27Z", "bug_id": 695066, "tags": [], "count": 2, "is_private": false, "id": 5997098, "creator": "jboriss@mozilla.com", "author": "jboriss@mozilla.com"}, {"author": "brian@briansmith.org", "creator": "brian@briansmith.org", "raw_text": "Jennifer, it is not hard to generate test cases. Just create a normal, valid HTML document, and then add one of:\n\n   <img src='http://example.org/this-is-going-to-return-404.html'/>\n\nor:\n\n   <script src='http://host-without-DNS-entries.org/'>\n\nor:\n\n   <link rel='stylesheet'\n         type='text/css'\n         href='http://example.org/this-is-going-to-return-404.html'/>\n\nor\n   <!-- Note: https://amazon.com will give a cert error, because\n              https://amazon.com uses a cert that is only valid\n              for http://amazon.com -->\n   <link rel='stylesheet' type='text/css'\n         type='text/css'\n         href='https://amazon.com/asdf'/>\n\nor whatever.\n\nPrior to the patch that was already checked in for bug 682329, we would show a modal dialog box in the last case (cert error on subresource). Now, we just silently hide the cert error (and don't load any resource), like we do for any other network error. You can see the difference here between Firefox 8 and Nightly.\n\nIMO, it is probably the case that the best UX is for us to try harder to get the resource. For example, right now, we only try to fetch an image once. If that fails because of a network error, we're like \"Shucks, we tried. Oh well.\" But, probably we should automatically retry, e.g. after flushing DNS or checking for captive portals, etc. But, this gets complicated because of DOM events that are supposed to be fired only in certain circumstances; somebody on the content team could probably explain why there would be difficulty there.\n\nAt a minimum, we need to report network/SSL/cert failures to the error console. Currently, we log some, but not all, failures. I don't know if being more comprehensive here will be sufficient for web devs, or if we should have special UI in our web dev tools or regular UI for showing this.\n\nCaptive portals are a big cause of failures to load resources and sub-resources. See bug 562917.", "creation_time": "2012-01-22T04:53:01Z", "attachment_id": null, "time": "2012-01-22T04:53:01Z", "text": "Jennifer, it is not hard to generate test cases. Just create a normal, valid HTML document, and then add one of:\n\n   <img src='http://example.org/this-is-going-to-return-404.html'/>\n\nor:\n\n   <script src='http://host-without-DNS-entries.org/'>\n\nor:\n\n   <link rel='stylesheet'\n         type='text/css'\n         href='http://example.org/this-is-going-to-return-404.html'/>\n\nor\n   <!-- Note: https://amazon.com will give a cert error, because\n              https://amazon.com uses a cert that is only valid\n              for http://amazon.com -->\n   <link rel='stylesheet' type='text/css'\n         type='text/css'\n         href='https://amazon.com/asdf'/>\n\nor whatever.\n\nPrior to the patch that was already checked in for bug 682329, we would show a modal dialog box in the last case (cert error on subresource). Now, we just silently hide the cert error (and don't load any resource), like we do for any other network error. You can see the difference here between Firefox 8 and Nightly.\n\nIMO, it is probably the case that the best UX is for us to try harder to get the resource. For example, right now, we only try to fetch an image once. If that fails because of a network error, we're like \"Shucks, we tried. Oh well.\" But, probably we should automatically retry, e.g. after flushing DNS or checking for captive portals, etc. But, this gets complicated because of DOM events that are supposed to be fired only in certain circumstances; somebody on the content team could probably explain why there would be difficulty there.\n\nAt a minimum, we need to report network/SSL/cert failures to the error console. Currently, we log some, but not all, failures. I don't know if being more comprehensive here will be sufficient for web devs, or if we should have special UI in our web dev tools or regular UI for showing this.\n\nCaptive portals are a big cause of failures to load resources and sub-resources. See bug 562917.", "id": 5998762, "count": 3, "is_private": false, "tags": [], "bug_id": 695066}, {"creator": "kaie@kuix.de", "author": "kaie@kuix.de", "bug_id": 695066, "tags": [], "count": 4, "is_private": false, "id": 6012145, "text": "This bug touches two different reasons why we don't load a subresource:\n\n- we can't load it (it's offline)\n\n- we don't want to load it (because it's insecure)\n\nThe latter is\nhttps://wiki.mozilla.org/Security/Features/Mixed_Content_Blocker\nand bug 62178.\n\nWhich may involve UI like\n  \"we currently don't load things because they are insecure,\n   and we hide them by default\"\n\nand there is an additional state like\n  \"we currently DO load things, because the user has requested so,\n   please note that this override is active and the page\n   shows some of such insecure content\".\n\nI don't know how you are going to implement the better user experience,\nbut if you're going to include a status indicator, it's probably a three state thing:\n- no insecure stuff used on page (e.g. sub-resource indicator absent)\n- insecure stuff shown\n- insecure stuff blocked\n\nIf you want to indicate \"some resources offline\",\nin my thinking that would be a completely separate indicator,\nand any combination of \"secure/blocked/shown\" and \"offline\" is possible.", "time": "2012-01-26T20:28:41Z", "attachment_id": null, "raw_text": "This bug touches two different reasons why we don't load a subresource:\n\n- we can't load it (it's offline)\n\n- we don't want to load it (because it's insecure)\n\nThe latter is\nhttps://wiki.mozilla.org/Security/Features/Mixed_Content_Blocker\nand bug 62178.\n\nWhich may involve UI like\n  \"we currently don't load things because they are insecure,\n   and we hide them by default\"\n\nand there is an additional state like\n  \"we currently DO load things, because the user has requested so,\n   please note that this override is active and the page\n   shows some of such insecure content\".\n\nI don't know how you are going to implement the better user experience,\nbut if you're going to include a status indicator, it's probably a three state thing:\n- no insecure stuff used on page (e.g. sub-resource indicator absent)\n- insecure stuff shown\n- insecure stuff blocked\n\nIf you want to indicate \"some resources offline\",\nin my thinking that would be a completely separate indicator,\nand any combination of \"secure/blocked/shown\" and \"offline\" is possible.", "creation_time": "2012-01-26T20:28:41Z"}, {"time": "2012-01-26T22:42:40Z", "attachment_id": null, "author": "brian@briansmith.org", "text": "(In reply to Kai Engert (:kaie) from comment #4)\n> - we don't want to load it (because it's insecure)\n> \n> The latter is\n> https://wiki.mozilla.org/Security/Features/Mixed_Content_Blocker\n> and bug 62178.\n\nBug 62178 is one reason that the resource isn't loaded due to being insecure (HTTP content in an HTTPS page). However, there are other reasons--e.g. the resource's certificate is untrusted, there was a problem with the SSL handshake (e.g. strict renegotiation extension support is enabled and the server doesn't support the renegotiation extension), etc. Some of these blur the line between \"we can't load it\" and \"it's not secure (enough).\"", "creator": "brian@briansmith.org", "creation_time": "2012-01-26T22:42:40Z", "raw_text": "(In reply to Kai Engert (:kaie) from comment #4)\n> - we don't want to load it (because it's insecure)\n> \n> The latter is\n> https://wiki.mozilla.org/Security/Features/Mixed_Content_Blocker\n> and bug 62178.\n\nBug 62178 is one reason that the resource isn't loaded due to being insecure (HTTP content in an HTTPS page). However, there are other reasons--e.g. the resource's certificate is untrusted, there was a problem with the SSL handshake (e.g. strict renegotiation extension support is enabled and the server doesn't support the renegotiation extension), etc. Some of these blur the line between \"we can't load it\" and \"it's not secure (enough).\"", "bug_id": 695066, "id": 6012665, "count": 5, "is_private": false, "tags": []}, {"bug_id": 695066, "id": 6212680, "tags": [], "count": 6, "is_private": false, "time": "2012-04-11T01:37:37Z", "attachment_id": null, "text": "Jennifer, I propose that we add a stopgap solution for this soon in Firefox for security errors (e.g. SSL certificate errors), using a solution similar to the one that Limi approved of in bug 62178 comment 147 for a very related class of errors, as follows:\n\nWhen a page loads successfully, but some sub-resources of the page are blocked because of a cert- or SSL-related error, show an infobar that says something along the lines of \"Some parts of this page were blocked for security reasons. [Technical details].\" Clicking on the \"More Info\" button would show the specific error messages, e.g.:\n\n\"These parts of the page were blocked due to error SEC_ERROR_UNTRUSTED_ISSUER:\n\n     https://images.self-signed-site.com/image1.png\n     https://whatever.self-signed-site.com/foo.css\"\n\n These parts of the page were blocked due to error SEC_ERROR_WHATEVER:\n\n     https://adnetwork.com/tracking-pixel.png\"\n\nThe idea here is that we don't spend too much effort feeding the user a bunch of jargon that attempts to explain the problem to them, but we make it possible for them to copy/paste something that they can send to their IT person and/or to the website author and/or to us. This is similar to the approach that Microsoft has taken for kernel-level errors (BSOD) in Windows 8; they say something like \"Error 0x01230323. Search on the internet for that number for more information.\"\n\nAgain, this would just be a stopgap solution that would let the security and PSM teams move forward with some security changes that are seen as being urgent, without silently failing to load parts of pages. We suspect (but haven't verified) that these types of errors will be very rare, but they cause very confusing behavior when we do not show any notification for them.\n\nAnyway, I am open for suggestions. I actually think we can do a lot better than this, long-term, but we (security people) are hoping that we can put together *some* kind of solution in time for the Firefox 14 release, as we've already checked in some compatibility-breaking change in Firefox 14 that will induce such failed sub-resource loads.", "raw_text": "Jennifer, I propose that we add a stopgap solution for this soon in Firefox for security errors (e.g. SSL certificate errors), using a solution similar to the one that Limi approved of in bug 62178 comment 147 for a very related class of errors, as follows:\n\nWhen a page loads successfully, but some sub-resources of the page are blocked because of a cert- or SSL-related error, show an infobar that says something along the lines of \"Some parts of this page were blocked for security reasons. [Technical details].\" Clicking on the \"More Info\" button would show the specific error messages, e.g.:\n\n\"These parts of the page were blocked due to error SEC_ERROR_UNTRUSTED_ISSUER:\n\n     https://images.self-signed-site.com/image1.png\n     https://whatever.self-signed-site.com/foo.css\"\n\n These parts of the page were blocked due to error SEC_ERROR_WHATEVER:\n\n     https://adnetwork.com/tracking-pixel.png\"\n\nThe idea here is that we don't spend too much effort feeding the user a bunch of jargon that attempts to explain the problem to them, but we make it possible for them to copy/paste something that they can send to their IT person and/or to the website author and/or to us. This is similar to the approach that Microsoft has taken for kernel-level errors (BSOD) in Windows 8; they say something like \"Error 0x01230323. Search on the internet for that number for more information.\"\n\nAgain, this would just be a stopgap solution that would let the security and PSM teams move forward with some security changes that are seen as being urgent, without silently failing to load parts of pages. We suspect (but haven't verified) that these types of errors will be very rare, but they cause very confusing behavior when we do not show any notification for them.\n\nAnyway, I am open for suggestions. I actually think we can do a lot better than this, long-term, but we (security people) are hoping that we can put together *some* kind of solution in time for the Firefox 14 release, as we've already checked in some compatibility-breaking change in Firefox 14 that will induce such failed sub-resource loads.", "creation_time": "2012-04-11T01:37:37Z", "author": "brian@briansmith.org", "creator": "brian@briansmith.org"}, {"raw_text": "", "creation_time": "2012-05-14T17:39:14Z", "attachment_id": null, "time": "2012-05-14T17:39:14Z", "text": "*** Bug 749525 has been marked as a duplicate of this bug. ***", "id": 6305652, "tags": [], "count": 7, "is_private": false, "bug_id": 695066, "author": "brian@briansmith.org", "creator": "brian@briansmith.org"}, {"author": "bug-husbandry-bot@mozilla.bugs", "creator": "bug-husbandry-bot@mozilla.bugs", "creation_time": "2017-09-13T18:38:21Z", "raw_text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "attachment_id": null, "time": "2017-09-13T18:38:21Z", "text": "Bulk change to priority: https://bugzilla.mozilla.org/show_bug.cgi?id=1399258", "id": 12658499, "is_private": false, "count": 8, "tags": [], "bug_id": 695066}]}}}