{"bugs": {"361804": {"comments": [{"is_private": false, "creation_time": "2006-11-25T08:39:05Z", "time": "2006-11-25T08:39:05Z", "creator": "trent.nospam@telus.net", "attachment_id": null, "raw_text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0\nBuild Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0\n\nThis is a really odd bug.  The nodes do actually get found, but this error occurs when I try and call element.insertBefore() in javascript.  I've printed out the attributes for the refElement, thereby proving that it is actually getting the element, yet insertBefore() still complains.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Click the \"Add Comment\" link.\n\nActual Results:  \nan error appears in the console as follows...\nError: uncaught exception: [Exception... \"Node was not found\"  code: \"8\" nsresult: \"0x80530008 (NS_ERROR_DOM_NOT_FOUND_ERR)\"  location: \"file:///C:/Documents%20and%20Settings/trenta/Desktop/temp/APL%20Dispatcher.html Line: 46\"]\n\nExpected Results:  \nA comment TR/TD/form/input should be added.  In the case where the file is named Something.xhtml, it works just fine.\n\nBelow is the w3c validated proof XHTML.  Save it as a .xhtml on the first try, and you will see that it works.  Save it as .html on the second try, and you will find that it does not work.  I would expect the browser to be getting the DOCTYPE from the DOCTYPE declaration, not the file extension.\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html\n     PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n     \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n    <title>Example Broken</title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n\n    <script type=\"text/javascript\">\nfunction addComment(commentRowID, jobTableID)\n{\n    var commentTR;\n    var jobTable;\n    var newTR;\n    var newTD;\n    var newForm;\n    var input;\n    jobTable = document.getElementById(jobTableID);\n    newTR = document.createElement(\"tr\");\n\n    newForm = document.createElement(\"form\");\n\n    input = document.createElement(\"input\");\n    input.name = \"something\";\n    input.value =\"enter your comment here\";\n    input.type = \"text\";\n    input.className = \"realtime_box\";\n    input.maxlength = \"255\";\n    input.size = \"50\";\n    newForm.appendChild(input)\n\n    newTD = document.createElement(\"td\");\n    newTD.colSpan = '4';\n    newTD.appendChild(newForm);\n    newTR.appendChild(newTD);\n    newTD = document.createElement(\"td\");\n    newTR.appendChild(newTD);\n\n//    jobTable.replaceChild(newTR, commentTR);\n//    jobTable.appendChild(newTR);\n//    alert (commentTR.id);\n//    commentTR.display = \"none\";\n//    jobTable.removeChild(commentTR);\n    commentTR = document.getElementById(commentRowID);\n    jobTable.insertBefore(newTR, commentTR);\n//    alert(jobTable.lastChild);\n//    newTR = commentTR.cloneNode(true);\n//    newTR.id = undefined;\n//    jobTable.removeChild(commentTR);\n//    jobTable.appendChild(newTR);\n//    jobTable.appendChild(commentTR);\n}\n    </script>\n    \n  </head>\n<body>\n  <table class=\"special\" id=\"job_328\">\n    <tr id=\"last_328\" class=\"comments print_hidden\">\n      \n      <td colspan=\"4\" class=\"comment_list\" align=\"center\">\n\n        <a href=\"javascript:addComment('last_328', 'job_328');\">Add Comment</a>\n      </td>\n    </tr>\n  </table>\n</body>\n\n</html>", "bug_id": 361804, "tags": [], "text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0\nBuild Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0\n\nThis is a really odd bug.  The nodes do actually get found, but this error occurs when I try and call element.insertBefore() in javascript.  I've printed out the attributes for the refElement, thereby proving that it is actually getting the element, yet insertBefore() still complains.\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Click the \"Add Comment\" link.\n\nActual Results:  \nan error appears in the console as follows...\nError: uncaught exception: [Exception... \"Node was not found\"  code: \"8\" nsresult: \"0x80530008 (NS_ERROR_DOM_NOT_FOUND_ERR)\"  location: \"file:///C:/Documents%20and%20Settings/trenta/Desktop/temp/APL%20Dispatcher.html Line: 46\"]\n\nExpected Results:  \nA comment TR/TD/form/input should be added.  In the case where the file is named Something.xhtml, it works just fine.\n\nBelow is the w3c validated proof XHTML.  Save it as a .xhtml on the first try, and you will see that it works.  Save it as .html on the second try, and you will find that it does not work.  I would expect the browser to be getting the DOCTYPE from the DOCTYPE declaration, not the file extension.\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html\n     PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n     \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n    <title>Example Broken</title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n\n    <script type=\"text/javascript\">\nfunction addComment(commentRowID, jobTableID)\n{\n    var commentTR;\n    var jobTable;\n    var newTR;\n    var newTD;\n    var newForm;\n    var input;\n    jobTable = document.getElementById(jobTableID);\n    newTR = document.createElement(\"tr\");\n\n    newForm = document.createElement(\"form\");\n\n    input = document.createElement(\"input\");\n    input.name = \"something\";\n    input.value =\"enter your comment here\";\n    input.type = \"text\";\n    input.className = \"realtime_box\";\n    input.maxlength = \"255\";\n    input.size = \"50\";\n    newForm.appendChild(input)\n\n    newTD = document.createElement(\"td\");\n    newTD.colSpan = '4';\n    newTD.appendChild(newForm);\n    newTR.appendChild(newTD);\n    newTD = document.createElement(\"td\");\n    newTR.appendChild(newTD);\n\n//    jobTable.replaceChild(newTR, commentTR);\n//    jobTable.appendChild(newTR);\n//    alert (commentTR.id);\n//    commentTR.display = \"none\";\n//    jobTable.removeChild(commentTR);\n    commentTR = document.getElementById(commentRowID);\n    jobTable.insertBefore(newTR, commentTR);\n//    alert(jobTable.lastChild);\n//    newTR = commentTR.cloneNode(true);\n//    newTR.id = undefined;\n//    jobTable.removeChild(commentTR);\n//    jobTable.appendChild(newTR);\n//    jobTable.appendChild(commentTR);\n}\n    </script>\n    \n  </head>\n<body>\n  <table class=\"special\" id=\"job_328\">\n    <tr id=\"last_328\" class=\"comments print_hidden\">\n      \n      <td colspan=\"4\" class=\"comment_list\" align=\"center\">\n\n        <a href=\"javascript:addComment('last_328', 'job_328');\">Add Comment</a>\n      </td>\n    </tr>\n  </table>\n</body>\n\n</html>", "author": "trent.nospam@telus.net", "id": 3045602, "count": 0}, {"creation_time": "2006-11-25T08:55:58Z", "time": "2006-11-25T08:55:58Z", "raw_text": "Works for me when I set the .html as application/xhtml+xml on the web server.\nI think the mimetype overriding the doctype is correct behaviour.", "creator": "mardeg@inbox.ru", "attachment_id": null, "is_private": false, "count": 1, "id": 3045605, "tags": [], "bug_id": 361804, "author": "mardeg@inbox.ru", "text": "Works for me when I set the .html as application/xhtml+xml on the web server.\nI think the mimetype overriding the doctype is correct behaviour."}, {"text": "Oh, that's a possibility.  I always assumed that the DOCTYPE was the be all end all of the document type.  Hmmm.\n\nAhhh, if that's the case, I guess I have to set my own content-type.  Because this is what it is setting...\nContent-Type: text/html\n\nSorry about that.\n\n(In reply to comment #1)\n> Works for me when I set the .html as application/xhtml+xml on the web server.\n> I think the mimetype overriding the doctype is correct behaviour.\n> \n\n", "author": "trent.nospam@telus.net", "bug_id": 361804, "tags": [], "id": 3045769, "count": 2, "is_private": false, "attachment_id": null, "creator": "trent.nospam@telus.net", "raw_text": "Oh, that's a possibility.  I always assumed that the DOCTYPE was the be all end all of the document type.  Hmmm.\n\nAhhh, if that's the case, I guess I have to set my own content-type.  Because this is what it is setting...\nContent-Type: text/html\n\nSorry about that.\n\n(In reply to comment #1)\n> Works for me when I set the .html as application/xhtml+xml on the web server.\n> I think the mimetype overriding the doctype is correct behaviour.\n> \n\n", "time": "2006-11-25T17:50:42Z", "creation_time": "2006-11-25T17:50:42Z"}, {"raw_text": "Marking as invalid per comment 2, assuming someone understands why the insertBefore call fails when the document is sent as text/html.  (My guess is that when the document is sent as text/html, the parser adds a TBODY element between the TABLE and TR elements, making it so the TR isn't a direct child of the TABLE.)", "creator": "jruderman@gmail.com", "attachment_id": null, "creation_time": "2006-11-25T19:30:16Z", "time": "2006-11-25T19:30:16Z", "is_private": false, "count": 3, "id": 3045819, "author": "jruderman@gmail.com", "text": "Marking as invalid per comment 2, assuming someone understands why the insertBefore call fails when the document is sent as text/html.  (My guess is that when the document is sent as text/html, the parser adds a TBODY element between the TABLE and TR elements, making it so the TR isn't a direct child of the TABLE.)", "tags": [], "bug_id": 361804}, {"tags": [], "is_private": false, "bug_id": 361804, "author": "trent.nospam@telus.net", "text": "Very good guess.  Yes, it was adding a tbody, and it is now working, since I put in the correct content-type header.", "count": 4, "time": "2006-11-25T19:36:23Z", "creation_time": "2006-11-25T19:36:23Z", "id": 3045824, "raw_text": "Very good guess.  Yes, it was adding a tbody, and it is now working, since I put in the correct content-type header.", "attachment_id": null, "creator": "trent.nospam@telus.net"}]}}, "comments": {}}