{"bugs": {"659841": {"comments": [{"count": 0, "id": 5494056, "is_private": false, "creation_time": "2011-05-26T01:56:33Z", "time": "2011-05-26T01:56:33Z", "creator": "jd.bugzilla@gmail.com", "author": "jd.bugzilla@gmail.com", "attachment_id": null, "raw_text": "Bug 642589 enabled prefs for specifying Cleartype rendering parameters.  However, they are not picked up along all codepaths.  It appears that calling DrawWindow on a non-opaque (i.e. default) canvas ignores these parameter settings when rendering.\n\nSteps:\n\n1. Download the linked testcase (it needs privs to use DrawWindow)\n2. Run latest trunk\n3. Set 'gfx.font_rendering.cleartype_params.enhanced_contrast' to 800\n4. Restart the browser\n5. Open the local copy of the linked testcase\n\nResult: the rendering shown in the iframe and the image copy produced via DrawWindow show different Cleartype parameter settings, the copy appears to be using system defaults.\n\nNote: setting moz-opaque=\"true\" on the canvas element fixes the problem.\n\nMy guess is that we simply missed a codepath in bug 642589.", "tags": [], "bug_id": 659841, "text": "Bug 642589 enabled prefs for specifying Cleartype rendering parameters.  However, they are not picked up along all codepaths.  It appears that calling DrawWindow on a non-opaque (i.e. default) canvas ignores these parameter settings when rendering.\n\nSteps:\n\n1. Download the linked testcase (it needs privs to use DrawWindow)\n2. Run latest trunk\n3. Set 'gfx.font_rendering.cleartype_params.enhanced_contrast' to 800\n4. Restart the browser\n5. Open the local copy of the linked testcase\n\nResult: the rendering shown in the iframe and the image copy produced via DrawWindow show different Cleartype parameter settings, the copy appears to be using system defaults.\n\nNote: setting moz-opaque=\"true\" on the canvas element fixes the problem.\n\nMy guess is that we simply missed a codepath in bug 642589."}, {"attachment_id": null, "raw_text": "This is deliberate. A canvas is an RGBA buffer, and you can't store component alpha text in that buffer, so we disable subpixel AA for canvas text.", "tags": [], "text": "This is deliberate. A canvas is an RGBA buffer, and you can't store component alpha text in that buffer, so we disable subpixel AA for canvas text.", "bug_id": 659841, "count": 1, "id": 5494115, "is_private": false, "time": "2011-05-26T02:43:39Z", "creation_time": "2011-05-26T02:43:39Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org"}, {"tags": [], "text": "We could try to render with component alpha where the canvas pixels are already opaque, but that's hard and potentially confusing. moz-opaque seems to be an acceptable workaround. I suggest we WONTFIX this.", "bug_id": 659841, "attachment_id": null, "raw_text": "We could try to render with component alpha where the canvas pixels are already opaque, but that's hard and potentially confusing. moz-opaque seems to be an acceptable workaround. I suggest we WONTFIX this.", "time": "2011-05-26T03:00:53Z", "creation_time": "2011-05-26T03:00:53Z", "creator": "roc@ocallahan.org", "author": "roc@ocallahan.org", "count": 2, "id": 5494131, "is_private": false}, {"tags": [], "text": "Created attachment 535262\nscreenshot with enhanced_contrast set to 800\n\n(In reply to comment #1)\n> This is deliberate. A canvas is an RGBA buffer, and you can't store\n> component alpha text in that buffer, so we disable subpixel AA for canvas\n> text.\n\nThe issue here is how DrawWindow works, not how Canvas text API's function.  The attached screenshot shows that there is clearly subpixel AA text rendered in the DrawWindow case, just not subpixel AA text that respects the Cleartype parameters.  I suggest we figure out the cause for this, then decide whether to WONTFIX it.", "bug_id": 659841, "raw_text": "(In reply to comment #1)\n> This is deliberate. A canvas is an RGBA buffer, and you can't store\n> component alpha text in that buffer, so we disable subpixel AA for canvas\n> text.\n\nThe issue here is how DrawWindow works, not how Canvas text API's function.  The attached screenshot shows that there is clearly subpixel AA text rendered in the DrawWindow case, just not subpixel AA text that respects the Cleartype parameters.  I suggest we figure out the cause for this, then decide whether to WONTFIX it.", "attachment_id": 535262, "author": "jd.bugzilla@gmail.com", "creator": "jd.bugzilla@gmail.com", "creation_time": "2011-05-26T03:52:50Z", "time": "2011-05-26T03:52:50Z", "is_private": false, "count": 3, "id": 5494193}, {"tags": [], "bug_id": 659841, "text": "Ah, sorry. Fair enough.", "raw_text": "Ah, sorry. Fair enough.", "attachment_id": null, "author": "roc@ocallahan.org", "creator": "roc@ocallahan.org", "creation_time": "2011-05-26T04:00:48Z", "time": "2011-05-26T04:00:48Z", "is_private": false, "count": 4, "id": 5494198}]}}, "comments": {}}