{"comments": {}, "bugs": {"628352": {"comments": [{"creator": "daniel.baulig@gmx.de", "attachment_id": null, "id": 5222805, "text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/8.0.552.237 Safari/534.10\nBuild Identifier: 4.0b9\n\nIt seems like there's a problem with the destination-over composition method. When using drawImage to draw the content of a larger canvas into a smaller canvas source-over (default composition method) will scale much better thatn destination-over will. Eg if I have a 2000x2000 px canvas and draw it into a 1000x1000 px canvas (resulting in scaling by 50%) both composition methods will perform roughly equal. If I scale the source canvas up to 4000x4000 pixels the source-over composition method will not change in performance, destination-over though will collapse horrendously in performance.\nI suspect a bug in destination-over composition, something like doing composition BEFORE scaling the source image down.\n\nThis assymetric performance drop will not happen in Chromium.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Open Demonstration URL\n2.Note the FPS counter. source-over composition is used.\n3.Click the Canvas to switch to destination-over composition.\nActual Results:  \nFPS will drop roughly _to_ 5% (at least that's what the number on my machine)\n\nExpected Results:  \nFPS should not drop _by_ more than 10%. That's roughly what happens in Chromium.\n\nIf you reduce the buffer Canvas size to 3000x3000 or even 2000x2000 px (do so by downloading and modifying the source of the demonstration site) the performance difference beweetn source-over and destination-over will decrease. That's why I suspect a bug in how each composition method handles rescaling of the larger canvas when drawing it into the smaller canvas. Composition algorithms should all be of linear complexity. They should scale roughly the same.", "raw_text": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/8.0.552.237 Safari/534.10\nBuild Identifier: 4.0b9\n\nIt seems like there's a problem with the destination-over composition method. When using drawImage to draw the content of a larger canvas into a smaller canvas source-over (default composition method) will scale much better thatn destination-over will. Eg if I have a 2000x2000 px canvas and draw it into a 1000x1000 px canvas (resulting in scaling by 50%) both composition methods will perform roughly equal. If I scale the source canvas up to 4000x4000 pixels the source-over composition method will not change in performance, destination-over though will collapse horrendously in performance.\nI suspect a bug in destination-over composition, something like doing composition BEFORE scaling the source image down.\n\nThis assymetric performance drop will not happen in Chromium.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Open Demonstration URL\n2.Note the FPS counter. source-over composition is used.\n3.Click the Canvas to switch to destination-over composition.\nActual Results:  \nFPS will drop roughly _to_ 5% (at least that's what the number on my machine)\n\nExpected Results:  \nFPS should not drop _by_ more than 10%. That's roughly what happens in Chromium.\n\nIf you reduce the buffer Canvas size to 3000x3000 or even 2000x2000 px (do so by downloading and modifying the source of the demonstration site) the performance difference beweetn source-over and destination-over will decrease. That's why I suspect a bug in how each composition method handles rescaling of the larger canvas when drawing it into the smaller canvas. Composition algorithms should all be of linear complexity. They should scale roughly the same.", "bug_id": 628352, "is_private": false, "tags": [], "count": 0, "creation_time": "2011-01-24T20:39:14Z", "author": "daniel.baulig@gmx.de", "time": "2011-01-24T20:39:14Z"}]}}}