{"comments": {}, "bugs": {"643781": {"comments": [{"attachment_id": 520937, "is_private": false, "time": "2011-03-22T16:25:38Z", "author": "dao+bmo@mozilla.com", "creation_time": "2011-03-22T16:25:38Z", "text": "Created attachment 520937\ntestcase\n\nLine heights are often larger when using hardware acceleration, letting Firefox be the odd one out. This seems like a significant obstacle for web designers. All other browsers seem to use consistent vertical metrics, including hardware-accelerated IE9.", "id": 5359998, "raw_text": "Line heights are often larger when using hardware acceleration, letting Firefox be the odd one out. This seems like a significant obstacle for web designers. All other browsers seem to use consistent vertical metrics, including hardware-accelerated IE9.", "creator": "dao+bmo@mozilla.com", "count": 0, "tags": [], "bug_id": 643781}, {"text": "Created attachment 520939\nscreenshots: Firefox with HW accel on / off / IE9 with HW accel on", "creation_time": "2011-03-22T16:27:44Z", "raw_text": "", "id": 5360000, "bug_id": 643781, "tags": [], "count": 1, "creator": "dao+bmo@mozilla.com", "author": "dao+bmo@mozilla.com", "is_private": false, "time": "2011-03-22T16:27:44Z", "attachment_id": 520939}, {"author": "matthieu.rivaud+bmo@gmail.com", "attachment_id": null, "raw_text": "FWIW, this has already been discussed in bugs #601152 and #628601. I think it would be better to mimic IE9 behaviour here and compensate, but I wholeheartedly agree that no web developer should rely on fixed/consistent font-metrics across platforms (and this is without taking font install base discrepancies into account) ...", "id": 5362199, "text": "FWIW, this has already been discussed in bugs #601152 and #628601. I think it would be better to mimic IE9 behaviour here and compensate, but I wholeheartedly agree that no web developer should rely on fixed/consistent font-metrics across platforms (and this is without taking font install base discrepancies into account) ...", "is_private": false, "creation_time": "2011-03-23T12:35:24Z", "bug_id": 643781, "count": 2, "time": "2011-03-23T12:35:24Z", "tags": [], "creator": "matthieu.rivaud+bmo@gmail.com"}, {"attachment_id": null, "time": "2011-03-24T04:11:07Z", "is_private": false, "author": "karlt@mozbugz.karlt.net", "count": 3, "tags": [], "creator": "karlt@mozbugz.karlt.net", "bug_id": 643781, "id": 5365022, "raw_text": "Reading http://msdn.microsoft.com/en-us/library/dd368074%28v=vs.85%29.aspx\nand gfxDWriteFont::ComputeMetrics() leaves me a little confused.\n\nThe descriptions of DWRITE_FONT_METRICS::ascent/descent/lineGap make them sound like TypoAscender/TypoDescender/TypoLineGap in the OS/2 table.\nhttp://www.microsoft.com/typography/otspec/os2.htm\n\nIf that is the case, the line heights calculated in gfxDWriteFont::ComputeMetrics() should be <= those calculated for a gfxGDIFont\n(in the limit as size increases - see below).\n\nHowever, gfxDWriteFont assigns the DWRITE_FONT_METRICS::ascent/descent (values that I would expect to closely correspond to gfxFont::Metrics::emAscent/emDescent) to gfxFont::Metrics::maxAscent/maxDescent, values to which gfxGDIFont has historically assigned WinAscent/WinDescent.\n(This should not affect line-height; it just makes me wonder which metrics these DWRITE_FONT_METRICS really are.)\n\nThe other key difference is that gfxDWriteFont rounds *up* each of maxAscent/maxDescent/externalLeading (independently), which could increase line height by up to 3 pixels, depending on exactly what formula GDI used.\nDoes the difference reduce at larger font sizes?", "creation_time": "2011-03-24T04:11:07Z", "text": "Reading http://msdn.microsoft.com/en-us/library/dd368074%28v=vs.85%29.aspx\nand gfxDWriteFont::ComputeMetrics() leaves me a little confused.\n\nThe descriptions of DWRITE_FONT_METRICS::ascent/descent/lineGap make them sound like TypoAscender/TypoDescender/TypoLineGap in the OS/2 table.\nhttp://www.microsoft.com/typography/otspec/os2.htm\n\nIf that is the case, the line heights calculated in gfxDWriteFont::ComputeMetrics() should be <= those calculated for a gfxGDIFont\n(in the limit as size increases - see below).\n\nHowever, gfxDWriteFont assigns the DWRITE_FONT_METRICS::ascent/descent (values that I would expect to closely correspond to gfxFont::Metrics::emAscent/emDescent) to gfxFont::Metrics::maxAscent/maxDescent, values to which gfxGDIFont has historically assigned WinAscent/WinDescent.\n(This should not affect line-height; it just makes me wonder which metrics these DWRITE_FONT_METRICS really are.)\n\nThe other key difference is that gfxDWriteFont rounds *up* each of maxAscent/maxDescent/externalLeading (independently), which could increase line height by up to 3 pixels, depending on exactly what formula GDI used.\nDoes the difference reduce at larger font sizes?"}, {"attachment_id": null, "is_private": false, "time": "2011-03-28T13:22:16Z", "author": "dao+bmo@mozilla.com", "text": "(In reply to comment #3)\n> The other key difference is that gfxDWriteFont rounds *up* each of\n> maxAscent/maxDescent/externalLeading (independently), which could increase line\n> height by up to 3 pixels, depending on exactly what formula GDI used.\n> Does the difference reduce at larger font sizes?\n\nI changed the font size from 20 to 50, the difference in height of the colored boxes remains 2px.", "creation_time": "2011-03-28T13:22:16Z", "raw_text": "(In reply to comment #3)\n> The other key difference is that gfxDWriteFont rounds *up* each of\n> maxAscent/maxDescent/externalLeading (independently), which could increase line\n> height by up to 3 pixels, depending on exactly what formula GDI used.\n> Does the difference reduce at larger font sizes?\n\nI changed the font size from 20 to 50, the difference in height of the colored boxes remains 2px.", "id": 5374058, "bug_id": 643781, "count": 4, "creator": "dao+bmo@mozilla.com", "tags": []}, {"attachment_id": null, "is_private": false, "time": "2011-03-31T11:04:03Z", "author": "killing@multiplay.co.uk", "creation_time": "2011-03-31T11:04:03Z", "text": "Related bug:\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=628601\n\nThis really needs fixing, you cant expect designers to specify a line-height for every single use of font-size :(", "id": 5382872, "raw_text": "Related bug:\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=628601\n\nThis really needs fixing, you cant expect designers to specify a line-height for every single use of font-size :(", "count": 5, "creator": "killing@multiplay.co.uk", "tags": [], "bug_id": 643781}, {"text": "Uh... why do they need to specify a line-height at all?", "creation_time": "2011-03-31T13:24:26Z", "raw_text": "Uh... why do they need to specify a line-height at all?", "id": 5383081, "bug_id": 643781, "creator": "bzbarsky@mit.edu", "tags": [], "count": 6, "author": "bzbarsky@mit.edu", "is_private": false, "time": "2011-03-31T13:24:26Z", "attachment_id": null}, {"text": "They wouldn't normally specify a line-height; doing so is the obvious workaround for this bug.", "creation_time": "2011-03-31T13:39:31Z", "is_private": false, "raw_text": "They wouldn't normally specify a line-height; doing so is the obvious workaround for this bug.", "id": 5383106, "bug_id": 643781, "count": 7, "creator": "dao+bmo@mozilla.com", "tags": [], "time": "2011-03-31T13:39:31Z", "author": "dao+bmo@mozilla.com", "attachment_id": null}, {"creator": "killing@multiplay.co.uk", "count": 8, "time": "2011-03-31T14:01:54Z", "tags": [], "bug_id": 643781, "creation_time": "2011-03-31T14:01:54Z", "is_private": false, "text": "Could this be done in the useragent css making it compatible with previous versions?", "id": 5383143, "raw_text": "Could this be done in the useragent css making it compatible with previous versions?", "attachment_id": null, "author": "killing@multiplay.co.uk"}, {"attachment_id": null, "time": "2011-03-31T14:19:19Z", "is_private": false, "author": "bzbarsky@mit.edu", "bug_id": 643781, "count": 9, "creator": "bzbarsky@mit.edu", "tags": [], "text": "No.  The UA style is \"line-height: normal\"; the exact ratio of line-height to font-size then depends on the font in use.", "creation_time": "2011-03-31T14:19:19Z", "raw_text": "No.  The UA style is \"line-height: normal\"; the exact ratio of line-height to font-size then depends on the font in use.", "id": 5383168}, {"creation_time": "2011-03-31T15:02:10Z", "text": "But that's exactly the point its not based on the font, its based on the font + render and as the renderer has been changed its caused this issue, the font is not changing here.\n\nNot sure if its feasible / practical / workable but something like \"normal\" = 1.1em or something like that then at least its predictable, which is the main issue.", "id": 5383254, "raw_text": "But that's exactly the point its not based on the font, its based on the font + render and as the renderer has been changed its caused this issue, the font is not changing here.\n\nNot sure if its feasible / practical / workable but something like \"normal\" = 1.1em or something like that then at least its predictable, which is the main issue.", "creator": "killing@multiplay.co.uk", "tags": [], "count": 10, "bug_id": 643781, "author": "killing@multiplay.co.uk", "is_private": false, "time": "2011-03-31T15:02:10Z", "attachment_id": null}, {"attachment_id": null, "is_private": false, "time": "2011-04-19T22:17:48Z", "author": "dbaron@dbaron.org", "text": "Is this only an issue with 'line-height: normal', or is there also a difference between GDI and DirectWrite with line-height: 1.2 or 1.0?\n\nAlso, which of the GDI or DirectWrite behavior is more similar to what happens on other platforms (using the same font)?", "creation_time": "2011-04-19T22:17:48Z", "raw_text": "Is this only an issue with 'line-height: normal', or is there also a difference between GDI and DirectWrite with line-height: 1.2 or 1.0?\n\nAlso, which of the GDI or DirectWrite behavior is more similar to what happens on other platforms (using the same font)?", "id": 5419848, "bug_id": 643781, "creator": "dbaron@dbaron.org", "count": 11, "tags": []}, {"author": "dbaron@dbaron.org", "attachment_id": null, "bug_id": 643781, "count": 12, "time": "2011-04-19T22:26:01Z", "tags": [], "creator": "dbaron@dbaron.org", "raw_text": "(discussed in triage meeting)\n\nThis is something we shipped in 4, and I don't see enough here to say that we wouldn't pull from aurora to beta without a fix for this.\n\nBut more data (e.g., answers to my previous comment) might change that.  Please renominate if you think there's information that should cause us to reconsider.", "id": 5419885, "text": "(discussed in triage meeting)\n\nThis is something we shipped in 4, and I don't see enough here to say that we wouldn't pull from aurora to beta without a fix for this.\n\nBut more data (e.g., answers to my previous comment) might change that.  Please renominate if you think there's information that should cause us to reconsider.", "creation_time": "2011-04-19T22:26:01Z", "is_private": false}, {"bug_id": 643781, "tags": [], "count": 13, "time": "2011-05-11T04:48:49Z", "creator": "the.decryptor@gmail.com", "text": "It's only an issue with line-height: normal, every other value is consistent (Doesn't line-height use font-size for it's measurement? so \"normal\" would use the font metrics but any other value will be a multiple of the specified font-size?)\n\nAnd the rendering with DirectWrite matches the rendering on OS X at least, so this has always been \"broken\" in that regard.", "creation_time": "2011-05-11T04:48:49Z", "is_private": false, "raw_text": "It's only an issue with line-height: normal, every other value is consistent (Doesn't line-height use font-size for it's measurement? so \"normal\" would use the font metrics but any other value will be a multiple of the specified font-size?)\n\nAnd the rendering with DirectWrite matches the rendering on OS X at least, so this has always been \"broken\" in that regard.", "id": 5461836, "author": "the.decryptor@gmail.com", "attachment_id": null}, {"count": 14, "creator": "karlt@mozbugz.karlt.net", "tags": [], "bug_id": 643781, "creation_time": "2011-05-18T01:12:47Z", "text": "Regressed\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=523d0f8e0926&tochange=6bdb8153b671\n\nMost likely the rounding changes in\nhttp://hg.mozilla.org/mozilla-central/rev/4365eabf7fb0", "id": 5476256, "raw_text": "Regressed\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=523d0f8e0926&tochange=6bdb8153b671\n\nMost likely the rounding changes in\nhttp://hg.mozilla.org/mozilla-central/rev/4365eabf7fb0", "author": "karlt@mozbugz.karlt.net", "time": "2011-05-18T01:12:47Z", "is_private": false, "attachment_id": null}, {"raw_text": "(In reply to comment #3)\n> The descriptions of DWRITE_FONT_METRICS::ascent/descent/lineGap make them\n> sound like TypoAscender/TypoDescender/TypoLineGap in the OS/2 table.\n> http://www.microsoft.com/typography/otspec/os2.htm\n\nThey only reflect OS/2 typo metrics when the USE_TYPO_METRICS bit in fsSelection is set to say \"it is strongly recommended to use OS/2.sTypoAscender - OS/2.sTypoDescender+ OS/2.sTypoLineGap as a value for default line spacing for this font.\"\nhttp://www.microsoft.com/typography/otspec/os2.htm#fss\n\nWhen that bit is not set (and it is not set for Tahoma) DWrite seems to be using a legacy compatibility mode where ascent and descent come from winAscent/winDescent (same as GDI) and line height comes from the hhea metrics, apparently applying a minimum of 0 to lineGap (consistent with GDI).", "id": 5476291, "text": "(In reply to comment #3)\n> The descriptions of DWRITE_FONT_METRICS::ascent/descent/lineGap make them\n> sound like TypoAscender/TypoDescender/TypoLineGap in the OS/2 table.\n> http://www.microsoft.com/typography/otspec/os2.htm\n\nThey only reflect OS/2 typo metrics when the USE_TYPO_METRICS bit in fsSelection is set to say \"it is strongly recommended to use OS/2.sTypoAscender - OS/2.sTypoDescender+ OS/2.sTypoLineGap as a value for default line spacing for this font.\"\nhttp://www.microsoft.com/typography/otspec/os2.htm#fss\n\nWhen that bit is not set (and it is not set for Tahoma) DWrite seems to be using a legacy compatibility mode where ascent and descent come from winAscent/winDescent (same as GDI) and line height comes from the hhea metrics, apparently applying a minimum of 0 to lineGap (consistent with GDI).", "is_private": false, "creation_time": "2011-05-18T01:47:06Z", "bug_id": 643781, "tags": [], "count": 15, "time": "2011-05-18T01:47:06Z", "creator": "karlt@mozbugz.karlt.net", "author": "karlt@mozbugz.karlt.net", "attachment_id": null}, {"author": "karlt@mozbugz.karlt.net", "attachment_id": null, "text": "I added a patch to bug 657864 to correct rounding when the line-height comes from the font line-height metrics.  That doesn't help this bug because the line-height comes from the ascent and descent metrics.\n\nI see two possible ways to fix this bug:\n\n1. Round maxAscent/Descent to nearest pixel (instead of rounding up), or\n\n2. Let the line-height be smaller than maxAscent + maxDescent.\n\n   To avoid regressing bug 548964, ComputeDescentLimitForSelectionUnderline\n   should be modified to limit to the line-height rather than the maxDescent.\n   http://hg.mozilla.org/mozilla-central/annotate/eb3239a968ac/layout/generic/nsTextFrameThebes.cpp#l4449\n\nBoth approaches are quite reasonable in my opinion.\nA possible complication with approach 1 is that some overflow of glyphs outside the ascent/descent may cause rendering turds.  (The overloading of layout metrics and glyph bounding boxes is unfortunate.)\n\nI've spent more time on this than expected, which is more than I should right now, so I may not get back to this soon.", "creation_time": "2011-05-18T05:28:50Z", "is_private": false, "raw_text": "I added a patch to bug 657864 to correct rounding when the line-height comes from the font line-height metrics.  That doesn't help this bug because the line-height comes from the ascent and descent metrics.\n\nI see two possible ways to fix this bug:\n\n1. Round maxAscent/Descent to nearest pixel (instead of rounding up), or\n\n2. Let the line-height be smaller than maxAscent + maxDescent.\n\n   To avoid regressing bug 548964, ComputeDescentLimitForSelectionUnderline\n   should be modified to limit to the line-height rather than the maxDescent.\n   http://hg.mozilla.org/mozilla-central/annotate/eb3239a968ac/layout/generic/nsTextFrameThebes.cpp#l4449\n\nBoth approaches are quite reasonable in my opinion.\nA possible complication with approach 1 is that some overflow of glyphs outside the ascent/descent may cause rendering turds.  (The overloading of layout metrics and glyph bounding boxes is unfortunate.)\n\nI've spent more time on this than expected, which is more than I should right now, so I may not get back to this soon.", "id": 5476486, "bug_id": 643781, "time": "2011-05-18T05:28:50Z", "count": 16, "creator": "karlt@mozbugz.karlt.net", "tags": []}, {"author": "karlt@mozbugz.karlt.net", "attachment_id": null, "bug_id": 643781, "time": "2011-05-22T21:47:44Z", "tags": [], "count": 17, "creator": "karlt@mozbugz.karlt.net", "raw_text": "Our quirky behavior (even when not in quirks mode) where line-heights are increased to maxAscent + maxDescent (only) when line-height is \"normal\" may cause problems for text areas when they calculate their height from a line-height is less than maxAscent + maxDescent.\n\nhttp://hg.mozilla.org/mozilla-central/annotate/f5dbf215f9ea/layout/generic/nsLineLayout.cpp#l1954", "id": 5485519, "text": "Our quirky behavior (even when not in quirks mode) where line-heights are increased to maxAscent + maxDescent (only) when line-height is \"normal\" may cause problems for text areas when they calculate their height from a line-height is less than maxAscent + maxDescent.\n\nhttp://hg.mozilla.org/mozilla-central/annotate/f5dbf215f9ea/layout/generic/nsLineLayout.cpp#l1954", "is_private": false, "creation_time": "2011-05-22T21:47:44Z"}, {"author": "karlt@mozbugz.karlt.net", "bug_id": 643781, "tags": [], "count": 18, "creator": "karlt@mozbugz.karlt.net", "text": "I expect we could safely round maxAscent/Descent to nearest when it is greater than the line-height (which would show as zero lineGap in DWRITE_FONT_METRICS).\nIn this situation, ascent/descent most likely come from winAscent/winDescent, which is often overly generous.\n\nWe could continue to round up when maxAscent + maxDescent is less than the line height.  In this situation ascent/descent most likely come from typo metrics and could do with a bit of padding to include taller glyphs and to make text selection backgrounds and caret appear as expected.", "creation_time": "2011-06-02T01:06:27Z", "raw_text": "I expect we could safely round maxAscent/Descent to nearest when it is greater than the line-height (which would show as zero lineGap in DWRITE_FONT_METRICS).\nIn this situation, ascent/descent most likely come from winAscent/winDescent, which is often overly generous.\n\nWe could continue to round up when maxAscent + maxDescent is less than the line height.  In this situation ascent/descent most likely come from typo metrics and could do with a bit of padding to include taller glyphs and to make text selection backgrounds and caret appear as expected.", "id": 5507837, "attachment_id": null, "time": "2011-06-02T01:06:27Z", "is_private": false}, {"creation_time": "2012-04-06T11:41:50Z", "is_private": false, "text": "Hi Karl et al.\n\nI don't quite understand some of your remarks here, but they are familiar.  Let me put in my 2 cents.\n\nDo not do any calculation of line height and spacing based on the placement of glyphs in the font (or maxAscent/maxDescent).  It is purely wrong to do so: you will screw up display of many fonts that way.  (If you're worried about turds, clip -- dont' mess with metrics.)\n\nThe font designer has the metrics and (perhaps na\u00efvely) expects them to be adhered to.\n\nThe 'OS/2' usWinAscent/usWinDescent describe *clipping* regions (see the TrueType Reference Manual).  They ought not to have anything to do with line height.  This is made very clear in the OpenType specs.\n\nThe disparity between the specs and the usual implementation, especially on Windows, is an old problem.  Unfortunately on Windows, many apps take the usWin* metrics as line height metrics.  As you pointed out, the USE_TYPO_METRICS bit was intended to resolve this: if that is set, there should be no question.  The line height and clipping regions are clear.\n\nIn case USE_TYPO_METRICS isn't set, and the other metrics are inconsistent, there are various ad-hoc recommendations.  It's unfortunate.\n\nIn no case use should the positions of the glyphs in the font be consulted in these calculations, however.", "id": 6203365, "raw_text": "Hi Karl et al.\n\nI don't quite understand some of your remarks here, but they are familiar.  Let me put in my 2 cents.\n\nDo not do any calculation of line height and spacing based on the placement of glyphs in the font (or maxAscent/maxDescent).  It is purely wrong to do so: you will screw up display of many fonts that way.  (If you're worried about turds, clip -- dont' mess with metrics.)\n\nThe font designer has the metrics and (perhaps na\u00efvely) expects them to be adhered to.\n\nThe 'OS/2' usWinAscent/usWinDescent describe *clipping* regions (see the TrueType Reference Manual).  They ought not to have anything to do with line height.  This is made very clear in the OpenType specs.\n\nThe disparity between the specs and the usual implementation, especially on Windows, is an old problem.  Unfortunately on Windows, many apps take the usWin* metrics as line height metrics.  As you pointed out, the USE_TYPO_METRICS bit was intended to resolve this: if that is set, there should be no question.  The line height and clipping regions are clear.\n\nIn case USE_TYPO_METRICS isn't set, and the other metrics are inconsistent, there are various ad-hoc recommendations.  It's unfortunate.\n\nIn no case use should the positions of the glyphs in the font be consulted in these calculations, however.", "time": "2012-04-06T11:41:50Z", "tags": [], "creator": "Stevan_White@hotmail.com", "count": 19, "bug_id": 643781, "attachment_id": null, "author": "Stevan_White@hotmail.com"}, {"author": "jfkthame@gmail.com", "attachment_id": 8369396, "raw_text": "This is based on the WIP patch from bug 598900. It switches us to using the same 'sfnt' metrics (where available) on GDI and Mac, and incorporates similar rounding to the DWrite patch. With this, the line-height test works consistently across platforms, and the Cambria Math problem from bug 598900 is also resolved.", "id": 8364845, "text": "Created attachment 8369396\nuse more consistent and properly-rounded line-height metrics for GDI and Mac font backends.\n\nThis is based on the WIP patch from bug 598900. It switches us to using the same 'sfnt' metrics (where available) on GDI and Mac, and incorporates similar rounding to the DWrite patch. With this, the line-height test works consistently across platforms, and the Cambria Math problem from bug 598900 is also resolved.", "is_private": false, "creation_time": "2014-02-03T14:01:08Z", "bug_id": 643781, "time": "2014-02-03T14:01:08Z", "count": 20, "tags": [], "creator": "jfkthame@gmail.com"}, {"attachment_id": 8369396, "time": "2014-02-03T14:04:34Z", "is_private": false, "author": "jfkthame@gmail.com", "bug_id": 643781, "creator": "jfkthame@gmail.com", "count": 21, "tags": [], "text": "Comment on attachment 8369396\nuse more consistent and properly-rounded line-height metrics for GDI and Mac font backends.\n\nOops, wrong bug - meant to attach that patch to 657864.", "creation_time": "2014-02-03T14:04:34Z", "raw_text": "Oops, wrong bug - meant to attach that patch to 657864.", "id": 8364863}, {"text": "Created attachment 8369403\nbe more careful about rounding metrics so as to preserve line-heights  * *\n\nHere's the DWrite patch, rebased to trunk; this is the only piece relevant to Win8/Metro.", "creation_time": "2014-02-03T14:10:19Z", "raw_text": "Here's the DWrite patch, rebased to trunk; this is the only piece relevant to Win8/Metro.", "id": 8364894, "bug_id": 643781, "count": 22, "tags": [], "creator": "jfkthame@gmail.com", "author": "jfkthame@gmail.com", "is_private": false, "time": "2014-02-03T14:10:19Z", "attachment_id": 8369403}, {"bug_id": 643781, "count": 23, "time": "2014-02-03T14:18:17Z", "creator": "jfkthame@gmail.com", "tags": [], "raw_text": "Wrong again :( - moved to bug 657864.", "id": 8364924, "text": "Comment on attachment 8369403\nbe more careful about rounding metrics so as to preserve line-heights  * *\n\nWrong again :( - moved to bug 657864.", "is_private": false, "creation_time": "2014-02-03T14:18:17Z", "author": "jfkthame@gmail.com", "attachment_id": 8369403}, {"author": "jfkthame@gmail.com", "raw_text": "", "id": 8866689, "text": "*** Bug 1018225 has been marked as a duplicate of this bug. ***", "creation_time": "2014-05-30T23:01:06Z", "bug_id": 643781, "tags": [], "creator": "jfkthame@gmail.com", "count": 24, "attachment_id": null, "is_private": false, "time": "2014-05-30T23:01:06Z"}, {"is_private": false, "time": "2014-06-22T17:45:05Z", "attachment_id": null, "text": "I just wanted to note that DirectWrite is currently set to be enabled by default in Chrome 37[1], and so far it doesn't show the same line-height issues as Firefox.\nAt least I haven't noticed any problems on sites and testcases which are problematic with Firefox.\n\n[1] http://www.chromestatus.com/features/4725550652325888", "creation_time": "2014-06-22T17:45:05Z", "raw_text": "I just wanted to note that DirectWrite is currently set to be enabled by default in Chrome 37[1], and so far it doesn't show the same line-height issues as Firefox.\nAt least I haven't noticed any problems on sites and testcases which are problematic with Firefox.\n\n[1] http://www.chromestatus.com/features/4725550652325888", "id": 8962257, "bug_id": 643781, "tags": [], "creator": "elbart@gmx.de", "count": 25, "author": "elbart@gmx.de"}, {"text": "*** Bug 1205724 has been marked as a duplicate of this bug. ***", "creation_time": "2015-09-17T21:56:13Z", "raw_text": "", "id": 10744986, "bug_id": 643781, "count": 26, "tags": [], "creator": "arni2033@yandex.ru", "author": "arni2033@yandex.ru", "is_private": false, "time": "2015-09-17T21:56:13Z", "attachment_id": null}, {"attachment_id": null, "author": "sledru@mozilla.com", "time": "2018-10-15T08:36:01Z", "count": 27, "creator": "sledru@mozilla.com", "tags": ["spam"], "bug_id": 643781, "creation_time": "2018-10-15T08:36:01Z", "is_private": false, "text": "No assignee, updating the status.", "id": 13685161, "raw_text": "No assignee, updating the status."}, {"id": 13685481, "raw_text": "No assignee, updating the status.", "is_private": false, "creation_time": "2018-10-15T08:40:26Z", "text": "No assignee, updating the status.", "tags": ["spam"], "time": "2018-10-15T08:40:26Z", "creator": "sledru@mozilla.com", "count": 28, "bug_id": 643781, "attachment_id": null, "author": "sledru@mozilla.com"}, {"bug_id": 643781, "count": 29, "creator": "sledru@mozilla.com", "tags": ["spam"], "time": "2018-10-15T08:43:05Z", "raw_text": "No assignee, updating the status.", "id": 13685836, "text": "No assignee, updating the status.", "creation_time": "2018-10-15T08:43:05Z", "is_private": false, "author": "sledru@mozilla.com", "attachment_id": null}]}}}