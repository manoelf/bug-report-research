{"bugs": {"646987": {"comments": [{"attachment_id": null, "time": "2011-03-31T21:19:55Z", "is_private": false, "author": "azakai@mozilla.com", "count": 0, "tags": [], "creator": "azakai@mozilla.com", "bug_id": 646987, "creation_time": "2011-03-31T21:19:55Z", "text": "The test in bug 641198 works, but is at risk of causing oranges, and takes 1 second to run. We should write a better test, especially if the test does start to orange (but even if not), see bz's direction in bug 641198 comment 24 for details.", "id": 5384504, "raw_text": "The test in bug 641198 works, but is at risk of causing oranges, and takes 1 second to run. We should write a better test, especially if the test does start to orange (but even if not), see bz's direction in bug 641198 comment 24 for details."}, {"is_private": false, "time": "2011-04-21T17:14:00Z", "attachment_id": null, "text": "Looks like we did actually get an orange for that test. However it isn't the orange I was expecting, the image shown is blank (was expecting one of the previous frames to be shown). So my guess is a problem happened and no rendering was done (before we did the comparison). That might be easier to prevent than a more general fix.", "creation_time": "2011-04-21T17:14:00Z", "raw_text": "Looks like we did actually get an orange for that test. However it isn't the orange I was expecting, the image shown is blank (was expecting one of the previous frames to be shown). So my guess is a problem happened and no rendering was done (before we did the comparison). That might be easier to prevent than a more general fix.", "id": 5424316, "bug_id": 646987, "creator": "azakai@mozilla.com", "tags": [], "count": 1, "author": "azakai@mozilla.com"}, {"time": "2011-04-25T21:42:46Z", "is_private": false, "attachment_id": null, "count": 2, "creator": "dholbert@mozilla.com", "tags": [], "bug_id": 646987, "creation_time": "2011-04-25T21:42:46Z", "text": "For reference -- see the test patch in bug 649440 for an implementation of bz's direction in bug 641198 comment 24, in a different test.", "id": 5430349, "raw_text": "For reference -- see the test patch in bug 649440 for an implementation of bz's direction in bug 641198 comment 24, in a different test.", "author": "dholbert@mozilla.com"}, {"attachment_id": null, "author": "azakai@mozilla.com", "creation_time": "2011-04-26T19:58:39Z", "is_private": false, "text": "I'm trying to adapt the methods in bug 649440 to this bug, but I don't see how I can get the image element here. The relevant gif is shown as part of the css style of an <a> element. Am I missing something?", "id": 5432779, "raw_text": "I'm trying to adapt the methods in bug 649440 to this bug, but I don't see how I can get the image element here. The relevant gif is shown as part of the css style of an <a> element. Am I missing something?", "tags": [], "time": "2011-04-26T19:58:39Z", "creator": "azakai@mozilla.com", "count": 3, "bug_id": 646987}, {"author": "dholbert@mozilla.com", "bug_id": 646987, "creator": "dholbert@mozilla.com", "tags": [], "count": 4, "raw_text": "All references to the same image URI should end up resolving to the same RasterImage internally -- so perhaps you could add a <display:none> block with <img> element(s) for the image URIs involved, and hook your listener onto that?\n\n(unless having an additional image consumer like that would keep the bug from reproducing in old builds)", "id": 5432820, "text": "All references to the same image URI should end up resolving to the same RasterImage internally -- so perhaps you could add a <display:none> block with <img> element(s) for the image URIs involved, and hook your listener onto that?\n\n(unless having an additional image consumer like that would keep the bug from reproducing in old builds)", "creation_time": "2011-04-26T20:11:42Z", "attachment_id": null, "time": "2011-04-26T20:11:42Z", "is_private": false}, {"time": "2011-04-26T20:32:40Z", "is_private": false, "attachment_id": null, "count": 5, "creator": "azakai@mozilla.com", "tags": [], "bug_id": 646987, "id": 5432883, "raw_text": "Hmm, having an additional img element with the same href would change the behavior, sadly (the animation would not reset, since there is no reason for it to reset on the additional img element).", "creation_time": "2011-04-26T20:32:40Z", "text": "Hmm, having an additional img element with the same href would change the behavior, sadly (the animation would not reset, since there is no reason for it to reset on the additional img element).", "author": "azakai@mozilla.com"}, {"raw_text": "Hmm.  So bug 641198 only shows up with images loaded via nsImageLoader, not with an <img> that has its src set?\n\nSeems like you should still be able to test this via a manual loadImage call on imgILoader, right?", "id": 5433033, "text": "Hmm.  So bug 641198 only shows up with images loaded via nsImageLoader, not with an <img> that has its src set?\n\nSeems like you should still be able to test this via a manual loadImage call on imgILoader, right?", "creation_time": "2011-04-26T21:16:30Z", "is_private": false, "bug_id": 646987, "time": "2011-04-26T21:16:30Z", "creator": "bzbarsky@mit.edu", "count": 6, "tags": [], "author": "bzbarsky@mit.edu", "attachment_id": null}, {"bug_id": 646987, "count": 7, "time": "2011-04-26T22:12:12Z", "creator": "joe@drew.ca", "tags": [], "text": "Are you sure about that, Alon? All the <img> elements should have the same RasterImage backing them, right?", "is_private": false, "creation_time": "2011-04-26T22:12:12Z", "raw_text": "Are you sure about that, Alon? All the <img> elements should have the same RasterImage backing them, right?", "id": 5433223, "author": "joe@drew.ca", "attachment_id": null}, {"time": "2011-05-23T21:48:53Z", "is_private": false, "attachment_id": null, "count": 8, "tags": [], "creator": "azakai@mozilla.com", "bug_id": 646987, "id": 5487717, "raw_text": "Sorry for not getting around to this earlier.\n\nIt looks like my previous concerns were misplaced - I converted the test to use a normal img element (instead of the image being in the css style of an a element), and the same bug exists without the patch, and is fixed by it. So the test still tests the same thing, when using an img.\n\nHowever, even with that, I can't find how to make this work. The OnStopFrame and so forth are fired when frames are decoded. But the bug we are concerned here is with frames that are shown *after* the initial decode. In other words, we show the animation once, show another, then show the original again. The original was already decoded, so the frames are just rendered. So OnStartFrame and OnStopFrame are not fired.\n\nI don't think we have a way to listen for frames being drawn, as opposed to decoded - or is there?", "creation_time": "2011-05-23T21:48:53Z", "text": "Sorry for not getting around to this earlier.\n\nIt looks like my previous concerns were misplaced - I converted the test to use a normal img element (instead of the image being in the css style of an a element), and the same bug exists without the patch, and is fixed by it. So the test still tests the same thing, when using an img.\n\nHowever, even with that, I can't find how to make this work. The OnStopFrame and so forth are fired when frames are decoded. But the bug we are concerned here is with frames that are shown *after* the initial decode. In other words, we show the animation once, show another, then show the original again. The original was already decoded, so the frames are just rendered. So OnStartFrame and OnStopFrame are not fired.\n\nI don't think we have a way to listen for frames being drawn, as opposed to decoded - or is there?", "author": "azakai@mozilla.com"}, {"author": "bzbarsky@mit.edu", "creation_time": "2011-05-24T01:41:26Z", "text": "Hmm.  MozAfterPaint events might work....", "id": 5488246, "raw_text": "Hmm.  MozAfterPaint events might work....", "tags": [], "creator": "bzbarsky@mit.edu", "count": 9, "bug_id": 646987, "attachment_id": null, "is_private": false, "time": "2011-05-24T01:41:26Z"}, {"creator": "joe@drew.ca", "count": 10, "tags": [], "bug_id": 646987, "id": 5490023, "raw_text": "onStartFrame/onStopFrame/frameChanged doesn't work?", "creation_time": "2011-05-24T18:30:32Z", "text": "onStartFrame/onStopFrame/frameChanged doesn't work?", "author": "joe@drew.ca", "time": "2011-05-24T18:30:32Z", "is_private": false, "attachment_id": null}, {"creator": "azakai@mozilla.com", "time": "2011-05-24T21:57:34Z", "count": 11, "tags": [], "bug_id": 646987, "creation_time": "2011-05-24T21:57:34Z", "is_private": false, "text": "(In reply to comment #9)\n> Hmm.  MozAfterPaint events might work....\n\nI don't quite understand how MozAfterPaint events work. I can't get the test to work without a timeout, and depending on the timeout size, I get different results, which seems to imply that MozAfterPaint happens before the paint was actually shown on the screen.\n\n(In reply to comment #10)\n> onStartFrame/onStopFrame/frameChanged doesn't work?\n\nonStartFrame/onStopFrame are for decoding, and in this test, decoding was already done in the past. frameChanged might have worked, but it is [noScript] and gets a C++ parameter (so can't be made scriptable trivially).", "id": 5490711, "raw_text": "(In reply to comment #9)\n> Hmm.  MozAfterPaint events might work....\n\nI don't quite understand how MozAfterPaint events work. I can't get the test to work without a timeout, and depending on the timeout size, I get different results, which seems to imply that MozAfterPaint happens before the paint was actually shown on the screen.\n\n(In reply to comment #10)\n> onStartFrame/onStopFrame/frameChanged doesn't work?\n\nonStartFrame/onStopFrame are for decoding, and in this test, decoding was already done in the past. frameChanged might have worked, but it is [noScript] and gets a C++ parameter (so can't be made scriptable trivially).", "attachment_id": null, "author": "azakai@mozilla.com"}]}}, "comments": {}}