{"comments": {}, "bugs": {"705826": {"comments": [{"attachment_id": null, "raw_text": "User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:8.0.1) Gecko/20100101 Firefox/8.0.1\nBuild ID: 20111120135848\n\nSteps to reproduce:\n\nIn my javascript I am updating image.src in setInterval, or on mouse move. \nFor example:  function updateImage() {\n          document.images[\"L2\"].src = 'Default.ashx?Ind=' + ind.toString() + '&no-cache' + '=' + Math.random().toString(10);\n}\n\n\n\nActual results:\n\nImages are blinking/flashing when updated. it's especially noticeable when images are in grey scale on the black background. In  other browsers and Firefox 7 images are updated smoothly so you have the impression that black part of the images remains the same only central area is changing. Starting from Firefox version 8.0 it seems the image area first blinks (turns white)  and only then the image is updated.\n\n\nExpected results:\n\nImages should be updated smoothly as in version 7.", "time": "2011-11-28T20:05:34Z", "tags": [], "author": "tania.joukova@merge.com", "count": 0, "text": "User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:8.0.1) Gecko/20100101 Firefox/8.0.1\nBuild ID: 20111120135848\n\nSteps to reproduce:\n\nIn my javascript I am updating image.src in setInterval, or on mouse move. \nFor example:  function updateImage() {\n          document.images[\"L2\"].src = 'Default.ashx?Ind=' + ind.toString() + '&no-cache' + '=' + Math.random().toString(10);\n}\n\n\n\nActual results:\n\nImages are blinking/flashing when updated. it's especially noticeable when images are in grey scale on the black background. In  other browsers and Firefox 7 images are updated smoothly so you have the impression that black part of the images remains the same only central area is changing. Starting from Firefox version 8.0 it seems the image area first blinks (turns white)  and only then the image is updated.\n\n\nExpected results:\n\nImages should be updated smoothly as in version 7.", "creator": "tania.joukova@merge.com", "creation_time": "2011-11-28T20:05:34Z", "is_private": false, "bug_id": 705826, "id": 5876521}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-11-28T20:10:45Z", "creator": "bzbarsky@mit.edu", "raw_text": "This isn't security-sensitive.\n\nCan you please either point to a complete testcase showing the problem or use http://harthur.github.com/mozregression/ to find when the problem first appears for you?  Or both, of course.... ;)", "time": "2011-11-28T20:10:45Z", "id": 5876533, "bug_id": 705826, "author": "bzbarsky@mit.edu", "text": "This isn't security-sensitive.\n\nCan you please either point to a complete testcase showing the problem or use http://harthur.github.com/mozregression/ to find when the problem first appears for you?  Or both, of course.... ;)", "count": 1}, {"bug_id": 705826, "id": 5876587, "author": "tania.joukova@merge.com", "count": 2, "text": "I am using asp.Net for the test but I think it shouldn't be matter, could be done on java.\nMy Default.aspx\n\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"SimpleAspWebApplication._Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head runat=\"server\">\n    <title></title>\n</head>\n\n<body \n id=\"Page\" onload=\"window.setInterval('vistar();', 200);\">\n   <div id=\"Conteneur\">\n      <div id=\"Aff_Images_grd\">\n            <div id=\"Grp_image\">\n            <img id='L1'          alt=\"\"    src=\"http://www.linternaute.com/nature-animaux/magazine/photo/les-100-paysages-de-france/image/etretat-262711.jpg\" />\n            <img id='L2' style=\"width:800px;height:800px\"  alt=\"\" src=\"http://www.linternaute.com/nature-animaux/magazine/photo/les-100-paysages-de-france/image/etretat-262711.jpg\" />\n            \n         </div>\n      </div>\n   </div>   \n</body>\n  <script type=\"text/javascript\">\n      var ind = 0;\n      function vistar() {\n          if (ind == 0) ind = 1;\n          else ind = 0;\n          document.images[\"L2\"].src = 'Default.ashx?Ind=' + ind.toString() + '&no-cache' + '=' + Math.random().toString(10);\n          text.value = ind.toString();\n      }\n   </script>\n</html>\n\n\nMy request handler:\n\n     public class Default : IHttpHandler\n    {\n\n         private int ind = 0;\n         private string[] data=new string[]{\"C:\\\\Test\\\\image11.jpg\", \"C:\\\\Test\\\\image22.jpg\"};\n         public void ProcessRequest(HttpContext context)\n        {\n            context.Response.ContentType = \"image/jpg\";\n            context.Response.CacheControl = \"no-cache\";\n            // Return an jpeg image\n             ind = Int32.Parse(context.Request.Params[\"Ind\"]);\n            string test = data[ind];\n            context.Response.BinaryWrite(File.ReadAllBytes(test));\n    \n        }", "time": "2011-11-28T20:36:23Z", "raw_text": "I am using asp.Net for the test but I think it shouldn't be matter, could be done on java.\nMy Default.aspx\n\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"SimpleAspWebApplication._Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head runat=\"server\">\n    <title></title>\n</head>\n\n<body \n id=\"Page\" onload=\"window.setInterval('vistar();', 200);\">\n   <div id=\"Conteneur\">\n      <div id=\"Aff_Images_grd\">\n            <div id=\"Grp_image\">\n            <img id='L1'          alt=\"\"    src=\"http://www.linternaute.com/nature-animaux/magazine/photo/les-100-paysages-de-france/image/etretat-262711.jpg\" />\n            <img id='L2' style=\"width:800px;height:800px\"  alt=\"\" src=\"http://www.linternaute.com/nature-animaux/magazine/photo/les-100-paysages-de-france/image/etretat-262711.jpg\" />\n            \n         </div>\n      </div>\n   </div>   \n</body>\n  <script type=\"text/javascript\">\n      var ind = 0;\n      function vistar() {\n          if (ind == 0) ind = 1;\n          else ind = 0;\n          document.images[\"L2\"].src = 'Default.ashx?Ind=' + ind.toString() + '&no-cache' + '=' + Math.random().toString(10);\n          text.value = ind.toString();\n      }\n   </script>\n</html>\n\n\nMy request handler:\n\n     public class Default : IHttpHandler\n    {\n\n         private int ind = 0;\n         private string[] data=new string[]{\"C:\\\\Test\\\\image11.jpg\", \"C:\\\\Test\\\\image22.jpg\"};\n         public void ProcessRequest(HttpContext context)\n        {\n            context.Response.ContentType = \"image/jpg\";\n            context.Response.CacheControl = \"no-cache\";\n            // Return an jpeg image\n             ind = Int32.Parse(context.Request.Params[\"Ind\"]);\n            string test = data[ind];\n            context.Response.BinaryWrite(File.ReadAllBytes(test));\n    \n        }", "creation_time": "2011-11-28T20:36:23Z", "is_private": false, "creator": "tania.joukova@merge.com", "tags": [], "attachment_id": null}, {"attachment_id": null, "raw_text": "The actual image data probably matters (because I can't reproduce anything like what you're describing so far using images I have here).  Please link to an actual live site showing the problem?", "time": "2011-11-28T20:39:12Z", "tags": [], "author": "bzbarsky@mit.edu", "text": "The actual image data probably matters (because I can't reproduce anything like what you're describing so far using images I have here).  Please link to an actual live site showing the problem?", "count": 3, "creator": "bzbarsky@mit.edu", "creation_time": "2011-11-28T20:39:12Z", "is_private": false, "id": 5876597, "bug_id": 705826}, {"id": 5876621, "bug_id": 705826, "is_private": false, "creation_time": "2011-11-28T20:47:44Z", "creator": "tania.joukova@merge.com", "text": "Created attachment 577332\nimages for sample application", "count": 4, "author": "tania.joukova@merge.com", "tags": [], "time": "2011-11-28T20:47:44Z", "raw_text": "", "attachment_id": 577332}, {"raw_text": "I've attached images for testing. We don't have live site, our application installed on internal customer's servers.", "attachment_id": null, "time": "2011-11-28T20:50:32Z", "tags": [], "text": "I've attached images for testing. We don't have live site, our application installed on internal customer's servers.", "count": 5, "author": "tania.joukova@merge.com", "creator": "tania.joukova@merge.com", "creation_time": "2011-11-28T20:50:32Z", "is_private": false, "id": 5876629, "bug_id": 705826}, {"creation_time": "2011-11-29T16:09:57Z", "is_private": false, "id": 5878958, "bug_id": 705826, "text": "(In reply to Boris Zbarsky (:bz) from comment #3)\n> The actual image data probably matters (because I can't reproduce anything\n> like what you're describing so far using images I have here).  Please link\n> to an actual live site showing the problem?\n\nIs it reproducible with attached images?", "count": 6, "author": "tania.joukova@merge.com", "creator": "tania.joukova@merge.com", "tags": [], "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #3)\n> The actual image data probably matters (because I can't reproduce anything\n> like what you're describing so far using images I have here).  Please link\n> to an actual live site showing the problem?\n\nIs it reproducible with attached images?", "attachment_id": null, "time": "2011-11-29T16:09:57Z"}, {"time": "2011-12-01T22:27:58Z", "raw_text": "Yep.  Sorry for the lag....  I'll attach a testcase to this bug.\n\nI'd assume we're dispatching the notification that makes the image loading content switch to the new request before the decode is done.  That's sort of broken.", "bug_id": 705826, "id": 5886618, "text": "Yep.  Sorry for the lag....  I'll attach a testcase to this bug.\n\nI'd assume we're dispatching the notification that makes the image loading content switch to the new request before the decode is done.  That's sort of broken.", "count": 7, "author": "bzbarsky@mit.edu", "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-12-01T22:27:58Z", "creator": "bzbarsky@mit.edu"}, {"creator": "bzbarsky@mit.edu", "author": "bzbarsky@mit.edu", "text": "Created attachment 578395\nFirst image", "count": 8, "id": 5886623, "bug_id": 705826, "is_private": false, "creation_time": "2011-12-01T22:28:31Z", "time": "2011-12-01T22:28:31Z", "attachment_id": 578395, "raw_text": "", "tags": []}, {"raw_text": "", "time": "2011-12-01T22:33:34Z", "bug_id": 705826, "id": 5886644, "count": 9, "text": "Created attachment 578397\nSecond image", "author": "bzbarsky@mit.edu", "tags": [], "attachment_id": 578397, "is_private": false, "creation_time": "2011-12-01T22:33:34Z", "creator": "bzbarsky@mit.edu"}, {"is_private": false, "creation_time": "2011-12-01T22:44:44Z", "creator": "bzbarsky@mit.edu", "tags": [], "attachment_id": 578407, "id": 5886705, "bug_id": 705826, "author": "bzbarsky@mit.edu", "text": "Created attachment 578407\nTestcase, relies on loading those images from file://\n\nOver http from Bugzilla the 200ms timeout is too small for me to get the broken effect; the response is just not fast enough.  And if I precache the images the flicker disappears...", "count": 10, "raw_text": "Over http from Bugzilla the 200ms timeout is too small for me to get the broken effect; the response is just not fast enough.  And if I precache the images the flicker disappears...", "time": "2011-12-01T22:44:44Z"}, {"time": "2011-12-06T21:49:53Z", "raw_text": "In my testing with our proprietary code (I cannot post) I pull images from our external device as fast as they can load (binding on the load event callback) - I am displaying monochrome on black background.  Since upgrading to 8.0 this is extremely noticible if network load times for images are > 200 ms per image - anything faster than that and you don't see the flash of the black background - anything slower than that and it's very noticible.  Same network speeds and different browsers you don't see anything like this at all.  It's like the imaging library changed how it renders image data in the browser.  Local testing on really fast network loads it is not reproducable.", "author": "jcurtis@san.rr.com", "count": 11, "text": "In my testing with our proprietary code (I cannot post) I pull images from our external device as fast as they can load (binding on the load event callback) - I am displaying monochrome on black background.  Since upgrading to 8.0 this is extremely noticible if network load times for images are > 200 ms per image - anything faster than that and you don't see the flash of the black background - anything slower than that and it's very noticible.  Same network speeds and different browsers you don't see anything like this at all.  It's like the imaging library changed how it renders image data in the browser.  Local testing on really fast network loads it is not reproducable.", "id": 5895571, "bug_id": 705826, "attachment_id": null, "tags": [], "creator": "jcurtis@san.rr.com", "creation_time": "2011-12-06T21:49:53Z", "is_private": false}, {"raw_text": "jcurtis, whatever you're seeing sounds different from this bug.  The code in this bug does not wait for load events, for one thing.\n\nI'd appreciate you filing a separate bug and using http://harthur.github.com/mozregression/ to find when the problem you see first appears for you, since you can't share the site that shows the problem.", "time": "2011-12-06T21:53:21Z", "id": 5895584, "bug_id": 705826, "count": 12, "text": "jcurtis, whatever you're seeing sounds different from this bug.  The code in this bug does not wait for load events, for one thing.\n\nI'd appreciate you filing a separate bug and using http://harthur.github.com/mozregression/ to find when the problem you see first appears for you, since you can't share the site that shows the problem.", "author": "bzbarsky@mit.edu", "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2011-12-06T21:53:21Z", "creator": "bzbarsky@mit.edu"}, {"creation_time": "2011-12-08T23:18:40Z", "is_private": false, "id": 5902593, "bug_id": 705826, "text": "Hi Boris,\n  I am having the same issue. We used to be proud of Firefox to demo our system on, but now it is the slowest of the bunch.\n  The problem seems to be related to image size. The following attachment can cause the issue even when loading from local disk. In the past < FF8 this image used to show in a few milliseconds, now takes many seconds to load.\n  All other browsers are fine", "count": 13, "author": "samir@clarontech.com", "creator": "samir@clarontech.com", "tags": [], "raw_text": "Hi Boris,\n  I am having the same issue. We used to be proud of Firefox to demo our system on, but now it is the slowest of the bunch.\n  The problem seems to be related to image size. The following attachment can cause the issue even when loading from local disk. In the past < FF8 this image used to show in a few milliseconds, now takes many seconds to load.\n  All other browsers are fine", "attachment_id": null, "time": "2011-12-08T23:18:40Z"}, {"text": "Created attachment 580210\nLarge image loading very slowly in FF8\n\nLarge image loading very slowly in FF8", "count": 14, "author": "samir@clarontech.com", "id": 5902597, "bug_id": 705826, "time": "2011-12-08T23:19:29Z", "raw_text": "Large image loading very slowly in FF8", "creator": "samir@clarontech.com", "is_private": false, "creation_time": "2011-12-08T23:19:29Z", "attachment_id": 580210, "tags": []}, {"raw_text": "Samir, that's a separate issue from what this bug is about, related to async decoding of images.  There are existing bugs on that.  Again, this bug is about flicker on dynamic src _changes_.", "attachment_id": null, "time": "2011-12-08T23:22:44Z", "tags": [], "text": "Samir, that's a separate issue from what this bug is about, related to async decoding of images.  There are existing bugs on that.  Again, this bug is about flicker on dynamic src _changes_.", "count": 15, "author": "bzbarsky@mit.edu", "creator": "bzbarsky@mit.edu", "creation_time": "2011-12-08T23:22:44Z", "is_private": false, "id": 5902612, "bug_id": 705826}, {"is_private": false, "creation_time": "2012-01-10T16:01:39Z", "bug_id": 705826, "id": 5968740, "author": "jerome.vouillon@pps.jussieu.fr", "text": "I'm seeing something similar on the following page:\n\n   http://localhost:8090/~vouillon/bug2/\n\nUsing mozregression, it seems the regression was introduced by\nthe following changeset:\n\n    changeset:   79230:8b89d7037306\n    user:        Matt Woodrow <mwoodrow@mozilla.com>\n    date:        Wed Oct 26 16:24:58 2011 +1300\n    summary:     Bug 695275 - Fix conversion of ThebesLayers to ImageLayers. r=roc\n\nHere is a detailed presentation of my issue.\n\nWhen clicking on an image on the page above, a larger version of\nthe image is displayed.  To provide a quick feedback, I use a\ncanvas containing a low quality version of the image, and I put\nabove it an img element containing a higher quality image.\n\nPreviously, this image was loaded progressively over the canvas,\nin a smooth way (the part not yet loaded was transparent). Now,\nI get a dark background for a short time when the image starts\nloading. Then, the canvas becomes visible again, while being\nprogressively replaced by the image.", "count": 16, "creator": "jerome.vouillon@pps.jussieu.fr", "tags": [], "attachment_id": null, "raw_text": "I'm seeing something similar on the following page:\n\n   http://localhost:8090/~vouillon/bug2/\n\nUsing mozregression, it seems the regression was introduced by\nthe following changeset:\n\n    changeset:   79230:8b89d7037306\n    user:        Matt Woodrow <mwoodrow@mozilla.com>\n    date:        Wed Oct 26 16:24:58 2011 +1300\n    summary:     Bug 695275 - Fix conversion of ThebesLayers to ImageLayers. r=roc\n\nHere is a detailed presentation of my issue.\n\nWhen clicking on an image on the page above, a larger version of\nthe image is displayed.  To provide a quick feedback, I use a\ncanvas containing a low quality version of the image, and I put\nabove it an img element containing a higher quality image.\n\nPreviously, this image was loaded progressively over the canvas,\nin a smooth way (the part not yet loaded was transparent). Now,\nI get a dark background for a short time when the image starts\nloading. Then, the canvas becomes visible again, while being\nprogressively replaced by the image.", "time": "2012-01-10T16:01:39Z"}, {"author": "bzbarsky@mit.edu", "count": 17, "text": "J\u00e9r\u00f4me, you're seeing something very different from this bug, I think.  In particular, this bug was filed on a build that predates the changeset you mention in comment 16.\n\nCould you please file a separate bug on your issue?", "id": 5968845, "bug_id": 705826, "time": "2012-01-10T16:33:33Z", "raw_text": "J\u00e9r\u00f4me, you're seeing something very different from this bug, I think.  In particular, this bug was filed on a build that predates the changeset you mention in comment 16.\n\nCould you please file a separate bug on your issue?", "creator": "bzbarsky@mit.edu", "is_private": false, "creation_time": "2012-01-10T16:33:33Z", "attachment_id": null, "tags": []}, {"bug_id": 705826, "id": 5970408, "text": "Also, we're probably going to need a public URL or testcase; the one you posted is \"localhost\", which means your local computer, not a server on the Internet.", "count": 18, "author": "joe@drew.ca", "time": "2012-01-10T23:41:12Z", "raw_text": "Also, we're probably going to need a public URL or testcase; the one you posted is \"localhost\", which means your local computer, not a server on the Internet.", "creation_time": "2012-01-10T23:41:12Z", "is_private": false, "creator": "joe@drew.ca", "tags": [], "attachment_id": null}, {"tags": [], "attachment_id": null, "raw_text": "Boris - I am sorry i haven't been able run mozilla regression until today.  And the flickering was introduced on 7/22/11 - the nightly build from 7/21/11 has smooth image transitions - but 7/22/11 clearly introduced erasing of background before redrawing (that is what it seems like) and shows as a black flicker because the background is black.  We can't use firefox for our product until this gets addressed.  I will go ahead and post another bug.", "time": "2012-01-11T19:04:12Z", "creation_time": "2012-01-11T19:04:12Z", "is_private": false, "bug_id": 705826, "id": 5972794, "author": "jcurtis@san.rr.com", "text": "Boris - I am sorry i haven't been able run mozilla regression until today.  And the flickering was introduced on 7/22/11 - the nightly build from 7/21/11 has smooth image transitions - but 7/22/11 clearly introduced erasing of background before redrawing (that is what it seems like) and shows as a black flicker because the background is black.  We can't use firefox for our product until this gets addressed.  I will go ahead and post another bug.", "count": 19, "creator": "jcurtis@san.rr.com"}, {"time": "2012-01-12T18:45:33Z", "raw_text": "(In reply to Boris Zbarsky (:bz) from comment #17)\n> J\u00e9r\u00f4me, you're seeing something very different from this bug, I think.  In\n> particular, this bug was filed on a build that predates the changeset you\n> mention in comment 16.\n> \n> Could you please file a separate bug on your issue?\n\nIndeed, this appears to be a different issue.  I have filed a separate bug report (bug 717572).", "attachment_id": null, "tags": [], "creator": "jerome.vouillon@pps.jussieu.fr", "count": 20, "text": "(In reply to Boris Zbarsky (:bz) from comment #17)\n> J\u00e9r\u00f4me, you're seeing something very different from this bug, I think.  In\n> particular, this bug was filed on a build that predates the changeset you\n> mention in comment 16.\n> \n> Could you please file a separate bug on your issue?\n\nIndeed, this appears to be a different issue.  I have filed a separate bug report (bug 717572).", "author": "jerome.vouillon@pps.jussieu.fr", "bug_id": 705826, "id": 5975959, "is_private": false, "creation_time": "2012-01-12T18:45:33Z"}, {"time": "2012-01-12T19:01:16Z", "attachment_id": null, "raw_text": "", "tags": [], "creator": "bugzilla@mversen.de", "author": "bugzilla@mversen.de", "count": 21, "text": "*** Bug 717323 has been marked as a duplicate of this bug. ***", "id": 5976035, "bug_id": 705826, "is_private": false, "creation_time": "2012-01-12T19:01:16Z"}, {"count": 22, "text": "Here is a testcase from bug 717323\nhttp://matti.no-ip.org/bug717323/ferntest.html", "author": "bugzilla@mversen.de", "bug_id": 705826, "id": 5976791, "raw_text": "Here is a testcase from bug 717323\nhttp://matti.no-ip.org/bug717323/ferntest.html", "time": "2012-01-12T22:09:09Z", "creator": "bugzilla@mversen.de", "creation_time": "2012-01-12T22:09:09Z", "is_private": false, "attachment_id": null, "tags": []}, {"tags": [], "attachment_id": null, "is_private": false, "creation_time": "2012-07-18T07:25:05Z", "creator": "phobos4fear@gmail.com", "raw_text": "I also have this issue. Google didn't offer any good solutions and Firefox 13 & Nightly also have this issue.\n\nProblem: \nNeed to show low quality image when full quality is still downloading.\n\nSolution:\nI decided to go with specific \"css hack\" for mozilla only. I used jQuery.\nImage flicker is still present but it is not visible to human eye because low quality image is in the background.\nSolution works for my current needs. Maybe someone will find this helpful.\n\n$wrapper = jQuery('#wrapper');\n$image = $wrapper.find('img');\nif(jQuery.browser && jQuery.browser.mozilla)\n{\n   $wrapper.css({\n    'background-color':'#FFF'\n    ,'background-repeat':'no-repeat'\n    ,'background-attachment':'scroll'\n    ,'background-size':'100% 100%'\n    ,'background-position':'center center'\n   });\t\t\t\n\t\t\t\n   $image.removeAttr('src');\n   $wrapper.css('background-image', 'url(\"'+image_path+'\")');\n} else {\n   $image.attr('src', image_path);\n}\n\nHtml:\n<div id=\"wrapper\"><img src=\"somepath.jpg\"></div>", "time": "2012-07-18T07:25:05Z", "id": 6482585, "bug_id": 705826, "author": "phobos4fear@gmail.com", "text": "I also have this issue. Google didn't offer any good solutions and Firefox 13 & Nightly also have this issue.\n\nProblem: \nNeed to show low quality image when full quality is still downloading.\n\nSolution:\nI decided to go with specific \"css hack\" for mozilla only. I used jQuery.\nImage flicker is still present but it is not visible to human eye because low quality image is in the background.\nSolution works for my current needs. Maybe someone will find this helpful.\n\n$wrapper = jQuery('#wrapper');\n$image = $wrapper.find('img');\nif(jQuery.browser && jQuery.browser.mozilla)\n{\n   $wrapper.css({\n    'background-color':'#FFF'\n    ,'background-repeat':'no-repeat'\n    ,'background-attachment':'scroll'\n    ,'background-size':'100% 100%'\n    ,'background-position':'center center'\n   });\t\t\t\n\t\t\t\n   $image.removeAttr('src');\n   $wrapper.css('background-image', 'url(\"'+image_path+'\")');\n} else {\n   $image.attr('src', image_path);\n}\n\nHtml:\n<div id=\"wrapper\"><img src=\"somepath.jpg\"></div>", "count": 23}, {"count": 24, "text": "Here's some simple code that demonstrates the problem.  Create your own, 1.png, 2.png, 3.png, 4.png to complete the example.  Create them at 1440 X 900 pixels.  \n\nYou'll see the screen flash when the image source is changed.  If you run this same test on IE or Chrome - no flash on update.   \n\n\n<!DOCTYPE html/>\n<html>\n<head>\n\t<title></title>\n\t<script type=\"text/javascript\">\n\n\t    var ct = 0;\n\t    function click() {\n\n\t        var im1 = document.getElementById(\"myimage\");\n\t       \n\t        im1.src = \"\" + (ct + 1) + \".png\";\n     \n\t        ct = (ct + 1) % 4;\n\t\t}\n\n\t</script>\n</head>\n<body>\n\t<a href=\"javascript:click();\">click here</a><br />\n\n\t<img id=\"myimage\" src=\"\"  alt=\"\"/>\n\n\n</body>\n</html>", "author": "eddie.wyatt@oracle.com", "id": 6884738, "bug_id": 705826, "time": "2012-12-05T19:38:10Z", "raw_text": "Here's some simple code that demonstrates the problem.  Create your own, 1.png, 2.png, 3.png, 4.png to complete the example.  Create them at 1440 X 900 pixels.  \n\nYou'll see the screen flash when the image source is changed.  If you run this same test on IE or Chrome - no flash on update.   \n\n\n<!DOCTYPE html/>\n<html>\n<head>\n\t<title></title>\n\t<script type=\"text/javascript\">\n\n\t    var ct = 0;\n\t    function click() {\n\n\t        var im1 = document.getElementById(\"myimage\");\n\t       \n\t        im1.src = \"\" + (ct + 1) + \".png\";\n     \n\t        ct = (ct + 1) % 4;\n\t\t}\n\n\t</script>\n</head>\n<body>\n\t<a href=\"javascript:click();\">click here</a><br />\n\n\t<img id=\"myimage\" src=\"\"  alt=\"\"/>\n\n\n</body>\n</html>", "creator": "eddie.wyatt@oracle.com", "creation_time": "2012-12-05T19:38:10Z", "is_private": false, "attachment_id": null, "tags": []}, {"raw_text": "I am also seeing this bug on Firefox 17 and 18. Setting the src attribute of an <img> sporadically causes the blink whether or not the image is pre-cached. Creating two stacked img's and setting src attributes and swapping visibility after a small delay following the onload trigger seems to work around the issue (though very clumsily).\n\nAny progress tracking this down since IE and Chrome do not exhibit the same behavior?", "time": "2013-04-10T16:20:54Z", "author": "eric@epkphoto.com", "text": "I am also seeing this bug on Firefox 17 and 18. Setting the src attribute of an <img> sporadically causes the blink whether or not the image is pre-cached. Creating two stacked img's and setting src attributes and swapping visibility after a small delay following the onload trigger seems to work around the issue (though very clumsily).\n\nAny progress tracking this down since IE and Chrome do not exhibit the same behavior?", "count": 25, "id": 7299719, "bug_id": 705826, "attachment_id": null, "tags": [], "creator": "eric@epkphoto.com", "creation_time": "2013-04-10T16:20:54Z", "is_private": false}, {"creation_time": "2014-11-25T14:08:58Z", "is_private": false, "creator": "u524665@disabled.tld", "tags": [], "attachment_id": null, "id": 9634968, "bug_id": 705826, "text": "Still seeing this bug in Firefox 33.1.1 (osx 10.9.5). Any plans or progress with fixing?", "count": 26, "author": "u524665@disabled.tld", "raw_text": "Still seeing this bug in Firefox 33.1.1 (osx 10.9.5). Any plans or progress with fixing?", "time": "2014-11-25T14:08:58Z"}, {"tags": [], "attachment_id": null, "raw_text": "This bug is still present in Firefox 36.0.4 (Windows 8). An update would be appreciated, as we would like to use Firefox as a reference browser to showcase sites in client meetings, but sadly we can't until this is fixed.", "time": "2015-04-02T10:16:34Z", "is_private": false, "creation_time": "2015-04-02T10:16:34Z", "id": 10110458, "bug_id": 705826, "author": "rauch@skaiamail.de", "text": "This bug is still present in Firefox 36.0.4 (Windows 8). An update would be appreciated, as we would like to use Firefox as a reference browser to showcase sites in client meetings, but sadly we can't until this is fixed.", "count": 27, "creator": "rauch@skaiamail.de"}, {"author": "tnikkel@gmail.com", "count": 28, "text": "What testcase are you using to test?\n\nI tried the testcase attached to this bug (\"First Image\", \"Second Image\", \"Testcase, relies on loading those images from file://\") and it looked fine to me on Firefox 36, 37, 38, and 40.\n\nFor people who are still seeing this bug, what testcase are you using?", "id": 10120476, "bug_id": 705826, "raw_text": "What testcase are you using to test?\n\nI tried the testcase attached to this bug (\"First Image\", \"Second Image\", \"Testcase, relies on loading those images from file://\") and it looked fine to me on Firefox 36, 37, 38, and 40.\n\nFor people who are still seeing this bug, what testcase are you using?", "time": "2015-04-06T08:54:37Z", "creator": "tnikkel@gmail.com", "is_private": false, "creation_time": "2015-04-06T08:54:37Z", "attachment_id": null, "tags": []}, {"creator": "rauch@skaiamail.de", "author": "rauch@skaiamail.de", "count": 29, "text": "In my case it happens on a client website, which I am currently asking permission to provide a link to.\n\nI can also reproduce it on the testcase posted in comment #22 though ( http://matti.no-ip.org/bug717323/ferntest.html ).\n\nUsing Firefox 37.0.1 on Windows 8.1 x64", "bug_id": 705826, "id": 10168254, "is_private": false, "creation_time": "2015-04-17T14:09:09Z", "time": "2015-04-17T14:09:09Z", "attachment_id": null, "raw_text": "In my case it happens on a client website, which I am currently asking permission to provide a link to.\n\nI can also reproduce it on the testcase posted in comment #22 though ( http://matti.no-ip.org/bug717323/ferntest.html ).\n\nUsing Firefox 37.0.1 on Windows 8.1 x64", "tags": []}, {"raw_text": "Alright, we got permission from the client to supply a link to their site.\n\nhttps://www.busch-jaeger.de/en/solutions/\n\nSelect any of the indoor or outdoor links, and drag / scroll the scene left to right. There is no flickering on Chrome, IE, Safari (neither on the mobile versions), with Firefox 37.0.2 (Windows 8.1 x64) there is.\nThere is a script on the site that preloads all the images so they are cached, even after waiting for all images to load it happens.\n\nAny replies or updates to this report are greatly appreciated.", "time": "2015-04-24T07:59:29Z", "id": 10194545, "bug_id": 705826, "author": "rauch@skaiamail.de", "count": 30, "text": "Alright, we got permission from the client to supply a link to their site.\n\nhttps://www.busch-jaeger.de/en/solutions/\n\nSelect any of the indoor or outdoor links, and drag / scroll the scene left to right. There is no flickering on Chrome, IE, Safari (neither on the mobile versions), with Firefox 37.0.2 (Windows 8.1 x64) there is.\nThere is a script on the site that preloads all the images so they are cached, even after waiting for all images to load it happens.\n\nAny replies or updates to this report are greatly appreciated.", "tags": [], "attachment_id": null, "creation_time": "2015-04-24T07:59:29Z", "is_private": false, "creator": "rauch@skaiamail.de"}, {"tags": [], "attachment_id": null, "creation_time": "2015-04-24T13:42:22Z", "is_private": false, "creator": "Chris.Lauer@noaa.gov", "raw_text": "We experienced the same problem.  Ended up working around it by doing our image looping/transitions in a canvas.  Firefox seems to handle what looks like same job on a canvas just fine.  Which makes this bug even more puzzling to the layman", "time": "2015-04-24T13:42:22Z", "id": 10195511, "bug_id": 705826, "text": "We experienced the same problem.  Ended up working around it by doing our image looping/transitions in a canvas.  Firefox seems to handle what looks like same job on a canvas just fine.  Which makes this bug even more puzzling to the layman", "count": 31, "author": "Chris.Lauer@noaa.gov"}, {"attachment_id": null, "tags": [], "creator": "seth.bugzilla@blackhail.net", "is_private": false, "creation_time": "2015-04-24T20:10:37Z", "raw_text": "I can reproduce this. I haven't debugged it at the Gecko level, but it seems pretty clear that we aren't decoding the preloaded images because they aren't visible.\n\nFixing this is nontrivial without severely regressing memory usage. We need more sophisticated heuristics than the ones we currently have, which requires that we track more information about images than we currently are tracking.\n\nWe should revisit this after bug 1123976.\n\n(In reply to Chris.Lauer from comment #31)\n> We experienced the same problem.  Ended up working around it by doing our\n> image looping/transitions in a canvas.  Firefox seems to handle what looks\n> like same job on a canvas just fine.\n\nYes, the canvas case is quite different, because when you draw an image to a canvas we decode and draw the image synchronously - it's required by the spec. Changing an <img> element's 'src' attribute or changing the 'background-image' property, by contrast, triggers asynchronous decoding. That can result in flashing because we may repaint before the image is fully decoded.\n\nUsing <canvas> is probably a better choice for this particular use-case. (Either a single <canvas> which you draw the Image's into, or a <canvas> per frame.) A <video> would be even more efficient if it meets your needs.", "time": "2015-04-24T20:10:37Z", "author": "seth.bugzilla@blackhail.net", "count": 32, "text": "I can reproduce this. I haven't debugged it at the Gecko level, but it seems pretty clear that we aren't decoding the preloaded images because they aren't visible.\n\nFixing this is nontrivial without severely regressing memory usage. We need more sophisticated heuristics than the ones we currently have, which requires that we track more information about images than we currently are tracking.\n\nWe should revisit this after bug 1123976.\n\n(In reply to Chris.Lauer from comment #31)\n> We experienced the same problem.  Ended up working around it by doing our\n> image looping/transitions in a canvas.  Firefox seems to handle what looks\n> like same job on a canvas just fine.\n\nYes, the canvas case is quite different, because when you draw an image to a canvas we decode and draw the image synchronously - it's required by the spec. Changing an <img> element's 'src' attribute or changing the 'background-image' property, by contrast, triggers asynchronous decoding. That can result in flashing because we may repaint before the image is fully decoded.\n\nUsing <canvas> is probably a better choice for this particular use-case. (Either a single <canvas> which you draw the Image's into, or a <canvas> per frame.) A <video> would be even more efficient if it meets your needs.", "bug_id": 705826, "id": 10197324}, {"tags": [], "time": "2015-05-07T08:20:39Z", "attachment_id": null, "raw_text": "First of all, thank you for your insights. \n\nSecondly I'd just like to note that the test case (the client site) I posted in comment #30 can't be used to reproduce the issue anymore, since we found a (very simple to be honest) workaround and implemented that.\n\nI'd have liked to make it into a <canvas>, but time constraints only let me implement the workaround.\nFor those who are interested, the workaround is simply having two more <img>s with the two possible images that may come next, placed behind the actual <img> so they're not visible.", "id": 10241149, "bug_id": 705826, "is_private": false, "creation_time": "2015-05-07T08:20:39Z", "creator": "rauch@skaiamail.de", "author": "rauch@skaiamail.de", "text": "First of all, thank you for your insights. \n\nSecondly I'd just like to note that the test case (the client site) I posted in comment #30 can't be used to reproduce the issue anymore, since we found a (very simple to be honest) workaround and implemented that.\n\nI'd have liked to make it into a <canvas>, but time constraints only let me implement the workaround.\nFor those who are interested, the workaround is simply having two more <img>s with the two possible images that may come next, placed behind the actual <img> so they're not visible.", "count": 33}, {"time": "2015-05-07T17:07:06Z", "raw_text": "(In reply to F. Rauch from comment #33)\n> For those who are interested, the workaround is simply having two more\n> <img>s with the two possible images that may come next, placed behind the\n> actual <img> so they're not visible.\n\nI'd advise others to use the <canvas> approach, which is guaranteed to work by the spec. Decoding heuristics for <img> elements can and will change in the future.", "attachment_id": null, "tags": [], "creator": "seth.bugzilla@blackhail.net", "text": "(In reply to F. Rauch from comment #33)\n> For those who are interested, the workaround is simply having two more\n> <img>s with the two possible images that may come next, placed behind the\n> actual <img> so they're not visible.\n\nI'd advise others to use the <canvas> approach, which is guaranteed to work by the spec. Decoding heuristics for <img> elements can and will change in the future.", "count": 34, "author": "seth.bugzilla@blackhail.net", "id": 10243172, "bug_id": 705826, "creation_time": "2015-05-07T17:07:06Z", "is_private": false}, {"raw_text": "This is still a bad bug today. When using responsive images with lazy loading, the images will flash/flicker when they're being swapped.\n\nIt happens on both Firefox and Firefox mobile.\n\nIn IE, Chrome, Chrome Mobile the image transition from old to new is smooth, unlike Firefox.", "time": "2016-03-22T17:28:14Z", "bug_id": 705826, "id": 11267938, "count": 35, "text": "This is still a bad bug today. When using responsive images with lazy loading, the images will flash/flicker when they're being swapped.\n\nIt happens on both Firefox and Firefox mobile.\n\nIn IE, Chrome, Chrome Mobile the image transition from old to new is smooth, unlike Firefox.", "author": "bugzilla@endre.me", "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2016-03-22T17:28:14Z", "creator": "bugzilla@endre.me"}, {"raw_text": "One more note, I think it has gotten worse in Firefox v45, is that possible? At least it's now that I noticed it.", "time": "2016-03-22T17:30:20Z", "id": 11267946, "bug_id": 705826, "author": "bugzilla@endre.me", "count": 36, "text": "One more note, I think it has gotten worse in Firefox v45, is that possible? At least it's now that I noticed it.", "tags": [], "attachment_id": null, "is_private": false, "creation_time": "2016-03-22T17:30:20Z", "creator": "bugzilla@endre.me"}, {"time": "2016-04-16T07:08:39Z", "raw_text": "I only just recently started seeing this problem, and I think started after I had upgraded to the 64 bit version of Firefox (Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0). I see this problem on both my stationary and my on laptop. Both are Firefox 64 bit running on Windows 10.\nI also have a 32bit Windows XP partition on my stationary, and when booting to WinXP and running 32 bit Firefox on that, the problem is gone.", "count": 37, "text": "I only just recently started seeing this problem, and I think started after I had upgraded to the 64 bit version of Firefox (Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0). I see this problem on both my stationary and my on laptop. Both are Firefox 64 bit running on Windows 10.\nI also have a 32bit Windows XP partition on my stationary, and when booting to WinXP and running 32 bit Firefox on that, the problem is gone.", "author": "stig@rockland.dk", "bug_id": 705826, "id": 11331610, "attachment_id": null, "tags": [], "creator": "stig@rockland.dk", "creation_time": "2016-04-16T07:08:39Z", "is_private": false}, {"creator": "stig@rockland.dk", "text": "I have to correct my comment from yesterday. When I yesterday on my Windows XP partition tested the 32-bit version of Firefox, I forgot to update the browser first. When updating my 32 bit Firefox from version 44.0.2 to the latest 45.0.2 I see same problem as in my 64 bit Firefox on Windows 10. So, sorry... No relation to OS or to 32 vs. 64 bit versions of Firefox it seems. The annoying flicker/flashing when replacing an image seems to be introduced in version 45 (or in one of its minor revisions).\n\nI see this is a very old bug. Maybe there's another one directly related to this recently (re?)introduced problem? I haven't succeeded finding one, though...", "count": 38, "author": "stig@rockland.dk", "id": 11332355, "bug_id": 705826, "is_private": false, "creation_time": "2016-04-17T16:42:29Z", "time": "2016-04-17T16:42:29Z", "raw_text": "I have to correct my comment from yesterday. When I yesterday on my Windows XP partition tested the 32-bit version of Firefox, I forgot to update the browser first. When updating my 32 bit Firefox from version 44.0.2 to the latest 45.0.2 I see same problem as in my 64 bit Firefox on Windows 10. So, sorry... No relation to OS or to 32 vs. 64 bit versions of Firefox it seems. The annoying flicker/flashing when replacing an image seems to be introduced in version 45 (or in one of its minor revisions).\n\nI see this is a very old bug. Maybe there's another one directly related to this recently (re?)introduced problem? I haven't succeeded finding one, though...", "attachment_id": null, "tags": []}, {"time": "2016-04-26T07:31:04Z", "raw_text": "I have created a new bug for the issue I see introduced in FF45, https://bugzilla.mozilla.org/show_bug.cgi?id=1267379\nI don't know if the issue I'm describing is related to this bug. I have only seen the problem after upgrading to FF45, and this is a very old bug talking about FF8+ - But by description, issues looks very similar)", "attachment_id": null, "tags": [], "creator": "stig@rockland.dk", "text": "I have created a new bug for the issue I see introduced in FF45, https://bugzilla.mozilla.org/show_bug.cgi?id=1267379\nI don't know if the issue I'm describing is related to this bug. I have only seen the problem after upgrading to FF45, and this is a very old bug talking about FF8+ - But by description, issues looks very similar)", "count": 39, "author": "stig@rockland.dk", "id": 11355265, "bug_id": 705826, "creation_time": "2016-04-26T07:31:04Z", "is_private": false}, {"time": "2016-10-24T22:33:50Z", "attachment_id": null, "raw_text": "is anybody actively working on this? \nThe internet is full of websites with images that are hurt by this bug :(", "tags": [], "creator": "vsync.design@gmail.com", "author": "vsync.design@gmail.com", "text": "is anybody actively working on this? \nThe internet is full of websites with images that are hurt by this bug :(", "count": 40, "id": 11810010, "bug_id": 705826, "creation_time": "2016-10-24T22:33:50Z", "is_private": false}, {"creator": "gugurete@gmail.com", "author": "gugurete@gmail.com", "count": 41, "text": "Yes, this issue applies to multiple versions of firefox, and it is quite annoying.\nVery easy to reproduce, just open for instance valamit.com and the flashes are easily visible.\nNo other browser has this behavior (not even IE/Edge :-)", "id": 11984613, "bug_id": 705826, "is_private": false, "creation_time": "2017-01-16T10:37:03Z", "time": "2017-01-16T10:37:03Z", "attachment_id": null, "raw_text": "Yes, this issue applies to multiple versions of firefox, and it is quite annoying.\nVery easy to reproduce, just open for instance valamit.com and the flashes are easily visible.\nNo other browser has this behavior (not even IE/Edge :-)", "tags": []}, {"tags": [], "raw_text": "Any news about it?", "attachment_id": null, "time": "2018-07-06T21:34:30Z", "creation_time": "2018-07-06T21:34:30Z", "is_private": false, "bug_id": 705826, "id": 13454129, "count": 42, "text": "Any news about it?", "author": "kasper93@gmail.com", "creator": "kasper93@gmail.com"}, {"bug_id": 705826, "id": 15439038, "count": 43, "text": "I've found a pretty solid work-around for this, which is to basically create a temporary image with the new image URL, wait until decode is done on that temporary image, and only then replace the `src` of the actual DOM element, like this:\n\n```javascript\nconst imgUrl = 'yournewimage.png'; // your new image\nconst img = new Image(); // create temporary image\nimg.src = imgUrl; // add your new image as src on the temporary image\n\nimg.decode().then(() => { // wait until temporary image is decoded\n    document.querySelector('img').src = imgUrl; // replace your actual element now\n});\n\n```\n\nHowever keep in mind that it made the whole thing lag a lot in Chrome, so I only added this `decode()` thing for Firefox by checking that `navigator.userAgent.toLowerCase().indexOf('firefox') > -1;` would be `true`. \n\nHope this helps someone!", "author": "asko@bien.ee", "raw_text": "I've found a pretty solid work-around for this, which is to basically create a temporary image with the new image URL, wait until decode is done on that temporary image, and only then replace the `src` of the actual DOM element, like this:\n\n```javascript\nconst imgUrl = 'yournewimage.png'; // your new image\nconst img = new Image(); // create temporary image\nimg.src = imgUrl; // add your new image as src on the temporary image\n\nimg.decode().then(() => { // wait until temporary image is decoded\n    document.querySelector('img').src = imgUrl; // replace your actual element now\n});\n\n```\n\nHowever keep in mind that it made the whole thing lag a lot in Chrome, so I only added this `decode()` thing for Firefox by checking that `navigator.userAgent.toLowerCase().indexOf('firefox') > -1;` would be `true`. \n\nHope this helps someone!", "time": "2021-06-07T22:20:34Z", "creation_time": "2021-06-07T22:20:34Z", "is_private": false, "creator": "asko@bien.ee", "tags": [], "attachment_id": null}]}}}