{"comments": {}, "bugs": {"681062": {"comments": [{"id": 5670256, "count": 0, "is_private": false, "tags": [], "bug_id": 681062, "raw_text": "Attached is dlmalloc compiled to JS. Results:\n\nm-c -m -j -p      9.273\njm  -m -j -p -n   4.139\nv8                2.739\n\nTI is much better than current spidermonkey, but still significantly behind v8.\n\nI think this is fairly important since dlmalloc is real-world code, not an artificial microbenchmark. One difference from microbenchmarks is the size of the code. In bug 678939 Jan mentioned that not compiling IFEQX might be a factor in such scripts, and that should be now done on jm but not m-c, which can potentially explain some of the slowness on m-c (but not that jm is still slower than v8).", "creation_time": "2011-08-22T21:22:37Z", "time": "2011-08-22T21:22:37Z", "attachment_id": 554965, "author": "azakai@mozilla.com", "creator": "azakai@mozilla.com", "text": "Created attachment 554965\ndlmalloc benchmark\n\nAttached is dlmalloc compiled to JS. Results:\n\nm-c -m -j -p      9.273\njm  -m -j -p -n   4.139\nv8                2.739\n\nTI is much better than current spidermonkey, but still significantly behind v8.\n\nI think this is fairly important since dlmalloc is real-world code, not an artificial microbenchmark. One difference from microbenchmarks is the size of the code. In bug 678939 Jan mentioned that not compiling IFEQX might be a factor in such scripts, and that should be now done on jm but not m-c, which can potentially explain some of the slowness on m-c (but not that jm is still slower than v8)."}, {"tags": [], "count": 1, "is_private": false, "id": 5670259, "bug_id": 681062, "creation_time": "2011-08-22T21:23:41Z", "raw_text": "Forgot to say, those numbers are with arguments\n\n  400 400", "text": "Forgot to say, those numbers are with arguments\n\n  400 400", "time": "2011-08-22T21:23:41Z", "attachment_id": null, "creator": "azakai@mozilla.com", "author": "azakai@mozilla.com"}]}}}