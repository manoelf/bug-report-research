{"bugs": {"695212": {"comments": [{"bug_id": 695212, "text": "Created attachment 567609\npatch\n\nThe goal in bug 648320 is to eliminate JSObject finalizers by allocating dynamic slots arrays in the GC heap, rather than using malloc. I realized that there is a simpler way to do this. We can have a bitmap that keeps track of which objects have slot arrays. During sweeping, we can avoid calling a finalizer of an object's bit is not set. This patch implements that idea.\n\nIt doesn't give a big speedup, but we do get a little faster on earley-boyer (by about 1.5% in a threadsafe build). Nothing else seems to be affected much. I was hoping to pretty much eliminate the cost of sweeping, but it turns out to be hard to do this. A lot of the cost of sweeping comes from the fact that there are so many arenas we have to iterate over and release--approximately 1 million in earley-boyer. The objshrink work will help here somewhat, but not a huge amount.\n\nOne nice thing about this patch is that it should be a big help on single-core machines where background finalization doesn't help.", "tags": [], "raw_text": "The goal in bug 648320 is to eliminate JSObject finalizers by allocating dynamic slots arrays in the GC heap, rather than using malloc. I realized that there is a simpler way to do this. We can have a bitmap that keeps track of which objects have slot arrays. During sweeping, we can avoid calling a finalizer of an object's bit is not set. This patch implements that idea.\n\nIt doesn't give a big speedup, but we do get a little faster on earley-boyer (by about 1.5% in a threadsafe build). Nothing else seems to be affected much. I was hoping to pretty much eliminate the cost of sweeping, but it turns out to be hard to do this. A lot of the cost of sweeping comes from the fact that there are so many arenas we have to iterate over and release--approximately 1 million in earley-boyer. The objshrink work will help here somewhat, but not a huge amount.\n\nOne nice thing about this patch is that it should be a big help on single-core machines where background finalization doesn't help.", "attachment_id": 567609, "author": "bill.mccloskey@gmail.com", "creation_time": "2011-10-17T22:51:00Z", "time": "2011-10-17T22:51:00Z", "creator": "bill.mccloskey@gmail.com", "id": 5787704, "count": 0, "is_private": false}, {"is_private": false, "id": 5787834, "count": 1, "author": "bill.mccloskey@gmail.com", "creator": "bill.mccloskey@gmail.com", "time": "2011-10-17T23:45:06Z", "creation_time": "2011-10-17T23:45:06Z", "raw_text": "Luke asked about the single-threaded speedup. It's 4.8% on earley-boyer.\n\nAlso, I ran the threaded version more times. I still think it's a speedup, but there's a lot of variability. So please treat the 1.5% number as a rough approximation.\n\nI'd be interested if you could try this patch yourself, Igor. It's useful to test it against bug 693426, since otherwise the patch looks like a bigger speedup than it really is.", "attachment_id": null, "bug_id": 695212, "text": "Luke asked about the single-threaded speedup. It's 4.8% on earley-boyer.\n\nAlso, I ran the threaded version more times. I still think it's a speedup, but there's a lot of variability. So please treat the 1.5% number as a rough approximation.\n\nI'd be interested if you could try this patch yourself, Igor. It's useful to test it against bug 693426, since otherwise the patch looks like a bigger speedup than it really is.", "tags": []}, {"creator": "bill.mccloskey@gmail.com", "time": "2011-10-18T00:05:44Z", "creation_time": "2011-10-18T00:05:44Z", "author": "bill.mccloskey@gmail.com", "bug_id": 695212, "text": "Luke had another idea, which was to see how many chunks appear to be completely free based on the bits. I just did a very simple loop before the sweep phase of every GC:\n    for (GCChunkSet::Enum e(rt->gcChunkSet); !e.empty(); e.popFront()) {\n        Chunk *chunk = e.front();\n        if (chunk->bitmap.noBitsSet() && chunk->finalizerBitmap.noBitsSet())\n            empty++;\n    }\n\nI got 2362 empty chunks and 1862 non-empty chunks during earley-boyer. This overestimates the number of empty chunks, since the finalizer bits are only maintained for JSObjects. However, I don't think this should have too much of an effect, since virtually everything in this benchmark is a JSObject.\n\nThis looks really nice, but it will take some more work to exploit. We would have to segregate JSObject chunks from non-JSObject chunks. Or else we'll have to maintain the finalizer bits for non-JSObject GC things. I'll look into this tomorrow. I'll leave up the current patch, since I don't think it will be invalidated by the new stuff.", "tags": [], "attachment_id": null, "is_private": false, "id": 5787878, "count": 2, "raw_text": "Luke had another idea, which was to see how many chunks appear to be completely free based on the bits. I just did a very simple loop before the sweep phase of every GC:\n    for (GCChunkSet::Enum e(rt->gcChunkSet); !e.empty(); e.popFront()) {\n        Chunk *chunk = e.front();\n        if (chunk->bitmap.noBitsSet() && chunk->finalizerBitmap.noBitsSet())\n            empty++;\n    }\n\nI got 2362 empty chunks and 1862 non-empty chunks during earley-boyer. This overestimates the number of empty chunks, since the finalizer bits are only maintained for JSObjects. However, I don't think this should have too much of an effect, since virtually everything in this benchmark is a JSObject.\n\nThis looks really nice, but it will take some more work to exploit. We would have to segregate JSObject chunks from non-JSObject chunks. Or else we'll have to maintain the finalizer bits for non-JSObject GC things. I'll look into this tomorrow. I'll leave up the current patch, since I don't think it will be invalidated by the new stuff."}, {"tags": [], "bug_id": 695212, "text": "Comment on attachment 567609\npatch\n\nLast night I realized there's a simpler way to implement this. Hopefully a little faster too.", "attachment_id": 567609, "raw_text": "Last night I realized there's a simpler way to implement this. Hopefully a little faster too.", "creation_time": "2011-10-18T17:15:52Z", "time": "2011-10-18T17:15:52Z", "creator": "bill.mccloskey@gmail.com", "author": "bill.mccloskey@gmail.com", "count": 3, "id": 5789474, "is_private": false}]}}, "comments": {}}